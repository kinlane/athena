
[{
	"name": "Access-method-independent exchange with communication request",
	"summary": "",
	"abstract": "The present invention provides a virtual network, sitting u201caboveu201d the physical connectivity and thereby providing the administrative controls necessary to link various communication devices via an Access-Method-Independent Exchange. In this sense, the Access-Method-Independent Exchange can be viewed as providing the logical connectivity required. In accordance with the present invention, connectivity is provided by a series of communication primitives designed to work with each of the specific communication devices in use. As new communication devices are developed, primitives can be added to the Access-Method-Independent Exchange to support these new devices without changing the application source code. A Thread Communication Service is provided, along with a Binding Service to link Communication Points. A Thread Directory Service is available, as well as a Broker Service and a Thread Communication Switching Service. Intraprocess, as well as Interprocess, services are available. Dynamic Configuration Management and a Configurable Application Program Service provide software which can be commoditized, as well as upgraded while in operation.",
	"url": null,
	"owner": "",
	"publication_number": "06922705",
	"publication_date": "2005-07-26",
	"application_number": "09211202",
	"application_date": "1998-12-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application independent write monitoring method for fast backup and synchronization of open files",
	"summary": "",
	"abstract": "An application independent method for monitoring file system requests made by any application program, storing changes made to a first copy of a selected file by the application program into a first file and synchronizing the selected file, whether the file is open or closed, with a second copy of the selected file. The monitoring and storing process is repeated each time a file system request to write into the selected file is made by the application program to track changes made to the selected file. At the time of synchronization, if the selected file is closed, all the changes that are stored in the first file are applied to a second copy of the selected file. If, however, the selected file is open, a portion of the changes are selected pursuant to a predetermined time period and applied to a second copy of the selected file. As a result, both copies of the selected files are identical, thereby synchronizing them. For open files, both copies of the selected file are identical up to the predetermined time period.",
	"url": null,
	"owner": "",
	"publication_number": "06847983",
	"publication_date": "2005-01-25",
	"application_number": "09794093",
	"application_date": "2001-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Browser-to-browser, dom-based, peer-to-peer communication with delta synchronization",
	"summary": "",
	"abstract": "A peer-to-peer communication system for use over an underlying computer network system, the peer-to-peer communication system comprising: a web browser; and a broker interposed between the browser and the underlying computer network system, with the broker being adapted to (1) monitor a first event taking place within the browser, encode the first event and associated changes in a first event message, and push the first event message to the at least one other peer over the underlying computer network system.",
	"url": null,
	"owner": "",
	"publication_number": "06865599",
	"publication_date": "2005-03-08",
	"application_number": "10234229",
	"application_date": "2002-09-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Collection command applicator",
	"summary": "",
	"abstract": "Collection command applicators improve the productivity of human knowledge workers by enabling them to automatically process of large numbers of collections of arbitrary computer files. In operation, collection command applicators dynamically recognize interesting collections, calculate an optimal execution dependency visit order, determine an optimal parallel execution order, and apply arbitrary computer commands to the recognized collections in accordance with the calculated execution orderings. Collection command applicators thereby make it possible to process large numbers of collections in automated, scalable ways that were not previously possible.",
	"url": null,
	"owner": "",
	"publication_number": "06917947",
	"publication_date": "2005-07-12",
	"application_number": "09885081",
	"application_date": "2001-06-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Collection content classifier",
	"summary": "",
	"abstract": "Collection content classifiers classify computer files and other collection content in accordance with predetermined classification specifications. In operation, collection content classifiers dynamically discover collection content members, assign data types to content members, associate symbolic actions with content members, determine processing dependencies among content members, and return organized classification information to calling programs for subsequent use in processing content members. Collection content classifiers thereby improve the productivity of human knowledge workers by enabling the construction of smart, collection-aware application programs that can perform more extensive, more complex, and more automated collection processing operations than were previously possible.",
	"url": null,
	"owner": "",
	"publication_number": "06934694",
	"publication_date": "2005-08-23",
	"application_number": "09885076",
	"application_date": "2001-06-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer system and processing method for driving program of smart peripheral device",
	"summary": "",
	"abstract": "A processing method and a computer system for the driving program of a smart peripheral device. The processing method requests that the computer's operating system return any information regarding any smart peripheral device connected to a peripheral bus through a driving program written according to this invention. If the particular smart peripheral device is supported by the operating system, a plug-and-play notification is used to open a function device object established through a factory-provided driving program. The function device object is used to retrieve a physical device object established through a bus-driving program. Using the physical device object, descriptors and calling data of the smart peripheral device are retrieved and employed to set up necessary information for executing the driving program of this invention.",
	"url": null,
	"owner": "",
	"publication_number": "06915368",
	"publication_date": "2005-07-05",
	"application_number": "09997355",
	"application_date": "2001-11-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer virus avoidance system and mechanism",
	"summary": "",
	"abstract": "Nearly all computer viruses require an action by a computer user to infect and spread. The key is to educate users not to open e-mail attachments that might carry computer viruses. The key is behavior modification, as education is not sufficient. Effective behavior modification must have a means to reinforce the change and to measure how widespread the change is in a population. The invention is used to reinforce and measure the change in user behavior. The invention sends an e-mail with an attachment to e-mail users and creates a list of all users that open the attachment. The user is sent an e-mail with an attachment that looks similar to attachment that contain computer viruses. If the attachment is opened, an e-mail is sent to a specific e-mail address. This e-mail address collects all of the e-mail from users who have not changed behavior and need additional education or management attention.",
	"url": null,
	"owner": "",
	"publication_number": "06954858",
	"publication_date": "2005-10-11",
	"application_number": "09470058",
	"application_date": "1999-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Database load balancing for multi-tier computer systems",
	"summary": "",
	"abstract": "A load balancing method and system for a transaction computer system having multiple database servers for at least one database, wherein database servers cooperate to provide a unified view of the data in the database. The method includes the steps of establishing connections to said multiple database servers for communicating with said database servers; and assigning transactions to respective ones of said multiple database servers to balance respective loads of said multiple database servers. Assigning each new transaction includes the steps of determining possible assignments of that new transaction to one or more of said multiple database servers, each said possible assignment to one of said multiple database servers being based on a load balancing scheme to balance respective loads of said multiple database servers; and assigning that new transaction to one of said multiple database servers as a function of said possible assignments of that new transaction, to balance respective loads of said multiple database servers.",
	"url": null,
	"owner": "",
	"publication_number": "06950848",
	"publication_date": "2005-09-27",
	"application_number": "09565777",
	"application_date": "2000-05-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for online display and negotiation of cargo rates",
	"summary": "",
	"abstract": "Freight forwarders and carriers post published rate and discount information for land, sea and air bearing cargo vessels to allow customers the opportunity to evaluate competitive prices, preferably in one consolidated location (e.g., a web site). A customer navigates to the site to obtain published or discounted rate information offered by a freight forwarder or carrier. The customer may accept a posted rate, in which case the site operator notifies the freight forwarder or carrier. Alternatively, customers, freight forwarders and carriers may negotiate rates for particular lanes of interest using an online interactive auction block.",
	"url": null,
	"owner": "",
	"publication_number": "06920429",
	"publication_date": "2005-07-19",
	"application_number": "09570985",
	"application_date": "2000-05-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "METHOD OF SPECKLE-NOISE PATTERN REDUCTION AND APPARATUS THEREFOR BASED ON REDUCING THE SPATIAL-COHERENCE OF THE PLANAR LASER ILLUMINATION BEAM BEFORE IT ILLUMINATES THE TARGET OBJECT BY APPLYING SPATIAL PHASE MODULATION TECHNIQUES DURING THE TRANSMISSION OF THE PLIB TOWARDS THE TARGET",
	"summary": "",
	"abstract": "A planar laser illumination and imaging (PLIIM) based camera system capable of producing digital images with reduced levels of speckle-pattern noise. The PLIIM based camera system comprises a planar laser illumination array (PLIA) including a plurality of laser diodes for producing and projecting a planar laser illumination beam (PLIB) through said first light transmission aperture, so as to illuminate an object as it is moving past said PLIIM based camera system. An image formation and detection (IFD) module is provided having a image detection array and imaging forming optics for providing said image detection array with a field of view (FOV). The PLIB and FOV are arranged in a coplanar relationship along the working range of the PLIIM based camera system so that the PLIB illuminates primarily within the FOV of the IFD module. A speckle-pattern noise reduction subsystem is integrated with the PLIA, for reducing the spatial-coherence of said planar laser illumination beam (PLIB) before the PLIB illuminates a target object. The speckle-pattern noise reduction subsystem carries out a spatial phase modulation technique during the transmission of the PLIB towards the target, so that the object is illuminated with a spatially coherent-reduced planar laser illumination beam (PLIB) and numerous substantially different time-varying speckle-noise patterns are produced at the image detection array over the photo-integration time period thereof. The numerous substantially different time-varying speckle-noise patterns are detected at the image detection array over the photo-integration time period, and the detected speckle-noise patterns are temporally averaged at said image detection array during the photo-integration time period thereof. As a result of such temporal averaging, the RMS power of observable speckle-noise patterns is reduced at the image detection array. By virtue of the present invention, it is now possible to enjoy the benefits of laser-based illumination during high-speed imaging operations, without the adverse effects of speckle-pattern noise.",
	"url": null,
	"owner": "",
	"publication_number": "06863216",
	"publication_date": "2005-03-08",
	"application_number": "10136612",
	"application_date": "2002-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Model train control system",
	"summary": "",
	"abstract": "A system which operates a digitally controlled model railroad transmitting a first command from a first client program to a resident external controlling interface through a first communications transport. A second command is transmitted from a second client program to the resident external controlling interface through a second communications transport. The first command and the second command are received by the resident external controlling interface which queues the first and second commands. The resident external controlling interface sends third and fourth commands representative of the first and second commands, respectively, to a digital command station for execution on the digitally controlled model railroad.",
	"url": null,
	"owner": "",
	"publication_number": "06909945",
	"publication_date": "2005-06-21",
	"application_number": "10713476",
	"application_date": "2003-11-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Model train control system",
	"summary": "",
	"abstract": "A system which operates a digitally controlled model railroad transmitting a first command from a first client program to a resident external controlling interface through a first communications transport. A second command is transmitted from a second client program to the resident external controlling interface through a second communications transport. The first command and the second command are received by the resident external controlling interface which queues the first and second commands. The resident external controlling interface sends third and fourth commands representative of the first and second commands, respectively, to a digital command station for execution on the digitally controlled model railroad.",
	"url": null,
	"owner": "",
	"publication_number": "06877699",
	"publication_date": "2005-04-12",
	"application_number": "10705416",
	"application_date": "2003-11-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multi-site network monitor for measuring performance over an internet",
	"summary": "",
	"abstract": "An apparatus and method of measuring the performance of a computer network by determining transit times of packets between two selected sites connected by the computer network and the public switched telephone network and deriving from those transit times a measure of the performance of the computer network. Software establishes a network connection and a circuit switched connection between the two selected sites. A pair of messages is sent, at the same or nearly the same time, over the network connection and the circuit-switched connection and the transit time for a one way trip over the network connection is derived from the trips over the network and circuit-switched connections. This furnishes a measurement from which performance statistics of the computer network can be derived.",
	"url": null,
	"owner": "",
	"publication_number": "06976069",
	"publication_date": "2005-12-13",
	"application_number": "09488977",
	"application_date": "2000-01-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network-based remote data storage system having multiple access interfaces",
	"summary": "",
	"abstract": "A data storage system is described that provides seamless access to remote data storage areas via a global computer network. The data storage system includes one or more storage servers coupled to one or more storage devices. The storage devices provide a plurality of virtual storage areas, where each virtual storage area is assigned to a user. Access to the virtual storage areas is fully integrated with an operating system executing on a client computer such that the user, or software applications executing on the client computer, can seamlessly access the corresponding virtual storage area using standard file management routines provided by the operating system. In addition, the invention provides a wide range of other remote access methods to the virtual data storage areas.",
	"url": null,
	"owner": "",
	"publication_number": "06952724",
	"publication_date": "2005-10-04",
	"application_number": "10797757",
	"application_date": "2004-03-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Realtime computer assisted leak detection/location reporting and inventory loss monitoring system of pipeline network systems",
	"summary": "",
	"abstract": "There is provided a method for detecting and locating leaks in a pipeline network in real-time. A flow model is provided that characterizes flow behavior for at least one of steady and unsteady states respectively corresponding to an absence and a presence of model leaks in the pipeline network, the flow model including a leaking factor k. A deterministic model is provided to evaluate at least one of a leak status and a no leak status relating to the pipeline network using deterministic criteria. The deterministic criteria is based on a Liapunov Stability Theory. A deviation matrix is constructed based on the flow model and the deterministic model to generate eigenvalues. A leak alarm is generated when at least one of the eigenvalues is less than a predetermined value.",
	"url": null,
	"owner": "",
	"publication_number": "06970808",
	"publication_date": "2005-11-29",
	"application_number": "10834804",
	"application_date": "2004-04-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for converting an XML data structure into a relational database",
	"summary": "",
	"abstract": "The present invention provides systems and methods for converting between an XML data structure and a relational database. It enables the storage of an XML document in such a way that: the relational data model would not have to change as the document model changes; the structure of the tables is set up in such a way that the entire document can be retrieved with a single query in a linear (i.e. non-recursive) fashion; and, information about specific individual components within an XML document can be retrieved via simple queries that do not require hierarchy traversals or intensive, post-query data parsing.",
	"url": null,
	"owner": "",
	"publication_number": "06915304",
	"publication_date": "2005-07-05",
	"application_number": "09863794",
	"application_date": "2001-05-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for preventing unauthorized access to electronic data",
	"summary": "",
	"abstract": "A system and method are provided for preventing unauthorized access to electronic data stored on an electronic device. A portable licensing medium is configured to communicate with the electronic device for storing license data. The license data is used to determine whether to allow access to the electronic data. A registration authority communicates with the electronic device. The registration authority has a database of verification data for verifying the license data stored on the licensing medium and provides updated license data to the licensing medium.",
	"url": null,
	"owner": "",
	"publication_number": "06857067",
	"publication_date": "2005-02-15",
	"application_number": "09792045",
	"application_date": "2001-02-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing look ahead socket generation",
	"summary": "",
	"abstract": "A system and method for providing look ahead socket generation is disclosed. Generally, when a client application requests communication with a server application, protocol associated with the client application requests an open connected socket from a socket pool. The protocol receives the open connected socket and assigns the socket to the client application to provide communication between the client application and the server application. The socket pool is replenished after reception of the socket to ensure that a predefined number of open connected sockets is maintained within the socket pool. Established communication between the client application and the server application is then maintained by the protocol.",
	"url": null,
	"owner": "",
	"publication_number": "06859836",
	"publication_date": "2005-02-22",
	"application_number": "09819945",
	"application_date": "2001-03-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for verification of identity",
	"summary": "",
	"abstract": "A system and method for the identification and verification of a user is provided. The disclosed invention has an enrollment system which includes (i) an alphanumeric input device; (ii) a biometric input device; (iii) a header file database having a plurality of identities; (iv) a search engine in communication with the header file database that searches the database for identifies that match alphanumeric data input by a user according to a predetermined first set of criteria; (v) a processor to score the set of identities matched by the search engine according to a predetermined second set of criteria, and determine that the user's input alphanumeric data based on the score is not suspicious; and (vi) an identity escrow database which receives an approved identity data signal based on the acceptability of the score, and is capable of receiving a biometric identity data signal input by the user to the biometric input device, the escrow database further capable of creating at least one subfile within the escrow database for each user comprising the approved identity data signal and the biometric data signal.",
	"url": null,
	"owner": "",
	"publication_number": "06871287",
	"publication_date": "2005-03-22",
	"application_number": "09489111",
	"application_date": "2000-01-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for configuration programming",
	"summary": "",
	"abstract": "In a development platform, a classifier for a given application defines a data model of an application model as a pattern (an object model) from a finite number of patterns (object models) that represent the possible permutations of data models. In addition, the development platform has a finite number of service objects that perform various functions/services on the object model from which the application model adopts one or more service objects. The object models and the service objects are generic to the development platform and usually a set of finite number of object models and a set of finite number of service objects can interface the application model with the various third party resources and tools.",
	"url": null,
	"owner": "",
	"publication_number": "06925632",
	"publication_date": "2005-08-02",
	"application_number": "10003737",
	"application_date": "2001-11-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for intellectual property reuse in integrated circuit design",
	"summary": "",
	"abstract": "The invention provides a knowledge management system particularly suited for use in the integrated circuit design environment. The system allows administrators to define standardized component types. Instantiated components versions comprise u201cdeliverablesu201d and u201cattributes.u201d Deliverables comprise a file or directory of files or groups of files or directories that perform a common function and are characterized by the system in a standardized manner. Attributes comprise metadata describe the component version. By the abstraction of design files into deliverables, the systems can work with design files originating from any source and having different structures and still make those design files available by other designers in a uniform manner for efficient reuse of pre-qualified components. Tasks in the design flow can be tracked in the system. The system may also include a communications application, an issue tracking application, and an audit trail application.",
	"url": null,
	"owner": "",
	"publication_number": "06961918",
	"publication_date": "2005-11-01",
	"application_number": "09888332",
	"application_date": "2001-06-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and apparatus to allow communication between CICS and non-CICS software applications",
	"summary": "",
	"abstract": "A system, method and apparatus to facilitate the invocation of existing CICS BMS transactions and deliver the executed transaction output to a requesting application as a standardized XML document. Building upon a facility which intercepts the flow of control between a user transaction and BMS, the instant invention replaces the use of terminal-oriented data streams with XML documents. In doing so, the instant invention eliminates the use of prior art techniques, such as u201cscreen scrapingu201d.",
	"url": null,
	"owner": "",
	"publication_number": "06981257",
	"publication_date": "2005-12-27",
	"application_number": "10051247",
	"application_date": "2002-01-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Thermal signature intensity alarmer",
	"summary": "",
	"abstract": "A system for processing thermal signature data is provided. The system provides a thermal signature data processor that analyzes one or more pixels to determine whether an aspect of an alarm-worthy event has occurred. In one example, the system additionally analyzes visual data in relation to the thermal signature data to determine whether an alarm-worthy event (e.g., intrusion) has occurred.",
	"url": null,
	"owner": "",
	"publication_number": "06900729",
	"publication_date": "2005-05-31",
	"application_number": "10390225",
	"application_date": "2003-03-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Uniform network access",
	"summary": "",
	"abstract": "According to some embodiments, a registry is displayed. The registry may, for example, indicate resources available from a plurality of remote network access devices via a communications network. Moreover, a personal network address may be associated with each available resource, the personal network address including an destination address portion and an application program identifier portion. A direct communications link may then be established between a first network access device hosting an available resource and a second network address device using the personal network address associated with the resource.",
	"url": null,
	"owner": "",
	"publication_number": "06961748",
	"publication_date": "2005-11-01",
	"application_number": "10361920",
	"application_date": "2003-02-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and architecture for a dynamically extensible web-based management solution",
	"summary": "",
	"abstract": "A framework for extending a network management platform, including an object manager that retrieves an entire class hierarchy including any code or other functionality needed to retrieve data about a server or other network device (e.g., code needed to retrieve actual instances of an object of the class). The object manager holds the object hierarchy and initiates retrieval of actual instances of the object. The class hierarchies are maintained in plug-in type Object Providers. Newly developed network technologies are managed via managed objects defined by class hierarchies held by the Object providers. The Object Provider can be seamlessly installed in an existing extensible network management platform.",
	"url": null,
	"owner": "3Com Corporation",
	"publication_number": "06965932",
	"publication_date": "2005-11-15",
	"application_number": "09838488",
	"application_date": "2001-04-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for distributing a single multicast multi-program audio stream over a network",
	"summary": "",
	"abstract": "A system and method for distributing multi-program audio over a network includes the use of a Local Area Network, Wide Area Network, an Intranet and the Internet. The system includes a network audio source, a network distribution system and end devices. The method, for distributing multi-program audio over a network includes creating a network audio frame from a plurality of blocks of data from at least one audio program, placing each network audio frame within a transport structure for transport across the network and assigning an address to the transport structure prior to delivering the transport structure to a physical media.",
	"url": null,
	"owner": "3Com Corporation",
	"publication_number": "06970940",
	"publication_date": "2005-11-29",
	"application_number": "09809822",
	"application_date": "2001-03-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Online shopping with virtual modeling and peer review",
	"summary": "",
	"abstract": "When a user browses an online retailer's Web site or a mirror site, the user can select an item and model the item online by having a server generate a digital image of the user wearing the item. If the user is still unsure as to whether to buy the item, the user can enter an online chat room in which the online modeling image is displayed to other users. The user can then receive the other users' feedback before deciding whether to buy the item. In a second embodiment, multiple online modeling images are generated to provide the user with a customized catalog, which can be of items for a single merchant or multiple merchants.",
	"url": null,
	"owner": "4-D Networks, Inc.",
	"publication_number": "06901379",
	"publication_date": "2005-05-31",
	"application_number": "09610678",
	"application_date": "2000-07-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Digital signature service",
	"summary": "",
	"abstract": "A digital signature service generates digital signatures for documents independent of the program used to transmit the documents. The digital signature service may operate as a Web server application, or as a client application on a user's computer. The digital signature service imports a certificate specific to a user. To digitally sign a document, the user identifies a document, and the digital signature service generates a single signature file that includes the user's certificate, the document, and the digital signature. With the signature file, the user may now store and/or transmit the file using any program while maintaining the integrity and authenticity capabilities associated with digital signatures. The digital signature service also permits multiple digital signatories to a single document. A secure document repository, implemented on a Web Site, is also disclosed.",
	"url": null,
	"owner": "Accela, Inc.",
	"publication_number": "06959382",
	"publication_date": "2005-10-25",
	"application_number": "09375475",
	"application_date": "1999-08-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Advanced information gathering for targeted activities",
	"summary": "",
	"abstract": "An agent based system assists in preparing an individual for an upcoming meeting by helping him/her retrieve relevant information about the meeting from various sources based on preexisting information in the system. The system obtains input text in character form indicative of the target meeting from a calendar program that includes the time of the meeting. As the time of the meeting approaches, the calendar program is queried to obtain the text of the target event and that information is utilized as input to the agent system. Then, the agent system parses the input meeting text to extract its various components such as title, body, participants, location, time etc. The system also performs pattern matching to identify particular meeting fields in a meeting text. This information is utilized to query various sources of information on the web and obtain relevant stories about the current meeting to send back to the calendaring system. For example, if an individual has a meeting with Netscape and Microsoft to talk about their disputes, the system obtains this initial information from the calendaring system. It will then parse out the text to realize that the companies in the meeting are u201cNetscapeu201d and u201cMicrosoftu201d and the topic is u201cdisputesu201d. It will then surf the web for relevant information concerning the topic. Thus, in accordance with an objective of the invention, the system updates the calendaring system and eventually the user with the best information it can gather to prepare for the target meeting. In accordance with a preferred embodiment, the information is stored in a file that is obtained via selection from a link imbedded in the calendar system.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "06845370",
	"publication_date": "2005-01-18",
	"application_number": "09195875",
	"application_date": "1998-11-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Employee analysis based on results of an education business simulation",
	"summary": "",
	"abstract": "Analyzing employees based on results of an education business simulation. A network is utilized to present a training simulation to a user for achieving a training goal. Information is integrated into the training simulated utilizing the network that helps motivate achievement of the goal by the user. Progress of the user towards achieving the goal is measured utilizing the network. For further motivating achievement of the goal, feedback is also provided to the user utilizing the network. There are three levels of feedback, where each is progressively more detailed and is selected based on the number of mistakes made by the user, the user's progress towards the goal is subsequently reported to the employer of the user utilizing the network.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "06944596",
	"publication_date": "2005-09-13",
	"application_number": "09511340",
	"application_date": "2000-02-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Knowledge model-based indexing of information",
	"summary": "",
	"abstract": "A system, method and article of manufacture are provided for a knowledgebase framework. Information is obtained from at least one source utilizing a network. Utilizing a knowledge model, an index is generated for the obtained information. The generated index includes a plurality of items each associated with at least some of the obtained information. Utilizing the network, the generated index is displayed to a user. The user is permitted to select an least one of the items of the index. The information associated with the selected item is then displayed to the user utilizing the network.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "06957205",
	"publication_date": "2005-10-18",
	"application_number": "09520578",
	"application_date": "2000-03-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Language-driven interface for an automated testing framework",
	"summary": "",
	"abstract": "To test the functionality of a computer system, automated testing may use an automation testing tool that emulates user interactions. A database may store words each having a colloquial meaning that is understood by a general population. For each of these words, the database may store associated computer instructions that can be executed to cause a computer to perform the function that is related to the meaning of the word. During testing, a word may be received having a colloquial meaning that is understood by a general population. The database may be queried for the received word and the set of computer instructions may be returned by the database. The automated testing tool may then perform the function returned to the colloquial meaning of the word. The words stored in the database may be in English or another language.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "06907546",
	"publication_date": "2005-06-14",
	"application_number": "09536879",
	"application_date": "2000-03-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Management interface between a core telecommunication system and a local service provider",
	"summary": "",
	"abstract": "A system, method and article of manufacture are provided for interfacing with a core telecommunication system and a local service provider. First, a core telecommunication system is interfaced for handling core telecommunication system requests and responses received from the core telecommunication system and translated to a predetermined protocol. Similarly, a local service provider is interfaced for handling local service provider requests and responses received from the local service provider. The local service provider requests and responses are also translated to the predetermined protocol. In use, the core telecommunication system requests and responses are communicated with the local service provider and the local service provider requests and responses are communicated with the core telecommunication system for management purposes.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "06961778",
	"publication_date": "2005-11-01",
	"application_number": "10194346",
	"application_date": "2002-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for an application provider framework",
	"summary": "",
	"abstract": "A system and method are provided for improving an existing application infrastructure of an application service provider. First, a user is prompted to identify at least one aspect of an existing application infrastructure of an application service provider utilizing a network. Next, the identification of the aspect of the existing application infrastructure is received utilizing the network, and the aspect is translated into a common structure such that the structure is stored in a knowledge base. Such common structure is subsequently analyzed using a spreadsheet stored in a database, and the spreadsheet includes predefined rules that are used to identify upgrades to the existing applications infrastructure. Further, upgrades the existing application infrastructure are suggested and displayed based on the analysis utilizing the network.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "06904449",
	"publication_date": "2005-06-07",
	"application_number": "09483062",
	"application_date": "2000-01-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for generating charts in a knowledge management tool",
	"summary": "",
	"abstract": "A system, method and article of manufacture are provided for generating a chart. A request for information is received from a user. A search for data relating to the request for information is performed in at least two geographically separated information repositories of an enterprise. The results of the search are presented to the user. The user is allowed to select a search result from the results of the search. A search result that is selected by the user is recognized. A chart that illustrates information related to the search result selected by the user is generated and displayed.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "06900807",
	"publication_date": "2005-05-31",
	"application_number": "09521471",
	"application_date": "2000-03-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System method and article of manufacture for building, managing, and supporting various components of a system",
	"summary": "",
	"abstract": "A system, method and article of manufacture are provided for identifying various components of a system for building, management, and support purposes. A pictorial representation of an existing system is first displayed along with a plurality of components thereof. Next, information is presented relating to building, managing, and supporting the components of the existing system by indicia coding the components on the pictorial representation. The building, management, and support information relates more specifically to deliverable features of the components of the existing system that are available in a business offering.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "06957186",
	"publication_date": "2005-10-18",
	"application_number": "09320921",
	"application_date": "1999-05-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and article of manufacture for a user programmable diary interface link",
	"summary": "",
	"abstract": "A system, method and article of manufacture are provided for integrating a personalizable diary with an information page having a link to the diary. The information page is first displayed. Upon selection of the link to the diary by a user, the diary is displayed. User input for adding entries in the diary is received and selection of the entries for display on the information page is also allowed.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "06892196",
	"publication_date": "2005-05-10",
	"application_number": "09469400",
	"application_date": "1999-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "User context component in environment services patterns",
	"summary": "",
	"abstract": "A system and method are provided for maintaining a security profile throughout nested service invocations on a distributed component-based system. Interconnections are provided between distributed components each having nested service invocations. A user context instance is created upon successful identification of the user. A request is received from the user to invoke a first service on a first component, wherein the first component invokes a second service of a second component, and wherein completion of the second service is necessary to complete the first service. The user context is queried for a unique user identifier. The unique user identifier is compared with an access control list for verifying that the user has access to the first component. The unique user identifier is also compared with an access control list for verifying that the user has access to the second service of the second component.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "06954220",
	"publication_date": "2005-10-11",
	"application_number": "09386989",
	"application_date": "1999-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Goal based educational system with support for dynamic characteristic tuning",
	"summary": "",
	"abstract": "A system is disclosed that provides a goal based learning system utilizing a rule based expert training system to provide a cognitive educational experience. The system provides the user with a simulated environment that presents a business opportunity to understand and solve optimally. Mistakes are noted and remedial educational material presented dynamically to build the necessary skills that a user requires for success in the business endeavor. The system utilizes an artificial intelligence engine driving individualized and dynamic feedback with synchronized video and graphics used to simulate real-world environment and interactions. Multiple u201ccorrectu201d answers are integrated into the learning system to allow individualized learning experiences in which navigation through the system is at a pace controlled by the learner. A robust business model provides support for realistic activities and allows a student to experience real world consequences for their actions and decisions and entails realtime decision-making and synthesis of the educational material optimized to the characteristics of the student.",
	"url": null,
	"owner": "Accenture, LLP",
	"publication_number": "06947914",
	"publication_date": "2005-09-20",
	"application_number": "10852551",
	"application_date": "2004-05-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Goal based system utilizing an activity table",
	"summary": "",
	"abstract": "A system is disclosed that provides a goal based learning system utilizing a rule based expert training system to provide a cognitive educational experience. The system provides the user with a simulated environment that presents a business opportunity to understand and solve optimally. Mistakes are noted and remedial educational material presented dynamically to build the necessary skills that a user requires for success in the business endeavor. The system uses an artificial intelligence engine driving individualized and dynamic feedback with synchronized video and graphics used to simulate real-world environment and interactions. Multiple u201ccorrectu201d answers are integrated into the learning system to allow individualized learning experiences in which navigation through the system is at a pace controlled by the learner. A robust business model provides support for realistic activities and allows a user to experience real-world consequences for their actions and decisions and entails realtime decision-making and synthesis of the educational material. The system is architected around a linked list activity table utilized to manage and control the system.",
	"url": null,
	"owner": "Accenture, LLP",
	"publication_number": "06970858",
	"publication_date": "2005-11-29",
	"application_number": "09868682",
	"application_date": "1999-02-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for establishing and controlling an on-demand teleconference by a remote computer",
	"summary": "",
	"abstract": "A teleconference system and method is disclosed comprising, a teleconference bridge having a plurality of ports for establishing a teleconference between two or more attendees. A maintenance and administration terminal is connected to said bridge, for generating one or more transaction records in response to a change in the status of any port on said teleconference bridge. A first server is connected to said maintenance and administration terminal, for receiving the one or more transaction records generated by said maintenance and administrative terminal and storing the one or more transaction records in a first database. A second server is connected to said first server having an interface operable to send the one or more transaction records stored in said first database, to a remote computer.",
	"url": null,
	"owner": "ACT Teleconferencing, Inc.",
	"publication_number": "06967672",
	"publication_date": "2005-11-22",
	"application_number": "10121409",
	"application_date": "2002-04-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integrated fiber, sensor and lens arrays for optical networks",
	"summary": "",
	"abstract": "Fiber, lens and sensor arrays and their precision alignment for optical devices with free space light propagation is disclosed Fabrication methods of arrays and their assembly are also proposed. In one implementation, a device includes a fiber alignment module holding fibers in parallel to form a fiber array. The fiber alignment module includes first and second alignment plates, and a spacer plate engaged between the first and the second alignment plates. Each alignment plate includes an array of through holes to respectively hold the fibers. A lens array can be engaged to the fiber alignment module to align lenses to their corresponding fibers. Passive alignment features may be formed at interfacing surfaces of different layers to assist the alignment. Applications of these integrated fiber, lens and sensor arrays to optical cross connect switches and reconfigurable add drop multiplexers are also disclosed.",
	"url": null,
	"owner": "Active Optical Networks, Inc.",
	"publication_number": "06950570",
	"publication_date": "2005-09-27",
	"application_number": "10384150",
	"application_date": "2003-03-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Micro-opto-electro-mechanical switching system",
	"summary": "",
	"abstract": "An embodiment of the invention comprises an optical element capable of motion in at least one degree of freedom wherein the motion in at least one degree of freedom is enabled by serpentine hinges configured to enable the optical element to move in at least one degree of freedom. The embodiment further includes driving elements configured to deflect the optical element in said at least one degree of freedom to controllably induce deflection in the optical element and a damping element to reduce magnitude of resonances. Another embodiment includes a MEMS optical apparatus comprising an optical element capable of motion in two degrees of freedom. The two degrees of freedom are enabled by two pairs of serpentine hinges. A first pair of serpentine hinges is configured to enable the optical element to move in one degree of freedom and a second pair of serpentine hinges is configured to enable the optical element to move in a second degree of freedom. The apparatus further includes driving elements configured to deflect the optical element in said two degrees of freedom and a damping element to reduce magnitude of resonances. The invention includes method embodiments for forming arrays of MEMS optical elements including reflector arrays.",
	"url": null,
	"owner": "Active Optical Networks, Inc.",
	"publication_number": "06963679",
	"publication_date": "2005-11-08",
	"application_number": "10035829",
	"application_date": "2001-10-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic data recovery",
	"summary": "",
	"abstract": "A system and method for dynamic data recovery is described. The system and method for dynamic data recovery operates on a computer storage system that includes a plurality of disk drives for storing parity groups. Each parity group includes storage blocks. Each of the storage blocks is stored on a separate disk drive such that no two storage blocks from a given parity set reside on the same disk drive. The computer storage system further includes a recovery module to dynamically recover data that is lost when at least a portion of one disk drive in the plurality of disk drives becomes unavailable. The recovery module is configured to produce a reconstructed block by using information in the remaining storage blocks of a parity set that corresponds to an unavailable storage block. The recovery module is further configured to split the parity group corresponding to an unavailable storage block into two parity groups if the parity group corresponding to the unavailable storage block spanned all of the drives in the plurality of disk drives.",
	"url": null,
	"owner": "Adaptec, Inc.",
	"publication_number": "06871295",
	"publication_date": "2005-03-22",
	"application_number": "10060686",
	"application_date": "2002-01-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic redistribution of parity groups",
	"summary": "",
	"abstract": "A system and method for dynamic redistribution of parity groups is described. The system and method for dynamic redistribution of parity groups operates on a computer storage system that includes a plurality of disk drives for storing parity groups. Each parity group includes storage blocks. The storage blocks include one or more data blocks and a parity block that is associated with the data blocks. Each of the storage blocks is stored on a separate disk drive such that no two storage blocks from a given parity set reside on the same disk drive. The computer system further includes a redistribution module to dynamically redistribute parity groups by combining some parity groups to improve storage efficiency.",
	"url": null,
	"owner": "Adaptec, Inc.",
	"publication_number": "06862692",
	"publication_date": "2005-03-01",
	"application_number": "10060874",
	"application_date": "2002-01-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for creating an adaptive application",
	"summary": "",
	"abstract": "An Adaptive Software Application consists of several types of modules, called Adaptive Units, which are highly parameterized such that they can adapt to varying business requirements by virtue of externally provided parameters. An Adaptive Application is assembled through repeated use of various combinations of different types of Adaptive Units. Large and complex business systems can be rapidly implemented through this approach. An Adaptive Unit includes interface components that can present information to and accept information from the outside world (such as a web page or a system interface), processing logic components that can manipulate and evaluate information based on received parameters received (such as comparisons and decisions including data dependency decisions), and data persistence logic components that retrieves, adds, updates, and deletes data targeting one or more Occurrence Databases. All three components of an Adaptive Unit are parameter driven. These parameters are not specific to any particular business.",
	"url": null,
	"owner": "Adaptik Corporation",
	"publication_number": "06895409",
	"publication_date": "2005-05-17",
	"application_number": "10173145",
	"application_date": "2002-06-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Cryptographic randomness register for computer system security",
	"summary": "",
	"abstract": "A random number generator and method thereto using an entropy register. The method includes providing a first plurality of bit entries in an entropy register and transmitting a bit value from each of a plurality of registers to one of the first plurality of bit entries in the entropy register. The random number generator comprises an entropy register configured to receive bits over a plurality of data lines that each couple to an individual entry in the entropy register. The random number generator may further include an entropy control unit configured to provide a value from the entropy register in response to a request for a random number.",
	"url": null,
	"owner": "Advanced Micro Devices, Inc.",
	"publication_number": "06968460",
	"publication_date": "2005-11-22",
	"application_number": "09854040",
	"application_date": "2001-05-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interruptable and re-enterable system management mode programming code",
	"summary": "",
	"abstract": "Interruptable and re-enterable system management mode (SMM) programming code. The code includes one or more instructions, an entry or exit location, and one or more instructions. The code is executable while the personal computer system is in SMM.",
	"url": null,
	"owner": "Advanced Micro Devices, Inc.",
	"publication_number": "06862641",
	"publication_date": "2005-03-01",
	"application_number": "09853234",
	"application_date": "2001-05-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and software for data collection and process control in semiconductor manufacturing and method thereof",
	"summary": "",
	"abstract": "In its various embodiments, the method collects data from process and metrology tools in a semiconductor manufacturing environment, generates statistics from that data, detects tool failures, processing errors, and other conditions that can jeopardize product output, and performs high level process control in the form of tool shutdowns, lot holds, and lot releases. One method as disclosed automates the collection and recording of data from process and metrology tools, automates configuration of data collection, and automates process equipment shut downs, all within the existing framework of existing MES systems and engineering data collection systems. Automation of configurations and data collection is conducted by creation of data collection plans, data collection capability specifications, and other versioned documents within a process control and data collection system as disclosed herein. These versioned documents may be generated through a common graphical user interface and presented via an Internet web browser or other network interface.",
	"url": null,
	"owner": "Advanced Micro Devices, Inc.",
	"publication_number": "06970758",
	"publication_date": "2005-11-29",
	"application_number": "09905220",
	"application_date": "2001-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and software for database structure in semiconductor manufacturing and method thereof",
	"summary": "",
	"abstract": "The functionality of various process control and data collection system embodiments may be improved by employing the database methodology disclosed herein during the requirements-analysis phase for data collection and process control in a semiconductor manufacturing environment. The relational database storage technology as disclosed herein consists of a set of interconnected tables, where each table has a field or an amalgamation of fields (primary key) that uniquely identifies each record (tuple) in the table. In addition, the method as disclosed herein utilizes foreign keys, which represent the value of a primary key for a related table. Aggregation levels are also employed in the method as disclosed herein to associate data from various production",
	"url": null,
	"owner": "Advanced Micro Devices, Inc.",
	"publication_number": "06839713",
	"publication_date": "2005-01-04",
	"application_number": "09905213",
	"application_date": "2001-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and accompanying methods for providing, through a centralized server site, an integrated virtual office environment, remotely accessible via a network-connected web browser, with remote network monitoring and management capabilities",
	"summary": "",
	"abstract": "Apparatus and accompanying methods for use therein for implementing an integrated, virtual office user environment, through an office server(s), through which a remotely stationed user can access typical office network-based applications, including e-mail, file sharing and hosted thin-client programs, through a remotely located network, e.g., WAN, connected web browser. Specifically, a front end, namely a service enablement platform (SEP), to one or more office servers on a LAN is connected to both the WAN and LAN and acts both as a bridge between the user and his(her) office applications and as a protocol translator to enable bi-directional, web-based, real-time communication to occur between the browser and each such application. During initial operation, the SEP, operating under a default profile, establishes, over an analog connection to the WAN, a management session with the site to obtain customer WAN access information, then tears down the analog connection and establishes a broadband WAN connection through which the SEP re-establishes its prior session and obtains a client certificate and its customized profile. The SEP then re-initializes itself to that particular profile.",
	"url": null,
	"owner": "AEP Networks, Inc.",
	"publication_number": "06981041",
	"publication_date": "2005-12-27",
	"application_number": "09835075",
	"application_date": "2001-04-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic test system and method",
	"summary": "",
	"abstract": "An electronic test system having an object oriented hierarchical infrastructure including classes that allow a test developer or a test user to design a desired electronic test system. The class relationships define the function of the electronic test system. Classes include a procedure class, a test class, a measurement class, a datapoint class, a parameter class, a DUT class, a test system class, a specification class, a run procedure class, a result class, a plug-in class, an exec class, a model class, a device class, a test system device class, a user menu item class, an application class, and a state class. These classes are implemented in a hierarchical structure in which a datapoint is a subset of a measurement, a measurement is a configuration for a test, a test is a group of measurements that share the same test algorithm, and a procedure is an ordered list of tests to be run, and includes a list of measurements and datapoints.",
	"url": null,
	"owner": "Agilent Technologies, Inc.",
	"publication_number": "06839650",
	"publication_date": "2005-01-04",
	"application_number": "09992224",
	"application_date": "2001-11-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multi-layer software architecture for hardware control",
	"summary": "",
	"abstract": "A software system having a multi-layer architecture for controlling a hardware system including a latch layer, a hardware control layer, an access layer, and an orchestration layer. The latch layer includes a latch object for each of a set of control points of the hardware system. Each latch object provides a common interface in the software system for accessing the corresponding control point. The hardware control layer includes a hardware control object for each of a set of sub-portions of the hardware system. Each hardware control object coordinates accesses to the control points of the corresponding sub-portion through the latch layer. The access layer includes an access object for each of a set of groupings of the sub-portions. Each access object coordinates accesses to the corresponding grouping of the sub-portions. The orchestration layer includes an orchestration object for each of a set of functional features of the hardware system. Each orchestration object provides a common interface in the software system for accessing a corresponding grouping of the access objects which are associated with the corresponding functional feature.",
	"url": null,
	"owner": "Agilent Technologies, Inc.",
	"publication_number": "06968555",
	"publication_date": "2005-11-22",
	"application_number": "09825654",
	"application_date": "2001-04-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Ramp sweep synthesis control",
	"summary": "",
	"abstract": "A signal generator produces a signal. The signal generator includes signal hardware that physically produces the signal and signal software that is used to control signal hardware. The signal software includes a higher level object and a plurality of lower level objects. The higher level object processes an instruction from a user to produce the signal such that the signal sweeps through a plurality of frequencies. The plurality of lower level objects serve as an interface between the higher level object and the signal hardware. At least one of the lower level objects communicates with the signal hardware and at least one of the lower objects communicates with the higher level object.",
	"url": null,
	"owner": "Agilent Technologies, Inc.",
	"publication_number": "06859750",
	"publication_date": "2005-02-22",
	"application_number": "10366429",
	"application_date": "2003-02-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automated pathway recognition system",
	"summary": "",
	"abstract": "There is a pressing need for computer-implemented tools that can summarize and present the enormous amounts of public literature to facilitate analysis of gene expression data. The present invention provides techniques and systems for efficiently integrating public literature regarding gene function with data from gene expression profiling experiments. Information from literature databases relating to a particular set of DNA sequences of known expression pattern is retrieved, processed, cross-referenced and viewed to provide further information about a particular DNA sequence to facilitate its identification as a candidate gene.",
	"url": null,
	"owner": "AGY Therapeutics, Inc.",
	"publication_number": "06876930",
	"publication_date": "2005-04-05",
	"application_number": "10090698",
	"application_date": "2002-03-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for remote installation of an operating system over a network connection",
	"summary": "",
	"abstract": "A method for remote installation of a target operating system is carried out on a machine operating a source operating system. In one embodiment, it is presumed that the source operating system was booted from a first bootable region of a storage associated with the machine. According to the method, a copy of the source operating system together with the target operating system are delivered to the machine and stored in a second bootable region of the storage. The copy of the source operating system may be stored in a first partition of the second bootable region of the storage, and the target operating system may be stored in a second partition of the second bootable region. A boot loader is then configured to boot the copy of the source operating system from the second bootable region of the storage. The machine is then re-booted. At this point, the machine is still running the source operating system, although in this case that operating system was booted from the second bootable region of the storage. The original source operating system (from the first bootable region) is then removed, and the boot loader is re-configured to boot the target operating system from the second bootable region of the storage. The machine is then re-booted again, after which the target operating system is operational. In one embodiment, the first and second bootable regions may be separate hard disks, and the source and target operating systems are Linux and Windows, or vice versa.",
	"url": null,
	"owner": "Akamai Technologies, Inc.",
	"publication_number": "06963981",
	"publication_date": "2005-11-08",
	"application_number": "10059729",
	"application_date": "2002-01-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for permitting off-line playback of digital content, and for managing content rights",
	"summary": "",
	"abstract": "A system for permitting offline content playback and for managing the rights to one or more digital content files within a computer network. The system manages these rights by encrypting the content files to prevent unauthorized access to the files. Encryption is accomplished by using one or more keys which are associated with one or more segments of the content file. These keys enable an authorized user to decrypt and playback the content files at a subsequent time. When the keys are received, a license which specifies the rights of the user regarding the content files, is obtained by the end user system, and verified locally to permit the content playback.",
	"url": null,
	"owner": "Aladdin Knowledge Systems, Ltd.",
	"publication_number": "06915425",
	"publication_date": "2005-07-05",
	"application_number": "09739076",
	"application_date": "2000-12-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Control and distribution protocol for a portable router framework",
	"summary": "",
	"abstract": "A control and distribution protocol (CDP) is implemented for transport across a backplane bus, through a high-speed serial link or through a switching fabric connection. The protocol includes an intra-system transport of dynamic routing protocol (DRP) IP messages, the distribution of routing information within the router, the transport of control and maintenance messages, and the transport of IP and multi-protocol label switching (MPLS) traffic between ingress and egress ports. The protocol further includes a dynamic routing and control driver which interacts with dynamic routing control applications to exchange messages that are to be transmitted to packet flow processors and to handoff messages received from packet flow processors. A packet flow processor driver which services messages carried between the dynamic routing control and packet flow processors. An IP traffic interface provides transfer of IP L3/L2 protocol data unit (PDU) header primitive from the packet flow processors. Both the DRC driver and PFP driver include a framework transport interface.",
	"url": null,
	"owner": "Alcatel",
	"publication_number": "06977924",
	"publication_date": "2005-12-20",
	"application_number": "09469670",
	"application_date": "1999-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Element manager common gateway architecture system and method",
	"summary": "",
	"abstract": "A common gateway architecture designed to be generic across different types of network elements and different network protocols, permitting network elements to be added incrementally without recompilation of the entire network element manager, thus reducing overall software maintenance overhead.",
	"url": null,
	"owner": "Alcatel",
	"publication_number": "06968553",
	"publication_date": "2005-11-22",
	"application_number": "09797088",
	"application_date": "2001-03-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Identifying unauthorized communication systems based on their memory contents",
	"summary": "",
	"abstract": "An authorized client communication system seeking access to a host communication system may be identified by locating a memory segment within the client communication system that stores client software used to access the host computer system. The memory segment then is examined to determine whether the client software stored in the memory segment corresponds to client software for an official client communication system. Communications from the client communication system are terminated when the client software in the memory segment is determined to diverge from software for an official client communication system.",
	"url": null,
	"owner": "America Online, Inc.",
	"publication_number": "06954861",
	"publication_date": "2005-10-11",
	"application_number": "09851121",
	"application_date": "2001-05-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for selecting financial services",
	"summary": "",
	"abstract": "A system and method is disclosed which enables a consumer to use a PIN biometric, merchant code or other indicia to conveniently instruct a financial institution to activate or access specific financial services or accounts during a particular time period or during a particular transaction. When making a purchase, the cardholder enters account information into a remote terminal such as a POS device, then the cardholder inputs a particular PIN or biometric which is communicated to the financial services provider. The provider interprets the PIN or biometric as an instruction to access or activate a particular service.",
	"url": null,
	"owner": "American Express Travel Related Services Company, Inc.",
	"publication_number": "06845906",
	"publication_date": "2005-01-25",
	"application_number": "10707614",
	"application_date": "2003-12-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for updating and synchronizing information between a client and a server",
	"summary": "",
	"abstract": "The present invention provides a method and apparatus for integrating applets running on a client with the application logic for applications running on a server. The mechanism of the present invention provides two significant advantages over the prior art: the synchronization of state, and the recognition of user actions in the browser including the invocation of the appropriate application logic in the server. Instead of using the FORM element available in HTML, individual active applets are available and may be created that obtain user input (e.g. a checkbox, textbox, button, etc.). A hidden applet called the Applet Group Controller is created which handles communication between the applets on the browser and the application logic on the server. The Applet Group Controller maintains an association with each applet that maintains the keys and values of any parameters and variables for the applet. In a preferred embodiment, upon the invocation of an event, the association instructs an Action Coordinator to invoke an action. The Action Coordinator obtains and transmits a list of all of the keys and their values to the server. The server invokes the appropriate application logic and transmits the keys and their values (as updated during the execution of the application logic) back to the Action Coordinator. The Action Coordinator then pushes the updated values out to the applets (through their Associations) at which time the browser's display is updated with the new values.",
	"url": null,
	"owner": "Apple Computer",
	"publication_number": "06947967",
	"publication_date": "2005-09-20",
	"application_number": "09863817",
	"application_date": "2001-05-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Execution control for process task",
	"summary": "",
	"abstract": "Method and means are further provided for simultaneous activation/deactivation of a set of tasks by a processor, each of the tasks normally executed in a sequential fashion by one or more processors. A list of tasks to be activated/deactivated is stored, including the timing relationship for the activation process. The list is then implemented as frame numbers for activation and requested state in the actual task list. The executing processor compares the requested state to the actual state for each task, and if different, compares the value of the activation frame with the current frame. If the current frame equals or exceeds the activation frame, then the requested active state is transferred to the actual state.",
	"url": null,
	"owner": "Apple Computer, Inc.",
	"publication_number": "06854116",
	"publication_date": "2005-02-08",
	"application_number": "09007019",
	"application_date": "1998-01-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Execution control for processor tasks",
	"summary": "",
	"abstract": "Method and means are further provided for simultaneous activation/deactivation of a set of tasks by a processor, each of the tasks normally executed in a sequential fashion by one or more processors. A list of tasks to be activated/deactivated is stored, including the timing relationship for the activation process. The list is then implemented as frame numbers for activation and requested state in the actual task list. The executing processor compares the requested state to the actual state for each task, and if different, compares the value of the activation frame with the current frame. If the current frame equals or exceeds the activation frame, then the requested active state is transferred to the actual state.",
	"url": null,
	"owner": "Apple Computer, Inc.",
	"publication_number": "06951019",
	"publication_date": "2005-09-27",
	"application_number": "09967627",
	"application_date": "2001-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Font management system that provides for synchronization of fonts among resources",
	"summary": "",
	"abstract": "A font synchronization system ensures that fonts which are specified in the creation of a document are the same as those that are employed in the subsequent handling and printing of the document. Each font that is utilized within a document, or available in a printing system, is characterized by a font reference that unambiguously identifies significant features of the font. Font references associated with a document are compared with those available on a computer resource, to see if two fonts are the same in all significant respects. If the fonts are not the same, the comparison process identifies the areas of difference between them, so that a determination can be made whether such differences are critical to the appearance of the document. A number of font references are encapsulated within a font profile, to identify the fonts that are available for use within a particular environment, such as a service bureau. The font profiles can be employed by document creators to limit their choices for fonts to those which will be ultimately available when the document is printed.",
	"url": null,
	"owner": "Apple Computer, Inc.",
	"publication_number": "06975412",
	"publication_date": "2005-12-13",
	"application_number": "10173852",
	"application_date": "2002-06-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for embedding object codes in source codes",
	"summary": "",
	"abstract": "Methods for embedding codes executable in a first system having a first microprocessor into codes executable in a second system having a second microprocessor are described herein. In one aspect of the invention, an exemplary method includes providing first codes having a routine, the first codes being compilable to be executed in the first system, and compiling the first codes, resulting in second codes; the second codes comprising opcodes of the routine executable by the first system, which convert the second codes into third codes automatically, the third codes being compilable to be executed by the second system; this is followed by compiling the third codes, resulting in the fourth codes being executable in the second system, and linking the fourth codes, generating an executable image and executing the executable image in the second system. Other methods and apparatuses are also described.",
	"url": null,
	"owner": "Apple Computer, Inc.",
	"publication_number": "06976249",
	"publication_date": "2005-12-13",
	"application_number": "10011342",
	"application_date": "2001-11-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for interfacing index based and iterator based application programming interfaces",
	"summary": "",
	"abstract": "A system and method for interfacing index based and iterator based file management routines. In general, the disclosed system maintains an iterator cache having multiple iterators. Each active iterator is associated with a most recently used directory entry. Upon receiving an index based request, the iterator closest to the index based request is identified. If the index based request is closer to the top of the directory than it is to the closest active iterator, the directory entries are sequentially examined beginning at the top of the directory with the first entry. Otherwise, the system determines whether the index based request is located above or below the closest iterator. If the index based request is above the closest iterator, the system steps backward beginning with the directory entry associated with the closest iterator until the directory entry associated with the index based request is located. If the closest iterator is located below the closest iterator, the system steps forward through the directory entries beginning with the directory entry associated with the closest iterator until the requested directory entry is located.",
	"url": null,
	"owner": "Apple Computer, Inc.",
	"publication_number": "06922698",
	"publication_date": "2005-07-26",
	"application_number": "10464293",
	"application_date": "2003-06-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network traffic data collection and query",
	"summary": "",
	"abstract": "An apparatus is equipped to receive descriptive data for network traffic. In one embodiment, the apparatus is equipped to conditionally modify timing data of the network traffic to conform the timing data to the timing patterns of previously network traffic, when determined that the timing data of the network traffic are aberrations. Further, the apparatus is equipped with a query facility that supports a network oriented query language. The language includes specific network oriented language elements.",
	"url": null,
	"owner": "Arbor Networks, Inc.",
	"publication_number": "06965574",
	"publication_date": "2005-11-15",
	"application_number": "09886352",
	"application_date": "2001-06-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Testing compliance of a device with a bus protocol",
	"summary": "",
	"abstract": "The present invention provides a system and method for testing compliance of a device with a bus protocol. The method comprises the steps of reading a configuration file containing predetermined parameters identifying the type of device and capabilities of the device, and then employing a configuration engine to dynamically generate a test environment for the device by creating selected test components which are coupled via the bus with a representation of the device to form the test environment, the test components being selected dependent on the configuration file. A test sequence is then executed, during which signals passed between the representation of the device and one or more of the test components are monitored to generate result data indicating compliance with the bus protocol. This approach has been found to provide a particularly user friendly and efficient approach for testing compliance of devices with a bus protocol.",
	"url": null,
	"owner": "Arm Limited",
	"publication_number": "06876941",
	"publication_date": "2005-04-05",
	"application_number": "10084145",
	"application_date": "2002-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Service interaction media in an intelligent network environment",
	"summary": "",
	"abstract": "In an Intelligent Network, a Service Interaction Media (SIM) device comprising a call handler and a plurality of service code tables manages multiple and simultaneous communications between a service input node such as a Service switching Point (SSP) and at least one network element. The service code tables contain decision information and lists of service interaction scenarios to enable the call handler to manage queries and sessions with network elements. An incoming query is presented from the switch to the SIM through the call handler and the SIM derives a service code based on query information to apply appropriate features and services to the query.",
	"url": null,
	"owner": "AT & T Corp.",
	"publication_number": "06973174",
	"publication_date": "2005-12-06",
	"application_number": "09912974",
	"application_date": "2001-07-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Activity log for improved call efficiency",
	"summary": "",
	"abstract": "The present invention provides for an activity log which may include user proactive billing management for use in a broadband communications system that guarantees voice, data and video communication reliability and security to users for an integrated telephone, television and data network. The activity log and user proactive billing management may log incoming calls directory numbers (DNs) and outgoing call DNs in a database that may be provided at a central system location, such as the IP Central Station or at the system subscriber's customer premises equipment. The activity log may also log incoming and outgoing email interactive sessions (e.g., instant message (IM) email) and log multimedia video and audio calls. According to a variation of the invention, the user may access the activity log(s) and identify any communication the cost of which should be billed to a different party. The activity log may also be sorted based on user preferences and set to direct calls to low cost alternatives.",
	"url": null,
	"owner": "AT&T Corp.",
	"publication_number": "06917610",
	"publication_date": "2005-07-12",
	"application_number": "09475293",
	"application_date": "1999-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "IP call forward profile",
	"summary": "",
	"abstract": "A method and system for providing call forwarding in an IP telephone network is disclosed. First, when a telephone number for a first telephone from a second telephone is dialed, the call is routing to a call manager. Call setup procedures with a BRG responsible for the first telephone are then initiated. The BRG then checks stored call forwarding profiles to determine whether there is an active call forwarding profile for the first telephone. The call is connected to the first telephone if an active call forwarding profile is not found. However, if an active call forwarding profile is found, the call forwarding information is sent to the call manager. The call is routed to at least a third telephone based on the call forwarding information.",
	"url": null,
	"owner": "AT&T Corp.",
	"publication_number": "06937713",
	"publication_date": "2005-08-30",
	"application_number": "09475144",
	"application_date": "1999-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for managing the provisioning of client devices connected to an interactive TV network",
	"summary": "",
	"abstract": "The present invention is directed to a system and method for managing the provisioning of an client device connected to a service distribution network, such as an interactive television service-providing network. Provisioning is managed by a provisioning manager that knows the specific provisioning data to collect and where the data is located and is to be forwarded. The provisioning manager thus acts as an intelligent provisioning data traffic manager by performing as a central collection and dissemination point for the provisioning data and directing provisioning data flows between a billing system, IP data network, server complex and/or other network systems.",
	"url": null,
	"owner": "AT&T Corp.",
	"publication_number": "06952836",
	"publication_date": "2005-10-04",
	"application_number": "09671329",
	"application_date": "2000-09-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Protected IP telephony calls using encryption",
	"summary": "",
	"abstract": "Communication information transmitted in the broadband communication system may be in a packet format and secured using encryption techniques, for example encryption software, including a means for providing an initial security key and updated security keys to the various pieces of communication equipment located throughout the broadband communication system. When communication equipment, for example a gateway, is first registered with, for example, an IP central station, the IP central station assigns an initial encryption key to the gateway that is assigned and retained by a server, for example a call manager server, and the gateway (e.g., broadband residential gateway. This initial encryption key may be used to establish a secure two way communication between two pieces of communication equipment as an originating point communication equipment and a terminating point communication equipment.",
	"url": null,
	"owner": "AT&T Corp.",
	"publication_number": "06889321",
	"publication_date": "2005-05-03",
	"application_number": "09475661",
	"application_date": "1999-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Smart routers-simple optics: network architecture for IP over WDM",
	"summary": "",
	"abstract": "A system and method of routing communication signals is provided. A first technique uses a packet switched device that operates using Internet Protocol, the packet switched device determines one or more commands based on a routing request to establish, maintain, restore or breakdown one or more communication paths and a circuit switched device that provides physical switching between a plurality of ports based on the one or more commands from the packet switched device. A second technique for expediting error condition information is also provided. As various error conditions are recognized, information relating to the error conditions is provided directly to the packet switched device to enable the packet switched device to restore communications with minimal delay.",
	"url": null,
	"owner": "AT&T Corp.",
	"publication_number": "06970451",
	"publication_date": "2005-11-29",
	"application_number": "09685953",
	"application_date": "2000-10-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for working at a remote office PBX",
	"summary": "",
	"abstract": "An arrangement that includes at least two PBXs interconnected by a network employs CTI ports to control operation of the PBXs. Through such control, a user can set up a telephonic presence in a visited PBX such that, to the user and to all others who interact with the user, it appears that the user is at the user's office, rather than at an office that is served by the visited PBX. This is effected by forwarding calls that are destined to the user at the user's office to the visited PBX, and by translating all dialing commands of the user at the visited PBX, and acting upon the translated commands, so as to provide the user with the features available to the user at the user's office while presenting an appearance to called parties that the user is at the user's office.",
	"url": null,
	"owner": "AT&T Corp.",
	"publication_number": "06950507",
	"publication_date": "2005-09-27",
	"application_number": "10026080",
	"application_date": "2001-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for improved efficiency in motion compensated video processing and method thereof",
	"summary": "",
	"abstract": "A system and methods are shown for improved processing of motion compensated video. A software driver handles image data related to motion compensated video. The image data includes IDCT coefficients and motion compensation vector data. A unique identifier is attached to the image data, preserving the relationship between the IDCT coefficients and motion compensated vector data related to an image block. The software driver sends the IDCT coefficients to an IDCT component. The IDCT coefficients are processed and an interrupt is sent to the software driver including the unique identifier of the processed IDCT coefficients. The software driver sends the motion compensation vector data related to the unique identifier in the interrupt. A 3D pipe receives the motion compensation vector data and reads the corresponding processed IDCT data. The 3D pipe sends an interrupt allowing the software driver to submit new IDCT coefficients as the 3D pipe processes the current motion compensation data with the read IDCT data. The 3D pipe processes the motion compensation data along with the read IDCT data to generate at least a portion of an image. The image portion is stored in a frame buffer until it is ready to be displayed.",
	"url": null,
	"owner": "ATI Technologies, Inc.",
	"publication_number": "06873735",
	"publication_date": "2005-03-29",
	"application_number": "09777252",
	"application_date": "2001-02-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for transaction access control",
	"summary": "",
	"abstract": "A computer implemented system controls transaction access of requester applications running on end-user computers having network protocol addresses, to internal applications and their associated transactions running in internal transaction areas of host computer systems. Related to each network protocol address, a requester database contains information related to each network protocol address including end-user identification, possible username and password and instructions, possible priority levels of select transactions, and authorized transactions. A listener listens for a connect request from one of the end-user computers. A validator, using the requester database, determines whether the end-user computer has a valid network protocol address. An external communication module receives subsequent transaction requests from validated end-user computers and a validator in conjunction with a requester database determines among other things whether the transactions requested are authorized for particular end-user computers. Usernames and passwords are sent to an external security manager for authorized transactions.",
	"url": null,
	"owner": "Attachmate Corporation",
	"publication_number": "06980989",
	"publication_date": "2005-12-27",
	"application_number": "10416276",
	"application_date": "2001-11-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for scheduling inbound inquiries",
	"summary": "",
	"abstract": "A method and system schedules inbound inquiries, such as inbound telephone calls, for response by agents in an order that is based in part on the forecasted outcome of the inbound inquiries. A scheduling module applies inquiry information to a model to forecast the outcome of an inbound inquiry. The forecasted outcome is used to set a priority value for ordering the inquiry. The priority value may be determined by solving a constrained optimization problem that seeks to maximize an objective function, such as maximizing an agent's productivity to produce sales or to minimize inbound call attrition. The inbound call may be placed on a virtual hold or be responded to on a real-time basis based on the inbound inquiry's priority value. A modeling module generates models that forecast inquiry outcomes based on a history and inquiry information. Statistical analysis such as regression analysis determines the model with the outcome related to the nature of the inquiry. Forecasted outcomes are based on the goal of the inbound calls and include factors such as probability an inbound caller will hang up, probability that an inbound caller will alter a business relationship based on hold time, probability that an inbound caller will make a purchase, and the relative probable reward of responding to an inbound call.",
	"url": null,
	"owner": "Austin Logistics Incorporated",
	"publication_number": "06956941",
	"publication_date": "2005-10-18",
	"application_number": "09547627",
	"application_date": "2000-04-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for self-service scheduling of inbound inquiries",
	"summary": "",
	"abstract": "A method and system schedules inbound inquiries, such as inbound telephone calls, for response by agents in an order that is based in part on the forecasted outcome of the inbound inquiries. A scheduling module applies inquiry information to a model to forecast the outcome of an inbound inquiry. The forecasted outcome is used to set a priority value for ordering the inquiry. The priority value may be determined by solving a constrained optimization problem that seeks to maximize an objective function, such as maximizing an agent's productivity to produce sales or to minimize inbound call attrition. A modeling module generates models that forecast inquiry outcomes based on a history and inquiry information. Statistical analysis such as regression analysis determines the model with the outcome related to the nature of the inquiry. Operator wait time is regulated by forcing low priority and/or highly tolerant inbound inquiries to self service.",
	"url": null,
	"owner": "Austin Logistics Incorporated",
	"publication_number": "06859529",
	"publication_date": "2005-02-22",
	"application_number": "10082386",
	"application_date": "2002-02-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Caching data",
	"summary": "",
	"abstract": "A method of caching data is provided, which includes a plurality of processes to , a cache manager and a data type register including at least one data type and a corresponding data type bit . Said data type bit is set () within the register on being accessed by each of said processes and subsequently reset () within the register. The cache manager restores () each of said set data type bit and identifies its corresponding data type . The cache manager writes the output data of each of said processes within a memory cache and said cache manager resets () said memory cache when the data type bit set by the last of said processes is reset.",
	"url": null,
	"owner": "Autodesk Canada Inc.",
	"publication_number": "06910103",
	"publication_date": "2005-06-21",
	"application_number": "10230702",
	"application_date": "2002-08-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data processing apparatus generates initialization schedule by sorting module order according to number of its dependencies for initializing data affecting execution of operational instructions",
	"summary": "",
	"abstract": "A method of initializing application instructions on a processing system. An application () comprises a number of dynamically shared objects or modules. Each of these modules may include data structures () that require initialization. Modules are dependent upon each other, and a module initialization order is identified by automatically registering a module's dependencies in an initialization list () during module loading, processing module dependencies to identify all dependencies, and generating an initialization schedule (). Module initialization () is then performed. Plug-in modules can be loaded and initialized after the application has started, and the plug-in schedule is appended to the initialization schedule. Finalization is performed in reverse order, when the application is closed.",
	"url": null,
	"owner": "Autodesk Canada Inc.",
	"publication_number": "06931521",
	"publication_date": "2005-08-16",
	"application_number": "09940202",
	"application_date": "2001-08-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Graphical image processing with enhanced editing facility",
	"summary": "",
	"abstract": "A method for modifying characteristics of an animation. An animation is created for a live broadcast and comprises graphic data including first parameters and references to editable parameters. The editable parameters have their characteristics, including a value and a description for each editable parameter, stored as metadata. The graphic data is instantiated by a metafile containing the metadata to determine the overall characteristics of an animation used during the live broadcast. The metadata may be independently modified on remote processing systems without having access to said graphic data. Finally, the animation is rendered during a broadcast, during which both the first and editable parameters are used to determine characteristics of the rendered animation.",
	"url": null,
	"owner": "Autodesk Canada Inc.",
	"publication_number": "06873328",
	"publication_date": "2005-03-29",
	"application_number": "10079344",
	"application_date": "2002-02-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Controlled face dragging in solid models",
	"summary": "",
	"abstract": "One or more embodiments of the invention provide a method, apparatus, and article of manufacture for modifying a three-dimensional model. A three-dimensional model is displayed in a computer implemented solid modeling system. A first face of the three-dimensional model is then selected. A first constraint that controls a behavior of a repositioning operation for the first face is specified. Once the face and constraint have been selected/specified, the three-dimensional model is modified by repositioning the selected first face, wherein the repositioning operation is constrained in accordance with the specified first constraint.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "06867771",
	"publication_date": "2005-03-15",
	"application_number": "10141642",
	"application_date": "2002-05-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distribution of spines on a curvature comb",
	"summary": "",
	"abstract": "A computer-implemented graphics program that determines the distribution of spines on a curvature comb. The graphics program generates a curvature comb to visualize the smoothness of a curve, wherein the curvature comb is comprised of a plurality of spines drawn perpendicular to the curve. The spines are distributed along the curvature comb according to a spine density function (SDF) that represents a desired density of the spines. A cumulative density function (CDF) is used as a computational tool for distributing spines according the distribution given by the SDF.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "06876363",
	"publication_date": "2005-04-05",
	"application_number": "10025330",
	"application_date": "2001-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Extensible framework for capturing feature information in a neutral format",
	"summary": "",
	"abstract": "Flexible framework within a CAD application program is described that serves as a neutral format for feature information relating to modeling data for a solid body. The framework is hierarchical in nature to allow for ease of use and universal access to the design data. The hierarchical framework is independent of the underlying feature information as well as independent of the underlying CAD program.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "06961684",
	"publication_date": "2005-11-01",
	"application_number": "09859115",
	"application_date": "2001-05-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Fuzzy logic reasoning for inferring user location preferences",
	"summary": "",
	"abstract": "One or more embodiments of the invention provide a method, apparatus, and article of manufacture for refining an approximate location of a mobile device using fuzzy logic reasoning. An approximate location of a device is determined. A rule base that comprises an ordered collection of rules is then read into memory, or loaded from a database. A set of imprecise inputs are captured for processing in the rules. However, prior to processing the inputs in the rules, the inputs are processed to determine a magnitude of participation of the input in the rules. The rules are then applied to the imprecise inputs based on the magnitude of participation to produce a logical product. A refined location is then computed based on the logical product.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "06978258",
	"publication_date": "2005-12-20",
	"application_number": "10034442",
	"application_date": "2001-12-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Graph-based method for multi-bodied sweep terminations",
	"summary": "",
	"abstract": "A computer-implemented solid modeling system provides a graph-based method for multi-bodied sweep terminations in a computer-implemented solid modeling system. A planar profile of one or more curves is generated, and the profile swept along a specified path to generate a tool body. The swept profile is terminated after the tool body interacts with a plurality of blank bodies to a predefined extent. The termination is comprised of three phases: (1) a pre-processing phase is performed to label faces and edges of the tool and blank bodies; (2) an analysis phase is performed to extract tool and blank graphs for the labeled faces and edges; and (3) a post-processing phase is performed to integrate results from the extracted tool and blank graphs.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "06906711",
	"publication_date": "2005-06-14",
	"application_number": "09887651",
	"application_date": "2001-06-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Intelligent constraint definitions for assembly part mating",
	"summary": "",
	"abstract": "One or more embodiments of the invention provide a method, apparatus, and article of manufacture for defining mating properties of a graphical component in a computer-implemented drawing program. An option to create a first constraint interface for a first geometric characteristic of a first component is initiated. In response to the initiation, a dialog window for specifying settings for the first constraint interface regardless of whether a second constraint interface is currently displayed is displayed. The settings define mating properties for how the first geometric characteristic of the first component mates with the second constraint interface. Once specified, the first constraint interface of the first geometric characteristic is persisted with the first component.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "06907573",
	"publication_date": "2005-06-14",
	"application_number": "09966656",
	"application_date": "2001-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Meeting location determination using spatio-semantic modeling",
	"summary": "",
	"abstract": "One or more embodiments of the invention provide a method, method, apparatus, and article of manufacture for determining a meeting location. A location for each of two or more persons is obtained. A central location is then determined based on the obtained locations. A list of activity preferences for each of the two or more persons is also obtained. Thereafter, a ranked list of activity preferences based on the obtained lists of activity preferences is computed. The ranked list represents a convergence of interests for the two or more persons. One or more meeting locations are then determined by combining the central location and ranked list.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "06865538",
	"publication_date": "2005-03-08",
	"application_number": "10224035",
	"application_date": "2002-08-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mobile device locator adapter system for location based services",
	"summary": "",
	"abstract": "One or more embodiments of the invention provide a method, apparatus, and article of manufacture for locating a mobile device. An application programming interface (API), executed by a computer, provides a plurality of simplified procedures that allow an application program executed by the computer to locate the mobile device. The application program invokes the simplified procedures of the API. The invoked procedures obtain a location of the mobile device given an identification of the mobile device and a description of a spatial reference system associated with the location. Additionally, the invoked procedures interact with specifics for a mobile positioning server of a carrier of the mobile device and with different methods of identifying the device as required by the carrier.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "06963748",
	"publication_date": "2005-11-08",
	"application_number": "10037805",
	"application_date": "2001-12-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Navigational compass for drawing programs",
	"summary": "",
	"abstract": "One or more embodiments of the invention provide a visual cue for placing a first geometric entity in a three-dimensional space represented in a computer-implemented graphics program. A two-dimensional viewport of 3D space is displayed on a display device. The operator selects a first point within the two-dimensional viewport. Based on the first point, a visual cue is displayed in the two-dimensional viewport that indicates a coordinate system plane within the three-dimensional space. The coordinate system plane identifies a plane where the first geometric entity is to be placed. Using the visual cue, a second point is selected on the coordinate system plane in the two-dimensional viewport. Thereafter, the first geometric entity is placed on the coordinate system plane based on the second point.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "06919887",
	"publication_date": "2005-07-19",
	"application_number": "09934391",
	"application_date": "2001-08-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Reactor-based viewport clipping using arbitrary graphical entities",
	"summary": "",
	"abstract": "Arbitrary graphical entities are used for reactor-based viewport clipping. Graphics program provide two dimensional views of three-dimensional objects through ports. A user obtains a non-rectangular shape (referred to as a clipping entity) to be utilized as a view or viewport of a model. Any arbitrary shape such as a circle, ellipse, polygon, or other non-rectangular shape may be utilized as a clipping entity. The user obtains a clipping entity by creating a new clipping entity or modifying an existing entity. Multiple options are available to the user to create and modify a clipping entity. A reactor mechanism detects changes in the clipping entity and notifies the current viewport of the modifications. In response thereto, the viewport adjusts its boundaries and any graphics outside of the clipping entity are clipped/not displayed to the user. Thus, a non-rectangular viewport may be displayed by a graphics program and utilized by the user.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "06848082",
	"publication_date": "2005-01-25",
	"application_number": "09464558",
	"application_date": "1999-12-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Staged stylization in multiple tiers",
	"summary": "",
	"abstract": "One or more embodiments of the invention provide a computer-implemented method for stylizing data into a presentation. A domain/data object is obtained that comprises an object representation of data stored in a database for a domain entity. An application object is then obtained that comprises an object representation of the data in the domain object that is relevant for a particular computer application. Lastly, a presentation object is obtained that comprises an object representation that encapsulates a visual appearance of the data in the application object.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "06925473",
	"publication_date": "2005-08-02",
	"application_number": "09939847",
	"application_date": "2001-08-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Visual clues to navigate three-dimensional space in a computer-implemented graphics system",
	"summary": "",
	"abstract": "A computer-implemented graphics system provides visual clues for navigating a three-dimensional space. The graphics system displays a two-dimensional viewport of the three-dimensional space on a monitor attached to the computer. A cursor is moved through the two-dimensional viewport of the three-dimensional space according to a position of the cursor control device attached to the computer. The graphics system determines a position of the cursor within the three-dimensional space relative to the two-dimensional viewport, and generates a visual representation of the cursor to indicate the position of the cursor within the three-dimensional space relative to the two-dimensional viewport. The visual representation of the cursor uses one or more human recognizable metaphors for three-dimensional distance cueing in order to provide an extra dimension of visual feedback to the operator navigating the cursor through the three-dimensional space related to the two dimensional viewport. This may include varying a composition, brightness, or reflectivity of the cursor to indicate the position of the cursor within the three-dimensional space relative to the two-dimensional viewport.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "06918087",
	"publication_date": "2005-07-12",
	"application_number": "09464557",
	"application_date": "1999-12-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Cascaded hidden Markov model for meta-state estimation",
	"summary": "",
	"abstract": "A method and system for training an audio analyzer () to identify asynchronous segments of audio types using sample data sets, the sample data sets being representative of audio signals for which segmentation is desired. The system and method then label asynchronous segments of audio samples, collected at the target site, into a plurality of categories by cascading hidden Markov models (HMM). The cascaded HMMs consist of 2 stages, the output of the first stage HMM () being transformed and used as observation inputs to the second stage HMM (). This cascaded HMM approach allows for modeling processes with complex temporal characteristics by using training data. It also contains a flexible framework that allows for segments of varying duration. The system and method are particularly useful in identifying and separating segments of the human voice for voice recognition systems from other audio such as music.",
	"url": null,
	"owner": "BAE Systems Information and Electronic Systems Integration Inc.",
	"publication_number": "06963835",
	"publication_date": "2005-11-08",
	"application_number": "10403405",
	"application_date": "2003-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, apparatus and article for evaluating card games, such as blackjack",
	"summary": "",
	"abstract": "A system reads an identifier from a hand of cards to identify the cards. For example, the system can read an identifier from a pair of cards forming the initial hand in blackjack, where the one card is face up and the other card is face down. The system determines the value of a hand of cards form the read identifiers. For example, the system can determine a value of an initial hand of two cards in blackjack, while only one card is face up. The system can inform a dealer of the value, or status based on value, of the hand. The system can determine whether cards forming a hand of cards are authenticate by validating the cards based on the read identifier. The system can determine if the cards forming the hand of cards are in an expected sequence based on a knowledge of the initial sequence of cards in a deck.",
	"url": null,
	"owner": "Bally Gaming International, Inc.",
	"publication_number": "06964612",
	"publication_date": "2005-11-15",
	"application_number": "10756044",
	"application_date": "2004-01-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, apparatus and article for evaluating card games, such as blackjack",
	"summary": "",
	"abstract": "Identifiers are read from playing cards collected after completion of at least one hand of a card game, such as blackjack, and the value of a hand is determined from the resulting sequence of read identifiers (i.e., ending sequence). The playing cards are collected in a defined order, such as from players in order from a dealer's right to left, and finally from the dealer. The cards, and the play of the game, can be validated based at least in part on the ending sequence. Identifiers may also be read from cards before or while dealing the card game to produce an initial sequence.",
	"url": null,
	"owner": "Bally Gaming International, Inc.",
	"publication_number": "06857961",
	"publication_date": "2005-02-22",
	"application_number": "10360508",
	"application_date": "2003-02-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, apparatus, and method for performing cryptographic validity services",
	"summary": "",
	"abstract": "Embodiments of the present invention described and shown in the specification and drawings facilitate electronic authentication services for banking and other industries. Authentication services, often using Public Key Infrastructure (PKI) technology, are used to confirm the identity of the sender of data and to ensure that the data that was received is identical to the data that was sent. Embodiments of the present invention provide authentication services that may be used by a variety of configurations of entities requesting data authentication and entities responding to those requests. Embodiments of the present invention also support compatibility with commercial data authentication standards, integration with third-party data authentication software such as Secude (for Identrus access), and systems to control data authentication risks.",
	"url": null,
	"owner": "Bank of America Corporation",
	"publication_number": "06973571",
	"publication_date": "2005-12-06",
	"application_number": "09897450",
	"application_date": "2001-07-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for real time monitoring and control of networked computers",
	"summary": "",
	"abstract": "A method of real time monitoring and control of networked computers, includes: providing a monitoring computer unit and client computer unit both capable of being communicatively coupled to a network system; and detecting states in the client computer and transmitting the detected states to the monitoring computer unit via the network system.",
	"url": null,
	"owner": "BBX Technologies, Inc.",
	"publication_number": "06961765",
	"publication_date": "2005-11-01",
	"application_number": "09827891",
	"application_date": "2001-04-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Declarative specification and engine for non-isomorphic data mapping",
	"summary": "",
	"abstract": "A mapping engine is provided to populate data elements of a first data structure of a first data representation with values of corresponding data elements of a second data structure of a second data representation, in accordance with at least a mapping specification. The two data structures may have different data shapes. The mapping specification may have a number of data element and data attribute mapping directives, including repeating data items. A population operation in a reversed direction may also be performed using the same mapping specification. The mapping specification may also specify an external mapping specification for a subset of the mapping operations. The external mapping specification may comprise unidirectional function pairs. In one embodiment, the mapping engine performs order dependent mapping facilitating the use of separate mapping rules for different instances of the same data element based upon the relative position of the data element instances within an input data structure.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "06859810",
	"publication_date": "2005-02-22",
	"application_number": "10150436",
	"application_date": "2002-05-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Duplicated naming service in a distributed processing system",
	"summary": "",
	"abstract": "A clustered enterprise Javau2122 distributed processing system is provided. The distributed processing system includes a first and a second computer coupled to a communication medium. The first computer includes a Javau2122 virtual machine (JVM) and kernel software layer for transferring messages, including a remote Javau2122 virtual machine (RJVM). The second computer includes a JVM and a kernel software layer having a RJVM. Messages are passed from a RJVM to the JVM in one computer to the JVM and RJVM in the second computer. Messages may be forwarded through an intermediate server or rerouted after a network reconfiguration. Each computer includes a Smart stub having a replica handler, including a load balancing software component and a failover software component. Each computer includes a duplicated service naming tree for storing a pool of Smart stubs at a node. The computers may be programmed in a stateless, stateless factory, or a stateful programming model. The clustered enterprise Javau2122 distributed processing system allows for enhanced scalability and fault tolerance.",
	"url": null,
	"owner": "Bea Systems, Inc.",
	"publication_number": "06928457",
	"publication_date": "2005-08-09",
	"application_number": "09803467",
	"application_date": "2001-03-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Programming language extensions for processing data representation language objects and related applications",
	"summary": "",
	"abstract": "A system is provided for manipulating data representation language basedu2014objects in a native programming language environment. In one embodiment, the system is used to map data objects of the data representation language to corresponding objects within the native programming language and vice versa. In one embodiment, the system is equipped to receive a mapping definition mapping selected elements of a data representation language, such as an XML data structure, to selected objects of a programming language, such as ECMAScript. The system is further equipped to determine whether the mapping definition comprises one or more definitional statements expressed with data representation language oriented language elements of a programming language. Further, the system is equipped to process the mapping definition statements comprising data representation language oriented language elements of the programming language, in accordance with syntactical and semantic definitions of the data representation language oriented language elements.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "06918107",
	"publication_date": "2005-07-12",
	"application_number": "10082800",
	"application_date": "2002-02-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for computer code generation",
	"summary": "",
	"abstract": "The invention provides a system and method for computer code generation that can be used to generate code and configuration files from any data source. In accordance with one embodiment of the invention a Generator Framework provides a common set of standards and APIs through which designs may be input. The purpose of the Generator Framework is to unify the code generation techniques implemented in products such as the Builder products from BEA Systems, Inc., by introducing sufficient abstraction levels. Built-in rules are introduced in the Generator Framework, and a data navigation layer isolates the Generator Framework from the data sources used. Filters can be added to the framework to transform data. Notifiers are used by the Generator Framework to notify external components about the generation process.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "06973640",
	"publication_date": "2005-12-06",
	"application_number": "09970741",
	"application_date": "2001-10-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Upgrading digital media servers",
	"summary": "",
	"abstract": "A system and method are disclosed for upgrading both hardware and software components of a digital media server without disrupting media delivery services. In a preferred embodiment, the present system and method employ an object-oriented model that allows system servers to remain fully operational while software upgrades at both the operating system and application levels are installed. Additionally, the system and method use redundant or partitionable programmable logic devices to perform firmware upgrades without disrupting media delivery services.",
	"url": null,
	"owner": "Beach Unlimited LLC",
	"publication_number": "06978452",
	"publication_date": "2005-12-20",
	"application_number": "10406108",
	"application_date": "2003-04-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Object visibility control for ray tracing",
	"summary": "",
	"abstract": "A computer graphics method and apparatus allows designer control over the rendering of objects and scenes, in a rendering system using ray tracing for example. A modeling system is adapted to accept rules for controlling how certain objects affect the appearance of certain other objects. In a ray tracing implementation, rules are specified by ray type and can be specified as either u201cincludingu201d all but certain objects or u201cexcludingu201d specific objects for any given object. A rendering system extracts these rules from a bytestream or other input including other graphics data and instructions, and populates lists for internal use by other components of the rendering system. A ray tracer in the rendering system is adapted to consult the list when performing ray tracing, so as to enforce the rendering control specified by the content creator when the objects and scene are rendered.",
	"url": null,
	"owner": "Believe, Inc.",
	"publication_number": "06956570",
	"publication_date": "2005-10-18",
	"application_number": "09894225",
	"application_date": "2001-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Digital wireless telephone system for downloading software to a digital telephone using wireless data link protocol",
	"summary": "",
	"abstract": "A digital wireless telephone downloads software related to digital telephone services using a client browser. The digital telephone initiates a data call to an interworking unit via a digital wireless telephone network, using a prescribed wireless data protocol such as IS-95A. The interworking unit recovers the payload of the wireless data packets to establish a two-way data link with the digital telephone. The interworking unit sends data messages to a destination server across a second two-way data link in a packet switched network to establish a two way session between the digital telephone and the destination server. The user of the digital telephone can thus communicate with the server via a two-way application-layer session using hypertext-based messaging. The digital telephone can thus navigate between different servers on the packet switched network for activation of different digital telephone services, and for downloading new software or updating existing software related to the digital telephone services.",
	"url": null,
	"owner": "Bell Atlantic Nynex Mobile",
	"publication_number": "06876644",
	"publication_date": "2005-04-05",
	"application_number": "10358155",
	"application_date": "2003-02-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for converged service creation and execution environment applications",
	"summary": "",
	"abstract": "Embodiments of the present invention relate to systems and methods for a converged service creation and execution application. In an embodiment, an application is coupled to an application server. One or more open application programming interfaces are coupled to the application server, and service session management logic is also coupled to the application server.",
	"url": null,
	"owner": "BellSouth Intellectual Property Corp.",
	"publication_number": "06981263",
	"publication_date": "2005-12-27",
	"application_number": "09893437",
	"application_date": "2001-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for managing transaction messages in computer communications",
	"summary": "",
	"abstract": "A transaction manager facilitates modification and maintenance of data used to provide information regarding computer communications between computer systems. The transaction manager uses a manager file that contains transaction codes-attribute strings and corresponding action values. The transaction code-attribute strings can include mask characters that act as substitution values. When a transaction takes place requiring information regarding a particular attribute of that transaction be sent, the transaction manager consults the manager file to obtain the action value corresponding to the transaction and attribute, or the transaction code-attribute string containing mask characters that can be substituted for the transaction and attribute. The transaction manager performs the action associated with the action value.",
	"url": null,
	"owner": "BellSouth Intellectual Property Corp.",
	"publication_number": "06871209",
	"publication_date": "2005-03-22",
	"application_number": "09712931",
	"application_date": "2000-11-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing video services",
	"summary": "",
	"abstract": "Set top boxes are provided with access to full EIT data streams without having to off-tune from one transport to another. If off-tuning is required, however, a locking mechanism substantially reduces or eliminates service interruption. Data in the additional EIT data streams in the non-home transports is reorganized to be sent by time rather than by service. EIT data is stored in the set top box in an architecture which significantly reduces the redundancy inherent in EIT data, allowing a full 7 days of EIT data to be stored in the set top box memory. The set top box of the present invention is backward compatible with conventional set top boxes.",
	"url": null,
	"owner": "BellSouth Intellectual Property Corporation",
	"publication_number": "06961955",
	"publication_date": "2005-11-01",
	"application_number": "09417051",
	"application_date": "1999-10-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Telephone synchronization with software applications and documents",
	"summary": "",
	"abstract": "A method and system are provided for locating and retrieving stored computer files that are related to an incoming telephone call directed to a computer user. A called party receives a telephone call while the called party is operating her computer. A computer telephony interface receives caller identification information on the calling party and uses that information to launch a software synchronization program for locating files stored on the called party's computer that are related to the calling party. A dialog box is displayed on the screen of the called party's computer that provides the caller identification on the calling party and provides an icon for displaying a list of stored files related to the incoming caller. The list of files may be automatically presented to the called party, or the called party may retrieve the list of stored files by selection of the icon presented in the dialog box. Selection of one of the stored files by the called party causes an instance of an application program, such as a word processing program responsible for creation and storage of the selected file, to be launched for displaying the selected file.",
	"url": null,
	"owner": "BellSouth Intellectual Property Corporation",
	"publication_number": "06873692",
	"publication_date": "2005-03-29",
	"application_number": "10109976",
	"application_date": "2002-03-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network system extensible by users",
	"summary": "",
	"abstract": "In one aspect, a network system includes a user interface which allows a user to interact with the network system. An agent server is coupled to the user interface. The agent server manages the operation of the network system. Furthermore, the agent server in conjunction with the user interface is operable to create or modify an agent in response to interaction by the user. In another aspect, a network system includes an agent server which manages the operation of the network system. An agent is operable to utilize a service within the network system. A service wrapper, associated with the service, cooperates with the agent server to mediate interaction between the service and the agent.",
	"url": null,
	"owner": "Ben Franklin Patent Holding L.L.C.",
	"publication_number": "06839733",
	"publication_date": "2005-01-04",
	"application_number": "09712712",
	"application_date": "2000-11-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Entertainment system on-board a vehicle for visualizing on a display real-time vehicle data",
	"summary": "",
	"abstract": "An entertainment system is provided on-board a vehicle for visualizing real-time vehicle data on a display mountable on-board the vehicle. The system has a visualization computer system for acquiring real-time data from the on-board vehicle computer representing one or more parameters of vehicle operation, and visualizing entertaining images on the display having graphics with one or more characteristics updated in real-time in accordance with such real-time data. The parameters of vehicle operation may represent those available from the vehicle computer via an On-Board Diagnostic port of the vehicle, e.g., vehicle speed, engine RPM, or air intake temperature. The graphics can represent two or three dimensional geometric object(s) or a graphical model, and the characteristics updated may represent one or more of speed of movement, shape, size, or color of such objects, or elements of the model, and as such, images of these graphics are distinctly different from typical dashboard instrumentation for operating a vehicle.",
	"url": null,
	"owner": "Blink Engineering Corp.",
	"publication_number": "06871121",
	"publication_date": "2005-03-22",
	"application_number": "10265848",
	"application_date": "2002-10-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enterprise management system and method which includes a common enterprise-wide namespace and prototype-based hierarchical inheritance",
	"summary": "",
	"abstract": "A system and method for providing an improved namespace and object description system for enterprise management are disclosed. The system and method employ a hierarchical namespace with objects including prototypes and instances where an instance inherits traits from a prototype, such as attribute values and/or child objects.",
	"url": null,
	"owner": "BMC Software",
	"publication_number": "06895586",
	"publication_date": "2005-05-17",
	"application_number": "09651408",
	"application_date": "2000-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for assessing attacks on computer networks using Bayesian networks",
	"summary": "",
	"abstract": "A method and system are disclosed for processing data from a computer network to determine an occurrence of and characterize a particular activity associated with the computer network. In accordance with exemplary embodiments of the present invention, a collection of data is managed that corresponds to events associated with the computer network. At least one model is established to correlate an occurrence of a predetermined set of events. At least one hypothesis is formed, using the at least one model, that characterizes the particular activity associated with the computer network. The at least one hypothesis is evaluated using the at least one model. The steps of forming and evaluating are performed interactively with the step of managing to iteratively update the collection of data.",
	"url": null,
	"owner": "Booz-Allen Hamilton, Inc.",
	"publication_number": "06907430",
	"publication_date": "2005-06-14",
	"application_number": "09969722",
	"application_date": "2001-10-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interaction between echo canceller and packet voice processing",
	"summary": "",
	"abstract": "System and method for processing communication signals in a communication system having a detector for detecting a parameter of a communication signal. A communication signal is provided to a non-linear processor (NLP) adapted to examine the signal and to decide whether or not to enter an active state based upon a parameter of the signal. If the NLP enters an active state, the NLP performs non-linear processing on the signal. The NLP communicates to the detector whether the NLP is active or inactive. If the NLP is active, a processing step of the detector is disabled.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "06925174",
	"publication_date": "2005-08-02",
	"application_number": "10081678",
	"application_date": "2002-02-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for an adaptive multimode media queue",
	"summary": "",
	"abstract": "Embodiments of the invention may provide a method for implementing an adaptive multimode media queue. A mode of operation may be determined for a received media stream based on a sampling rate of the media stream. The mode of operation may be a wideband mode and/or a narrowband mode. Depending on the determined mode, the adaptive multimode media queue may be partitioned into a low band media queue and a high band media queue. A wideband media stream split into a high band and a low band is buffered into the adaptive multimode media queue wherein the high band is stored in the high band media queue, and the low band is stored in the low band media queue. The high band media queue and low band media queue may be a contiguous memory block within the adaptive multimode media queue. The received media stream, which may have different sampled data rates may be buffered within the partitioned adaptive multimode media queue.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "06928495",
	"publication_date": "2005-08-09",
	"application_number": "10828112",
	"application_date": "2004-04-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for an adaptive multimode media queue",
	"summary": "",
	"abstract": "Embodiments of the invention may provide a method for implementing an adaptive multimode media queue. A mode of operation may be determined for a received media stream based on a sampling rate of the media stream. The mode of operation may be a wideband mode and/or a narrowband mode. Depending on the determined mode, the adaptive multimode media queue may be partitioned into a low band media queue and a high band media queue. A wideband media stream split into a high band and a low band is buffered into the adaptive multimode media queue wherein the high band is stored in the high band media queue, and the low band is stored in the low band media queue. The high band media queue and low band media queue may be a contiguous memory block within the adaptive multimode media queue. The received media stream, which may have different sampled data rates may be buffered within the partitioned adaptive multimode media queue.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "06848012",
	"publication_date": "2005-01-25",
	"application_number": "10313826",
	"application_date": "2002-12-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Packet based network exchange with rate synchronization",
	"summary": "",
	"abstract": "A signal processing system which discriminates between voice signals and data signals modulated by a voiceband carrier. The signal processing system includes a voice exchange, a data exchange and a call discriminator. The voice exchange is capable of exchanging voice signals between a circuit switched network and a packet based network. The signal processing system also includes a data exchange capable of exchanging data signals modulated by a voiceband carrier on the circuit switched network with unmodulated data signal packets on the packet based network. The data exchange is performed by demodulating data signals from the circuit switched network for transmission on the packet based network, and re-modulating data signal packets from the packet based network for transmission on the circuit switched network. The call discriminator is used to selectively enable the voice exchange and data exchange.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "06882711",
	"publication_date": "2005-04-19",
	"application_number": "09454219",
	"application_date": "1999-12-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Voice and data exchange over a packet based network with comfort noise generation",
	"summary": "",
	"abstract": "A signal processing system which discriminates between voice signal and data signals modulated by a voiceband carrier. The signal processing system includes a voice exchange, a data exchange and a call discriminator. The voice exchange is capable of exchanging voice signals between a switched circuit network and a packet based network. The signal processing system also includes a data exchange capable of exchanging data signals modulated by a voiceband carrier on the switched circuit network with unmodulated data signal packets on the packet based network. The data exchange is performed by demodulating data signals from the switched circuit network for transmission on the packet based network, and modulating data signal packets from the packet based network for transmission on the switched circuit network. The call discriminator is used to selectively enable the voice exchange and data exchange.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "06980528",
	"publication_date": "2005-12-27",
	"application_number": "09697777",
	"application_date": "2000-10-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Voice and data exchange over a packet based network with precise tone plan",
	"summary": "",
	"abstract": "A signal processing system which discriminates between voice signals and data signals modulated by a voiceband carrier. The signal processing system includes a voice exchange, a data exchange and a call discriminator. The voice exchange is capable of exchanging voice signals between a switched circuit network and a packet based network. The signal processing system also includes a data exchange capable of exchanging data signals modulated by a voiceband carrier on the switched circuit network with unmodulated data signal packets on the packet based network. The data exchange is performed by demodulating data signals from the switched circuit network for transmission on the packet based network, and modulating data signal packets from the packet based network for transmission on the switched circuit network. The call discriminator is used to selectively enable the voice exchange and data exchange.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "06967946",
	"publication_date": "2005-11-22",
	"application_number": "09653261",
	"application_date": "2000-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Voice and data exchange over a packet based network with timing recovery",
	"summary": "",
	"abstract": "A signal processing system which discriminates between voice signals and data signals modulated by a voiceband carrier. The signal processing system includes a voice exchange, a data exchange and a call discriminator. The voice exchange is capable of exchanging voice signals between a switched circuit network and a packet based network. The signal processing system also includes a data exchange capable of exchanging data signals modulated by a voiceband carrier on the switched circuit network with unmodulated data signal packets on the packet based network. The data exchange is performed by demodulating data signals from the switched circuit network for transmission on the packet based network, and modulating data signal packets from the packet based network for transmission on the switched circuit network. The call discriminator is used to selectively enable the voice exchange and data exchange.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "06850577",
	"publication_date": "2005-02-01",
	"application_number": "10341807",
	"application_date": "2003-01-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for accelerating occlusion culling in a graphics computer",
	"summary": "",
	"abstract": "A method for accelerating occlusion culling in a graphics computer is disclosed. A depth test is performed on a fragment for a first time to determine if the fragment is visible. The fragment can be marked as potentially visible if the depth test concluded that the fragment is visible. Subsequently, the depth test is performed on the fragment for a second time to determine if the fragment is visible. If the depth test concludes that the fragment is visible, graphics processing for the fragment can be stopped at this point.",
	"url": null,
	"owner": "Broadizon, Inc.",
	"publication_number": "06930684",
	"publication_date": "2005-08-16",
	"application_number": "10259685",
	"application_date": "2002-09-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer telephony system using multiple hardware platforms to provide telephony services",
	"summary": "",
	"abstract": "A computer telephony system includes a multi-platform architecture that provides a layer of abstraction between application software and hardware associated with a platform. According to this architecture, service modules residing on different platforms access computer telephony resources to facilitate performance of a variety of computer telephony services. Although local access to such resources is governed by diverse, platform-dependent protocols, the service modules communicate with one another according to a common, platform-independent protocol. In this manner, cross-platform communication is abstracted to isolate system software and firmware from hardware-based platform dependencies. Instead of threaded drivers creating a persistent, dedicated link with resources, communication can be accomplished via a common, platform-independent message packet protocol.",
	"url": null,
	"owner": "Brooktrout, Inc.",
	"publication_number": "06920143",
	"publication_date": "2005-07-19",
	"application_number": "09267178",
	"application_date": "1999-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application programming interface for measuring devices",
	"summary": "",
	"abstract": "An application programming interface (API) that provides a common interface between an application program and plural different types of color measuring devices each having at least one color measuring sensor. The API includes plural functions for operating any of the plural different types of color measuring devices. In order to complete an operation performed by at least one of the plural functions, the function that performs the operation must be called a number of times which is different for at least two different types of color measuring devices. For a particular color measuring device, the API provides the application program with flow control data of the number of times that the function must be called. This flow control data preferably can be provided by the function, in the form of a call-again value or as a numerical value, or by a separate function in the API such as a get-device-capabilities function. In some embodiments of the invention, a combination of these methods of providing the flow control data is utilized. Preferred functions for operating any of the plural different types of color measuring devices include a calibrate-position function, a calibrate-sensor function, a move-to-patch function, and a make-measurement function.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "06873431",
	"publication_date": "2005-03-29",
	"application_number": "09241853",
	"application_date": "1999-02-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic gamut mapping selection",
	"summary": "",
	"abstract": "The present invention is directed to a mechanism of dynamically selecting a gamut mapping component for use in a color management system which transforms colors specified in image data from a first color space to a second color space, the method comprising automatically generating prediction information for use in selecting from a plurality of gamut mapping components, wherein the prediction information is based on determined gamut mapping preferences corresponding to at least one characteristic of the image data, and automatically selecting at least one of the plurality of gamut mapping components based on the prediction information.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "06947589",
	"publication_date": "2005-09-20",
	"application_number": "09956040",
	"application_date": "2001-09-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Image forming apparatus having display unit for displaying an executable program and control method thereof",
	"summary": "",
	"abstract": "An image forming apparatus having a display unit for displaying a program which can be executed in the apparatus has: an input unit for inputting a program into the image forming apparatus. A display control unit controls a process for displaying select keys including a plurality of select keys to instruct a selection of a desired one of a plurality of programs stored in the image forming apparatus onto a display screen displayed on the display unit. A discrimination unit discriminates whether or not the select key to instruct a selection of the program inputted by the input unit can be further displayed onto the first display screen to display the select keys corresponding to the programs registered in the image forming apparatus in response to the input of the program from the input unit.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "06898389",
	"publication_date": "2005-05-24",
	"application_number": "10435078",
	"application_date": "2003-05-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information processing apparatus, information processing method, computer readable program, and storage medium product storing computer readable program",
	"summary": "",
	"abstract": "When users employ a printer driver having the function of automatically selecting a development mode, the invention is intended to make the function of automatically selecting a development mode more convenient to the users. To that end, when one of development modes including a vector mode and an image mode is automatically decided, the printer driver automatically decides a plurality of print setting items in printing data to be processed in the decided development mode depending on the contents of drawing.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "06967730",
	"publication_date": "2005-11-22",
	"application_number": "09908698",
	"application_date": "2001-07-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information processing apparatus, information processing method, storage medium, and program",
	"summary": "",
	"abstract": "Selection of an optimum print data conversion is provided such that: in a first conversion, print data is converted into image data, in a second conversion, the print data is converted into code data which is used by a printer to generate the image data; predictions are made as regards a printing time using the image data converted in the first conversion and a printing time using the code data converted in the second conversion, a determination is made whether the printing time using the image data is shorter than the printing time using the code data, and the first conversion is selected when it is determined that the printing time using the image data is shorter and the second conversion is selected when it is determined that the printing time using the image data is not shorter.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "06963412",
	"publication_date": "2005-11-08",
	"application_number": "09605008",
	"application_date": "2000-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information processing apparatus, method for controlling information processing apparatus, and storage medium storing program for realizing the method",
	"summary": "",
	"abstract": "A control method for an information processing apparatus which can be loaded with a device driver includes an installing step of installing a device driver, a determining step of determining whether or not a control program in the information processing apparatus is to be rebooted when the device driver is installed in the installing step, and a display controlling step of controlling display of a display screen for reboot when it is determined that reboot is required in the determining step.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "06965953",
	"publication_date": "2005-11-15",
	"application_number": "10359641",
	"application_date": "2003-02-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Print control apparatus and method",
	"summary": "",
	"abstract": "An object of this invention is to achieve high-speed automatic setting of a print mode. In a print control apparatus according to this invention, when a print mode set via a user interface window prior to the start of printing is an automatic mode, a print mode which satisfies print conditions is decided. If no print mode is decided at this stage, printing starts, and then a spooler () spools print information and determination information for deciding a print mode when the print mode is the automatic mode. When the print mode is an image mode or the image mode is determined to be preferable by determination information, a despooler () causes a renderer () to generate image data. When the print mode is a PDL mode or the PDL mode is determined to be preferable by determination information, the despooler () causes a printer driver to generate a PDL command. In any case, no print mode is decided from determination information as far as the print mode has already been decided as the image or PDL mode.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "06975416",
	"publication_date": "2005-12-13",
	"application_number": "09877093",
	"application_date": "2001-06-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Printing control method and apparatus",
	"summary": "",
	"abstract": "This invention relates to a printing control method and apparatus, a computer program product, and the like in which printing data is held in a hierarchical structure and a printing job is issued to a printer to cause the printer to print. In the printing control method according to the present invention, different setting values can be set in the lower and upper layers of the hierarchical structure as printing setting data containing double-sided printing or single-sided printing setting. When a setting value different from that of the upper layer is set in the lower layer of the hierarchical structure, the printer is instructed on a setting in the lower layer for each printing data to which the setting value is applied.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "06883981",
	"publication_date": "2005-04-26",
	"application_number": "10724761",
	"application_date": "2003-12-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure printing over cable network to home printer",
	"summary": "",
	"abstract": "Secure printing of print data from a client application residing on a data network to a set top box which has a printer, the set top box residing on a digital cable network which has a cable head end for interfacing the digital cable network to the data network, wherein print data is generated in the client application after which it is determined whether a secure communication path exists between the client application and the set top box. If the secure communication path exists, the print data is transmitted from the client application to the set top box. The print data is then sent from the set top box to the printer for printing.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "06930788",
	"publication_date": "2005-08-16",
	"application_number": "09357593",
	"application_date": "1999-07-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for performing service operations",
	"summary": "",
	"abstract": "A system and method for performing service operations on a machine. The system includes first and second computer based service tools and a computer based workbench having first and second application proxies and a binary network object with first and second interfaces. The first application proxy is coupled to the first computer based service tool and the second application proxy is coupled to the second computer based service tool. The first computer based service tool has access to service information in the second computer based service tool through the computer based workbench.",
	"url": null,
	"owner": "Caterpillar Inc",
	"publication_number": "06859930",
	"publication_date": "2005-02-22",
	"application_number": "09740443",
	"application_date": "2000-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and installation for fast fault localization in an integrated circuit",
	"summary": "",
	"abstract": "The invention relates to a method and an installation for fast location of a fault in an integrated circuit. A sequence of NRZ location vectors is created, the abnormal location vectors are determined, for which the value of the electrical consumption current at rest IDDQ of the circuit is abnormal, at least one set of images is produced with an abnormal location vector, and at least one abnormal vector image is compared with a reference image.",
	"url": null,
	"owner": "Centre National d'Etudes Spatiales (C.N.E.S.)",
	"publication_number": "06948107",
	"publication_date": "2005-09-20",
	"application_number": "09831525",
	"application_date": "1999-05-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Forming a signature of parameters extracted from information",
	"summary": "",
	"abstract": "A method of storing information relating to the transmission of messages by an entity over a given time period comprises the step of creating a signature comprising a plurality of parameters related to the transmission of messages over that time period wherein the parameters comprise at least one parameter related to the transmission of messages over a portion of the period and also related to the position of the portion in the period, to enable output data to be derived from the stored information. The signature may be updated by a weighted averaging process with other more recent signatures. Application in fraud detection where signature representing information in many call detail records from a particular subscriber is fed to a neural network.",
	"url": null,
	"owner": "Cerebrus Solution Limited",
	"publication_number": "06920440",
	"publication_date": "2005-07-19",
	"application_number": "08888361",
	"application_date": "1997-07-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for vending products and services using an identification card and associated methods",
	"summary": "",
	"abstract": "A highly integrated and flexible system for vending products and services to consumers. The system receives information in advance of the vend by having the consumer insert an identification (ID) card, preferably a driver's license, into a point-of-purchase terminal (referred to as an OSU device). The OSU device preferably contains an Optical Scanning Unit (OSU), capable of scanning the textual information on the ID card. In one embodiment, the scanned information is compared against optical templates present in the system to discern or verify the information on the ID card, and is then used by the system to enable or disable the vending transaction, and/or to allow access to several preregistered system accounts.",
	"url": null,
	"owner": "Chesterfield Holdings, L.L.C.",
	"publication_number": "06854642",
	"publication_date": "2005-02-15",
	"application_number": "10086764",
	"application_date": "2001-10-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network device including reverse orientated modules",
	"summary": "",
	"abstract": "The present invention provides a network device with multiple modules or printed circuit boards where certain of the modules are reverse orientated with respect to the other modules. Reverse orientating certain modules better utilizes routing resources and enables a high switching capacity network device, including both physical layer switch/router subsystems and upper layer switch/router subsystems, to be fit in one telco rack. Providing a multi-layer network device in one telco rack allows for intelligent layer  switching (for example, dynamic network connection set up), allows for one network management system to control both layer  and upper layer networks and eliminates grooming fees. Compared with separate layer  and upper layer network devices or a multi-layer network device occupying multiple telco racks, a single network device saves valuable telco site space and reduces expenses by sharing overhead such as the chassis, power and cooling.",
	"url": null,
	"owner": "Ciena Corporation",
	"publication_number": "06930890",
	"publication_date": "2005-08-16",
	"application_number": "09595925",
	"application_date": "2000-06-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network device with a distributed switch fabric timing system",
	"summary": "",
	"abstract": "The present invention provides a central switch fabric timing subsystem and distributed switch fabric timing subsystems. Distributed switch fabric subsystems reduce the cost of a minimally configured network device by providing a network device with a distributed switch fabric. Such a network device locates a portion of the switch fabric functionality on each forwarding card allowing the minimal network device configuration to include less than the entire switch fabric functionality. The cost of the minimal configuration is, therefore, reduced allowing network service providers to more quickly recover the initial cost of the network device. As new services are requested, additional functionality, including both forwarding cards and universal port cards may be added to the network device to handle the new requests, and the fees for the new services may be applied to the cost of the additional functionality. Consequently, the cost of the network device more closely tracks the service fees received by network providers.",
	"url": null,
	"owner": "CIENA Corporation",
	"publication_number": "06876652",
	"publication_date": "2005-04-05",
	"application_number": "09614187",
	"application_date": "2000-07-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network device with embedded timing synchronization",
	"summary": "",
	"abstract": "The present invention provides a network device including a central timing subsystem for distributing one or more timing reference signals including a main timing signal and an embedded timing signal. Embedding one timing signal within another reduces the routing resources necessary to route the timing signal(s) within the network device. In addition, one central timing system, as opposed to two or more, may be used to provide multiple different synchronous clock signals. In one embodiment, the main timing signal is used for network data transfer while the embedded signal is used at least for processor synchronization. Consequently, a separate central timing subsystem is not required for generation and distribution of processor timing reference signals, and separate routing resources are not required for the processor timing reference signals. In addition, separate local timing subsystems for both the central timing and processor timing are not necessary. Embedding the processor timing reference signal within a highly accurate, redundant external timing reference signal also provides a highly accurate and redundant processor timing reference signal, and having a common local timing subsystem is more efficient resulting in less design time, less debug time, less risk, design re-use and simulation re-use.",
	"url": null,
	"owner": "Ciena Corporation",
	"publication_number": "06868092",
	"publication_date": "2005-03-15",
	"application_number": "09613682",
	"application_date": "2000-07-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Signatures for facilitating hot upgrades of modular software components",
	"summary": "",
	"abstract": "The present invention provides a method and apparatus for facilitating hot upgrades of software components within a telecommunications network device through the use of u201csignaturesu201d generated by a signature generating program. After installation of a new software release within the network device, only those software components whose signatures do not match the signatures of corresponding and currently executing software components are upgraded. Signatures promote hot upgrades by identifying only those software components that need to be upgraded. Since signatures are automatically generated for each software component as part of putting together a new release a quick comparison of two signatures provides an accurate assurance that either the software component has changed or has not. Thus, signatures provide a quick, easy way to accurately determine the upgrade status of each software component.",
	"url": null,
	"owner": "CIENA Corporation",
	"publication_number": "06880086",
	"publication_date": "2005-04-12",
	"application_number": "09777468",
	"application_date": "2001-02-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Tracking distributed data retrieval in a network device",
	"summary": "",
	"abstract": "The present invention provides a method and apparatus for tracking distributed statistical data retrieval in a network device. Periodically, statistical data is gathered by processes on one or more remote cards in a network device and transferred to a central process. The distributed processes register each different type of statistical data to be gathered with the central process allowing the central process to maintain an accurate inventory of distributed processes expected to send particular statistical data. Tracking statistical data gathering processes allows the central process to consistently report data while allowing each process to remain modular. In addition, tracking increases a network device's scalability. For example, new processes may be added to a network device without affecting existing processes. Moreover, tracking increases a network device's availability. For instance, tracking provides fault tolerance, such that if one statistical data gathering process fails the other statistical data gathering processes are not affected and data continues to be reported. Importantly, data not reported by a registered process may be quickly detected and, where necessary, reported to a network management system. Tracking also provides for auto deregistration, for example, when hot swapping of cards out of a network device, tracking deregisters processes as necessary.",
	"url": null,
	"owner": "Ciena Corporation",
	"publication_number": "06934749",
	"publication_date": "2005-08-23",
	"application_number": "09669861",
	"application_date": "2000-09-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enhanced mobile communication device with extended radio, and applications",
	"summary": "",
	"abstract": "An enhanced mobile communication device, or on-board equipment, communicates according an enhanced ad-hoc mode of communication and an infrastructure mode of communication. A method switches between the enhanced ad-hoc mode of communications and the infrastructure mode of communications. The enhanced mobile communication device receives content and updates a geographic database. The enhanced mobile communication device reads the geographic database and transmits content. Data, such as location information from global positioning satellite signals, is collected by the enhanced mobile communication. On-board software of the enhanced mobile communication device communicates with the geographic database for computing routes, paths, and turn-by-turn direction.",
	"url": null,
	"owner": "Circumnav Networks, Inc.",
	"publication_number": "06925378",
	"publication_date": "2005-08-02",
	"application_number": "10437205",
	"application_date": "2003-05-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods for communicating between elements in a hierarchical floating car data network",
	"summary": "",
	"abstract": "Participating vehicles and egress points communicate with each other according to an infrastructure mode. Participating vehicles communicate with other participating vehicles according to an ad-hoc mode. In an infrastructure mode packet transmitting method for a participating vehicle, beacon service table packets, vehicle service table packets, or packet bursts are created and transmitted. In an infrastructure mode packet receiving method for a participating vehicle, beacon service table packets, vehicle service table packets, packet bursts, or negative acknowledgement packets are received. In an infrastructure mode packet transmitting method for an egress point, an enhanced beacon packet or a negative acknowledgement packet is created and transmitted. In an infrastructure mode packet receiving method for an egress point, beacon service table packets, vehicle service table packets, or packets bursts are received. In an ad-hoc mode packet transmitting method for a participating vehicle, beacon service table packets, vehicle service table packets, packet bursts, or positive acknowledgement packets are created and transmitted. In an ad-hoc mode packet receiving method for a participating vehicle, beacon service table packets, vehicle service table packets, packet bursts, or positive acknowledgement packets are received.",
	"url": null,
	"owner": "CircumNav Networks, Inc.",
	"publication_number": "06862500",
	"publication_date": "2005-03-01",
	"application_number": "10436926",
	"application_date": "2003-05-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for reduced codebook vector quantization",
	"summary": "",
	"abstract": "The present invention extends the generalized Lloyd algorithm (GLA) for vector quantizer (VQ) codebook improvement and codebook design to a new linearly-constrained generalized Lloyd algorithm (LCGLA). The LCGLA improves the quality of VQ codebooks, by forming the codebooks from linear combinations of a reduced set of base codevectors. The present invention enables a principled approach for compressing texture images in formats compatible with various industry standards. New, more flexible compressed texture image formats are also made possible with the present invention. The present invention enhances signal compression by improving traditional VQ approaches through the integrated application of linear constraints on the multiple pattern and signal prototypes that represent a single pattern or block of signal samples.",
	"url": null,
	"owner": "Cisco Systems Canada Co.",
	"publication_number": "06968092",
	"publication_date": "2005-11-22",
	"application_number": "09934992",
	"application_date": "2001-08-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for contacting a customer support line on customer's behalf and having a customer support representative contact the customer",
	"summary": "",
	"abstract": "A method is provided in an application server configured for responding to hypertext transport protocol (HTTP) requests. The method includes storing, in response to a first HTTP request, an XML document that specifies for a user, a call number of a second party. The stored XML document is retrieved based on a second HTTP request by the user. A first HTML document is generated based on the retrieved XML document. The first HTML document has instructions including the call number for accessing the second party. A second HTML document is generated based on a prescribed input received from the second party. The second HTML document has instructions for connecting the second party with the user. Hence, a user may speak with a called party without ever having to remain on hold.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "06973617",
	"publication_date": "2005-12-06",
	"application_number": "09577320",
	"application_date": "2000-05-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for providing server state and attribute management for multiple-threaded voice enabled web applications",
	"summary": "",
	"abstract": "An application server generates and maintains a server-side data record, also referred to as a u201cbrownieu201d, that includes application state information and user attribute information for multiple users within a single session controlled by a web-based browser. The brownie includes a session identifier that uniquely identifies the session, and a subsession identifier that uniquely identifies each corresponding user of the application session. As each new user is added to the session, for example by initiating a call to the new user, the application server stores the subsession identifier and corresponding application state information for the new user in the same brownie. In response to receiving a second web page request from the browser that includes the session identifier, the application server initiates a new web application instance, and recovers the brownie from the memory based on the session identifier included in the second page request.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "06883015",
	"publication_date": "2005-04-19",
	"application_number": "09538899",
	"application_date": "2000-03-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and methods for providing an event driven notification over a network to a telephony device",
	"summary": "",
	"abstract": "The invention is directed to techniques for notifying a client device of the occurrence of an event using a web application activated based on an application-state data record. A persistent process monitors incoming data for the occurrence of an event and provides the application-state data record that can be used to activate a session of an event notification application. The persistent process provides an event indicator to a proxy browser which then activates the event notification application. The event notification application provides an event notification to the proxy browser, which in turn provides an audio notification of the event to the client device, which may be a telephony device or other two-way audio communication device. The user of the client device can then respond to the event notification or otherwise interact with the event notification application via the proxy browser.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "06907455",
	"publication_date": "2005-06-14",
	"application_number": "09606727",
	"application_date": "2000-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application server for self-documenting voice enabled web applications defined using extensible markup language documents",
	"summary": "",
	"abstract": "A unified web-based voice messaging system provides voice application control between a web browser and an application server via an hypertext transport protocol (HTTP) connection on an Internet Protocol (IP) network. The application server, configured for executing a voice application defined by XML documents, also is configured for describing the voice application by collecting, for each of the XML documents, attributes describing execution of the XML documents in an application runtime environment, and generating for storage on a tangible medium an output file that describes the voice application based on at least a portion of the collected attributes selected by a user. Hence, the voice applications defined by XML documents can be considered as self-documenting, and the act of writing the applications using XML documents generates the necessary information for creating and formatting documentation in accordance with the attributes (i.e., context) provided by the application runtime environment.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "06847999",
	"publication_date": "2005-01-25",
	"application_number": "09588294",
	"application_date": "2000-06-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application server providing personalized voice enabled web application services using extensible markup language documents",
	"summary": "",
	"abstract": "A unified web-based voice messaging system provides voice application control between a web browser and an application server via an hypertext transport protocol (HTTP) connection on an Internet Protocol (IP) network. The application server, configured for executing a voice application defined by XML documents, selects an XML document for execution of a corresponding voice application operation based on a determined presence of a user-specific XML document that specifies the corresponding voice application operation. The application server, upon receiving a voice application operation request from a browser serving a user, determines whether a personalized, user specific XML document exists for the user and for the corresponding voice application operation. If the application server determines the presence of the personalized XML document for a user-specific execution of the corresponding voice application operation, the application server dynamically generates a personalized HTML page having media content and control tags for personalized execution of the voice application operation; however if the application server determines an absence of the personalized XML document for the user-specific execution of the corresponding voice application operation, the application server dynamically generates a generic HTML page for generic execution of the voice application operation. Hence, a user can personalize any number of voice application operations, enabling a web-based voice application to be completely customized or merely partially customized.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "06901431",
	"publication_date": "2005-05-31",
	"application_number": "09567223",
	"application_date": "2000-05-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Arrangement for accessing an IP-based messaging server by telephone for management of stored messages",
	"summary": "",
	"abstract": "An arrangement for accessing messages in an IMAP message store via telephone using a unified web-based voice messaging system as an e-mail client for the IMAP message store. The unified Web-based voice messaging system includes a browser configured for generating an audio file that stores received voice signals specifying a messaging operation, and an application server. The application server is configured for outputting an HTML page in response to a user request via the HTTP connection, the HTML page having an XML element that defines data for an audio operation to be performed by an executable audio resource within a web browser or a proxy browser. The application server includes a speech recognition process configured for identifying the messaging operation by interpreting the audio file. Upon identifying the messaging operation and associated operand, the application server outputs a function call for the identified messaging operation to the IMAP message store. The application server also includes text to speech capabilities, enabling an e-mail message or fax message to be converted to an audible format for playback by the browser for the telephony user. Hence, a telephony user can access and manage voice, e-mail, or fax messages stored on the IMAP message store.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "06857008",
	"publication_date": "2005-02-15",
	"application_number": "09551914",
	"application_date": "2000-04-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Arrangement for controlling and logging voice enabled web applications using extensible markup language documents",
	"summary": "",
	"abstract": "A unified web-based voice messaging system provides voice application control between a web browser and an application server via an hypertext transport protocol (HTTP) connection on an Internet Protocol (IP) network. The web browser receives an HTML page from the application server having an XML element that defines data for an audio operation to be performed by an executable audio resource. The application server executes the voice-enabled web application by runtime execution of extensible markup language (XML) documents that define the voice-enabled web application to be executed. The application server includes a runtime environment that establishes an efficient, high-speed connection to a web server. The application server, in response to receiving a user request from a user, accesses a selected XML page that defines at least a part of the voice application to be executed for the user. The XML page may describe any one of a user interface such as dynamic generation of a menu of options or a prompt for a password, an application logic operation, or a function capability such as generating a function call to an external resource. The application server then parses the XML page, and executes the operation described by the XML page, for example dynamically generating an HTML page having voice application control content, or fetching another XML page to continue application processing. In addition, the application server may access an XML page that stores application state information, enabling the application server to be state-aware relative to the user interaction. Hence, the XML page, which can be written using a conventional editor or word processor, defines the application to be executed by the application server within the runtime environment, enabling voice enabled web applications to be generated and executed without the necessity of programming language environments.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "06952800",
	"publication_date": "2005-10-04",
	"application_number": "09514642",
	"application_date": "2000-02-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Arrangement for local recording of a voice message for delivery to destination messaging system via an IP network",
	"summary": "",
	"abstract": "A recording device at a calling party premises is configured for recording a message for a messaging subscriber by the calling party, and sending the recorded message, via a data network, to a destination message store serving the messaging subscriber. The recording device sends the recorded message based on messaging subscriber attributes retrieved via the data network. Hence, a calling party can utilize a recording device at the calling party premises for recording a message for a messaging subscriber, and sending the message via the data network to a destination message store, eliminating the necessity of establishing any voice-grade connection or a media connection between the calling party and any server (e.g., messaging server, media gateway server, etc.).",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "06947528",
	"publication_date": "2005-09-20",
	"application_number": "10057889",
	"application_date": "2002-01-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Browser-based arrangement for developing voice enabled web applications using extensible markup language documents",
	"summary": "",
	"abstract": "A unified web-based voice messaging system provides voice application control between a web browser and an application server via an hypertext transport protocol (HTTP) connection on an Internet Protocol (IP) network. The application server executes the voice-enabled web application by runtime execution of a first set of extensible markup language (XML) documents that define the voice-enabled web application to be executed. The application server generates an HTML form specifying selected application parameters from an XML document executable by the voice application. The HTML form is supplied to a browser, enabling a user of the browser to input or modify application parameters for the corresponding XML document into the form. The application server inserts the received input application parameters into the XML document, and stores the document.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "06954896",
	"publication_date": "2005-10-11",
	"application_number": "10422933",
	"application_date": "2003-04-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Configurable network router",
	"summary": "",
	"abstract": "A method is provided to allocate bandwidth from a first node to a second node in a optical network. The method begins by accepting a request from an end-user, who requests a virtual path between the first node and the second node. The first and second nodes are ones of a number of such nodes. Each one of the nodes is coupled to at least one other node by at least one of a number of optical links. The nodes and links form the optical network. The virtual path has a bandwidth requirement associated therewith. Next, the service provider determines an amount of bandwidth available between the first and the second nodes. The service provider then allocates at least a portion of the amount of bandwidth available between the first and second nodes equal to the bandwidth requirement, so long as the bandwidth requirement is not greater than the amount of bandwidth available between the first and second nodes.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "06950391",
	"publication_date": "2005-09-27",
	"application_number": "10680940",
	"application_date": "2003-10-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data communication among processes of a network component",
	"summary": "",
	"abstract": "A method for communicating data among processes of a network component is disclosed. A process communication module receives a request from a first process of a network component. The request requests a message buffer operable to store data associated with the first process. A message buffer is allocated to the first process in response to the request, and the data is stored in the message buffer. The message buffer is inserted into a message queue corresponding to a second process of the network component. The second process is provided access to the message buffer to read the data.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "06847991",
	"publication_date": "2005-01-25",
	"application_number": "09948220",
	"application_date": "2001-09-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generic command interface for multiple executable routines having character-based command tree",
	"summary": "",
	"abstract": "A processor based system includes a parser, configured for identifying whether an input word received from a user is a new command word relative to a character-based command parse tree, and a tree management process configured for managing the character-based command parse tree. The character-based command parse tree includes multiple element levels for respective character positions for each known command word, and at least one character element at each level. Each character element specifies at least one corresponding character component and a corresponding at least one index value. The parser determines whether the input word is a new command word based on whether the characters of the input word match successive elements, with the last character matching an end node, within the character-based parse tree; if the parser determines that the input word is a new command word, the tree management process performs update operations to accommodate the new command word, including updating the character-based command parse tree with the new command word.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "06980996",
	"publication_date": "2005-12-27",
	"application_number": "10798963",
	"application_date": "2004-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing processes of a network component",
	"summary": "",
	"abstract": "A system for managing a network component of a communication network is disclosed. A process manager manages processes of a network component. A process communication module communicates data among the processes. A redundancy manager controls the processes of the network component in response to mate processes of a mate network component related as a redundant peer with the network component. An operating system interface provides an interface between the processes and an operating system.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "06888937",
	"publication_date": "2005-05-03",
	"application_number": "09947743",
	"application_date": "2001-09-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for distributing and updating group controllers over a wide area network using a tree structure",
	"summary": "",
	"abstract": "Apparatus and computer-readable media are disclosed for establishing secure multicast communication among multiple multicast proxy service nodes of domains of a replicated directory service that spans a wide area network. Domains are organized in a logical tree. Each domain has a logical tree that organizes the multicast proxy service nodes, a group manager at the root node, a multicast key distribution center, multicast service agent, directory service agent and key distribution center. Multicast proxy service nodes store a group session key and a private key. Replication of the directory performs key distribution. A multicast group member joins or leaves the group by publishing message. The local key distribution center and multicast service agent obtain the publisher's identity from a local directory service agent. Based on the identity, a secure channel is established with the directory service agent in the group member's domain. Keys of the binary tree branch that contains the joining or leaving node are updated, and an updated group session key and a new private key are received.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "06901510",
	"publication_date": "2005-05-31",
	"application_number": "10739687",
	"application_date": "2003-12-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for isolating faults in a switching matrix",
	"summary": "",
	"abstract": "A signal router is described. The signal router includes a switching matrix, an error detector and a controller. The switching matrix includes a first number of inputs and a second number of outputs, and is configured to receive an information stream. The error detector is coupled to one of the second number of outputs, and is configured to generate error information by virtue of being configured to detect errors in the information stream. Likewise, the controller is coupled to the switching matrix and error detector. The controller is configured to select one of the first number of inputs, receive error information from the error detector, and configure the switching matrix to couple the selected input to one of the outputs.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "06856600",
	"publication_date": "2005-02-15",
	"application_number": "09477217",
	"application_date": "2000-01-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for application development",
	"summary": "",
	"abstract": "A system for application development is disclosed. The system includes programming entities, which include a workflow and a container. A contract specifies an interaction between at least two programming entities.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "06889375",
	"publication_date": "2005-05-03",
	"application_number": "09715978",
	"application_date": "2000-11-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Restartable spanning tree for high availability network systems",
	"summary": "",
	"abstract": "A method and apparatus for continuing the operation of a spanning tree protocol at a network device despite crashes or failures at that device. A supervisor card contained in the network device is designated an active supervisor, while all other supervisor cards are designated standby supervisors. The active supervisor runs the spanning tree protocol, and informs the standby supervisors of the states of ports, but not of the identity of the root or designated bridges. When a crash or failure occurs at the active supervisor, one of the standby supervisors is immediately designated to be the new active supervisor. The newly active supervisor reviews the port state, and queries the line cards to determine whether that port state information is still valid. The newly active supervisor adopts the valid port state information, leaving those ports in their current spanning tree port state.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "06898189",
	"publication_date": "2005-05-24",
	"application_number": "09644377",
	"application_date": "2000-08-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Scalable IP-based notification architecture for unified messaging",
	"summary": "",
	"abstract": "A notification architecture utilizes multiple processes configured for managing notification operations based on reception of SMTP-based messages within IMAP based message stores. The notification architecture enables use of multiple instances of a notification process, each configured for receiving notification messages for respective subscribers from messaging sources according to a prescribed open protocol such as Internet Protocol. Each notification process accesses subscriber profile information from an open protocol-based subscriber directory based on the received notification messages. Each notification process determines, for each received notification message, the subscriber's notification preference based on the accessed profile information, and selectively outputs a notification delivery message according to a prescribed open protocol to at least one notification delivery process within the notification architecture based on the subscriber's notification preference. Each notification process may have access via the prescribed open protocol to multiple notification delivery processes, each configured for outputting a notification to a subscriber's notification device according to a corresponding device protocol. Multiple instances of each type of notification delivery process may also be utilized for increased capacity. Hence, subscribers may be notified of events according to their respective preferences, including subscriber device type, or time of notification. Moreover, the notification architecture can be scaled without adversely affecting any existing instances of the notification process or the notification delivery processes.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "06874011",
	"publication_date": "2005-03-29",
	"application_number": "09629051",
	"application_date": "2000-07-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Techniques for configuring network devices with consistent forms for getting and setting device properties",
	"summary": "",
	"abstract": "A page for sending to a client process from a server during network management incorporates a form having a plurality of input fields and a submit button. The form is associated with either a first submit method or a second submit method. The first submit method is for obtaining information about a state of a particular network device. The second submit method is for changing the state of a particular network device. The page is sent to the client process. In response to activation of the submit button in the client process, routines are executed to operate on the particular network device based on which submit method was associated with the form. Using these techniques, a single set of input fields can be designed for both displaying and editing the state of network devices.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "06874021",
	"publication_date": "2005-03-29",
	"application_number": "09775862",
	"application_date": "2001-02-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Virtual loop carrier system with cobra interface for gateway control",
	"summary": "",
	"abstract": "A loop carrier system includes a home local area network having plural telephone modules and a hub coupled to in-home telephone wiring. The telephone modules and the hub communicate voice signals over the in-home wiring in a dedicated frequency band above baseband POTS. The hub converts between voice signals and voice packets and is connected to a network access device for transferring the voice packets from the home local area network to a telecommunications network which routes the voice packets to a gateway. The gateway converts between the voice packets and a circuit format compatible with a local digital voice switch. A network element includes a Common Object Request Broker Architecture (CORBA)-based server, CORBA-based managed objects accessible by the CORBA-based server and a CORBA-based applications programming interface (API). The CORBA-based API is coupled to an external operations support system which can manage the plural CORBA-based managed objects directly.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "06915521",
	"publication_date": "2005-07-05",
	"application_number": "09724557",
	"application_date": "2000-11-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for determining a program neighborhood for a client node in a client-server network using markup language techniques",
	"summary": "",
	"abstract": "An apparatus and method for determining a program neighborhood of a client node in a client-server network is described. The program neighborhood of the client node includes application programs hosted by application servers on the network. The present invention enables a user of a client node to learn of these application programs. The user is not required to know where to find such applications or to manually establish links to such applications. To make the client node aware of its program neighborhood, a host server collects application-related information corresponding to application programs hosted by the servers in the network. The application-related information can include the application name, the server location of the application, minimum capabilities required of client nodes for executing the application, and those users who are authorized to use that application. User credentials are received from the client system. The user credentials are used to filter the application-related information. Information representing those application programs that are available to the client node is transmitted from the host server to the client system for display. In a Windows-based client node, the information can be represented by a graphical icon for each available application program.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "06928469",
	"publication_date": "2005-08-09",
	"application_number": "09390928",
	"application_date": "1999-09-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for distributed program execution with server-based file type association",
	"summary": "",
	"abstract": "A method for enabling distributed program execution. In one aspect, the method includes the steps of presenting a graphical depiction of a data file stored on a server system and receiving a selection of the graphical depiction. The method also includes the steps of transmitting the selection of the graphical depiction of the data file to a server system and receiving a request to execute an executable program associated with the selected data file. The request is transmitted by a server system. The method additionally includes executing the executable program associated with the selected data file.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "06952714",
	"publication_date": "2005-10-04",
	"application_number": "09970037",
	"application_date": "2001-10-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Delivery of navigation data for playback of audio and video content",
	"summary": "",
	"abstract": "In accordance with the present invention a filtering process is based on the output side of a multimedia decoder. A navigator, located at a server system, monitors the current play position of multimedia content at a consumer system and compares that position with navigation objects. Each navigation object defines a start position, a stop position, and a filtering action to perform on the portion of the multimedia content that begins at the start position and ends at the stop position. When the current play position falls within the portion of multimedia content defined by a particular navigation object, the navigator sends the filtering action to the consumer system for processing. Filtering actions include skipping, muting, reframing, etc., the portion of multimedia content defined by a navigation object. Alternatively, the navigator may be located at a consumer system and the server system may provide access to the navigation objects (e.g. download) so that the consumer system monitors and filters the multimedia content based on the received navigation objects. A variety of systems may be used to implement the present invention, such as computer systems (consumer and server), television systems, and audio systems.",
	"url": null,
	"owner": "Clearplay, Inc.",
	"publication_number": "06889383",
	"publication_date": "2005-05-03",
	"application_number": "09695102",
	"application_date": "2000-10-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multimedia content navigation and playback",
	"summary": "",
	"abstract": "In accordance with the present invention, a filtering process is based on the output side of a multimedia decoder. A navigator monitors the current play position of the multimedia content and compares that position with navigation objects. Each navigation object defines a start position, a stop position, and an filtering action to perform on the portion of the multimedia content that begins at the start position and ends at the stop position. When the current play position falls within the portion of multimedia content defined by a particular navigation object, the navigator activates the filtering action that was assigned to the navigation object. Filtering actions include skipping, muting, reframing, etc., the portion of multimedia content defined by a navigation object. A variety of systems may be used to implement the present invention, such as computer systems (consumer and server), television systems, and audio systems.",
	"url": null,
	"owner": "Clearplay, Inc.",
	"publication_number": "06898799",
	"publication_date": "2005-05-24",
	"application_number": "09694873",
	"application_date": "2000-10-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for a distributed analytical and diagnostic software over the intranet and internet environment",
	"summary": "",
	"abstract": "An apparatus for monitoring the medical condition of a patient, including a monitoring device which during use monitors one or more clinical features of the patient; a predictive instrument arranged to receive output from the monitoring device and programmed to compute a probability of a medical outcome or diagnosis based on the monitored one or more clinical features, the predictive instrument further programmed to compute that probability by executing an algorithm which models the medical outcome or diagnosis; and an interface through which a user enters information characterizing the patient, wherein the predictive instrument is further programmed to request that algorithm from a remote location.",
	"url": null,
	"owner": "Clinical Care Systems, Inc.",
	"publication_number": "06917829",
	"publication_date": "2005-07-12",
	"application_number": "09925612",
	"application_date": "2001-08-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Sharing components between programming languages by use of polymorphic proxy",
	"summary": "",
	"abstract": "A method and system for representing and implementing a concept between two functional domains (e.g., programming languages) by using a proxy component in a first domain to wrap a component of a second domain, where the proxy component has a semantic usability in the first domain closely corresponding to the semantic usability of the underlying component from the second domain. Further, provided is a method and system for automatically generating such a proxy component. Such proxy components may be used to gradually transform a digital entity (e.g., a software application) from a first digital domain to a second digital domain. Further, such proxy components may be generated using models that transform a component of a first domain to a component (e.g., a proxy component) of a second domain.",
	"url": null,
	"owner": "Codemesh, Inc.",
	"publication_number": "06901588",
	"publication_date": "2005-05-31",
	"application_number": "09551246",
	"application_date": "2000-04-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "User interface for a multi-dimensional data store",
	"summary": "",
	"abstract": "The invention provides a means of interacting with a subset of a large amount of related information that assists in providing a user with the overall understanding necessary to execute rapid and knowledgeable decision-making. It consists of a spreadsheet-like client application which interacts with a planning data repository (PDR) and its associated computing resources. All of the data used in computing the values shown in the spreadsheet cells are derived directly from the PDR. Any changes made by the user to the displayed data are sent to the PDR and, when validated, incorporated into the overall data following a two-step process of u2018calculateu2019 and u2018saveu2019. At the user's desktop machine, the user views a window which contains information temporarily stored locally within the client computer for use by a script application. Not all of the information stored for the script application is necessarily visible on the display at any one time, and scroll bars are provided to permit the user to view information stored but not currently visible. The data shown on the client computer screen may be a representation of a planning cube (or data cube) that is a subset of the Planning Data Repository data. In a further embodiment of the invention the user is able to change the various relationships amongst the data and these alterations sent to the PDR for computation.",
	"url": null,
	"owner": "Cognos Incorporated",
	"publication_number": "06907428",
	"publication_date": "2005-06-14",
	"application_number": "10015984",
	"application_date": "2001-11-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program product for a customer-centric collaborative protocol",
	"summary": "",
	"abstract": "A system, method and computer program product are provided for affording customer-centric collaborative decision making in a business-to-business framework. Initially, a minimum set of attributes is defined. Thereafter, first information regarding each of the minimum set of attributes is received from a receiving business. Second information is then received regarding proposed products or services in terms of the minimum set of attributes. Such second information is received from a supplying business. In use, a decision process is executed based on the first information and the second information as to which products or services is suitable for the receiving business.",
	"url": null,
	"owner": "Collaborative Decision Platforms, LLC",
	"publication_number": "06901393",
	"publication_date": "2005-05-31",
	"application_number": "09708244",
	"application_date": "2000-11-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program product for a collaborative decision platform",
	"summary": "",
	"abstract": "A system, method and computer program product are afforded for providing a collaborative decision platform adapted to run on a computer. Initially, an application capable of performing decision logic is executed. Information is then retrieved from a database in accordance with the decision logic. Information is also received from a user in accordance with the decision logic utilizing a user interface. The information is then processed utilizing the decision logic. In use, the foregoing steps are carried out by a collaborative decision platform capable of retrieving and receiving the information, and processing such information for different purposes by executing different applications each capable of performing different decision logic.",
	"url": null,
	"owner": "Collaborative Decision Platforms, LLC.",
	"publication_number": "06876991",
	"publication_date": "2005-04-05",
	"application_number": "09708154",
	"application_date": "2000-11-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "File transfer system and method",
	"summary": "",
	"abstract": "A system for transferring files between a source location and a target location can transfer different portions of the file across two or more logical channels. The portions of the file transmitted over the logical channels can be transmitted independently. In addition, the portions of the file can be transmitted over one or more logical channels asynchronously. The logic controls for managing the file transfer can be distributed over multiple systems located at separate locations and operating independently. During the transfer of the file, markers are generated that point to the location in memory where the file is stored. These markers obviate the need to store the file in a buffer or an archive log during the file transfer.",
	"url": null,
	"owner": "CommerceQuest, Inc.",
	"publication_number": "06850962",
	"publication_date": "2005-02-01",
	"application_number": "09306790",
	"application_date": "1999-05-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for disaster recovery",
	"summary": "",
	"abstract": "A method for disaster recovery includes copying at least a portion of information from a first database to a backup system as backup information. The method also includes storing an incremental change in a second database. The incremental change represents a change to at least a portion of the information in the first database. The method further includes restoring the first database using at least one of the backup information and the incremental change.",
	"url": null,
	"owner": "Computer Associates Think, Inc.",
	"publication_number": "06981177",
	"publication_date": "2005-12-27",
	"application_number": "10397511",
	"application_date": "2003-03-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for synchronizing copies of data in a computer system",
	"summary": "",
	"abstract": "An improved synchronization system and method for copies of data in a computer system. The computer system comprises a cluster, wherein each computer in the cluster may store a local copy of a data set along with a validity flag for the local copy. The computer system further comprises a coupling system which is connected to each of the computers in the cluster through a coupling system interface program, wherein the coupling system is configured to coordinate the data sharing and workload of the cluster. The computer system also comprises an external data storage shared by the computers in the cluster. One of the computers may read a first copy of the data set from a primary data set on the external data storage. The computer may then store the first copy locally and set a first validity flag to indicate that the first copy is valid. Another computer, server, or application program may make a second copy of the primary data set and set a second validity flag to valid. If the first copy is modified, then the second validity flag is set to invalid. The second copy may then be replaced with the modified copy, and the second validity flag may be set to valid again. A coupling system interface program may comprise an application programming interface for data synchronization, wherein the application programming interface is accessible by a plurality of application programs.",
	"url": null,
	"owner": "Computer Sciences Corporation",
	"publication_number": "06952741",
	"publication_date": "2005-10-04",
	"application_number": "09345698",
	"application_date": "1999-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for notification of an event",
	"summary": "",
	"abstract": "A method and a system for notifying a subscriber of the occurrence of an event, which may be a messaging event, in which a message is received by a messaging service associated with the particular subscriber; or a non-messaging event, such as the occurrence of a particular stock price. For example, an e-mail message is optionally received by the mailbox of the subscriber, which is detected by the notification request sender according to the present invention. The notification request sender then prepares a notification request according to a standard network protocol, such as HTTP for example, for transmission to a notification server for the subscriber. This server parses the notification request, and notifies the subscriber with a message according to a particular messaging service, such as an SMS (short message system) message sent to a cellular telephone of the subscriber, for example. Optionally and preferably, if a plurality of such messaging systems for notifying the subscriber is available, then the notification server determines the best messaging system or systems for notifying the subscriber, for example according to the preference of the subscriber.",
	"url": null,
	"owner": "Comverse Ltd.",
	"publication_number": "06965917",
	"publication_date": "2005-11-15",
	"application_number": "09475147",
	"application_date": "1999-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for consolidation of multiple data sources",
	"summary": "",
	"abstract": "A method for consolidating the information from multiple information sources so as to provide a uniform set of screens for an agent. All of the information sources are automatically linked in a coherent manner, which is defined by the user. The provision of an information item into a field automatically accesses user-specified information items from the various information sources. The station () receives () the initial information item and then sends () this information item to the sources specified by the information field, receives additional information items from these sources, and displays or presents the information items received in any desired media type.",
	"url": null,
	"owner": "Concerto Software, Inc.",
	"publication_number": "06925607",
	"publication_date": "2005-08-02",
	"application_number": "09982514",
	"application_date": "2001-10-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Demarcated digital content and method for creating and processing demarcated digital works",
	"summary": "",
	"abstract": "Flags are used to mark portions of content in a digital work to permit marking or demarcation of portions of the document. The demarcated portions can be handled in various ways. For example, different usage rights can be applied to demarcated portions, the demarcated portionis can be culled for use as a summary, or the like. The flags can be used to demarcate portions of content that has been downloaded to keep track of payment and download status and thus add flexibility to electronic distribution of content. A flag usage rights element can be attached to limit and control access to flags in a desired manner.",
	"url": null,
	"owner": "ContentGuard Holdings, Inc.",
	"publication_number": "06973445",
	"publication_date": "2005-12-06",
	"application_number": "09867754",
	"application_date": "2001-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for creating browser-based user interface applications using a framework",
	"summary": "",
	"abstract": "A framework and method of programming web-based interfaces using management classes for the management of behavior regarding specific web elements wherein said code relating to said management classes is loaded into a user's browser and primarily executed within the client-side browser environment.",
	"url": null,
	"owner": "Convergys CMG Utah",
	"publication_number": "06973625",
	"publication_date": "2005-12-06",
	"application_number": "10127042",
	"application_date": "2002-04-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Null-packet transmission from inside a firewall to open a communication window for an outside transmitter",
	"summary": "",
	"abstract": "A high-bandwidth direct communication path between two clients is used for voice or video calls over the Internet. An opening or a window in a firewall is made for the direct path by sending a null packet out from inside the firewall. The null packet can be a UDP packet directed to a UDP port of the other client. Initially, each client makes a TCP connection to port of an external manager. Each client registers its UDP port number with the external manager. A call request from one client to the external manager results in a message from the external manager to the other client. The other client then creates the window in its firewall by transmitting the null UDP packet. Then the external manager is notified and tells the calling client to begin sending UDP packets directly to the other client through the firewall window.",
	"url": null,
	"owner": "Crystal Voice Communications",
	"publication_number": "06978383",
	"publication_date": "2005-12-20",
	"application_number": "09682084",
	"application_date": "2001-07-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Modular entertainment and gaming system configured for network boot, network application load and selective network computation farming",
	"summary": "",
	"abstract": "A secure and modular architecture for monitoring and controlling clusters of pay entertainment and gaming devices. The architecture allows flexible and secure use of state-of-the-art multimedia and Internet technologies to attract the younger player generation used to flashy and networked games. Cash or cash-less entertainment and gaming devices are supported.",
	"url": null,
	"owner": "Cyberscan Technology, Inc.",
	"publication_number": "06908391",
	"publication_date": "2005-06-21",
	"application_number": "10120647",
	"application_date": "2002-04-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Modular entertainment and gaming system configured for processing raw biometric data and multimedia response by a remote server",
	"summary": "",
	"abstract": "A secure and modular architecture for monitoring and controlling clusters of pay entertainment and gaming devices. The architecture allows flexible and secure use of state-of-the-art multimedia and Internet technologies to attract the younger player generation used to flashy and networked games. Cash or cash-less entertainment and gaming devices are supported.",
	"url": null,
	"owner": "Cyberscan Technology, Inc.",
	"publication_number": "06945870",
	"publication_date": "2005-09-20",
	"application_number": "10120668",
	"application_date": "2002-04-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Modular entertainment and gaming systems",
	"summary": "",
	"abstract": "A secure and modular architecture for monitoring and controlling clusters of pay entertainment and gaming devices. The architecture allows flexible and secure use of state-of-the-art multimedia and Internet technologies to attract the younger player generation used to flashy and networked games. Cash or cash-less entertainment and gaming devices are supported.",
	"url": null,
	"owner": "Cyberscan Technology, Inc.",
	"publication_number": "06916247",
	"publication_date": "2005-07-12",
	"application_number": "10120816",
	"application_date": "2002-04-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for facilitating microcontroller programming",
	"summary": "",
	"abstract": "A method to facilitate circuit design. First, a schematic and data sheet for a selected module may be displayed. Next, in response to a request for a position for the module among available resources (e.g., programmable system blocks), a potential position for the module is computed. The position is displayed on a graphical user interface by mapping the module to one or more programmable system blocks. Additional user modules may then be selected and placed. After allowing the user to configure the circuit by selecting circuit parameters and pin-outs, various items are automatically generated to facilitate programming the target device. For example, application programming interfaces (APIs) for programming an operation of the modules, source code for realizing the modules in the resources, an interrupt vector table, and a data sheet for the circuit may be automatically generated.",
	"url": null,
	"owner": "Cypress Semiconductor Corp.",
	"publication_number": "06966039",
	"publication_date": "2005-11-15",
	"application_number": "09989570",
	"application_date": "2001-11-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Storing of global parameter defaults and using them over two or more design projects",
	"summary": "",
	"abstract": "A system and method for graphically displaying global resources and their associated parameter values and apply the global resources across multiple design projects. The system and method also provide a graphical interface which displays the possible parameter values of an associated global resource. This graphical interface utilizes pop up menu to for viewing the possible parameter values and the selection of the current parameter value. The system and method also provide tracking and updating of the hardware resources which utilize the parameter values of the global resources. Further, the system also allows the storage of these parameters values of the global resources. By storing these parameter values of the global resources, these parameter values can be set as default global settings. These default global settings can be recalled and associated with different projects without manual entry of the parameter values.",
	"url": null,
	"owner": "Cypress Semiconductor Corporation",
	"publication_number": "06901563",
	"publication_date": "2005-05-31",
	"application_number": "09989761",
	"application_date": "2001-11-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for enterprise business process management",
	"summary": "",
	"abstract": "An enterprise business process management system and method for definition and execution of business processes formed from portions of one or more business applications present in an enterprise. The enterprise business process management system includes a server, a router, and an interface for defining and executing such business processes. A data quality business process detects, corrects, analyzes, and reports quantitative and qualitative characteristics of application data and transactional data present in the enterprise. An interface module is provided by which a user may select and define function definition information for a business process.",
	"url": null,
	"owner": "Data Quality Solutions, Inc.",
	"publication_number": "06920474",
	"publication_date": "2005-07-19",
	"application_number": "10396134",
	"application_date": "2003-03-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Failover system and method for cluster environment",
	"summary": "",
	"abstract": "A failover method and system is provided for a computer system having at least three nodes operating as a cluster. One method includes the steps of detecting failure of one node, determining the weight of at least two surviving nodes, and assigning a failover node based on the determined weights of the surviving nodes. Another method includes the steps detecting failure of one node and determining the time of failure, and assigning a failover node based in part on the determined time of failure. This method may also include the steps of determining a time period during which nodes in the cluster are heavily utilized, and assigning a failover node that is not heavily utilized during that time period.",
	"url": null,
	"owner": "Dell Products L.P.",
	"publication_number": "06922791",
	"publication_date": "2005-07-26",
	"application_number": "09927047",
	"application_date": "2001-08-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for selecting a presentation mode",
	"summary": "",
	"abstract": "A presentation module associated with the BIOS of an information handling system, such as a portable computer, allows an intermediate level driver, such as a dynamic link library, to set the presentation display type. In one embodiment, a graphical user interface on a portable computer LCD calls a presentation dynamic link library to coordinate selection and unselection of a projector for displaying information from the portable computer. Upon selection of the projector, the presentation module detects the resolution of the projector and a resolution application programming interface sets the projector resolution of the portable computer to the highest supported resolution.",
	"url": null,
	"owner": "Dell Products L.P.",
	"publication_number": "06909406",
	"publication_date": "2005-06-21",
	"application_number": "10099245",
	"application_date": "2002-03-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Bus control module for improving legacy support",
	"summary": "",
	"abstract": "Systems, devices and methods are provided for expanding an interface to a computer. According to one aspect, a device is provided, including a backplane and at least one expansion card. The backplane includes at least one expansion slot and an upstream connector for connecting with the computer. The expansion card is adapted for coupling with the expansion slot. The expansion card includes at least one port to provide an interface with the computer. According to one aspect, an apparatus is provided, including a control module, a hub coupled to the control module and adapted for providing USB/USB+ outputs, and an external functions unit coupled to the hub and adapted for providing outputs.",
	"url": null,
	"owner": "Digi International Inc.",
	"publication_number": "06904530",
	"publication_date": "2005-06-07",
	"application_number": "09837626",
	"application_date": "2001-04-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Watermark encoding and decoding in imaging devices and imaging device interfaces",
	"summary": "",
	"abstract": "The disclosure details methods and systems for watermark encoding and decoding in imaging devices, such as printers and scanners, and imaging device interfaces. Watermark encoding and decoding functions are incorporated into printer and scanner image processing pipelines. Watermark encoders and decoders perform watermark encoding and decoding, respectively, on an image as it is being transferred from one stage of a printing or scanning process to another. In particular, streaming mode watermark encoders and decoders operate on sequential portions of the image in a sequential image stream passing from one stage to another. The streaming mode encoder and decoder may be incorporated in a printer or scanner driver in a computer connected to a printer or scanner peripheral or within a printer or scanner device.",
	"url": null,
	"owner": "Digimarc Corporation",
	"publication_number": "06952485",
	"publication_date": "2005-10-04",
	"application_number": "09659125",
	"application_date": "2000-09-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing interactive audio in a multi-channel audio environment",
	"summary": "",
	"abstract": "DTS Interactive provides low cost fully interactive immersive digital surround sound environment suitable for 3D gaming and other high fidelity audio applications, which can be configured to maintain compatibility with the existing infrastructure of Digital Surround Sound decoders. The component audio is stored and mixed in a compressed and simplified format that reduces memory requirements and processor utilization and increases the number of components that can be mixed without degrading audio quality. Techniques are also provided for u201cloopingu201d compressed audio, which is an important and standard feature in gaming applications that manipulate PCM audio. In addition, decoder sync is ensured by transmitting frames of u201csilenceu201d whenever mixed audio is not present either due to processing latency or the gaming application.",
	"url": null,
	"owner": "Digital Theater Systems, Inc.",
	"publication_number": "06931370",
	"publication_date": "2005-08-16",
	"application_number": "09432917",
	"application_date": "1999-11-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for computer aided manufacturing",
	"summary": "",
	"abstract": "A system and method is disclosed for centralizing knowledge and improving programming for manufacturing a part. An embodiment includes a method for manufacturing the part. First, a model of the part is received. Next, a predetermined rule is retrieved from a computer readable medium having a plurality of predetermined rules. A feature of the geometric model is selected by evaluating the retrieved predetermined rule and a process is determined that is associated with the feature. Based on the process, computer code is generated to manufacture the part on a computer controlled machine.",
	"url": null,
	"owner": "DP Technology Corp.",
	"publication_number": "06907313",
	"publication_date": "2005-06-14",
	"application_number": "10346473",
	"application_date": "2003-01-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Page prerequisite control mechanism",
	"summary": "",
	"abstract": "Apparatus and methods are provided for managing, tracking and controlling page prerequisites in a graphical user interface (GUI). According to one embodiment, in response to a request to display a destination page of the GUI and with reference to prerequisite information, one or more prerequisite pages associated with the destination page are identified. Then, a determination is made whether the requirements of an identified prerequisite page have been satisfied by invoking a method of an instance of a decider sub-component that causes stored information regarding the state of the identified prerequisite page to be retrieved from a current environment/context. Finally, the destination page is displayed if all the requirements of the one or more identified prerequisite pages have been satisfied, otherwise a prerequisite page having one or more requirements that remain unsatisfied is displayed.",
	"url": null,
	"owner": "E*Trade",
	"publication_number": "06922813",
	"publication_date": "2005-07-26",
	"application_number": "09826219",
	"application_date": "2001-04-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network-based system for the manufacture of parts with a virtual collaborative environment for design, development and fabricator selection",
	"summary": "",
	"abstract": "The invention relates generally to a comprehensive, integrated computer-based system and method for undertaking an engineering design and development effort in a virtual collaborative environment, identifying qualified fabricators for manufacturing a part design based on fabricator capability information stored in a global registry database substantially maintained by the fabricators themselves, and conducting a virtual bidding process whereby electronic representations of three dimensional model and specification data are provided by a central server. The central server further supports the bidding process by providing quasi-real time audio, video and graphics, and the contracts negotiation and formalization steps.",
	"url": null,
	"owner": "Eagle Engineering of America, Inc.",
	"publication_number": "06928396",
	"publication_date": "2005-08-09",
	"application_number": "09903522",
	"application_date": "2001-07-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Caching output from an object in an application server environment",
	"summary": "",
	"abstract": "A method and system of streaming a page of data are described. In one embodiment, an object corresponding to the page of data is allocated. The object is executed. If the object is a proxy, then the proxy is executed. If the object is a component, then the component is executed. If the object is a container, then the container is executed.",
	"url": null,
	"owner": "Eu2605Trade",
	"publication_number": "06964052",
	"publication_date": "2005-11-08",
	"application_number": "09484609",
	"application_date": "2000-01-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Inheritance of object's properties and out of different application contexts in properties file objects",
	"summary": "",
	"abstract": "Apparatus and methods are provided for accessing and retrieving attribute name value pairs from properties data stores, such as properties files. According to one embodiment, attribute values may be associated with properties data store objects. First, an attempt is made to determine a value of an attribute of an object by formulating and submitting a first query against the properties data store based upon a combination of a current context identifier, an object identifier associated with the object, and an attribute identifier associated with the attribute. If the first query is unsuccessful at locating the value, then the value is determined by formulating and submitting a second query against the properties data store based upon a combination of the object identifier and the attribute identifier.",
	"url": null,
	"owner": "Eu2605Trade",
	"publication_number": "06925646",
	"publication_date": "2005-08-02",
	"application_number": "09828547",
	"application_date": "2001-04-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Page sub-component prerequisite control mechanism",
	"summary": "",
	"abstract": "Apparatus and methods are provided for managing, tracking and controlling page sub-component prerequisites in a graphical user interface (GUI). According to one embodiment, in response to a request for a destination page and with reference to prerequisite information, one or more sub-component prerequisites associated with the destination page are identified. Then, a determination is made whether one or more requirements associated with the identified sub-component prerequisite have been satisfied by invoking a method of an instance of the identified sub-component prerequisite that causes stored information to be retrieved regarding the state of the sub-component prerequisite from a current environment/context. Finally, the destination page is displayed with (1) content associated with the identified sub-component prerequisite if any of its one or more requirements remain unsatisfied and (2) content associated with those of the sub-components having no sub-component prerequisites or having sub-component prerequisites whose requirements have all been satisfied.",
	"url": null,
	"owner": "Eu2605Trade",
	"publication_number": "06931599",
	"publication_date": "2005-08-16",
	"application_number": "09826220",
	"application_date": "2001-04-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and methods for copying, backing up and restoring logical objects in a computer storage system by transferring blocks out of order or in parallel",
	"summary": "",
	"abstract": "Method and apparatus are disclosed for copying and backing up logical objects in a computer storage system. The logical objects are comprised of data blocks. The data blocks may be copied in any order. The data blocks may be copied or written from a storage media, such as a tape, in parallel.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "06920537",
	"publication_date": "2005-07-19",
	"application_number": "10196867",
	"application_date": "2002-07-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic RDF groups",
	"summary": "",
	"abstract": "Described are techniques used in dynamically modifying RDF groups. A system call is issued by a host computer system to execute a remote system call on a first data storage system to create, remove, or modify an RDF group between the first data storage system and another data storage system that is remotely connected to the first data storage system in an RDF switched environment. As part of executing the remote system call, data is pushed from the first to the second data storage systems without having an established link between the data storage systems. Each data storage system performs processing to make the necessary modifications in all directors in accordance with the dynamic RDF group. A status indicating success or failure of the remote system call is returned to the host computer system.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "06910075",
	"publication_date": "2005-06-21",
	"application_number": "10262684",
	"application_date": "2002-10-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information replication system having automated replication storage",
	"summary": "",
	"abstract": "An information recovery system automatically selects storage for a replication of a data volume.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "06978282",
	"publication_date": "2005-12-20",
	"application_number": "09946005",
	"application_date": "2001-09-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for controlling read and write accesses to a logical entity",
	"summary": "",
	"abstract": "Method and apparatus are disclosed for moving logical data entities from one storage element to another storage element in a computer storage system, when more than one user or host computer may access the logical entity. According to one embodiment of the method, all of the read requests for the logical entity are moved to a new copy of the logical entity, before writes for logical entity are moved to the new copy.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "06978324",
	"publication_date": "2005-12-20",
	"application_number": "09605201",
	"application_date": "2000-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for initializing logical objects in a data storage system",
	"summary": "",
	"abstract": "A method and apparatus for manipulating data in a storage device that is coupled to a host computer. Manipulations that can be performed by the storage device include moving non-contiguous blocks of data between the host computer and the storage device in a single operation. Other manipulations can be performed directly by the storage device without passing data to or from the host computer and include copying data from one logical object that is defined on the host computer to another, initializing, backing-up, transforming, or securely deleting a logical object that is defined by the host computer with a single command. In one embodiment, an application programming interface is provided that allows a relationship between logical objects on a host computer and storage locations on a storage device to be communicated between the host computer and the storage device. By providing the storage device with knowledge of the relationship between a logical object and the storage locations corresponding to that logical object, data corresponding to the logical object can be manipulated directly by the storage device, rather than by the host computer. In another embodiment, a graphical visualization routine is provided that displays the global mapping of a logical object to a set of physical blocks on the storage device for each layer of mapping below the logical object.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "06883063",
	"publication_date": "2005-04-19",
	"application_number": "09107684",
	"application_date": "1998-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Microprocessor interface",
	"summary": "",
	"abstract": "A microprocessor interface having: (i) a data rebuffering section to couple data from a one of a plurality of data ports to a data port of the microprocessor selectively in accordance with a control signal; and (ii) a main memory interface for coupling to a main memory for the microprocessor, such main memory interface being coupled to the data rebuffering section for providing control signals to the main memory section for enabling data transfer between the main memory and the microprocessor through the data rebuffering section. The main memory is a selected one of a plurality of memory types each type having a different data transfer protocol and the main memory interface is configured in accordance with the selected one of the plurality of memory types to provide a proper memory protocol to data being transferred between the microprocessor and the main memory through the main memory interface.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "06915394",
	"publication_date": "2005-07-05",
	"application_number": "09408429",
	"application_date": "1999-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method including a communication interface for transferring information between at least two processes",
	"summary": "",
	"abstract": "A communication mechanism and method for assisting in the transfer of information between at least two processes through a data storage system is provided. The communication mechanism is provided between a protocol family and the process, and is capable of communicating with both. Both the processes and the protocols may differ depending on the functions desired. In the preferred embodiment of the invention, the communication mechanism is a socket interface which it utilized through the use of a series of calls contained in a socket library. The calls contained in the socket library are used to create a socket, and such socket is then used to effectuate a transfer between at least two processes through a data storage system to another process.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "06963905",
	"publication_date": "2005-11-08",
	"application_number": "09833906",
	"application_date": "2000-11-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for determining the mapping of logical objects in a data storage system",
	"summary": "",
	"abstract": "A method and apparatus for manipulating data in a storage device that is coupled to a host computer. Manipulations that can be performed by the storage device include moving non-contiguous blocks of data between the host computer and the storage device in a single operation. Other manipulations can be performed directly by the storage device without passing data to or from the host computer and include copying data from one logical object that is defined on the host computer to another, initializing, backing-up, transforming, or securely deleting a logical object that is defined by the host computer with a single command. In one embodiment, an application programming interface is provided that allows a relationship between logical objects on a host computer and storage locations on a storage device to be communicated between the host computer and the storage device. By providing the storage device with knowledge of the relationship between a logical object and the storage locations corresponding to that logical object, data corresponding to the logical object can be manipulated directly by the storage device, rather than by the host computer. In another embodiment, a graphical visualization routine is provided that displays the global mapping of a logical object to a set of physical blocks on the storage device for each layer of mapping below the logical object.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "06938059",
	"publication_date": "2005-08-30",
	"application_number": "10368720",
	"application_date": "2003-02-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Event management in a system with separate application and graphical user interface processing",
	"summary": "",
	"abstract": "A network-based system is provided in which application logic and business rules reside on a server to which a user attaches from a client machine. The system includes a view manager residing on the client machine for generating a graphical user interface (GUI) environment for the user. An application engine resides on the server for controlling the view manager. Events in an event queue at the client machine are parsed to determine which events require application processing. Events requiring application processing are sent to the server and other events are left in the event queue. The system also maintains stack synchronization between the client machine and the server.",
	"url": null,
	"owner": "Emrys Technologies, Ltd.",
	"publication_number": "06944644",
	"publication_date": "2005-09-13",
	"application_number": "10055552",
	"application_date": "2002-01-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for hypermedia browser API simulation to enable use of browser plug-ins and applets as embedded widgets in script-language-based interactive programs",
	"summary": "",
	"abstract": "A system is described which provides the capability for high-level extensible scripting language interpreters to incorporate and employ Web browser plug-ins as components within script-based programs. A script interpreter extension is described which simulates the plug-in API interface of a Web browser, from the point of view of the browser plug-in, to allow program scripts to cause browser plug-ins to be launched and manipulated, in a manner similar to the scripting platform's native widgets, from within the executing program script. This system allows embedded external program objects to be used to display and enable interactive processing of embedded data objects.",
	"url": null,
	"owner": "Eolas Technologies, Inc.",
	"publication_number": "06857124",
	"publication_date": "2005-02-15",
	"application_number": "09481984",
	"application_date": "2000-01-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network system for directing the transmission of facsimiles",
	"summary": "",
	"abstract": "A general document recognition system is described which is intended to be used in connection with an electronic document transmission function used on a computer network. The general document recognition system is set up to recognize any number of document types created by application programs in the network and is also set up with rules as to how to extract destination data from each document type. The extracted data from each document can be the actual intended destination, such as a facsimile telephone number, or can be the identity of the intended recipient individual. If a recipient, rather than a destination, is extracted from the document, the general document recognition system can query a previously designated external database to recover the destination information for that recipient. An LDAP database is the preferred external database for this function.",
	"url": null,
	"owner": "Esker, Inc.",
	"publication_number": "06906817",
	"publication_date": "2005-06-14",
	"application_number": "09602367",
	"application_date": "2000-06-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Inter-method control transfer for execution engines with memory constraints",
	"summary": "",
	"abstract": "A bytecode execution system and method for increasing the execution speed of invoking and returning from Methods while minimizing the memory footprint required to support this. The system includes a virtual machine with a class loader and an interpreter or, alternatively, a hardware accelerator. Speed and memory enhancements are realized by establishing an activation stack frame template with a set of criteria. Each Method from subject code is examined to determine whether the Method conforms to the criteria of the stack frame template. If the Method conforms, an activation frame for that Method based on the activation stack frame template is created when the Method is invoked. Otherwise, an activation frame based on standard virtual machine criteria is created. An access structure is associated with each Method and a Method routing structure is created for each class.",
	"url": null,
	"owner": "Esmertec AG",
	"publication_number": "06976254",
	"publication_date": "2005-12-13",
	"application_number": "09996169",
	"application_date": "2001-11-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Reduced size objects headers",
	"summary": "",
	"abstract": "A method and apparatus for reducing memory requirements in a computing environment. The method includes reducing the size of a header for a data structure by creating a header consisting of index information. Alternatively, the header may also include garbage collection information. The invention also provides a data structure for an object-oriented programming environment. The data structure includes: 1) a header consisting of index information and 2) one or more fields. Unlike prior data structures the header does not include information regarding the data structure's size; where it references are; it dispatch table; hash code information; or monitor information.",
	"url": null,
	"owner": "Esmertec AG",
	"publication_number": "06944637",
	"publication_date": "2005-09-13",
	"application_number": "10203124",
	"application_date": "2001-02-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for a mortgage loan originator compliance engine",
	"summary": "",
	"abstract": "The automated compliance engine of the present invention uses the Federal, State, local and professional regulations and requirements and implementing instructions to generate a plurality of tasks which can be used to control and drive the process of handling a mortgage loan application to completion and to monitor the completion of the tasks in order to generate a Completion Certificate. Mortgage loan requesters may specify that the system will generate the plurality of required tasks, provide the plurality of required tasks to the requestor for his execution, and monitor the completion of all required tasks so as to provide a completion certificate to the requestor. Alternatively, loan requesters may specify that the automated compliance engine will generate the plurality of required tasks, will transfer the required tasks to other systems qualified to manage and control the execution of the required tasks, and the compliance engine will monitor the completion of all required tasks so as to provide a completion certificate to the requester.",
	"url": null,
	"owner": "EverBank",
	"publication_number": "06904412",
	"publication_date": "2005-06-07",
	"application_number": "09645217",
	"application_date": "2000-08-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for using a floating pallet for a digital asset management system in a plurality of different applications",
	"summary": "",
	"abstract": "An apparatus for using a floating pallet for a digital asset management system in a plurality of different applications is disclosed. A single extension plug-in is created to interface with API's of all the plurality of different applications, wherein the extension plug-in communicates with the digital asset management system. The floating pallet for the digital asset management system is created in one of the plurality of different application wherein the floating pallet uses the properties and behaviors of a selected application. An indication that a file has been transferred from the digital asset management system to the selected application is then given.",
	"url": null,
	"owner": "Extensis, Inc.",
	"publication_number": "06931407",
	"publication_date": "2005-08-16",
	"application_number": "09625991",
	"application_date": "2000-07-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for CAD engine independence",
	"summary": "",
	"abstract": "An exemplary embodiment is a system providing CAD engine independence for a coordinate measurement system. The system includes an interface between a coordinate measurement system application and a CAD engine application. The interface is specific to the CAD engine application and allows a single coordinate measurement system application to be interfaced to one or more CAD engines without the dependency of hard coding to a particular CAD engine.",
	"url": null,
	"owner": "Faro Technologies, Inc.",
	"publication_number": "06868359",
	"publication_date": "2005-03-15",
	"application_number": "10391321",
	"application_date": "2003-03-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Graphical automated machine control and metrology",
	"summary": "",
	"abstract": "A graphical programming system allows a user to place geometric shapes onto a scaled image, the shape having associated behavior that operates on the image or on the object of which the image is formed. In a preferred embodiment, the shapes are objects in the Visio program by Microsoft Corporation. The shapes are dragged from a stencil onto an image provided by ion beam or electron microscope image. The shape invokes software or hardware to locate and measure features on the image or to perform operations, such as ion beam milling, on the object that is imaged.",
	"url": null,
	"owner": "FEI Company",
	"publication_number": "06889113",
	"publication_date": "2005-05-03",
	"application_number": "10227619",
	"application_date": "2002-08-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computerized medical diagnostic and treatment advice system including network access",
	"summary": "",
	"abstract": "A system and method for providing computerized, knowledge-based medical diagnostic and treatment advice. The medical advice is provided to the general public over networks, such as a telephone network or a computer network. The invention also includes a stand-alone embodiment that may utilize occasional connectivity to a central computer by use of a network, such as the Internet. New authoring languages, interactive voice response and speech recognition are used to enable expert and general practitioner knowledge to be encoded for access by the public. u201cMetau201d functions for time-density analysis of a number of factors regarding the number of medical complaints per unit of time are an integral part of the system. A re-enter feature monitors the user's changing condition over time. A symptom severity analysis helps to respond to the changing conditions. System sensitivity factors may be changed at a global level or other levels to adjust the system advice as necessary.",
	"url": null,
	"owner": "First Opinion Corporation",
	"publication_number": "06849045",
	"publication_date": "2005-02-01",
	"application_number": "10300284",
	"application_date": "2002-11-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Process and device for collision detection of objects",
	"summary": "",
	"abstract": "The present invention relates to a process and a device for the collision detection of objects by traversal of hierarcichal binary bounding BoxTrees, in which each bounding box pair of a hierarchically lower level is derived from a bounding box from the immediately above level by means of cutting off two sub-volumes by means of two parallel cut-planes. For the collision detection of a first and a second object, for each second bounding box of the bounding BoxTree of the second object to be checked for overlapping with a first bounding box of the bounding BoxTree of the first object, an auxiliary bounding box is computed which is axis-aligned in the object coordinate system of the first object and encloses the second bounding box with minimal volume, and with which the overlap check is conducted instead of with the second bounding box, and the computation results from the level immediately above are utilized for computation of auxiliary bounding boxes of lower levels. The process makes quick collision detection possible with low memory requirements.",
	"url": null,
	"owner": "Fraunhofer-Gesellschaft zur Foerderung der angewandten Forschung e.V.",
	"publication_number": "06862026",
	"publication_date": "2005-03-01",
	"application_number": "10067823",
	"application_date": "2002-02-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Business support system",
	"summary": "",
	"abstract": "A business support system producing service information request data for an external processing system in a predetermined form in response to a request from a terminal and converting the form of the service information request data into a format that can be processed by the external processing system. The service information provided from the external processing system in response to the service information request data is converted into the predetermined format. The service information converted to the predetermined format is provided to the terminal originating the request. According to the present invention, the most recent information processed by an existing external processing system is provided to a user terminal and information is exchanged between the user terminal and the external processing system.",
	"url": null,
	"owner": "Fujitsu Limited",
	"publication_number": "06868390",
	"publication_date": "2005-03-15",
	"application_number": "09679068",
	"application_date": "2000-10-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed-object development system and computer-readable recording medium recorded with program for making computer execute distributed-object development",
	"summary": "",
	"abstract": "A simulator machine obtains IDL information from an IDL definition storage, and automatically builds up a function of a server application or a client application based on the IDL information obtained. The simulator machine is connected to a WWW server that is one of nodes. Each of the rest of the nodes can access the WWW server by starting a WWW Browser thereby to build up on its own node a function of a server simulator or a client simulator that is provided by the simulator machine.",
	"url": null,
	"owner": "Fujitsu Limited",
	"publication_number": "06868454",
	"publication_date": "2005-03-15",
	"application_number": "09564047",
	"application_date": "2000-05-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for network management",
	"summary": "",
	"abstract": "A method of controlling a network, which includes network elements connected via links and provides services, includes the steps of creating view-configuration information based on network-configuration information with respect to each of the services such that the view-configuration information is related to the network-configuration information, and displaying a view based on the view-configuration information with respect to each of the services, the view including both or either one of a physical network configuration of the network and a logical network configuration of the network.",
	"url": null,
	"owner": "Fujitsu Limited",
	"publication_number": "06970919",
	"publication_date": "2005-11-29",
	"application_number": "09369776",
	"application_date": "1999-08-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for facilitating legitimate use of digital content",
	"summary": "",
	"abstract": "Method of data operation facilitating utilization of legitimate users without violating the copyright and literary property of digital content. A part of digital content () is duplicated to create discrete data unit (), and is encrypted with content key (). Content key () and image-compositing information () are encrypted with secret key () to create authorization information (). Content information () is visibly embedded in digital content (). Authorization information-added data unit () in which authorization information () is embedded as invisible information and encrypted discrete data unit information () are composited into composite data (), which is then distributed.",
	"url": null,
	"owner": "Fujitsu Limited",
	"publication_number": "06965996",
	"publication_date": "2005-11-15",
	"application_number": "09725674",
	"application_date": "2000-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software processing apparatus with a switching processing unit for displaying animation images in an environment operating base on type of power supply",
	"summary": "",
	"abstract": "In a software processing apparatus, an operating environment determining unit determines whether an operating environment requires power saving or not at the time of executing a process such as an animation displaying process, and a switching unit performs a simplified process of light load by making a part of the functions of software valid in the environment requiring power saving, and executes a process of heavy load in which all of the functions of the software are valid in the environment which does not require power saving.",
	"url": null,
	"owner": "Fujitsu Limited",
	"publication_number": "06910139",
	"publication_date": "2005-06-21",
	"application_number": "09778088",
	"application_date": "2001-02-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method of providing a virtual appliance",
	"summary": "",
	"abstract": "The present invention provides a universal information appliance management system capable of utilizing a distributed object system without regard to whether the appliance is embodied as a hardware device or embodied as software capable of being executed by any other hardware device such that the hardware device is indistinguishable from the software device. In addition, the invention provides a virtual reality interface including a dynamic virtual reality object capable of adapting to interaction by the user. Additionally, the invention provides a system and method for providing distributed functionality over a network including receiving a request to perform a task on a first digital information appliance, the task requiring a resource not included on the first digital information appliance. The digital information appliance locates a second digital information appliance over a network, the second digital information appliance including the resource. The request from the first digital information appliance is transferred to the second digital information appliance so as to enable the task to be performed on the second digital information appliance, and a result of the task performed by the second digital information appliance is returned to the first digital information appliance.",
	"url": null,
	"owner": "Gateway, Inc.",
	"publication_number": "06880157",
	"publication_date": "2005-04-12",
	"application_number": "09542159",
	"application_date": "2000-04-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and computer product for formulating a bi-directional color match",
	"summary": "",
	"abstract": "Method, system and computer product for formulating a bi-directional color match. In this disclosure, a computing unit obtains spectral measurements of a target bi-directional color. The computing unit uses a bi-directional color formulation tool determine a combination of pigments, dyes and platelet-shaped pigments that generates spectral measurements that match the spectral measurements of the target bi-directional color.",
	"url": null,
	"owner": "General Electric Company",
	"publication_number": "06870614",
	"publication_date": "2005-03-22",
	"application_number": "10063960",
	"application_date": "2002-05-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Versatile user interface device and associated system",
	"summary": "",
	"abstract": "A versatile user interface device and associated system includes a consumer device, such as a set-top terminal, and a user interface device, such as a versatile remote control unit for sending command signals to the set-top terminal. The system enables application specific real-time programming of the remote control device. The system incorporates Versatile Remote Control Manager (VRCM) software that is invoked by the application via user selection. The VRCM enables application specific real-time re-mapping of the key code values for the operating keys of the remote control device, such as fixed keys and/or soft keys on a touch screen display device in order to enable simpler user interface interaction and navigation experience.",
	"url": null,
	"owner": "General Instrument Corporation",
	"publication_number": "06978424",
	"publication_date": "2005-12-20",
	"application_number": "09976314",
	"application_date": "2001-10-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and methods for routing electronic mail in a processing center",
	"summary": "",
	"abstract": "An Internet Protocol Network Telephony call center having a plurality of agents for serving clients also processes e-mails addresses to the call center, but not to specific agents. An e-mail server receives and routes the e-mail, and includes a router and a database storing skill set information regarding agents. The router extracts information from the e-mails, matches key words in the extracted information with key words from the skill sets, and routes the e-mails to appropriate agents having the necessary skills to respond to the service requirements in the e-mails.",
	"url": null,
	"owner": "Genesys Telecommunications Laboratories, Inc.",
	"publication_number": "06981020",
	"publication_date": "2005-12-27",
	"application_number": "09565872",
	"application_date": "2000-05-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Call transfer using session initiation protocol (SIP)",
	"summary": "",
	"abstract": "A system is provided for providing communication event routing and transfer capability in a multi-site communication-center environment. The system utilizes a presence protocol application and a routing application for determining availability of an agent or system and for setting up the transfer from a point of transfer on a network to a destination of transfer on the same or connected network. In a preferred use the presence protocol application is shared by communication-center sites cooperating in the transfer and routing of events and the presence protocol enables at least one event-handling process normally performed by the routing application.",
	"url": null,
	"owner": "Genesys Telecommunications Laboratories, Inc.",
	"publication_number": "06958994",
	"publication_date": "2005-10-25",
	"application_number": "10242250",
	"application_date": "2002-09-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Internet protocol call-in centers and establishing remote agents",
	"summary": "",
	"abstract": "An IPNT call center is provided wherein agent's computers may be locally-connected to a managing computer on a local area network, or remote agents may act over the Internet with the managing computer. The managing computer establishes an IPNT call with each remote agent on duty, and then routes incoming IPNT calls to the remote agents by substituting an incoming call for an existing call without closing the existing call, thereby avoiding the necessity of establishing a new call with the remote computer for each call routed to the remote agent. In some embodiments the IPNT system is a part of a multimedia call center, wherein incoming calls may be either IPNT or plain old telephony service (POTS), and calls are routed to agents according to a set of business rules without regard to type.",
	"url": null,
	"owner": "Genesys Telecommunications Laboratories, Inc.",
	"publication_number": "06879586",
	"publication_date": "2005-04-12",
	"application_number": "09010894",
	"application_date": "1998-01-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing media-independent self-help modules within a multimedia communication-center customer interface",
	"summary": "",
	"abstract": "In a multimedia call center (MMCC) operating through an operating system, a client-specific self-help wizard is provided for active clients and updated periodically with information related to client transaction history with the MMCC. A connected client is presented by the wizard with a selective media function through which the client may a select a media type for interaction and help, and the MMCC will then re-contact the client through the selected media. The client, for example, may select IP or COST telephony, and the MMCC will place a call to the client to a number or IP address listed for the client, and interactivity will then be through an interactive voice response unit. Help information specific to a client is updated in the client's wizard periodically according to ongoing transaction history with the MMCC. The wizard may also monitor client activity with the wizard and make reports available to various persons.",
	"url": null,
	"owner": "Genesys Telecommunications Laboratories, Inc.",
	"publication_number": "06910072",
	"publication_date": "2005-06-21",
	"application_number": "10394558",
	"application_date": "2003-03-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Stored-media interface engine providing an abstract record of stored multimedia files within a multimedia communication center",
	"summary": "",
	"abstract": "An Interaction Object Model (IOM) Interface to a data repository includes objects representing files in the data repository; standardized information about each file, the information associated in the IOM with each object, and an updating interface communicating with the data repository, keeping objects conformal with the files in the data repository. An interaction interface to system function modules requiring data associated with the files in the data repository is provided, wherein through the interaction interface the system function modules are enabled to retrieve required data from the IOM without accessing the data files in the data repository directly. A principle use is in a multimedia call center, storing text and non-text transactions of the call center.",
	"url": null,
	"owner": "Genesys Telecommunications Laboratories, Inc.",
	"publication_number": "06874119",
	"publication_date": "2005-03-29",
	"application_number": "09183551",
	"application_date": "1998-10-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for prioritizing data change requests and maintaining data consistency in a distributed computer system equipped for activity-based collaboration",
	"summary": "",
	"abstract": "A distributed, activity-based collaboration system can employ a data change request priority scheme for determining an order of execution of data change requests in effecting changes to local copies of data so as to optimize data consistency for collaborative activities. The data change request priority scheme can entail encoding sequence number information and dependency information in the data change requests, responsive to which data changes can be made, unmade and remade to the data.",
	"url": null,
	"owner": "Groove Networks, Inc.",
	"publication_number": "06859821",
	"publication_date": "2005-02-22",
	"application_number": "09356148",
	"application_date": "1999-07-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Efficient digital map overlays",
	"summary": "",
	"abstract": "In a graphics processing system utilizing a graphics interface that defines each color fragment using at least one color fragment characteristic component, a method and system for more efficient display of a graphic overlay. The method can comprise for each color fragment in a map scene, defining the color fragment characteristic component value based on a location characteristic associated with a location on the map, setting a test value, and comparing the color fragment characteristic component value for each color fragment in the map scene to the test value to determine whether the color fragment should be displayed in an overlay color.",
	"url": null,
	"owner": "Harris Corporation",
	"publication_number": "06980224",
	"publication_date": "2005-12-27",
	"application_number": "10106644",
	"application_date": "2002-03-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for assessing the security posture of a network using goal oriented fuzzy logic decision rules",
	"summary": "",
	"abstract": "A method and data processing system assesses the security vulnerability of a network. A system object model database is created and supports the information data requirements of disparate network vulnerability analysis programs. Only the required data from the system object model database representing the network is imported to the programs, which then analyze the network to produce data results from each program. These data results are stored in a common system model database and within the data fact base. Goal oriented fuzzy logic decision rules are applied to determine the vulnerability posture of the network.",
	"url": null,
	"owner": "Harris Corporation",
	"publication_number": "06883101",
	"publication_date": "2005-04-19",
	"application_number": "09500269",
	"application_date": "2000-02-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Simplified configuration of an internet-enabled device",
	"summary": "",
	"abstract": "A system and method for configuring an Internet-enabled device to communicate with an unknown mail server so as to allow the device to send information as e-mail messages over the Internet using the resources of an Internet service provider (ISP). Such devices include scanners, multifunction peripherals, and digital cameras. A configuror program uses predetermined access parameters for the ISP to simplify the configuration of the device. From an e-mail address specified by the user during configuration, the configuror determines the mail server name that the device will use to send e-mail, and downloads the address, along with a portion of the access parameters and a maximum e-mail message size, to the device. After configuration, the device can directly connect to the ISP and send e-mail in a stand-alone manner. If the device is connected to a computer following installation, computer can update the device for any changes in ISP access, and the device can send e-mail messages through the computer rather than directly so as to avoid more than one simultaneous connection to the ISP.",
	"url": null,
	"owner": "Hewlett-Packard Development Company L.P.",
	"publication_number": "06898623",
	"publication_date": "2005-05-24",
	"application_number": "09595501",
	"application_date": "2000-06-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Algorithm for localization of a JAVA application using reflection API and a custom class loader",
	"summary": "",
	"abstract": "A method and corresponding apparatus for localization of a JAVAu00ae application using a reflection API and a custom class loader use specifics of JAVAu00ae language to provide localization of certain data elements, i.e., variables, of the application during class loading. The method and corresponding apparatus for localization reduce complexity of the JAVAu00ae application by eliminating the function code dedicated to localization. In addition, the method and apparatus for localization increase productivity of engineers who write language-independent code, and reduce memory consumption of classes that use localized strings. Since all localization is accomplished when the class is loaded and since the code that uses localization is independent of the code performing localization, the method and apparatus for localization ensure better performance of the application and afford better code reusability.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06944846",
	"publication_date": "2005-09-13",
	"application_number": "10014476",
	"application_date": "2001-12-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "API to enforce internationalization",
	"summary": "",
	"abstract": "A method for enforcing internationalization uses pre-logging subroutines, i.e., helper methods, to determine whether a high priority debug log message is localized, and reject a string message that is not localized in a user's native language. A localized message may be constructed by passing message keys and parameters to a translation subroutine, which is implemented by a localized messaged factory. As a result, only a localized message may be passed to the helper methods, and the localized message is typically translated into a text string in the user's native language before being passed to a raw logging interface to be logged, thus automatically enforcing internationalization.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06938259",
	"publication_date": "2005-08-30",
	"application_number": "09968553",
	"application_date": "2001-10-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "API to increase debug log performance",
	"summary": "",
	"abstract": "A method for increasing debug log performance uses pre-logging subroutines, i.e., helper methods, to pass multiple elements of a string message as separate parameters. The helper methods typically determine whether a debug logging system is enabled at a specific logging level before allocating memory or CPU resources for string concatenation. If the debug logging system is disabled, the method returns to the client program without allocating resources to concatenate and log the message, thus significantly increasing debug log performance.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06951012",
	"publication_date": "2005-09-27",
	"application_number": "09968552",
	"application_date": "2001-10-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for buffering data",
	"summary": "",
	"abstract": "A data buffering apparatus comprises a plurality of sessions and buffer logic. The plurality of session are respectively associated with session identifiers. Each of the sessions is configured to identify entries in a queue having the session's associated identifier and to pull, from the queue, the identified entries. Each of the sessions is further configured to retrieve data from the buffers pointed to by the identified entries that have the session's associated identifier. The buffer logic is configured to store a set of data to one of a plurality of buffers. The buffer logic is further configured to store, in the queue, for each expected retrieval of the set of data from the one buffer by the sessions, an entry that points to the one buffer and has a different session identifier associated with a different one of the sessions.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06914607",
	"publication_date": "2005-07-05",
	"application_number": "10361739",
	"application_date": "2003-02-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for telecommunications services",
	"summary": "",
	"abstract": "One embodiment disclosed relates to a modular apparatus for telecommunications services. The apparatus includes at least a network interface, a service logic program, and a plug-in module. The network interface exchanges signals with a telephony network, and the service logic program communicates control events with the telephony network by way of the network interface. The plug-in module is configured to exchange in real-time (i) a first type of messages with a charging server and (ii) a second type of messages with the service logic program.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06954631",
	"publication_date": "2005-10-11",
	"application_number": "10366072",
	"application_date": "2003-02-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Combination analog and digital modem",
	"summary": "",
	"abstract": "A combination modem including at least one line connector that is configured for coupling to a transmission medium, analog modem logic that is capable of performing analog modem communications via the transmission medium, digital modem logic that is capable of performing digital modem communications via the transmission medium, a bus interface that enables communication with a computer via an expansion bus of the computer, and processing logic. In this manner a single modem expansion card supports both analog and digital modem technologies using only one slot of an expansion bus of the computer. The analog modem logic may support 56K technologies, such as K56Flexu2122, V.90, etc., or any combination thereof. The digital modem logic may be according to any type of xDSL, such as ADSL, or U-ADSL, etc. The modem may operate as an analog modem, a digital modem, or as both at the same time with or without a POTS splitter. A single digital signal processor (DSP) located on the modem card may be used to support either the analog or the digital modem communications at any given time or both at the same time. The modem card may be configured as a PCI card for plugging into a PCI bus of the computer.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06868502",
	"publication_date": "2005-03-15",
	"application_number": "09947718",
	"application_date": "2001-09-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer CPU and memory to accelerated graphics port bridge having a plurality of physical buses with a single logical bus number",
	"summary": "",
	"abstract": "A core logic chip set in a computer system provides a bridge between processor host and memory buses and a plurality of Accelerated Graphics Port (AGP) buses. Each of the plurality of AGP buses have the same logical bus number. The core logic chip set has an arbiter having Request (u201cREQu201d) and Grant (u201cGNTu201d) signal lines for each AGP device connected to the plurality of AGP physical buses. Each of the plurality of AGP buses has its own read and write queues to provide transaction concurrency of AGP devices on different ones of the plurality of AGP buses when the transaction addresses are not the same or are M byte aligned. Upper and lower memory address range registers store upper and lower memory addresses associated with each AGP device. Whenever a transaction occurs, the transaction address is compared with the stored range of memory addresses. If a match between addresses is found then strong ordering is used. If no match is found then weak ordering may be used to improve transaction latency times. AGP device to AGP device transactions may occur without being starved by CPU host bus to AGP bus transactions.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06954209",
	"publication_date": "2005-10-11",
	"application_number": "10115551",
	"application_date": "2002-04-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed universal communication module for facilitating delivery of network services to one or more devices communicating over multiple transport facilities",
	"summary": "",
	"abstract": "A system for providing remote electronic services includes an agent, a communication module, and an access file. The agent receives request for-service-calls in any format selected from a voice format, an internet format, an e-mail format, and a wireless format, and transmits a request-for-service call to the access file in accordance with a hypertext transfer protocol for each of the received request-for-service calls. The access file invokes at least one service module in response to a given request-for-service call received from the agent. The at least one service module performs a prescribed function to produce a service deliverable requested in the given request-for-service call, accesses an instance of the communication module, and passes the one or more control parameters and the service deliverable to the communication module. The communication module transmits the service deliverable received from the at least one service module to the destination network node specified in the given request-for-service call in any format selected from a voice format, an internet format, an e-mail format, and a wireless format.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06938087",
	"publication_date": "2005-08-30",
	"application_number": "09660464",
	"application_date": "2000-09-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic execution layer interface for replacing instructions requiring unavailable hardware functionality with patch code and caching",
	"summary": "",
	"abstract": "A system and method for dynamically patching code. In one embodiment, a method includes intercepting original program instructions during execution of the program using a software interface, determining whether associated instructions have been cached in a code cache of the software interface and, if so, executing the cached instructions from the code cache, if associated instructions have not been cached, determining if the original program instructions require unavailable hardware functionality, and dynamically replacing the original program instructions with replacement instructions that do not require unavailable hardware functionality if it is determined that the original program instructions require unavailable hardware functionality, the dynamic replacing including fetching replacing instructions, storing the replacement instructions in the code cache, and executing the replacement instructions from the code cache.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06928536",
	"publication_date": "2005-08-09",
	"application_number": "09995775",
	"application_date": "2001-11-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Graphical display system and method",
	"summary": "",
	"abstract": "A graphical display system utilizes a plurality of graphics pipelines, a compositor, and application interface logic. The plurality of graphics pipelines are configured to render graphical data in parallel. The compositor is configured to define a composite data signal that is based on the graphical data rendered by each of the pipelines. The application interface logic is configured to retrieve configuration data indicative of a configuration of the compositor. The application interface logic is further configured to provide the configuration data to a graphics application, wherein the graphics application is configured to provide graphical data to the plurality of pipelines based on the configuration data.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06853380",
	"publication_date": "2005-02-08",
	"application_number": "10087754",
	"application_date": "2002-03-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Imaging extension API for isolating web content from user resources and services",
	"summary": "",
	"abstract": "A method, system and program product for operating a web imaging system for use with a browser on an imaging client, comprising the steps of: receiving a request from external web content for a reference to a resource; translating the request to an imaging client specific command; creating an opaque reference that is mapped to the imaging client specific command; and providing this opaque reference to the web content, without supplying a reference to the resource or the imaging client specific command to the web content.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06944868",
	"publication_date": "2005-09-13",
	"application_number": "09924056",
	"application_date": "2001-08-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integration of a database into file management software for protecting, tracking, and retrieving data",
	"summary": "",
	"abstract": "A data protection system that integrates a database with Windows Explorer in the Microsoft Windows 9X and NT Environments that mimics the Windows Explorer user interface, enabling the user to apply already known use paradigms. The data protection system appears as an extension to Windows Explorer and visibly appears as a folder item called the data vault. The data vault is a virtual disk that represents the underlying database. The database creates records and stores information about files backed up to removable secondary storage medium. Files may be backed up manually or automatically. A schedule can be set up for automatic protection of selected files and file types. The database can be searched to find files for restoration purposes without having to load secondary storage medium. Once a file or files are selected, the data protection system indicates which labeled removable secondary storage medium must be loaded for retrieval.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06839721",
	"publication_date": "2005-01-04",
	"application_number": "09759619",
	"application_date": "2001-01-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Java C++ proxy objects",
	"summary": "",
	"abstract": "A system and method for enabling the efficient accessing of Java objects and methods by legacy GUIs is disclosed. The system and method provide a base proxy object that encapsulates the JNI APIs necessary for calling Java methods across the JNI boundary. Legacy proxy objects proxy the Java objects and enable legacy GUIs to issue method requests as if the legacy proxy objects were fully functional objects. The legacy proxy objects receive method requests from the GUIs and call base proxy object methods that in turn make the necessary JNI API calls to call Java methods.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06915520",
	"publication_date": "2005-07-05",
	"application_number": "09828439",
	"application_date": "2001-04-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Memory compression for computer systems",
	"summary": "",
	"abstract": "A computer system is provided including a processor, a persistent storage device, and a main memory connected to the processor and the persistent storage device. The main memory includes a compressed cache for storing data retrieved from the persistent storage device after compression and an operating system. The operating system includes a plurality of interconnected software modules for accessing the persistent storage device and a filter driver interconnected between two of the plurality of software modules for managing memory capacity of the compressed cache and the buffer cache.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06857047",
	"publication_date": "2005-02-15",
	"application_number": "10167358",
	"application_date": "2002-06-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Message-based software system",
	"summary": "",
	"abstract": "The present invention relates to logic systems which use a message-based API, and in particular to telecommunication systems. The present invention aims to overcome drawbacks in the way in which data is sent between, for example, a gatekeeper unit and a service application running on a service platform. By providing a formatter or formatter units on the gatekeeper units, incoming messages may be pre-processed thereby reducing the bandwidth requirements for data transfer. Each formatter unit may be specific to a service application, and ensures that data arrives at the service platform in the appropriate format.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06951023",
	"publication_date": "2005-09-27",
	"application_number": "10032883",
	"application_date": "2001-10-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and arrangement for communicating with SCSI devices",
	"summary": "",
	"abstract": "A method and arrangement, for use in a system having a host and one or more small computer system interface (SCSI) devices, are described for enabling a user application accessing the system to communicate with one or more of the SCSI devices. The method and arrangement serve to overcome a device node limitation observed in standard Linux, which limits the number of devices a user application may communicate with to 128 SCSI disk (sd) devices or 256 SCSI generic (sg) devices. The method and arrangement provide a pass through capability by allowing the user application to directly talk to any SCSI device by using virtual handles, thereby overcoming the device node limitation observed in standard Linux.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06934711",
	"publication_date": "2005-08-23",
	"application_number": "10260412",
	"application_date": "2002-10-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for accessing imaging information on a demand basis using web based imaging",
	"summary": "",
	"abstract": "A method, system, and program product for printer processing comprising the steps of: receiving a print designation to print a document that comprises a set of canvases; constructing a canvas order from the set of canvases; getting graphics data in the canvas order; and sending the graphics data in canvas order for printer processing.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06900905",
	"publication_date": "2005-05-31",
	"application_number": "09923967",
	"application_date": "2001-08-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for mapping procedural C++ code to java object-oriented classes",
	"summary": "",
	"abstract": "A method and apparatus for mapping of procedural code to object-oriented classes is disclosed. A mapping layer in an object-oriented programming language process space that maps procedural method calls to object-oriented class instantiations and remote method invocations according to an embodiment of the present invention is disclosed. The mapping layer preferably is utilized for accomplishing persistent changes to the object-oriented classes. The mapping layer preferably comprises entry-points that are methods, which may be invoked by procedural graphical user interface callback code.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06886172",
	"publication_date": "2005-04-26",
	"application_number": "09827033",
	"application_date": "2001-04-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of communicating asynchronous events to remote procedure call clients",
	"summary": "",
	"abstract": "A computer system in accordance with the present invention provides a method of communicating events from a server to remote procedure call clients. The disclosed technique begins with a remote procedure call by a remote procedure call client to a server to establish an initial client-server connection. Next, there is a remote procedure call to create a guaranteed delivery communication conduit, such as a named pipe, between the server and client and to create a server asynchronous event thread in a blocked state for blocking execution of the server asynchronous event thread. A client asynchronous event thread in the client is then created to open the named pipe. If the server detects an event, an event message is generated which places the server asynchronous event thread in an unblocked state to allow execution of the server asynchronous event thread. Event data may then be transmitted across the named pipe from the server to the client. After transfer of the event data is complete, the server asynchronous event thread is blocked. By unblocking the server asynchronous event thread when an event is detected and blocking the server asynchronous event thread following transmission of the event through a named pipe to the client, asynchronous events may be communicated by a server to remote procedure call clients. As a result, it is not necessary for a remote procedure call client to poll a server to receive asynchronous event information.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06901596",
	"publication_date": "2005-05-31",
	"application_number": "09074109",
	"application_date": "1998-05-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, computer system and computer program product for processing extensible markup language streams",
	"summary": "",
	"abstract": "The invention is directed to a method performed by a computer system to process an extensible markup language input stream using discrete software components mapped to tags contained in the input stream, comprising: parsing the input stream; as a tag is parsed, invoking the software component mapped to it. The invention is also directed to a computer system, comprising: a processing unit and storage for processing programs; bindings representing a mapping between tags and discrete software components; a software engine comprising: a reader component that reads an extensible markup language input stream containing at least one tag; a parser component that parses the input stream; an execution component that, as a tag is parsed, invokes the software component mapped to the tag. The invention is also directed to a corresponding computer program product.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06925631",
	"publication_date": "2005-08-02",
	"application_number": "09733153",
	"application_date": "2000-12-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Packet processing in shared memory multi-computer systems",
	"summary": "",
	"abstract": "Systems and methods of processing packets in a shared memory multi-computer environment are described. A local shared memory network is provided between local nodes and a global shared memory network is provided between the local nodes and one or more remote nodes. In this way, local nodes may communicate through standard network interfaces while using shared memory as the physical transport medium. In addition, a multi-computer system may be addressed externally and internally as individual nodes over the local shared memory network. A multi-computer system also may be addressed externally and internally as a single node over the global shared memory network.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06920485",
	"publication_date": "2005-07-19",
	"application_number": "09971989",
	"application_date": "2001-10-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Printing a well-defined subset of an HTML page",
	"summary": "",
	"abstract": "The present invention provides a method and system for selectively printing a desired portion of a web page. In one embodiment of the method, the steps typically include passing a named tag element for the desired portion into the desired portion of the web page, querying the named tag element for an inner Hyper-Text Markup Language block for the desired portion, opening a browser window, creating a stream of text for the desired portion and sending the stream of text to the browser, and activating printing, by the browser, of the stream of text. By sending the stream of text to a separate browser window for printing using, for example, JavaScriptu00ae or another suitable scripting language, installation of plug-ins, executables or ActiveXu00ae controls is avoided, increasing the efficiency of the printing process.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06981213",
	"publication_date": "2005-12-27",
	"application_number": "09916755",
	"application_date": "2001-07-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Process activity and error monitoring system and method",
	"summary": "",
	"abstract": "A system and method that uses a process management console to maintain multiple processes that perform software services from within a presentation layer and a database layer. The method includes defining an active process list for a plurality of processes that provide services in the presentation and database layers. Another step is monitoring the plurality of processes that are active in the presentation and database layers by using a process monitor. The next step is determining when one of the processes has abnormally terminated, using the process monitor to periodically compare the active process list to the list of processes currently executing. When a process fails, the system reactivates the process under the automatic control of the process monitor, and the reactivation is performed automatically. The system can also generate an error message that is logged or sent as an email to support personnel when a process has failed.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06898733",
	"publication_date": "2005-05-24",
	"application_number": "09999794",
	"application_date": "2001-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Process for controlling devices of an intranet network through the web",
	"summary": "",
	"abstract": "Preferably, the set of instructions is used for controlling a remote installation of a software package within the devices in accordance with selections made by the IT administrator.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06920492",
	"publication_date": "2005-07-19",
	"application_number": "09883723",
	"application_date": "2001-06-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Remote hard copy apparatus control including firewall penetrating protocols",
	"summary": "",
	"abstract": "A server implementation adapted for use with a computer peripheral having a plurality of reportable operational states. In an exemplary embodiment for a hard copy apparatus, both internet browser and electronic mail clients are provided with access to and control of the apparatus. Data filtering and handling are provided for discriminating specific data communications. Firewall penetrating protocols are provided.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06931447",
	"publication_date": "2005-08-16",
	"application_number": "09671556",
	"application_date": "2000-09-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Selectable control of raster image processor",
	"summary": "",
	"abstract": "Digital printing technologies often rely on raster image processors (RIPs or RIP engines) to convert vector image data to raster, or bit-map, data, which allows a printer to render the image as a pattern of dots or pixels. One problem that the present inventors recognized with conventional RIPs is that they have limited communications capabilities that can in some circumstances reduce their effective processing speed. Accordingly, at least some embodiments of the present invention allow controlling a RIP engine using two or more different RIP control entities.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06929411",
	"publication_date": "2005-08-16",
	"application_number": "10654415",
	"application_date": "2003-09-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Stack utilization management system and method for a single-stack arrangement",
	"summary": "",
	"abstract": "A system and method for managing utilization in a stack. A stack base and a stack pointer are initialized for the stack. Upon fetching a program instruction to be executed in a computing environment, a determination is made if the program instruction involves accessing a location within a valid stack range that is defined by a high water mark operable to identify the stack pointer's farthest location from the stack base. The farthest location is indicative of how far the stack has grown at any time during the program's execution. A warning may be provided upon determining that the location to be accessed is not within the valid stack range.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06904513",
	"publication_date": "2005-06-07",
	"application_number": "10884666",
	"application_date": "2004-07-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Status polling failover of devices in a distributed network management hierarchy",
	"summary": "",
	"abstract": "Automatic failover methodology provides a mechanism whereby a central control unit, such as a management station, will automatically takeover interface status polling of objects of a collection station that is temporarily unreachable. This methodology is applicable to any distributed computing environment, such as a data communications network, in which it is desirable to have a central control unit assume the interface status polling operation of a temporarily inaccessible collection station. The collection station may be inaccessible due to the network on which the central control unit and the collection station reside being down or due to the collection station being down for maintenance.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06961768",
	"publication_date": "2005-11-01",
	"application_number": "09905307",
	"application_date": "2001-07-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for decoding and executing program binaries",
	"summary": "",
	"abstract": "The present disclosure relates to a system and method for decoding program binaries. In one arrangement, the system and method pertain to intercepting program instructions, determining if associated instructions have been decoded and cached, and decoding and copying the program instructions if associated instructions have not been cached.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06920550",
	"publication_date": "2005-07-19",
	"application_number": "09999451",
	"application_date": "2001-11-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for dynamically replacing code",
	"summary": "",
	"abstract": "The present disclosure relates to a system and method for dynamically replacing code. In one arrangement, the system and method pertain to intercepting original program instructions during execution of the program, determining if an original program instruction is to be replaced, and dynamically replacing the program instruction with a replacement instruction if it is determined that the original program instruction is to be replaced.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06915513",
	"publication_date": "2005-07-05",
	"application_number": "09997062",
	"application_date": "2001-11-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for executing a fast reset of a computer system",
	"summary": "",
	"abstract": "A system and method for implementing a fast reset of a computer system is described. In one implementation, the fast reset is implemented by adding a new ResetType to the EFIResetSystem( ) function. In particular, a third ResetType, i.e., u201cEfiResetFastu201d (FAST option), is added, which is passed as a parameter when calling the EFIResetSystem( ) function. In another implementation, the fast reset is implemented using a new EFI function, referred to herein as u201cEFIResetFast( )u201d. In either implementation, in response to a fast reset, the firmware skips several steps typically performed, including some of the core firmware construction, single cell initialization, memory testing, memory re-initialization, and partition creation, and proceeds directly to transfer of control of the platform to a software interface disposed between an OS and firmware.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06963970",
	"publication_date": "2005-11-08",
	"application_number": "10136580",
	"application_date": "2002-04-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for identifying cloaked web servers",
	"summary": "",
	"abstract": "A search engine receives from a client a representation of a first object that was returned by a web server to the client in response to a request from the client. The search engine receives from the web server a second object in response to an identical request from the search engine, and compares the representation of the first object to a representation of the second object. The web server is determined to be cloaked if the representation of the first object does not match the representation of the second object. Typically, the client receives a URL embedded in a response to a search request submitted to the search engine. A toolbar operating in conjunction with the web browser on the client processes the URL. The processing includes: directing the web browser to obtain an object corresponding to the URL from a web server addressed by the URL; converting the object to a feature vector; and delivering the feature vector and the URL back to the search engine.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06910077",
	"publication_date": "2005-06-21",
	"application_number": "10039603",
	"application_date": "2002-01-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing print preview/media selection",
	"summary": "",
	"abstract": "This invention relates to a Web-based imaging system that provides a print preview. Such systems of this type, generally, allow the user to preview the print job prior to printing of the print job. In particular, if the media to be printed upon is non-white, the system will provide the user with a view of how the print job will look on the non-white media.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06943903",
	"publication_date": "2005-09-13",
	"application_number": "09816612",
	"application_date": "2001-03-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method utilizing multiple processes to render graphical data",
	"summary": "",
	"abstract": "A system for rendering graphical data utilizes a plurality of graphics pipelines, a first process, and a second process. Each of the plurality of graphics pipelines is configured to render graphical data. The first process is configured to receive three-dimensional (3D) graphics commands from a graphics application and to receive input commands from a user input device. The first process is configured to buffer the received 3D graphics commands and to execute the received input commands, and the first process, for each of the buffered 3D graphics commands, is configured to begin processing a newly received command upon buffering the 3D graphics command. The second process is configured to interface the buffered graphics commands with each of the plurality of pipelines, wherein execution of the user input command affects an object defined by the graphics application.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06847366",
	"publication_date": "2005-01-25",
	"application_number": "10087472",
	"application_date": "2002-03-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for integrating emulated and native code",
	"summary": "",
	"abstract": "Systems and methods for integrating emulated and native code are provided. One embodiment comprises a method for emulating code from an original computer system on a host computer system. Briefly described, one such embodiment comprises the steps of: fetching a program instruction associated with program code to be emulated on a host computer system; determining whether the program instruction is to be executed natively on the host computer system or is to be emulated on the host computer system; and if the program instruction is to be executed natively on the host computer system, emitting a native code fragment associated with the program instruction into a dynamic execution layer interface to be executed.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06907519",
	"publication_date": "2005-06-14",
	"application_number": "10100874",
	"application_date": "2002-03-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Telephony network optimization method and system",
	"summary": "",
	"abstract": "A telephony network optimization system and method comprises receiving a request from an application to provide to the application service on a telephony network. The method also comprises automatically allocating to the application a channel on the telephony network to provide balanced network service in response to telephony parameters.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06873694",
	"publication_date": "2005-03-29",
	"application_number": "09999407",
	"application_date": "2001-10-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Virtual storage systems and virtual storage system operational methods",
	"summary": "",
	"abstract": "Virtual storage systems and virtual storage system operational methods are described. According to one aspect, a virtual storage system includes a virtual storage space including a plurality of virtual storage locations, a physical storage space including a plurality of physical storage locations configured to store data, a memory configured to store a plurality of activated pointers which associate a plurality of virtual storage locations with a plurality of the physical storage locations, and a controller configured to deactivate at least some of the activated pointers including extracting the deactivated pointers from the memory, to access a request pertaining to selected data associated with at least one of the deactivated pointers, to activate the deactivated pointers including providing the deactivated pointers in the memory providing reactivated pointers, and to modify at least one of the reactivated pointers responsive to the request.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06857057",
	"publication_date": "2005-02-15",
	"application_number": "10264661",
	"application_date": "2002-10-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web-based imaging service supporting specialized media detected through multipurpose tray",
	"summary": "",
	"abstract": "Specialized encoded media are detected when inserted into the multipurpose paper input tray of the printer. Each specialized media is displayed in a list of available media provided by the web-based imaging service. Graphics representing each of the specialized media are downloaded e.g., from a site on the Internet accessed through information encoded on the specialized media, and are displayed to provide a preview of the user's image data superimposed in register on an image of the specialized media. In a variation, the multipurpose tray includes an integral bar code scanner that automatically identifies the specialized media. Among other variations, the multipurpose tray uses the motion of insertion to scan the specialized media, and inks u201cvisibleu201d only through infrared scanning mechanisms are encoded on the media.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06961148",
	"publication_date": "2005-11-01",
	"application_number": "09999215",
	"application_date": "2001-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for managing replication volumes",
	"summary": "",
	"abstract": "Replication of volumes is facilitated by tools which provide and manage a pool of mirror volumes. Primary (or production) volumes containing user provided data are easily mirrored by volumes selected from the pool. User criteria can be provided to limit the selection of candidate volumes for mirroring.",
	"url": null,
	"owner": "Hitachi, Ltd.",
	"publication_number": "06925541",
	"publication_date": "2005-08-02",
	"application_number": "10170804",
	"application_date": "2002-06-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for managing documents",
	"summary": "",
	"abstract": "The present invention extracts common portions each composed of a structure and text character strings included commonly in both an original version and a revised version of a structured document, and difference portions specific to either the original version or the revised version. Based on the extraction results from the above two version documents, the present invention creates a multi-version document having version description tags attached thereto. When a further-revised version is created, the present invention performs the above process on the latest version included in the created multi-version document and the further-revised version to create a new multi-version document. By using the created multi-version document, it is possible to collectively display changes made to all the versions as well as to display the change history of a portion to which each change was made.",
	"url": null,
	"owner": "Hitachi, Ltd.",
	"publication_number": "06931590",
	"publication_date": "2005-08-16",
	"application_number": "09761853",
	"application_date": "2001-01-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Controlling load-balanced access by user computers to server computers in a computer network",
	"summary": "",
	"abstract": "An operating method on the basis of a data processing program is designed to control load-balanced access by a user computer to a server computer in a computer network. The load-balanced access takes place based on an inquiry by the user computer to all server computers regarding their load, and according to an assignment to the server computer with the lowest load.",
	"url": null,
	"owner": "HOB GmbH & Co. KG",
	"publication_number": "06950849",
	"publication_date": "2005-09-27",
	"application_number": "09702666",
	"application_date": "2000-11-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transceiver in a two-way satellite system",
	"summary": "",
	"abstract": "An apparatus for transmitting and receiving signals over a two-way satellite communication system is disclosed. A receiving unit receives data from a user terminal. A transmitting unit is coupled to the receiving unit and transmits the data to an antenna. The data is transmitted over a return channel that is established over the satellite to a hub; the hub has connectivity to a packet switched network.",
	"url": null,
	"owner": "Hughes Electronics Corp.",
	"publication_number": "06965581",
	"publication_date": "2005-11-15",
	"application_number": "09790379",
	"application_date": "2001-02-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for access to network via satellite",
	"summary": "",
	"abstract": "A system in which a personal computer sends messages into a TCP/IP network using a conventional dial-up link and downloads data from the TCP/IP network using a high-speed one-way satellite link. A preferred embodiment uses a conventional SLIP provider to connect to the TCP/IP network and uses a commercial software TCP/IP package that has a standard driver interface. A spoofing protocol compensates for the long propagation delays inherent to satellite communication.",
	"url": null,
	"owner": "Hughes Electronics Corporation",
	"publication_number": "06839770",
	"publication_date": "2005-01-04",
	"application_number": "09559118",
	"application_date": "2000-04-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for selectively retrieving information from a source computer using a terrestrial or satellite interface",
	"summary": "",
	"abstract": "A requesting terminal includes an interface that allows a user to select whether data downloaded from a network (such as the Internet) is transmitted to the requesting terminal via a high-speed link, such as a satellite link, or a lower speed link, such as a terrestrial link. Preferably, the terrestrial link (which may comprise a conventional dial-up Internet connection) is a two-way link, wherein the requesting terminal transmits data requests to the network via the terrestrial link. The data requests generated by the requesting terminal are modified to designate whether the requested data should be downloaded from the network via the terrestrial link or the satellite link. The terrestrial link may also be automatically selected for certain applications.",
	"url": null,
	"owner": "Hughes Electronics Corporation",
	"publication_number": "06931512",
	"publication_date": "2005-08-16",
	"application_number": "10054681",
	"application_date": "2001-11-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "METHOD OF ENHANCING HYPERLINKS BY ADDING USER SELECTABLE FUNCTIONS TO HYPERLINKS FOR CAPTURING DISPLAYABLE ELEMENTS AND THE URL ASSOCIATED WITH THE HYPERLINKS AND DISPLAYING A LINK SNAPSHOT BASED ON THE HYPERLINK",
	"summary": "",
	"abstract": "An enhanced hyperlink and method for providing an enhanced hyperlinked are provided. This invention permits the user to interact with a hyperlink in a variety of ways without necessarily having to open and/or follow the hyperlink. This is accomplished by detecting the presence of a cursor near a hyperlink. When the cursor has remained near the hyperlink for a predetermined time period, a toolbar is displayed containing one or more link enhancements that the user may select. In response to the users' selection of a particular link enhancement, then that link enhancement function would be performed without requiring the any further action. Examples of link enhancement include, but are not limited to, opening the selected link in a new window; opening the selected link in a new window with that window minimized; creating a clickable graphic/text string, and/or icon that would enable the user to return to the selected link at a later time, or anchor the current page by creating an icon or other clickable item that would return the user to the current page; or view off-line which would, in the background download the files associated with the selected link to a memory device for viewing later off-line.",
	"url": null,
	"owner": "I-LOR, LLC",
	"publication_number": "06925496",
	"publication_date": "2005-08-02",
	"application_number": "09594786",
	"application_date": "2000-06-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Sorted-paged retrieval of hierarchical data from relational databases",
	"summary": "",
	"abstract": "A method for sorted-paged retrieval of hierarchical data from a relational database is disclosed, which includes the use of one or more relational table equi-join terms in a query to increase the retrieval efficiency, suitable restrictions imposed on the join terms to further increase the retrieval efficiency, partial de-normalization or replication of information to improve the efficiency of the join operation(s) and thus further increase the retrieval efficiency, and proper cursor management to keep track of the current location of the cursor(s) involved. As a result, specific pages of objects can be efficiently retrieved from a database, while the specified sort orders and restrictions imposed by the original retrieval requests can be maintained.",
	"url": null,
	"owner": "i2 Technologies US, Inc.",
	"publication_number": "06898593",
	"publication_date": "2005-05-24",
	"application_number": "10072399",
	"application_date": "2002-02-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for managing ATP data in a distributed supply chain planning environment",
	"summary": "",
	"abstract": "A fulfillment server () for managing ATP data in a distributed supply chain planning environment receives an ATP request () from one of multiple clients (). The ATP request () includes multiple request line-items that each correspond to a desired product. The fulfillment server () then generates one or more component ATP requests () based on the request line-items and communicates component ATP requests () to at least one of multiple local fulfillment managers (). In response, the fulfillment server () receives component quotations () from the local fulfillment managers (), each corresponding to a component ATP request () and each including product availability information for the corresponding desired product. The fulfillment server () generates a quotation () that includes product availability information for all desired products, according to the component quotations (), and communicates the quotation () to the client ().",
	"url": null,
	"owner": "i2 Technologies US, Inc.",
	"publication_number": "06963847",
	"publication_date": "2005-11-08",
	"application_number": "09398171",
	"application_date": "1999-09-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method, and computer program product for administering channels, content, and data for mobile devices",
	"summary": "",
	"abstract": "Described herein are systems, methods, computer program products, and combinations and sub-combinations thereof, for enabling web content (as well as other objects) to be loaded on mobile devices (as well as other types of devices), and for users of mobile devices to operate with such web content on their mobile devices in an interactive manner while in an off-line mode.",
	"url": null,
	"owner": "Ianywhere Solutions, Inc.",
	"publication_number": "06839744",
	"publication_date": "2005-01-04",
	"application_number": "09559965",
	"application_date": "2000-04-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Digital prepress color mixing tools",
	"summary": "",
	"abstract": "A digital prepress color mixing tool is described, including suggestions for how to implement the tool within a native artwork production environment, such as Adobe Illustratoru2122. The invention allows for the prepress work of applying color mixtures to be accomplished without conversion to a proprietary file format, and with improved efficiency. The color mixing tool includes functions for automatically converting dirty colors, quick color mixing, and for modifying overprint settings.",
	"url": null,
	"owner": "Imagelinx International Ltd.",
	"publication_number": "06970175",
	"publication_date": "2005-11-29",
	"application_number": "10322848",
	"application_date": "2002-12-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data filter for haptic feedback devices having low-bandwidth communication links",
	"summary": "",
	"abstract": "Embodiments of the present invention provide computer program products, methods, and systems for use with low speed processors and/or low-bandwidth communication links. Embodiments of the present invention allows low-bandwidth communication links to proceed at a level similar to a high-bandwidth communication link by filtering data that the filter deems contains substantially identical haptic feedback parameters as a previously transmitted data.",
	"url": null,
	"owner": "Immersion Corporation",
	"publication_number": "06933920",
	"publication_date": "2005-08-23",
	"application_number": "10254340",
	"application_date": "2002-09-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for dynamic delivery of beads",
	"summary": "",
	"abstract": "A method and system for providing target code to various computer systems. The target code is provided by a service. The service provides a mechanism for third-party developers to submit initial or base code for distribution to end-user computers as target code. The service converts the initial code to target code that is suitable for execution on the end-user computer. When the service receives the request for target code that matches certain requester-specified characteristics, it selects the intermediate code that best matches the requester-specified characteristics. The service then sends the target code to the requester.",
	"url": null,
	"owner": "Implicit Networks, Inc.",
	"publication_number": "06907446",
	"publication_date": "2005-06-14",
	"application_number": "09706456",
	"application_date": "2000-11-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic and variable length extents",
	"summary": "",
	"abstract": "Described are techniques used in a computer system for handling data operations to storage devices. A switching fabric includes one or more fast paths for handling lightweight, common data operations and at least one control path for handling other data operations. A control path manages one or more fast paths. The fast path and the control path are utilized in mapping virtual to physical addresses using mapping tables. The mapping tables include an extent table of one or more entries corresponding to varying address ranges. The size of an extent may be changed dynamically in accordance with a corresponding state change of physical storage. The fast path may cache only portions of the extent table as needed in accordance with a caching technique. The fast path may cache a subset of the extent table stored within the control path. A set of primitives may be used in performing data operations. A locking mechanism is described for controlling access to data shared by the control paths.",
	"url": null,
	"owner": "Incipient, Inc.",
	"publication_number": "06959373",
	"publication_date": "2005-10-25",
	"application_number": "10218195",
	"application_date": "2002-08-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Locking technique for control and synchronization",
	"summary": "",
	"abstract": "Described are techniques used in a computer system for handling data operations to storage devices. A switching fabric includes one or more fast paths for handling lightweight, common data operations and at least one control path for handling other data operations. A control path manages one or more fast paths. The fast path and the control path are utilized in mapping virtual to physical addresses using mapping tables. The mapping tables include an extent table of one or more entries corresponding to varying address ranges. The size of an extent may be changed dynamically in accordance with a corresponding state change of physical storage. The fast path may cache only portions of the extent table as needed in accordance with a caching technique. The fast path may cache a subset of the extent table stored within the control path. A set of primitives may be used in performing data operations. A locking mechanism is described for controlling access to data shared by the control paths.",
	"url": null,
	"owner": "Incipient, Inc.",
	"publication_number": "06973549",
	"publication_date": "2005-12-06",
	"application_number": "10218186",
	"application_date": "2002-08-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer enabled training of a user to validate assumptions",
	"summary": "",
	"abstract": "A system, method and article of manufacture are disclosed which implement a training session for training a user to validate assumptions. First, a plurality stimuli are presented to a user in the context of a simulation. The user is then prompted to enter responses to the stimuli which are subsequently recorded. The user is then allowed to enter assumptions that form a basis of the responses. Next, the user is prompted to enter information on how to validate the assumptions which is subsequently received. Feedback is then outputted based on the stimuli and responses. Such feedback relates to appropriate assumptions and information on how to validate the appropriate assumptions. As an option, the feedback may be further based on a number of assumptions entered.",
	"url": null,
	"owner": "Indeliq, Inc.",
	"publication_number": "06962495",
	"publication_date": "2005-11-08",
	"application_number": "10806983",
	"application_date": "2004-03-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed navigation system",
	"summary": "",
	"abstract": "Computer-assisted navigation is achieved with component-oriented programming and instructions that provide a distributed component programming navigation system. The computer-assisted navigation is achieved with a computing device having program memory. Operationally, the component-oriented application loaded in the memory provides a distributed navigation system comprising a User Interface component, a Service Manager component, a User Positioning category of components that provides a user position based on navigation sensor data, and a Mapping category of components that accesses a map database and places the user position on a road segment of the map database. The components within the component-oriented application are managed by the service manager component to perform distributed navigation services.",
	"url": null,
	"owner": "Infogation Corporation",
	"publication_number": "06978206",
	"publication_date": "2005-12-20",
	"application_number": "10602326",
	"application_date": "2003-06-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for dynamically securing dynamic-multi-sourced persisted EJBS",
	"summary": "",
	"abstract": "Dynamic Multi-sourced Persisted Enterprise Java Bean (EJB) instances are dynamically created on a J2EE compliant Application Server to access data contained in multiple data source systems. This Dynamic Multi-sourced Persisted EJB is a general class responsible for dynamically aggregating source system information and securing it based on a Context definition. Individual EJB attributes that include mapping, caching and security definitions are mapped to individual pieces of data in source systems by the Context definition. A Context definition can be reloaded during execution as desired. Applications can access the Dynamic Multi-sourced Persisted EJB directly, or use a Session EJB to create a static interface to the dynamically mapped, cached and secured data. Using an attribute securing element, a security engine enforces access requirements on a system-wide basis.",
	"url": null,
	"owner": "Initiate Systems, Inc.",
	"publication_number": "06922695",
	"publication_date": "2005-07-26",
	"application_number": "10064975",
	"application_date": "2002-09-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "High performance object cache",
	"summary": "",
	"abstract": "The foregoing needs and other needs are addressed by the present invention, which provides, in one aspect, a mechanism for locating a data object. According to an aspect of the present invention, key values for data objects are generated, each key value may contain a first subkey value and a second subkey value. A mapping associates the first subkey values with storage locations. A particular first subkey value is mapped to storage location that contains second subkeys of a set of key values that correspond to the first subkey value. The storage location also includes additional information that may be used to locate objects associated with the set of key values.",
	"url": null,
	"owner": "Inktomi Corporation",
	"publication_number": "06915307",
	"publication_date": "2005-07-05",
	"application_number": "10140497",
	"application_date": "2002-05-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for networking driver protocol enhancement",
	"summary": "",
	"abstract": "Application Programming Interface, methods and apparatus are disclosed for enhancing data network communication. In a network including a first and a second network interface, each interface has an associated MAC address, and each network interface has a driver storing the MAC address for its associated interface. Under certain circumstances, such as in a fail-over condition, or to improve throughput, the second driver is conditionally directed to replace its stored MAC address with the MAC address of the first network interface. Thus, the second network interface can process network traffic as if it were the first network interface. Disclosed are several features and advantages resulting from such MAC reassignment.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06874147",
	"publication_date": "2005-03-29",
	"application_number": "09443026",
	"application_date": "1999-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Bandwidth reduction for rendering using vertex data",
	"summary": "",
	"abstract": "Embodiments of the present invention provide a split vertex buffer where the data for each vertex is split between parallel vertex buffers. The first buffer contains vertex X and Y data, while the second parallel buffer contains the remainder of the vertex data. Given the split vertex buffers, the hardware binning-engine is now permitted to read and cache only vertex screen X and Y data. Especially given a typically high level of temporal coherency between indexed vertex references, the reading and caching of large parcels of vertex screen-space X and Y leads to lower and highly efficient utilization of memory bandwidth for hardware binning input. Embodiments of the present invention thus reduce the hardware binning memory bandwidth requirements and improve memory utilization.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06950108",
	"publication_date": "2005-09-27",
	"application_number": "10856054",
	"application_date": "2004-05-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Configuration proxy service for the extended firmware interface environment",
	"summary": "",
	"abstract": "A method of abstracting information through object interfaces is described. The object interfaces are used to present platform device information in a pre-boot service environment. Firmware tables such as Advanced Configuration and Power Interface and System Management Basic Input/Output System may be used to auto-configure diagnostic test suites through an abstracted software interface.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06901534",
	"publication_date": "2005-05-31",
	"application_number": "10052830",
	"application_date": "2002-01-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Controlling access to multiple memory zones in an isolated execution environment",
	"summary": "",
	"abstract": "The present invention provides a method, apparatus, and system for controlling memory accesses to multiple memory zones in an isolated execution environment. A processor having a normal execution mode and an isolated execution mode generates an access transaction. The access transaction is configured using a configuration storage that stores configuration settings. The configuration settings include a plurality of subsystem memory range settings defining memory zones. The access transaction also includes access information. A multi-memory zone access checking circuit, coupled to the configuration storage, checks the access transaction using at least one of the configuration settings and the access information. The multi-memory zone access checking circuit generates an access grant signal if the access transaction is valid.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06934817",
	"publication_date": "2005-08-23",
	"application_number": "10683542",
	"application_date": "2003-10-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Deferred procedure call in interface description language",
	"summary": "",
	"abstract": "Described is a distributed processing system comprising a plurality of processing objects and an object management system. At least two of the processing objects comprise an interface in the object management system defining a bi-directional non-blocking procedure call from first processing object to a second processing object according to an interface definition language.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06934953",
	"publication_date": "2005-08-23",
	"application_number": "09997669",
	"application_date": "2001-11-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Depth write disable for rendering",
	"summary": "",
	"abstract": "A depth write disable apparatus and method for controlling evictions, such as depth values, from a depth cache to a corresponding depth buffer in a zone rendering system. When the depth write disable circuitry is enabled, evictions from the depth cache (as which typically occur during the rendering of the next zone) to the depth buffer are prevented. In particular, once the depth buffer is initialized (i.e. cleared) to a constant value at the beginning of a scene, the depth buffer does not need to be read. The depth cache handles intermediate depth reads and writes within each zone. Since the memory resident depth buffer is not required after a scene is rendered, it never needs to be written. The final depth values for a zone can thus be discarded (i.e., rather than written to the depth buffer) after each zone is rendering.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06954208",
	"publication_date": "2005-10-11",
	"application_number": "10844094",
	"application_date": "2004-05-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Efficient image allocation for zone rendering",
	"summary": "",
	"abstract": "Embodiments of the present invention efficiently support rendering of high resolution images under zone rendering. In particular, a bin array rectangle and binner clipping rectangle for determining primitive-zone intersections. Both of these rectangles are defined by graphics device state variables containing the screen-space location of the rectangle corners. In particular, the binner clipping rectangle is used to define the visible region in screen coordinates. Objects completely outside the binner clipping rectangle in one or more directions will be discarded. Objects that cannot be trivially rejected are subjected to bin determination. The bin array rectangle handles color buffer resolutions larger than could otherwise be accommodated by the optimally-renderer image limits.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06882349",
	"publication_date": "2005-04-19",
	"application_number": "10038787",
	"application_date": "2001-12-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Efficiently exporting local device access onto a system area network using a direct-call interface",
	"summary": "",
	"abstract": "A novel module system solution is provided for direct, transparent access to I/O storage devices connected to a host server within a system area network cluster for efficient sharing of resources and databases among all clustered servers. An exemplary driver system comprises a host driver module which may reside on and which may interface to a host operating system, and which establishes service connections with remote data processors on the system area network and provides direct access to the local storage devices while bypassing protocol stacks of the host operating system; an input/output platform (IOP) including a device driver module which may reside on and which may interface the local storage devices for controlling an array of local storage devices; and a local bus which connects and transports messages and data between the host driver module and the input/output platform (IOP). The host driver module may be a software stack which includes a Local Transport for providing an interface to the input/output platform (IOP) on the local bus and communicating with the input/output platform (IOP) across the local bus; a Remote Transport for providing an interface to other nodes of the system area network; and a Connection Manager for providing connection services and coordinating functions responsible for creating a direct call path between the Local Transport and the Remote Transport. The input/output platform (IOP) includes a communication layer which defines an open, standard mechanism for communication between the host driver module and the device driver module. Both the host driver module and the device driver module may constitute a single device that is portable across a plurality of operating systems (OSs) and host network platforms.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06965911",
	"publication_date": "2005-11-15",
	"application_number": "09215788",
	"application_date": "1998-12-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Executing large device firmware programs",
	"summary": "",
	"abstract": "A processor-based system includes a system firmware program (e.g., the system basic input/output system (BIOS)) to execute a device firmware program (e.g., a device driver) stored on a storage device (e.g., an expansion read-only-memory (ROM)). For execution, the processor-based system uses a system memory including a designated region intended for storing the device firmware program. The system firmware program determines whether the device firmware program exceeds the capacity of the designated region. And, if so, the system firmware program stores the device firmware program in the designated region and at least one another location in the system memory thus supporting larger expansion ROMs on some platforms.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06910113",
	"publication_date": "2005-06-21",
	"application_number": "09948805",
	"application_date": "2001-09-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "IP router with hierarchical user interface",
	"summary": "",
	"abstract": "A hierarchical interface component of a router transforms the flat feature presentation of traditional routers into a hierarchical feature presentation. The features are organized as functional components that include sub-components and attributes. Attributes store values relating to routing algorithms and components represent functionality relating to a routing algorithm and may contain additional components (sub-components) or attributes. The hierarchical interface allows a user to easily inspect, modify, and read the router attributes. Further, because the interdependencies of the attributes are clearly and visually displayed to the user, the user may more quickly understand the ramifications of changing a particular router attribute.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06850976",
	"publication_date": "2005-02-01",
	"application_number": "09540534",
	"application_date": "2000-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing a secure platform using a hierarchical executive architecture in isolated execution mode",
	"summary": "",
	"abstract": "A processor executive (PE) handles an operating system executive (OSE) in a secure environment. The secure environment has a fused key (FK) and is associated with an isolated memory area in the platform. The OSE manages a subset of an operating system (OS) running on the platform. The platform has a processor operating in one of a normal execution mode and an isolated execution mode. The isolated memory area is accessible to the processor in the isolated execution mode. A PE supplement supplements the PE with a PE manifest representing the PE and a PE identifier to identify the PE. A PE handler handles the PE using the FK and the PE supplement.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06957332",
	"publication_date": "2005-10-18",
	"application_number": "09539344",
	"application_date": "2000-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for functional redundancy check mode recovery",
	"summary": "",
	"abstract": "A method and apparatus for functional redundancy check mode recovery is disclosed. A method in accordance with one embodiment includes detecting an event associated with a device within a data processing system, initiating a platform-independent device removal sequence for the device in response to detecting the event, virtually ejecting the device from the data processing system in response to initiating the platform-independent device removal sequence, and servicing the event associated with the device in response to virtually ejecting the device from the data processing system.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06920581",
	"publication_date": "2005-07-19",
	"application_number": "10038323",
	"application_date": "2002-01-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for handling data transfers",
	"summary": "",
	"abstract": "Embodiments of the present invention provide for implementation of data transfers in an efficient manner. The 48-bit LBA mechanism requires two sets of I/O writes to IDE registers on primary channel or secondary channel. The two sets of I/O writes to the primary or secondary channel registers are performed by setting a status register to a first or second state appropriately depending on the data. Embodiments of the present invention provide a single set of writes to I/O registers when the size of the data transfer is equal to or below a threshold value.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06892274",
	"publication_date": "2005-05-10",
	"application_number": "10236344",
	"application_date": "2002-09-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for initializing a new node in a network",
	"summary": "",
	"abstract": "A method for initializing a new node in a network. The network has multiple nodes arranged in a virtual tree format. The new node is a node of the tree, and each node of the tree has a set of attributes and a set of rolled up attributes to identify each node. A query is automatically sent to the nodes to determine what contents to download. The contents are then stored as block files in the nodes. The query contains the set of attributes and rolled up attributes for the new node. The query receives replies from a subset of the nodes that have the contents needed for the new node. Each reply identifies what subset of the block files is available and the performance characteristics of that replying node. Then the desired contents from the subset of the block files from nodes that are least congested is downloaded.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06857012",
	"publication_date": "2005-02-15",
	"application_number": "09681671",
	"application_date": "2001-05-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for integrating the user interfaces of multiple applications into one application",
	"summary": "",
	"abstract": "A method including receiving a request to launch a first application and then launching the first application in a suspended mode. Further, installing a message hook in the first application; and unsuspending the first application. Also, an apparatus for performing the above method including a processor and a memory connected to the processor.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06871348",
	"publication_date": "2005-03-22",
	"application_number": "09396709",
	"application_date": "1999-09-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for large payload distribution in a network",
	"summary": "",
	"abstract": "Large payload files are selectively partitioned in blocks and the blocks distributed to a plurality of distribution stations at the edge of the network qualified to have the data. Each qualified station decides how much and what portion of the content to save locally, based on information such as network location and environment, usage, popularity, and other distribution criteria defined by the content provider. Different pieces of a large payload file may be available from different nodes, however, when a user requests access to the large payload file, for example, through an application server, a virtual file control system creates an illusion that the entire file is present at the connected node. However, since only selective portions of the large payload file may actually be resident at that node's storage at the time of request, a cluster of distribution servers at the distribution station may download the non-resident portions of the file as the application server is servicing the user. The download may be in parallel and usually from the least congested nodes. New nodes added to the network learn from other nodes in the network what content they should have and download the required content, in a desired amount, onto their local storage devices from the nearest and least congested nodes without interrupting network operation. Each node manages its local storage and decides what content to prune based on information such as usage patterns.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06970939",
	"publication_date": "2005-11-29",
	"application_number": "09681644",
	"application_date": "2001-05-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus to improve file management",
	"summary": "",
	"abstract": "Techniques to manage a file are described. An apparatus may comprise a file system interface for a client to receive a request for a file having a file name. The client may generate a unique identifier for the file name in response to the request using a stream cone messaging system, with the unique identifier to represent the file name and comprising a fewer number of bits than the file name. An interconnect system connected to the client may communicate the unique identifier and file name to the server. Other embodiments are described and claimed.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06928426",
	"publication_date": "2005-08-09",
	"application_number": "09751862",
	"application_date": "2000-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus utilizing an agent on the host processing system to initiate loading of a program in response to an event at the host processing system",
	"summary": "",
	"abstract": "Disclosed are a system and method of launching a program on a host processing system from instructions provided by a peripheral device coupled to the host processing system. An agent residing on the host processing system initiates the loading of a program stored in a memory of the peripheral device on the host processing system in response to detection of an event at the host processing system. In response to detecting the event, the agent may initiate a reboot of the host processing system to load a bootable image to the host processing system from instructions stored on the peripheral device. A utility program may also be launched on the host processing system under the control of the operating system loaded from the peripheral device.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06907523",
	"publication_date": "2005-06-14",
	"application_number": "09747530",
	"application_date": "2000-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system enabling both legacy and new applications to access an InfiniBand fabric via a socket API",
	"summary": "",
	"abstract": "An intermediate layer referred to as InfiniSock that enables socket-based, legacy applications to access an InfiniBandu00ae fabric, while also enabling new applications designed to take advantage of the InfiniBandu00ae Architecture to function within a socket API environment. The InfiniSock layer supports the traditional AF_INET address family and also includes a novel address family referred to as AF_IB to support the InfiniBandu00ae Architecture.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06895590",
	"publication_date": "2005-05-17",
	"application_number": "09965265",
	"application_date": "2001-09-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system to reduce thrashing in a multi-threaded programming environment",
	"summary": "",
	"abstract": "A method and system to reduce thrashing in a multi-threaded programming environment is disclosed. A method in accordance with one embodiment of the present invention includes intercepting an operating system thread creation request for a function, creating a thread including a stack in response to intercepting the operating system thread creation request, modifying an initial stack pointer of the stack, and executing the function utilizing the thread in response to modifying the initial stack pointer.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06978466",
	"publication_date": "2005-12-20",
	"application_number": "10039255",
	"application_date": "2002-01-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for representing and controlling packet data flow through packet forwarding hardware",
	"summary": "",
	"abstract": "The present invention defines an object-oriented programming model appropriate for both ASIC-based networking silicon as well as network processors. This model obtains this range of expressiveness by identifying the fundamental units of packet processing performed by underlying hardware (either ASIC or network processor). Software objects, called Stages, are then created to encapsulate and represent these fundamental units of packet processing. Using this API, a directed graph of packet flow is formed using the Stage objects. This directed graph of packet flow models packet processing performed by underlying forwarding hardware. As a result, additional services can be added or deleted from a single switching/routing device without affecting the underlying forwarding engine hardware.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06975628",
	"publication_date": "2005-12-13",
	"application_number": "09747384",
	"application_date": "2000-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of correcting a machine check error",
	"summary": "",
	"abstract": "Processor implementation-specific instructions save a processor state in a system memory and attempt to correct the error. Control is then transferred to processor-independent instructions. Control is returned to the processor implementation-specific instructions which then return to an interrupted context of the processor by restoring the processor state.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06948094",
	"publication_date": "2005-09-20",
	"application_number": "09966386",
	"application_date": "2001-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for controlling an electronic device",
	"summary": "",
	"abstract": "Methods and apparatus for controlling an electronic device connected to a network are provided. The methods and apparatus described herein convert a text based device list and/or a text based function list into text based voice prompt scripts. The voice prompt scripts are then read to a user via a text-to-speech engine. The user responds with a voice command for a device. The voice command is converted to text by a voice recognition engine. This text is then used to send a command to the electronic device via the network.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06889188",
	"publication_date": "2005-05-03",
	"application_number": "10302446",
	"application_date": "2002-11-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network dedication system",
	"summary": "",
	"abstract": "A method includes receiving a dedication from a first user via a network and applying the dedication to a play list of a second user.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06856990",
	"publication_date": "2005-02-15",
	"application_number": "09829600",
	"application_date": "2001-04-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network-based detection and display of product replacement information",
	"summary": "",
	"abstract": "A method and system for determining part replacement related information by an end user. A user scans an identifier associated with a part. A scanner interface automatically couples the scanned identifier to a network enabled browser. The browser automatically connects over a network connection to a remote database to retrieve replacement related information for the part, where such database searchable by the associated identifier. The retrieved replacement related information for the part is automatically displayed for the end user. The retrieved information may also contain information related to the part, such as related parts that also need to be replaced, along with instructions, concerns, and warnings related to replacing the part. This information may be processed by an expert-type system, allowing the end user to engage in an interactive session regarding the part replacement. This information may also include expert-system instructions, e.g., a rule-set or the like, allowing the expert system to interactively aid the end user in diagnosing the nature and/or extent of the part defect, and help the end user to effect proper maintenance.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06910076",
	"publication_date": "2005-06-21",
	"application_number": "09339265",
	"application_date": "1999-06-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Operating system independent",
	"summary": "",
	"abstract": "A system and method of using of diagnostic procedures through a firmware interface in a processing system are described. A first physical area of a memory may store one or more diagnostic modules comprising machine-readable instructions for performing one or more diagnostic procedures of a processing system. A second physical area of the memory may store an operating system capable of initiating execution of the one or more diagnostic procedures through the firmware interface.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06868507",
	"publication_date": "2005-03-15",
	"application_number": "09708205",
	"application_date": "2000-11-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Packet processing in a router architecture",
	"summary": "",
	"abstract": "A routing architecture comprising at least one or more switches for packet switching and a controller for controlling the switches is proposed. A packet is received by the controller through the switch as if the switch is located in the controller.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06879587",
	"publication_date": "2005-04-12",
	"application_number": "09608307",
	"application_date": "2000-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software call control agent",
	"summary": "",
	"abstract": "The present disclosure describes a method comprising establishing a connection between a software communication channel and a media server, wherein the software communication channel is presented to the server as a media stream; transmitting to the media server a call object including a media handle; attaching a media application to the media handle; and establishing a connection between the media application and the software communication channel. The disclosure further describes an apparatus comprising a computing platform including a private branch exchange (PBX); a media server installed on the computing platform; and software operative with the computing platform and the media server to establish a connection between a software communication channel and a media server, wherein the software communication channel is presented to the server as a media stream, transmit to the media server a call object including a media handle, attach a media application to the media handle; and establish a connection between the media application and the software communication channel.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06853720",
	"publication_date": "2005-02-08",
	"application_number": "09967367",
	"application_date": "2001-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for reducing power consumption in multiprocessor system",
	"summary": "",
	"abstract": "A method and apparatus for power management is disclosed. The invention reduces power consumption in multiprocessing systems by dynamically adjusting processor power based on system workload. Particularly, the method and apparatus determines the number of required processors based on the number or active threads and sets a processor affinity to run the active threads on the determined number of required processors, thereby allowing the free processors to enter a low-power state.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06901522",
	"publication_date": "2005-05-31",
	"application_number": "09876609",
	"application_date": "2001-06-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for delivery of dynamic content to a client device",
	"summary": "",
	"abstract": "A system for presenting dynamic content to a user of a client device is implemented in a method including the steps of presenting a requested data object to the user; and automatically presenting dynamic content to the user in addition to the presentation of the requested data object, wherein the dynamic content includes information provided by a dynamic executable module running on the client device.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06892226",
	"publication_date": "2005-05-10",
	"application_number": "09000709",
	"application_date": "1997-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transmitting data over a general packet radio service wireless network",
	"summary": "",
	"abstract": "In a communication system, a subscriber unit includes a storage device storing an application program to determine for transmission a current reserved bandwidth and a transmission parameter based on a quality of based on a quality of service profile, and an adapter to communicate data over a wireless network (e.g., a general packet radio service network) that supports a service, satisfying a reliability requirement for the service. The adapter may dynamically adjust the transmission parameter for the transmission before retransmitting one or more packets of data, e.g., at a rate and retransmission times commensurate with the current reserved bandwidth, and the reliability requirement in addition to the a current quality of service profile, ensuring a service level which otherwise cannot be provided by an infrastructure negotiated quality of service, especially in relatively shorter flows of data.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06904058",
	"publication_date": "2005-06-07",
	"application_number": "10251269",
	"application_date": "2002-09-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Updating a file in a fragmented file system",
	"summary": "",
	"abstract": "The present invention provides for reliably updating a file by making a backup copy of the portion of a file that includes changed data. The revised portion of the file is related to the other file portions through cross-linking of units. Upon completely updating the file and linking the data, old data is deleted. Thus, an entire file need not be duplicated for backing up an update. Furthermore, progress of the update may be tracked by marking the backup copy during the update process. The portions of a data object for the file may be mapped by marking a unit as valid if the data contained therein is current and linked if the unit is related to other portions of the file. In addition, other aspects of the present invention relating to the storage system updating a fragmented file are described.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06954765",
	"publication_date": "2005-10-11",
	"application_number": "09751545",
	"application_date": "2000-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and article of manufacture for updating content stored on a portable storage medium",
	"summary": "",
	"abstract": "A system, method, and article of manufacture is provided for updating content stored on a portable storage medium. Upon input of a portable storage medium into a machine by a user, the content stored on the portable storage medium is read. After reading the content of the portable storage medium, a separate storage medium is accessed and content is received therefrom. The content from the separate storage medium is an update of the content of the portable storage medium. This content of the separate storage medium is then displayed.",
	"url": null,
	"owner": "InterActual Technologies, Inc.",
	"publication_number": "06944621",
	"publication_date": "2005-09-13",
	"application_number": "09476190",
	"application_date": "2000-01-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Remote anomaly diagnosis and reconfiguration of an automatic data collection device platform over a telecommunications network",
	"summary": "",
	"abstract": "The invention provides a system and method for remotely diagnosing and repairing a plurality of Automatic Data Collection (u201cADCu201d) device platforms. A remote service technician utilizes a computing system having browsing software that communicates with a network of ADC platform devices. Diagnostic queries for particular ADC devices may be retrieved by the browsing software from a diagnostic server that sends Hypertext Mark-Up Language (u201cHTMLu201d) documents, Dynamic Hypertext Mark-Up Language (u201cDHTMLu201d) documents, and/or Extensible Mark-Up Language (u201cXMLu201d) documents containing appropriate diagnostic applets. The remote technician sends diagnostic queries to a Simple Network Management Protocol (u201cSNMPu201d) master agent at the ADC device platform, and a translator translates the diagnostic queries sent to the ADC device platform into a format suitable for reception by its ADC devices in order to effect anomaly diagnosis and functionality restoration. Another translator translates data received from the ADC device into the SNMP format for transmission to the remote service technician in order for the remote service technician to perform diagnostic analysis. The SNMP master agent communicates with the remote computing system using the Transmission Control Protocol (u201cTCPu201d), the User Datagram Protocol/Internet Protocol (u201cUDP/IPu201d), and/or the User Datagram Plus Protocol (u201cUDP+u201d). The ADC platform device may also utilize a wireless communication system for communicating with the remote service technician.",
	"url": null,
	"owner": "Intermec IP.Corp.",
	"publication_number": "06857013",
	"publication_date": "2005-02-15",
	"application_number": "09240108",
	"application_date": "1999-01-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Ephemeral list for object-action navigation",
	"summary": "",
	"abstract": "An Ephemeral List navigation panel provided in conjunction with an Object-Action navigation tool which is a temporary u201cparking spaceu201d for objects encountered within other portions or modules of the Object-Action navigation tool. The panel represents a history, preferably in the form of a push-down stack, of products and/or objects encountered by the user. Items and objects within the panel are selectable by the user, and may be acted upon as indicated by the user such as adding, deleting, filtering and sorting them. The panel may be populated directly or indirectly by other processes associated with the Object-Action navigation tool, and the panel may cause actions within the other processes directly or indirectly responsive to user actions on the panel.",
	"url": null,
	"owner": "International Business Machines Corp.",
	"publication_number": "06931416",
	"publication_date": "2005-08-16",
	"application_number": "10005136",
	"application_date": "2001-12-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Inheritance of background color in a containment hierarchy of objects in a graphical user interface",
	"summary": "",
	"abstract": "A system and method are disclosed whereby the normal mechanism for color inheritance for the Swing application program interface (API) is altered to provide consistency with legacy Java applications in which the graphical user interface (GUI) is based on the abstract windowing toolkit (AWT) in legacy applications. According to the system and method disclosed herein, if the background color of a GUI object (such as a button) is explicitly declared, the object will be displayed with that color. Otherwise, the object inherits the background color defined by global settings in the Swing API. If no such settings are in effect, the object inherits the background color of its parent (as is the case in legacy AWT-based applications). This modification is available in an extension to Swing, referred to herein as AWTSwing.",
	"url": null,
	"owner": "International Business Machines Corp.",
	"publication_number": "06918093",
	"publication_date": "2005-07-12",
	"application_number": "09870615",
	"application_date": "2001-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Accessing a ERP application over the internet using strongly typed declarative language files",
	"summary": "",
	"abstract": "The present invention provides a method and apparatus for executing ERP application requests in a computer-implemented ERP data processing system via a network, using the steps of:nn",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06854120",
	"publication_date": "2005-02-08",
	"application_number": "09483069",
	"application_date": "2000-01-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Activemark mechanism in a live parsing editor",
	"summary": "",
	"abstract": "An activemark mechanism for a live parsing editor allows marks (labels) in text to be referenced or linked to any editor command, macro, or any external tool activated by the editor. The activemark mechanism includes a parsing mechanism which creates an activemark automatically when the document is loaded in the editor, and thereafter as a user enters information into the document by parsing the changes to the document as they are committed. The activemarks are dynamic in that their meaning and behavior are updated in the context of any external tool which is activated by the editor.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06976209",
	"publication_date": "2005-12-13",
	"application_number": "09291147",
	"application_date": "1999-04-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for avoiding deadlocks in a multithreaded environment",
	"summary": "",
	"abstract": "An apparatus and method for avoiding deadlocks in a multithreaded environment is provided. The apparatus and method provide a mechanism by which multiple threads are allowed to call a method virtually simultaneously without experiencing the problems regarding multiple compilations of the same method or a lock being held by one thread while other threads wait on the lock. With the apparatus and method, the first thread to call a method is the thread that causes the method to be compiled. Subsequent calls to the method, during a period of time in which the method is being compiled, are redirected to the JVM interpreter, thereby avoiding any deadlock situation.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06883165",
	"publication_date": "2005-04-19",
	"application_number": "09671770",
	"application_date": "2000-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for detecting and handling exceptions",
	"summary": "",
	"abstract": "An apparatus and method are provided for detecting and handling exceptions. Instructions that are executed only when there is an exception pending are qualified by a first predicate register in a predicate register pair. Instructions that are executed only when there is no exception pending are qualified based on a second predicate register in the predicate register pair. When an exception is thrown, a determination is made as to whether or not the instruction that threw the exception is in a try block, or range, of the method that threw the exception. If not, the first predicate register predicated instruction to branch to a return stub for the method is generated. If the instruction that threw the exception is in a try block of the method, the first predicate register predicated instruction to branch to a snippet associated with the method is generated.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06886094",
	"publication_date": "2005-04-26",
	"application_number": "09671877",
	"application_date": "2000-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for ensuring data integrity of unauthenticated code",
	"summary": "",
	"abstract": "An apparatus and method for ensuring data integrity of unauthenticated code is provided. With the apparatus and method, a hash value of unauthenticated code is embedded in associated automatically authenticated code. When the automatically authenticated code is downloaded and executed, the automatically authenticated code may require that the unauthenticated code also be downloaded for proper execution of the automatically authenticated code on a particular client device. The unauthenticated code can be downloaded and its integrity verified by generating a hash value of the unauthenticated code and comparing the generated hash value to a hash value embedded in the automatically authenticated code. If there is a match, the unauthenticated code is verified. If there is not a match, the unauthenticated code has been corrupted during transmission and is not verified. As a result, the unauthenticated code is not used by the client device. The download of the unauthenticated code can then be attempted again and the verification process repeated.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06922782",
	"publication_date": "2005-07-26",
	"application_number": "09595287",
	"application_date": "2000-06-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for managing multiple user identities on a networked computer system",
	"summary": "",
	"abstract": "An apparatus and method allow a system administrator to manage multiple user identities in multiple user registries in different processing environments. An identity mapping mechanism is provided that includes a directory service that includes entries that reference user identities in the multiple registries, and that reference identity mappings between those entries. The identity mapping mechanism includes an interface defined by a plurality of APIs that allow accessing and correlating the multiple user identities and the identity mappings. A programmer can generate an application or tool that uses the identity mapping mechanism by calling the APIs in the interface. In this manner, administration of user identities occurs with the user as the primary focus, rather than the platform. In addition, a common tool can be used to manage the user identities of different environments, making administration of user identities in a heterogenous network more efficient and cost-effective.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06981043",
	"publication_date": "2005-12-27",
	"application_number": "09818064",
	"application_date": "2001-03-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for synchronizing software between computers",
	"summary": "",
	"abstract": "A method and apparatus for synchronizing software between computers are disclosed. A software fix manager compares a preferred software inventory with a software inventory from a computer that is to be synchronized and, from this comparison, creates a number of software product synchronizations. An update manager uses the software fix list to apply software product synchronizations to the computer. Preferably, the computer can be brought to the same fix level or product level, if desired, as the preferred software inventory through this process. The software fix manager can place synchronizations in a fix list. There can be multiple software product synchronizations per software product, and the synchronizations can be applied to a computer by removing a software product fix or installing a product software fix. The current invention may also be applied to software products themselves, by installing or removing software products. The present invention potentially has its best application in networks, as numerous target computers or groups of target computers may be synchronized with a preferred software inventory of a model system.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06968550",
	"publication_date": "2005-11-22",
	"application_number": "10051405",
	"application_date": "2002-01-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method to provide persistence for application interfaces",
	"summary": "",
	"abstract": "According to a preferred embodiment of the present invention, a persistent CGI model is used to provide a CGI program extension that captures the advantages of the presently known CGI model but overcomes many of the related disadvantages. The persistent CGI program is executed as a sub-process of the web server. The persistent CGI program receives input from web browsers through standard input and environment variables and provides output through standard output in the same manner as existing CGI programs. However, unlike existing CGI programs, the persistent CGI program is not automatically terminated after output is transmitted to the web browser by the web server application. Instead, the persistent CGI program remains active and waits for additional input from the same web browser. This allows transactions to remain open and, accordingly, state data relating to on-going transactions can be maintained in between web browser requests. Additionally, since the CGI process is persistent and maintains communication with the same web browser for multiple requests, there is no need to instantiate a separate CGI process for each subsequent request from the same web browser for the same transaction. Therefore, the persistent CGI programming model of the present invention can reduce system overhead and streamline system operation.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06938257",
	"publication_date": "2005-08-30",
	"application_number": "08896245",
	"application_date": "1997-07-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus, system, and method for managing quality-of-service-assured e-business service systems",
	"summary": "",
	"abstract": "One or more SLA-specified service-level monitors and/or one or more provider-owned service-level management monitors are used by the invention to monitor one or more quality measures of one or more QoS-assured service systems and to generate one or more service-level monitoring events when the monitored system does not conform to the respective quality measures. The invention includes a cross-SLA event manager that receives the monitoring events and determines which one or more SLA contracts are affected by the events. Then one or more SLA management objects (SMOs) track the SLA-specific events generated by the event manager according to each of the respective SLA contracts. The SMOs also determine how to allocate/deallocate/configure SLA management resources and/or to determine the effect of these changes on the service system operation to assure the contracted quality of service. A cross-SLA resource manager handles the SMOs' resource allocation requests and optimizes the allocation of available resources per the service provider's SLA management objectives. Finally, a SMO manager manages the execution of SMOs and facilitates the integration and management of service system testing-time and production-time activities.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06857020",
	"publication_date": "2005-02-15",
	"application_number": "09716862",
	"application_date": "2000-11-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application program interface that can maintain similar look and feel of a displayed image regardless of whether the interface is platform dependent or platform independent",
	"summary": "",
	"abstract": "A system and method are disclosed whereby the look and feel of the OS/2 operating system is added to the Swing application program interface (API), in an enhanced version of the API, referred to herein as AWTSwing. A further disclosure is the creation of a thread-relative setLookAndFeel method, which only accepts calls from a particular thread to adopt a prescribed look and feel. This makes it possible for an application to have a look and feel distinct from that of the platform, or of other concurrently executing applications. This capability is not present in the conventional version of the Swing API, which treats look and feel settings as global.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06957391",
	"publication_date": "2005-10-18",
	"application_number": "09870611",
	"application_date": "2001-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Architecture for the graphical management and analysis of authentication tokens",
	"summary": "",
	"abstract": "An analysis of at least one authentication token for an application is provided. At least one login module within the application is identified. Responsive to a failure to access the application, principal information is retrieved associated with the at least one login module. A recovery action is then generated. The recovery action corresponds to the failure and the principal information.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06976076",
	"publication_date": "2005-12-13",
	"application_number": "09895223",
	"application_date": "2001-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Array-based extensible document storage format",
	"summary": "",
	"abstract": "Systems and computer program products are provided having a plurality of arrays used to represent structured documents. The arrays include an element name array including an element name entry for each element in the structure document, an element value array including an element value entry for each element in the structured document, an attribute array including an attribute entry for each element in the structured document, a parent array including a parent entry for each element in the structured document and a child array including a child entry for each element in the structured document, The value of each parent entry identifies a parent of the element and the value of each child entry identifies zero or more children of the element.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06938204",
	"publication_date": "2005-08-30",
	"application_number": "09652296",
	"application_date": "2000-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic feature augmentation for component based application programming interfaces",
	"summary": "",
	"abstract": "Automatically augmenting functionality in an application programming interface (u201cAPIu201d) is provided by receiving from an application a request for functionality to be fulfilled by a first component implementing at least a portion of the functionality within the application programming interface. The first component is queried for the requested functionality. If an indication that the first component does not implement the requested functionality is received, the a search for an augmentation component that implements the requested functionality is initiated. If an augmentation component supplying the required functionality is found, the augmentation component is loaded to fulfill the request for functionality in place of the first component and used to respond to the request for functionality. Augmentation components provide a subset of the API's required functionality, thereby removing a limitation from API components (i.e., functionality completeness). Augmentation components may also be used to provide new functionality for the API to all existing components (i.e., functionality enhancement).",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06848110",
	"publication_date": "2005-01-25",
	"application_number": "09747751",
	"application_date": "2000-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Conditional highlighting of given cells in a dynamic HTML table",
	"summary": "",
	"abstract": "A method operative at a server for generating a table having dynamic data. According to the method, a page developer may specify a given table cell in the table for conditional treatment. In response to a request for the table received from a client browser, the table is populated with dynamic data, preferably by instantiating a table format object. If the dynamic data in the table cell meets a given condition, the table cell is highlighted. Using this technique, the page developer may conditionally highlight a particular cell based on the characteristics of the dynamic data to be presented in the cell.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06851088",
	"publication_date": "2005-02-01",
	"application_number": "09455710",
	"application_date": "1999-12-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Customization of object property layout for a user interface",
	"summary": "",
	"abstract": "A process flow development tool is given a capability of determining the properties corresponding to a particular type of object and allowing a user to decide how and where the properties will be shown in a Properties dialog for individual objects of the particular type. The capability allows the tool to present a dialog that allows the user to customize, for the particular type of object, the layout for the properties in the Properties dialog. This layout may then be stored in an organizer object associated with the particular type of object.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06925598",
	"publication_date": "2005-08-02",
	"application_number": "10105140",
	"application_date": "2002-03-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data processing arrangement and method",
	"summary": "",
	"abstract": "A data processing arrangement () and method for fuzzy backup and restore of MQSeries shared queues held in coupling facility list structure (). Periodically backups are taken of the data held in the CF list structure by backing up messages in the sequence uncommitted puts (), committed puts (), uncommitted gets () and expired messages (), whereby all messages may be backed up in the backup means except for exceptions which are recorded in the record log. In the event of media failure of the coupling facility, data can be restored by restoring messages in the sequence restoring messages from the backup means (), replaying messages from the record log means () and determining final disposition of messages from replay of the record log means (). This provides the advantage of allowing the number of log records written to be reduced.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06948093",
	"publication_date": "2005-09-20",
	"application_number": "10228636",
	"application_date": "2002-08-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data processing arrangement and method",
	"summary": "",
	"abstract": "This provides advantages of reduced resource cost for the fuzzy backup and reduced restore time.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06848037",
	"publication_date": "2005-01-25",
	"application_number": "10228615",
	"application_date": "2002-08-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data processing system and method for managing memory of an interpretive system",
	"summary": "",
	"abstract": "A data processing system and method manage the storage of instructions used in applications developed using an interpretive programming language, such as Java, REXX, BASIC, and the like, when those instructions are compiled into byte-codes to be used by a virtual machine stored in a u201cheap.u201d In the data processing system and method, an exception is registered in a page manager of an operating system to identify that compiled code should be stored within the heap of the virtual machine. After that code has been compiled and deleted from the heap, an exception occurs when the virtual machine attempts to subsequently access the compiled code. At that point, the virtual machine is then enabled to retrieve the desired code from an interpreted programming language application.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06862650",
	"publication_date": "2005-03-01",
	"application_number": "08970417",
	"application_date": "1997-11-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data storage device and method for storing information using alternate information storage architectures",
	"summary": "",
	"abstract": "A computer code product comprising a data management system which supports the capability to record information on a data storage medium using alternative information storage architectures.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06868487",
	"publication_date": "2005-03-15",
	"application_number": "09968592",
	"application_date": "2001-10-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Digital content preparation system",
	"summary": "",
	"abstract": "A digital content preparation system that includes a metadata acquisition tool for acquiring metadata associated with the digital content, and a digital content processor for processing the digital content by performing at least one of watermarking, encoding, and encrypting. A work flow manager manages processings by the metadata acquisition tool and the digital content processor. In one preferred embodiment, the metadata acquisition tool includes an automatic metadata acquisition tool and a manual metadata acquisition tool, and the digital content processor includes an encoder and an encrypter. The present invention also provides a method for preparing digital content. According to the method, metadata associated with the digital content is acquired, and the digital content is processed by at least one of watermarking, encoding, and encrypting. Processings in the acquiring step and the processing step are managed. In a preferred method, the acquiring step includes automatically retrieving at least a portion of the metadata and allowing manual entry of at least a portion of the metadata, and the processing step includes encoding the digital content and encrypting the encoded digital content.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06959288",
	"publication_date": "2005-10-25",
	"application_number": "09241276",
	"application_date": "1999-02-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Discovering stolen or lost network-attachable computer systems",
	"summary": "",
	"abstract": "A network-attachable computer system () that comprises a network interface for connection to a network (), a server module address, a secure identifier (ID), and a key k. The computer system () generates identity information which comprises the secure identifier ID and which is protected using said key k. This identity information is automatically sent via the network interface to a server module () which is reachable via the network () by using said server module address where it is used to determine whether the respective computer system () is reported lost or stolen.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06950946",
	"publication_date": "2005-09-27",
	"application_number": "09539809",
	"application_date": "2000-03-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic end user specific customization of an application's physical data layer through a data repository abstraction layer",
	"summary": "",
	"abstract": "A system, method and article of manufacture are provided for accessing data independent of the particular manner in which the data is physically represented. In one embodiment, a plurality of data repository abstractions provide different logical views of the same underlying data repository. The plurality of data repository abstractions may each be associated with different users, thereby exposing a different set of data to each user. A runtime component performs translation of abstract queries into a form that can be used against a particular physical data representation.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06928431",
	"publication_date": "2005-08-09",
	"application_number": "10132228",
	"application_date": "2002-04-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Efficient schema for storing multi-value attributes in a directory service backing store",
	"summary": "",
	"abstract": "A database schema for storing application data in a relational database backing store of a directory service. The application data has at least some entries with multiple value attributes. According to the invention, the application data is profiled to determine how it may be optimally stored in the backing store. Preferably, single entries having single value attributes are stored in a merged attribute table, while entries having multiple value attributes are stored in per attribute tables. According to the optimization, a majority of the attributes are single valued and are stored in the merged table, and the per attribute tables thus store a relatively smaller number of exceptions. This database schema enhances processing of conventional directory service queries into the backing store.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06865576",
	"publication_date": "2005-03-08",
	"application_number": "09316754",
	"application_date": "1999-05-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Evaluating test actions",
	"summary": "",
	"abstract": "Exemplary embodiments of the present invention include methods for evaluating a test action for a user. Such methods include creating, within a network, a user metric vector in dependence upon a plurality of disparate user metrics, selecting a test action in dependence upon the user metric vector, executing the test action within the network, and determining a user reaction. Many embodiments also include adding the test action to a user's action list in dependence upon the user reaction. Other embodiments often include deleting the test action from an test action list in dependence upon the user reaction.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06961668",
	"publication_date": "2005-11-01",
	"application_number": "10692409",
	"application_date": "2003-10-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Extensible markup language (XML) server pages having custom document object model (DOM) tags",
	"summary": "",
	"abstract": "A method for serving a web page uses eXtensible Markup Language (XML) server pages. The first time a page is accessed, a given flat file is parsed into an XML Document Object Model (DOM), and required tag libraries are loaded. The DOM tree is then traversed, preferably in a depth-first, inside-out manner to locate custom tags. Upon locating a custom tag, if the tag is registered as a Java object, the object is loaded. A process method is then called on the object, passing the custom tag's tree node. The Java object then examines the custom tag and replaces it with an object, e.g., script code. Alternatively, if the tag is registered as an XSL stylesheet, the stylesheet is loaded and passed, together with the DOM, to an XSL processor. The processor applies the template to the custom tag and replaces it with given script code. Once all custom tags are reduced to HTML and script code, the DOM is compiled into a Java servlet to service the client request.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06981212",
	"publication_date": "2005-12-27",
	"application_number": "09409598",
	"application_date": "1999-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generic service component for message formatting",
	"summary": "",
	"abstract": "An advanced intelligent network for use with a telecommunication service can include a service logic execution environment (SLEE), at least one service application executing in the SLEE, and at least one message formatting generic service component communicatively linked to the service application. The message formatting generic service component can include an interface to an application which is external to the SLEE.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06876733",
	"publication_date": "2005-04-05",
	"application_number": "10308590",
	"application_date": "2002-12-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generic service component for voice processing services",
	"summary": "",
	"abstract": "An advanced intelligent network for use with a call model can include a service logic execution environment (SLEE), at least one service application executing in the SLEE, and at least one voice processing generic service component communicatively linked to the service application. The voice processing generic service component can include an interface to a second service application which is external to the SLEE.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06873695",
	"publication_date": "2005-03-29",
	"application_number": "10237649",
	"application_date": "2002-09-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "HTTP caching proxy to filter and control display of data in a web browser",
	"summary": "",
	"abstract": "A method of controlling how a Web document is presented for display on a browser of a client machine. The Web document typically is formatted according to a markup language such as HTML. The method uses a client side HTTP caching proxy to intercept the Web document and then dynamically rewrite the document before it is displayed on the browser. In particular, as the Web document is received from the server, the HTML is parsed to identify the format of the document and the information therein. A filter mechanism is then used to reformat the Web document according to some given protocol, and the re-formatted Web document is then passed to the browser for display. Dynamic alteration of the HTML in this manner enables control of the u201clook and feelu201d of the browser display.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06886013",
	"publication_date": "2005-04-26",
	"application_number": "08927660",
	"application_date": "1997-09-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Machine-oriented extensible document representation and interchange notation",
	"summary": "",
	"abstract": "A machine-oriented notation for representation and interchange of extensible documents: a method, system, and computer program product for operating upon (e.g. parsing, and storing documents in) this notation. The notation, referred to herein as u201cmXMLu201d for u201cmachine-oriented XMLu201d, is designed to be more compact than the Extensible Markup Language (XML), while still conveying the content and semantics of the data and the structure of the document. Documents may be created directly in mXML. In general case, a document represented using mXML notation can be processed more efficiently than when using the existing human-friendly XML notation, requires less storage space, and has a lower transmission cost for data interchange. XML documents can be converted to mXML using techniques of the present invention, and vice versa. Techniques disclosed herein are also applicable to notations other than XML.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06904562",
	"publication_date": "2005-06-07",
	"application_number": "09652056",
	"application_date": "2000-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Maintaining consistency of a global resource in a distributed peer process environment",
	"summary": "",
	"abstract": "In a distributed peer-to-peer data processing system, consistency and access to a global resource maintained on one of the nodes is provided through the use of global incarnation numbers, local incarnation numbers, and proposed incarnation numbers. Internode traffic is kept to a minimum while still maintaining consistency. The system and method of the present invention are particularly useful at start-up and data change processing points in time.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06950820",
	"publication_date": "2005-09-27",
	"application_number": "09791281",
	"application_date": "2001-02-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mapping data from multiple data sources into a single software component",
	"summary": "",
	"abstract": "A method, apparatus and article of manufacture is provided for mapping data objects residing in multiple data sources, or generated dynamically, into a single, reusable software component, for integrated information access to multiple disparate data sources, residing on or generating the data dynamically on different hardware systems and possibly in different data formats. The method has steps for identifying data objects in multiple data sources, employing an information integration software facility for connecting to the data sources containing the data objects, and registering the data objects with the software facility, creating a single virtual data object consolidating multiple attributes from the registered data objects, and establishing a connection to the software facility for referencing the virtual data object as though it was a single real data object. It also has a step for wrapping this virtual data object as a reusable software component accessible directly from applications.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06901409",
	"publication_date": "2005-05-31",
	"application_number": "10644483",
	"application_date": "2003-08-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for configurable mapping between data stores and data structures and a generalized client data model using heterogeneous, specialized storage",
	"summary": "",
	"abstract": "A flexibly adaptable, i.e., configurable and/or extensible, asset management system is disclosed for processing and querying assets, representing data. The system comprises three layers: a Client Application layer, for manipulating and browsing assets, an Asset Manager Server layer, for providing programming interface services specific for assets types, such as storing, querying, and retrieving assets representing data to and from a Data Store, representing the third layer. The Asset Manager Server layer further provides communication services to support the Client Application layer and file transfer between the Client Application layer and the Asset Manager Server layer. The Asset Manager Server includes several configurable and/or extensible modules, including a Client Adapter module, a Schema Adapter module and a Resources module.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06917939",
	"publication_date": "2005-07-12",
	"application_number": "09220293",
	"application_date": "1998-12-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for creating and enforcing protected system level Java code",
	"summary": "",
	"abstract": "According to the preferred embodiments, an object oriented mechanism and method allow creating system level Java code that is protected, and therefore cannot be accessed or extended by unauthorized users or programs. Several new tests are performed during loading, linking, and initialization of a class that assure that the class is as the operating system expects. In addition, one or more runtime tests may be performed to prevent programs from getting into the Java system level code via a runtime u201cback door.u201d By providing additional tests when classes are loaded and when certain types of methods and functions are invoked at runtime, the Java system level code is protected from unauthorized access and use.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06918126",
	"publication_date": "2005-07-12",
	"application_number": "09657501",
	"application_date": "2000-09-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for determining a response time for a segment in a client/server computing environment",
	"summary": "",
	"abstract": "A method, apparatus, system, article of manufacture, etc. of determining response times for various computing segments is provided in accordance with one or more embodiments of the invention. Accordingly, the following segments in the execution of a computer program may be directly measured, computed, determined, or derived: total response time, client segment compute time, network segment trivial response time, network segment response time, server segment response time, and think time response time.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06917971",
	"publication_date": "2005-07-12",
	"application_number": "09711660",
	"application_date": "2000-11-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for implementing a shared message queue using a list structure",
	"summary": "",
	"abstract": "A method and apparatus for implementing a shared message queue using a list structure. A put list is defined comprising a sequence of list entries, each of which corresponds to a message in the queue and has an associated list entry key. Each list entry key corresponding to an uncommitted message falls within an uncommitted key range defining an uncommitted portion of the put list, while each list entry key corresponding to a committed message falls within a committed key range defining a committed portion of the put list. To write a message to the queue, a list entry is added to the put list having a list entry key within the uncommitted key range.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06862595",
	"publication_date": "2005-03-01",
	"application_number": "09677341",
	"application_date": "2000-10-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for managing locks of objects and method and apparatus for unlocking objects",
	"summary": "",
	"abstract": "A hybrid locking method for preventing a reduction in the processing speed of a frequently executed path which includes locking, accessing and unlocking an object is provided. According to the present invention, at least one contention bit is introduced. The contention bit, which is prepared separately from a lock field, is set when a contention occurs in a light-weight lock, and is cleared when a light-weight lock is shifted to a heavy-weight lock (u201cinflateu201d function). Specifically, if a lock of an object is managed by storing a bit representing a type of said lock, and an identifier of a thread having acquired a lock in accordance with a first type of lock or an identifier of a second type of lock into a storage area corresponding to the object, in a state where a plurality of threads exist, following steps are executed: if a first thread attempts to acquire a lock of an object that has been acquired by a second thread, determining whether the bit representing the type of the lock of the object represents the first type of lock; and if the bit represents the first type of lock, setting a contention bit.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06883026",
	"publication_date": "2005-04-19",
	"application_number": "09378549",
	"application_date": "1999-08-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for managing session information in a data processing system",
	"summary": "",
	"abstract": "A method and apparatus in a data processing system for managing sessions for a secure access to the data processing system. A request for a secure connection is received. The secure connection is established, wherein information used to facilitate the secure connection is generated. The information is stored for a selected period of time, wherein the selected period of time is selected to optimize server resources.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06978298",
	"publication_date": "2005-12-20",
	"application_number": "09577391",
	"application_date": "2000-05-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for processing a list structure",
	"summary": "",
	"abstract": "Various enhancements are made to the architecture of a list processor to facilitate its use in implementing a message queue that is shared by queue managers residing across a multisystem complex. A new list structure controlu2014a program list entry identifier indicator, or PLEIDIu2014is defined to allow the user to specify whether user-defined entry IDs are used when the list is allocated. A new delete list (DL) command is added that sequentially processes list entries in the order in which they exist on the specified list. A new move list entries (MLES) command provides a performance-optimized means to process an input list of entries. New key comparison functions and list monitoring enhancements have also been added. A new type of key called a secondary list entry key (SLEK) allows the user to specify a secondary key value as a means to identify a list entry.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06963882",
	"publication_date": "2005-11-08",
	"application_number": "09677339",
	"application_date": "2000-10-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for processing a voice system application",
	"summary": "",
	"abstract": "There is described an interactive voice response system comprising: a voice application including an voice application API command defining a function call to a first communication process; a channel process for interpreting the voice application API command and making the defined function call; a signaling process for receiving the function call and for performing the first communication process; characterised by; said signaling process having a second communication process; tag information embedded in the voice application and related to the API command; a tag interpreter for reading the tag information in the voice application and passing the tag information to a tag process in the signaling process; and a tag process for reading the tag information and, if related to the API command, directing the signaling process to perform the second communication process rather than the first communication process.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06970536",
	"publication_date": "2005-11-29",
	"application_number": "10135704",
	"application_date": "2002-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing configurability and customization of adaptive user-input filtration",
	"summary": "",
	"abstract": "A computer system provides a user with an ability to configure a filter, according to a user's personal characteristics, for user-input data generated by an input device. It also provides a configurable, customizable, adaptive filter for individualizing user settings, parameters, or algorithms so that the system adapts to user-specific characteristics in order to minimize u201cerrorsu201d in the use of input devices. Moreover, the individual characteristics are portable with the user through the use of a customized adaptive input profile. The customized adaptive input profile may be stored on a network or within a smart card so that the customized parameters are accessible when the user requires the use of a particular client or workstation in a distributed data processing environment.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06963937",
	"publication_date": "2005-11-08",
	"application_number": "09213660",
	"application_date": "1998-12-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for real time creation and modification of a change log for multi-server synchronization",
	"summary": "",
	"abstract": "A method, apparatus, and computer instructions for synchronizing a database utilized by a client device with a set of servers in which one server has the database. A change log is used with a client database for synchronizing the database. Dirty bits set in the client database are identified and a change log is modified based on the identified dirty bits. This change log is used to synchronize the database on the server with a client database on the client device.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06976038",
	"publication_date": "2005-12-13",
	"application_number": "10273773",
	"application_date": "2002-10-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for apportioning changes in metric variables in an symmetric multiprocessor (SMP) environment",
	"summary": "",
	"abstract": "A method and system for monitoring performance of a program using global metric variables to provide the support in an symmetric multiprocessor (SMP) system. A Java virtual machine (Jvm) either calls the profiler whenever bytes are allocated or provides an interface to allow the profiler to determine the value of the change in the metric for the current thread. The profiler then applies the changes to a metric for the current thread. Alternatively, per processor data areas are maintained for storing per processor metric values. Whenever a thread switch occurs or there is a request for the metric on a specified thread, an operating system kernel updates the thread level metric values with changes in the values per processor metrics.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06904594",
	"publication_date": "2005-06-07",
	"application_number": "09612340",
	"application_date": "2000-07-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for enabling a network function in a context of one or all server names in a multiple server name environment",
	"summary": "",
	"abstract": "A method for executing a function on a server in a distributed data processing system is provided. The server responds to requests directed to a set of server names. A function request has an input that specifies a server name in the set of server names. The function is executed on the server in a server name context specified by the input containing the server name. The server name context on the server has a set of resources associated with a server name. A unique server name tag is generated for each server name in the set of server names, and each resource in the set of resources is identifiable by the server name tag associatively stored with the resource.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06968390",
	"publication_date": "2005-11-22",
	"application_number": "09292190",
	"application_date": "1999-04-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for error detection in a managed application environment",
	"summary": "",
	"abstract": "A method of managing at least one client computer program in a managed application environment can include receiving a request from at least one of a plurality of client computer programs to begin a timer. The timer can correspond to an identified task of the client computer program which has been identified as a time-out susceptible task, and which is executing within a particular thread of execution of the client computer program. The timer corresponding to the request and the time-out susceptible task can be selectively started in a separate thread of execution. The identified task can be timed. If the timer expires, a recovery action can be performed corresponding to the time-out susceptible task.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06892331",
	"publication_date": "2005-05-10",
	"application_number": "10052454",
	"application_date": "2002-01-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for improving data quality in large hyperlinked text databases using pagelets and templates",
	"summary": "",
	"abstract": "A computing system and method clean a set of hypertext documents to minimize violations of a Hypertext Information Retrieval (IR) rule set. Then, the system and method performs an information retrieval operation on the resulting cleaned data. The cleaning process includes decomposing each page of the set of hypertext documents into one or more pagelets; identifying possible templates; and eliminating the templates from the data. Traditional IR search and mining algorithms can then be used to search on the remaining pagelets, as opposed to the original pages, to provide cleaner, more precise results.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06968331",
	"publication_date": "2005-11-22",
	"application_number": "10055586",
	"application_date": "2002-01-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for improving remote function calls",
	"summary": "",
	"abstract": "The present invention relates to improvements for managing remote function calls and other mechanisms for managing the remote invocation and control of programs. A separation of the request-driven communication work from one broad unstructured bulk of work into at least two separate portions of management is proposed: a dispatching portion and one or more connection portions. Connections are not closed but are reused whenever advantageous, which yields better performance. A standardized interface is set up which is able to be used by a plurality of different requester applications. Thus, a way is found to pass a RFC connection from one application to another, and the same RFC connection can be used by totally independent applications.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06898794",
	"publication_date": "2005-05-24",
	"application_number": "09933779",
	"application_date": "2001-08-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for managing parallel data transfer through multiple sockets to provide scalability to a computer network",
	"summary": "",
	"abstract": "A method and system for managing the transfer of data in parallel through multiple sockets. The present invention facilitates the use of multiple sockets and avoid monopolization of a socket by releasing the socket as soon as data from a client request has been sent to a server application. The present invention also includes a novel socket assignment technique that assigns only available sockets. This novel socket assignment technique avoids bottlenecking and delays due to socket contention and increases efficiency. The socket assignment technique of the present invention can assign sockets using a round robin technique, which assigns a server application to a first available socket, a random technique, which assigns a server application randomly to an available socket, or a user-defined technique, which assigns a thread to an available socket as determined by a user.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06922727",
	"publication_date": "2005-07-26",
	"application_number": "09891338",
	"application_date": "2001-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for managing subsystem processes in a DMD system",
	"summary": "",
	"abstract": "Aspects for managing subsystem processes from a central site in a digital media distributor system are presented. The aspects include utilizing a plurality of threads as a task manager in a central site server of the digital media distributor, and autonomously controlling initiation and termination of one or more subsystem processes with the task manager. The aspects further include providing the task manager as a main program thread of an operating system of a central site server of the DMD system, and managing subsystem processes from start-up to shut down, including states of online, offline, process inoperable, deadlock inoperable, and spawn inoperable, with the task manager to dynamically manage the DMD system.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06973651",
	"publication_date": "2005-12-06",
	"application_number": "09538380",
	"application_date": "2000-03-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for memory management in a network processing system",
	"summary": "",
	"abstract": "A method and system for memory management in a network processing system provides for allocation of physical memory areas within network processors coupled to a control point processor by a bus. The allocation scheme provides a memory management layer without requiring a complete operating system interface and supports asynchronous completion of the allocation requests. Multicast allocation is supported allowing an allocation to be simultaneously requested on multiple network processors. The allocation mechanism returns a token, which may then be used to access the memory location via a protocol over the bus, and a single token may refer to an allocation made on several network processors where the actual physical addresses and memory configurations are different.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06981027",
	"publication_date": "2005-12-27",
	"application_number": "09546653",
	"application_date": "2000-04-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for performing automated regression tests in a state-dependent data processing system",
	"summary": "",
	"abstract": "Disclosed are a method and system for performing regression tests in a state-dependent data processing environment where data are processed by means of at least one function having a signature of defined parameters and corresponding values. A regression test is performed using at least one pre-determined set of test data and one pre-recorded function test case corresponding to said signatures and being used to execute said at least one pre-recorded function test case. The proposed mechanism particularly comprises the step of adapting said at least one function test case or said at least one set of test data to any changed signatures caused by a state transition of said data processing system. The mechanism thus provides automated regression tests in such a data processing environment and enables re-execution of a regression test in a changed context of the underlying data processing environment.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06966013",
	"publication_date": "2005-11-15",
	"application_number": "10138895",
	"application_date": "2002-05-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for processing backup data associated with application, querying metadata files describing files accessed by the application",
	"summary": "",
	"abstract": "A method, apparatus, and computer implemented instructions for backing up data in a data processing system. In response to a request to backup data associated with an application, a data store is queried containing meta data regarding files associated with the application in which the data store includes meta data describing the files accessed by the application. A result is received in response to querying the data store, and contains information about files that need to be backed up. The information is then used to drive the backup program. The files are then subsequently backed up to a storage system.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06976039",
	"publication_date": "2005-12-13",
	"application_number": "09866251",
	"application_date": "2001-05-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for remote Java audio server in a heterogeneous distributed environment",
	"summary": "",
	"abstract": "A method and system for an audio server in a heterogeneous distributed environment is provided. A Java application executes on a host machine under X Windows or RAWT (Remote Abstract Window Toolkit), and the Java application generates audio data and graphic data. The graphic data is sent to a display server on a client machine specified by a display environment variable. Although neither X Windows nor RAWT have audio support, a Java audio driver on the host machine determines whether an audio environment variable or an audio command line parameter is specified on the host machine. In parallel to the graphic data, the audio data is then sent to a Java audio server on the client machine specified by the audio environment variable or the audio command line parameter, and played using the local audio support, in Java, on the client machine on which the user can hear the audio.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06889100",
	"publication_date": "2005-05-03",
	"application_number": "09392841",
	"application_date": "1999-09-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for third party resource provisioning management",
	"summary": "",
	"abstract": "A method and system of provisioning resources from a central location via a third party resource provisioning management (RPM) service provider. Various levels of provisioning may be obtained. Organizations may obtain resource provisioning from a third party RPM resource provider using a third party server. At an affiliate level, various resource vendors may be part of a resource exchange, sharing resources with other affiliates within the exchange. At a public provisioning infrastructure level, an individual organization may obtain access to resources within the infrastructure, subject to receipt of a provisioning ticket and appropriate identity authentication.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06871232",
	"publication_date": "2005-03-22",
	"application_number": "09800098",
	"application_date": "2001-03-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for determining internet users geographic region",
	"summary": "",
	"abstract": "A method at a clearing house to verify the geographic region of an end user device for receiving encrypted digital content. In one embodiment the geographic region is a country. The method comprising three sub-methods. In the first sub-method the address is verified by determining the credit card clearing address of the end user using an address verification system. In the second sub-method the address is verified by determining the IP address of the end user device requesting delivery of the encrypted digital content. And in the third sub-method the address is verified by checking that the IP address of the end user device requesting delivery of the encrypted digital content is the identical IP address of the end user device requesting a license to use the encrypted digital content. Depending on predetermined system settings, one or more of the above combination of the three sub-methods is then checked, before authorizing the decrypting of the encrypted digital content includes decrypting the encrypted digital content if the address verification system returns an address in a predetermined geographic region and the IP address of the end user device is in a predetermined geographic region.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06859791",
	"publication_date": "2005-02-22",
	"application_number": "09711596",
	"application_date": "2000-11-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for efficient garbage collection based on object type",
	"summary": "",
	"abstract": "A computing apparatus and method classify data objects into at least a first type and alternatively a second type, and allocate a first portion of computer memory to objects of the first type and a second portion of computer memory to objects of the second type. Then the method performs garbage collection of data objects within at least one portion of computer memory while retaining surviving objects within the computer memory. Objects of the first type occur in a computer memory with a frequency that exceeds a selected threshold, and are designated u201cprolific.u201d Objects of the second type occur in the computer memory with a frequency that does not exceed the selected threshold, and are designated u201cnon-prolificu201d.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06892212",
	"publication_date": "2005-05-10",
	"application_number": "10093656",
	"application_date": "2002-03-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for extending capabilities of an arbitrary web server",
	"summary": "",
	"abstract": "A method for extending the capabilities of an arbitrary web server operating in a client-server environment (e.g., the Internet). When a client makes a request to the web server, the request may include an address for a code module needed to service the request. If the code module is not available at the web server, the web server uses the address to request the code module from another location. The code module is then served to the web server and installed. The web server then responds to the original client request using the installed code module. In an alternative embodiment, the code module is uploaded to the target server from the client.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06954777",
	"publication_date": "2005-10-11",
	"application_number": "09363949",
	"application_date": "1999-07-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for file system replication with broadcasting and XDSM",
	"summary": "",
	"abstract": "A method and system are provided for replicating data in a network to a plurality of client applications which are associated to at least one server. Network traffic is reduced and an easy-to-do automated data replication is achieved basically by monitoring and storing modification information on server data exploiting XDSM capabilities in order to generate replication data for a subsequent distribution to the clients and by broadcasting said replication data from said server system to said client systems. Further, the replication data can advantageously be streamed to the clients through the network.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06934723",
	"publication_date": "2005-08-23",
	"application_number": "09740766",
	"application_date": "2000-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for file transfer restarts using standard internet protocol",
	"summary": "",
	"abstract": "A method of downloading a file from a Internet server to an Internet client, preferably without action by the Internet client. The method begins by associating the file into a set of components at the server. A profile of the file is then generated. This profile includes identifying information for the file as well as for each component thereof. Such information preferably includes an identifier, a size value, and a code uniquely identifying the component. The file is transferred by initiating a download sequence by which each component is transferred, one-by-one, from the server to the client using an Internet protocol. When the download sequence is complete, the individual components are reassembled into the file using the profile without action by the Internet client. If the transmission is interrupted for any reason, the download sequence is restarted with the component affected by the interruption. This avoids the need to retransfer the entire file.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06963923",
	"publication_date": "2005-11-08",
	"application_number": "08797079",
	"application_date": "1997-02-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for processing a document object model (DOM) tree using a tagbean",
	"summary": "",
	"abstract": "A method of processing a document object model (DOM) tree having at least one tag located at a given node in the tree. The tag serves as a marker that initiates the invocation of a tag handler that, in turn, performs a simple macro substitution or a more complex algorithmic reorganization and manipulation of the tree. Upon encountering the tag, given information is passed to a method. In a first embodiment, the given information is a text representation of XML in the DOM tree at the given node and any child nodes of the given node. In an alternate embodiment, the given information is the given node of the DOM tree itself. The method generates an XML string, which is then parsed into a new DOM tree having a root node. The given node and any child nodes are then replaced by the new DOM tree, with the root node of the new DOM tree being positioned at the given node in the original DOM tree. The process may then be repeated for any additional tags.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06981211",
	"publication_date": "2005-12-27",
	"application_number": "09409370",
	"application_date": "1999-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for providing a visual representation of dynamic HTML table attributes",
	"summary": "",
	"abstract": "A table format object is used to format a dynamic HTML table at a web server. To facilitate the development of a dynamic server page for use in serving the dynamic table, first and second representations are created and made available for display to a page developer, e.g., in a web browser. The first representation illustrates how the HTML table will appear when formatted on a page by the table format object. The first representation includes given table attribute elements. The second representation is preferably online documentation for the table format object that includes, for each table attribute element, a set of methods that are available on the table format object. According to the invention, a given table attribute in the first representation is bidirectionally linked to its corresponding set of methods in the second representation to enable the developer to easily identify how given attributes in the table behave and how to resolve potential conflicts between these attributes.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06889359",
	"publication_date": "2005-05-03",
	"application_number": "09455709",
	"application_date": "1999-10-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of maintaining data consistency in a loose transaction model",
	"summary": "",
	"abstract": "A method, an apparatus, a system, a computer program product, and a computer program are disclosed for maintaining consistency of object content () and metadata () related to the object () in a loose transaction model, preferably using SQL Mediated Object Manipulation (SMOM), for object and meta-data updates. The related meta-data () and a reference to the object () are stored in a table of a database. The object is stored externally to the database in an object store. The reference is used to obtain a handle for directly accessing or manipulating the external object. A version number embedded in the handle is then obtained. The embedded version number is then compared with a version number of a latest committed version of the externally stored object to determine if the handle refers to a current version of the externally stored object. Next, the last modification timestamp of the file is compared with the last modification timestamp of the latest committed version, in order to detect uncommitted updates. A mismatch indicates that stale data is being referenced, and in that situation an appropriate error is returned.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06874001",
	"publication_date": "2005-03-29",
	"application_number": "09971755",
	"application_date": "2001-10-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of, system for, and computer program product for storing, retrieving, and using remote host file attributes on a local file system",
	"summary": "",
	"abstract": "Remote file attributes are retrieved, stored, and accessed for use on a local data processing system's installable file system. The remote file attributes are first obtained on a remote host by a communication program located on the remote host. The remote file attributes are then transferred to a client communication program on the local data processing system via a message. The client communication program uses the local data processing system's shared storage mechanisms to save the remote file attributes and to make them available to other processes executing on the local data processing system. The remote file attributes have an associated lifetime or duration on the local data processing system. This lifetime is pre-determined by the client communication program as to not to exceed a certain time limit, and the remote file attributes are cleared when this maximum lifetime is reached. This clearing causes periodic synchronization between the remote file attributes stored on the local data processing system and the remote file attributes on the host.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06961726",
	"publication_date": "2005-11-01",
	"application_number": "09579866",
	"application_date": "2000-05-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, apparatus, program and recording medium for memory access serialization and lock management",
	"summary": "",
	"abstract": "Each of CPUs has the function of performing store forwarding (SF) when the address regions of a pair of store and load instructions coincide with each other. Each CPU stops SF and performs store forwarding avoidance (SFA) when the two address regions do not coincide with each other but have an overlap therebetween. Each of SF and SFA is executed with priority over out-of-order execution. Each CPU performs SFA effective in limiting out-of-order execution with respect to a predetermined store instruction on a program and a load instruction mated to the store instruction and given after the store instruction, and ensures that data relating to the store instruction can be observed from other CPUs.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06938131",
	"publication_date": "2005-08-30",
	"application_number": "10413850",
	"application_date": "2003-04-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program for handling errors occurring in function calls",
	"summary": "",
	"abstract": "Provided is a method, system, and program for handling errors in a service program including service functions capable of being called from application programs. A call is received for one service function from a service function call within one application program. A series of test operations are performed when executing the service function call. Each test operation returns an identifier if the test operation failed where each identifier is associated with one error state. If one test operation failed, then the identifier for the failed test operation is transferred to an error handling agent, wherein the error handling agent accesses error information associated with the identifier and generates error information describing a specific cause of the error that caused the test operation to fail and then returns to the application program with a generic return code.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06973643",
	"publication_date": "2005-12-06",
	"application_number": "09932332",
	"application_date": "2001-08-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program products for concurrently accessing a global data repository by multithreaded clients",
	"summary": "",
	"abstract": "Threads of a multithreaded client application access data in one or more global data repositories via one or more local trees. Each local tree is associated with one or more locked resources of the global data repository. By using the local trees in accessing the data of the global repository, a thread is automatically associated with a lock block and therefore, the granting of locks is independent of any threading models.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06965892",
	"publication_date": "2005-11-15",
	"application_number": "09584609",
	"application_date": "2000-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and program for generating a progress indicator",
	"summary": "",
	"abstract": "Provided is a method, system, and program for generating a status page to display on a computer display. A request for status information on a resource is received. A determination is made of an operation being performed with respect to the resource. Data is generated to display a progress bar indicating a percent of the operation that has completed. A first part of the progress bar indicates a percent of the operation that has completed and a second part of the progress bar indicates a percent of the operation that has not completed. A determination is made of an attribute of the operation. Data is then generated to display information with one of the first part or second part of the progress bar indicating the determined attribute of the operation.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06865717",
	"publication_date": "2005-03-08",
	"application_number": "09870326",
	"application_date": "2001-05-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and program for mapping objects in different language formats",
	"summary": "",
	"abstract": "Disclosed is a system, method, and program for translating source code statements to executable code. A source code statement including an application program interface (API) that is a member of a set of standard APIs calling an object in a first format is processed. A mapping is used to determine at least one user interface API corresponding to the determined standard API. The user interface API provides an implementation of the standard APIs in a user interface program. A mapping is determined of the called object to a corresponding object in a second format utilized by the user interface program is accessed. The source code statement comprising the standard API calling the object in the first format is converted to the determined user interface API calling the corresponding object in the second format. The user interface program is capable of executing the user interface API calling the corresponding object.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06957439",
	"publication_date": "2005-10-18",
	"application_number": "09567836",
	"application_date": "2000-05-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and program for mapping standard application program interfaces (APIs) to user interface APIs",
	"summary": "",
	"abstract": "Disclosed is a system, method, and program for providing a plurality of translator programs for translating source code in a cross-platform computer language, such as Java, to program statements capable of executing on multiple operating system platforms. The translator programs determine whether a source code statement in an application program comprises an application program interface (API) that is a member of a set of standard API interfaces, such as the API interfaces specified in the W3C DOM specification. The translator programs determine from a mapping at least one native operating system API interface corresponding to the determined standard API interface. Native operating system API interfaces provide an implementation of the standard API interfaces. The translator programs further convert the source code statement comprising the standard API interface to the determined native operating system API interface. The translator programs allow the application program to include standard API interfaces and be capable of executing on multiple operating system platforms that implement the set of standard API interfaces.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06854123",
	"publication_date": "2005-02-08",
	"application_number": "09568873",
	"application_date": "2000-05-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and program for updating records in a database when applications have different version levels",
	"summary": "",
	"abstract": "Provided is a method, system, and program for updating data in a database table in response to requests from a requesting application comprising one of a first application at a first version level and a second application at a second version level. The first application recognizes the table as including a subset of columns in the table that is less than all the columns in the table and the second application recognizes the table as including all the columns in the table. A request is received from the requesting application for specified columns from one record in the table and the requested record is accessed. A data structure is generated including data from the specified columns in the requested record. A determination is made as to whether the requesting application is capable of recognizing all the columns in the table. If so, data from each column in the table that is not one of the subset of columns is added to the data structure. The data structure is returned to the requesting application.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06901417",
	"publication_date": "2005-05-31",
	"application_number": "10044125",
	"application_date": "2002-01-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, computer program product, and article of manufacture for construction of a computer application interface for consumption by a connector builder",
	"summary": "",
	"abstract": "An interface of an application program is identified by parsing the source code of the application program to identify meta information, and the meta information and a link pointing to an original location of the meta information within the application program are stored in a repository. A user may then be allowed to query the repository to determine which source files and which interfaces comprise the application program. Responsive to the query, a new source file is constructed which contains the interfaces comprising the application program. The new source file and a link pointing to a location of the new source file are also stored in the repository. A meta language document is constructed which contains a description of the application program interfaces to enable a a connector building tool to build an interface to the application program.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06915487",
	"publication_date": "2005-07-05",
	"application_number": "09734833",
	"application_date": "2000-12-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for a web application processing system",
	"summary": "",
	"abstract": "A software system is provided to allow a computer to install and process web applications according to the invention. Such web applications are written as web pages that have access to the full range of operating system resources, including those not accessible through a web browser. Preferably, a web application is built using three types of languages used for constructing web pages, namely: (a) a visual presentation language; (2) a data modeling language; and (3) a scripting language for embedding logic. The software system preferably comprises a web application manager, an operating system interface module, a scripting language interpreter, and optionally a web browser and/or a data modeling language processor. Various other features such as data caching and security filtering are provided in accordance with such a system.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06968539",
	"publication_date": "2005-11-22",
	"application_number": "09633037",
	"application_date": "2000-08-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for managing dependencies in distributed systems",
	"summary": "",
	"abstract": "Techniques for managing information in a computing environment. Information associated with components of the computing environment is obtained. Then, from at least a portion of the obtained information, a determination is made as to the existence of one or more relationships associated with at least a portion of the components of the computing environment. The determination of the existence of one or more relationships is capable of accounting for a full lifecycle (e.g., including deployment, installation and runtime) associated with at least one component of the computing environment. Thus, techniques for managing runtime dependencies between the various components of computing systems are disclosed which provide a level of abstraction from individual systems and allow the computation of service/component (wherein the component may, for example, be an application, middleware, hardware, a device driver, an operating system and a system associated with the computing environment) dependencies that are related to end-to-end services, as perceived by a customer. By way of example, the inventive techniques may be applied to a distributed computing environment. The computing environment may also be an autonomic computing environment.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06847970",
	"publication_date": "2005-01-25",
	"application_number": "10241162",
	"application_date": "2002-09-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for voice information registration and recognized sentence specification in accordance with speech recognition",
	"summary": "",
	"abstract": "A group of sentences to be recognized is obtained from an application and, using parsing logic, each target sentence to be recognized is divided into words, e.g., speech recognition units. Thereafter, the words in each target sentence are examined to determine whether among them there are unknown words that are not registered in the speech recognition dictionary, but for which the sounds-like spelling is available. If an unknown word is found, a base form, for which the pronunciation is inferred from the sounds-like spelling, is prepared and is registered in the speech recognition dictionary. This base form is employed when the voice of a user, who has orally designated one of the sentences, is recognized.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06952675",
	"publication_date": "2005-10-04",
	"application_number": "09656963",
	"application_date": "2000-09-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for distributed caching in presence of updates and in accordance with holding times",
	"summary": "",
	"abstract": "Techniques for improved cache management including cache replacement are provided. In one aspect, a distributed caching technique of the invention comprises the use of a central cache and one or more local caches. The central cache communicates with the one or more local caches and coordinates updates to the local caches, including cache replacement. The invention also provides techniques for adaptively determining holding times associated with data storage applications such as those involving caches.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06871268",
	"publication_date": "2005-03-22",
	"application_number": "10092766",
	"application_date": "2002-03-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods, systems and computer program products for coupling electronic mail and relational database functions",
	"summary": "",
	"abstract": "Methods, systems and computer program products provide for generating an electronic mail message by automatically generating an electronic mail message responsive to an action being performed on a database entry. In particular embodiments of the present invention, performance of an action on the entry in the database is detected and a user defined function (UDF) of the database triggered which provides access to an electronic mail system. The UDF is triggered in response to the detection of performance of the action on the entry. The electronic mail system is accessed utilizing the UDF to generate the electronic mail message responsive to the UDF being triggered. Thus, an electronic mail message may be automatically generated via triggers and user defined functions which may be provided by the programmatic use of layering and abstraction.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06886173",
	"publication_date": "2005-04-26",
	"application_number": "09867911",
	"application_date": "2001-05-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods, systems and computer program products for smart card product management",
	"summary": "",
	"abstract": "Methods, systems and computer program products are provided for managing a smart card product by providing a plurality of generic definitions, at least a portion of which have a predefined relationship to others of the generic definitions, so as to provide a hierarchy of generic definitions. Generic definitions are selected from the plurality of generic definitions and associated with an instance of a card product definition so as to define characteristics of the smart card product associated with the instance of the card product definition. The selected generic definitions are populated with data associated with the smart card product so as to provide a hierarchy of instances of the generic definitions which define the characteristics of the smart card product. The smart card product is managed utilizing the hierarchy of instances of the generic definitions so as to provide the smart card product having the defined characteristics. Systems for managing smart card products utilizing instances of definitions from the hierarchy of definitions are also provided.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06880084",
	"publication_date": "2005-04-12",
	"application_number": "09671833",
	"application_date": "2000-09-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods, systems, and computer program products that request updated host screen information from host systems in response to notification by servers",
	"summary": "",
	"abstract": "A method of providing updated host screen information to a client application utilizing a request-response communications model includes establishing a first connection between the client application and a server application, wherein the server application provides updated host screen information to the client application in response to requests from the client application. A second connection is established between a monitor application and the server application. A notification of the availability of updated host screen information is received via the second connection at the monitor application. The updated host screen information is requested over the first connection responsive to receiving the notification. The requested updated host screen information is received at the client application and displaying utilizing the client application. Related systems and computer program products are also disclosed.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06880010",
	"publication_date": "2005-04-12",
	"application_number": "09394536",
	"application_date": "1999-09-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multi-connection control system",
	"summary": "",
	"abstract": "The present invention discloses a multi-connection control system. Initially, one or more requests to access a system are received. For each request, it is determined whether to allow access to the system using an access vector to identify an available access object.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06922729",
	"publication_date": "2005-07-26",
	"application_number": "09364315",
	"application_date": "1999-07-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network processor services architecture that is platform and operating system independent",
	"summary": "",
	"abstract": "A system for providing a scalable processor and operating system independent network processor services architecture. The system includes a plurality of portable and individualized functional components representing particular segments of the control processor's device driver. The functional components, which include lower level and external APIs, carry out the various network processor functions such as the receipt and transfer of packets on the network, and other functions required by the control processor to communicate with and direct the network processor. The functional components are designed to be adaptable to the various types of processor architecture and operating systems available and to permit customers or developers to customize and expand the available network services.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06880158",
	"publication_date": "2005-04-12",
	"application_number": "09546133",
	"application_date": "2000-04-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Object oriented structured query language (OOSQL) support for enterprise java beans",
	"summary": "",
	"abstract": "The invention which meets the needs of an object-oriented structured query language (OOSQL) support for enterprise Java beans is an apparatus and method for automatic generation of a portable, OOSQL query in terms of a bean's attributes and methods at the time of development. The method accomplishes its purpose by bridging between CORBA EJB, by executing an object-oriented query on an application server that returns data objects responsive to the query; adding each object returned by the server to a Java Vector object, converting the Java Vector object to a Java Enumeration; and narrowing the Java Enumeration to the EJB objects having attributes that that meet the conditions of the query.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06971085",
	"publication_date": "2005-11-29",
	"application_number": "09653247",
	"application_date": "2000-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Operating system debugger extensions for hypervisor debugging",
	"summary": "",
	"abstract": "A data processing system, method, and product are disclosed for debugging partition management firmware from an existing operating system debugger. The partition management firmware is also called a hypervisor. The data processing system is logically partitioned and includes an operating system debugger and hypervisor software. An operating system and the operating system debugger are stored in one of the logical partitions. Extensions are included within the operating system debugger. The extensions are then utilized by the existing operating system debugger to debug the hypervisor.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06839892",
	"publication_date": "2005-01-04",
	"application_number": "09903936",
	"application_date": "2001-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Personal smart pointing device",
	"summary": "",
	"abstract": "A personal smart pointer device comprises a conventional computer mouse or like pointing device equipped with additional hardware and software for increased functionality. The personal smart pointer device readily connects with any computer and is provisioned with hardware and software for facilitating network computer-like applications, including enabling receipt and storage of information, and transfer of information to adjunct devices such as a PC, a mobile computer, and other pervasive devices such as a cellular phone and PDA. Information to be transferred includes those personal preferences, features and customizations of applications/programs used by the user on his/her own personal device, in order to facilitate use of the application/program on an adjunct device. The communication of personal preferences and customizations may be accomplished wirelessly.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06980175",
	"publication_date": "2005-12-27",
	"application_number": "09607800",
	"application_date": "2000-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Pluggable JMS providers in a J2EE server",
	"summary": "",
	"abstract": "A method for allowing an enterprise application server to integrate and make use of any messaging product or products that support a standard messaging service interfaces. In a first phase of the method, an administrator creates and installs a new messaging provider on an application server, creates new messaging resource objects such as connection factories and destinations, and then binds these into the original namespace of the default messaging provider. An application which references the new messaging provider is then deployed onto the application server. Then, when the application program is executing, it may perform a lookup for the new messaging service, which the application server performs through the default context factory to obtain a new messaging object, which is then handed to the requesting application for use as needed. This method of indirection allows the application server to integrated and use any messaging service, not just the default messaging server originally integrated by the application server vendor.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06915519",
	"publication_date": "2005-07-05",
	"application_number": "09902890",
	"application_date": "2001-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Pre-connection telephony data synchronization",
	"summary": "",
	"abstract": "A method of transmitting updates to a data requester can include receiving a telephony connectivity request for establishing a telephony voice channel between a data requester and a data source. The data source can be detected based upon the telephony connectivity request. A data synchronizer can ascertain an update time that the data requester last received a data update and can determine a synchronization time that the data source was last synchronized. The data synchronizer can compare the update time and the synchronization time. If the synchronization time occurs after the update time, then the data synchronizer can synchronize the data requester with the data source.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06925156",
	"publication_date": "2005-08-02",
	"application_number": "10324895",
	"application_date": "2002-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Process and system for a client object to perform a remote method invocation of a method in a server object",
	"summary": "",
	"abstract": "An adapter is generated by introspecting on the interfaces of an Enterprise JavaBean (EJB) running on a CORBA server. The adapter resides on the Java client-side and contains a remote proxy of the CORBA server that runs the EJB. The adapter is a Java class that implements the interfaces specified by the EJB for invoking its business methods. Adapters delegate all of the business method calls from the client to the CORBA proxy on the server and perform data marshalling from the Java client to the CORBA proxy and vice versa. Any business method calls made by the client to the adapter are delegated by the adapter to the CORBA proxy after appropriate data conversion. Thus, the adapter acts as transparent glue between the Java client and the EJB on the CORBA server.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06959307",
	"publication_date": "2005-10-25",
	"application_number": "10700181",
	"application_date": "2003-11-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Process and system for dynamically compiling a partially interpreted method",
	"summary": "",
	"abstract": "A process and system for dynamically compiling a partially interpreted method is provided. A set of bytecodes for a method is interpreted within a virtual machine. During the interpretation of the method, it is determined, according to the satisfaction of predetermined criteria, that the method contains an execution hot spot and should be just-in-time compiled (JITed) in order to increase the processing speed of the method. The interpretation of the method is halted with a halted execution state and at a halted execution location. Another method is constructed using information from the partially interpreted method and its execution state. The newly constructed method is just-in-time compiled and invoked in such a manner that the newly constructed method recreates the execution state of the partially interpreted method. Once the newly constructed method recreates the execution state of the partially interpreted method, the execution flow follows the bytecode sequence of the partially interpreted method.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06851109",
	"publication_date": "2005-02-01",
	"application_number": "09306190",
	"application_date": "1999-05-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Providing a globally consistent desired group of reachable nodes",
	"summary": "",
	"abstract": "A desired group of reachable nodes of a communications environment is provided. The desired group of reachable nodes includes one or more nodes that can communicate with one another via a same network of a plurality of networks of the communications environment. In one embodiment, the desired group of reachable nodes includes the largest set of nodes that can communicate with one another via a common network. A globally consistent view of this largest set of reachable nodes is provided to interested nodes of the communications environment.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06950846",
	"publication_date": "2005-09-27",
	"application_number": "09893092",
	"application_date": "2001-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Real-time shared disk system for computer clusters",
	"summary": "",
	"abstract": "A clustered computer system includes a shared data storage system, preferably a virtual shared disk (VSD) memory system, to which the computers in the cluster write data and from which the computers read data, using data access requests. The data access requests can be associated with deadlines, and individual storage devices in the shared storage system satisfy competing requests based on the deadlines of the requests. The deadlines can be updated and requests can be killed, to facilitate real time data access for, e.g., multimedia applications such as video on demand.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06877072",
	"publication_date": "2005-04-05",
	"application_number": "09551745",
	"application_date": "2000-04-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Recognition of command related items in object code",
	"summary": "",
	"abstract": "A system and method of recognising command related items in a body of object code, such as command names and/or associated option names involves entering a list of required command names and/or option names in programming language form into a filter table. The object code is then scanned for all bit strings potentially representing command names and identifying such names. For each potential command name, succeeding bits are then examined for bits which represent valid options for each said command name so as to further confirm the identity of commands having valid combinations of command names and/or options. Optionally, the command/option syntax may also be checked. The candiate commands, including options, now identified in programming language form are then compared with the entries in the filter table to determine whether or not they match the required list, which may be further refined by use of logical operators.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06877156",
	"publication_date": "2005-04-05",
	"application_number": "09934350",
	"application_date": "2001-08-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Representing IMS transaction definitions as XML documents",
	"summary": "",
	"abstract": "A method for communicating with an Information Management System (IMS) using eXtensible Markup Language (XML) documents includes the steps of receiving a document comprising an IMS transaction definition encoded in XML; obtaining a Document Type Definition (DTD) specifying rules for decoding the IMS transaction definition; parsing the XML document using the DTD to decode the IMS transaction definition; and providing the decoded IMS transaction definition to the IMS. A system and apparatus for implementing the method are also provided.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06889360",
	"publication_date": "2005-05-03",
	"application_number": "09552636",
	"application_date": "2000-04-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure communication system and method of operation for conducting electronic commerce using remote vault agents interacting with a vault controller",
	"summary": "",
	"abstract": "A secure end-to-end communications system provides end users access to vault-based custom applications of an organization for purposes of conducting electronic commerce. The system includes a web-based vault controller running an application, e.g. a registrations application in a vault cryptographically linked to a database and a Certificate Management System (CMS) for generating digital certificates, and at least one remote vault agent coupled to the vault controller for providing vault-based custom applications to end users. An X.500 directory is coupled to the CMS and cryptographically linked to the remote vault agents for storing end user data. The remote vault agent is an application which comprises a collection of Application Programming Interfaces (APIs) which provide a secure interface to the vault controller; a Lightweight Data Access Protocol (LDAP) used to access the X.500 directory; a secure depositor coupled to vault-based custom applications of an organization. The secure depositor includes APIs to perform cryptographic functions in passing communications between vaults used by the vault agent and vaults used by the vault controller or vaults used by other vault agent applications and a secure depositor library which uses functions in the LDAP to access the X.500 directory. The remote vault agent accesses the web based vault controller on a non-web basis to enable remote custom applications to communicate securely with vault-based applications, such as a registration application that administers digital certificates.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06892300",
	"publication_date": "2005-05-10",
	"application_number": "10338364",
	"application_date": "2003-01-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure shell protocol access control",
	"summary": "",
	"abstract": "An enhanced Secure Shell (SSH) protocol having fine-grained access security policy management and enforcement. Via an authorization application programming interface (aznAPI), remote user protocol connections and sessions may be added to the protected object space of a policy management system so that a system administrator may set permissions to access or use a particular secured system resource for each user, and by groups of users. Thus, when a user accesses the system by Secure Shell, rather than having full, unlimited use and access to system resources once authenticated, the user is granted permission to access only the system resources allowed in the security policy or policies.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06851113",
	"publication_date": "2005-02-01",
	"application_number": "09895120",
	"application_date": "2001-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Service logic execution environment for telecommunications service components",
	"summary": "",
	"abstract": "A service logic execution environment (SLEE) for telecommunications services. The SLEE can include a class loader for loading service components in the SLEE, and an event routing bus for receiving events from the protocol layer and other service components. The SLEE can register each loaded service component to receive events directed to particular registered service components. Subsequently, the event routing bus can route received events to the particular registered service components executing in the SLEE. The event routing bus can be further configured to receive events from application components which are external to the SLEE and the protocol layer. The SLEE also can include a thread pool; and, a thread pool management component for allocating threads in the thread pool for use by the loaded service components.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06914969",
	"publication_date": "2005-07-05",
	"application_number": "09884577",
	"application_date": "2001-06-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Smooth scrolling system and method",
	"summary": "",
	"abstract": "A system and method for smooth scrolling a document and/or window within a graphical user interface is disclosed. The present invention in some preferred embodiments permits augmentation of traditional LINE UP/DOWN, PAGE UP/DOWN, and manual THUMBTRACK scrolling with a smooth scrolling alternative that augments additional hardware input features that may be present on several user input devices such a mouse, trackball, touchpad, Thinkpointu2122 pointing device and the like. The present invention generally solves the problem associated with providing the user the proper degree of scrolling feedback within the graphical user environment, irrespective of the size of the document being viewed.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06856326",
	"publication_date": "2005-02-15",
	"application_number": "09493473",
	"application_date": "2000-01-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software and method for controlling the timing of delayed downloads",
	"summary": "",
	"abstract": "A system for accepting a specification of a time interval during which a download is to be performed on a delayed basis is described. The system can also select a time within the specified period. The selection can be randomized with the aim of distributing the load placed on computer and communication resources, or the selection may be based on testing a number of measures of computer and communication resource availability, and selecting a time of low utilization. A fuzzy measure of resource availability can be obtained, e.g., as a weighted sum of multiple measures, or each measure can be tested against a limit separately. According to another aspect of the invention a system and computer readable medium is disclosed for carrying out the above method.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06934735",
	"publication_date": "2005-08-23",
	"application_number": "09611839",
	"application_date": "2000-07-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Speech enabled wireless device management and an access platform and related control methods thereof",
	"summary": "",
	"abstract": "A speech-enabled device management and access platform includes a communication module which provides a remote control device and a controlled device with data/speech paths; a connection management module which maintains the communication network and provides security administration and device access control; a device management module which discovers a controlled device and gathers respective controlled device data; a speech processing module which converts a speech command into a data command corresponding to the controlled device or converts a data response from the controlled device into a speech response and provides it to the communication module; and a command/event management module which generates instructions based on the data command and sends the instructions to corresponding modules or the controlled device. The inventive device management and access platform preferably is adapted to use the well-known BLUETOOTHu2122 wireless technology.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06895242",
	"publication_date": "2005-05-17",
	"application_number": "09969867",
	"application_date": "2001-10-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for aggregating user project information in a multi-server system",
	"summary": "",
	"abstract": "A system for aggregating user information on a plurality of projects and servers includes a project catalog; a project catalog server; a plurality of project servers; a plurality of project databases; a project database being associated with each project server; an entry in the project catalog for each project server and each project database; and a my projects procedure responsive to user entry of a my projects request for accessing the project catalog server to obtain markup language representations of entries in the project catalog for the user for display at a terminal.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06904439",
	"publication_date": "2005-06-07",
	"application_number": "10334261",
	"application_date": "2002-12-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for clustering servers for performance and load balancing",
	"summary": "",
	"abstract": "A hybrid Notes/DB2 environment provides a requisition catalog on the Web. Client browsers are connected to a GWA infrastructure including a first network dispatcher and a virtual cluster of Domino.Go servers. The network dispatcher sprays out browser requests among configured .nsf servers in virtual server cluster. Communications from this virtual server cluster are, in turn, dispatched by a second network dispatcher servers in a Domino cluster. External objects, primarily for a GUI, are served in a .dfs and include graphic files, Java files, HTML images and net.data macros. The catalog is built from supplier provided flat files. A front end is provided for business logic and validation, as also is a relation database backend. HTML forms are populated using relational database agents. A role table is used for controlling access both to Notes code and DB2 data. Large amounts of data are quickly transferred using an intermediate agent and window.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06965938",
	"publication_date": "2005-11-15",
	"application_number": "09657215",
	"application_date": "2000-09-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for data transfer with respect to external applications",
	"summary": "",
	"abstract": "A hybird Notes/DB2 environment provides a requisition catalog on the Web. Client browsers are connected to a GWA infrastructure including a first network dispatcher and a virtual cluster of Domino.Go servers. The network dispatcher sprays out browser requests among configured .nsf servers in virtual server cluster. Communications from this virtual server cluster are, in turn, dispatched by a second network dispatcher servers in a Domino cluster. External objects, primarily for a GUI, are served in a .dfs and include graphic files, Java files, HTML images and net.data macros. The catalog is built from supplier provided flat files. A front end is provided for business logic and validation, as also is a relation database backend. HTML forms are populated using relational database agents. A role table is used for controlling access both to Notes code and DB2 data. Large amounts of data is quickly transferred using an intermediate agent and window.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06947063",
	"publication_date": "2005-09-20",
	"application_number": "09657217",
	"application_date": "2000-09-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for dynamic runtime partitioning of model-view-controller applications",
	"summary": "",
	"abstract": "Methods and apparatus for dynamic runtime partitioning of network-based client/server applications using a Model-View-Controller pattern are provided. Such dynamic partitioning is accomplished by requiring that the application specify: (i) that access to the Model be done through an application programming interface (API) which allows the system runtime to dynamically allocate and access Model storage on the client and/or server; and (ii) that access to the View be done through an API which allows the system runtime to dynamically allocate and access View components on the client and/or server. This enables applications written and tested in such a manner (referred to herein as the u201ccanonical formu201d) to execute in a non-distributed mode or in a dynamically partitioned mode in which client/server issues are not a factor. This greatly facilitates development of the application. Furthermore, by specifying View components in an abstract, or u201cplatform-independentu201d API, the application can run on multiple client devices without modifying the application. All that is required is a platform-specific implementation of the View components' API. Client platforms for the application can thus include, for example, applets, HTML browsers, and PDAs.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06950850",
	"publication_date": "2005-09-27",
	"application_number": "09703187",
	"application_date": "2000-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for enabling statistical matching",
	"summary": "",
	"abstract": "A system and method for statistical matching that determines statistical curves for data described in a data request and stored data that satisfies the request. The system may determine the statistical curves for each data type and determine whether any overlap exists between the statistical curves. A user may specify a particular acceptable percentage of data that may be used to satisfy the request. The data satisfying the request may be presented to the user or, alternatively, a match/no-match result may be presented indicating whether any data that satisfies the request exists.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06931393",
	"publication_date": "2005-08-16",
	"application_number": "09750317",
	"application_date": "2000-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for managing denial of service attacks",
	"summary": "",
	"abstract": "A system and method for monitoring and controlling the total number of SSL port resources that are allowed to be tied up by a malicious or inept client making multiple requests from a single IP address. Smart SSL handshake timeout detection is used to track and deny service to any SSL clients that do denial of service (DOS) attacks.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06851062",
	"publication_date": "2005-02-01",
	"application_number": "09965074",
	"application_date": "2001-09-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for merging web based on-demand SNA application selection and TN3270 client launching",
	"summary": "",
	"abstract": "The present invention relates to the transmission of Systems Network Architecture (SNA) information through the Internet Protocol (IP) network, and more particularly to a method and system for an SNA application user to locally select a target application at its current location and to launch a preferred (or the more appropriate) Telnet 3270 Client to access this target application in a one-step process.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06854006",
	"publication_date": "2005-02-08",
	"application_number": "09469046",
	"application_date": "1999-12-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for multi-modal focus detection, referential ambiguity resolution and mood classification using multi-modal input",
	"summary": "",
	"abstract": "Systems and methods are provided for performing focus detection, referential ambiguity resolution and mood classification in accordance with multi-modal input data, in varying operating conditions, in order to provide an effective conversational computing environment for one or more users.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06964023",
	"publication_date": "2005-11-08",
	"application_number": "09776654",
	"application_date": "2001-02-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for populating HTML forms using relational database agents",
	"summary": "",
	"abstract": "A hybird Notes/DB2 environment provides a requisition catalog on the Web. Client browsers are connected to a GWA infrastructure including a first network dispatcher and a virtual cluster of Domino.Go servers. The network dispatcher sprays out browser requests among configured .nsf servers in virtual server cluster. Communications from this virtual server cluster are, in turn, dispatched by a second network dispatcher servers in a Domino cluster. External objects, primarily for a GUI, are served in a .dfs and include graphic files, Java files, HTML images and net.data macros. The catalog is built from supplier provided flat files. A front end is provided for business logic and validation, as also is a relation database backend. HTML forms are populated using relational database agents. A role table is used for controlling access both to Notes code and DB2 data. Large amounts of data is quickly transferred using an intermediate agent and window.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06950983",
	"publication_date": "2005-09-27",
	"application_number": "09656967",
	"application_date": "2000-09-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing an application navigator client menu side bar",
	"summary": "",
	"abstract": "A hybird Notes/DB2 environment provides a requisition catalog on the Web. Client browsers are connected to a GWA infrastructure including a first network dispatcher and a virtual cluster of Domino.Go servers. The network dispatcher sprays out browser requests among configured .nsf servers in virtual server cluster. Communications from this virtual server cluster are, in turn, dispatched by a second network dispatcher in a Domino cluster. External objects, primarily for a GUI, are served in a .dfs and include graphic files, Java files, HTML images and net.data macros. The catalog is built from supplier provided flat files. A front end is provided for business logic and validation, as also is a relation database backend. HTML forms are populated using relational database agents. A role table is used for controlling access both to Notes code and DB2 data. Large amounts of data are quickly transferred using an intermediate agent and window.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06886134",
	"publication_date": "2005-04-26",
	"application_number": "09657195",
	"application_date": "2000-09-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for schema-driven compression of extensible mark-up language (XML) documents",
	"summary": "",
	"abstract": "A method (and system) for compressing an extensible markup language (XML) document, includes compressing an XML document such that information in a markup portion therein is maintained in a compressed form to allow the document to be reconstructed. During the compressing, the markup portion and a non-markup portion of the document are separated, and the non-markup component is compressed using a first compression method and the markup component is compressed using a second compression method.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06883137",
	"publication_date": "2005-04-19",
	"application_number": "09551402",
	"application_date": "2000-04-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for searching extended regular expressions",
	"summary": "",
	"abstract": "A system and method for searching extended regular expressions. The system enables users to submit searches for extended regular expressions. The searches may be arbitrarily complex. Searches may also be performed for Unicode and ASCII strings. The system may parse the extended regular expression to be searched and search one or more object stores for extended regular expressions satisfying the search. The extended regular expressions located may then be presented to the user.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06963876",
	"publication_date": "2005-11-08",
	"application_number": "09750315",
	"application_date": "2000-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method to provide applets using a server based virtual machine",
	"summary": "",
	"abstract": "A system and method for delivering application data to both constrained and non-constrained devices. In a Java implementation, the Abstract Window Toolkit (AWT) is used when a client computer system is not constrained and is running the Java Virtual Machine. When the client computer is constrained and, therefore, is unable to execute the Java Virtual Machine, the server computer uses a second library called a Markup Language Window Toolkit (MLWT) with the same API names as in the AWT. The result of the Java Virtual Machine executing APIs from the AWT within a browser on the client computer system are graphics that appear on the client's browser display. Correspondingly, the result of a server executing a Java Virtual Machine executing APIs from the MLWT is HTML and/or JavaScript that is capable of being processed and displayed by a client computer system without using a Java Virtual Machine. The system and method further determines whether a client computer system is constrained resulting in the use of either the AWT or the MLWT.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06976059",
	"publication_date": "2005-12-13",
	"application_number": "09621273",
	"application_date": "2000-07-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for electronic repository of data enforcing access control on data retrieval",
	"summary": "",
	"abstract": "When an electronic document is made available for review by other entities, it is often convenient to store the document in a repository or database managed by a third party. A system is provided in which the originator of the document is able to ensure the integrity and security of its document filed with a third party repository without having to trust the administrator of the repository. Both the document originator and the repository administrator have vault environments which are secure extensions of their respective work spaces. The vault of the document originator encrypts a document that it receives from the originator, prior to forwarding it on to the vault of the repository. On receipt of the encrypted document, the repository's vault signs the encrypted document itself before storing the document in the electronic repository and returns to the originator's vault proof of deposit of the encrypted document in the form of a copy of the signed encrypted document. An access control list identifying access ownership privileges for the document are also stored in the repository. Updates to the access control list are under the control of document originator, or another computer designated by the document originator. When a request is made to view the document, it is made from the vault of the requesting party (a secure extension of the requesting party's work space) to the repository's vault. The repository's vault retrieves a copy of the encrypted document which it forwards, along with the requestor's identity to the originator's vault. The originator's vault verifies that the access control is valid, then verifies that the requestor is authorized to view the document from the access control list, then decrypts the document and forwards the decrypted document directly to the requestor's vault. The requestor provides proof of receipt of the decrypted document.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06839843",
	"publication_date": "2005-01-04",
	"application_number": "09459239",
	"application_date": "1999-12-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for electronic repository of data enforcing access control on data search and retrieval",
	"summary": "",
	"abstract": "When an electronic document is made available for review by other entities, it is often convenient to store the document in a repository or database managed by a third party. A system is provided in which the originator of the document is able to ensure the integrity and security of its document filed with a third party repository without having to trust the administrator of the repository. Both the document originator and the repository administrator have vault environments which are secure extensions of their respective work spaces. The vault of the document originator encrypts a document that it receives from the originator, prior to forwarding it on to the vault of the repository. On receipt of the encrypted document, the repository's vault signs the encrypted document itself before storing the document in the electronic repository and returning to the originator's vault proof of deposit of the encrypted document. When a request is made to view the document, it is made from the vault of the requesting party (a secure extension of the requesting party's work space) to the repository's vault. The repository's vault retrieves a copy of the encrypted document which it forwards, along with the requestor's identity to the originator's vault. The originator's vault verifies that the requester is authorized to view the document from the access control list using an access control list identifying access ownership privileges for the document stored in the vault itself. If the requestor has access, the originator's vault decrypts the document and forwards the decrypted document directly to the requestor's vault. The requestor must provide proof of receipt of the decrypted document.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06950943",
	"publication_date": "2005-09-27",
	"application_number": "09459240",
	"application_date": "1999-12-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems, methods and computer program products to determine useful relationships and dimensions of a database",
	"summary": "",
	"abstract": "Systems, methods, and computer products that efficiently determine useful dimensions associated with a database when employing OLAP processing techniques. The present invention enables a user to see at a glance in which queries certain columns and tables are used. The present invention may be implemented with a query miner module that may include a query browser module that improves browsing through queries and their components over the past. The preferred embodiment of the present invention provides an easy to use graphical interface showing the queries, tables, and columns in a tree structure. Further, the preferred embodiment of the present invention presents information about relationships and dimensions associated with a database and about columns, tables, and queries to the user without discernable lag time between the user's request and the generated information.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06947929",
	"publication_date": "2005-09-20",
	"application_number": "10144540",
	"application_date": "2002-05-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems, methods, and computer program products to optimize serialization when porting code to IBM S/390 UNIX system services from a UNIX system",
	"summary": "",
	"abstract": "Systems, methods, and computer products that determine how to optimize serialization code that has been ported from other computer systems to the OS/390 UNIX system. General-purpose UNIX systems may not provide sufficient facilities; such as compiler run-time APIs like the Compare and Swap C Run-Time Library API, to accommodate the performance-related features of serialized code in complex applications. When porting a high-performance application from other UNIX platforms to IBM OS/390 UNIX, serialized code performance of the application may be limited. The present invention may be implemented by advantageously determining when substitution of the Compare and Swap C Run-Time Library API calls for pthread_mutex calls will improve the execution of serialized code on the IBM OS/390 UNIX system.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06938054",
	"publication_date": "2005-08-30",
	"application_number": "10305307",
	"application_date": "2002-11-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Three-dimensional model to facilitate user comprehension and management of information",
	"summary": "",
	"abstract": "A computer system and method of presenting information from a body of knowledge to a user utilize a three-dimensional model to facilitate user comprehension and management of both the specific information in the body of knowledge, as well as the contextual relationship of the information within the body of knowledge as a whole. An abstraction stack is utilized to concurrently display information elements associated with different levels of abstraction for a body of knowledge, with the information elements visually linked with one another in a three dimensional workspace to represent the hierarchical arrangement of the information elements within the scope of the overall body of knowledge. In addition, a computer system and method of authoring a body of knowledge permit a user to input information with the contextual relationship of the information within the overall body of knowledge established in an intuitive and efficient manner. An authoring tool facilitates the creation of a body of knowledge by an author by organizing information into one or more information elements associated with various levels of abstraction. Users are concurrently presented with a plurality of user input elements configured to receive input from a user, with each user input element associated with a particular level of abstraction. Once information is received into a particular user input element, an information element is stored in a computer system and associated with the level of abstraction for the user input element.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06874123",
	"publication_date": "2005-03-29",
	"application_number": "09020668",
	"application_date": "1998-02-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Tool for converting SQL queries into portable ODBC",
	"summary": "",
	"abstract": "A method, computer program product and system for converting Structured Query Language (SQL) statements into the Open Database Connectivity (ODBC) standard. The source code of a database application may be parsed to identify one or more keywords. These keywords may be used to identify SQL statements as well as variables that are used to process the SQL statements. Upon identifying the SQL statements, the SQL statements may be evaluated. The SQL statements evaluated may then be matched with particular functions in a function library, i.e., a collection of functions stored in data files. These functions may implement particular ODBC calls thereby enabling SQL statements to be converted into the ODBC standard. A function call, i.e., a call to that function, may be substituted for the corresponding SQL statement. The function call may then be implemented resulting in the execution of the ODBC calls.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06877000",
	"publication_date": "2005-04-05",
	"application_number": "09934887",
	"application_date": "2001-08-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transforming data automatically between communications parties in a computing network",
	"summary": "",
	"abstract": "Methods, systems, and computer program products for automatically transforming data or business messages to enable communication between parties in a distributed computing environment (e.g. between business partners who exchange data over a public network, and who do not necessarily use the same data formats), where this data transformation preferably occurs at the edge of the computing network. A set of transformation services is described, and include template registration, transformation, forward, and receive services. Services from this set may optionally be combined to create composite transformation services. A template defines how to transform one data format into another. Selection criteria may be provided to enable dynamically selecting a template at run-time. Using these services, one business partner simply hands its data off into the network to a network-accessible transformation service, where the data is automatically transformed into a format usable by its business partner and forwarded to that business partner.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06961760",
	"publication_date": "2005-11-01",
	"application_number": "09907853",
	"application_date": "2001-07-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Unified relational database model for data mining selected model scoring results, model training results where selection is based on metadata included in mining model control table",
	"summary": "",
	"abstract": "Managing data mining activities in a data mining environment, including selecting a model scoring results table, wherein the selecting is carried out in dependence upon metadata included in a model scoring results control table, the model scoring results control table being related to a data set control table including data set metadata; reading a scoring output data record from the selected model scoring results table; storing the scoring output data record in a managed representation table for scoring results; selecting a model training results file, wherein the selecting is carried out in dependence upon metadata included in a mining model control table; reading training results data from the selected model training results file; and storing the training results data in a model training results table, the model training results table comprising a relational representation of the training results data from the selected model training results file.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06970882",
	"publication_date": "2005-11-29",
	"application_number": "10116588",
	"application_date": "2002-04-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Uniform handling of external resources within structured documents",
	"summary": "",
	"abstract": "Methods, systems, and computer program products for improving globalization of document content. A globalization model is defined which enables separating and externalizing translation-sensitive resources. A content translation expert can then operate efficiently to provide translated content, and a content designer can more easily focus on the task at hand using a resource-neutral document format. Using the disclosed techniques, translation-sensitive resources identified in a structured document can be programmatically translated by resolving references to a particular supplemental document in which the translated content for a target language has been specified.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06934908",
	"publication_date": "2005-08-23",
	"application_number": "09981195",
	"application_date": "2001-10-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "User control of web browser user data",
	"summary": "",
	"abstract": "A mechanism to dynamically present basic authentication and cookie information to a web browser user. As part of a login, a user will have entered a userid and password as part of the basic authentication process. He or she also can configure the web browser to display cookies that are sent to the browser for setting. After their initial display, however, this information is either hidden or not easily accessible to the user. The present invention is a mechanism that allows a web browser user easy access to his or her logged-on userid and cookies.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06851060",
	"publication_date": "2005-02-01",
	"application_number": "09353950",
	"application_date": "1999-07-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Using an index to access a subject multi-dimensional database",
	"summary": "",
	"abstract": "A technique for accessing a subject multi-dimensional database stored on a data store connected to the computer. An index is created for the subject multi-dimensional database, wherein the index includes another multi-dimensional database having dimensions of the subject multi-dimensional database and an additional ranking dimension. Then, the subject multi-dimensional database is accessed using the index.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06915289",
	"publication_date": "2005-07-05",
	"application_number": "09564344",
	"application_date": "2000-05-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Voice processing system",
	"summary": "",
	"abstract": "A voice processing system is disclosed having a first interface for receiving telephone calls from the Public Switched Telephone Network (PSTN) and application software for processing received PSTN telephone calls. The voice processing system supports an API to allow the first interface to inform the application software of the presence of the call. The voice processing system further has a second interface for receiving telephone calls from an internet protocol (IP) network, and a signaling subsystem for routing an IP call from the second interface to the application software. This signaling subsystem uses the same API as is used to inform the application software about PSTN calls. Therefore, it is transparent to the application software whether an incoming call has been received from the IP network rather than the PSTN.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06873689",
	"publication_date": "2005-03-29",
	"application_number": "09545593",
	"application_date": "2000-04-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Consistent application programming interface for communicating with disparate vehicle network classes",
	"summary": "",
	"abstract": "A computer implemented translation system provides a programming interface between a client and remote devices connected to a vehicle data network. The translation system presents programmers with a uniform abstraction of vehicle networks that permits programming and diagnostic procedures to be carried out without reference by the programmer to nuances of the particular network class used on the motor vehicle. Three major interfaces are defined to implement the invention. A network interface incorporates a plurality of functions representing a model of a physical network. A data link interface responsive to client requests for acquiring a network instance corresponding to a physical network from the network interface. The establishment of a network instance may involve reference to a database to obtain appropriate drivers for the underlying physical network represented by the network instance. A remote device interface incorporates a plurality of functions representing the physical devices callable through the network interface and handles messaging between the client and a physical device attached to the underlying physical network.",
	"url": null,
	"owner": "International Truck Intellectual Property Company, LLC",
	"publication_number": "06907445",
	"publication_date": "2005-06-14",
	"application_number": "09781928",
	"application_date": "2001-02-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for identifying, fixing, and updating security vulnerabilities",
	"summary": "",
	"abstract": "The architectural set-up can allow exploits within the scanner and exploits in the express update package to function with no knowledge of each other. The user also needs no knowledge of whether the exploits are within the scanner or the express update package. Mutual authentication procedures can enable the scanner to load only legitimate express update packages, and can provide that express update packages can only be loaded into legitimate scanners.",
	"url": null,
	"owner": "Internet Security Systems, Inc.",
	"publication_number": "06907531",
	"publication_date": "2005-06-14",
	"application_number": "09608282",
	"application_date": "2000-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Tracking, auto-calibration, and map-building system",
	"summary": "",
	"abstract": "A navigation or motion tracking system includes components associated with particular sensors, which are decoupled from a tracking component that takes advantage of information in the sensor measurements. The architecture of this system enables development of sensor-specific components independently of the tracking component, and enables sensors and their associated components to be added or removed without having to re-implement the tracking component. In a software implementation of the system, sensor-specific software components may be dynamically incorporated into the system and the tracking component is then automatically configured to take advantage of measurements from the corresponding sensors without having to modify the tracking component.",
	"url": null,
	"owner": "InterSense, Inc.",
	"publication_number": "06922632",
	"publication_date": "2005-07-26",
	"application_number": "10639242",
	"application_date": "2003-08-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods for matching, selecting, narrowcasting, and/or classifying based on rights management and/or other information",
	"summary": "",
	"abstract": "Rights management information is used at least in part in a matching, narrowcasting, classifying and/or selecting process. A matching and classification utility system comprising a kind of Commerce Utility System is used to perform the matching, narrowcasting, classifying and/or selecting. The matching and classification utility system may match, narrowcast, classify and/or select people and/or things, non-limiting examples of which include software objects. The Matching and Classification Utility system may use any pre-existing classification schemes, including at least some rights management information and/or other qualitative and/or parameter data indicating and/or defining classes, classification systems, class hierarchies, category schemes, class assignments, category assignments, and/or class membership. The Matching and Classification Utility may also use at least some rights management information together with any artificial intelligence, expert system, statistical, computational, manual, or any other means to define new classes, class hierarchies, classification systems, category schemes, and/or assign persons, things, and/or groups of persons and/or things to at least one class.",
	"url": null,
	"owner": "Intertrust Technologies Corporation",
	"publication_number": "06938021",
	"publication_date": "2005-08-30",
	"application_number": "10272903",
	"application_date": "2002-10-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for secure transaction management and electronic rights protection",
	"summary": "",
	"abstract": "The present invention provides systems and methods for secure transaction management and electronic rights protection. Electronic appliances such as computers equipped in accordance with the present invention help to ensure that information is accessed and used only in authorized ways, and maintain the integrity, availability, and/or confidentiality of the information. Such electronic appliances provide a distributed virtual distribution environment (VDE) that may enforce a secure chain of handling and control, for example, to control and/or meter or otherwise monitor use of electronically stored or disseminated information. Such a virtual distribution environment may be used to protect rights of various participants in electronic commerce and other electronic or electronic-facilitated transactions. Distributed and other operating systems, environments and architectures, such as, for example, those using tamper-resistant hardware-based processors, may establish security at each node. These techniques may be used to support an all-electronic information distribution, for example, utilizing the u201celectronic highway.u201d",
	"url": null,
	"owner": "Intertrust Technologies Corporation",
	"publication_number": "06948070",
	"publication_date": "2005-09-20",
	"application_number": "09698044",
	"application_date": "2000-10-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for correlating job-step or execution-process information with corresponding software licensing information",
	"summary": "",
	"abstract": "A software processing method enhances the functionality of job-step, charge-back systems by providing accurate charge-backs based on cognizance of software products actually being used. In the invention, a license manager operating directly or via a plurality of agents interfaces with software clients and/or process-data collectors to correlate the process-related information with the software product use information.",
	"url": null,
	"owner": "Isogon Corporation",
	"publication_number": "06978291",
	"publication_date": "2005-12-20",
	"application_number": "09845235",
	"application_date": "2001-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System of distributed microprocessor interfaces toward macro-cell based designs implemented as ASIC or FPGA bread boarding and relative common bus protocol",
	"summary": "",
	"abstract": "A distributed interface between a microprocessor or a standard bus and user macro-cells belonging to an ASIC, or FPGA, or similar silicon devices includes a main module connected to the microprocessor bus on one side and to a COMMON-BUS inside the interface on which a cluster of peripheral modules is appended on the other side. Peripheral modules are also connected to the user macro-cells through as multiple point-to-point buses to transfer signals two directions. A set of hardware and firmware resources such as registers, counters, synchronizers, dual port memories (e.g. RAM, FIFO) either synchronous or asynchronous with respect to macro-cells clock is encompassed in each peripheral module. Subsets of the standard resources are diversely configured in each peripheral module in accordance with specific needs of the user macro-cells.",
	"url": null,
	"owner": "Italtel S.p.A.",
	"publication_number": "06970966",
	"publication_date": "2005-11-29",
	"application_number": "10091530",
	"application_date": "2002-03-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and computer program product for realizing a system specification which is described in a system description language",
	"summary": "",
	"abstract": "A system design support system is disclosed, which handles specifications at system level, e.g., a specification of software executed by a computer, specification of hardware implemented by combining semiconductor devices and the like, a specification of an incorporated system implemented by combining software and hardware, and a specification of a business process such as a workflow. This apparatus searches for an advertisement in accordance with an query specification. The apparatus also creates a communication procedure between the query specification and a specification of an advertisement part obtained by a search.",
	"url": null,
	"owner": "Kabushiki Kaisha Toshiba",
	"publication_number": "06980941",
	"publication_date": "2005-12-27",
	"application_number": "10059204",
	"application_date": "2002-01-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and device for facilitating efficient data transfer via a wireless communication network",
	"summary": "",
	"abstract": "A wireless network system capable of controlling highly efficient transfer of AV data by an upper application, using information indicating a wireless link condition that varies dynamically is disclosed. In this wireless network system, a wireless terminal and a wire gateway apparatus each store collected wireless link condition information in a descriptor. An upper application on the wireless terminal reads the descriptor at said terminal device and obtains wireless LAN link condition information. The wireless gateway apparatus makes notification to a wireless terminal of a VTR, for example, that actually exists in a 1394 terminal as if it existed as a sub-unit in the local terminal device. The wireless terminal accesses the collected wireless link condition information and selects a AV/C command to be sent to the VTR sub-unit of the wireless gateway apparatus. The wireless terminal transfers the play command for playback to the wireless gateway apparatus. The wireless gateway apparatus transfers the play command to a VTR sub-unit within a terminal on the wired network. In accordance with this action, the VTR sub-unit within the terminal on the wired network starts transfer of AV data.",
	"url": null,
	"owner": "Kabushiki Kaisha Toshiba",
	"publication_number": "06885643",
	"publication_date": "2005-04-26",
	"application_number": "09671012",
	"application_date": "2000-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Motion data command system and control signal definition system for motion program",
	"summary": "",
	"abstract": "A motion data command system for a motion program having a numerical controller for controlling a servo amplifier in accordance with a given motion command. A memory is provided in the numerical controller for storing as variables motion command data. A motion API called by an application program on a personal computer is provided which gives a motion command via a bus to the numerical controller; and indirectly specifying the address of a variable of motion command data present in the memory by way of said motion API.",
	"url": null,
	"owner": "Kabushiki Kaisha Yaskawa Denki",
	"publication_number": "06917850",
	"publication_date": "2005-07-12",
	"application_number": "10452931",
	"application_date": "2003-06-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for web co-navigation with dynamic content including incorporation of business rule into web document",
	"summary": "",
	"abstract": "A method and system for exchanging information over a communications network are described. According to one embodiment, an exemplary method of the invention includes connecting two or more clients to a proxy over the communications network, activating a shared session between the clients, and enabling co-navigation of one or more web documents with dynamic content by the clients during the shared session.",
	"url": null,
	"owner": "Kana Software, Inc.",
	"publication_number": "06871213",
	"publication_date": "2005-03-22",
	"application_number": "09689500",
	"application_date": "2000-10-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Calls identify scenario for control of software objects via property routes",
	"summary": "",
	"abstract": "An information processing system has first and second physical components represented by a first and second software objects. Both objects have properties that are changeable through calls to the objects. The system enables registering a property route linking a first property of the first object to a second property of the second object so that a change in the first property causes the second call being issued to the second object upon invoking the property route. The input call to the first object comprises an identifier enabling to conditionally invoke the route. In this manner, routes belonging to different scenarios are being kept independent so that the system operates more reliable that without scenario identifiers.",
	"url": null,
	"owner": "Koninklijke Philips Electronics N.V.",
	"publication_number": "06918123",
	"publication_date": "2005-07-12",
	"application_number": "09165683",
	"application_date": "1998-10-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Intelligent appliance home network",
	"summary": "",
	"abstract": "The instantaneous power consumption of an appliance is used to determine the status of the appliance, from which further actions may be taken. This invention is premised on the observation that most appliances have a characteristic power consumption pattern that can be used to determine the state of operation of the appliance. An electric coffee pot, for example, consumes high power substantially continuously during the brewing state, then reduces its power level, or power duration, or both, while keeping the pot warm, then terminates its power consumption when it is turned off. In like manner, the power consumption patterns of other appliances, such as toasters, washing machines, dryers, and so on may also be used to determine the state of each appliance. The communicated state may be used by a home-automation system to effect a variety of actions, including notifying the user, terminating the available power to the appliance, initiating an action by another appliance, and so on.",
	"url": null,
	"owner": "Koninklijke Philips Electronics N.V.",
	"publication_number": "06906617",
	"publication_date": "2005-06-14",
	"application_number": "09715364",
	"application_date": "2000-11-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for streaming XML content",
	"summary": "",
	"abstract": "A method and apparatus are disclosed for streaming XML content in a manner that allows the receiver to decode the XML data that is actually received, even if an entire XML document is not received. Each XML document is decomposed and encoded as a collection of sub-trees. Each sub-tree from the larger XML document tree can be parsed and validated by the XML receiver as if it is an independent tree. Each streamed XML document utilizes a structure node that serves as a sub-tree wrapper function around each independent sub-tree. The structure node indicates the relationship of the sub-tree to other sub-trees, thereby allowing the XML receiver to reconstruct the full tree.",
	"url": null,
	"owner": "Koninklijke Philips Electronics N.V.",
	"publication_number": "06966027",
	"publication_date": "2005-11-15",
	"application_number": "09411756",
	"application_date": "1999-10-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Node architecture for modularized and reconfigurable optical networks, and methods and apparatus therefor",
	"summary": "",
	"abstract": "An optical transport switching system having an all-optical switch that can be selectively configured to provide cross-connection and add/drop multiplexing functions. Optical circuit cards are provided in a chassis/bay, and connected by an optical backplane. The circuit cards may include access line interface cards, optical access ingress cards, transport ingress cards, transport egress cards, and optical access egress cards. An optical switching fabric provides selective optical coupling between the cards. The all-optical switch can be used in an optical network that allows external/access networks to access the optical network, including access networks that use Gigabit Ethernet or SONET signaling. Wavelength conversion is provided for non-compliant wavelengths of the access networks. A local area network enables control and monitoring of the cards by a local node manager.",
	"url": null,
	"owner": "Lambda OpticalSystems Corporation",
	"publication_number": "06973229",
	"publication_date": "2005-12-06",
	"application_number": "09795950",
	"application_date": "2001-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for adaptive multi-cultural searching and matching of personal names",
	"summary": "",
	"abstract": "An automated name searching system incorporates an automatic name classifier and a multi-path architecture in which different algorithms are applied based on cultural identity of the query name. The name classifier operates with a preemptive list, analysis of morphological elements, length, and linguistic rules. A name regularizer produces a character based computational representation of the name. A pronunciation equivalent representation such as an IPA language representation, and language specific rules to generate name searching keys, are used in a first pass to eliminate database entries which are obviously not matches for the query name. The methods can also be implemented as a callable set of library routines including an intelligent preprocessor and a name evaluator that produces a score comparing a query name and database name, based on a variety of user-adjustable parameters. The user-controlled parameters permit tuning of the search methodologies for specific custom applications.",
	"url": null,
	"owner": "Language Analysis Systems, Inc.",
	"publication_number": "06963871",
	"publication_date": "2005-11-08",
	"application_number": "09275766",
	"application_date": "1999-03-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for improving the efficiency of state information transfer over a wireless communications network",
	"summary": "",
	"abstract": "The present invention is directed to a system and method for managing state information related to an interactive application to accommodate one or more users participating in an interactive application session, wherein the state information comprises local state information specific to each of the one or more user's unique view of the interactive application and global state information. The system of the present invention may comprise a telecommunications network; an application server in communication with the telecommunications network for managing the global state information relative to all of the users participating in the interactive application session; and at least one mobile client device in communication with the application server over the telecommunications network for managing the local state information for each of the one or more users. The method of the present invention may comprise the steps of structuring the state information for optimized delivery over the telecommunications network; and transferring the state information over the telecommunications network.",
	"url": null,
	"owner": "Leap Wireless International Inc.",
	"publication_number": "06947761",
	"publication_date": "2005-09-20",
	"application_number": "09885977",
	"application_date": "2001-06-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Adaptable wireless proximity networking",
	"summary": "",
	"abstract": "System and method for dynamic delivery of services and applications from a server to mobile computing devices in a wireless proximity framework. This wireless proximity framework allows users of mobile computing devices to dynamically access services and applications available in a given geographic area without preinstalling software for each service or application. Further, the wireless proximity framework allows developers to more quickly and easily adapt existing non-wireless services for use by heterogeneous mobile computing devices. Still further, the wireless proximity framework allows for services and applications to be delivered in a customized manner to each mobile computing device.",
	"url": null,
	"owner": "Left Gate Holdings, Inc.",
	"publication_number": "06931429",
	"publication_date": "2005-08-16",
	"application_number": "09844701",
	"application_date": "2001-04-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for backing up data files",
	"summary": "",
	"abstract": "The invention provides systems and methods for continuous back up of data stored on a computer network. To this end the systems of the invention include a synchronization process that replicates selected source data files data stored on the network and to create a corresponding set of replicated data files, called the target data files, that are stored on a back up server. This synchronization process builds a baseline data structure of target data files. In parallel to this synchronization process, the system includes a dynamic replication process that includes a plurality of agents, each of which monitors a portion of the source data files to detect and capture, at the byte-level, changes to the source data files. Each agent may record the changes to a respective journal file, and as the dynamic replication process detects that the journal files contain data, the journal files are transferred or copied to the back up server so that the captured changes can be written to the appropriate ones of the target data files.",
	"url": null,
	"owner": "LiveVault Corporation",
	"publication_number": "06847984",
	"publication_date": "2005-01-25",
	"application_number": "09465436",
	"application_date": "1999-12-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Internet based product data management (PDM) system",
	"summary": "",
	"abstract": "An integrated product data environment for system design and optimization, e.g., a Collaborative Engineering Environment (CEE). The CEE provides a multi-disciplinary engineering team with immediate access to all relevant product information. It is an enterprise system at the program as well as the company levels, managing product information as a program and corporate asset. Product-centric collaborative capabilities for the CEE are provided by extending the functionality of a commercial Product Data Management (PDM) System. Emerging web-centric commercial-off-tho-shelf (COTS) PDM capabilities, object-oriented technologies, associated rapid application development environments, sophisticated engineering toolsets, and COTS computing and communications technologies have been leveraged to establish the CEE for the complex electronic systems integration domain. The CEE offers substantial improvements in productivity, cost savings, cycle time reductions, product integrity and lifetime support of a system.",
	"url": null,
	"owner": "Lockheed Martin Corporation",
	"publication_number": "06961687",
	"publication_date": "2005-11-01",
	"application_number": "09631694",
	"application_date": "2000-08-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "ATM packet access gateway",
	"summary": "",
	"abstract": "An ATM Packet Access Gateway (ATM PAG) system manages an ATM bearer path extending between ATM endpoints participating, for example, in a VoATM call. The system includes an ATM PAG having a first ATM bearer connection termination for terminating a first bearer connection with a first ATM endpoint, and a second ATM connection termination for terminating a second bearer connection with a second ATM endpoint. A call control entity is associated with the ATM PAG and communicates call control instructions thereto. The call control instructions include instructions for logically concatenating the first and second ATM bearer connections into an active ATM bearer path extending between the first ATM endpoint and the second ATM endpoint. A Media Access Gateway (MAG) function of the ATM PAG is responsible for establishing the connections that form the ATM bearer path. An ATM switch function of the ATM PAG moves bearer traffic ATM packet payloads over the active ATM bearer path.",
	"url": null,
	"owner": "Lucent Technologies Inc.",
	"publication_number": "06925082",
	"publication_date": "2005-08-02",
	"application_number": "09784498",
	"application_date": "2001-02-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Call center queue administration",
	"summary": "",
	"abstract": "A feature server, e.g., a stored program controller, processes calls to a subscriber's main directory number in a packet network by submitting a subscriber-administered questionnaire to callers. The information in the questionnaire, when completed by the calling party, can be used to automatically route the call or to reposition the call in the incoming call queue. Alternatively, the completed, or even partially completed questionnaire may be displayed in a u201cpop upu201d window to a subscriber's operator who can then use the information to assist the caller or, without need of answering the call, to reposition the call within the queue or to divert the call to another directory number. In addition, information previously provided in a questionnaire completed by a caller is stored so that when the caller calls again, the stored information may be employed to more efficiently process the call.",
	"url": null,
	"owner": "Lucent Technologies Inc.",
	"publication_number": "06882641",
	"publication_date": "2005-04-19",
	"application_number": "09511256",
	"application_date": "2000-02-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Master controller for a flexible switching system",
	"summary": "",
	"abstract": "A method and apparatus for controlling telecommunications call processing is disclosed. In a switching system, a Master Controller is provided for maintaining the database of the system, and for receiving call processing control messages. The Master Controller receives these messages via a core switching fabric network of the switching system. The Master Controller selects one of a plurality of feature processors, the feature processors being of several types for processing different features, to process the received call processing message. The Master Controller, if necessary, transmits not only the call processing message, but also state information about the call to the selected feature processor. The feature processor processes the message, and returns call state update data to the Master Controller. The feature processor also transmits messages for controlling other units in order to implement the desired response to the received call processing message. Advantageously, the centralized Master Controller allows a plurality of different types of feature processors to be used, and maintains a record of which feature processors are performing properly so that call control messages are only sent to working feature processors. Advantageously, a single database (duplicated for reliability), is maintained for a plurality of different types of feature processors.",
	"url": null,
	"owner": "Lucent Technologies Inc.",
	"publication_number": "06907035",
	"publication_date": "2005-06-14",
	"application_number": "09593184",
	"application_date": "2000-06-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Media terminal adapter-cellular transceiver (MTA-CT)",
	"summary": "",
	"abstract": "An apparatus for providing bifurcated voice and signaling traffic over a cable telephony architecture by segregating signaling traffic and voice traffic and transmitting the respective traffic over two different mediums to a switch to establish a phone call.",
	"url": null,
	"owner": "Lucent Technologies Inc.",
	"publication_number": "06879582",
	"publication_date": "2005-04-12",
	"application_number": "09677054",
	"application_date": "2000-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multiple-protocol home location register and method of use",
	"summary": "",
	"abstract": "A multiple-protocol home location register (MP HLR) comprises a processor, that generates network messages according to two or more network protocols and processes network requests and other messages to obtain information requested by two or more networks that support the two or more network protocols. One embodiment of the MP HLR () utilizes protocol gateways () that interpret network requests and generate, utilizing a common control procedures for multiple network protocols, queries to a database that provides a common source of data for supported networks. Another embodiment of an MP HLR () utilizes a mediation device () that generates and/or translates network messages according to multiple different network protocols and utilizes multiple HLRs () or home agents, each supporting a different network protocol.",
	"url": null,
	"owner": "Lucent Technologies Inc.",
	"publication_number": "06950876",
	"publication_date": "2005-09-27",
	"application_number": "09812401",
	"application_date": "2001-03-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for integrating building services by developing and loading an adapter element for each of the devices and applications of plurality of integrated building services to encapsulate the plurality of integrated building services with a standard interconnection behavior",
	"summary": "",
	"abstract": "A national or international plurality of interacting, media-connected buildings, providing automated office support processes to individual and aggregate office user customers. Process services are coordinated between building elements via the inter-networking feature that uses the facilities of the public Internet. These distributed services are adaptable and personalized to meet the changing needs of individual office users. Service personalization is continuously maintained in a consistent state throughout the entire global network of buildings, providing individual office users with identical service personalization in all office buildings.",
	"url": null,
	"owner": "Master Solutions, Inc.",
	"publication_number": "06950860",
	"publication_date": "2005-09-27",
	"application_number": "09603314",
	"application_date": "2000-06-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interface definition language compiler",
	"summary": "",
	"abstract": "A distributed computer application can be made to communicate with a plurality of computer architectures. A first compiler compiles and converts input interface source code to produce a high level language including a plurality of computer architecture interfaces. A second compiler integrates application source code with the converted interface source code to produce the distributed computer application with the plurality of computer architecture interfaces that enable the distributed computer application to communicate with the plurality of computer architectures.",
	"url": null,
	"owner": "MatrixOne, Inc.",
	"publication_number": "06934709",
	"publication_date": "2005-08-23",
	"application_number": "09877416",
	"application_date": "2001-06-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Gateway apparatus and the method thereof",
	"summary": "",
	"abstract": "A gateway realizes a connection between a network where HAVi devices are hooked up and another network in accordance with a Play-and-Plug spec. (e.g. the internet protocol (IP)) other than the HAVi spec. An HAVi plug-in detector detects a plug-in of a device to the HAVi network. A virtual device functions as a gateway for accessing from a device plugged-in the IP network to the device plugged-in the HAVi network. A virtual device controller provides the virtual device with an IP identifier for accessing to the virtual device from the IP network, and turns the virtual device to a standby status waiting for connection. A pseudo address generator generates a pseudo address for the virtual device to communicate with the device in the HAVi network, and provides the virtual device with the pseudo address. An address-correspondence-controller controls the correspondence between an HAVi address and the IP identifier both provided to the virtual device.",
	"url": null,
	"owner": "Matsushita Electric Industrial Co., Ltd.",
	"publication_number": "06963925",
	"publication_date": "2005-11-08",
	"application_number": "09603698",
	"application_date": "2000-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic device that uses a pager network for remote reprogramming of the device",
	"summary": "",
	"abstract": "A portable electronic device is disclosed that is reprogrammable through a pager network. The device includes a communications port. The device also includes a data transceiver for transmitting send data and receiving receive data from a pager network. In addition, the device has a processor. The processor is in electronic communication with the communications port for communicating through the communications port. The processor is also in electronic communication with the data transceiver for communications with the pager network. The device also includes reprogrammable memory programmed with instructions to cause the device to receive new program code from the pager network and to reprogram the reprogrammable memory with the new program code.",
	"url": null,
	"owner": "Matsushita Electric Works, Ltd.",
	"publication_number": "06954850",
	"publication_date": "2005-10-11",
	"application_number": "09699693",
	"application_date": "2000-10-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods of populating data structures for use in evolutionary simulations",
	"summary": "",
	"abstract": "In particular, this invention provides novel methods of populating data structures for use in evolutionary modeling. In particular, this invention provides methods of populating a data structure with a plurality of character strings. The methods involve encoding two or more a biological molecules into character strings to provide a collection of two or more different initial character strings; selecting at least two substrings from the pool of character strings; concatenating the substrings to form one or more product strings about the same length as one or more of the initial character strings; adding the product strings to a collection of strings; and optionally repeating this process using one or more of the product strings as an initial string in the collection of initial character strings.",
	"url": null,
	"owner": "Maxygen",
	"publication_number": "06961664",
	"publication_date": "2005-11-01",
	"application_number": "09495668",
	"application_date": "2000-02-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus to facilitate remote software management by applying network address-sorting rules on a hierarchical directory structure",
	"summary": "",
	"abstract": "One embodiment of the present invention provides a system to facilitate software management by applying network address-sorting rules on a hierarchical directory structure. The system operates by creating a hierarchical directory structure that reflects the logical coupling among computers within an enterprise. This hierarchical directory structure is sorted based on network addresses of the constituent computers of the enterprise. The system establishes a software policy at the root level of the hierarchical directory structure. Individual computers within the enterprise inherit the software policy from the root level of the hierarchical directory structure.",
	"url": null,
	"owner": "McAfee, Inc.",
	"publication_number": "06976068",
	"publication_date": "2005-12-13",
	"application_number": "09952755",
	"application_date": "2001-09-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and article of manufacture for a communication system architecture including video conferencing",
	"summary": "",
	"abstract": "Telephone calls, data and other multimedia information including video, audio and data is routed through a switched network which includes transfer of information across the internet. Users can participate in video conference calls in which each participant can simultaneously view the video from each other participant and hear the mixed audio from all participants. Users can also share data and documents with other video conference participants. Users can manage more aspects of a network than previously possible, and control network activities from a central site.",
	"url": null,
	"owner": "MCI Communications Corporation",
	"publication_number": "06909708",
	"publication_date": "2005-06-21",
	"application_number": "08751668",
	"application_date": "1996-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for implementing a global ecosystem of interrelated services",
	"summary": "",
	"abstract": "The present invention is directed to a method and management service platform for implementing a global ecosystem of interrelated services. The service platform is comprised of three distinct layers: a physical machine layer; a virtual machine layer and a layer of interrelated services. The physical machine layer may be deployed on large numbers of small generic servers in many geographic locations distributed for enterprise use. Associated with one or more servers are particular resources managed by that particular server. Any server in any geographic location can process any service needed by any client in any other geographic area. The operating system of each physical server is not used directly in the operating environment, but instead, each server runs a platform-independent programming language virtual machine on top of the operating systemu2014this is the virtual machine layer. Services are location independent processing entities that are managed dynamically, configured dynamically, load their code remotely, and found and communicated with dynamically. A generic service container is a CPU process into which arbitrary software services may be homed to a host server at runtime. Thus, a virtual machine layer is an interface layer of service which supports the layer of interrelated srvices rather than the operating system of the physical machines.",
	"url": null,
	"owner": "MCI, Inc.",
	"publication_number": "06868441",
	"publication_date": "2005-03-15",
	"application_number": "10112373",
	"application_date": "2002-03-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for managing partitioned data resources",
	"summary": "",
	"abstract": "In accordance with an exemplary embodiment of the present invention, association forming entities are: a) maintained as objects in a like manner to the data objects being associated; and b) are themselves partitioned objects comprising two or more association fragments, each association fragment being mostly concerned with the interfaces to a particular data object participating in the association. In accordance with an exemplary embodiment of the present invention, each association fragment affiliated with a particular data object is stored in a location that enhances the ease of interaction between the association fragment and the data object. For example, where a first data object and second data object are maintained in data stores at some distance from one another, physically or logically, then a first association fragment will be located with or near to the first data object, and a second association fragment will be located with or near the second data object, at least within the same partition. This arrangement may be preferable because the volume of interaction between a data object and its respective association fragment may far outweigh the interaction needed between the two association fragments. This arrangement may also be preferable as the volume of interaction between a client application and both the data object and respective association fragment may exceed the interaction needed between the two association fragments. Some interactions will employ only one of the association fragments with the net result being a reduction in communications requirements and an improvement in performance. The present invention further provides for defining logical domains which are arbitrary and entirely orthogonal to partitions.",
	"url": null,
	"owner": "MCI, Inc.",
	"publication_number": "06922685",
	"publication_date": "2005-07-26",
	"application_number": "09863456",
	"application_date": "2001-05-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program product that utilize a hierarchical conceptual framework to model an environment containing a collection of items",
	"summary": "",
	"abstract": "A method, system and program product are disclosed for enabling a user to construct a conceptual hierarchical framework representing a virtual or physical environment. The framework may then be populated with a collection of items. Users may graphically and intuitively view and manipulate various subsets of the environment's space as well as items placed within the modeled environment.",
	"url": null,
	"owner": "MCI, Inc.",
	"publication_number": "06952705",
	"publication_date": "2005-10-04",
	"application_number": "09995193",
	"application_date": "2001-11-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network access system including a programmable access device having distributed service control",
	"summary": "",
	"abstract": "A distributed network access system in accordance with the present invention includes at least an external processor and a programmable access device. The programmable access device has a message interface coupled to the external processor and first and second network interfaces through which packets are communicated with a network. The programmable access device includes a packet header filter and a forwarding table that is utilized to route packets communicated between the first and second network interfaces. In response to receipt of a series of packets, the packet header filter in the programmable access device identifies messages in the series of messages upon which policy-based services are to be implemented and passes identified messages via the message interface to the external processor for processing. In response to receipt of a message, the external processor invokes service control on the message and may also invoke policy control on the message.",
	"url": null,
	"owner": "MCI, Inc.",
	"publication_number": "06928081",
	"publication_date": "2005-08-09",
	"application_number": "09723482",
	"application_date": "2000-11-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Telephone appointment processing system",
	"summary": "",
	"abstract": "Appointments for a professional are captured and placed on an u201celectronicu201d waiting list (e.g., database of scheduled appointments) in an appointment system. When available, the professional (e.g., a physician) communicates with the appointment system and announces his availability. The appointment system begins contacting individuals (e.g., patients) on the waiting list (e.g., in an order specified by the professional), and then bridges the physician and patient for the appointment. The communications are preferably telephone calls, but may be telephone, electronic chats, e-mail, pages, etc. The appointment system includes a billing interface that charges the patient/patients insurance for the appointment. The Appointments themselves may be scheduled, for example, via a touch tone phone response system, a web interface, or other communication devices, etc.",
	"url": null,
	"owner": "Mediphonics, Inc.",
	"publication_number": "06961418",
	"publication_date": "2005-11-01",
	"application_number": "10315439",
	"application_date": "2002-12-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enhanced interface for a medical device and a terminal",
	"summary": "",
	"abstract": "A system is described that comprises a medical device on which is installed a version of software and a software agent communicatively coupled to the medical device without regard to the version of software installed on the medical device. An example of the medical device includes a defibrillator. The software agent may reside in a personal digital assistant and can be operated to communicate with the defibrillator to access the data stored in the defibrillator irrespective of the version of software of the defibrillator.",
	"url": null,
	"owner": "Medtronic Emergency Response Systems, Inc.",
	"publication_number": "06957102",
	"publication_date": "2005-10-18",
	"application_number": "10016507",
	"application_date": "2001-12-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automated on-line experimentation to measure users behavior to treatment for a set of content elements",
	"summary": "",
	"abstract": "An automated system for experimentation includes an experiment engine which can define an experiment relating to various treatments for a set of content elements. The experiment engine conducts the experiment over a data network. An observation module collects observation data relating to user behavior for each treatment. A scripting/scheduling engine coordinates the operation of the experiment engine and the observation module.",
	"url": null,
	"owner": "Memetrics Holdings PTY Limited",
	"publication_number": "06934748",
	"publication_date": "2005-08-23",
	"application_number": "09648429",
	"application_date": "2000-08-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "IP key management mechanism with divergence barrier increasing entropy against computational crypto-analyses",
	"summary": "",
	"abstract": "A key generator () generates, from an IP-key () for entering a closed IP network (), a set () of session keys () indexed for identification, an index pointer () points an index (i, j) to identify a session key (), the set () of session keys has a divergence barrier incorporated therein for barring a computational approach to any session key (), and an unbar data set (i, j, ) unbars the divergence barrier.",
	"url": null,
	"owner": "Meteora System Co., Ltd.",
	"publication_number": "06917685",
	"publication_date": "2005-07-12",
	"application_number": "09647676",
	"application_date": "1999-02-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of and system for automatically producing digital images of moving objects, with pixels having a substantially uniform white level independent of the velocities of the moving objects",
	"summary": "",
	"abstract": "Methods of and systems for illuminating objects using planar laser illumination beams having substantially-planar spatial distribution characteristics that extend through the field of view (FOV) of image formation and detection modules employed in such systems. Each planar laser illumination beam is produced from a planar laser illumination beam array (PLIA) comprising an plurality of planar laser illumination modules (PLIMs). Each PLIM comprises a visible laser diode (VLD, a focusing lens, and a cylindrical optical element arranged therewith. The individual planar laser illumination beam components produced from each PLIM are optically combined to produce a composite substantially planar laser illumination beam having substantially uniform power density characteristics over the entire spatial extend thereof and thus the working range of the system. Preferably, each planar laser illumination beam component is focused so that the minimum beam width thereof occurs at a point or plane which is the farthest or maximum object distance at which the system is designed to acquire images, thereby compensating for decreases in the power density of the incident planar laser illumination beam due to the fact that the width of the planar laser illumination beam increases in length for increasing object distances away from the imaging optics. By virtue of the present invention, it is now possible to use both VLDs and high-speed CCD-type image detectors in conveyor, hand-held and hold-under type scanning applications alike, enjoying the advantages and benefits that each such technology has to offer, while avoiding the shortcomings and drawbacks hitherto associated therewith.",
	"url": null,
	"owner": "Metpologic Instruments, Inc.",
	"publication_number": "06978936",
	"publication_date": "2005-12-27",
	"application_number": "10131796",
	"application_date": "2002-04-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for creating and maintaining data records to improve accuracy thereof",
	"summary": "",
	"abstract": "In a system which receives, from different sources, data having various formats, the received data is selected and combined in accordance with the invention to create accurate records. Specifically, the inventive system organizes the received data into uniform data records having a predetermined format. The data in the uniform data records is converted, if necessary, to conform to a predetermined nomenclature, resulting in normalized data records. The normalized data records are grouped into sets of equivalent records. For each set, the inventive system selects relatively accurate data from the equivalent records in the set to create a final record.",
	"url": null,
	"owner": "Metro One Telecommunications, Inc.",
	"publication_number": "06970880",
	"publication_date": "2005-11-29",
	"application_number": "09992987",
	"application_date": "2001-11-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic vehicle identification (AVI) system employing planar laser illumination and imaging (PLIIM) based subsystems",
	"summary": "",
	"abstract": "An automatic vehicle identification (AVI) system for installation along a roadway, comprising one or more a planar laser illumination and imaging (PLIIM) based linear imaging subsystems mounted above the roadway in a spaced apart manner. The PLIIM based subsystems are arranged for capturing digital linear images of both the front and rear license plates mounted on each moving vehicle travelling under the PLIIM based linear imaging subsystem, and generating digital image data representative of each captured digital linear image. An image processing subsystem is provided for receiving and processing the digital image data generated by the PLIIM-based imaging systems, so as to automatically read the alphanumeric strings on the front and/or rear license plates of each the vehicle. These recognized strings are then compared against vehicle registration information stored in a database in order to identify each vehicle travelling under along the roadway. By virtual of the present invention, it is now possible to capture and buffer high-resolution linear images of the license plates on moving vehicles using planar laser illumination beams and coplanar fields of view, so that these linear images can be sequentially assembled to construct 2-D images for OCR processing so that such vehicles can be automatically identified, while avoiding the need for large and expensive high-intensity lighting equipment required by conventional digital cameras employing 2-D electronic image detectors.",
	"url": null,
	"owner": "Metrologic Instruments, Inc.",
	"publication_number": "06959869",
	"publication_date": "2005-11-01",
	"application_number": "10161091",
	"application_date": "2002-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "GENERALIZED METHOD OF SPECKLE-NOISE PATTERN REDUCTION AND PARTICULAR FORMS OF APPARATUS THEREFOR BASED ON REDUCING THE SPATIAL-COHERENCE OF THE PLANAR LASER ILLUMINATION BEAM AFTER IT ILLUMINATES THE TARGET BY APPLYING SPATIAL INTENSITY MODULATION TECHNIQUES DURING THE DETECTION OF THE REFLECTED/SCATTERED PLIB",
	"summary": "",
	"abstract": "A planar laser illumination and imaging (PLIIM) based camera system capable of producing digital images with reduced levels of speckle-pattern noise. The PLIIM based camera system comprises a planar laser illumination array (PLIA) including a plurality of laser diodes for producing and projecting a planar laser illumination beam (PLIB) so as to illuminate an object as it is moving past said PLIIM based camera system. An image formation and detection (IFD) module is provided having a image detection array and imaging forming optics for providing the image detection array with a field of view (FOV). The PLIB and FOV are arranged in a coplanar relationship along the working range of the PLIIM based camera system so that the PLIB illuminates primarily within the FOV of the IFD module. A speckle-pattern noise reduction subsystem is integrated with the IFD, for reducing the spatial-coherence of said planar laser illumination beam (PLIB) after the PLIB has illuminated and reflected/scattered off the target object. The speckle-pattern noise reduction subsystem carries out a spatial intensity modulation technique after the reflection/scattering of the PLIB off the target, so that the laser illumination reflected/scattered off the object consists of spatially coherent-reduced planar laser illumination, causing numerous substantially different time-varying speckle-noise patterns to be produced at the image detection array over the photo-integration time period thereof. The numerous substantially different time-varying speckle-noise patterns are detected at the image detection array over the photo-integration time period, and the detected speckle-noise patterns are temporally averaged at said image detection array during the photo-integration time period thereof. As a result of such temporal averaging, the RMS power of observable speckle-noise patterns is reduced at the image detection array. By virtue of the present invention, it is now possible to enjoy the benefits of laser-based illumination during high-speed imaging operations, without the adverse effects of speckle-pattern noise.",
	"url": null,
	"owner": "Metrologic Instruments, Inc.",
	"publication_number": "06971576",
	"publication_date": "2005-12-06",
	"application_number": "10136028",
	"application_date": "2002-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "HAND-SUPPORTABLE PLANAR LASER ILLUMINATION AND IMAGING (PLIIM) BASED CAMERA SYSTEM CAPABLE OF PRODUCING DIGITAL LINEAR IMAGES OF A OBJECT, CONTAINING PIXELS HAVING A SUBSTANTIALLY UNIFORM WHITE LEVEL INDEPENDENT OF THE VELOCITY OF THE OBJECT WHILE MANUALLY MOVING SAID FILM BASED CAMERA SYSTEM PAST SAID OBJECT DURING ILLUMINATION IMAGING OPERATIONS",
	"summary": "",
	"abstract": "A hand-supportable planar laser illumination and imaging (PLIIM) based camera system for producing digital linear images of a object within a working range, having a substantially uniform white level independent of the velocity of the object. The hand-supportable PLIIM based camera system comprises a PLIIM based imaging system having a linear image detection array with a field of view (FOV), a planar laser illumination array (PLIA) with a plurality of laser diodes arranged in a linear array for producing a planar laser illumination beam (PLIB) coplanar with the FOV, and a micro-controller for controlling the operation of the PLIIM based imaging system. An object velocity measurement subsystem is mounted within its hand-supportable housing, for determining the velocity of the object relative to the hand-supportable housing and generating object velocity data indicative of the determined velocity of the object. During object illumination and imaging operations, the micro-controller uses the object velocity data compute the optical power which each laser diode must produce in order that each digital image of the object, formed by illuminating the object with the computed optical power, will have substantially the same white intensity level independent of the velocity of the object relative to the PLIIM-based imaging system. The computed optical power value(s) are transmitted to the micro-controller, and the micro-controller uses the computed optical power value(s) to drive each laser diode so that it produces a planar laser illumination beam having the computed optical power level with the FOV. By virtue of the present invention, the planar laser illumination beam illuminates the object, and the PLIIM-based imaging system automatically produces a digital image of the moving object, with pixels having a substantially uniform white level, independent of the velocity of the object. Such image characteristics enables simpler and more reliable image processing in applications such as, for example, optical character recognition (OCR) processing, where image pixels having a substantially uniform white level, and a uniform aspect-ratio, are often desired or required.",
	"url": null,
	"owner": "Metrologic Instruments, Inc.",
	"publication_number": "06953152",
	"publication_date": "2005-10-11",
	"application_number": "10151743",
	"application_date": "2002-05-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hand-supportable planar laser illumination and imaging (PLIIM) device",
	"summary": "",
	"abstract": "A hand-supportable linear-type planar laser illumination and imaging (PLIIM) based device comprising a linear image formation and detection (IFD) module having a linear array of image detection elements and also image formation optics having a field of view (FOV) focusing a linear image of an object onto the linear array of image detection elements. A pair of planar laser illumination arrays (PLIAs) is arranged on opposite sides of the linear image formation and detection module, and produces a plurality of spatially-incoherent planar laser illumination beam (PLIB) components that are optically combined with respect to other PLIB components so as to produce a composite planar laser illumination beam (PLIB) that is arranged in a coplanar relationship with at least a portion of the FOV. Each PLIA includes a plurality of planar laser illumination modules (PLIMs). Each PLIM includes a laser diode and beam focusing and diverging optics for producing one spatially-incoherent PLIB component. The composite PLIB produces a number of substantially different individual speckle noise patterns at the linear array of image detection elements during the photo-integration time period thereof. The speckle noise power observed at the linear array of image detection elements is reduced through temporal averaging of the individual speckle noise patterns during the photo-integration time period. By virtue of the present invention, it is now possible to use visible laser diodes (VLDs) to produce speckle-reduced images of objects suitable for OCR processing, while enjoying improved working distances offered by planar laser illumination techniques.",
	"url": null,
	"owner": "Metrologic Instruments, Inc.",
	"publication_number": "06948659",
	"publication_date": "2005-09-27",
	"application_number": "10105031",
	"application_date": "2002-03-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "HAND-SUPPORTABLE PLANAR LASER ILLUMINATION AND IMAGING (PLIIM) DEVICE EMPLOYING A PAIR OF LINEAR LASER DIODE ARRAYS MOUNTED ABOUT AN AREA IMAGE DETECTION ARRAY, FOR ILLUMINATING AN OBJECT TO BE IMAGED WITH A PLURALITY OF OPTICALLY-COMBINED SPATIALLY-INCOHERENT PLANAR LASER ILLUMINATION BEAMS (PLIBS) SCANNED THROUGH THE FIELD OF VIEW (FOV) OF SAID AREA IMAGE DETECTION ARRAY, AND REDUCING THE SPECKLE-PATTERN NOISE POWER IN DETECTED 2-D IMAGES BY TEMPORALLY-AVERAGING DETECTED SPECKLE-NOISE PATTERNS",
	"summary": "",
	"abstract": "A hand-supportable area-type planar laser illumination and imaging (PLIIM) based device comprising an area-type image formation and detection (IFD) module having a 2-D array of image detection elements. The IFD module also includes image formation optics having a 3-D field of view (FOV). The 3-D FOV focuses a 2-D image of said object onto the 2-D array of image detection elements. A pair of planar laser illumination arrays (PLIAs) are arranged on opposite sides of the linear image formation and detection module, and produce a plurality of spatially-incoherent planar laser illumination beam (PLIB) components that are optically combined with respect to other PLIB components so as to produce a composite PLIB. The composite PLIB is automatically swept through the 3-D field of view so that the composite PLIB is arranged in a coplanar relationship with at least a portion of the 3-D FOV.",
	"url": null,
	"owner": "Metrologic Instruments, Inc.",
	"publication_number": "06971575",
	"publication_date": "2005-12-06",
	"application_number": "10118850",
	"application_date": "2002-04-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "INTERNET-BASED METHOD OF AND SYSTEM FOR REMOTELY MONITORING, CONFIGURING AND SERVICING PLANAR LASER ILLUMINATION AND IMAGING (PLIIM) BASED NETWORKS WITH NODES FOR SUPPORTING OBJECT IDENTIFICATION AND ATTRIBUTE INFORMATION ACQUISITION FUNCTIONS",
	"summary": "",
	"abstract": "An Internet-based method of and system for monitoring, configuring and servicing planar laser illumination and imaging (PLIIM) based network remotely situated from and using any Internet-enabled client computing subsystem functioning as the network management station (NMS). The PLIIM based network (i) has a plurality of nodes, (ii) is operably interconnected to the infrastructure of the Internet, (iii) has set of parameters related to network, system and/or subsystem characteristics of said PLIIM-based network, and (iv) is capable of performing a predefined set of object identification and attribute acquisition functions in a network environment. The method comprising using the NMS to remotely monitor the set of parameters related to network, system and/or subsystem characteristics of the PLIIM-based network. The NMS, its supporting client machine, and/or remote servers supporting servlets, analyze the monitored parameters so as to diagnose either actual or potential performance failures in the PLIIM-based network which might prevent the performance of one or more of the predefined set of object identification and attribute acquisition functions. By virtue of the present invention, it is now possible to remotely monitor, configure and service Internet-based PLIIM-based networks simply using any Internet-enabled browser, thereby keeping such networks up and running, with minimal down-time.",
	"url": null,
	"owner": "Metrologic Instruments, Inc.",
	"publication_number": "06957775",
	"publication_date": "2005-10-25",
	"application_number": "10135893",
	"application_date": "2002-04-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Led-based planar light illumination and imaging (PLIIM) based camera system employing real-time object coordinate acquisition and producing to control automatic zoom and focus imaging optics",
	"summary": "",
	"abstract": "Methods of and systems for illuminating objects using planar laser illumination beams having substantially-planar spatial distribution characteristics that extend through the field of view (FOV) of image formation and detection modules employed in such systems. Each planar laser illumination beam is produced from a planar laser illumination beam array (PLIA) comprising an plurality of planar laser illumination modules (PLIMs). Each PLIM comprises a visible laser diode (VLD, a focusing lens, and a cylindrical optical element arranged therewith. The individual planar laser illumination beam components produced from each PLIM are optically combined to produce a composite substantially planar laser illumination beam having substantially uniform power density characteristics over the entire spatial extend thereof and thus the working range of the system. Preferably, each planar laser illumination beam component is focused so that the minimum beam width thereof occurs at a point or plane which is the farthest or maximum object distance at which the system is designed to acquire images, thereby compensating for decreases in the power density of the incident planar laser illumination beam due to the fact that the width of the planar laser illumination beam increases in length for increasing object distances away from the imaging optics. By virtue of the present invention, it is now possible to use both VLDs and high-speed CCD-type image detectors in conveyor, hand-held and hold-under type scanning applications alike, enjoying the advantages and benefits that each such technology has to offer, while avoiding the shortcomings and drawbacks hitherto associated therewith.",
	"url": null,
	"owner": "Metrologic Instruments, Inc.",
	"publication_number": "06877662",
	"publication_date": "2005-04-12",
	"application_number": "10155803",
	"application_date": "2002-05-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "METHOD OF AND APPARATUS FOR AUTOMATICALLY CROPPING CAPTURED LINEAR IMAGES OF A MOVING OBJECT PRIOR TO IMAGE PROCESSING USING REGION OF INTEREST (ROI) COORDINATE SPECIFICATIONS CAPTURED BY AN OBJECT PROFILING SUBSYSTEM",
	"summary": "",
	"abstract": "A method of and system for automatically cropping linear images of a moving object is disclosed. The method comprises automatically capturing a linear range and intensity data map from an object moving with respect to a coordinate reference system. The linear range and intensity data map includes a sequence of data sets taken along a sequence of sample points along the moving object. Each data set includes a set of coordinates specifying the location of the sample point and an intensity value specifying the intensity of light reflected from the moving object at the sample point. The intensity values in the linear range and intensity data map are automatically analyzed so as to determine the coordinates associated with a region of interest (ROI) on the moving object bearing object identifying information (e.g. bar code symbol, textual information, graphics, etc.) A linear image of the object moving within the coordinate reference is automatically captured. The coordinates of the region of interest (ROI) are automatically converted into a set of pixel indices corresponding to the region of interest (ROI) present in the linear image. The set of pixel indices and the linear image are then used to automatically produce a cropped linear image of the moving object. Cropped linear images can be buffered to produce two-dimensional images of the moving object, and then the two-dimensional image can be processed using image-based bar code decoding and/or OCR operators. By virtue of the present invention, it is now possible to crop linear images prior to image processing, on a linear image by linear image basis, thereby substantially reducing the amount of image data that requires image processing. By reducing image data through the cropping operations of the present invention, significant computational savings is achieved.",
	"url": null,
	"owner": "Metrologic Instruments, Inc.",
	"publication_number": "06837432",
	"publication_date": "2005-01-04",
	"application_number": "10099142",
	"application_date": "2002-03-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of and system for automatically producing digital images of a moving object, with pixels having a substantially uniform white level independent of the velocity of said moving object",
	"summary": "",
	"abstract": "A method of and apparatus for automatically producing digital images of an object having a substantially uniform white level independent of the velocity of the object. The method comprising determining the velocity of an object moving relative to a planar light illumination and imaging (PLIIM) based imaging system having a linear image detection array with a field of view (FOV), a planar light illumination array (PLIA) with a plurality of light emitting diodes (LEDs) arranged in a linear array for producing a planar light illumination beam (PLIB) coplanar with the FOV, and a micro-controller for controlling the operation of the PLIIM based imaging system. The determined velocity is used to compute the optical power which each light emitting diode (LED) must produce in order that each digital image of the object, formed by illuminating the object with the computed optical power, will have substantially the same white intensity level independent of the velocity of the object relative to the PLIIM-based imaging system. The computed optical power value(s) are transmitted to the micro-controller, and the micro-controller uses the computed optical power value(s) to drive each light emitting diode so that it produces a planar light illumination beam having the computed optical power level with the FOV. By virtue of the present invention, the planar light illumination beam illuminates the object, and the PLIIM-based imaging system automatically produces a digital image of the moving object, with pixels having a substantially uniform white level, independent of the velocity of the object. Such image characteristics enables simpler and more reliable image processing in applications such as, for example, optical character recognition (OCR) processing, where image pixels having a substantially uniform white level, and a uniform aspect-ratio, are often desired or required.",
	"url": null,
	"owner": "Metrologic Instruments, Inc.",
	"publication_number": "06971577",
	"publication_date": "2005-12-06",
	"application_number": "10155902",
	"application_date": "2002-05-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of and system for producing high-resolution 3-D images of 3-D object surfaces having arbitrary surface geometry",
	"summary": "",
	"abstract": "Methods of and systems for illuminating objects using planar laser illumination beams having substantially-planar spatial distribution characteristics that extend through the field of view (FOV) of image formation and detection modules employed in such systems. Each planar laser illumination beam is produced from a planar laser illumination beam array (PLIA) comprising an plurality of planar laser illumination modules (PLIMs). Each PLIM comprises a visible laser diode (VLD, a focusing lens, and a cylindrical optical element arranged therewith. The individual planar laser illumination beam components produced from each PLIM are optically combined to produce a composite substantially planar laser illumination beam having substantially uniform power density characteristics over the entire spatial extend thereof and thus the working range of the system. Preferably, each planar laser illumination beam component is focused so that the minimum beam width thereof occurs at a point or plane which is the farthest or maximum object distance at which the system is designed to acquire images, thereby compensating for decreases in the power density of the incident planar laser illumination beam due to the fact that the width of the planar laser illumination beam increases in length for increasing object distances away from the imaging optics. By virtue of the present invention, it is now possible to use both VLDs and high-speed CCD-type image detectors in conveyor, hand-held and hold-under type scanning applications alike, enjoying the advantages and benefits that each such technology has to offer, while avoiding the shortcomings and drawbacks hitherto associated therewith.",
	"url": null,
	"owner": "Metrologic Instruments, Inc.",
	"publication_number": "06962289",
	"publication_date": "2005-11-08",
	"application_number": "10068462",
	"application_date": "2002-07-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "METHOD OF SPECKLE-NOISE PATTERN REDUCTION AND APPARATUS THEREFOR BASED ON REDUCING THE SPATIAL-COHERENCE OF THE PLANAR LASER ILLUMINATION BEAM BEFORE IT ILLUMINATES THE TARGET OBJECT BY APPLYING SPATIAL INTENSITY MODULATION TECHNIQUES DURING THE TRANSMISSION OF THE PLIB TOWARDS THE TARGET",
	"summary": "",
	"abstract": "A planar laser illumination and imaging (PLIIM) based camera system capable of producing digital images with reduced levels of speckle-pattern noise. The PLIIM based camera system comprises a planar laser illumination array (PLIA) including a plurality of laser diodes for producing and projecting a planar laser illumination beam (PLIB) so as to illuminate an object as it is moving past said PLIIM based camera system. An image formation and detection (IFD) module is provided having a image detection array and imaging forming optics for providing the image detection array with a field of view (FOV). The PLIB and FOV are arranged in a coplanar relationship along the working range of the PLIIM based camera system so that the PLIB illuminates primarily within the FOV of the IFD module. A speckle-pattern noise reduction subsystem is integrated with the PLIA, for reducing the spatial-coherence of said planar laser illumination beam (PLIB) before the PLIB illuminates a target object. The speckle-pattern noise reduction subsystem carries out a spatial intensity modulation technique during the transmission of the PLIB towards the target, so that the object is illuminated with a spatially coherent-reduced planar laser illumination beam (PLIB) and numerous substantially different time-varying speckle-noise patterns are produced at the image detection array over the photo-integration time period thereof. The numerous substantially different time-varying speckle-noise patterns are detected at the image detection array over the photo-integration time period, and the detected speckle-noise patterns are temporally averaged at said image detection array during the photo-integration time period thereof. As a result of such temporal averaging, the RMS power of observable speckle-noise patterns is reduced at the image detection array. By virtue of the present invention, it is now possible to enjoy the benefits of laser-based illumination during high-speed imaging operations, without the adverse effects of speckle-pattern noise.",
	"url": null,
	"owner": "MetroLogic Instruments, Inc.",
	"publication_number": "06969001",
	"publication_date": "2005-11-29",
	"application_number": "10137187",
	"application_date": "2002-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "METHOD OF SPECKLE-NOISE PATTERN REDUCTION AND APPARATUS THEREFOR BASED ON REDUCING THE TEMPORAL-COHERENCE OF THE PLANAR LASER ILLUMINATION BEAM (PLIB) AFTER IT ILLUMINATES THE TARGET BY APPLYING TEMPORAL INTENSITY MODULATION TECHNIQUES DURING THE DETECTION OF THE REFLECTED/SCATTERED PLIB",
	"summary": "",
	"abstract": "A planar laser illumination and imaging (PLIIM) based camera system capable of producing digital images with reduced levels of speckle-pattern noise. The PLIIM based camera system comprises a planar laser illumination array (PLIA) including a plurality of laser diodes for producing and projecting a planar laser illumination beam (PLIB) so as to illuminate an object as it is moving past said PLIIM based camera system. An image formation and detection (IFD) module is provided having a image detection array and imaging forming optics for providing the image detection array with a field of view (FOV). The PLIB and FOV are arranged in a coplanar relationship along the working range of the PLIIM based camera system so that the PLIB illuminates primarily within the FOV of the IFD module. A speckle-pattern noise reduction subsystem is integrated with the IFD, for reducing the temporal-coherence of said planar laser illumination beam (PLIB) after the PLIB has illuminated and reflected/scattered off the target object. The speckle-pattern noise reduction subsystem carries out a temporal intensity modulation technique after the reflection/scattering of the PLIB off the target, so that the laser illumination reflected/scattered off the object consists of temporally coherent-reduced planar laser illumination, causing numerous substantially different time-varying speckle-noise patterns to be produced at the image detection array over the photo-integration time period thereof. The numerous substantially different time-varying speckle-noise patterns are detected at the image detection array over the photo-integration time period, and the detected speckle-noise patterns are temporally averaged at said image detection array during the photo-integration time period thereof. As a result of such temporal averaging, the RMS power of observable speckle-noise patterns is reduced at the image detection array. By virtue of the present invention, it is now possible to enjoy the benefits of laser-based illumination during high-speed imaging operations, without the adverse effects of speckle-pattern noise.",
	"url": null,
	"owner": "Metrologic Instruments, Inc.",
	"publication_number": "06880756",
	"publication_date": "2005-04-19",
	"application_number": "10136463",
	"application_date": "2002-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "METHOD OF SPECKLE-NOISE PATTERN REDUCTION AND APPARATUS THEREFOR BASED ON REDUCING THE TEMPORAL-COHERENCE OF THE PLANAR LASER ILLUMINATION BEAM BEFORE IT ILLUMINATES THE TARGET OBJECT BY APPLYING TEMPORAL FREQUENCY MODULATION TECHNIQUES DURING THE TRANSMISSION OF THE PLIB TOWARDS THE TARGET",
	"summary": "",
	"abstract": "A planar laser illumination and imaging (PLLIM) based camera system capable of producing digital images with reduced levels of speckle-pattern noise. The PLIIM based camera system comprises a planar laser illumination any (PLIA) including a plurality of laser diodes for producing and projecting a planar laser illumination beam (PLIB), so as to illuminate an object as it is moving past said PLIIM based camera system. An image formation and detection (IFD) module is provided having a image detection array and imaging forming optics for providing the image detection array with a field of view (FOV). The PLIB and FOV are arranged in a coplanar relationship along the working range of the PLIIM based camera system so that the PLIB illuminates primarily within the FOV of the IFD module. A speckle-pattern noise reduction subsystem is integrated with the PLIA, for reducing the temporal-coherence of said planar laser illumination beam (PLIB) before the PLIB illuminates a target object. The speckle-pattern noise reduction subsystem carries out a temporal frequency modulation technique during the transmission of the PLIB towards the target, so that the object is illuminated with a temporally coherent-reduced planar laser illumination beam (PLIB) and numerous substantially different time-varying speckle-noise patterns are produced at the image detection array over the photo-integration time period thereof. The numerous substantially different time-varying speckle-noise patterns are detected at the image detection array over the photo-integration time period, and the detected speckle-noise patterns are temporally averaged at said image detection array during the photo-integration time period thereof. As a result of such temporal averaging, the RMS power of observable speckle-noise patterns is reduced at the image detection array. By virtue of the present invention, it is now possible to enjoy the benefits of using laser-based illumination during high-speed imaging operations, without the adverse effects associated with speckle-pattern noise.",
	"url": null,
	"owner": "Metrologic Instruments, Inc.",
	"publication_number": "06857570",
	"publication_date": "2005-02-22",
	"application_number": "10137738",
	"application_date": "2002-05-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Neutron-beam based scanning system having an automatic object identification and attribute information acquisition and linking mechanism integrated therein",
	"summary": "",
	"abstract": "A Pulsed Fast Neutron Analysis (PFNA) object scanning-tunnel system for automatically acquiring and linking object identity and attribute information about each object transported therethrough while bearing a bar code symbol and/or graphical indicia on the exterior surface thereof. The system comprises a scanning-tunnel housing through which one or more objects can be transported. A planar light illumination (PLIIM) based subsystem, is mounted within said scanning-tunnel housing, and includes a pair of planar light illumination arrays (PLIAs) for producing a planar light illumination beam (PLIB) for illuminating the exterior surface of each object. A linear image formation and detection (IFD) module automatically forms and detects digital linear images of the bar code symbol and/or graphical indicia thereon. An image processing computer buffers and processes the digital linear images so to construct a 2-D image of the bar code symbol and/or identifying graphical indicia on the object, and then processes the 2-D image so as to read the bar code symbol and/or identifying graphical indicia, and identify the object by producing object identification information. A PFNA scanning subsystem mounted within the scanning-tunnel housing, produces a neutron energy beam for scanning the interior and/or contents of each object, and automatically produces PFNA images of the object's interior and/or contents. An information linking computer subsystem automatically links (i) PFNA images of the interior and/or contents of each transported object, with (ii) object identification information, for storage within a relational database management system (RDBMS) for subsequent access and retrieval. By virtue of the present invention, object attribute information is automatically linked to object identity information, and the resulting composite information set is stored in a relational database management system (RDBMS) for subsequent retrieval and use in diverse applications.",
	"url": null,
	"owner": "Metrologic Instruments, Inc.",
	"publication_number": "06923374",
	"publication_date": "2005-08-02",
	"application_number": "10165180",
	"application_date": "2002-06-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Object identification and attribute information acquisition and linking computer system",
	"summary": "",
	"abstract": "An object identification and attribute information tracking and linking computer system for connection to the communication medium of a data communication network. The object identification and attribute information tracking and linking computer system comprises a housing; a first set of programmable data input ports, which is provided through the exterior of the housing, for connection to one or more object identification data generating sources and capable of receiving object identity data elements from the one or more of object identification data generating sources using a networking protocol, wherein the object identification data generating source is disposed external to the housing; a second set of programmable data input ports which is provided through the exterior of the housing, for connection to one or more object attribute data generating sources and is capable of receiving object attribute data elements from one or more object attribute data generating sources using the networking protocol; and a data element queuing, handling, processing and linking mechanism, which is provided in operable association with the first and second programmable data input ports, for enabling the automatic queuing, handling, processing, linking and transporting each input object identification data element, and one or more object attribute data elements linked thereto, to a database subsystem operably connected to the data communication network for storage and subsequent retrieval.",
	"url": null,
	"owner": "Metrologic Instruments, Inc.",
	"publication_number": "06918541",
	"publication_date": "2005-07-19",
	"application_number": "10091339",
	"application_date": "2002-03-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "PLANAR LASER ILLUMINATION AND IMAGING (PLIIM) BASED CAMERA SYSTEM FOR AUTOMATICALLY PRODUCING DIGITAL LINEAR IMAGES OF A MOVING OBJECT, CONTAINING PIXELS HAVING A SUBSTANTIALLY SQUARE ASPECT-RATIO INDEPENDENT OF THE MEASURED RANGE AND/OR A VELOCITY OF SAID MOVING OBJECT",
	"summary": "",
	"abstract": "Methods of and systems for illuminating objects using planar laser illumination beams having substantially-planar spatial distribution characteristics that extend through the field of view (FOV) of image formation and detection modules employed in such systems. Each planar laser illumination beam is produced from a planar laser illumination beam array (PLIA) comprising an plurality of planar laser illumination modules (PLIMs). Each PLIM comprises a visible laser diode (VLD, a focusing lens, and a cylindrical optical element arranged therewith. The individual planar laser illumination beam components produced from each PLIM are optically combined to produce a composite substantially planar laser illumination beam having substantially uniform power density characteristics over the entire spatial extend thereof and thus the working range of the system. Preferably, each planar laser illumination beam component is focused so that the minimum beam width thereof occurs at a point or plane which is the farthest or maximum object distance at which the system is designed to acquire images, thereby compensating for decreases in the power density of the incident planar laser illumination beam due to the fact that the width of the planar laser illumination beam increases in length for increasing object distances away from the imaging optics. By virtue of the present invention, it is now possible to use both VLDs and high-speed CCD-type image detectors in conveyor, hand-held and hold-under type scanning applications alike, enjoying the advantages and benefits that each such technology has to offer, while avoiding the shortcomings and drawbacks hitherto associated therewith.",
	"url": null,
	"owner": "Metrologic Instruments, Inc.",
	"publication_number": "06953151",
	"publication_date": "2005-10-11",
	"application_number": "10135866",
	"application_date": "2002-04-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Planar laser illumination and imaging (PLIIM) engine",
	"summary": "",
	"abstract": "Methods of and systems for illuminating objects using planar laser illumination beams having substantially-planar spatial distribution characteristics that extend through the field of view (FOV) of image formation and detection modules employed in such systems. Each planar laser illumination beam is produced from a planar laser illumination beam array (PLIA) comprising an plurality of planar laser illumination modules (PLIMs). Each PLIM comprises a visible laser diode (VLD, a focusing lens, and a cylindrical optical element arranged therewith. The individual planar laser illumination beam components produced from each PLIM are optically combined to produce a composite substantially planar laser illumination beam having substantially uniform power density characteristics over the entire spatial extend thereof and thus the working range of the system. Preferably, each planar laser illumination beam component is focused so that the minimum beam width thereof occurs at a point or plane which is the farthest or maximum object distance at which the system is designed to acquire images, thereby compensating for decreases in the power density of the incident planar laser illumination beam due to the fact that the width of the planar laser illumination beam increases in length for increasing object distances away from the imaging optics. By virtue of the present invention, it is now possible to use both VLDs and high-speed CCD-type image detectors in conveyor, hand-held and hold-under type scanning applications alike, enjoying the advantages and benefits that each such technology has to offer, while avoiding the shortcomings and drawbacks hitherto associated therewith.",
	"url": null,
	"owner": "Metrologic Instruments, Inc.",
	"publication_number": "06913202",
	"publication_date": "2005-07-05",
	"application_number": "10187425",
	"application_date": "2002-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "PLANAR LIGHT ILLUMINATION AND IMAGING (PLIIM) BASED SYSTEM HAVING A LINEAR IMAGE DETECTION CHIP MOUNTING ASSEMBLY WITH MEANS FOR PREVENTING MISALIGNMENT BETWEEN THE FIELD OF VIEW (FOV) OF SAID LINEAR IMAGE DETECTION CHIP AND THE CO-PLANAR LASER ILLUMINATION BEAM (PLIB) PRODUCED BY SAID PLIIM BASED SYSTEM, IN RESPONSE TO THERMAL EXPANSION AND/OR CONTRACTION WITHIN SAID PLIIM BASED SYSTEM",
	"summary": "",
	"abstract": "A planar laser illumination and imaging (PLIIM) based system comprising a linear image formation and detection module having (i) an image sensing chip having a plurality of conductive pins establishing electrical interconnections with conductive elements within a chip mounting socket mounted on an electronic camera board, and (ii) image forming optics with a field of view. The system also includes a heat-exchanging structure, rigidly connected to the image formation optics, and having (i) a body portion provided with heat exchanging elements, (ii) a plurality of apertures through which the plurality of conductive pins on the image sensing chip pass to establish electrical interconnections with the conductive elements within the chip mounting socket, and (III) a plurality of mechanical elements for releasably engaging the package of the image sensing chip so as to rigidly maintain the image sensing chip in alignment with the image forming optics.",
	"url": null,
	"owner": "Metrologic Instruments, Inc.",
	"publication_number": "06978935",
	"publication_date": "2005-12-27",
	"application_number": "10131573",
	"application_date": "2002-04-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Programmable data element queuing, handling, processing and linking device integrated into an object identification and attribute acquisition system",
	"summary": "",
	"abstract": "A programmable data element queuing, handling, processing and linking device integrated into an object identification and attribute acquisition system operated in either a singulated or non-singulated object transport environment. The programmable data element queuing, handling, processing and linking device comprises a first data element input unit, a second data element input unit, and a programmable data element tracking and linking module. The first data element input unit receives object identity data from an object identity data producing source embodied within the object identification and attribute acquisition system. The second data element input unit receives corresponding object attribute data from an object attribute data producing source embodied within the object identification and attribute acquisition system. The programmable data element tracking and linking module links (i) object identity data to (ii) corresponding object attribute data to form a composite data element, for use by a host system.",
	"url": null,
	"owner": "Metrologic Instruments, Inc.",
	"publication_number": "06915954",
	"publication_date": "2005-07-12",
	"application_number": "10084827",
	"application_date": "2002-02-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "TUNNEL-BASED METHOD OF AND SYSTEM FOR IDENTIFYING TRANSPORTED PACKAGES EMPLOYING THE TRANSMISSION OF PACKAGE DIMENSION DATA OVER A DATA COMMUNICATIONS NETWORK AND THE TRANSFORMATION OF PACKAGE DIMENSION DATA AT LINEAR IMAGING SUBSYSTEMS IN SAID TUNNEL-BASED SYSTEM SO AS TO ENABLE THE CONTROL OF AUTO ZOOM/FOCUS CAMERA MODULES THEREWITHIN DURING LINEAR IMAGING OPERATIONS",
	"summary": "",
	"abstract": "A camera-based tunnel-type package identification system comprising at least first and second camera units, a package dimension subsystem, and a data communications network installed about a conveyor belt structure. Each camera unit is mounted about the conveyor belt structure, and has a linear imaging subsystem with a field of view (FOV) having automatic zoom and focus imaging optics, and a camera control computer for controlling the operation of the imaging subsystem. During system operation, package dimension data from transported packages is transmitted over the data communications network to the first and second camera units. Each camera control computer converts received package dimension data to its local coordinate reference system, and generates camera control signals which drive the automatic zoom and focus imaging optics of its associated camera units to enable the capture and processing of linear images of the transported package.",
	"url": null,
	"owner": "Metrologic Instruments, Inc.",
	"publication_number": "06959868",
	"publication_date": "2005-11-01",
	"application_number": "10100234",
	"application_date": "2002-03-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Tunnel-type package identification system having a remote image keying station with an ethernet-over-fiber-optic data communication link",
	"summary": "",
	"abstract": "A tunnel-type automatic package identification system for automatically identifying packages transported along a conveyor belt structure. The tunnel-type automatic package identification system comprises a data communications network, a package dimensioning subsystem and a package identification unit. The package identification subsystem is mounted above a conveyor belt structure in a work environment, and includes: a linear imaging subsystem having a field of view (FOV) with variable zoom and variable focus characteristics, for producing linear images of packages as said packages are transported along said conveyor belt structure and beneath said package identification subsystem; and a camera control computer operably connected to the linear imaging subsystem and the package dimensioning subsystem, and the communication medium of the data communications network. The camera control computer receives the package dimension data producing zoom and focus control signals for automatically and dynamically controlling the variable zoom and variable focus characteristics of the linear imaging subsystem as the package is transported beneath the package identification subsystem. The camera control computer receives the package dimension data, and producing zoom and focus control signals for automatically and controlling the variable zoom and variable focus characteristics of the linear imaging subsystem as the package is transported past the package identification subsystem. An image keying station, located remotely from the work environment, is connected to the communications medium by way of an Ethernet-over-fiber-optic data communication link, and enables the operator of the image keying station to visually display images of packages which can not be identified by computer-based image processing, so that the operator may read such images and manually keyed into a database, information which identifies the package associated with the operator-read image. By virtue of the present invention, images of packages can be captured with constant dpi resolution, and if necessary, manually identified at a highly remote image keying station, thereby providing increased flexibility in setting up tunnel-type automatic package identification systems in industrial environments where high noise levels and other distractions to carrying out manual image reading operations are predominant.",
	"url": null,
	"owner": "Metrologic Instruments, Inc.",
	"publication_number": "06851610",
	"publication_date": "2005-02-08",
	"application_number": "10165761",
	"application_date": "2002-06-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Audio volume control for computer systems",
	"summary": "",
	"abstract": "A computer system includes an audio chip to generate audio signals at a target volume level to be emitted as audio output by speakers. Also included in the computer system may be a volume control routine to limit the overall volume level of the system. A maximum volume level may be set by a user through interacting with a software routine. The software routine may include password protection, requiring a user to enter a correct password in order to modify the maximum volume level. If the target volume level is above the maximum volume level, then the volume control routine may set the overall volume level of the system at the maximum volume level. Otherwise the volume control routine may set the overall volume level at the target volume level.",
	"url": null,
	"owner": "Micron Technology, Inc.",
	"publication_number": "06891955",
	"publication_date": "2005-05-10",
	"application_number": "09363788",
	"application_date": "1999-07-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Remote semiconductor microscopy",
	"summary": "",
	"abstract": "A method and apparatus are described for remote semiconductor microscopy whereby video signals are broadcast from one or more microscopes to remote viewers. A live video signal is broadcast from the microscope over a network to remote personal computers located in the offices of process engineers. The office-based process engineers are provided real-time, or substantially real-time, views of a wafer, including peripheral views of the wafer outside cell array boundaries. The process engineer, in his office, can direct a technician, operating the microscope in the clean room complex, to display a desired cell region-of-interest with the microscope. As a result, the process engineers can more efficiently collaborate to solve process problems or even develop new process techniques.",
	"url": null,
	"owner": "Micron Technology, Inc.",
	"publication_number": "06859760",
	"publication_date": "2005-02-22",
	"application_number": "10441703",
	"application_date": "2003-05-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Extensible schema for defining the visual appearance of computer system components",
	"summary": "",
	"abstract": "A system theme schema file format includes declarations of enumerations, properties, control parts, and control part states for providing extensible theming of the visual appearance of a computer operating system's user interface components. Custom theme schema files can extend the system theme schema by adding declarations of custom enumerations, custom properties, custom control part, and custom control part states, thereby participating in theming of the visual appearance of components of the computer's operating system. The schema files establish the allowable form and content of data that specifies how user interface components should be displayed in accordance with particular themes. Themes are defined and user interface components are displayed by the operating system in accordance with the information specified in the schema files.",
	"url": null,
	"owner": "Microsoft Corp.",
	"publication_number": "06886135",
	"publication_date": "2005-04-26",
	"application_number": "09825518",
	"application_date": "2001-04-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "In-situ digital inking for applications",
	"summary": "",
	"abstract": "A digital ink environment is provided for non-native ink application programs to create independent ink services for sharing between different application programs and transmission. The digital ink environment is provided for interacting with embedded or linked ink words or other ink data in a compound ink document. The user is provided with the freedom to input digital ink so they can write anywhere in the ink environment, in any orientation, and using any desired stroke size provided by the ink environment. The ink environment is provided in an activated state for in-situ user interaction and manipulation in a computing environment, for example a pen-based environment.",
	"url": null,
	"owner": "Microsoft Corp.",
	"publication_number": "06867786",
	"publication_date": "2005-03-15",
	"application_number": "10206597",
	"application_date": "2002-07-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and mechanism for providing computer programs with computer system events",
	"summary": "",
	"abstract": "A method and system for providing system event notifications to clients such as applications. Clients register for notification of one or more types of events with a registration mechanism, and a System Event Notification Service, (SENS), receives system event information and fires event notifications in response thereto. A distribution mechanism selectively communicates the fired event to each client registered for notification thereof based on the type of event. Events include network events, for which the service monitors the connectivity state of the machine, including whether a connection is established or lost, the type of connection (LAN/WAN) and bandwidth information. To monitor a LAN state, the service caches outgoing and incoming network information including errors and packet counts and statistically evaluates this cached information against current information to determine whether the connection is established or lost. The service also determines if a destination (IP address or name) is reachable, by periodically polling destinations. Other system event notifications may be fired, including logon or logoff operations and power management events.",
	"url": null,
	"owner": "Microsoft Corp.",
	"publication_number": "06859829",
	"publication_date": "2005-02-22",
	"application_number": "09256624",
	"application_date": "1999-02-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for describing and automatically managing resources",
	"summary": "",
	"abstract": "A system and method for automatically allocating resources is provided. The system includes one or more components for automatically allocating one or more resources, based at least in part on data associated with the one or more resources, the data including at least one of, type data, instance data, characteristic data, and dynamically modifiable metadata. An alternative aspect of the system provides one or more components for automatically allocating one or more resources distributed on a plurality of resource allocation servers. The one or more components for automatically allocating the one or more resources can improve utilization of the capacity of the one or more resources. In an alternative embodiment the system includes an Application Programming Interface (API) operable to configure and/or control the one or more components for automatically allocating one or more resources.",
	"url": null,
	"owner": "Microsoft Corp.",
	"publication_number": "06901446",
	"publication_date": "2005-05-31",
	"application_number": "09796284",
	"application_date": "2001-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for terminating applications",
	"summary": "",
	"abstract": "A computer application program executing on a computer, such as a portable computer, is selected for termination by first identifying computer application programs executing on the computer. A priority value is assigned to each of the identified computer applications. The priority value is based on multiple characteristics of the identified computer application programs. The computer application program with the smallest priority value is automatically terminated. If the computer application program with the smallest priority value is in a modal state in which it waits for a response from a user, then a default response is provided to the application prior to terminating the computer application program. The characteristics associated with the computer application programs may include average launch times, average memory usages, a class or type of application, frequencies of usage, and an amount of data stored on the computer by the computer application program.",
	"url": null,
	"owner": "Microsoft Corp.",
	"publication_number": "06910210",
	"publication_date": "2005-06-21",
	"application_number": "09379017",
	"application_date": "1999-08-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Accessing audio processing components in an audio generation system",
	"summary": "",
	"abstract": "An application program provides a performance manager and an audio rendition manager to produce a rendition corresponding to an audio source. The performance manager receives audio data from the audio source and instantiates audio data processing components to process the audio data. The audio rendition manager receives the audio data from the performance manager and instantiates audio data processing components to further process the audio data, including a synthesizer component that generates audio sound wave data, and audio buffers that process the audio sound wave data. The audio data processing components are instantiated as objects having an interface that can be called by the application program. The application program requests a programming reference to an interface of an audio data processing component in the performance manager, or in the audio rendition manager, by calling an interface method of the performance manager or the audio rendition manager, respectively.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06970822",
	"publication_date": "2005-11-29",
	"application_number": "09801938",
	"application_date": "2001-03-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Adaptive flow control protocol",
	"summary": "",
	"abstract": "A method and system for directing data transfers between applications and devices residing on different computers or devices using an adaptive flow control protocol has been described. When an application or device requests to transfer data with another application or device, the adaptive flow control protocol adapts the way data is transferred by observing when an application that is receiving data posts a receive buffer and detects the receive buffer's size. Based upon the application's or device's behavior, the adaptive flow control protocol transfers the data in a mode that is best suited for the application. A credit-based sequencing method is used to coordinate message transfers.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06978312",
	"publication_date": "2005-12-20",
	"application_number": "09844098",
	"application_date": "2001-04-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Adaptive flow control protocol",
	"summary": "",
	"abstract": "A method and system for directing data transfers between applications and devices residing on different computers or devices using an adaptive flow control protocol has been described. When an application or device requests to transfer data with another application or device, adaptive flow control protocol adapts the way data is transferred by observing when an application that is receiving data posts a receive buffer and detects the receive buffer's size. Based upon the application's or device's behavior, the adaptive flow control protocol transfers the data in a mode that is best suited for the application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06981051",
	"publication_date": "2005-12-27",
	"application_number": "09844153",
	"application_date": "2001-04-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "API communications for vertex and pixel shaders",
	"summary": "",
	"abstract": "A three-dimensional API for communicating with hardware implementations of vertex shaders and pixel shaders having local registers. With respect to vertex shaders, API communications are provided that may make use of an on-chip register index and API communications are also provided for a specialized function, implemented on-chip at a register level, that outputs the fractional portion(s) of input(s). With respect to pixel shaders, API communications are provided for a specialized function, implemented on-chip at a register level, that performs a linear interpolation function and API communications are provided for specialized modifiers, also implemented on-chip at a register level, that perform modification functions including negating, complementing, remapping, stick biasing, scaling and saturating. Advantageously, these API communications expose these very useful on-chip graphical algorithmic elements to a developer while hiding the details of the operation of the vertex shader and pixel shader chips from the developer.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06963345",
	"publication_date": "2005-11-08",
	"application_number": "10981353",
	"application_date": "2004-11-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application programming interface for changing the visual style",
	"summary": "",
	"abstract": "A method of communicating between a graphical component library and an appearance manager is provided that includes issuing a request, that includes component defining parameters, for rendering services by a graphical component library. The appearance manager receives the request for rendering services and assigns appearance characteristics to the graphical component based upon the provided parameters. A method of rendering graphical components on the display of a computer system is also provided that includes rendering the requested graphical component according to the appearance characteristics assigned by the appearance manager. A method is also provided for communicating between a graphical component library and an appearance manager that includes issuing a request, that includes component defining parameters, for information about the defined component. The appearance manager receives the request for information and provides the requested information to the graphical component library based upon the provided parameters.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06873337",
	"publication_date": "2005-03-29",
	"application_number": "09670791",
	"application_date": "2000-09-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application programming interface to the simple object access protocol",
	"summary": "",
	"abstract": "Methods and systems for providing an application programming interface (API) to the Simple Object Access Protocol (SOAP) are described. The API provides mechanisms for creating all parts of SOAP request messages, for sending the created messages over HTTP to a remote server, and, if the request is successful, for retrieving the response from the remote server, or, in the case of failure, for accessing whatever error information is available. The information passed through the API can be in the form of parameters which allows both the SOAP protocol and the applications that use it to change without requiring changes to the API itself.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06904600",
	"publication_date": "2005-06-07",
	"application_number": "09606923",
	"application_date": "2000-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Applying multiple texture maps to objects in three-dimensional imaging processes",
	"summary": "",
	"abstract": "Systems and methods for providing multi-pass rendering of three-dimensional objects. A rendering pipeline that includes (N) physical texture units and one or more associated buffers emulates a rendering pipeline containing more texture units (M) than are physically present (N). Multiple rendering passes are performed for each pixel. During each texture pass only N sets of texture coordinates are passed to the texture units. The number of passes required through the pipeline to emulate M texture units is M/N, rounded up to the next integer. The N texture units of the rendering pipeline perform look-ups on a given pass for the corresponding N texture maps. The texture values obtained during the texture passes are blended by texture blenders to provide composite texture values. In successive passes, the buffers are used for temporary data and the most current composite texture values. The process is repeated until all desired texture maps are applied.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06975327",
	"publication_date": "2005-12-13",
	"application_number": "10770054",
	"application_date": "2004-02-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Asynchronous programming environment",
	"summary": "",
	"abstract": "An asynchronous programming environment is disclosed. In one embodiment, the environment comprises a dynamic object storage scheme, a dynamic dispatch scheme, and an object recognition scheme. The dynamic object storage scheme stores a plurality of objects. The dynamic dispatch scheme is presence one of a certain number objects. The object recognition scheme describes the plurality of objects.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06868541",
	"publication_date": "2005-03-15",
	"application_number": "09218060",
	"application_date": "1998-12-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic database statistics creation",
	"summary": "",
	"abstract": "A system for automatic statistics creation comprises a query optimizer which automatically generates statistics derived from data in a database and selects an executable procedure from a plurality of procedures that operate on data in a database using the automatically generated statistics. A counter is maintained of updates made to each statistic that has been automatically generated. If the counter breaches a threshold, the automatically generated statistic is removed from the database.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06847978",
	"publication_date": "2005-01-25",
	"application_number": "10034806",
	"application_date": "2001-12-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Common visual and functional architecture for presenting and controlling arbitrary telephone line features",
	"summary": "",
	"abstract": "A user interface for screen phones monitors telephone line state information and displays user interface controls and telephone line status information dependent on the telephone line state. The user interface includes a display element referred to as a call slip that expands and collapses in response to changes in telephone line state and user input. The call slip updates the information that it displays based on telephone line state changes and information communicated from one or more telephony monitoring applications. The call slip displays user interface controls representing tasks that are dependent on information derived from a telephone call, such as caller ID information. The software used to control the display of call slips and to monitor telephone line state is part of a software platform that may be customized for a particular device or application. For example, an implementer may select default display elements and monitoring application programs from the platform and add custom display elements that communicate with the default programs via their programming interfaces.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06975712",
	"publication_date": "2005-12-13",
	"application_number": "10143344",
	"application_date": "2002-05-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Configurations for binding software assemblies to application programs",
	"summary": "",
	"abstract": "A method, system and infrastructure that allow an application to run with specified versions of assemblies bound thereto, while allowing the application author, assembly publisher and/or an administrator to change the originally-specified version as desired. Each assembly may exist and run side-by-side on the system with other versions of the same assembly being used by other applications. An application manifest specifies any desired assembly versions, which may be redirected to another version (overridden) by an application configuration. A publisher configuration provided by an assembly publisher can similarly override the specified version. Lastly, an administrator configuration is capable of overriding other configuration versioning information. A table built from the manifest and any configuration redirection may be accessed during execution to quickly locate the appropriate version. The various configuration data structures themselves may be wrapped as assemblies, thereby enabling versioning of configurations.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06871344",
	"publication_date": "2005-03-22",
	"application_number": "09842278",
	"application_date": "2001-04-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Context free grammar engine for speech recognition system",
	"summary": "",
	"abstract": "The present invention includes a context-free grammar (CFG) engine which communicates through an exposed interface with a speech recognition engine. The context-free grammar engine, in one illustrative embodiment, handles loading and unloading of grammars, as well as maintaining a desired activation state of the grammars which are loaded. Further, the CFG engine represents all loaded grammars, and their corresponding activation states, as a single grammar to the speech recognition engine.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06957184",
	"publication_date": "2005-10-18",
	"application_number": "09751613",
	"application_date": "2000-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Context-sensitive options panel",
	"summary": "",
	"abstract": "The present invention provides a system and method for integrating convention television viewing with Internet-related activities. A viewer accesses both conventional television features and Internet-related features from a single, familiar options panel. The options panel provides the user with a set of buttons that invoke features of both the television mode and of Internet mode. The options panel is selectively accessible at any time while either accessing the Internet or while viewing conventional television programming, the providing the user with a unified viewing experience.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06859937",
	"publication_date": "2005-02-22",
	"application_number": "09464737",
	"application_date": "1999-12-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dual mode device and method for generating vector cross products or dot products",
	"summary": "",
	"abstract": "A dual mode device and method is provided for generating cross product or dot product from a pair of vectors. The dual mode device generates a cross product or a dot product from a first vector and a second vector. The first vector has a first set of components and the second vector has a second set of components. The device includes a dual mode controller and a dual mode unit. The dual mode controller receives the first and second vectors and is configured to select vector components for evaluating a cross product component or a dot product in response to a first signal. The first signal indicates whether to generate a cross product component or a dot product. The dual mode unit is coupled to receive the selected vector components and generates the cross product component or the dot product in response to the first signal.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06891538",
	"publication_date": "2005-05-10",
	"application_number": "09348885",
	"application_date": "1999-07-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic classification of sections of software",
	"summary": "",
	"abstract": "Dynamic classification of sections of software using a profile-based optimization system optimizes management of the sections of software. Software executes under expected usage conditions. After execution, a set of usage profiles describes the dynamic properties of sections of the software. Each usage profile includes information identifying a section of software. Each usage profile maps to an outcome meant to optimize management of the sections of the software during later execution. During such later execution, a usage background describes the dynamic properties of a section of the software. The usage background includes information identifying the section of software. By matching the usage background to a usage profile in the set of usage profiles, the section is dynamically classified during later execution. Based on this dynamic classification, the section maps to the outcome meant to optimize management of the sections of software.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06957422",
	"publication_date": "2005-10-18",
	"application_number": "10013891",
	"application_date": "2001-12-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic self-configuration for ad hoc peer networking using mark-up language formated description messages",
	"summary": "",
	"abstract": "A device control model provides an integrated set of addressing, naming, discovery and description processes that enables automatic, dynamic and ad-hoc self-setup by devices to interoperate with other devices on a network. This permits a computing device when introduced into a network to automatically configure so as to connect and interact with other computing devices available on the network, without a user installation experience and without downloading driver software or persisting a configuration setup for connecting and interacting with such other computing devices. Upon completing interaction with such other devices, the computing device automatically releases the setup for such other devices so as to avoid persistent device configurations that might create a configuration maintenance and management burden.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06892230",
	"publication_date": "2005-05-10",
	"application_number": "09496318",
	"application_date": "2000-02-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamically configuring resources for cycle translation in a computer system",
	"summary": "",
	"abstract": "A method and system that enables customized computer machines to be more readily developed by removing the function of resource translation out of the hardware abstraction layer (HAL). A machine manufacturer describes a machine in firmware, such as accordance with the Advanced Configuration and Power Interface (ACPI) specification, using ACPI machine language (AML). Operating system components such as a Plug and Play (PnP) manager in the kernel, in conjunction with an ACPI driver, interpret the description information and locate resources (bus bridges) for which translation is needed. For any arbitrary bus architecture or CPU to PCI bridge implementation that can be expressed, e.g., in ACPI firmware, the invention provides a translator external to the HAL. In one implementation, a PnP driver communicates with the ACPI driver and various drivers in driver stacks via I/O request packets (IRPs) to look for resource translators. The ACPI driver analyzes the machine description and returns a translator if found for such a resource. The resource is then configured to output cycles based on the translator.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06970957",
	"publication_date": "2005-11-29",
	"application_number": "09558469",
	"application_date": "2000-04-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Encoding conversion fallback",
	"summary": "",
	"abstract": "A system and method for converting a source data sequence to a target encoding is disclosed. A fallback technique, specifiable by a user program component, is applied to data in the source data sequence that cannot be mapped to the target encoding. A particular embodiment involves methods for encoding a Unicode string as a sequence of bytes in a target encoding, and decoded the encoded bytes back to Unicode.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06861963",
	"publication_date": "2005-03-01",
	"application_number": "10703813",
	"application_date": "2003-11-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enhancing application performance in dynamic networks",
	"summary": "",
	"abstract": "A method and device are disclosed that enable a user to experience continuity by alleviating blocking of an application by a slow or failure-prone connection. The method includes dissociating the user interface from an application-client managing communications with a server over the dynamic connection. Furthermore, the application-client caches user input for later actions using an asynchronous mechanism to enable the user to work with little interruption. Furthermore, adjustable frame sizes based on the error rate and bandwidth-delay increase throughput. Data retransmission is reduced by maintaining state information for the client and the server so that a disrupted transaction is resumed at or close to the point of disruption and in response to media sense-events. Consequently, establishing, tearing down and adjusting network connections in response to events such as: high error rates, increasing latency, availability of better alternative connections, or loss of a connection do not interrupt the user's experience.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06862628",
	"publication_date": "2005-03-01",
	"application_number": "09755770",
	"application_date": "2001-01-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Extensible architecture for project-development systems",
	"summary": "",
	"abstract": "A software development system or versifying system has a collection of modules for performing individual development functions such as document editing, keyword processing, and private-copy management. Each module has an interface compatible with that of the others, so that modules can be added to or substituted for the original modules, if the new modules conform to the interface. The architecture of this system supports the performance of development actions such as document merging and keyword expansion at any location within the system. The system software interfaces to a keyword processing subsystem comprising a plurality of expanders for processing different sets of keywords and a keyword broker for selecting among the expanders, whereby the client can access resources of the software development service providers for development services identified using the keywords.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06915507",
	"publication_date": "2005-07-05",
	"application_number": "09717537",
	"application_date": "2000-11-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Extensible system recovery architecture",
	"summary": "",
	"abstract": "A system recovery method and framework for backing up and restoring a system that cannot reboot. The framework defines a common process, environment, and syntax, whereby backup programs integrate with this framework by collecting and writing appropriate information to be used during system recovery in the proper format. The format is a System Information File, a text file that specifies the hard disk state of the system and the location of key partitions where key components of the operating system are located. The file also includes instructions for specifying programs to launch during the restore phase, and any commands that need to be run in error handling cases. The file also includes or references any additional drivers or files to copy to assist in the restore process. A framework for restoring is also provided, and includes reading the file to restore the disk partition state, creating a common environment, and configuring (initializing) the common environment. When the environment is configured, the programs specified in the file are run to restore the remainder of the system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06851073",
	"publication_date": "2005-02-01",
	"application_number": "09361641",
	"application_date": "1999-07-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Facilitating annotation creation and notification via electronic mail",
	"summary": "",
	"abstract": "A network system includes a client computer that can present multimedia content to a user and an annotation server that can transmit, to the client computer, annotations for the multimedia content. Users can be presented with annotations generated by other users and can create their own annotations that can be viewed by others. Users can be notified of new annotations by an electronic mail (email) message, can create new annotations by email messages, and can easily access a temporal segment of multimedia content corresponding to a new annotation based on information in email messages.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06917965",
	"publication_date": "2005-07-12",
	"application_number": "09396701",
	"application_date": "1999-09-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "File protection service for a computer system",
	"summary": "",
	"abstract": "A method and system that protects selected system and other files, by preventing changes to those files. In an asynchronous alternative, the change is prevented by copying back the original file when a protected file is changed, as known via an asynchronous notification. In an alternative synchronous embodiment, the change to the file is prevented from occurring. In the asynchronous notification alternative, a directory change notification notifies a file protection service whenever a file that has possibly changed is closed, providing the file identity as part of the notification. The file protection service determines from the file identify whether the file has been deemed protected. If protected, the file protection service prevents any actual change by verifying whether the protected file changed, such as by analyzing the file's contents against known valid contents. If not valid, the file protection service restores a saved copy that is itself verified.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06971018",
	"publication_date": "2005-11-29",
	"application_number": "09560788",
	"application_date": "2000-04-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generic parameterization for a scene graph",
	"summary": "",
	"abstract": "A parameterized scene graph provides mutable (animated) values and parameterized graph containers such that an application program or the like can selectively change certain aspects of the scene graph description while leaving other aspects intact, and also reuse portions of the scene graph with different parameters. To this end, mutable values are provided, which provide the higher level code with hooks into the scene graph enabling the scene description to be changed. The mutable values may be varied over time to provide animation. A parameterized graph container is also described that enables a scene graph portion to be templatized for reuse throughout a scene in a generic way. In this manner, a single parameterized graph container may be efficiently reused in a scene graph, with different values for its parameters.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06919891",
	"publication_date": "2005-07-19",
	"application_number": "10184796",
	"application_date": "2002-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hooking of replacement and augmented API functions",
	"summary": "",
	"abstract": "Hooking replacement and augmented API functions is disclosed. In one embodiment, an alternative implementation of one or more API functions is hooked into the operating system through utilization of a replacement API table. The functions that have been replaced, augmented, or otherwise modified have entries in the table pointing to their new implementation. The entries for functions that have not been change continue to point to their existing implementation. A bit array is also disclosed to track desired messages, as compared to undesired messages, where each bit of the array corresponds to a type of message. The table can be variably sized, and can support nested and re-entrant calls.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06874149",
	"publication_date": "2005-03-29",
	"application_number": "09605272",
	"application_date": "2000-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "In-situ digital inking for applications",
	"summary": "",
	"abstract": "A digital ink environment is provided for non-native ink application programs to create independent ink services for sharing between different application programs and transmission. The digital ink environment is provided for interacting with embedded or linked ink words or other ink data in a compound ink document. The user is provided with the freedom to input digital ink so they can write anywhere in the ink environment, in any orientation, and using any desired stroke size provided by the ink environment. The ink environment is provided in an activated state for in-situ user interaction and manipulation in a computing environment, for example a pen-based environment.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06965384",
	"publication_date": "2005-11-15",
	"application_number": "11023370",
	"application_date": "2004-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Including the category of environmental noise when processing speech signals",
	"summary": "",
	"abstract": "A method and apparatus are provided for identifying a noise environment for a frame of an input signal based on at least one feature for that frame. Under one embodiment, the noise environment is identified by determining the probability of each of a set of possible noise environments. For some embodiments, the probabilities of the noise environments for past frames are included in the identification of an environment for a current frame. In one particular embodiment, a count is generated for each environment that indicates the number of past frames for which the environment was the most probable environment. The environment with the highest count is then selected as the environment for the current frame.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06959276",
	"publication_date": "2005-10-25",
	"application_number": "09965239",
	"application_date": "2001-09-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information pointers",
	"summary": "",
	"abstract": "A system supports the use of information pointers. The information pointers provide audio and/or visual information about objects to which the cursors point. For instance, an information cursor may provide output specifying the name of an object to which the cursor points. In addition to information about the object pointed to by the cursor, information windows provide information about the user's interaction with the object. For example, u201cDeleting Source File.u201d Information windows may contain information pertaining to a pair of objects, such as the source and target object in a drag and drop operation, or to a collection of objects.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06948126",
	"publication_date": "2005-09-20",
	"application_number": "10348299",
	"application_date": "2003-01-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Intelligent trust management method and system",
	"summary": "",
	"abstract": "Intelligent Trust Management provides a centralized security facility that gives system components a flexible mechanism for implementing security policies. System components such as applications create a request describing an action that needs to be checked against an appropriate security policy. The request is given to a trust system that determines which policy object applies to the request, and may pass request arguments to the policy. The policy objects include executable code that uses any arguments along with dynamically obtained variable information to make a decision. The decision is returned to the system component, which then operates accordingly. Policy objects may maintain state and interface with the user independent of the system component in order to obtain information to make their decisions. Policy objects may call other policy objects and/or mathematically combine the results of other policy objects to make a decision.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06965999",
	"publication_date": "2005-11-15",
	"application_number": "09071594",
	"application_date": "1998-05-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Local queue creation security",
	"summary": "",
	"abstract": "Local queue creation security is disclosed. In one embodiment, for a message transaction system being implemented in conjunction with an operating system provide user-level security only, local machine- or local-level security is provided for by a service running on a client. In one embodiment, a method includes sending a first request to create a local queue, by an application of a client from a function of the client to a server. If the server determines that the user under which the application is running has permission to create local queues, the local queue is created. Otherwise, a second request to create the local queue is sent from the function to a service having permission to create local queues. If the service determines that the second request originated locally, then the service calls the server to create the local queue.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06973498",
	"publication_date": "2005-12-06",
	"application_number": "09533468",
	"application_date": "2000-03-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Lock-free cache management",
	"summary": "",
	"abstract": "A data structure and method implemented in accordance with the invention enable reading a cache to get a type information corresponding to an address of interest more reliably than with volatile read operations and faster than scanning tables or walking along linked lists. Reliably reading the cache enabled by the invention does not require locks, although, the type information and the address together require more bits than those present in one machine word.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06904456",
	"publication_date": "2005-06-07",
	"application_number": "09789280",
	"application_date": "2001-02-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Manager component for managing input from existing serial devices and added serial and non-serial devices in a similar manner",
	"summary": "",
	"abstract": "A manager component for managing input from legacy and non-legacy devices in a similar manner is disclosed. An inventive manager component receives input from both non-legacy input drivers for non-legacy input devices, and legacy input drivers for legacy input devices. The manager component provides the input to application programs that desirably have previously registered to receive input from one or more types of input devices. The application programs receive this input without directly communicating with the drivers.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06895589",
	"publication_date": "2005-05-17",
	"application_number": "09681782",
	"application_date": "2001-06-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Measuring network jitter on application packet flows",
	"summary": "",
	"abstract": "A method is described for measuring the jitter experienced by an application's network traffic. The measurement is based solely on packets sent or received by the application itself. The method does not alter the application's packets, in particular, it does not add a timestamp to the packets before they are sent. Instead, it creates a table that stores unique identifiers of the application's packets along with the time the packets are sent. On the receiving computer, a similar table is created that stores the unique packet identifiers along with the time the packets are received. Records of sent packets are associated with records of received packets so that the time a packet was sent can be compared to the time the same packet was received. The resulting data are processed to calculate network jitter and packet loss ratios.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06928473",
	"publication_date": "2005-08-09",
	"application_number": "09670157",
	"application_date": "2000-09-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for adapting and hosting legacy user interface controls",
	"summary": "",
	"abstract": "A method and apparatus for adapting and hosting legacy user interface controls is provided. Legacy user interface controls are exposed within a new window manager as native user interface objects. A bridge between a hosted legacy user interface control and the legacy window manager intercepts messages intended for the hosted user interface control. The messages are filtered to determine if they should be passed to the new window manager. If a message is to be forwarded, the message is forwarded to a root Visual Gadget in the new window manager. The message is processed and routed down the window tree to an adapter control for hosting the legacy user interface control. The adapter control processes the message and routes the message to any listener objects attached to the adapter. If the message has not been completely handled, the message is u201cbubbledu201d up the window tree to the parent objects of the adapter control for additional processing.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06961945",
	"publication_date": "2005-11-01",
	"application_number": "09885366",
	"application_date": "2001-06-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for emulating ethernet functionality over a serial bus",
	"summary": "",
	"abstract": "The invention allows applications to transparently use a bus, such as the IEEE-1394 serial bus, as if it were an Ethernet (IEEE 802.3). In a conventional Ethernet, each node is assigned a unique 6-byte MAC address in order to receive frames addressed to it over the LAN. According to the invention, IEEE-1394 bus node identifiers are mapped to Ethernet MAC addresses using for example a digital signature algorithm. Ethernet frames are then u201cwrappedu201d into 1394 bus packets and addressed to the destination node using the hashed address. The receiver unwraps the 1394 packet and restores the Ethernet frame to its original form. An optimum packet size for transmission of Ethernet packets over the 1394 bus is selected with reference to speed topology maps in the 1394 bus nodes, and this optimum size is transmitted to bus nodes. This packet size is reported to TCP to specify the packet size, and all packets larger than that size are fragmented and reassembled at the receiving node. The protocol works transparently across networks that are linked via bridges.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06977939",
	"publication_date": "2005-12-20",
	"application_number": "09769438",
	"application_date": "2001-01-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for generating and displaying N-best alternatives in a speech recognition system",
	"summary": "",
	"abstract": "The present invention is directed to a method and apparatus for generating alternatives to words indicative of recognized speech. A reference path of recognized words is generated, based upon input speech data. An operator selection input is received and is indicative of a selected portion of the recognized speech, for which alternatives are to be generated. Boundary conditions for alternatives to be generated are calculated based upon bounds of a reference subpath corresponding to the selected portion of the recognized speech. Alternate subpaths satisfying the boundary conditions are constructed from a hypothesis store which corresponds to the input speech data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06856956",
	"publication_date": "2005-02-15",
	"application_number": "09804117",
	"application_date": "2001-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for high-performance rendering and hit-testing of a window tree",
	"summary": "",
	"abstract": "A method and apparatus for high-performance rendering and hit-testing of a window tree is provided. A window tree may be rendered using an application programming interface provided by the present invention. The application programming interface provides support for world-transforms, enabling entire sub-trees of the window tree to be rotated and scaled during rendering. In order to quickly render and hit-test the transformed nodes of the window tree, a stack-based implementation of the u201cpainter's algorithmu201d is utilized to achieve fast rendering. By storing all state information on a stack regarding each node in the window tree and building new data structures containing rendering information for each node and its children, any portion of the sub tree may be rendered on demand.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06954218",
	"publication_date": "2005-10-11",
	"application_number": "09885350",
	"application_date": "2001-06-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for managing input focus and z-order",
	"summary": "",
	"abstract": "An improved system for managing user inputs and z-order in a graphic user interface (GUI) environment is disclosed. A GUI element may include a plurality of keys corresponding to keys on a typical keyboard, and may serve as a replacement for the keyboard. The system permits an application having an input focus to retain the input focus while inputs are received in the GUI element, and even transient user interface elements (e.g., menus) will remain displayed in those applications after the user inputs are entered. Input pen and mouse events may first be forwarded to the input area application, which may remove the events from the normal circulation, preventing other applications from learning of the events, and then post those events to the input panel application separately.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06928619",
	"publication_date": "2005-08-09",
	"application_number": "10141916",
	"application_date": "2002-05-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing and integrating high-performance message queues in a user interface environment",
	"summary": "",
	"abstract": "A method and apparatus is provided for providing and integrating high-performance message queues. u201cContextsu201d are provided that allow independent worlds to be created and execute in parallel. A context is created with one or more threads. Each object is created with context affinity, allowing any thread inside the context to modify the object or process pending messages. Threads in a different context are unable to modify the object or process pending messages for that context. To help achieve scalability and context affinity, both global and thread-local data is often moved into the context. Remaining global data has independent locks, providing synchronized access for multiple contexts. Each context has multiple message queues to create a priority queue. There are default queues for sent messages and posted messages, carry-overs from legacy window managers, with the ability to add new queues on demand. A queue bridge is also provided for actually processing the messages.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06954933",
	"publication_date": "2005-10-11",
	"application_number": "09892951",
	"application_date": "2001-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing recent categories on a hand-held device",
	"summary": "",
	"abstract": "The present invention adds a new category of contacts and tasks to hand-held devices. This new category provides a list of the most recent contacts or tasks that the user has accessed. Under most embodiments, the contacts and tasks shown in the RECENT list may be manipulated by the user in the same manner in which contacts and tasks are manipulated in other lists on the hand-held device. Thus, the user is shown the actual contacts or tasks entries and not just a link to those entries. Under most embodiments, the user is able to display a list of recent contacts and tasks by accessing a u201cRECENTu201d entry in a categories list provided on many hand-held devices.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06901559",
	"publication_date": "2005-05-31",
	"application_number": "09559695",
	"application_date": "2000-04-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for reducing latency in speech-based applications",
	"summary": "",
	"abstract": "A speech recognition interface and computer-readable medium build a grammar for speech recognition that reduces latency in speech-based applications. The interface and medium receive instructions to add a new phrase and semantic information to a grammar. The new phrase is combined with at least one other phrase in the grammar to form a composite grammar structure. The semantic information is then associated with a single word or transition in the grammar structure by selecting the first possible word or transition that semantically differentiates the new phrase from all other phrases in the grammar structure. By placing the semantic information in this position, the semantic information is placed as far forward in the grammar as possible without introducing semantic ambiguity into the grammar structure.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06961694",
	"publication_date": "2005-11-01",
	"application_number": "09767093",
	"application_date": "2001-01-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for speech synthesis without prosody modification",
	"summary": "",
	"abstract": "A speech synthesizer is provided that concatenates stored samples of speech units without modifying the prosody of the samples. The present invention is able to achieve a high level of naturalness in synthesized speech with a carefully designed training speech corpus by storing samples based on the prosodic and phonetic context in which they occur. In particular, some embodiments of the present invention limit the training text to those sentences that will produce the most frequent sets of prosodic contexts for each speech unit. Further embodiments of the present invention also provide a multi-tier selection mechanism for selecting a set of samples that will produce the most natural sounding speech.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06978239",
	"publication_date": "2005-12-20",
	"application_number": "09850527",
	"application_date": "2001-05-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for transforming and rendering graphical curves",
	"summary": "",
	"abstract": "The present invention provides a method and apparatus for rendering images on a computer screen. Under the invention, a portion of a base image is described using a path. The path is then transformed using a non-affine transform to produce a transformed path. The transformed path is then rendered onto the computer screen. Another aspect of the present invention is a method and apparatus for rendering curves of any order and any dimension. In particular, the present invention provides a means for converting a function of any order and any dimension that describes one segment of a curve into a function that describes a different sized segment or an adjoining segment.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06903742",
	"publication_date": "2005-06-07",
	"application_number": "09452658",
	"application_date": "1999-12-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for accessing operating system resources",
	"summary": "",
	"abstract": "An operating system includes APIs developed in part to support recent innovations in computer hardware and in part to provide enhanced services to application programs. Among their other features, these APIs provide access to operating system functionality in a manner that is comprehensive, efficient, usable, extendible and, in some cases, reusable.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06961944",
	"publication_date": "2005-11-01",
	"application_number": "10975695",
	"application_date": "2004-10-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for accurately calculating latency variation on an end-to-end path in a network",
	"summary": "",
	"abstract": "A high-resolution, per-packet measurement tool for analyzing a computer network that operates by sending a predetermined number of packets from a sender machine to a receiver machine with measurement information inserted into the packet. The system kernel at the sending machine stamps a sequence number and the sender's local time into the data section of each packet. When packets arrive at the receiver machine, they are similarly stamped by the receiving machine's kernel with the receiving machine's local time. The maintained packet information serves as the basis for latency analysis. For example, one set of latencies can be obtained with QoS mechanisms turned on, and another set with QoS mechanisms turned off, whereby the benefits of the QoS mechanisms can be accurately determined. To analyze the latencies, the present invention normalizes each time and each latency into relative latency information. Clock skew and timer jumps may be handled as part of the normalization.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06975656",
	"publication_date": "2005-12-13",
	"application_number": "09537995",
	"application_date": "2000-03-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for consistent cluster operational data in a server cluster using a quorum of replicas",
	"summary": "",
	"abstract": "A method and system for increasing server cluster availability by requiring at a minimum only one node and a quorum replica set of replica members to form and operate a cluster. Replica members, independent from the nodes, maintain cluster operational data. A cluster operates when one node possesses a majority of replica members, which ensures that any new or surviving cluster includes consistent cluster operational data via at least one replica member from the immediately prior cluster. Arbitration provides exclusive ownership by one node of the replica members, including at cluster formation, and when the owning node fails. Arbitration uses a fast mutual exclusion algorithm and a reservation mechanism to challenge for and defend the exclusive reservation of each member. A quorum replica set algorithm brings members online and offline with data consistency, including updating unreconciled replica members, and ensures consistent read and update operations.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06938084",
	"publication_date": "2005-08-30",
	"application_number": "09895810",
	"application_date": "2001-07-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for debugging a program",
	"summary": "",
	"abstract": "In a method and system for debugging a program, a debugging module is loaded into a normal thread of execution of the program. A user may then send commands to the debugger module from a command console module operating in a safe separate process. The debugger module receives the commands and converts them into function calls to objects that are accessible by the program. This allows the user to interact manually with the objects and achieve substantially the same responses from the objects as the program itself would have obtained during its normal execution. Thus the user can effectively debug the program without having to know the internal structure of any of its constituent objects.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06915509",
	"publication_date": "2005-07-05",
	"application_number": "09606973",
	"application_date": "2000-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for executing SIMD instructions using graphics technology",
	"summary": "",
	"abstract": "A method and system are provided for executing SIMD instructions using graphics technology. A SIMD instruction is received and interpreted. The specific data needed for the SIMD instruction is identified. Texel addresses where the specific data are stored are recalled and frame buffer pixels to be used to support the SIMD instruction are selected. In an alternative embodiment, these texel addresses are stored in frame buffer pixel channels such that the pixel containing a particular address will be the pixel to hold the data stored at that address for the SIMD operation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06943798",
	"publication_date": "2005-09-13",
	"application_number": "09638907",
	"application_date": "2000-08-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for frame alignment and unsupervised adaptation of acoustic models",
	"summary": "",
	"abstract": "An unsupervised adaptation method and apparatus are provided that reduce the storage and time requirements associated with adaptation. Under the invention, utterances are converted into feature vectors, which are decoded to produce a transcript and alignment unit boundaries for the utterance. Individual alignment units and the feature vectors associated with those alignment units are then provided to an alignment function, which aligns the feature vectors with the states of each alignment unit. Because the alignment is performed within alignment unit boundaries, fewer feature vectors are used and the time for alignment is reduced. After alignment, the feature vector dimensions aligned to a state are added to dimension sums that are kept for that state. After all the states in an utterance have had their sums updated, the speech signal and the alignment units are deleted. Once sufficient frames of data have been received to perform adaptive training, the acoustic model is adapted.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06917918",
	"publication_date": "2005-07-12",
	"application_number": "09746583",
	"application_date": "2000-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for maintaining connections between surfaces and objects in a graphics display system",
	"summary": "",
	"abstract": "A method and system are provided for controlling the algorithmic elements in 3D graphics systems via an improved 3D graphics API and for managing computing resources utilized in connection with the maintenance of connections between surfaces and objects. When multiple applications are running simultaneously, it is possible that the demand for overall computing resources may exceed supply; and it is possible that a connection between a surface and object may be lost for one or more applications. In accordance with the present invention, a check for the persistence of a connection between surface space and object space is made substantially at the time of a present function call, and thus multiple redundant checks are avoided. In one embodiment, checks made incident to function calls other than a present function call are spoofed or bypassed in order to avoid previous inefficient use of computing resources.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06874150",
	"publication_date": "2005-03-29",
	"application_number": "09796579",
	"application_date": "2001-03-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for managing graphics objects in a graphics display system",
	"summary": "",
	"abstract": "A method and system for controlling the algorithmic elements in 3D graphics systems via an improved 3D graphics API is provided. In one aspect, in a 3D graphics system having privatized formats with privatized drivers used to increase the efficiency of display, existing problems are eliminated that are associated with multiple redundant copies of the publicly formatted graphics data made in host system memory pursuant to various graphics operations e.g., lock and unlock operations. The ability to make a system copy of publicly formatted data is exposed to the developer, eliminating the creation of unnecessary, and redundant copies. Efficient switching between the privatized and public format remains hidden from the developers so that applications execute efficiently while removing consideration thereof from the developers. Thus, developers are free to consider other tasks. In the event that a developer wishes to make a copy of the data, the data is copied pursuant to an operation that the developer calls and over which the developer has control, ensuring that multiple redundant copies of the graphics data are not made in host system memory.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06954205",
	"publication_date": "2005-10-11",
	"application_number": "10980379",
	"application_date": "2004-11-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for packing and unpacking web pages",
	"summary": "",
	"abstract": "A method for packing the multiple files and folders of an HTML Web page into a single MHTML file. The packing process begins by determining whether the user has write privileges to the current location. If not, the user is prompted to save the MHTML file in an alternate location (e.g., the desktop). If the user has write privileges to the current location, the process opens the main HTML Web page and searches for supporting resource files. In short, the supporting resource files are identified by searching for known, common resource file references in the main HTML source file. When the resource file references have been identified, the process packages the main HTML document and all of the supporting resource files into a single file in MHTML format. The unpacking process opens the MHTML file and identifies the main HTML document portion, as well as the portions of the MHTML file containing the supporting resource files. Once all of the components have been identified, the Web page's folder structure is determined by referring to the content location field contained in each separate portion of the MHTML file. The individual MHTML components are converted into files and the main HTML file is stored. The resource files are stored in locations relative to the main HTML file, as identified by the unpacked folder structure.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06886132",
	"publication_date": "2005-04-26",
	"application_number": "09587756",
	"application_date": "2000-06-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for pluggable terminal with TAPI",
	"summary": "",
	"abstract": "Systems, methods, and data structures for pluggable terminals are provided. Pluggable terminals are part of client and server TAPI communications systems. Pluggable terminal allow third parties to provide their own media processing devices and implement control methods for those devices. Methods for plugging in a pluggable terminal and conducting a communications session using the new pluggable terminal are described. A data structure for a pluggable terminal type has a wrapper around a media processing device control method. A data structure for registering a pluggable terminal has a terminal class name, a unique identifier, and a set of media types supported by the pluggable terminal. A data structure for a terminal base class has an interface for plugging in a pluggable terminal and another interface for a TAPI application component.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06904485",
	"publication_date": "2005-06-07",
	"application_number": "09649510",
	"application_date": "2000-08-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for providing service listings in electronic yellow pages",
	"summary": "",
	"abstract": "A method and system for allowing a regional service merchant that is outside of a given geographical boundary, but services inside the geographical boundary, to be included in a result set of a search directed to a location inside the geographical boundary. Text and/or glyphs are returned along with the regional service merchant's business listing so as to explain to a user why a business not physically residing in the search area has been included in the result set. An application programming interface ensures that, if a business is listed as a regional service merchant, then the text and/or glyph is stored in association with the business listing.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06973448",
	"publication_date": "2005-12-06",
	"application_number": "09651406",
	"application_date": "2000-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for updating software with smaller patch files",
	"summary": "",
	"abstract": "Rather than comparing an old file with a new file to generate a set of patching instructions, and then compressing the patching instructions to generate a compact patch file for transmission to a user, a patch file is generated in a single operation. A compressor is pre-initialized in accordance with the old version of the file (e.g. in an LZ77 compressor, the history window is pre-loaded with the file). The pre-initialized compressor then compresses the new file, producing a patch file from which the new file can be generated. At the user's computer, a parallel process is performed, with the user's copy of the old file being used to pre-initialize a decompressor to which the patch file is then input. The output of the decompressor is the new file. The patch files generated and used in these processes are of significantly reduced size when compared to the prior art. Variations between copies of the old file as installed on different computers are also addressed, so that a single patch file can be applied irrespective of such variations. By so doing, the need for a multi-version patch file to handle such installation differences is eliminated, further reducing the size of the patch file when compared with prior art techniques. Such variations are addressed by u201cnormalizingu201d the old file prior to application of the patch file. A temporary copy of the old file is typically made, and locations within the file at which the data may be unpredictable due to idiosyncrasies of the file's installation are changed to known or predictable values.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06938109",
	"publication_date": "2005-08-30",
	"application_number": "09561447",
	"application_date": "2000-04-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for adding phonetic descriptions to a speech recognition lexicon",
	"summary": "",
	"abstract": "A method and computer-readable medium convert the text of a word and a user's pronunciation of the word into a phonetic description to be added to a speech recognition lexicon. Initially, two possible phonetic descriptions are generated. One phonetic description is formed from the text of the word. The other phonetic description is formed by decoding a speech signal representing the user's pronunciation of the word. Both phonetic descriptions are scored based on their correspondence to the user's pronunciation. The phonetic description with the highest score is then selected for entry in the speech recognition lexicon.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06973427",
	"publication_date": "2005-12-06",
	"application_number": "09748453",
	"application_date": "2000-12-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for continuously processing electronic messages throughout a transition between online and offline states",
	"summary": "",
	"abstract": "An electronic mail (e-mail) application program includes a configurable, e-mail messaging feature for automatically responding to a portable computer's transition between online and offline states. The e-mail application program determines the state of a connection between a portable computer and an electronic mail server and processes electronic messages in accordance with the appropriate state. The portable computer's transition between an online state and an offline state triggers a user-configurable response, designed to permit the continuation of electronic mail message processing in a manner that accommodates the state change. The e-mail application program responds to such a transition by automatically switching between online and offline modes of operation. The e-mail application program can also respond to such a transition by establishing a secondary connection to a mail server when a primary connection is rendered inoperative. A user may configure various aspects of the invention to respond to a transition in a way that accommodates the user's hardware and/or software requirements.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06954782",
	"publication_date": "2005-10-11",
	"application_number": "10223831",
	"application_date": "2002-08-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for providing feedback on windows, messages and dialog boxes",
	"summary": "",
	"abstract": "A method to globally place a feedback button in every dialog box, message box, and top-level window in every application and message box in an operating system to provide a user with the opportunity to provide feedback for the dialog box, message box, or top-level window. The system checks a setting to determine if and what type of box/window that a feedback button will be placed and if the setting is enabled, a feedback button with customizable text will be placed on the box/window when the box/window is displayed if the type of window being displayed matches the type specified as having a feedback button. The system loads a program file that provides instructions to the user on how to provide feedback to a developer or system administrator when the user selects the feedback button. Once the user enters feedback, this feedback is sent to wherever the program file designated the information to be sent. Information about the box/window being displayed, including information about how the application got to the point of displaying the box/window, is sent along with the feedback. The user may also be sent to a website to allow the user to see what other people have reported about the box/window.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06874125",
	"publication_date": "2005-03-29",
	"application_number": "09563523",
	"application_date": "2000-05-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for segmenting non-segmented text using syntactic parse",
	"summary": "",
	"abstract": "Embodiments of the present invention provide a method and apparatus for segmenting text by providing orthographic and inflectional variations to a syntactic parser. Under the present invention, possible segments are first identified in the sequence of characters. At least two of the identified segments overlap each other. For at least one of the segments, an alternative sequence of characters is identified. In some cases, this alternative sequence is formed through inflectional morphology, which identifies a different lexical form for a word identified by the segment. In some cases, the alternative sequence represents an orthographic variant of a word identified by the segment. The identified segments and the alternative segments are then passed to a syntactic analyzer, which produces one or more syntactic parses. The segments found in the resulting parses represent the segmentation of the input sequence of characters.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06968308",
	"publication_date": "2005-11-22",
	"application_number": "09704039",
	"application_date": "2000-11-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of iterative noise estimation in a recursive framework",
	"summary": "",
	"abstract": "A method and apparatus estimate additive noise in a noisy signal using an iterative technique within a recursive framework. In particular, the noisy signal is divided into frames and the noise in each frame is determined based on the noise in another frame and the noise determined in a previous iteration for the current frame. In one particular embodiment, the noise found in a previous iteration for a frame is used to define an expansion point for a Taylor series approximation that is used to estimate the noise in the current frame.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06944590",
	"publication_date": "2005-09-13",
	"application_number": "10116792",
	"application_date": "2002-04-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of speech recognition using variational inference with switching state space models",
	"summary": "",
	"abstract": "A method is developed which includes 1) defining a switching state space model for a continuous valued hidden production-related parameter and the observed speech acoustics, and 2) approximating a posterior probability that provides the likelihood of a sequence of the hidden production-related parameters and a sequence of speech units based on a sequence of observed input values. In approximating the posterior probability, the boundaries of the speech units are not fixed but are optimally determined. Under one embodiment, a mixture of Gaussian approximation is used. In another embodiment, an HMM posterior approximation is used.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06931374",
	"publication_date": "2005-08-16",
	"application_number": "10405166",
	"application_date": "2003-04-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and arrangements for limiting access to computer controlled functions and devices",
	"summary": "",
	"abstract": "Methods and arrangements are provided verify if a requesting computer application is authorized to change a controlled parameter associated with a computer controlled device and/or function. To accomplish this, one or verification functions are employed to analyze a security code or absence thereof, as identified by a requesting application. If the security code, which may be encrypted, matches a known or calculated valid security code, then the requesting application is deemed to be authorized to change the controlled parameter and/or modify certain limitations associated with an acceptable range for the controlled parameter. If the security code does not match a known or calculated valid security code, then the requesting application is deemed to be unauthorized to change the controlled parameter outside of a previously established acceptable range for the controlled parameter. The verification function can be implemented in a ROM to increase the security and to thwart attempts to circumvent the authorization scheme. Several independent verification functions can be arranged to support the verification of a plurality of authorized applications.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06971015",
	"publication_date": "2005-11-29",
	"application_number": "09538621",
	"application_date": "2000-03-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and mechanisms for proactive memory management",
	"summary": "",
	"abstract": "A proactive, resilient and self-tuning memory management system and method that result in actual and perceived performance improvements in memory management, by loading and maintaining data that is likely to be needed into memory, before the data is actually needed. The system includes mechanisms directed towards historical memory usage monitoring, memory usage analysis, refreshing memory with highly-valued (e.g., highly utilized) pages, I/O pre-fetching efficiency, and aggressive disk management. Based on the memory usage information, pages are prioritized with relative values, and mechanisms work to pre-fetch and/or maintain the more valuable pages in memory. Pages are pre-fetched and maintained in a prioritized standby page set that includes a number of subsets, by which more valuable pages remain in memory over less valuable pages. Valuable data that is paged out may be automatically brought back, in a resilient manner. Benefits include significantly reducing or even eliminating disk I/O due to memory page faults.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06910106",
	"publication_date": "2005-06-21",
	"application_number": "10325591",
	"application_date": "2002-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for broadcast data services",
	"summary": "",
	"abstract": "The present invention provides for the collection and delivery of broadcast data. Broadcast data is captured by broadcast data sources from television broadcasts and the captured broadcast data is collected by a broadcast data source miniport. The miniport differentiates the broadcast data to separate the requested broadcast data and to separate the broadcast data that complies with a protocol from broadcast data that does not comply with a protocol. The nonrequested broadcast data is preferably discarded and the broadcast data that does not comply with a protocol is encapsulated with appropriate headers. The broadcast data is then transferred through the network or system to a common application interface such as Winsock through NDIS and a protocol such as UDP/IP. Alternatively, a RawData module is used that does not rely on sockets and is capable of communicating with the miniport. A presenter retrieves the broadcast data from either the RawData module or Winsock and prepares the broadcast data for use by an application. The application then accesses the presenter for the prepared broadcast data it requested. In another mode, an application may access unprocessed broadcast data from either Winsock or the RawData module.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06892390",
	"publication_date": "2005-05-10",
	"application_number": "09526579",
	"application_date": "2000-03-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for canceling requests for the transmission of data",
	"summary": "",
	"abstract": "Methods are provided that allow high-level protocol drivers to cancel transmission requests that have been sent to low-level protocol drivers. Transmission requests are assigned cancel identifiers. Because one original request may be divided into several packets for transmission, the same cancel identifier is given to every packet that derives from the original request. High-level protocol drivers can request cancellation of all pending requests whose cancel identifiers match the one indicated. Cancel identifiers generated by different high-level protocol drivers are mutually distinct so one protocol driver cannot inadvertently cancel requests made by another. The protocol driver may divide its requests into logical flows and assign the same cancel identifier to all requests within one flow. Then, the protocol driver may cancel all pending requests within one flow while allowing requests in other flows to proceed to transmission. An application can use these methods to cancel requests sent to high-level protocol drivers.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06931645",
	"publication_date": "2005-08-16",
	"application_number": "09738494",
	"application_date": "2000-12-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Non-delegable client requests to servers storing local information only",
	"summary": "",
	"abstract": "Non-delegable client requests to servers storing local information only are disclosed. In one embodiment, a request is sent from a client to a server of a list of servers. The server determines whether it is inappropriate to fulfill the request. If so, it sends an error message to the client that it is off-line. When the client receives the message that the server is off-line, it sends the request to another server on the list, which is continued until a server is found that is able to fulfill the request. Embodiments of the invention thus leverage existing client-known error messages to redirect client requests to other servers.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06970932",
	"publication_date": "2005-11-29",
	"application_number": "09461487",
	"application_date": "1999-12-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Partial migration of an object to another storage location in a computer system",
	"summary": "",
	"abstract": "A technique is provided whereby a stream of data located in a first storage location is registered for migration administration and according to preset criteria, portion(s) of the stream of data that are suited to another storage location are migrated to maximize system storage efficiencies. The file system may have use of facilities that enable the monitoring of files/streams that have been registered for migration administration or files/streams may be polled according to preset criteria. If the stream of data has portions to migrate to another storage location, the hierarchical storage management (HSM) system migrates the data to the other storage location, such as to long term or off-line storage, and preserves the data relationships of the stream via metadata. The technique allows for multiple volumes to be spanned by the migration target location, and multiple file systems may service the source and target.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06981005",
	"publication_date": "2005-12-27",
	"application_number": "09644667",
	"application_date": "2000-08-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Pattern recognition training method and apparatus using inserted noise followed by noise reduction",
	"summary": "",
	"abstract": "A method and apparatus for training and using a pattern recognition model are provided. Under the invention, additive noise that matches noise expected in a test signal is included in a training signal. The noisy training signal is passed through one or more noise reduction techniques to produce pseudo-clean training data. The pseudo-clean training data is used to train the pattern recognition model. When the test signal is received, it is passed through the same noise reduction techniques used on the noisy training signal. This produces pseudo-clean test data, which is applied to the pattern recognition model. Under one embodiment, sets of training data are produced with each set containing a different type of noise.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06876966",
	"publication_date": "2005-04-05",
	"application_number": "09688950",
	"application_date": "2000-10-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Preemptive multi-tasking with cooperative groups of tasks",
	"summary": "",
	"abstract": "An operating system combines preemptive scheduling with cooperative or non-preemptive scheduling. In particular, tasks are divided into groups of interdependent tasks. Interdependent tasks are tasks that utilize the same modules of code or resources Each group includes tasks that should not be run asynchronously relative to each other. The scheduler in the operating system provides each group with a time slot of processor time. The tasks within the group are cooperatively scheduled to exploit the time slot assigned to the group. Dependencies between modules and tasks are maintained to assure that no difficulties arise amongst preemptively scheduled groups.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06948172",
	"publication_date": "2005-09-20",
	"application_number": "09537998",
	"application_date": "2000-03-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Preventing general purpose event interrupt storms in a computer system",
	"summary": "",
	"abstract": "A method and system for selectively enabling wake events in software of a computer system to overcome problems arising when hardware devices fail to clear a wake signal. The operating system manages wake events, and also distinguishes between events that are exclusively wake events, exclusively run-time events, and shared wake and run-time events. At boot time, the ACPI driver examines system tables provided by firmware to determine which GPEs are associated with wake-up events, either exclusively or shared with run-time events. These wake event associations are tracked and managed differently from events received on other hardware register pins. When the operating system receives events in a GPE Status hardware register that is enabled in a counterpart Enable register, the operating system runs an associated GPE method. When the GPE method has completed, the operating system selectively determines whether the event needs to be re-enabled.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06931553",
	"publication_date": "2005-08-16",
	"application_number": "09552944",
	"application_date": "2000-04-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Profile-driven data layout optimization",
	"summary": "",
	"abstract": "Data layout optimization arranges data members within memory to enhance software performance. Profiling data is consulted to determine how to group data members for an object class into groups. One technique groups the data members based on how frequently the data members are referenced in memory. Another technique groups the data members based on their affinities for one another in time as determined by observing when references to the data members take place. A variety of options when collecting the profiling data and grouping the data members is supported. The data member grouping is recorded in metadata associated with a definition of the object class. At runtime, a class loader places the data members of an object in memory according to the metadata. Data members of different groups can be placed in separately-loadable units of memory in the memory system. Subsequently, when the data members are referenced in memory, more frequently referenced data members, including those that tend to be referenced at times close to each other, reside at neighboring locations in the memory system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06862729",
	"publication_date": "2005-03-01",
	"application_number": "09542525",
	"application_date": "2000-04-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Queued component interface passing for results outflow from queued method invocations",
	"summary": "",
	"abstract": "Queued component interface passing provides a way for a queued component to convey results of processing a client program's method invocations made asynchronously via a queue. A queued component recorder for a u201cprocessingu201d queued component operates to marshal-by-value a method invocation parameter that is reference to another queued component recorder for another u201cresultsu201d queued component into a data stream of recorded method invocations, which is then submitted as a message to a queue associated with the processing queued component. On receipt of the message from the queue, a queued component player for the processing queued component unmarshals the reference to the other queued component recorder and passes this reference to the processing queued component. The processing queued component uses the passed reference to invoke methods of the results queued component through its message queue, which conveys the processing queued component's results.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06920636",
	"publication_date": "2005-07-19",
	"application_number": "09464636",
	"application_date": "1999-12-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Removing duplicate objects from an object store",
	"summary": "",
	"abstract": "A computer program for removing duplicate objects from an object store. The program allows the user to select which properties of the objects will be compared to determine equivalence. These properties are then read and a signature number is calculated based on the values of the those properties, using the cyclic redundancy code. Prior to the calculation of the signature, special cases are accounted for by modifying the properties. Such special cases can include: missing critical properties which can be calculated, text field formatting and leading and lagging spaces, order of attachments, order of categories, name properties, and recurring appointments. Once the signature values are calculated, objects with the same signature are, by definition, equivalent by the properties the user selected. Prior to discarding all but one of the equivalent objects, the program can check whether the object contains a link. As between two equivalent objects, the one with the link should be retained.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06901413",
	"publication_date": "2005-05-31",
	"application_number": "09272481",
	"application_date": "1999-03-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Responsive user interface to manage a non-responsive application",
	"summary": "",
	"abstract": "A method and system are provided for managing application programs with non-responsive user interfaces, possibly due to a bottleneck in handling events/messages. The method and system make an apparently frozen application user interface responsive so as to permit alternative tasks be executed or close the hung application. This is enabled by implementing routines to (a) detect if an application is hung, (b) replace the user interface for the hung application with a ghost interface, implemented by a separate thread, that permits system functionality such as sizing, minimization and closing of the application, and (c) destroying the ghost interface if the hung application becomes responsive again along with restoring the application's user interface along with updated event queues. Furthermore, creation of the ghost user interface is accompanied by placing a high priority special event in the hung application's queue to detect renewed responsiveness without requiring explicit monitoring.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06850257",
	"publication_date": "2005-02-01",
	"application_number": "09543930",
	"application_date": "2000-04-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Service quality monitoring system and method",
	"summary": "",
	"abstract": "The present invention enables a software manufacturer to gain prompt, precise and comprehensive knowledge about how customers actually use a software program. The present invention is accomplished by using an instrumented application, or software program that has been adapted to measure predetermined parameters about the usage, performance or status of a local computer system while in operation. Upon execution, the instrumented application initiates an instrumentation session, measures predetermined parameter(s), obtains a value and stores the parameter(s) and the value as a data point on the computer system. All of the data points collected within a session are saved in a session file on the computer when the instrumentation session ends. The invention then attempts to transmit the session file to a server environment for further processing to summarize the statistical information received so that the software manufacturer can better know how its software product are actually used across a user population potentially numbering in the millions.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06901536",
	"publication_date": "2005-05-31",
	"application_number": "10005636",
	"application_date": "2001-12-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Session-state manager",
	"summary": "",
	"abstract": "Without actually storing session-state information, the described exemplary implementations of session-state manager identify a user, validate the user's current logon state, and determine whether the user's session should expire. User identification and logon validation are checked by a server in a stateless network by generating a mathematically session-state token and sending that token to a user. Subsequently, the server receives a mathematically session-state token from the user and checks that token. If that token checks out, then the user is allowed continuing access under the same session. If it doesn't check out, then the user may be forced to start a new session by logging-on again. Alternatively, the server may check to see if the token would check out if it had come at an earlier time block. The session-state tokens are mathematical encoded and are generated using a one-way encryption scheme. Such a one-way encrypted token is scientifically impossible to reverse-engineer. Furthermore, logon expiration is checked by the server using the same mathematically session-state token. The token is checked to determine whether a predetermined number of time blocks have past. If so, then the server will terminate the user's session.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06877095",
	"publication_date": "2005-04-05",
	"application_number": "09522063",
	"application_date": "2000-03-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Speech-related event notification system",
	"summary": "",
	"abstract": "The present invention is directed to a system and method of notifying a speech related application of events generated by a speech related engine. A middleware layer receives a notification selection from the application. The notification selection is indicative of a selected notification mechanism for notifying the application of the events. The middleware component receives an event indication from the engine. The event indication is indicative of an event generated by the engine. The event indication is transferred to the application according to the selected notification mechanism.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06931376",
	"publication_date": "2005-08-16",
	"application_number": "09881518",
	"application_date": "2001-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Storage management system having abstracted volume providers",
	"summary": "",
	"abstract": "A storage management system in which a volume provider incorporates an application programming interface (API) for receiving storage access information that characterizes high-level input/output (I/O) attributes of the storage volume such as intended access patterns, a desired level of fault handling and optimization preferences. The volume provider and the underlying storage devices conform to the specified attributes as best as possible and resolve any conflicts with the communicated attributes. The volume providers monitor the storage volumes and may reconfigure the storage volumes in order to accomplish the desired attributes.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06904599",
	"publication_date": "2005-06-07",
	"application_number": "09450364",
	"application_date": "1999-11-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Stream class driver for computer operating system",
	"summary": "",
	"abstract": "A stream class driver for use in a computer operating system functions together with a minidriver. The minidriver is associated with a particular design for an adapter, which is a hardware device that generates or receives streaming data. The stream class driver deals with common operating system tasks such as direct memory access, scatter/gather memory use and Plug n Play. The stream class driver is independent of the hardware design and can therefore function with any type of streaming device or external buses such as USB or IEEE 1394. The minidriver functionality is limited to only those functions required by the unique aspects of the hardware and for the minimum requirements of operation, thereby minimizing the complexity and burden of designing minidrivers for hardware devices.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06845508",
	"publication_date": "2005-01-18",
	"application_number": "09819085",
	"application_date": "2001-07-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method employing script-based device drivers",
	"summary": "",
	"abstract": "A computer system and method uses script-based device drivers for operating hardware devices. The script-based driver architecture comprises a scripting driver, a script engine, and a driver script for a given hardware device, such as a scanner. The driver script is generally a text file containing a sequence of programming instructions defining the operational behavior of the hardware device. The scripting driver exports a set of objects whose functions can be called by the driver script to communicate with and control the device. When a request to operate the hardware device is received by the scripting driver, the script engine interprets the programming instructions in the driver script corresponding to the request and invokes the functions of the scripting driver objects called by the programming instructions to carry out the requested device operation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06938261",
	"publication_date": "2005-08-30",
	"application_number": "09853195",
	"application_date": "2001-05-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for accessing directory service via an HTTP URL",
	"summary": "",
	"abstract": "Information is retrieved from a directory service via a Hyper Text Transport Protocol (HTTP) Universal Resource Locator (URL) query string which is parsed by a diverting module. The diverting module parses the HTTP URL query string into a plurality of portions. The diverting module constructs a directory service compatible query from the plurality of portions and requests information from the directory service with the directory service compatible query.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06954778",
	"publication_date": "2005-10-11",
	"application_number": "09781098",
	"application_date": "2001-02-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for adding hardware registers to a power management and configuration system",
	"summary": "",
	"abstract": "A system for adding multiple GPE blocks (in addition to the system/root GPE block device) to a computing system by creating a device entry in the ACPI namespace, and using a _CRS object to describe the system resources consumed by the device is described. The GPE block device may then access associated hardware devices through a well known mechanism (either I/O or Memory Mapped accesses). By creating additional GPE block devices within the ACPI namespace, general purpose events may be delivered using more traditional hardware interrupt mechanisms than with existing systems (e.g., wiring GPE blocks together). Moreover, by putting GPE block devices in the ACPI namespace, hardware components having hardware registers may be u201chot pluggedu201d to the computing system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06907474",
	"publication_date": "2005-06-14",
	"application_number": "09809641",
	"application_date": "2001-03-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for applying color management on captured images",
	"summary": "",
	"abstract": "A system and method for image acquisition enables selective automated application of color management to color image data generated by an image-capturing device by the device driver for the device. In the image acquisition system, each image-capturing device has properties or operation parameters that can be set to control the operation of the device. During an image acquisition operation, color image data generated by the image-capturing device are transmitted to the device driver. If the operation parameters of the device are set to indicate that color management is to be performed, the device driver calls color management functions provided by the operating system to perform the desired color operation, such as a color space conversion, on the received color image data. The processed color image data are then sent to the image-processing application for further processing or editing.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06977661",
	"publication_date": "2005-12-20",
	"application_number": "09696390",
	"application_date": "2000-10-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for backing up and restoring data",
	"summary": "",
	"abstract": "Described is a system and method for allowing applications to interact with a common backup program in a uniform way. The system and method provides a communication mechanism for one or more applications to exchange information with the backup program regarding components of the applications. The information exchanged may include an identification of the components of each application. A component may be considered a group of files or resources that should be backed up or restored together. In this way, when a backup operation is initiated, each application may provide to the common backup program instructions describing the specific components to be backed up. In addition, each application may add other application-specific information useful during a restore of the backed up data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06948038",
	"publication_date": "2005-09-20",
	"application_number": "09912615",
	"application_date": "2001-07-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for backing up and restoring data",
	"summary": "",
	"abstract": "Described is a system and method for allowing applications to interact with a common backup program in a uniform way. The system and method provides a communication mechanism for one or more applications to exchange information with the backup program regarding components of the applications. The information exchanged may include an identification of the components of each application. A component may be considered a group of files or resources that should be backed up or restored together. In this way, when a backup operation is initiated, each application may provide to the common backup program instructions describing the specific components to be backed up. In addition, each application may add other application-specific information useful during a restore of the backed up data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06910112",
	"publication_date": "2005-06-21",
	"application_number": "10877569",
	"application_date": "2004-06-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for building a target operating system from a source operating system",
	"summary": "",
	"abstract": "Systems and methods are described herein for determining which components of a source operating system are required to be included in a target operating system to support selected source operating system features in the target operating system. Data objects are constructed to represent each component and feature of the source operating system, each data object identifying Exports and References for the component or feature it represents. The dependency model identifies, for each component, other components that must be included in a target operating system having the component. A target operating system builder program receives input from a user as to the features the user desires to include in the target operating system. The dependency model is utilized to identify and select the components from the source operating system necessary to support the selected features. The selected components are then linked to create the target operating system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06907610",
	"publication_date": "2005-06-14",
	"application_number": "09883120",
	"application_date": "2001-06-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for data rights management",
	"summary": "",
	"abstract": "A system and method for data rights management across multiple data rights management architectures is disclosed. The system and method solves the problems posed by multiple incompatible data rights management architectures. In particular, a data rights management clearing house is provided that generates permits, permit classes, and enables content packaging across multiple data rights management architectures. Consumers may acquire rights to content packaged with different data rights management architecture from the single data rights management clearing house. Additionally, the system and method enables content packagers to package content with multiple data rights management architectures. Finally, the data rights management clearing house provides consumers with a single location from which to manage data access rights and restore data access rights that have been lost.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06944776",
	"publication_date": "2005-09-13",
	"application_number": "09548356",
	"application_date": "2000-04-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for implementing an image ancillary to a cursor",
	"summary": "",
	"abstract": "A system and method to display an ancillary image which is movable with a cursor image. A cursor image indication is obtained which is indicative of the cursor image. An ancillary image indication is generated based on the cursor image indication. The cursor image and the ancillary image are displayed based on the cursor image indication and the ancillary image indication.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06971071",
	"publication_date": "2005-11-29",
	"application_number": "09520389",
	"application_date": "2000-03-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for replicating data in resource sets",
	"summary": "",
	"abstract": "Described is a system and method for replicating each of a set of resources to a subject computer in a replica set prior to making use of a resource in the set of resources. The set of resources includes resources that are dependent upon each other for a proper functioning of the group. A manifest file that identifies each resource in a group of interrelated resources is used. The manifest file is generated at one computer in the replica set (typically the computer at which a modification to one of the interrelated resources occurred). When the modification occurs to one of the set of resources, the manifest file is transmitted (e.g., itself replicated) to each computer in the replica set. The manifest file includes an indicator that identifies the manifest file as a special file. When received at another computer in the replica set, a service evaluates the manifest file to identify whether the appropriate versions of the identified resources exist at the receiving computer. If not, the service at that computer awaits the receipt of each resource. The wait period may include delaying the execution of an application associated with (or even included within) the manifest file from launching. Alternatively, the FRS could simply disallow access to one or more resources identified in the manifest file until all have arrived. When all have arrived, the FRS releases control of the identified resources, which may then operate or be accessed in the ordinary manner.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06917951",
	"publication_date": "2005-07-12",
	"application_number": "09917261",
	"application_date": "2001-07-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for statically checking source code",
	"summary": "",
	"abstract": "The present invention is directed at a system and method for statically checking source code to determine potential compatibility issues with a new software release. The system and method perform a static check on input source files associated with a software release. The static check includes identifying programming constructs, such as function prototypes, structures, unions, and the like, within source code files associated with the software release. The programming constructs undergo a filtering process that reduces the number of potentially false change errors. The filtered programming constructs are saved in a database associated with the software release. The database is then compared with another database containing programming constructs for another software release in order to identify differences between the two software releases. A list of changes is generated that identifies the differences between the two software releases. These changes are used to identify potential incompatibilities between the two software releases.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06873935",
	"publication_date": "2005-03-29",
	"application_number": "10379454",
	"application_date": "2003-03-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for transferring data over a network",
	"summary": "",
	"abstract": "A method is provided for transferring a set of data over a network by monitoring the level of actual bandwidth utilization. In one embodiment, the method includes identifying a maximum monitored level of actual utilization and calculating a size for data blocks to be transferred as a function of the maximum monitored level of utilization. The data blocks represent a segment of a set of data, such as a software update that may be transferred or downloaded over the network without interfering with other network activity at the network interface. The size of the data blocks are bounded by a maximum and minimum threshold value. Computed block sizes allow effective utilization of the network bandwidth while also allowing an adaptation that supports a degree of responsiveness both on fast and slow networks.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06920110",
	"publication_date": "2005-07-19",
	"application_number": "09783407",
	"application_date": "2001-02-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for transparently redirecting client requests for content using a front-end indicator to preserve the validity of local caching at the client system",
	"summary": "",
	"abstract": "Methods and computer program products for transparently redirecting a request for content such that a client system is unaware of the redirection. A client requests content through a front-end server that provides a single point of access for content stored on one or more back-end servers. The single point of access makes it so the client does not know and does not care which particular back-end server stores the requested content. When a back-end server provides a redirect response for content that the back-end server does not store, the front-end server receives the redirect response and reissues the request to a server identified in the redirect response. A front-end server indicator is added to requests so that the back-end server knows the request is from a front-end server. This allows the back-end server to provide a list of servers in the redirect response without causing errors in clients making direct requests to back-end servers when the clients are unable to process a list of servers contained in a redirect response.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06865605",
	"publication_date": "2005-03-08",
	"application_number": "09679716",
	"application_date": "2000-10-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for unloading namespace devices",
	"summary": "",
	"abstract": "An advanced configuration and power management system is described which supports an unload command by identifying those objects that are to be unloaded and, rather than simply attempting to delete the objects, detaches them from the namespace while keeping them in memory in a location accessible by the system. In this way, the system avoids the problem of trying to synchronize accesses to the objects, yet the objects not longer exist in the tree, so namespace collisions are avoided.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06877018",
	"publication_date": "2005-04-05",
	"application_number": "09895449",
	"application_date": "2001-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method of pipeline data access to remote data",
	"summary": "",
	"abstract": "A pipeline I/O mechanism in a network redirector that breaks up large files into sections, and sends write (or read) requests for each section in a pipeline fashion to a network file server, without waiting for a response for a previously-sent section. The pipeline I/O mechanism tracks the returned status of each section for which a request was made, so that success or failure of the request is determined as a whole. The pipeline I/O system and method dramatically increase the performance of network remote I/O operations, particularly with file write operations directed to a file on a network file server.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06957219",
	"publication_date": "2005-10-18",
	"application_number": "10003137",
	"application_date": "2001-11-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methods for providing histogram computation in a high precision rasterization data pipeline",
	"summary": "",
	"abstract": "A system and methods for implementing histogram computation, for example, into the rasterization pipeline of a 3-D graphics system, are provided. With the histogram computation mechanism, statistical histogram data may be generated for input data of any kind or retrieved from any source that may be specified in a 2-D array or specified in an immediate fashion to specialized data processing hardware. Depending on the nature of the input data, the data may be filtered before passing the data to data processing hardware for further processing. The data processing hardware may then apply an additional function to the input data set before calculation of the histogram data. Then, at some point, the data processing hardware may apply a function to the data to map the derived data to a real-valued function that can then be quantized to a histogram element in the range specified from zero to the number of histogram elements minus one. The corresponding element in this histogram is then incremented according to the data received as it passes through the graphics processor. Advantageously, relatively expensive host computing resources are conserved, and developers are insulated from the tedious details required of implementing histogram computation from the ground up each time it becomes desirable to compute histogram data in connection with an application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06917899",
	"publication_date": "2005-07-12",
	"application_number": "09960758",
	"application_date": "2001-09-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for broadcasting to, and programming, a mobile device in a protocol",
	"summary": "",
	"abstract": "The present invention is directed, in one embodiment, to a programming interface which enables device/protocol/network independent transmission of messages to, and programming of, mobile devices. In another embodiment, the present invention is directed to data structures maintained on, and supported by, the mobile devices. The present invention also, in another embodiment, provides security for programming messages and an acknowledgement channel over which the mobile device can acknowledge receipt of, and successful implementation of, a programming message.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06952772",
	"publication_date": "2005-10-04",
	"application_number": "09764536",
	"application_date": "2001-01-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for broadcasting to, and programming, a mobile device in a protocol",
	"summary": "",
	"abstract": "The present invention is directed, in one embodiment, to a programming interface which enables device/protocol/network independent transmission of messages to, and programming of, mobile devices. In another embodiment, the present invention is directed to data structures maintained on, and supported by, the mobile devices. The present invention also, in another embodiment, provides security for programming messages and an acknowledgement channel over which the mobile device can acknowledge receipt of, and successful implementation of, a programming message.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06981137",
	"publication_date": "2005-12-27",
	"application_number": "09764794",
	"application_date": "2001-01-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for electronic program guide data services",
	"summary": "",
	"abstract": "EPG services are provided, which enables a device such as a computer, a set top box or the like to collect EPG data from multiple EPG data providers or sources. The EPG data is collected at the device by EPG loaders. Each EPG loader collects EPG data from a particular source. The EPG loaders deliver the EPG data to a writer module, which performs scaling and formatting functions to the EPG data The writer module also stores the scaled and formatted EPG data in a database or other storage. Once stored, applications gain access to the EPG data through a control module. The writer module may also be implemented by chaining EPG loaders in a priority scheme. However, EPG loader interaction reduces independence and forces more rigid interface and implementation constraints upon the design of EPG loaders. The control module provides the accessed EPG data to the applications. EPG services function to isolate the operation of the applications from the EPG data sources. Because the EPG data is stored by the writer module and accessed by the control module, the applications and EPG data sources can change independently of one another without having an effect on the ability of EPG services to collect and provide access to EPG data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06904609",
	"publication_date": "2005-06-07",
	"application_number": "09527313",
	"application_date": "2000-03-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for generating prediction queries",
	"summary": "",
	"abstract": "Systems and methods are provided for generating prediction queries to help a user build and execute prediction queries. A user interface (UI) is provided that is easy to use and understand in connection with the generation of a prediction query for data mining. The UI can be instantiated from a variety of disparate sources that may request query building services. While prediction queries and relational queries are quite different, the UI enables prediction queries to be built in a manner that is similar to the way relational queries are built. In one embodiment, the main screen of the UI includes four main components: (1) a table column mapping area, (3) a selection grid area, (4) a query text display area and (5) a query result grid area. In one embodiment, the query text display area and the query result grid area are initially not presented to the user.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06931391",
	"publication_date": "2005-08-16",
	"application_number": "10177824",
	"application_date": "2002-06-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for multiprocessor scalable write barrier",
	"summary": "",
	"abstract": "Systems and methods providing a multiprocessor scalable write barrier to a main memory card table are described. The main memory is divided into multiple cards bit-mapped by the card table. In one aspect, an application store operation (reference) associated with one of the cards is detected. Responsive to detecting the reference, card table bit(s) that are mapped to the card are evaluated. Responsive to determining that the bit(s) have already been marked as dirty, the card table bit(s) are not again marked. This technique effectively reduces the probability of more than a single overlapping write operation to a card table cache line by two or more processors in the system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06973554",
	"publication_date": "2005-12-06",
	"application_number": "10422116",
	"application_date": "2003-04-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for optimizing geometric stretch of a parametrization scheme",
	"summary": "",
	"abstract": "Systems and methods are provided for optimizing the geometric stretch of a parametrization scheme. Given an arbitrary mesh, the systems and methods construct a progressive mesh (PM) such that all meshes in the PM sequence share a common texture parametrization. The systems and methods minimize geometric stretch, i.e., small texture distances mapped onto large surface distances, to balance sampling rates over all locations and directions on the surface. The systems and methods also minimize texture deviation, i.e., u201cslippageu201d error based on parametric correspondence, to obtain accurate textured mesh approximations. The technique(s) begin by partitioning the mesh into charts using planarity and compactness heuristics. Then, the technique(s) proceed by creating a stretch-minimizing parametrization within each chart, and by resizing the charts based on the resulting stretch. Then, the technique(s) simplify the mesh while respecting the chart boundaries. Next, the parametrization is re-optimized to reduce both stretch and deviation over the whole PM sequence. The charts may then be packed into a texture atlas for improved texture mapping in connection with a parametrization scheme.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06850233",
	"publication_date": "2005-02-01",
	"application_number": "10138751",
	"application_date": "2002-05-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for providing image rendering using variable rate source sampling",
	"summary": "",
	"abstract": "Systems and methods are provided for variable source rate sampling in connection with image rendering, which accumulate and resolve over all samples forward mapped to each pixel bin. In accordance with the invention, the textured surface to be rendered is sampled, or oversampled, at a variable rate that reflects variations in frequency among different regions, taking into account any transformation that will be applied to the surface prior to rendering and the view parameters of the display device, thus ensuring that each bin of the rendering process receives at least a predetermined minimum number of samples. A variety of image processing applications are contemplated wherein variable rate source sampling, and accumulation and resolution of forward mapped point samples can be applied, ranging from 3-D graphics applications to applications wherein images recorded in a recording/storage environment are mapped to the arbitrary requirements of a display environment.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06943805",
	"publication_date": "2005-09-13",
	"application_number": "10185082",
	"application_date": "2002-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for unified remote control access",
	"summary": "",
	"abstract": "A first computing device is connected to a second computing device over a conventional communication network or other switching device or network using a predetermined communications protocol or a unified protocol. The unified protocol enables remote control of a display device by abstracting out differences in protocols, thereby eliminating the need to develop different interfaces between systems. By implementing the system as COM objects, other available protocols can be dynamically integrated. Upon connection of the first computing device to the second computing device, the screen of the second computing device is displayed on the screen of the first computing device. The first computing device is capable of watching or monitoring the second computing device, or the first computing device can control the second computing device. The first computing device can switch between the watching/monitoring mode and the controlling mode in a reversible or toggleable manner.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06928464",
	"publication_date": "2005-08-09",
	"application_number": "09845808",
	"application_date": "2001-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transactional file system",
	"summary": "",
	"abstract": "A transactional file system wherein multiple file system operations may be performed as transaction. An application specifies that file system-related operations should be handled in a transaction, and is given a file handle associated with a transaction context. For file system requests associated with a transaction context, a file system component manages operations consistent with transactional behavior. The component provides data isolation by providing multiple file versions such that transactional readers do not receive changes until after the transaction commits and the reader reopens the file. The component handles namespace logging operations in a multiple-level log that facilitates logging and recovery. Page data is logged separate from the main log, with signatures establishing whether pages were fully flushed to disk. Namespace isolation via isolation directories allows a transaction to see its operational effects but not effects of other uncommitted transactions. Transactions over a network are facilitated.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06856993",
	"publication_date": "2005-02-15",
	"application_number": "09539233",
	"application_date": "2000-03-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Unique digital content identifier generating methods and arrangements",
	"summary": "",
	"abstract": "In accordance with certain aspects of the present invention, enhancements have been developed to further extend the performance of the generic DVD navigator component. Of significance herein, was the need to assign a unique identifier to DVD discs and the like. Doing so allows player applications to easily identify, catalogue and associate information with each disc. Previous u201cuniqueu201d ID algorithms have failed to produce useful and reliable identifiers. Thus, improved methods and arrangements are provided for use in the generic DVD navigator that produces substantially, statistically unique disc IDs.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06871012",
	"publication_date": "2005-03-22",
	"application_number": "09721413",
	"application_date": "2000-11-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Universal graphic adapter for interfacing with hardware and means for encapsulating and abstracting details of the hardware",
	"summary": "",
	"abstract": "The subject invention relates to a Universal Graphics Adapter (UGA) that is a hardware-independent design that encapsulates and abstracts low-level graphics hardware in a standard manner through firmware. UGA is a firmware standard, intended to wrap existing or planned hardware, including VGA. UGA does not require the use of real-mode assembly language, direct hardware register, or frame buffer access to program, thus providing advantages over conventional systems. UGA supports basic drawing operations, continuous display modes, and power management. As a firmware-based standard, UGA facilitates updating a system to support both evolving and new hardware features.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06907482",
	"publication_date": "2005-06-14",
	"application_number": "10157067",
	"application_date": "2002-05-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "URL mapping methods and systems",
	"summary": "",
	"abstract": "An input URL string is searched for a particular pattern, the pattern being defined in a manner such that the search may be satisfied while allowing variability among constituent parts of the input URL string. The input URL string is mapped to an output URL string if the pattern is found in the input URL string.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06882999",
	"publication_date": "2005-04-19",
	"application_number": "10625448",
	"application_date": "2003-07-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "User interface for creating, viewing and temporally positioning annotations for media content",
	"summary": "",
	"abstract": "In a networked client/server system, media content as well as annotations corresponding to the media content can be transmitted from a server(s) to a client. A user interface is presented to the user to facilitate creating new annotations and viewing annotations. According to one embodiment, the client further assists the user in identifying a temporal range of the media content to which the new annotation is to correspond.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06956593",
	"publication_date": "2005-10-18",
	"application_number": "09396706",
	"application_date": "1999-09-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Versions and workspaces in an object repository",
	"summary": "",
	"abstract": "Maintaining versions and workspaces in an object repository is disclosed. The system provides an efficient way to manage versions of objects by only copying objects when absolutely necessary, i.e. when a property value in a particular object has changed. In addition, the system provides a mechanism to control whether or not relationships are propagated to successor versions of an object. A further aspect of the system is that resolution of objects during a relationship traversal can be customized depending on whether or not an application accessing the objects is version-aware. If the application is not version aware, a means for resolving the relationship to a particular object is provided. A still further aspect of the system is that merge behavior is parameterized. When two versions of an object are merged, flags control how conflicts in property values and relationship contents are managed. Finally, the system provides a workspace that acts as a virtual repository session and provides workspace context and scope to repository objects.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06868425",
	"publication_date": "2005-03-15",
	"application_number": "09515037",
	"application_date": "2000-03-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Video memory management",
	"summary": "",
	"abstract": "A video memory manager manages and virtualizes memory so that an application or multiple applications can utilize both system memory and local video memory in processing graphics. The video memory manager allocates memory in either the system memory or the local video memory as appropriate. The video memory manager may also manage the system memory accessible to the graphics processing unit via an aperture of the graphics processing unit. The video memory manager may evict memory from the local video memory as appropriate, thereby freeing a portion of local video memory use by other applications. In this manner, a graphics processing unit and its local video memory may be more readily shared by multiple applications.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06947051",
	"publication_date": "2005-09-20",
	"application_number": "10748362",
	"application_date": "2003-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Volumetric-based method and system for visualizing datasets",
	"summary": "",
	"abstract": "The present invention is a method for visualizing a plurality of stochastic datasets. The present invention provides a more accurate account of situations in the real world to better enable scientists and engineers to utilize the results of computer models. The method employs a two-stage process comprising a preprocessing stage and a visualization stage. Activity begins with the preprocessing stage. In this stage, the individual output from a plurality of different computations are converted from being described as two-dimensional surfaces in three-dimensional space to a three-dimensional voxel-based representation. For each surface set in the plurality of two-dimensional representations, a count is obtained of the total number of surfaces in the surface set which intersects the subspace of a voxel (each element of the data structure represents the subspace of a voxel in the three-dimensional voxel-based representation). The count is obtained for each element of the data structure, and the sequence is repeated for each surface set. Finally, in a visualization stage, after the volume is saved as an image file, transparency and color values are determined based on one or more look-up tables. Finally, the volume is rendered and drawn with user-controllable transparency and color.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06903740",
	"publication_date": "2005-06-07",
	"application_number": "10174239",
	"application_date": "2002-06-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "VPN enrollment protocol gateway",
	"summary": "",
	"abstract": "A virtual private network (VPN) enrollment protocol gateway is described herein. The protocol gateway is implemented as a registration authority that operates as an intermediary between routers and a certificate authority, allowing routers operating in accordance with one protocol to obtain and maintain certificates for a VPN from a certificate authority operating in accordance with another protocol. In accordance with one aspect, the gateway protocol supports various requests from the router, including router enrollment requests, get certificate revocation list request, get certificate requests, get certificate authority certificate requests, and password requests.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06978364",
	"publication_date": "2005-12-20",
	"application_number": "09548257",
	"application_date": "2000-04-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web store events",
	"summary": "",
	"abstract": "Systems and methods for web store events. A web store event occurs whenever an item is accessed. When an item is accessed, both synchronous and asynchronous events can fire. If a synchronous event fires, then an event object that has registered for the synchronous event is called and executed before the transaction involving the item is allowed to complete. The synchronous event also has the ability to either commit or abort the transaction. Importantly, the synchronous event has complete control over the item. An asynchronous event is called and executed after the transaction involving the item is already committed to the store and after any synchronous events have executed. Because more than one event object can register for a web store event, synchronous event objects are called according to their priority. Synchronous events fire before asynchronous events and synchronous event objects execute before asynchronous event objects.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06876995",
	"publication_date": "2005-04-05",
	"application_number": "09680119",
	"application_date": "2000-10-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Wireless self-describing buildings",
	"summary": "",
	"abstract": "A system and method are provided for wireless self-describing buildings. RFID tags are used to store information relative to a building. This information can be simple information such as a uniform resource locator, or more detailed information. Active and/or passive RFID tags can be used. Varying degrees of user access are provided. Accordingly, different users can be given access to relevant information based upon the type or identity of the user.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06963282",
	"publication_date": "2005-11-08",
	"application_number": "10728391",
	"application_date": "2003-12-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "XML serialization and deserialization",
	"summary": "",
	"abstract": "An object instance is serialized to a serial format, such as an eXtensible Markup Language (XML) document, based on a mapping between an arbitrary annotated source code file and a schema. The arbitrary annotated source code contains at least one programming type that describes a shape of an object instance and the schema describes a format of a document having a serial format. The mapping defines a correspondence between the shape of the object instance and the format of the document having the serial format. Subsequently, an object instance is converted to the serial format by converting public properties, public fields and method parameters of the object instance to a document having the serial format based on the mapping. Once the mapping is defined, an XML document can also be converted to an object instance based on the mapping.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06898604",
	"publication_date": "2005-05-24",
	"application_number": "09894829",
	"application_date": "2001-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "XML-based template language for devices and services",
	"summary": "",
	"abstract": "A universal plug and play (UPnP) device makes itself known through a set of processes-discovery, description, control, eventing, and presentation. Following discovery of a UPnP device, an entity can learn more about the device and its capabilities by retrieving the device's description. The description includes vendor-specific manufacturer information like the model name and number, serial number, manufacturer name, URLs to vendor-specific Web sites, etc. The description also includes a list of any embedded devices or services, as well as URLs for control, eventing, and presentation. The description is written by a vendor, and is usually based on a device template produced by a UPnP forum working committee. The template is derived from a template language that is used to define elements to describe the device and any services supported by the device. The template language is written using an XML-based syntax that organizes and structures the elements.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06910068",
	"publication_date": "2005-06-21",
	"application_number": "09811362",
	"application_date": "2001-03-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Intelligence server system",
	"summary": "",
	"abstract": "An intelligence server for a reporting system is disclosed. The reporting system may include a report initiation module, such as a user engine or calling application, for generating a request for a report. The intelligence server includes a server layer for receiving the generated request and for coordinating a flow of a processing of the received request; an application logic layer which includes business intelligence rules used for generating the report; and an analytical layer, in communication with the user engine and the server layer, for receiving the request to be processed from the server layer, transmitting the processed request to one or more data storage devices, and for extracting data from the data storage devices responsive to the transmitted request. The extracted data is then processed by the applications in the application logic layer to generate the report and the processing is independent of a user interface.",
	"url": null,
	"owner": "MicroStrategy, Inc.",
	"publication_number": "06859798",
	"publication_date": "2005-02-22",
	"application_number": "09884472",
	"application_date": "2001-06-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Diagnostic tool for a portable thread environment",
	"summary": "",
	"abstract": "A diagnostic tool for a portable thread environment is disclosed. In one embodiment, a system comprises a first portable thread environment (PTE), comprising a diagnostic tool; a second PTE configured to receive and send threads; a third PTE configured to receive and send the threads; and a PTE router configured to receive the threads and route said threads, wherein the router copies the threads and routes the copies to the diagnostic tool.",
	"url": null,
	"owner": "Microtune (San Diego), Inc.",
	"publication_number": "06938246",
	"publication_date": "2005-08-30",
	"application_number": "09852352",
	"application_date": "2001-05-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Portable thread environment",
	"summary": "",
	"abstract": "A portable thread environment comprising: an application programming interface configured to support multiple application program tasks with each task comprised of one or more threads; host adaptation logic for communicatively interfacing the tasks and threads with a host processing environment; and a scheduler configured to determine an execution order of the one or more threads based on one or more execution variables.",
	"url": null,
	"owner": "Microtune (San Diego), Inc.",
	"publication_number": "06961934",
	"publication_date": "2005-11-01",
	"application_number": "09792550",
	"application_date": "2001-02-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Priority in a portable thread environment",
	"summary": "",
	"abstract": "A portable thread environment comprising: an application programming interface configured to support multiple application program tasks, wherein each task is either a preemptive task comprised of preemptive threads or a cooperative task comprised of cooperative threads; host adaptation logic for communicatively interfacing said cooperative tasks, preemptive tasks, cooperative threads and preemptive threads with a host processing environment; a scheduler configured to determine an execution order of cooperative threads and preemptive threads based on each cooperative thread's and preemptive thread's priority levels.",
	"url": null,
	"owner": "Microtune (San Diego), Inc.",
	"publication_number": "06904595",
	"publication_date": "2005-06-07",
	"application_number": "09852351",
	"application_date": "2001-05-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Operating system independent method and apparatus for transporting voice-over-IP information",
	"summary": "",
	"abstract": "In exemplary embodiments, a dataport in an access server is suitably configured to emulate a modern connection for non-modem calls such as voice calls. Computer applications for administering, for example, voice-over-network services thus communicate with the port via standard modem calls. In accordance with one aspect of the invention, communications between the port hardware and the voice enabled application take place through an encapsulating protocol such as the Point-to-Point-Protocol (PPP)such that the port is addressable and able to receive controls or other instructions from a voice application residing on the access server or from a distributed location.",
	"url": null,
	"owner": "Mindspeed Technologies, Inc.",
	"publication_number": "06904052",
	"publication_date": "2005-06-07",
	"application_number": "09370792",
	"application_date": "1999-08-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Process for recording, storing, and displaying discrete trial data",
	"summary": "",
	"abstract": "A method and process embodied in one or more computer software programs to record, store, and display discrete trial therapy data, to include a user interface to add and modify Student account information, to record Student performance data in a database, and to display Student performance data from a database. The method further includes: a user interface to add and modify curricular information in a database; a user interface to display curricular data, Student information, and performance data in user-selected formats; and a user interface to add and modify information about people or groups associated with the Student accounts in the database.",
	"url": null,
	"owner": "Mobile Thinking, LLC",
	"publication_number": "06905883",
	"publication_date": "2005-06-14",
	"application_number": "10759980",
	"application_date": "2004-01-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure enterprise communication system utilizing enterprise-specific security/trust token-enabled wireless communication devices",
	"summary": "",
	"abstract": "An enterprise communications system for implementing, accessing, using, and managing enterprise-specific resources includes one or more Mandate clients, each Mandate client including a wireless communication device and an enterprise-specific identity module installed in such wireless communication device, a digital mobile communications network operative to provide a wireless communications link to each Mandate client, a Mandate server interfaced with the digital mobile communications network and interconnected to the enterprise-specific resources, each enterprise-specific identity module having stored therein a unique authentication key and cryptographic algorithms, the unique authentication key and the cryptographic algorithms of each enterprise-specific identity module being available to the digital mobile communications network and the Mandate server, wherein each Mandate client, the digital mobile communications network and the Mandate server utilize the unique authentication key and the cryptographic algorithms to provide authenticated and encrypted communications therebetween for secure implementation, access, use, and management of enterprise-specific resources by each Mandate client.",
	"url": null,
	"owner": "Mobile-Mind, Inc.",
	"publication_number": "06963740",
	"publication_date": "2005-11-08",
	"application_number": "10209175",
	"application_date": "2002-07-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Puck interface adapter including drivers for interfacing serial device to host wherein puck implements command mode and pass through mode",
	"summary": "",
	"abstract": "The invention provides a plug-and-work sensor interface device named u201cpucku201d for fast and easy deployment of various types of serial devices, which include commercial off-the-shelf and custom-made sensors and instruments, in a distributed, dynamic oceanic observing network. In an embodiment, each puck is removably attached and electrically coupled to a specific sensor to be deployed. The puck comprises a non-volatile memory for associating and storing arbitrary binary information about the sensor and a microprocessor for controlling how the information is read from and written into the non-volatile memory. The sensor information may include unique sensor identifier, sensor metadata, sensor device driver, etc. The puck itself does not execute any of the device code; rather, a host retrieves the sensor information from the puck when the puck is plugged in. The retrieval can be done automatically or semi-automatically with user interaction. After introducing the sensor to the host, the puck retires into a pass mode, allowing the host to communicate directly with the sensor. According to an aspect of the invention, the deployment of any serial device essentially consists of the steps of removably attaching a puck to the serial device and plugging the puck into a host.",
	"url": null,
	"owner": "Monterey Bay Aquarium Research Institute",
	"publication_number": "06901464",
	"publication_date": "2005-05-31",
	"application_number": "10407951",
	"application_date": "2003-04-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Communication system with wireless electronic mail or messaging integrated and/or associated with application program residing on remote computing device",
	"summary": "",
	"abstract": "A wireless communications system is provided that enables a user to send data pertaining to the shipment and/or delivery of goods, preferably from a handheld device, to at least one data file associated with at least one respective application program residing on a remote computing device. The application program rapidly receives the sent data and integrates the data into at least one data file associated therewith, thereby enabling more timely and efficient business operations. In a preferred embodiment, user input is minimized by using a macro feature, and users can input data fields in any order without affecting the performance or reliability of the system.",
	"url": null,
	"owner": "Motient Communications Inc.",
	"publication_number": "06938099",
	"publication_date": "2005-08-30",
	"application_number": "09917937",
	"application_date": "2001-07-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Self managing software agents with introspection",
	"summary": "",
	"abstract": "A system and method is described for managing plugin program components through encapsulation in a self managing agent that supports introspection for installation. An agent evaluator engine at the host machine interrogates the introspective interface for the agent to determine what resources are required by the plugin. In addition, the engine determines what effect the plugin will have on the host system, and invokes the installation logic which may be contained in the agent. Using the introspective mechanism and installation logic, any changes in the plugin (such as revisions) and the associated dependency changes can be readily accommodated since only a single base of information and installation logic, that which is contained within the enclosing agent, requires modification.",
	"url": null,
	"owner": "Motive, Inc.",
	"publication_number": "06871345",
	"publication_date": "2005-03-22",
	"application_number": "09542274",
	"application_date": "2000-04-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Event coordination in an electronic device to reduce current drain",
	"summary": "",
	"abstract": "A method of coordinating events in a microprocessor-based electronic device having a sleep mode to reduce current drain includes a first step of determining a list of times to perform associated operating system events requiring a wake-up period for the device. A next step includes establishing a timing of fixed events wherein the electronic device enters a wake-up period to perform the fixed events. A next step includes delaying the time for an operating system event to coincide with a fixed event such that the electronic device utilizes one coincident wake-up period to perform both of the operating system event and the fixed event. This removes the current drain associated with entering and exited an additional sleep period.",
	"url": null,
	"owner": "Motorola, Inc.",
	"publication_number": "06965763",
	"publication_date": "2005-11-15",
	"application_number": "10074114",
	"application_date": "2002-02-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for operating a user station in a cellular communication system",
	"summary": "",
	"abstract": "A method of operating a user station in a cellular communications system. The method relates to determining and allocating a plurality of operating resources, including at least one processing resource and at least one cellular communications resource, to a plurality of applications. The method includes assessing application requirements with respect to the processing resources in association with the application's requirements with respect to the cellular communications resources. Also described is corresponding apparatus for operating a user station. Also described is a storage medium storing processor-implementable instructions and a signal carrying processor-implementable instructions.",
	"url": null,
	"owner": "Motorola, Inc.",
	"publication_number": "06963730",
	"publication_date": "2005-11-08",
	"application_number": "10203778",
	"application_date": "2001-01-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of enabling the transmission of data in a wireless communication network",
	"summary": "",
	"abstract": "A method of enabling the transmission of data in a wireless communication network is disclosed. The method comprises the steps of monitoring a plurality of communication interfaces; determining that a communication interface of the plurality of communication interfaces has become available; informing an application that the communication interface has become available; and transmitting data associated with the application on the communication interface.",
	"url": null,
	"owner": "Motorola, Inc.",
	"publication_number": "06973324",
	"publication_date": "2005-12-06",
	"application_number": "10038026",
	"application_date": "2002-01-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of optimizing the transmission of data in a wireless communication network",
	"summary": "",
	"abstract": "A method of optimizing the transmission of data in a wireless communication network is disclosed. The method comprises the steps of acquiring a first communication interface of a plurality of communication interfaces to transmit data associated with a first application for a first period of time; transmitting a first block of data on the first communication interface for a second period of time which is less than the first period of time; and transmitting a second block of data associated with a second application on said first communication interface for at least a portion of the first period of time remaining after the second period of time.",
	"url": null,
	"owner": "Motorola, Inc.",
	"publication_number": "06947760",
	"publication_date": "2005-09-20",
	"application_number": "10037559",
	"application_date": "2002-01-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Service framework with local proxy for representing remote services",
	"summary": "",
	"abstract": "In an information appliance system , a user device comprises a client platform (, FIG. ) that includes a service framework (, FIG. ) to discover and connect with a variety of services, both remote and local, transient and persistent, and to disconnect from them when they are no longer of interest or become unavailable. The service framework provides a standard, consistent, simplified way for services to make themselves available and for service-using entities to locate and connect with the services of interest to them. From the perspective of the client platform , all services, whether local or remote, are presented as local services to the application. Each remote service is represented as a local service through the use of a local proxy that insulates the service user from the complexities of communicating with a remote server. Various methods of operating a service framework are also described.",
	"url": null,
	"owner": "Motorola, Inc.",
	"publication_number": "06895444",
	"publication_date": "2005-05-17",
	"application_number": "09663278",
	"application_date": "2000-09-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatically configuring a graphical program to publish or subscribe to data",
	"summary": "",
	"abstract": "A system and various methods for simplifying or automating the task of configuring a graphical program to exchange data with a data source and/or data target. In response to receiving user input specifying a data source, the graphical program may be automatically, i.e., programmatically, configured to receive data from the data source. In response to receiving user input specifying a data target, the graphical program may be automatically, i.e., programmatically, configured to provide or write data to the data target. The data source or data target may be any of various types. For example, the data source or data target may be a file, a server, etc., and may be located on the host computer system of the graphical program or on a remote computer system. In the preferred embodiment, the data source or data target is specified by a uniform resource locator (URL).",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "06971065",
	"publication_date": "2005-11-29",
	"application_number": "09737528",
	"application_date": "2000-12-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Creating a graphical program to configure one or more switch devices",
	"summary": "",
	"abstract": "A system and method for creating a graphical program operable to configure one or more switch devices. A first node may be displayed in the graphical program, wherein the first node is operable to use route information to control or configure one or more of switch devices in a switching system. The first node may be configured with route information. For example, the route information may comprise information specifying one or more routes previously configured and stored. Also, the route information may comprise information specifying two endpoints of a route, as in the case of run-time auto-routing, or may comprise information explicitly specifying a complete route. The first node may be operable to perform various types of operations to control or configure the one or more switch devices, such as a connect operation to connect specified routes.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "06954904",
	"publication_date": "2005-10-11",
	"application_number": "10113850",
	"application_date": "2002-03-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Measurement system software architecture for easily creating high-performance measurement applications",
	"summary": "",
	"abstract": "System and method for creating measurement applications. The system includes a measurement task specifier for generating a measurement task specification (MTS) for a measurement task in response to user input; an expert system for analyzing and validating the generated MTS, and generating a run-time specification (RTS) for the measurement task; a run-time builder for analyzing the RTS, configuring one or more measurement devices according to the RTS, and generating a run-time which is executable to perform the measurement task. The system includes a storage system for storing the generated MTS, the generated RTS, and configuration information for one or more measurement devices. The expert system includes one or more measurement experts which analyze all or part of the MTS and populate complete or partial RTSs. The partial RTSs are iteratively populated by other experts to form complete RTSs. Competing RTSs may be assessed and a final RTS selected based upon user preferences.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "06879926",
	"publication_date": "2005-04-12",
	"application_number": "10008792",
	"application_date": "2001-11-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Measurements expert system and method for generating high-performance measurements software drivers",
	"summary": "",
	"abstract": "A measurements expert system and method for generating high-performance measurements software drivers. The measurements expert system is able to interpret a customer's measurement task specification (MTS) specifying a measurement task, explore possible solution paths, and generate a solution, e.g., a run-time specification (RTS), optimized for the customer's measurement system. The expert system includes programs for analyzing and validating a received MTS, and a plurality of measurements experts which are operable to analyze all or part of the MTS and populate complete or partial RTSs. The partial RTSs are iteratively populated by other experts to form complete RTSs. Competing RTSs may be assessed and a final RTS selected based upon user preferences. The final RTS is useable to configure one or more measurement devices according to the RTS, and to generate a run-time which is executable to perform the specified measurement task using the one or more measurement devices.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "06944606",
	"publication_date": "2005-09-13",
	"application_number": "10010829",
	"application_date": "2001-11-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Routing with signal modifiers in a measurement system",
	"summary": "",
	"abstract": "System and method for programmatically determining routing with signal modifications in a measurement system to perform a measurement task. Information is received specifying a route from a source terminal to a destination terminal in the measurement system, including signal modification requirements and a graph of possible routes in the measurement system. A current signal modification of the route is determined and used with the signal modification requirements to determine desired changes in the signal modification of the route. The legs of the route are walked in the graph, and one or more legs are replaced with respective alternative legs, each of which includes at least a portion of the desired changes in the signal modification, thereby generating a modified route which satisfies the signal modification requirements for the route, where the modified route is usable to route signals in performing the measurement task. The modified route is then stored.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "06873928",
	"publication_date": "2005-03-29",
	"application_number": "10231543",
	"application_date": "2002-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method enabling hierarchical execution of a test executive subsequence",
	"summary": "",
	"abstract": "Individual test executive sequences may correspond to individual sub-components of a hierarchical system. To test a system sub-component directly without testing u201cupperu201d sub-components in the hierarchy, a first test executive sequence corresponding to that system sub-component may be executed directly, without requiring execution of test executive sequences above the first test executive sequence in the hierarchy, or requiring only partial execution of test executive sequences above the first test executive sequence in the hierarchy. Another embodiment of the invention comprises a system and method for enabling propagation or inheritance of test executive sequence local variables.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "06868508",
	"publication_date": "2005-03-15",
	"application_number": "09943988",
	"application_date": "2001-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for synchronizing execution of a batch of threads",
	"summary": "",
	"abstract": "A method for creating a computer program to be executed by a plurality of threads, in which the method utilizes a technique for execution synchronization referred to herein as a batch synchronization section. According to this technique, a plurality of threads may be associated with one another as a u201cbatchu201d of threads. Each thread in the plurality (batch) of threads may execute the computer program simultaneously. The batch synchronization section may specify a portion of the computer program for which the execution of the portion by the plurality of threads is to be synchronized. In one embodiment different types of batch synchronization sections may be specified, wherein each type of batch synchronization section performs a different type of execution synchronization. In one embodiment the method may enable execution synchronization behavior for multiple concurrent executions of a test executive test sequence to be specified. The test sequence may include one or more batch synchronization sections. Multiple threads may each execute an instance of the test sequence to concurrently to test a group of units under test, and the batch synchronization sections may coordinate the execution of the multiple threads where necessary.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "06971084",
	"publication_date": "2005-11-29",
	"application_number": "09798366",
	"application_date": "2001-03-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for testing a group of related products",
	"summary": "",
	"abstract": "A system and method for testing a group of related products or devices. According to one embodiment, the user may first manually create a base test sequence, and child test sequences may then be created based on the base test sequence. The user may include various steps in the base test sequence, such that the base test sequence includes steps that need to be common to most or all of the child test sequences. The user may also configure parameters or properties for each step in the base test sequence, such that the parameter configuration is what is required for most or all of the child test sequences. Initial child test sequences may then be automatically created as instances of the base test sequence. The user may then manually edit the instances of the base test sequence to produce the desired child test sequences, such that each child test sequence is configured to appropriately test a particular product to which the child test sequence corresponds. For example, the user may change a parameter configuration for one or more steps in the child test sequence, may add a step to or remove a step from the child test sequence, etc. In the preferred embodiment, the child test sequences may also be automatically changed or updated in various ways. For example, the user may manually add a new step to the base test sequence, and in response the new step may be automatically added to each child test sequence. As another example, the user may manually change the parameter configuration for a step in the base test sequence, and in response the parameter configuration change may be automatically propagated to each child test sequence.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "06907557",
	"publication_date": "2005-06-14",
	"application_number": "09792115",
	"application_date": "2001-02-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method of evaluating the performance of an image processing algorithm",
	"summary": "",
	"abstract": "A system and method for creating an image processing algorithm and automatically evaluating the performance of the algorithm. A user may develop an image processing algorithm in an image prototyping environment. The image prototyping environment may provide image processing functions for analyzing, processing, or manipulating various types of images. Once the user has developed an image processing algorithm, the user may execute the algorithm. In response to executing the algorithm, the execution time requirements of the algorithm may be determined. This information may be used, for example, in order to determine whether the image processing algorithm is fast enough to evaluate images that are acquired at a particular rate in a real-time application. The information may also help the user identify portions of the algorithm that need to be modified, e.g., because they are bottlenecks in the algorithm. In the preferred embodiment, the image prototyping environment is operable to automatically generate a program implementing the image processing algorithm, once the user is satisfied with the performance of the algorithm.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "06931633",
	"publication_date": "2005-08-16",
	"application_number": "09629653",
	"application_date": "2000-08-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System of measurements experts and method for generating high-performance measurements software drivers",
	"summary": "",
	"abstract": "A measurements expert system and method for generating a high-performance measurements software driver. The measurements expert system translates a user's measurement task specification (MTS) specifying a measurement task into a solution, e.g., a run-time specification (RTS), suitable for the user's measurement system. The expert system includes programs for analyzing and validating the received MTS, and for generating the RTS. The RTS is useable to configure measurement devices to perform the measurement task, and to generate a run-time which is executable to perform the specified measurement task. The expert system includes a plurality of experts, e.g., device, channel, timing, reader/writer, control, and streaming experts, etc., each class of which manages different aspects of the MTS. The expert system creates a device expert call tree of associated experts according to the configuration specified by the user, manages the configuration of the MTS, verifies the MTS, and compiles the MTS into the RTS.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "06965800",
	"publication_date": "2005-11-15",
	"application_number": "10010826",
	"application_date": "2001-11-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for content deployment and activation",
	"summary": "",
	"abstract": "The present disclosed system is directed toward a communication and management system that dynamically targets network devices for content deployment, such as application programs, device drivers, configuration files, and registry subhives. Moreover, the present system targets users of network devices for promotions, such as advertisements offered by Internet e-commerce sites. Promotions are generally icons or graphic images with links to host web servers overlaying a video display, but also includes audio and video clips or data streams. Network devices and their users are targeted through user profiles. User profiles are created when network devices register with the system server and are continually updated with information provided by user activity and event logs that are periodically uploaded from each device, a scalable messaging system provides for data transmission between the system server and among the network devices such that it is neutral as to the specific hardware platforms on which it is implemented.",
	"url": null,
	"owner": "Navic Systems, Inc.",
	"publication_number": "06845396",
	"publication_date": "2005-01-18",
	"application_number": "09520029",
	"application_date": "2000-03-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Building predictive models within interactive business analysis processes",
	"summary": "",
	"abstract": "A Customer Relationship Management (CRM) system that dynamically builds predictive models. The system is used by business users who are unfamiliar with the art of data mining. A model-building mechanism in a data mining subsystem is presented with a training segment consisting of records with appropriate input attributes and an output attribute to be predicted; the model-building mechanism builds a model in the form of a business measure that can subsequently be applied to make predictions against other like segments.",
	"url": null,
	"owner": "NCR Corporation",
	"publication_number": "06954758",
	"publication_date": "2005-10-11",
	"application_number": "09608496",
	"application_date": "2000-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and system for optimizing a campaign",
	"summary": "",
	"abstract": "Methods and a system of optimizing campaigns are provided. A campaign is identified and associated with a campaign contact list. Moreover, factors which indicate whether a contact during the campaign is a business success or a failure are provided. Further, each contact is associated with one or more demographic attributes. Each completed contact is maintained in a completed contact list and determined to be associated with the success factor or the failure factor of the campaign. A correlation is determined based on at least one of the success factor or the failure factor and one or more of the demographic attributes. A remaining contact list including non completed contacts from the campaign contact list may be sorted based on the determined correlation or logically retrieved and provided to a Call Service Representative.",
	"url": null,
	"owner": "NCR Corporation",
	"publication_number": "06954731",
	"publication_date": "2005-10-11",
	"application_number": "09604503",
	"application_date": "2000-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods for dynamically configuring the cardinality of keyword attributes",
	"summary": "",
	"abstract": "Methods are provided for dynamically configuring the cardinality of keyword attributes. A table definition is received including an identification field, a keyword field and a keyword value field. A first value is inserted into the keyword value field and associated with a first keyword residing in the keyword field. Furthermore, a second value is inserted into the keyword value field and associated with the first keyword. Moreover, a first identification, which is part of the identification field, is associated with the first keyword.",
	"url": null,
	"owner": "NCR Corporation",
	"publication_number": "06895412",
	"publication_date": "2005-05-17",
	"application_number": "09833915",
	"application_date": "2001-04-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Optimizing an exclusion join operation using a bitmap index structure",
	"summary": "",
	"abstract": "A method, computer program and database system are disclosed for performing an exclusion join of at least a first table Tand a second table T, where each of the tables has an associated Star Map, Sand S, respectively. Each Star Map includes bitmap entries having locations indexed by the hash of one or more values associated with one or more join key columns of its associated table. The method, computer program, and database system include a) performing one or more Boolean operations using the bitmap entries of the Star Maps Sand Sto produce bitmap entries in a Star Map SJ where there is a corresponding set bitmap entry in Sand no corresponding set bitmap entry in S; b) using SJ to identify qualifying rows from the first table T; and c) providing the qualifying rows as an exclusion join result.",
	"url": null,
	"owner": "NCR Corporation",
	"publication_number": "06957210",
	"publication_date": "2005-10-18",
	"application_number": "10038783",
	"application_date": "2001-12-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Optimizing an outer join operation using a bitmap index structure",
	"summary": "",
	"abstract": "A method, computer program and database system are disclosed for performing an outer join of at least a first table T1 and a second table T2. The join has join conditions. Each of the tables has an associated Star Map, S1 and S2, respectively. Each Star Map includes bitmap entries which have locations indexed by the hash of one or more values associated with one or more join key columns of its associated table. A bitmap entry in a Star Map, if set, indicates the presence of a row in its associated table that has entries in the one or more join key columns that together hash to the location of the bitmap entry. The method, computer program and database system include a) performing one or more Boolean operations using the bitmap entries of the Star Maps S1 and S2 to produce set bitmap entries in a Star Map SJ where there is a corresponding set bitmap entry in S1 and a corresponding set bitmap entry in S2, b) selecting a row from table T1 and hashing the combined entries in the one or more join key columns of the selected T1 row to identify a bitmap entry in SJ, and c) if the identified bitmap entry in SJ is not set, projecting the selected T1 row with a NULL corresponding to data from table T2. If d) the identified bitmap entry in SJ is set, performing the following: d1) if no row in T2 satisfies the join conditions and has entries in its one or more join key columns that together hash to the location of the identified set bitmap entry in SJ, projecting the selected T1 row and a NULL corresponding to data from table T2, d2) otherwise, for each row from T2 that satisfies the join condition and has entries in its one or more join key columns that together hash to the location of the identified set bitmap entry in SJ, projecting the selected T1 row with data from the row from T2, and e) repeating b)-d) for all rows in T1.",
	"url": null,
	"owner": "NCR Corporation",
	"publication_number": "06957222",
	"publication_date": "2005-10-18",
	"application_number": "10038849",
	"application_date": "2001-12-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mode switching for pen-based computer systems",
	"summary": "",
	"abstract": "A pen-based portable computer system which includes one or more pen-based wireless interface devices that are adapted to communicate by way of a radio link to a remote host personal computer or server. The pen-based wireless interface device is adapted to operate in a pen mode and a mouse mode. In a mouse mode, pen down events are translated to mouse data and formulated into mouse data packets which, in turn, are transmitted over the radio link to the remote host computer or server. In order to enable the wireless interface device to switch to a pen mode, one or more ink field is created within a container application. On power-up, the system comes up in a mouse mode. Pen events within the ink field cause the system to transfer to a pen mode. Pen events within the container application are translated into pen data packets transmitted over the radio link to the remote host computer or server.",
	"url": null,
	"owner": "NEC Corporation",
	"publication_number": "06924790",
	"publication_date": "2005-08-02",
	"application_number": "08784212",
	"application_date": "1997-01-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Active voice messaging",
	"summary": "",
	"abstract": "A method and system for delivering messages to customers/subscribers by u201cpushingu201d the message to the intended recipient(s) in voice form. By utilizing a digitized voice stream that can be routed over a packet switched network, the message can be distributed to multiple recipients cost effectively.",
	"url": null,
	"owner": "Net2Phone, Inc.",
	"publication_number": "06870833",
	"publication_date": "2005-03-22",
	"application_number": "09908653",
	"application_date": "2001-07-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "APPARATUS AND ACCOMPANYING METHODS FOR PROVIDING, THROUGH A CENTRALIZED SERVER SITE, AN INTEGRATED VIRTUAL OFFICE ENVIRONMENT, REMOTELY ACCESSIBLE VIA A NETWORK-CONNECTED WEB BROWSER, WITH REMOTE NETWORK MONITORING AND MANAGEMENT CAPABILITIES",
	"summary": "",
	"abstract": "Apparatus and accompanying methods for use therein for implementing an integrated, virtual office user environment, through an office server(s), through which a remotely stationed user can access typical office network-based applications, including e-mail, file sharing and hosted thin-client programs, through a remotely located network, e.g., WAN, connected web browser. Specifically, a front end, namely a service enablement platform (SEP), to one or more office servers on a LAN is connected to both the WAN and LAN and acts both as a bridge between the user and his(her) office applications and as a protocol translator to enable bi-directional, web-based, real-time communication to occur between the browser and each such application. During initial operation, the SEP, operating under a default profile, establishes, over an analog connection to the WAN, a management session with the site to obtain customer WAN access information, then tears down the analog connection and establishes a broadband WAN connection through which the SEP re-establishes its prior session and obtains a client certificate and its customized profile. The SEP then re-initializes itself to that particular profile.",
	"url": null,
	"owner": "Netilla Networks, Inc.",
	"publication_number": "06920502",
	"publication_date": "2005-07-19",
	"application_number": "09907094",
	"application_date": "2001-07-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Custom content delivery for networked exercise equipment",
	"summary": "",
	"abstract": "Aspects of the present invention, provide customized content to a consumer on a network-enabled exercise device, include providing an exercise device having a display console, the exercise device being connected to a network, receiving user profile information associated with a consumer operating the exercise device, receiving content information identifying available content for display on the display console, the content information including selection criteria for selecting content to be displayed from the available content, selecting content for display to the consumer based on the content information and the user profile information; and presenting an impression of the selected content to the consumer on the display console.",
	"url": null,
	"owner": "Netpulse, LLC",
	"publication_number": "06971973",
	"publication_date": "2005-12-06",
	"application_number": "09866320",
	"application_date": "2001-05-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing application services with controlled access into privileged processes",
	"summary": "",
	"abstract": "A system for providing application services in a computing environment having both user-mode processes and privileged-mode processes. An agent executes in privileged mode and exposes an interface to user-mode processes. A user-mode component is provided with an interface configured to access the agent's exposed interface. A configuration component specifies a list of installable code components that are authorized for installation, wherein the agent will only execute privilege mode functions in response to accesses by the user-mode code component when the installable code component is represented on the list.",
	"url": null,
	"owner": "Network Associates, Inc.",
	"publication_number": "06931546",
	"publication_date": "2005-08-16",
	"application_number": "09651465",
	"application_date": "2000-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Portable computing device and associated method for analyzing a wireless local area network",
	"summary": "",
	"abstract": "Aspects of the invention are found in an apparatus for monitoring data on a wireless network. The data is transmitted according to a wireless data network protocol across the network. The apparatus is contained on a portable wireless network analysis device. The portable wireless network analysis device has a wireless network interface that communicatively couples the portable wireless network analysis device to the wireless network. This allows the portable wireless network analysis device to receive data from the wireless network. The portable wireless network analysis device also has a network traffic analyzer. The network traffic analyzer is communicatively coupled to the wireless network interface. The analyzer receives and analyzes the data received from the wireless network. The portable wireless network analysis device is capable of being operated by user at one location and transported to second location. The portable wireless network analysis device is able to continue to monitor data on the wireless network while being transported from the first location to the second location. The apparatus may also have a user interface. Information about the data may be displayed on the user interface. In a specific instance, the user interface is a display screen. The apparatus can have a storage system. The storage system stores the data when initiated by a user. The apparatus can also have a filter system. The filter system filters the data based on a predefined criteria. The apparatus may have an alarm system. The alarm system indicates when a predefined network event has occurred.",
	"url": null,
	"owner": "Networks Associates Technology Inc.",
	"publication_number": "06879812",
	"publication_date": "2005-04-12",
	"application_number": "10244953",
	"application_date": "2002-09-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for customizing and processing business logic rules in a business process system",
	"summary": "",
	"abstract": "Systems and methods for customizing business logic rules within a business process automation system and for processing business logic rules in a business process automation system are disclosed. The method for customizing business rules of a business logic application generally comprises serving a content page to a client browser of a client by a server that allows entering and modifying of data relating to a business logic rule, generating data by the server according to a predefined format such as a predefined XML format from information received via the content page, and automatically committing the generated data in the predefined format into a database. Preferably, a verification process such as by using DTDs (Document Type Definitions) is performed by the server prior to committing the data. The database stores data including data relating to business logic rules for implementing business logic as entries in the database and the generated data is committed into a corresponding entry in the database. Upon committing, the committed database business rule entry is ready for execution by the business logic application.",
	"url": null,
	"owner": "Networks Associates Technology, Inc.",
	"publication_number": "06868413",
	"publication_date": "2005-03-15",
	"application_number": "09853360",
	"application_date": "2001-05-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for interactive web services",
	"summary": "",
	"abstract": "A system, method, and computer program product are provided for performing one or more tasks on a remotely located computer connected to a server computer via a data network. Communication is established with the remotely located computer to form a connection with the server computer. Software is then delivered to the remotely located computer across the connection. Such software is encapsulated within a markup language communication unit deliverable across the connection. Moreover, the software is adapted for performing the one or more tasks on the remotely located computer. Still yet, the software is executed via a network browser for performing the one or more tasks on the remotely located computer via the network browser.",
	"url": null,
	"owner": "Networks Associates Technology, Inc.",
	"publication_number": "06895513",
	"publication_date": "2005-05-17",
	"application_number": "10677786",
	"application_date": "2003-10-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Comprehensive pain assessment systems and methods",
	"summary": "",
	"abstract": "Systems, devices, and methods are provided for simultaneous assessment of a subject's subjective and objective pain states. These include a dolorimeter arrangement for determining a subject's cutaneous pain tolerance level at any site on the body. In certain preferred embodiments, the dolorimeter is hand-held and utilizes a sonar distance-measuring device. In another aspect, the systems, devices, and methods of the current invention include platforms effective for implementing pain monitoring methods that include delivering pain questionnaires to patients over a period of time points. The platforms may harvest analgesic drug data from nurses attending the patients, and may provide simple statistical analysis of collected data useful both at the bedside and at central base-stations. The platforms may provide additional functions based on analysis of patient pain data. Preferred embodiments of the current invention combine the dolorimeter arrangement with the platforms for implementing pain monitoring methods.",
	"url": null,
	"owner": "Neuroscience Toolworks, Inc.",
	"publication_number": "06929607",
	"publication_date": "2005-08-16",
	"application_number": "09841795",
	"application_date": "2001-04-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for dynamic profiling of users in one-to-one applications and for validating user rules",
	"summary": "",
	"abstract": "A system and method for generating and validating a user profile () for a user based on a static profile () and a dynamic profile () of the user. The method and system compresses the dynamic rules () into aggregated rules so that the user can view a comparatively small number of the aggregated rules and select the desired rules from the aggregated rules based on user-desired criteria. The method and system validates user rules () using a processing device, which are retrieved from a storage device. The user rules are seperated into at least one subset of a user set. Then, it is determined if a particular rule of the at least one subset is one of acceptable, unacceptable and undecided based on a defined criteria (). If the particular rules of the at least one subset are acceptable, the particular rules of the at least one subset are provided (e.g. assigned) to a corresponding user ().",
	"url": null,
	"owner": "New York University",
	"publication_number": "06871186",
	"publication_date": "2005-03-22",
	"application_number": "09554383",
	"application_date": "1998-11-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for efficient generation of texture coordinate displacements for implementing emboss-style bump mapping in a graphics rendering system",
	"summary": "",
	"abstract": "A graphics system including a custom graphics and audio processor produces exciting 2D and 3D graphics and surround sound. The system includes a graphics and audio processor including a 3D graphics pipeline and an audio digital signal processor. Emboss style effects are created using fully pipelined hardware including two distinct dot-product computation units that perform a scaled model view matrix multiply without requiring the Normal input vector and which also compute dot-products between the Binormal and Tangent vectors and a light direction vector in parallel. The resulting texture coordinate displacements are provided to texture mapping hardware that performs a texture mapping operation providing texture combining in one pass. The disclosed pipelined arrangement efficiently provides interesting embossed style image effects such as raised and lowered patterns on surfaces.",
	"url": null,
	"owner": "Nintendo Co., Ltd.",
	"publication_number": "06980218",
	"publication_date": "2005-12-27",
	"application_number": "09726218",
	"application_date": "2000-11-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Video game distribution network",
	"summary": "",
	"abstract": "A video game distribution network for use in airlines, trains, hotels, cruise ships, set top boxes, cable television systems, satellite and other wireless systems or other communications systems, distributes special purpose game binary image files to general purpose computing/display devices. Software emulators running on the general purpose computing/display devices model the game source platform and interpret and/or compile the game files to provide interactive video game play. Software emulators for emulating a handheld video game platform such as GAME BOYu00ae, GAME BOY COLORu00ae and/or GAME BOY ADVANCEu00ae on a low-capability target platform (e.g., a seat-back display for airline or train use, a personal digital assistant, a cell phone) may provide any number of features and optimizations to provide high quality graphics and sound that nearly duplicates the game playing experience on the native platform.",
	"url": null,
	"owner": "Nintendo Co., Ltd.",
	"publication_number": "06884171",
	"publication_date": "2005-04-26",
	"application_number": "09954436",
	"application_date": "2001-09-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for voice messaging",
	"summary": "",
	"abstract": "A method of voice communication including a telephone network including a multiplicity of telephones interconnected by telephone network interconnections is also disclosed.",
	"url": null,
	"owner": "NMS Communications",
	"publication_number": "06907112",
	"publication_date": "2005-06-14",
	"application_number": "09444545",
	"application_date": "1999-11-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and business process to maintain privacy in distributed recommendation systems",
	"summary": "",
	"abstract": "A distributed recommendation system and method are disclosed that provides greater privacy for the user's private data. The method distributes the tasks of a recommendation system between wireless devices and network servers, so as to protect the privacy of end users. The system and method provide greater privacy for context-sensitive, adaptive, user interfaces for Internet service usage by wireless devices. The users wireless device sends a current context-activity pair to a network server in response to either the user's selection of an activity or automatically. The server then responds an appropriate recommendation. Recommendations received from the server by the wireless device are filtered to identify new or significant information. As the system makes new recommendations to users in response to context-activity pairs submitted by their wireless devices, the server gathers the new context-activity pairs and recommendations and adds them to its context-activity pair database.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "06968334",
	"publication_date": "2005-11-22",
	"application_number": "09854635",
	"application_date": "2001-05-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Service mobility and recovery in communication networks",
	"summary": "",
	"abstract": "A method improves mobility and service recovery for a user in a wireless communication network. Service information concerning the user is stored in a registrar. A subscription message is sent from a user terminal to the registrar. A header in the subscription message contains a unique indication. In response to the subscription message containing a unique indication in a header, the registrar returns a notification message to the user terminal. The payload of the notification message includes service information for the user to be used by the user terminal for communication services.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "06885861",
	"publication_date": "2005-04-26",
	"application_number": "09938290",
	"application_date": "2001-08-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for enabling mobile edge services",
	"summary": "",
	"abstract": "A system and method are directed to providing a Mobile Edge Service (MES) in a mobile network. An apparatus configured to enable a smart Gateway General Packet Radio Service (GPRS) Support Node (GGSN) to communicate with an MES application layer such that a service provider may provide a content delivery service, a network service, and an application service to an subscriber. The apparatus is also directed to enabling an interaction between components in the smart GGSN by providing a protocol stack that includes control, data, and management interface.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "06891842",
	"publication_date": "2005-05-10",
	"application_number": "10251660",
	"application_date": "2002-09-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Unbroken primary connection switching between communications services",
	"summary": "",
	"abstract": "A method allows a user of a mobile terminal to switch from a communication service currently active between that mobile terminal and another mobile terminal to a different communication service in such a manner that the end to end connection between terminals appears unbroken to the user. The user initiates the switch by inputting an appropriate command at the mobile terminal. The mobile terminal then transfers a request to the other mobile terminal. The request invokes a user interface on the other mobile terminal and prompts the user of the other mobile terminal to indicate whether or not they agree to switch from the currently active communication service to the other communication service. After receiving the user's response to the prompt, the other mobile terminal sends back a reply indicating the user's response. Signaling to perform the switch is initiated in response to the reply. The active communication service is terminated at the first and second mobile terminal at substantially the same time that the second communication service is initiated at the first and second mobile terminal.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "06879828",
	"publication_date": "2005-04-12",
	"application_number": "10237126",
	"application_date": "2002-09-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for optimizing data transmission in a packet switched wireless data transmission system",
	"summary": "",
	"abstract": "The invention relates to a method for optimizing the transfer of information between one or more applications run in a mobile terminal (MT) and a packet-switched network (NW). There are at least two PDP contexts (PDP-PDP) available in the packet-switched network (NW), which have at least partly different data transfer properties, whereby the PDP contexts (PDP-PDP) can provide at least partly different qualities of service for the transfer of information. In this method at least one application connection is established for at least one of said applications, for which application connection a quality of service is specified. In addition, this method is characterized in that at least one data flow is formed of the information to be transferred in the application connection, and one of the PDP contexts (PDP-PDP) is selected for each data flow of the application connection. The method is also characterized in that when the quality of service specified for the application connection changes, it is examined on the basis of the properties of the PDP contexts (PDP-PDP) available in the packet-switched network (NW) which of the PDP contexts (PDP-PDP) is suitable for use by the application connection with the changed quality of service, and the one of the PDP contexts (PDP-PDP), the data transfer properties of which are closest to the changed quality of service is selected for the application connection.",
	"url": null,
	"owner": "Nokia Mobile Phones Ltd.",
	"publication_number": "06847610",
	"publication_date": "2005-01-25",
	"application_number": "09649770",
	"application_date": "2000-08-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Architecture for multiple channel access to applications",
	"summary": "",
	"abstract": "A system for enabling multiple types of end user devices to access an Internet-based application, the system comprising: an AMI component communicating with the application; a DMI component communicating with the devices; a broker module communicating with the DMI component and with the AMI component, wherein the DMI component converts end data received from the broker module into a format suitable for the devices; the DMI component transmits replies to prompts from the broker module based on an end user's input into the devices; the broker module emulates a sequence of events and decisions followed by the application; the broker module requests application data from the AMI component based on the broker module emulating the application; the AMI component receives requests from the broker module and transmits replies to the requests to the broker module based on original data from the application, the broker module transmits end date to the DMI component, the end data being based on at least one factor chosen from the group comprising: the broker module's emulation of the application; and application data received from the AMI component.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "06961776",
	"publication_date": "2005-11-01",
	"application_number": "09742347",
	"application_date": "2000-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generating and providing alert messages in a communications network",
	"summary": "",
	"abstract": "A notification system is coupled to a plurality of message services including a voice mail server, an email server and an information server in an office. Messages left for a user (e.g. voice mail, email, CRM event, etc.) are deposited in folders maintained by the messaging services. The notification system detects additions to the user's folders and when a new message arrives, the notification system sends an alert to a Wireless Access Protocol (WAP) enabled device (e.g. cell phone) configured for the user. The alert includes the total number of messages of each type received for the user, along with an indication of the most recently received message. The notification system may further monitor an information source for new information that may be of interest to the user (e.g. stock or product price quotes), and provide these in the alert notification if certain conditions are met (e.g. stock price exceeds a threshold).",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "06871214",
	"publication_date": "2005-03-22",
	"application_number": "09753124",
	"application_date": "2000-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hybrid TDM and ATM voice switching central office and method of completing inter-office calls using same",
	"summary": "",
	"abstract": "A hybrid central office for serving a plurality of subscriber lines while serving as a virtual access tandem to a subnetwork of central offices having a connection to an ATM backbone network is described. The hybrid central office includes a computing module having a messaging interface to the ATM network, an inter-working trunk interface to the ATM network and a trunk connection to the PSTN. The hybrid central office serves as a tandem switch for other central offices connected to the subnetwork. Other central offices are preferably connected to the subnetwork by a signal large trunk group. All inter-office call routing is therefore handled by the hybrid central office. The hybrid central office also provides a gateway to the PSTN. Inter-office calls originated and terminated within the subnetwork are set up by the virtual access tandem but after call set up, the virtual access tandem is not involved in the call. The advantage is the utilization of spare processing capacity in a central office to off-load inter-office trunking congestion, as well as a significant reduction in trunking maintenance costs.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "06930998",
	"publication_date": "2005-08-16",
	"application_number": "09206277",
	"application_date": "1998-12-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Intelligent wireless terminal with virtual memory",
	"summary": "",
	"abstract": "A wireless terminal with virtual memory for use in a wireless communications network and a method of using such a wireless terminal is provided. The wireless terminal comprises a transceiver for receiving and transmitting information over an active wireless link with the communications network, virtual memory to store information received over the wireless link with the communications network and display means to view the information stored in the virtual memory without requiring the active wireless link with the communications network. The method of using the wireless terminal with virtual memory comprises the steps of downloading data from a server over an active wireless link to the virtual memory of the wireless terminal and accessing the data stored in the virtual memory at the wireless terminal without requiring the active wireless link.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "06973300",
	"publication_date": "2005-12-06",
	"application_number": "09220016",
	"application_date": "1998-12-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interface method and system for accessing inner layers of a network protocol",
	"summary": "",
	"abstract": "A method of performing network communications includes receiving a datagram for transmitting information over a network, selecting a layer in a network protocol stack to establish communication over the network using an inner layer application programming interface (IL API), establishing an inner layer socket at the selected network layer using the IL API without accessing other layers in the layered network protocol stack, and transmitting the datagram packet over the selected layer using the inner layer socket.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "06845397",
	"publication_date": "2005-01-18",
	"application_number": "09753019",
	"application_date": "2000-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for automatically configuring a network switch",
	"summary": "",
	"abstract": "A method and apparatus for automatically configuring a network switch having external network data ports, a processor, and memory. Network data is monitored on the external network data port. Information about the network data traffic is compared to one or more threshold conditions. The network switch is automatically configured if the network data meets one of the threshold conditions. The monitor and configuration functions can be performed by software running on the processor which has been downloaded from an external network maintenance station through a maintenance data port. Information about the network data traffic can be uploaded to the external network maintenance station through a maintenance data port.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "06850989",
	"publication_date": "2005-02-01",
	"application_number": "09716809",
	"application_date": "2000-11-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and computer system for managing data exchanges among a plurality of network nodes in a managed packet network",
	"summary": "",
	"abstract": "A residential access node (RAN) running a RAN platform  which includes means for interfacing a plurality of peripheral equipment such as analog (POTS) phones , standard televisions , computers , IP telephones , and high definition televisions  to a packet data network . The Network Access Provider RAN platform  manages sessions among Customer Premises RAN platforms  and Application Service Provider RAN platforms  over high bandwidth connections. The Customer Premises RAN platform  also determines the number and type of data packets entering or departing via the packet data network . Such an architecture allows for the efficient transfer of services (data content) from Application Service Providers to individual network access subscribers by seamlessly accommodating various data types and providing an integrated metering and billing mechanism managed by the Network Access Provider.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "06938080",
	"publication_date": "2005-08-30",
	"application_number": "09589414",
	"application_date": "2000-06-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for accessing low-level resources in a network device",
	"summary": "",
	"abstract": "A method and system provides access to information about a resource associated with a network device. The method and system selects a layer for communicating with the requested resource associated with the network device in a network protocol stack having multiple layers, establishes an inner layer socket for communicating at the selected layer using an inner layer application programming interface (IL API) and a socket identifier associated with the requested resource, wherein the inner layer socket communicates using the selected layer and bypasses other layers in the network protocol stack, transmits the request for information about the resource through the inner layer socket and the socket identifier, receives the information about the resource in response to the transmission made through the inner layer socket, and passes the information about the resource through the inner layer socket to the application making the request.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "06976054",
	"publication_date": "2005-12-13",
	"application_number": "09753359",
	"application_date": "2000-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for activity responsive telemarketing",
	"summary": "",
	"abstract": "A method of alerting a telemarketing agent of a promotion opportunity in response to activity of a potential customer browsing a public server and an apparatus for monitoring the customer activity and alerting the telemarketing agent includes a telemarketing analysis server, computer telephony hardware and a server for controlling the computer telephony hardware. The apparatus further includes software on the public server for collecting data relating to the activity of potential customers browsing the public server.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "06965870",
	"publication_date": "2005-11-15",
	"application_number": "08997990",
	"application_date": "1997-12-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for communications between different types of devices",
	"summary": "",
	"abstract": "A communications system includes a packet-based data network coupled to various network elements, including a gateway that provides ports to various peripheral devices. One type of peripheral device includes a Universal Serial Bus (USB) device. A network element coupled to the data network may establish Session Initiation Protocol (SIP) sessions with the gateway. Once a SIP session is established, communications may occur between the network element and the peripheral device. SIP messaging is exchanged between the network element and the gateway. USB commands and data are exchanged between the gateway and the USB device. The gateway converts between the SIP messaging and the USB commands and data.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "06965614",
	"publication_date": "2005-11-15",
	"application_number": "09557530",
	"application_date": "2000-04-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for forming skeletons for generating verification systems",
	"summary": "",
	"abstract": "A verification system for a procedure interface is generated by using formal specifications of the procedure interface and generating test suites. The test suites are generated from the formal specifications and templates or skeletons which are used to generate an element of a verification system. The skeletons are generated based on decomposition of test suits.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "06898784",
	"publication_date": "2005-05-24",
	"application_number": "09663568",
	"application_date": "2000-09-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network device application programming interface",
	"summary": "",
	"abstract": "An application programming interface for use in a network device includes at least one control module that is capable of controlling a forwarding plane of the network device. In particular, the network device forwards packets across a network, and includes the forward plane for processing data packets. The application programming interface includes an input module that receives function calls, at least one control module (mentioned above) that receives input control data via the function calls, and an output module that forwards output control data from the control module. The control module produces the output control data based upon the input control data. The output control data is capable of controlling execution of the forwarding plane.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "06957438",
	"publication_date": "2005-10-18",
	"application_number": "09536078",
	"application_date": "2000-03-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Server for handling multimodal information",
	"summary": "",
	"abstract": "To integrate telephony with Web-based information services, and develop multi-modal telephony applications that combine graphical input and output with traditional speech-based user interfaces, a Web server for handling information which is in these different modal forms, has an internet interface for supporting connections on the internet, and a terminal interface for supporting connections from the server to user terminals, and for passing information in at least one of the modal forms. A service controller controls input or output of the information on the interfaces, and processes the information received from or sent to either interface, according to its modal form.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "06859451",
	"publication_date": "2005-02-22",
	"application_number": "09062969",
	"application_date": "1998-04-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for dynamically varying integrated services digital network (isdn) interface bandwidth",
	"summary": "",
	"abstract": "A method for dynamically varying bandwidth of a primary rate ISDN interface includes requesting, over a data (D) channel, allocation of at least one first B channel of the primary rate ISDN interface. When notification of allocation of the first B channel is received, over the D channel, data is sent over the first B channel. A relationship is monitored between a first bandwidth demand parameter and first and second threshold values. If a predetermined relationship exists between the first bandwidth demand parameter and the first threshold value, allocation of at least one second B channel of the primary rate ISDN interface is requested. In response to receiving notification of allocation of the second channel, data is sent over the second B channel. The second B channel is released in response to a relationship between the first bandwidth demand parameter and a second threshold. A hyper primary rate ISDN interface (HPRI) defines a virtual primary rate interface (PRI) that does not include a predetermined number of B channels. A bandwidth user can statically request any number of the available bearer channels. Alternatively, B channels can be dynamically allocated or de-allocated based on demand.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "06973037",
	"publication_date": "2005-12-06",
	"application_number": "09564971",
	"application_date": "2000-05-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Voice mail caller identification",
	"summary": "",
	"abstract": "A notification system for providing unified alerts about messages left for a user in a communication system is coupled to a voice mail service in an office. When voice mail messages are left for a user, the voice mail service sends header information about the new message to the notification system. The notification system sends a notification of the new messages to a wireless device configured and selected by the user for receiving message notifications. Depending on the type of wireless device, the notification may include a link to a dialer application with which the wireless device can be connected to the voice mail service for selectively listening to the messages of interest. From the new message, the notification system may further extract information about the message sender, and use it to attempt to retrieve the sender's name from the user's personal contact list, for example. This information can then be included in the message header information sent to the user.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "06970906",
	"publication_date": "2005-11-29",
	"application_number": "09753025",
	"application_date": "2000-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed open architecture for media and telephony services",
	"summary": "",
	"abstract": "A server provides media and telephony services in a telecommunications network. The server has a distributed, object-oriented software architecture, allowing client applications to access resources located anywhere in the network. The server provides interfaces to media and telephony resources so that client applications, which may access the server through an IP data network, can access the resources. The software architecture framework is provided by Common Object Request Broker Architecture (CORBA).",
	"url": null,
	"owner": "Nortel Networks, Ltd",
	"publication_number": "06965925",
	"publication_date": "2005-11-15",
	"application_number": "09223972",
	"application_date": "1998-12-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for reliable multicast data distribution over an unreliable packet switched network",
	"summary": "",
	"abstract": "A system, computer program and method to multicast messages to workstations in a network (). The system uses an MDP database table () which stores the parameters used to manage transmission and reception of multicast messages in the network (). An MDP server initialization module () executing on a server reads the parameters from the MDP database table () and initialize an MDP session. The system also uses an MDP client initialization module () to read the necessary parameters in the MDP database table () and initialize an MDP session in a client workstation that receives multicast messages. An MDP server operations module () is used to receive requests to transmit messages and transmit repair packets to a workstation designated as action workstations when a negative acknowledgment is received. An MDP client operations module () receives messages transmitted by the MDP server operations module only transmits a negative acknowledgment to a server upon receipt of an MDP information packet if the workstation is designated as an info only workstation in the MDP information packet.",
	"url": null,
	"owner": "Northrop Grumman Corporation",
	"publication_number": "06952733",
	"publication_date": "2005-10-04",
	"application_number": "09608614",
	"application_date": "2000-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for exposing network administration stored in a directory using HTTP/WebDAV protocol",
	"summary": "",
	"abstract": "A method and system to manipulate network objects by using Internet authoring, collaboration and versioning tools is described. The method includes: receiving a request for a manipulation of a first network object from a requesting user; verifying a first set of authorization information; translating a logical address of the first network object to a physical file system path; checking a local file system for validity and authorization for the requesting user including determining whether the first network object is a first network object; verifying a username and a password for the requesting user; returning a first error message if requesting user is unauthorized to access the first network object; determining an object type for the first network object; and sending a response to the requesting user. The method can also include verifying that the first network object is found and returning a second error message if the first network object is not found. The first network object can be user object and the request can be to assign new rights to the user object. The new rights for the user can also be for another network object. The new rights can be assigned by dragging and dropping the user object on another network object by the use of interactive computer screen.",
	"url": null,
	"owner": "Novell, Inc.",
	"publication_number": "06947991",
	"publication_date": "2005-09-20",
	"application_number": "09394590",
	"application_date": "1999-09-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for partitioning address space in a proxy cache server cluster",
	"summary": "",
	"abstract": "A proxy partition cache (PPC) architecture and a technique for address-partitioning a proxy cache consisting of a grouping of discrete, cooperating caches (servers) is provided. Client requests for objects (files) of a given size are redirected or reassigned to a single cache in the grouping, notwithstanding the cache to which the request is made by the load-balancing mechanism (such as a Layer 4 switch) based upon load-balancing considerations. The file is then returned to the switch via the switch-designated cache for vending to the requesting client. The redirection/reassignment occurs according to a function within the cache to which the request is directed so that the switch remains freed from additional tasks that can compromise speed.",
	"url": null,
	"owner": "Novell, Inc.",
	"publication_number": "06862606",
	"publication_date": "2005-03-01",
	"application_number": "09877918",
	"application_date": "2001-06-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Communication socket migration among different devices",
	"summary": "",
	"abstract": "A socket migration architecture for migrating a communication socket among host devices comprises a plurality of migrateable sockets each operating in conjunction with one of a plurality of applications on a plurality of host devices. Each of the applications may utilize a respective migrateable socket to establish peer-to-peer communications with at least one other application. Upon establishment of such communications, the migrateable sockets may form an association link between migrateable sockets operating on different host devices. When a first application and respective first migrateable socket are migrated from a first host device to a second host device, at least one association link established prior to the migration may be used to re-established peer-to-peer communications as part of the migration event.",
	"url": null,
	"owner": "NTT Docomo, Inc.",
	"publication_number": "06920501",
	"publication_date": "2005-07-19",
	"application_number": "10022714",
	"application_date": "2001-12-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing and using universally accessible voice and speech data files",
	"summary": "",
	"abstract": "A system and method provides universal access to voice-based documents containing information formatted using MIME and HTML standards using customized extensions for voice information access and navigation. These voice documents are linked using HTML hyper-links that are accessible to subscribers using voice commands, touch-tone inputs and other selection means. These voice documents and components in them are addressable using HTML anchors embedding HTML universal resource locators (URLs) rendering them universally accessible over the Internet. This collection of connected documents forms a voice web. The voice web includes subscriber-specific documents including speech training files for speaker dependent speech recognition, voice print files for authenticating the identity of a user and personal preference and attribute files for customizing other aspects of the system in accordance with a specific subscriber.",
	"url": null,
	"owner": "Nuance Communications",
	"publication_number": "06885736",
	"publication_date": "2005-04-26",
	"application_number": "10057508",
	"application_date": "2002-01-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Depth-of-field effects using texture lookup",
	"summary": "",
	"abstract": "A graphical processing unit (GPU) and methods for rendering a three-dimensional (3D) scene generated in a field of view having in-focus and out-of-focus regions on a two-dimensional (2D) screen region of pixels are described. One method includes initially rendering the scene to create color and depth texture maps and creating mip-map layers for the color texture map. The method further comprises subsequently rendering the scene by, for each pixel: creating a mip-map layer selection value as a function of a depth of the pixel from the depth texture map, generating a color value by interpolation using color values from at least one of the mip-map layers chosen according to the mip-map layer selection value, and setting a color of the pixel to the generated color texture.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "06975329",
	"publication_date": "2005-12-13",
	"application_number": "10314877",
	"application_date": "2002-12-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Graphics processing unit self-programming",
	"summary": "",
	"abstract": "A method of self-programming a graphics processing unit (GPU) includes receiving a blit instruction defining a blit operation and storing a first control value in a control register, which determines the behavior of the GPU, using the blit operation. The blit instruction is read by the GPU from a command buffer asynchronously with the CPU. The blit operation is applied to a second control value to determine the first control value. The second control value can be stored in a memory, such as a second control register or a table of control values accessed by an index value. In one application, the second control value is a starting memory address for a display buffer, while in another application, second control value is a clip plane distance. The blit operation can include a copy operation, a colorkey operation, a logic operation, and/or a pattern copy operation on the first control value.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "06952217",
	"publication_date": "2005-10-04",
	"application_number": "10627376",
	"application_date": "2003-07-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integrated tessellator in a graphics processing unit",
	"summary": "",
	"abstract": "An integrated graphics pipeline system is provided for graphics processing. Such system includes a tessellation module that is positioned on a single semiconductor platform for receiving data for tessellation purposes. Tessellation refers to the process of decomposing either a complex surface such as a sphere or surface patch into simpler primitives such as triangles or quadrilaterals, or a triangle into multiple smaller triangles. Also included on the single semiconductor platform is a transform module adapted to transform the tessellated data from a first space to a second space. Coupled to the transform module is a lighting module which is positioned on the single semiconductor platform for performing lighting operations on the data received from the transform module. Also included is a rasterizer coupled to the lighting module and positioned on the single semiconductor platform for rendering the data received from the lighting module.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "06906716",
	"publication_date": "2005-06-14",
	"application_number": "10418364",
	"application_date": "2003-04-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for modifying depth values using pixel programs",
	"summary": "",
	"abstract": "A method and apparatus for generating depth values in a programmable graphics system. Depth values are calculated under control of a pixel program using a variety of sources as inputs to programmable computation units (PCUs) in the programmable graphics systems. The PCUs are used to compute traditional interpolated depth values and modified depth values. Th PCUs are also used to compute arbitrary depth values which, unlike traditional interpolated depth values and modified depth values, are not dependent on the coordinates of the geometry primitive with which the arbitrary depth values are associated. Several sources are available as inputs to the PCUs. Clipping with optional clamping is performed using either interpolated depth values or calculated depth values, where calculated depth values are arbitrary depth values or modified depth values. Final depth values, used for depth testing, are selected from interpolated depth values and arbitrary depth values after clipping is performed.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "06864893",
	"publication_date": "2005-03-08",
	"application_number": "10302464",
	"application_date": "2002-11-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for power management of graphics processors and subsystems that allow the subsystems to respond to accesses when subsystems are idle",
	"summary": "",
	"abstract": "A graphics processing device implementing a set of techniques for power management, preferably at both a subsystem level and a device level, and preferably including peak power management, a system including a graphics processing device that implements such a set of techniques for power management, and the power management methods performed by such a device or system. In preferred embodiments, the device includes at least two subsystems and hardware mechanisms that automatically seek the lowest power state for the device that does not impact performance of the device or of a system that includes the device. Preferably, the device includes a control unit operable in any selected one of multiple power management modes, and system software can intervene to cause the control unit to operate in any of these modes.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "06938176",
	"publication_date": "2005-08-30",
	"application_number": "09972414",
	"application_date": "2001-10-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing an integrated virtual disk subsystem",
	"summary": "",
	"abstract": "A novel network architecture that integrates the functions of an internet protocol (IP) router into a network processing unit (NPU) that resides in a host computer's chipset such that the host computer's resources are perceived as separate network appliances. In one embodiment, functions previously performed by a complex disk controller are now integrated into a storage processing unit (SPU) that can also be deployed on the same chipset, where the SPU serves as an overall file and disk management processor.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "06920484",
	"publication_date": "2005-07-19",
	"application_number": "10144659",
	"application_date": "2002-05-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "User programmable geometry engine",
	"summary": "",
	"abstract": "A programmable geometry engine is described. One embodiment of the programmable geometry engine includes a programmable primitive engine configured to receive primitive commands that include information for processing vertex data using user-developed programs or subroutines. The programmable primitive engine also is configured to transmit program commands that include program pointers and data pointers. In addition, the programmable geometry engine includes a processing engine configured to receive the program commands. The processing engine is further configured to retrieve the user-developed programs or subroutines using the program pointers and to retrieve vertex data using the data pointers. Also, the processing engine is configured to process the vertex data based on instructions included in the user-developed programs or subroutines to produce processed vertex data and to transmit results to the programmable primitive engine.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "06900810",
	"publication_date": "2005-05-31",
	"application_number": "10727822",
	"application_date": "2003-12-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for translating natural-language speech using multiple output phrases",
	"summary": "",
	"abstract": "A multi-lingual translation system that provides multiple output sentences for a given word or phrase. Each output sentence for a given word or phrase reflects, for example, a different emotional emphasis, dialect, accents, loudness or rates of speech. A given output sentence could be selected automatically, or manually as desired, to create a desired effect. For example, the same output sentence for a given word or phrase can be recorded three times, to selectively reflect excitement, sadness or fear. The multi-lingual translation system includes a phrase-spotting mechanism, a translation mechanism, a speech output mechanism and optionally, a language understanding mechanism or an event measuring mechanism or both. The phrase-spotting mechanism identifies a spoken phrase from a restricted domain of phrases. The language understanding mechanism, if present, maps the identified phrase onto a small set of formal phrases. The translation mechanism maps the formal phrase onto a well-formed phrase in one or more target languages. The speech output mechanism produces high-quality output speech. The speech output may be time synchronized to the spoken phrase using the output of the event measuring mechanism.",
	"url": null,
	"owner": "OIPENN, Inc.",
	"publication_number": "06859778",
	"publication_date": "2005-02-22",
	"application_number": "09526985",
	"application_date": "2000-03-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for managing object to relational one-to-many mapping",
	"summary": "",
	"abstract": "Instructions are generated to manipulate target objects and relationships in a relational database when a source object having a one-to-many relationship of privately owned type with the target objects is manipulated. To generate instructions, mapping meta-data is used which contains information as to how object classes of the object model map to tables in the database and how relationships map to foreign keys.",
	"url": null,
	"owner": "Oracle International Corp.",
	"publication_number": "06907433",
	"publication_date": "2005-06-14",
	"application_number": "09920789",
	"application_date": "2001-08-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Accessing data stored at an intermediary from a service",
	"summary": "",
	"abstract": "A method and apparatus for providing a network based operating system for mobile clients is disclosed. Services may be developed that can be used to support different client devices with different capabilities. The services provide output with multiple variations based on different devices, and an intermediary selects the variation best suited for the requesting device. An online software development system is provided to allow services to create, edit, test, and deploy applications at an intermediary using only a browser at the client end. Services may also be provided that can be accessed and referred to by other services, thereby facilitating the combining of different services. Services may also store and access data at an intermediary using variables and a mapping of the stored data to the variables. Data stored at the intermediary may be used to allow an end user to return to a previously accessed service.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "06954751",
	"publication_date": "2005-10-11",
	"application_number": "09948135",
	"application_date": "2001-09-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data mining application programming interface",
	"summary": "",
	"abstract": "An application programming interface, computer program product implementing the application programming interface, and a system implementing the application programming interface, which provides an advanced interface including support for hierarchical and object-oriented programming languages and sophisticated programming language constructs, and does not need to be integrated using additional tools. The application programming interface for providing data mining functionality comprises a first layer providing an interface with an application program, and a second layer implementing data mining functionality, the second layer comprising a mining object repository maintaining data mining metadata, a plurality of mining project objects each mining project object containing data mining objects created and used by a user, a plurality of mining session objects, each mining session object containing data mining processing performed on behalf of a user, a plurality of data mining tables, each data mining table mapping a table or a view in a database, a plurality of data transformation objects, each data transformation object defining computations or manipulations to be performed on data in the database, a plurality of data mining models, each data mining model implementing conditions and decisions, and a plurality of data mining result objects, each data mining result object generated as a result of scoring or analyzing a data mining model or an input dataset.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "06865573",
	"publication_date": "2005-03-08",
	"application_number": "09915286",
	"application_date": "2001-07-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Delivering a graphical object to a browser",
	"summary": "",
	"abstract": "Techniques are provided for delivering a graphical object to a browser including the steps of receiving a request that requires delivery of the graphical object to the browser, wherein the graphical object is not a table; and in response to the request, generating a script which, when executed by the browser, causes the browser to render the graphical object as a particular table.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "06922200",
	"publication_date": "2005-07-26",
	"application_number": "09997759",
	"application_date": "2001-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamically extensible rule-based expert-system shell for database-computing environments",
	"summary": "",
	"abstract": "A computer-implemented method for flexibly and efficiently representing and applying business rules in a transaction-processing relational database management system (RDBMS) environment. The method includes providing a deterministic rule-based expert-system shell. A late-binding mechanism within the RDBMS environment is also provided. An extensible data-maintenance mechanism is created for the rule-based expert-system shell. The extensible data-maintenance mechanism maintains sets of approval rules governing business transactions generated by other transaction-processing applications. The data-maintenance mechanism uses late binding to make the sets of rules and rule components stored in the data-maintenance mechanism arbitrarily extensible. A rule-processing engine applies the sets of approval rules stored in the extensible data-maintenance mechanism to business transactions originating in transaction-processing applications. The method provides for a plurality of approval-rule types, each making a qualitatively different contribution to the list of approvers required for any given business transaction. The method calculates the list of approvers required for a given business transaction by applying the appropriate set of approval rules to the transaction.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "06847957",
	"publication_date": "2005-01-25",
	"application_number": "09921182",
	"application_date": "2001-08-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "File system that supports transactions",
	"summary": "",
	"abstract": "Techniques are provided for performing file operations. According to one technique, a file system interface is exposed to applications. The file system interface includes routines for saving and retrieving files. Calls to perform a plurality of file operations are received through the file system interface. The plurality of file operations are performed as a single transaction by performing the steps of: if all file operations of the plurality of file operations are completed without a failure, then making permanent all changes made by the plurality of file operations; and if any file operations of the plurality of file operations fail, then undoing all changes made by all of the plurality of file operations.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "06922708",
	"publication_date": "2005-07-26",
	"application_number": "09571496",
	"application_date": "2000-05-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Lightweight data replication",
	"summary": "",
	"abstract": "A lightweight row transfer protocol is described that can be easily handled by thin clients, such as JAVAu2122 applications using CORBA. The lightweight row transfer protocol serves to reduce bandwidth requirements by applying compression techniques to reduce the number of column lengths in a u201cresult setu201d of rows that are transmitted from one computer to another.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "06847971",
	"publication_date": "2005-01-25",
	"application_number": "09321622",
	"application_date": "1999-05-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for scrollable cursors",
	"summary": "",
	"abstract": "A method and system for implementing scrollable cursors is described. A multi-tier caching structure is maintained, in which a partial result set is cached at the client computer and a more-complete result set is cached at the server computer. If the cursor is scrolled in either the forward or backward directions, the partial result set cached at the client computer is first checked to see if requested data is present. If so, then the requested data is fetched from the client cache and the current position of the cursor is moved to the appropriate position in the result set. If the requested data is not present in the client cache, then those data items are fetched from the cache at the server computer.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "06973457",
	"publication_date": "2005-12-06",
	"application_number": "10144665",
	"application_date": "2002-05-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Techniques for managing multiple hierarchies of data from a single interface",
	"summary": "",
	"abstract": "Techniques for managing multiple hierarchies of data from a single native hierarchy include registering a set of routines for each foreign hierarchy. The set of routines performs a set of operations on data in the hierarchy associated with a node. A user request is received, which indicates a particular operation on particular data that does not correspond to a node of the native hierarchy. Based on the user request, a first operation on a first set of one or more nodes of a first hierarchy that is not the native hierarchy is determined. A particular routine that corresponds to the first operation is selected from a first set of routines registered for the first hierarchy, and is invoked. These techniques allow a user to employ a consistent interface with the native hierarchy to reach data in any of the hierarchies.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "06947950",
	"publication_date": "2005-09-20",
	"application_number": "10305990",
	"application_date": "2002-11-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Techniques for peer-to-peer replication of objects in a relational database",
	"summary": "",
	"abstract": "Techniques for replicating a database object of a relational database managed by a database system from a first node on a network to a second node on the network include determining that the database object on the first node includes a user-defined object. A first routine of the database system is invoked. The first routine performs the step of copying the database object to the second node of the network. The first routine copies a name of a user-defined defined type of the user-defined object from the first node to the second node. The first routine also copies a first definition of the user-defined type from the first node to the second node. The first routine then copies a second definition of the database object from the first node to the second node. The second definition includes the name of the user-defined type. These techniques provide the benefits of peer-to-peer replication in a distributed database to users of object-relational databases that including user-defined objects.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "06889229",
	"publication_date": "2005-05-03",
	"application_number": "09968617",
	"application_date": "2001-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web request broker controlling multiple processes",
	"summary": "",
	"abstract": "A web server configured to respond to client requests over a network such as the World Wide Web includes a web listener having a Hypertext Transfer Protocol (HTTP) daemon, a plurality of extension programs configured to perform respective operations, and a web request broker configured to identify one of the programs for responding to a client request, and determine the availability of an instance of the identified program. The web request broker maintains control of multiple instances of each server extension program to provide enhanced server operation without overwhelming server resources. The web request broker maintains a minimum number of instances of the identified program in memory, each executed in its own address space. The web request broker determines whether an available instance of the identified program is available from an existing number of instances, and selectively initiates a new instance of the program if no other instance is available. If no instance is available and the existing number of instances exceeds the maximum prescribed number, then the web request broker returns the reply to the web listener to send a reply over the network that the request was not processed.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "06845505",
	"publication_date": "2005-01-18",
	"application_number": "08794269",
	"application_date": "1997-02-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Audio compression in a wireless remote interface tablet",
	"summary": "",
	"abstract": "A system which includes a personal computer or a server adapted to be connected by way of a radio link to one or more wireless interface devices. Each of the wireless interface devices is configured to support multimedia applications and may include a speaker, as well as a microphone, for audio input. Audio input data is compressed and transmitted over a radio link to a remote computer or server.",
	"url": null,
	"owner": "Packard Bell NEC",
	"publication_number": "06963783",
	"publication_date": "2005-11-08",
	"application_number": "08784141",
	"application_date": "1997-01-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing flexible access and retrieval of sequence data from a plurality of biological data repositories",
	"summary": "",
	"abstract": "A system and method for providing flexible access and retrieval of sequence data from a plurality of biological data repositories is described. A plurality of biological data repositories are maintained. Each data repository contains sequence data stored into structured records uniquely identified. Each data repository is interfaced through a queue handler dynamically locating and selecting at least one such biological data repository and launching a search query against each selected biological data repository. Search query parameters are accepted from a user specifying a search request for a sequence set. Results obtained from a search engine are presented as ordered tables of search results.",
	"url": null,
	"owner": "PhenoGenomics Corporation",
	"publication_number": "06920396",
	"publication_date": "2005-07-19",
	"application_number": "09960877",
	"application_date": "2001-09-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for transacting and manipulating a multi-sequence search using biological data repositories",
	"summary": "",
	"abstract": "A system and method for transacting and manipulating a multi-sequence search using a biological data repository is described. A set of search query parameters specifying a plurality of sequence sets is received. Each sequence set encodes structured biological data values. A search queue is loaded with the search query parameters formatted into a structured database query for each sequence set assigned by search type. A search of the biological data repository is launched for each sequence set. Search results generated responsive to each such structured database query search are retrieved. The search results are received as sequence set information organized and reformatted for each sequence set and search type. A plurality of sequences are aligned using the search results based on one or more structured biological data values having matching characteristics. The aligned sequences are forwarded with matching characteristics indicators.",
	"url": null,
	"owner": "PhenoGenomics Corporation",
	"publication_number": "06922638",
	"publication_date": "2005-07-26",
	"application_number": "10354581",
	"application_date": "2003-01-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for digital content processing and distribution",
	"summary": "",
	"abstract": "A publication system, method and apparatus simplifies end-to-end planning, building and printing of publications. The present invention allows a publication's audience and other third parties to submit content while allowing producers to collaboratively manipulate, proof and print the publication. The present invention provides in part a planning and budgeting tool that assists the producers in the initial stages of publication. The present invention can further provide a tool for custom publication development and loyalty marketing. In one embodiment, the invention can accept advertisement submissions electronically, and can afford advertisers the opportunity to receive exposure to potential consumers electronically during production.",
	"url": null,
	"owner": "PhoChron, Inc.",
	"publication_number": "06898601",
	"publication_date": "2005-05-24",
	"application_number": "10444341",
	"application_date": "2003-05-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for securely utilizing basic input and output system (BIOS) services",
	"summary": "",
	"abstract": "In accordance with one aspect of the current invention, the system comprises a memory for storing instruction sequences by which the processor-based system is processed, where the memory includes a physical memory and a virtual memory. The system also comprises a processor for executing the stored instruction sequences. The stored instruction sequences include process acts to cause the processor to: map a plurality of predetermined instruction sequences from the physical memory to the virtual memory, determine an offset to one of the plurality of predetermined instruction sequences in the virtual memory, receive an instruction to execute the one of the plurality of predetermined instruction sequences, transfer control to the one of the plurality of predetermined instruction sequences, and process the one of the plurality of predetermined instruction sequences from the virtual memory. In accordance with another aspect of the present invention, the system includes an access driver to generate a service request to utilize BIOS services such that the service request contains a service request signature created using a private key in a cryptographic key pair. The system also includes an interface to verify the service request signature using a public key in the cryptographic key pair to ensure integrity of the service request.",
	"url": null,
	"owner": "Phoenix Technologies Ltd.",
	"publication_number": "06892304",
	"publication_date": "2005-05-10",
	"application_number": "09679450",
	"application_date": "2000-10-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for digital document processing",
	"summary": "",
	"abstract": "Display technologies that separate the underlying functionality of an application program from the graphical display process, thereby eliminating or reducing the application's need to control the device display and to provide graphical user interface tools and controls for the display. Additionally, such systems reduce or eliminate the need for an application program to be present on a processing system when displaying data created by or for that application program, such as a document or video stream. Thus it will be understood that in one aspect, the systems and methods described herein can display content, including documents, video streams, or other content, and will provide the graphical user functions for viewing the displayed document, such as zoom, pan, or other such functions, without need for the underlying application to be present on the system that is displaying the content. The advantages over the prior art of the systems and methods described herein include the advantage of allowing different types of content from different application programs to be shown on the same display within the same work space.",
	"url": null,
	"owner": "Picsel Technologies Limited",
	"publication_number": "06925597",
	"publication_date": "2005-08-02",
	"application_number": "09835679",
	"application_date": "2001-04-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for distributing it management practice information",
	"summary": "",
	"abstract": "An information technology (IT) management practice knowledge portal provisions first information pages associated with IT management practices for retrieval. One or more IT management practice knowledge associates provision second information pages associated with IT management practices, and associate the second information pages with the first information pages to facilitate retrieval of the second information pages. Further, management features of an IT management application are associated with the first information pages to enable users of the management features to determine corrective actions to identified problems using IT management practice information provided by selected ones of the first as well as the second information pages.",
	"url": null,
	"owner": "Prosight, Ltd.",
	"publication_number": "06917921",
	"publication_date": "2005-07-12",
	"application_number": "09584015",
	"application_date": "2000-05-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Industry simulation environment",
	"summary": "",
	"abstract": "An apparatus and method for simulating a global industrial environment. In one embodiment, the global industrial environment models a global economy as a set of interlinked economies, models a management framework as a set of interlinked management functionalities, and models both individual and organizational behaviors through a use of a set of interlinked agents. In another embodiment, operational data independent from the interlinked economies, interlinked management functionalities, and interlinked agents is customized at run-time. In another embodiment, individuals are electronically trained in a synthetic environment for analysis and simulation of a global industrial system. In this embodiment, the environment includes a virtual execution environment, a pre-exercise briefing, one or more rounds of exercise-time activity, and a post-game analysis.",
	"url": null,
	"owner": "Purdue Research Foundation",
	"publication_number": "06931365",
	"publication_date": "2005-08-16",
	"application_number": "10023417",
	"application_date": "2001-12-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for extensible data processing",
	"summary": "",
	"abstract": "A system and method of assembling an application for processing image or image-derived data is disclosed. The system includes a base operator configured to interface with one or more derivative operator classes, each operator class including an operator object for executing a processing function on the image or image-derived data. A base multiport node class is provided, which is configured to provide a multiport node for each operator object. The multiport nodes instantiates a pluggable operator for connecting the multiport nodes together at runtime according to user-defined parameters. The connection of multiport nodes implements the processing functions of the operator objects to execute the application.",
	"url": null,
	"owner": "Q3DM, LLC",
	"publication_number": "06886168",
	"publication_date": "2005-04-26",
	"application_number": "09766390",
	"application_date": "2001-01-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for piggybacking data across an open data channel of a wireless device",
	"summary": "",
	"abstract": "A system, method, and program for transmitting data across an idle open communication channel from a wireless device. The wireless device includes a computer platform and a plurality of device resources that selectively utilize a open communication channel to communicate with other devices across the network, and each device resource selectively requests notification of an idle open communication channel, and all device resources that have requested such notification are notified upon an idle open communication channel occurring, and each notified device resource can selectively transmit data across the open communication channel prior to closure thereof.",
	"url": null,
	"owner": "Qualcomm Inc.",
	"publication_number": "06862452",
	"publication_date": "2005-03-01",
	"application_number": "10226029",
	"application_date": "2002-08-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Adaptive transport TCP/IP phone management",
	"summary": "",
	"abstract": "A wireless communication device, comprising one or more intra-device modules, an internet protocol (IP) router for providing inter-device connectivity between a host and the intra-device modules, and one or more transport mechanisms, for coupling the IP router to the host. One or more intra-device modules are accessed via a standard internetwork protocol as if the intra-device modules were local servers.",
	"url": null,
	"owner": "Qualcomm Incorporated",
	"publication_number": "06847819",
	"publication_date": "2005-01-25",
	"application_number": "09494786",
	"application_date": "2000-01-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing messages on a wireless device connecting to an application server",
	"summary": "",
	"abstract": "A system and method for providing a message on the graphic display of a wireless device while the wireless device is connecting to an application download server across a wireless network. When the wireless device attempts to communicate with an application download server or changes files while navigating an application download server, a message is transmitted across the wireless network to the computer platform of the wireless device and displayed to the user of the wireless device. The message can be transmitted to the wireless device from the same application download server that the wireless device is attempting to connect to or navigate, or alternately, the message can be transmitted from another server on the wireless network.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "06947772",
	"publication_date": "2005-09-20",
	"application_number": "10061642",
	"application_date": "2002-01-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic commerce transactions within a marketing system that may contain a membership buying opportunity",
	"summary": "",
	"abstract": "The present invention is directed to a system and method for providing complete electronic commerce (u201cE-Commerceu201d) transactions and solutions for a marketing company's products via the World Wide Web, including facilities for signing up new customers and recruiting, training and supporting new Independent Business Owners through an interactive online process. In another aspect, the present invention relates to the combination of a marketing business with a membership buying opportunity using both electronic commerce and face-to-face transactions. The present invention is also directed to a system and method for combining a marketing business with a membership buying opportunity, so that Independent Business Owners participating in the marketing plan can introduce customers to a membership buying opportunity and earn bonuses or commissions based on the purchases by those members, while Members in the buying opportunity can consume products or, at their option, qualify to become Independent Business Owners.",
	"url": null,
	"owner": "Quixtar Investments, Inc.",
	"publication_number": "06980962",
	"publication_date": "2005-12-27",
	"application_number": "09515860",
	"application_date": "2000-02-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for performing diagnostics using a portable device displaying diagnostic data using templates",
	"summary": "",
	"abstract": "A diagnostic tool suite is made available to technicians servicing equipment at residential and business locations using a portable device such as a PDA. The PDA runs a main engine that can execute diagnostic modules, with each diagnostic module corresponding to a particular appliance or device that requires troubleshooting, repair, diagnosis, maintenance or installation. The diagnostic modules use a limited number of templates to define possible screen layouts for each screen displayed to the technician. Additionally, the diagnostic module includes a diagnostic flow definition file wherein each record corresponds to a screen displayed to a technician. The main engine uses the template information and the diagnostic flow definition records to fully define a screen to display to a technician. In this way, an extensible, modular, non-specific diagnostic tool suite is available to a technician. To simplify creation of the diagnostic definition files, a graphical user development tool is provided that allows a non-skilled user to select a template definition, to be prompted for definitions of the fields in that template and to create the diagnostic definition file incorporating the user's input.",
	"url": null,
	"owner": "Ranco Incorporated",
	"publication_number": "06862589",
	"publication_date": "2005-03-01",
	"application_number": "10141775",
	"application_date": "2002-05-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for atomic file look-up",
	"summary": "",
	"abstract": "Method and apparatus for atomic file look-up. An atomic look-up operation allows an application to find out whether a file is opened atomically based on whether or not the file path is present in a file system namespace cache. If not, the file open request can be redirected, avoiding or minimizing impacts to the scheduling of various operations involved in executing an application. The request can be redirected by the application to a process that includes blocking point handling. An operating system according to the present invention includes a file system including a file system namespace, and an operating system kernel is operatively connected to the file system. The operating system kernel includes the file system namespace cache and the atomic look-up operation.",
	"url": null,
	"owner": "Red Hat, Inc.",
	"publication_number": "06886004",
	"publication_date": "2005-04-26",
	"application_number": "09934659",
	"application_date": "2001-08-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program product for order confirmation in a supply chain management framework",
	"summary": "",
	"abstract": "A system, method and computer program product are disclosed for order confirmation in a supply chain management framework. A network is utilized to collect from a plurality of stores of a supply chain data relating to the sale of goods by the stores. Access is allowed to the data utilizing a network-based interface. Electronic order forms are generated based on the data for ordering goods from a plurality of distributors of the supply chain. These electronic order forms request a confirmation of the receipt of the electronic order forms. A determination is made as to whether the confirmation of the receipt of the electronic order forms is received from the distributors. If it is determined that the confirmation of the receipt of the electronic order forms was not from the distributors, then an alert is generated.",
	"url": null,
	"owner": "Restaurant Services, Inc.",
	"publication_number": "06954736",
	"publication_date": "2005-10-11",
	"application_number": "09815973",
	"application_date": "2001-03-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system of remote position reporting device",
	"summary": "",
	"abstract": "A remote position monitoring system, method, and computer-program product using a global position satellite receiver and information from at least two global position satellites to determine a position of a mobile object with the global position satellite receiver and report via Internet the position of the mobile object to a recipient in search of the mobile object. A remote position reporting device of the monitoring system can be part of or attached to any mobile object such as a child, a skier, a car, and expensive items. The remote position reporting device includes a global positioning system (GPS) receiver, monitoring software and an Internet access module. The monitoring software (e.g., a dynamic link library) supports multiple data formats and multiple protocols to communicated the position information. The GPS receiver provides the monitoring software with position information at prescribed times, and the monitoring software records the position information. The monitoring software communicates the position information at prescribed times to a desired party through the Internet access module.",
	"url": null,
	"owner": "Ricoh Company Limited",
	"publication_number": "06961659",
	"publication_date": "2005-11-01",
	"application_number": "10606862",
	"application_date": "2003-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Diagnostics method and apparatus for use with enterprise controls",
	"summary": "",
	"abstract": "A data construct set and method for use with an industrial process which is controlled according to execution code wherein a processor running the code generates requests to mechanical resources to cause the resources to perform the process, the construct enabling generation of diagnostic code interspersed within the execution code which, when an event is to occur, indicates the event to occur, the invention also including status based diagnostics generally and methods of using the data construct set for generating both execution code and status based diagnostics.",
	"url": null,
	"owner": "Rockwell Automation Technologies, Inc.",
	"publication_number": "06862553",
	"publication_date": "2005-03-01",
	"application_number": "10304190",
	"application_date": "2002-11-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Message processor for a passenger entertainment system, method and article of manufacture",
	"summary": "",
	"abstract": "A computer is used to manage communication over a network between one or more network addressable units and a plurality of physical devices of a passenger entertainment system. The system is configured and operated using software to provide passenger entertainment services including audio and video on-demand, information dissemination, product and service order processing, video teleconferencing and data communication services. The system includes a system server and a network supporting multiple computer processors. The processors and the server comprise application software that control telephony applications and network services. The server is coupled by way of the network to physical devices of the system. The server comprises software for instantiating a dispatch object to open a framework for one or more network addressable unit objects, for instantiating one or more virtual line replaceable unit objects to manage communication between a network address unit and one or more physical devices, and for instantiating a message processor for moving messages to the one or more network addressable unit objects for delivery to the one or more physical devices. The message processor receives messages containing network routing address from one or more device drivers. The message processor utilizes the network routing address to and a physical device type to access a table and determine the ultimate destination for the message. The message processor has at least one input named pipe and one output named pipe, and utilizes the named pipes to translate messages from a first format to a second format. The message processor logs invalid destination addresses in a storage medium. The message processor instantiates each device driver from a device handler class member.",
	"url": null,
	"owner": "Rockwell Collins",
	"publication_number": "06938258",
	"publication_date": "2005-08-30",
	"application_number": "09085246",
	"application_date": "1998-05-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Intellectual asset protocol for defining data exchange rules and formats for universal intellectual asset documents, and systems, methods, and computer program products related to same",
	"summary": "",
	"abstract": "An intellectual asset protocol for defining data exchange rules and formats for universal intellectual asset data objects, and systems, methods, and computer program products related to same. The system includes an intellectual asset protocol system that acts as an engine in the definition of data exchange rules and formats for universal intellectual asset documents. Also included is a front end system that preferably provides a graphical user interface to enable users to access the intellectual asset protocol system. In addition, an intellectual asset database is included that stores collections of intellectual asset objects (and information related to same), one or more embodiments of an intellectual asset protocol, and so forth. The intellectual asset protocol system interacts with an Intellectual Property Asset Manger (IPAM) server.",
	"url": null,
	"owner": "Rose Blush Software LLC",
	"publication_number": "06963920",
	"publication_date": "2005-11-08",
	"application_number": "09545608",
	"application_date": "2000-04-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application programs for motion control devices including access limitations",
	"summary": "",
	"abstract": "A security system for controlling access to motion control systems. The security system limits access to application programming interface (API) functions. The limitations on API functions can be implemented as a denial of access to certain restricted functions and/or as a limitation on certain controlled parameters employed by certain restricted functions. The security system may allow or disallow access based on users or accounts. The security system may also be programmed to prevent access to certain functions arbitrarily as determined by a system administrator or on criteria such as the status of the system.",
	"url": null,
	"owner": "Roy-G-Biv Corporation",
	"publication_number": "06859671",
	"publication_date": "2005-02-22",
	"application_number": "10447185",
	"application_date": "2003-05-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamically setting the optimal base addresses of process components",
	"summary": "",
	"abstract": "Processes are monitored to determine if all of their components are loaded from persistent storage into memory at their preferred base addresses. Each of the components is examined to determine if that component's in-memory base address matches the preferred base address of its on-disk representation. If a base address collision is detected, the on-disk representation of the preferred base address is updated to reflect the new in-memory base address.",
	"url": null,
	"owner": "RTO Software, Inc.",
	"publication_number": "06950916",
	"publication_date": "2005-09-27",
	"application_number": "10062619",
	"application_date": "2002-01-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for an improved security system mechanism in a business applications management system platform",
	"summary": "",
	"abstract": "The present invention provides a solution to the needs described above through an improved method and apparatus for an improved security system mechanism in a business applications management system platform. The security management system partitions a number of business objects into a number of hierarchical domains. A security list is then created and configured to grant a member the right to perform a security operation on the business object located within the hierarchical domain. The security list is created by adding the security operation to the security list, applying the security operation to one of the multiple domains, and adding members to the security list.",
	"url": null,
	"owner": "Saba Software, Inc.",
	"publication_number": "06850893",
	"publication_date": "2005-02-01",
	"application_number": "09759062",
	"application_date": "2001-01-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "License management system and method for commuter licensing",
	"summary": "",
	"abstract": "A system for managing licenses for protected software on a communication network is disclosed. The system includes at least one client computer that is capable of being coupled to or decoupled from the communication network. While coupled to the communication network, a user of the client computer may request a commuter authorization to use the protected software. At least one license server is also coupled to the communication network. Each license server is programmed for managing a distribution of allocations to use the protected software. In addition, at least one of the license servers is programmed for granting a commuter authorization in response to a request for a commuter authorization from a client computer if there is an available authorization. After a commuter authorization is received by a client computer, the client computer stores a commuter authorization lifetime representing a time period for which the commuter authorization is valid. The client computer may then use the protected software while coupled to or decoupled from the communication network until the commuter authorization lifetime expires.",
	"url": null,
	"owner": "Safenet, Inc.",
	"publication_number": "06968384",
	"publication_date": "2005-11-22",
	"application_number": "09648502",
	"application_date": "2000-08-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Recording medium for storing real time recording/reproduction information, method and apparatus for recording and reproducing in real time, and file operating method using the same",
	"summary": "",
	"abstract": "A recording medium for storing real time recording/reproduction information, a real time recording and reproducing method and apparatus, and a file operating method using the information. Real time recording/reproduction information for ensuring real time recording/reproduction is stored in a file control information area, in each real time file, or in a separate file, and real time recording/reproduction attributes are assigned to the file. Thus, real time recorded files can be continuously reproduced without interruption. Also, there are methods of creating a file to which real time recording/reproduction attributes are assigned, extending a data area, and recording and reproducing the file to which real time recording/reproduction attributes are assigned.",
	"url": null,
	"owner": "Samsung Electronics Co., Ltd.",
	"publication_number": "06948111",
	"publication_date": "2005-09-20",
	"application_number": "10742977",
	"application_date": "2003-12-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Recording medium for storing real time recording/reproduction information, method and apparatus for recording and reproducing in real time, and file operating method using the same",
	"summary": "",
	"abstract": "A recording medium for storing real time recording/reproduction information, a real time recording and reproducing method and apparatus, and a file operating method using the information. Real time recording/reproduction information for ensuring real time recording/reproduction is stored in a file control information area, in each real time file, or in a separate file, and real time recording/reproduction attributes are assigned to the file. Thus, real time recorded files can be continuously reproduced without interruption. Also, there are methods of creating a file to which real time recording/reproduction attributes are assigned, extending a data area, and recording and reproducing the file to which real time recording/reproduction attributes are assigned.",
	"url": null,
	"owner": "Samsung Electronics Co., Ltd.",
	"publication_number": "06938199",
	"publication_date": "2005-08-30",
	"application_number": "10743945",
	"application_date": "2003-12-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Declaring application data",
	"summary": "",
	"abstract": "Methods and apparatus, including computer program products, implementing techniques for declaring application data. The techniques include establishing a model, the model implementing application logic of an application; establishing at least one view for presenting the model; establishing at least one controller for manipulating the model; establishing at least one storage area, the storage area relating to the controller; and establishing at least one access method for storing and accessing application data in the storage area according to a predetermined structure.",
	"url": null,
	"owner": "SAP Aktiengesellschaft",
	"publication_number": "06952620",
	"publication_date": "2005-10-04",
	"application_number": "10676836",
	"application_date": "2003-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integrated data bank combining system",
	"summary": "",
	"abstract": "Companies and other organizations store extensive datasets having overlapping data contents in different data base systems whose data base structures are incompatible with one another. The invention is concerned with the integration of such structurally incompatible data base systems, in particular with the data interchange between such systems. Various procedures are proposed which serve the purpose of combining such data base systems together such that problem-free data interchange is possible in both directions. In particular, the invention allows data shared across the system to be entered and changed in the different systems.",
	"url": null,
	"owner": "SAP Aktiengesellschaft",
	"publication_number": "06845378",
	"publication_date": "2005-01-18",
	"application_number": "09857864",
	"application_date": "2000-10-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Server-side object filtering",
	"summary": "",
	"abstract": "A computer-implemented method and apparatus for retrieving over a network a subset of object data from a persistence layer. The persistence layer is structured at least partially upon an object model definition. A server computer receives over the network a request from a client computer for object persisted data stored in the persistence layer. The server computer parses the request to obtain search criteria and object association data, wherein the object association data identifies at least one association between a pair of objects. Filtering criteria is created based upon the parsed search criteria and object association data. The object model definition determines how the search criteria and the object association data form the filtering criteria. The object data from the persistence layer is filtered by the filtering criteria in order to generate the object data subset. The object data subset may also be encoded as a package of objects formatted as an Extensible Markup Language (XML) document. The server computer transmits the encoded object data subset to the client computer over the network.",
	"url": null,
	"owner": "SAS Institute Inc.",
	"publication_number": "06917937",
	"publication_date": "2005-07-12",
	"application_number": "09704281",
	"application_date": "2000-11-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interactive dialog-based training method",
	"summary": "",
	"abstract": "A computer-based method interactively trains call center personnel using at least one call scenario involving simulated customer interactions. The call scenario includes multiple dialog segments, each of which includes a preprogrammed customer portion and at least one keyword. The dialog segments are sequentially executed by providing the customer portion to a trainee terminal and receiving a trainee response. It is determined whether the trainee response includes the keyword corresponding to each dialog segment. The keyword may be replaced with an updated keyword, and the trainee response to the customer portion is compared to the updated keyword. When each dialog segment has been sequentially executed, a summary of the trainee's performance with respect to the call scenario is displayed on a graphical user interface, including the number of trainee responses that included the at least one keyword corresponding to each dialog segment.",
	"url": null,
	"owner": "SBC Properties, L.P.",
	"publication_number": "06914975",
	"publication_date": "2005-07-05",
	"application_number": "10078429",
	"application_date": "2002-02-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, apparatus and system for constructing and maintaining scenegraphs for interactive feature-based geoscience geometric modeling",
	"summary": "",
	"abstract": "A method, computer system or computer program is provided for interactively constructing, editing, rendering and manipulating geoscience models, including aggregating the functionality of a geometry system and a graphics system, enforcing consistency between the geometry system and the graphics system, and interfacing the geometry system and the graphics system to an application through an integration layer. State machines are also provided that enable updating of only those graphics objects whose geometry or topology have been changed and that are specified as visible by the user, thus increasing performance. A scenegraph construction technique is also provided to reduce memory requirements and further enhance performance. A material property framework is provided, among other things, to communicate changes in the geometry or topology to aggregate objects which then determine which graphics objects are affected by the changes and which graphics objects are to be updated.",
	"url": null,
	"owner": "Schlumberger Technology Corp.",
	"publication_number": "06980935",
	"publication_date": "2005-12-27",
	"application_number": "10010540",
	"application_date": "2001-11-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interface to a programmable logic controller",
	"summary": "",
	"abstract": "An apparatus is provided for accessing, controlling and monitoring a programable logic controller with a network client having a conventional web browser. The apparatus includes an archive, an interface, and a library. The archive provides for compiling an application written in code supported by the web browser. The interface is responsive to the application for establishing a connection between the controller and the network client. Further, the library is responsive to the application for supporting communication between the controller and the network client upon establishing a connection therebetween.",
	"url": null,
	"owner": "Schneider Automation Inc.",
	"publication_number": "06853867",
	"publication_date": "2005-02-08",
	"application_number": "09223349",
	"application_date": "1998-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Real time three dimensional factory process monitoring and control",
	"summary": "",
	"abstract": "A method for monitoring a factory process is disclosed. The factory process comprises a plurality of tasks. The method comprises displaying the factory process in real-time as a three-dimensional, free-camera, computer generated representation of the process as a whole, selectively displaying each of the tasks in real-time as a three-dimensional, free-camera, computer generated representation of the respective task.",
	"url": null,
	"owner": "Schneider Automation Inc.",
	"publication_number": "06888541",
	"publication_date": "2005-05-03",
	"application_number": "10082760",
	"application_date": "2002-02-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Media-on-demand catalog viewing preference system",
	"summary": "",
	"abstract": "The invention can be viewed as a system for providing media information to a user via an interactive media services client device coupled to a programmable television services server device. A method of the preferred embodiment of the present invention includes receiving user input and excluding one or more media titles from a media title list based on the user input.",
	"url": null,
	"owner": "Scientific-Atlanta, Inc",
	"publication_number": "06978310",
	"publication_date": "2005-12-20",
	"application_number": "09692986",
	"application_date": "2000-10-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Composite buffering",
	"summary": "",
	"abstract": "A system is provided for managing and accessing media content received via a plurality of display channels and stored in a plurality of buffers in a storage device. The system associates the plurality of buffers with a composite buffer file.",
	"url": null,
	"owner": "Scientific-Atlanta, Inc.",
	"publication_number": "06971121",
	"publication_date": "2005-11-29",
	"application_number": "10102043",
	"application_date": "2002-03-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Non-volatile memory access control",
	"summary": "",
	"abstract": "A system is described for controlling access to non-volatile memory. The system can include logic configured to determine whether to delay access to the non-volatile memory.",
	"url": null,
	"owner": "Scientific-Atlanta, Inc.",
	"publication_number": "06868473",
	"publication_date": "2005-03-15",
	"application_number": "10283714",
	"application_date": "2002-10-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Cryptographic server with provisions for interoperability between cryptographic systems",
	"summary": "",
	"abstract": "The invention is a cryptographic server providing interoperability over multiple algorithms, keys, standards, certificate types and issuers, protocols, and the like. Another aspect of the invention is to provide a secure server, or trust engine, having server-centric keys, or in other words, storing cryptographic keys on a server. The server-centric storage of keys provides for user-independent security, portability, availability, and straightforwardness, along with a wide variety of implementation possibilities.",
	"url": null,
	"owner": "Security First Corporation",
	"publication_number": "06853988",
	"publication_date": "2005-02-08",
	"application_number": "09666647",
	"application_date": "2000-09-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Server-centric customized interactive program guide in an interactive television environment",
	"summary": "",
	"abstract": "Techniques to create, generate, and deliver customized interactive program guide (custom-IPG). In one method, selections indicative of a set of channels to be included in the custom-IPG are received. In response, one or more custom-IPG screens having included therein the set of selected channels are rendered at a head end. The custom-IPG screens can be formed as subsets of the regular IPG screens, or as new screens. The rendered custom-IPG screens are provided from the head end to a set top terminal upon receiving a viewer request for the custom-IPG. Command indicative of a particular location at which to overlay the custom-IPG screens may also be received. In this case, the custom-IPG screens are re-rendered at the indicated location. The custom-IPG screens can be overlaid on a video sequence provided on a particular channel, which can be the channel currently being viewed, the channel used to carry regular program guide, or a channel that is independent of the channels used to carry regular programming and program guide. For example, either the custom or regular IPG can be provided on the program guide channel, depending on the viewer's selection.",
	"url": null,
	"owner": "Sedna Patent Services, LLC",
	"publication_number": "06904610",
	"publication_date": "2005-06-07",
	"application_number": "09605522",
	"application_date": "2000-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods of message queuing",
	"summary": "",
	"abstract": "An intelligent queue may be used to facilitate communication among a set business application programs. In one embodiment, the intelligent queue may interact with a variety of business application programs providing consistent service behaviors across a variety of data store products. The intelligent queue provides extended message storage, efficient journalling, interoperability with other intelligent queues, load balancing, once-only processing, as well as detailed message state information that tracks the status of each message from both the sender and the recipient's perspective.",
	"url": null,
	"owner": "SeeBeyond Technology Corporation",
	"publication_number": "06970945",
	"publication_date": "2005-11-29",
	"application_number": "09704016",
	"application_date": "2000-11-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Image display system and information storage medium",
	"summary": "",
	"abstract": "An image display system transmits and receives supplied data which can be converted by a virtual machine among plural processing devices which are connected via a transmission line, and creates and displays an image. At least two processing devices among the plural processing devices each includes an image display device. At least one of the image display devices includes a conversion device, in which a virtual machine is provided, that converts the supplied data into a data format in which an image can be displayed, a communication interface section that receives the supplied data from another processing device, and a storage device in which created images are stored and which can be accessed from another processing device via the communication interface section. Each of the at least one of the image display device and the other image display device reads some of the images from the storage device and display the images in a shared manner, the other image display device having the conversion device and the communication interface section.",
	"url": null,
	"owner": "Seiko Epson Corporation",
	"publication_number": "06839061",
	"publication_date": "2005-01-04",
	"application_number": "09743861",
	"application_date": "2000-05-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Symbol printer, symbol printing method, symbol printer driver, and a data storage medium storing a symbol printing program",
	"summary": "",
	"abstract": "A bar code or similar symbol can be printed accurately within a specified printing area by a printer for printing such symbols. The printer has a symbol image generator for converting display data to a symbol and has hardware or software for reporting the size of the converted symbol to a host device. The host sends specific commands and text data for representation in the printed symbol to the printer for printing. As a result, the host can confirm whether printing within the specific area is possible.",
	"url": null,
	"owner": "Seiko Epson Corporation",
	"publication_number": "06906812",
	"publication_date": "2005-06-14",
	"application_number": "09808164",
	"application_date": "2001-03-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for internetworked wireless integrated network sensor (WINS) nodes",
	"summary": "",
	"abstract": "The Wireless Integrated Network Sensor Next Generation (WINS NG) nodes provide distributed network and Internet access to sensors, controls, and processors that are deeply embedded in equipment, facilities, and the environment. The WINS NG network is a new monitoring and control capability for applications in transportation, manufacturing, health care, environmental monitoring, and safety and security. The WINS NG nodes combine microsensor technology, low power distributed signal processing, low power computation, and low power, low cost wireless and/or wired networking capability in a compact system. The WINS NG networks provide sensing, local control, remote reconfigurability, and embedded intelligent systems in structures, materials, and environments.",
	"url": null,
	"owner": "Sensoria Corporation",
	"publication_number": "06859831",
	"publication_date": "2005-02-22",
	"application_number": "09685018",
	"application_date": "2000-10-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for mass customization of digital television broadcasts in DASE environments",
	"summary": "",
	"abstract": "Methods and systems for the mass customization of Digital Television broadcasts through the broadcasting of commercials in the form of software applications. Ad-applications are injected into various sub-streams of the transport stream and received in a dormant state by the client-side set-top box. When a commercial is to be shown, a broadcaster broadcasts a generic time-stamped trigger to a dispatching application that performs a keyword matching algorithm to decide which ad-application among those received at the receiver is to be executed. The dispatching application uses the results of the latter comparison to decide which specific dormant ad-application to route to; it then converts the generic trigger into a chosen-ad trigger that is routed to the chosen ad-application. Upon receipt of the chosen-ad trigger, the chosen ad-application executes, thereby displaying an ad customized to the individual viewer's interests.",
	"url": null,
	"owner": "Sharp Laboratories of America, Inc.",
	"publication_number": "06925649",
	"publication_date": "2005-08-02",
	"application_number": "09823863",
	"application_date": "2001-03-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, apparatus, and system for immediate posting of changes in a client server environment",
	"summary": "",
	"abstract": "According to one aspect of the present invention, a method is provided in which a first field and a second field of a data record are displayed to a user using a client program, the second field having one or more attributes that are dependent upon the value of the first field. In response to a detection that the value of the first field has changed, the value of the first field is sent to a server program. The server program is configured to process the change in value of the first field and determine corresponding changes with respect to the one or more attributes of the second field. The corresponding changes with respect to the one or more attributes of the second field are sent from the server program to the client program.",
	"url": null,
	"owner": "Siebel Systems, Inc.",
	"publication_number": "06907451",
	"publication_date": "2005-06-14",
	"application_number": "09969858",
	"application_date": "2001-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, apparatus, and system for implementing a framework to support a web-based application",
	"summary": "",
	"abstract": "According to one aspect of the present invention, a system is provided to support a web-based application. The system comprising a set of server-side objects managed by an object manager (OM), the set of server-side objects including a global session object providing access to a repository, a server-side business object, and server-side business components contained in the server-side business object. The system further comprises a set of browser-side objects running on a browser, the set of browser-side objects including a browser-side application object that exists throughout a user-session to manage other browser-side objects. The system also comprises a remote procedure call (RPC) mechanism and a notification mechanism to facilitate communication and synchronization between the browser-side objects and the server-side objects.",
	"url": null,
	"owner": "Siebel Systems, Inc.",
	"publication_number": "06901595",
	"publication_date": "2005-05-31",
	"application_number": "09969856",
	"application_date": "2001-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Database system and method for industrial automation services",
	"summary": "",
	"abstract": "A host system generates and manages databases incorporating data gathered from a plurality of client automation systems, such as CNC machine tools. The data may include real-time data, and is captured from the client systems under supervision of software downloaded over a network from the host system to the client systems. The captured data is transmitted over the network to the host, which creates the databases. The databases preferably include a commercial database comprising data associated with customer owners or operators of the client automation system, as well as a technical database, comprising captured data, administrative and other data, organized by customer and client system. Captured data is preferably associated with the date of capture, providing for the creation of a historical database for given client equipment. With customer authorization, others, such as original equipment manufacturers, may access the captured data, for which they may be charged a fee.",
	"url": null,
	"owner": "Siemens Aktiengesellschaft",
	"publication_number": "06975913",
	"publication_date": "2005-12-13",
	"application_number": "09950723",
	"application_date": "2001-09-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Device and method for swapping out a part of a service logic program",
	"summary": "",
	"abstract": "A method is defined with which various parts of a service logic are distributed onto different entities of a system and can collaborate and communicate with one another. An apparatus is specified with which a customer of an intelligent network can use a service at a provider, the service logic thereof running partly centrally at the service provider and partly relocated in, for example, the terminal equipment of the customer.",
	"url": null,
	"owner": "Siemens Aktiengesellschaft",
	"publication_number": "06970901",
	"publication_date": "2005-11-29",
	"application_number": "09582969",
	"application_date": "1998-12-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Device for connecting a data processing device to a telecommunications system",
	"summary": "",
	"abstract": "The connection device connects a telecommunications system to a data processing device which provides telecommunications applications. The telecommunications system and the data processing device in each case have a switching network for through-connecting the relevant telecommunications application. The connection device is a switching device directly connected between the respective switching networks.",
	"url": null,
	"owner": "Siemens Aktiengesellschaft",
	"publication_number": "06856681",
	"publication_date": "2005-02-15",
	"application_number": "09885555",
	"application_date": "2001-06-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and device for performing a query on a markup document to conserve memory and time",
	"summary": "",
	"abstract": "A method of performing a query on a Markup document, which includes steps of receiving a query and designing a plurality of filters to reflect a structural linkage of a condition tree representing the query. The step of designing the plurality of filters includes designing a highest-level filter that can become active only if an event-based parser indicates that an element for which the highest-level filter is searching has been found. The step of designing the plurality of filters also includes designing a lowest-level filter that can become active only when the highest-level filter has become active and when the parser indicates that an element for which the lowest-level filter is searching has been parsed. The method also includes a step of parsing a Markup document, and a step of checking the lowest-level filter to determine whether it has found the element for which it has been searching.",
	"url": null,
	"owner": "Siemens Aktiengesellschaft",
	"publication_number": "06920462",
	"publication_date": "2005-07-19",
	"application_number": "09988162",
	"application_date": "2001-11-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for the electronic provision of services for machines via a data communication link",
	"summary": "",
	"abstract": "With this invention, expert knowledge from machine manufacturers is applied quickly at any time to a machine via the internet, by providing a main computer (host) for the production and provision of machine-related data and/or services and a machine-side working computer (client), which is connected to the main computer via a data communication link and (client) machine state data can be acquired in real time and transmitted to the main computer, and machine-related data and/or services generated by the main computer as a function of such machine state data can be received by an analysis and evaluation unit.",
	"url": null,
	"owner": "Siemens Aktiengesellschaft",
	"publication_number": "06954680",
	"publication_date": "2005-10-11",
	"application_number": "10052293",
	"application_date": "2002-01-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for extending a telephone's capabilities",
	"summary": "",
	"abstract": "An application programming interface (API) enables a telephone to utilize the hardware resources of a computer that is connected to the telephone in a master/slave relationship that causes the computer to function in the manner of a peripheral to the telephone. Specifically, the telephone attached to the computer can utilize the relatively large memory capacity of the attached computer to store excess telephone-specific data and can utilize the relatively high sophistication of the processing capability of the connected computer to perform intensive data processing operations. The API allows the functionality of the telephone to be extended without requiring a telephony-equipped computer.",
	"url": null,
	"owner": "Siemens Communications, Inc.",
	"publication_number": "06862347",
	"publication_date": "2005-03-01",
	"application_number": "09239414",
	"application_date": "1999-01-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for muting alarms during a conference",
	"summary": "",
	"abstract": "A system, method, apparatus, means, and computer program code for muting or disabling audible alarms or alerts during a conference or collaboration event are provided. During the conference or collaboration event, users may participate in the conference via user or client devices (e.g., computers) that are connected to or in communication with a server or collaboration system. A server, collaboration system or other device or application detects the setting of a mute alarm preference regarding one or more users. This may occur prior to a conference or during the conference. The server, collaboration system or other device then may cause the appropriate muting to occur at the appropriate or desired client devices and/or disable or mute audible alarms at one or more of the client devices ().",
	"url": null,
	"owner": "Siemens Communications, Inc.",
	"publication_number": "06914519",
	"publication_date": "2005-07-05",
	"application_number": "10456652",
	"application_date": "2003-06-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for reporting the addition and deletion of TAPI line and phone devices in absence of such notifiction from a PBX",
	"summary": "",
	"abstract": "A TAPI service provider may request configuration information from hardware such as a PBX. Configuration information received from the hardware is stored in a list and compared to the existing configuration list. Two new lists are then generated: an added list and a deleted list. All devices in the deleted list are deleted from the internal database and deleted messages are sent to the TAPI service provider. All new devices are temporarily added to the internal database and addition messages are sent to the TAPI service provider. The new device configuration list is then saved, and the added devices are marked as permanent.",
	"url": null,
	"owner": "Siemens Communications, Inc.",
	"publication_number": "06975715",
	"publication_date": "2005-12-13",
	"application_number": "09501134",
	"application_date": "2000-02-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Diagnostic medical ultrasound system having a pipes and filters architecture",
	"summary": "",
	"abstract": "A diagnostic medical ultrasound system is disclosed. The system obtains data representative of an ultrasonic echo, processes that data in a sequential architecture, and transmits the result to an output. Further, the ultrasound system provides an interface for non-sequentially architectured applications to interact within the sequential architecture of the present invention.",
	"url": null,
	"owner": "Siemens Medical Solutions USA, Inc.",
	"publication_number": "06932767",
	"publication_date": "2005-08-23",
	"application_number": "10393062",
	"application_date": "2003-03-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Volume rendering in the acoustic grid methods and systems for ultrasound diagnostic imaging",
	"summary": "",
	"abstract": "Methods and systems for volume rendering three-dimensional ultrasound data sets in an acoustic grid using a graphics processing unit are provided. For example, commercially available graphic accelerators cards using 3D texturing may provide 256u00d7, 256u00d7128 8 bit volumes at 25 volumes per second or better for generating a display of 512u00d7512 pixels using ultrasound data. By rendering from data at least in part in an acoustic grid, the amount of scan conversion processing is reduced or eliminated prior to the rendering.",
	"url": null,
	"owner": "Siemens Medical Solutions USA, Inc.",
	"publication_number": "06852081",
	"publication_date": "2005-02-08",
	"application_number": "10388128",
	"application_date": "2003-03-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Clustered filesystem",
	"summary": "",
	"abstract": "A cluster of computer system nodes share direct read/write access to storage devices via a storage area network using a cluster filesystem. Version information about subsystems is acquired by a leader node when forming a cluster membership and distributed to all nodes in the cluster to enable proper messaging during operation. Access to files on the storage devices is arbitrated by the cluster filesystem using tokens. Upon detection of a change in location of the metadata server, client nodes waiting for a token are interrupted to check on the status of at least one of data and node availability. The cluster operating system maintains consistency of a mirrored data volume by automatically ensuring replication of a mirror leg while continuing to accept access requests to the mirrored data volume.",
	"url": null,
	"owner": "Silicon Graphics, Inc.",
	"publication_number": "06950833",
	"publication_date": "2005-09-27",
	"application_number": "10162258",
	"application_date": "2002-06-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Compact flat panel color calibration system",
	"summary": "",
	"abstract": "A compact flat panel color calibration system includes a lens prism optic able to pass a narrow, perpendicular, and uniform cone angle of incoming light to a spectrally non-selective photodetector. The calibration system also includes a microprocessor operable to determine the luminance of the display based upon the information gathered by the photodetector. A software module included in the calibration system is then operable to process the luminance information in order to adjust the flat panel display.",
	"url": null,
	"owner": "Silicon Graphics, Inc.",
	"publication_number": "06853387",
	"publication_date": "2005-02-08",
	"application_number": "10013576",
	"application_date": "2001-12-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for image-based rendering with proxy surface animation",
	"summary": "",
	"abstract": "Methods and systems for animating with proxy surfaces are provided. A method for animating includes preprocessing an object to form proxy surfaces of part(s) and/or joint(s), and rendering the proxy surfaces to be animated. In an embodiment, preprocessing includes dividing an object to be animated into parts that can move independently without changing shape, forming a proxy surface for each of the parts corresponding to an initial viewing direction, and obtaining a set of view textures for each of the proxy surfaces. Each part proxy surface is then rendered at a new viewing direction. The new viewing direction is function of an object transformation, part transformation, and an initial viewing direction. The object is then animated by repeating the rendering steps. In another embodiment, the object to be animated is divided into parts and at least one joint that can change shape.",
	"url": null,
	"owner": "Silicon Graphics, Inc.",
	"publication_number": "06924805",
	"publication_date": "2005-08-02",
	"application_number": "10688936",
	"application_date": "2003-10-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for receiving and viewing content-rich communications",
	"summary": "",
	"abstract": "Methods, systems, and articles of manufacture consistent with the present invention provide the ability to receive a communication (such as an electronic mail message) using a particular content server within a network. A minimal amount of information is received, such as an instruction set and a basic amount of content information. The instruction set is analyzed to determine references to content stored on a particular one of the content servers, namely the content server that is closest to an anticipated access point for the communication. While executing the instruction set and displaying the basic content information, a request for the communication's content is generated and sent to the content server. The content is received from the content server closest to the anticipated access point (typically the one closest to the requesting node), usually in a streaming format. The content is then displayed for the intended recipient.",
	"url": null,
	"owner": "Silverpop Systems, Inc.",
	"publication_number": "06965926",
	"publication_date": "2005-11-15",
	"application_number": "09545653",
	"application_date": "2000-04-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for using name spaces in a graphical user interface",
	"summary": "",
	"abstract": "Embodiments of the invention provide a mechanism for using name spaces in graphical user interface (GUI) page definitions. A name space designation is assigned to each control mechanism that generates definitional statements for the GUI. In one embodiment, a page control is assigned a name space designation and assigns a name space designation for each of the controls that are used to generate the page. The name space designation can be used to uniquely identify a control. The name attributes including the name space designation may be sent to a client's browser where it may be incorporated by the browser into a name-value pair when transferring data back to the control.",
	"url": null,
	"owner": "SilverStream Software, LLC",
	"publication_number": "06880129",
	"publication_date": "2005-04-12",
	"application_number": "09553586",
	"application_date": "2000-04-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Plug and play reconfigurable USB interface for industrial fieldbus network access",
	"summary": "",
	"abstract": "A reconfigurable interface device for providing access to a plurality of fieldbus networks. The interface device includes a reconfigurable circuit which provides access to a selected fieldbus network from among several optional fieldbus networks. According to an embodiment, the reconfigurable circuit includes a plurality of media units, each media unit providing access to one of the several optional fieldbus networks, and a switch unit coupled to each of the plurality of media units, the switch unit activating a media unit corresponding to the selected fieldbus network, and deactivating remaining media units. A reconfigurable control device is provided for controlling and monitoring a plurality of fieldbus networks. The control device includes a host, having a server and non-volatile memory, and a reconfigurable interface device having a reconfigurable circuit. The non-volatile memory stores firmwares for reconfiguring the reconfigurable circuit in accordance with each of the several optional fieldbus networks.",
	"url": null,
	"owner": "SMAR Research Corporation",
	"publication_number": "06839790",
	"publication_date": "2005-01-04",
	"application_number": "10176856",
	"application_date": "2002-06-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "METHOD AND SYSTEM FOR REMOTE NETWORKING USING PORT PROXYING BY DETECTING IF THE DESIGNATED PORT ON A CLIENT COMPUTER IS BLOCKED, THEN ENCAPSULATING THE COMMUNICATIONS IN A DIFFERENT FORMAT AND REDIRECTING TO AN OPEN PORT",
	"summary": "",
	"abstract": "A method and system for serving software applications to remote clients across the internet, for example, is disclosed that preferably utilizes standard, SMB (server message block), protocols, which are available in commercial operating systems. Further, an associated business method is described in which subscribing institutions can out-source the application serving to a third party institution, transparently. Finally, a port proxy system is provided that enables tunneling through firewalls that are configured to block communications from SMB ports.",
	"url": null,
	"owner": "Softricity, Inc.",
	"publication_number": "06938096",
	"publication_date": "2005-08-30",
	"application_number": "09531121",
	"application_date": "2000-03-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for ensuring operation during node failures and network partitions in a clustered message passing server",
	"summary": "",
	"abstract": "A means for guaranteeing the proper behavior as specified by the JMS semantics of clustered message server when the individual computer that comprise the cluster are separated by a network partition. A clustered message server is responsible for the reliable transportation of messages between different distributed computer applications. It employs multiple computers to perform a function that otherwise appears to be performed by a monolithic server running on one computer, but with more capacity and reliability than can be provided by one computer. If a computer in the cluster fails, another computer should automatically assume the role of the failed computer. However, it is not possible for the other machines in the cluster to detect the difference between the failure of one or more computers in the cluster, and the failure of data network connecting those computers. In ordinary clusters, different actions would be required in these two cases, but since they are impossible to distinguish, computer failure is always assumed and network failure is ignored and the consequence non-deterministic. The invention described here provides a means of responding to failures that yields correct behavior as specified by the JMS semantics whether the failure is due to computer failure or network failure.",
	"url": null,
	"owner": "Softwired AG",
	"publication_number": "06877107",
	"publication_date": "2005-04-05",
	"application_number": "09899662",
	"application_date": "2001-07-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Image mastering API",
	"summary": "",
	"abstract": "Methods and apparatus for the recording of data to an optical media are provided. In one example, a method includes the selection of data to be recorded by a client application. After interface with an image mastering application programming interface, the selection of an optical media format, and the selection of an optical media recording device, the selected data is sent to a stash file. A task list of operations to be performed in the recording of the selected data is created, and the data is recorded by executing the task list from Kernel Mode of an operating system. In another example, an image mastering application programming interface is provided. The image mastering application programming interface is a collection of COM objects including a disk master, a stash file, a disk recorder, and a burn engine. In another example, a computer readable media having program instructions for the recording of data to an optical media is provided. The program instructions enable the selection of data, sending the data to a stash file, creating a task list for the recording of the data, and executing the task list from Kernel Mode of an operating system.",
	"url": null,
	"owner": "Sonic Solutions, Inc.",
	"publication_number": "06882795",
	"publication_date": "2005-04-19",
	"application_number": "09703167",
	"application_date": "2000-10-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Control device, control method and medium",
	"summary": "",
	"abstract": "The using circumstances of a control object device are detected, and controlling of the control object device is carried out on the basis of the detected result. Thereby, where control equipment in conformity to a fixed standard, control equipment not in conformity to a fixed standard, and a control object device are mixed in a network, there can be avoided inconvenience in which the respective control equipment control the control object devices simultaneously.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "06925500",
	"publication_date": "2005-08-02",
	"application_number": "09857648",
	"application_date": "2000-10-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Image display processing apparatus that automatically changes position of sub-window relative to main window depending on distance at watch sub window is commanded to be displayed",
	"summary": "",
	"abstract": "To display a window for displaying auxiliary information near a window for displaying main information. When a drag operation is performed to move a multiuser window to a predetermined position and display there, if the distance of the multiuser window to the main window when the drag operation is cleared is within reference value Land the distance of the top side of the multiuser window to the top side of the main window is within reference value H, then the multiuser window is automatically moved such that the side of the multiuser window comes in contact with the side of the main window and the top end of the multiuser window comes in alignment with the top end of the main window on a horizontal line.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "06954906",
	"publication_date": "2005-10-11",
	"application_number": "08939064",
	"application_date": "1997-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information processing apparatus and method, and storage medium",
	"summary": "",
	"abstract": "Disclosed is an information processing apparatus for controlling an application object moving autonomously in a shared virtual space in which avatars representing users of other information processing apparatuses are active. The apparatus comprises a distribution examining element for examining distribution of the active avatars in the shared virtual space, a coordinate controlling element for controlling coordinates of the application object in accordance with results of the examination by the distribution examining element and a display controlling element for controlling display of information by the application object controlled in coordinates by the coordinate controlling element.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "06981220",
	"publication_date": "2005-12-27",
	"application_number": "09841041",
	"application_date": "2001-04-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information processing apparatus and method, and storage medium",
	"summary": "",
	"abstract": "An information processing apparatus is disclosed which is connected to a server along with other information processing apparatuses through a network and which is supplied with a shared virtual space wherein avatars representing users remain active. The apparatus comprises a registering element for registering any of the avatars as an object to be filtered out, a filtering element for filtering out data on the avatar registered by the registering element, the data having been transmitted from the server and a processing element for processing the shared virtual space based on the data left intact following the filtering by the filtering element.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "06961755",
	"publication_date": "2005-11-01",
	"application_number": "09841598",
	"application_date": "2001-04-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information processing apparatus, method and computer program for virtual reality aura setting",
	"summary": "",
	"abstract": "According to the present invention, there are provided an information processing apparatus, an information processing method and a computer-readable medium for use with a virtual reality environment. The information processing apparatus includes a sensing-area setting means for setting an area used to sense information on objects, and a transmission-area setting means for setting an area used for transmitting information on an object. The transmission area may be set wider than the sensing area. Thus, according to the present invention, information on an object can be reported to another object located at a remote position with a higher degree of reliability.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "06933938",
	"publication_date": "2005-08-23",
	"application_number": "09389803",
	"application_date": "1999-09-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information processing method",
	"summary": "",
	"abstract": "An information processing apparatus, an information processing method and a computer-readable medium for use with a virtual reality environment are provided. The information processing apparatus includes a sensing-area setting means for setting an area used to sense information on objects, and a transmission-area setting means for setting an area used for transmitting information on an object. The transmission area may be set wider than the sensing area. Thus, according to the present invention, information on an object can be reported to another object located at a remote position with a higher degree of reliability.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "06975315",
	"publication_date": "2005-12-13",
	"application_number": "11103706",
	"application_date": "2005-04-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information processing method",
	"summary": "",
	"abstract": "An information processing apparatus, an information processing method and a computer-readable medium for use with a virtual reality environment are provided. The information processing apparatus includes a sensing-area setting means for setting an area used to sense information on objects, and a transmission-area setting means for setting an area used for transmitting information on an object. The transmission area may be set wider than the sensing area. Thus, according to the present invention, information on an object can be reported to another object located at a remote position with a higher degree of reliability.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "06975316",
	"publication_date": "2005-12-13",
	"application_number": "11103812",
	"application_date": "2005-04-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application programming interface for data transfer and bus management over a bus structure",
	"summary": "",
	"abstract": "In a first embodiment, an applications programming interface (API) implements and manages isochronous and asychronous data transfer operations between an application and a bus structure. During an asynchronous transfer the API includes the ability to transfer any amount of data between one or more local data buffers within the application and a range of addresses over the bus structure using one or more asynchronous transactions. An automatic transaction generator may be used to automatically generate the transactions necessary to complete the data transfer. The API also includes the ability to transfer data between the application and another node on the bus structure isochronously over a dedicated channel. During an isochronous data transfer, a buffer management scheme is used to manage a linked list of data buffer descriptors. During isochronous transfer of data, the API provides implementation of a resynchronization event in the stream of data allowing for resynchronization by the application to a specific point within the data. Implementation is also provided for a callback routine for each buffer in the list which calls the application at a predetermined point during the transfer of data. An isochronous API of the preferred embodiment presents a virtual representation of a plug, using a plug handle, to the application. The isochronous API notifies a client application of any state changes on a connected plug through the event handle. The isochronous API also manages buffers utilized during a data operation by attaching and detaching the buffers to the connected plug, as appropriate, to mange the data flow.",
	"url": null,
	"owner": "Sony Electronics Inc.",
	"publication_number": "06901474",
	"publication_date": "2005-05-31",
	"application_number": "10607071",
	"application_date": "2003-06-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing refractive transparency in selected areas of video displays",
	"summary": "",
	"abstract": "In a selected area of a display defined by a polygon, magnifying is simulated. The selected area may be, for example, a circle simulating a magnifying glass. Textures are represented by texel coordinates U and V, which specify the location of color components within a set of image data. Within the area selected to appear magnified, the present invention perturbs the texel location selection to simulate an angle of refraction in the selected area and offset texel coordinates.",
	"url": null,
	"owner": "Sony Electronics Inc.",
	"publication_number": "06894696",
	"publication_date": "2005-05-17",
	"application_number": "10028014",
	"application_date": "2001-12-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for standardizing the use of ISO 7816 smart cards in conditional access systems",
	"summary": "",
	"abstract": "A conditional access system and method are disclosed allowing the use of a standard smart card. A computing resource configured to run the conditional access protocol has a smart card interface and a software wrapper configured to run on the computing resource coupling the smart card interface to the conditional access protocol.",
	"url": null,
	"owner": "Sony Electronics Inc.",
	"publication_number": "06975725",
	"publication_date": "2005-12-13",
	"application_number": "09688375",
	"application_date": "2000-10-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Virtual device control modules and function control modules implemented in a home audio/video network",
	"summary": "",
	"abstract": "A virtual device control module for interfacing with a target device is disclosed. A DCM (device control module) is operable for interfacing with the target device, wherein the DCM includes a first FCM (function control module) and a second FCM operable for controlling respective first and second functional components of the target device. The first FCM can be a physical FCM operable for controlling the operation of the first functional component, and the second FCM can be a virtual FCM operable for controlling the operation of a second functional component.",
	"url": null,
	"owner": "Sony Electronics, Inc.",
	"publication_number": "06963784",
	"publication_date": "2005-11-08",
	"application_number": "09174078",
	"application_date": "1998-10-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mobile agent system and method for controlling a mobile agent system",
	"summary": "",
	"abstract": "The present invention relates to a mobile agent system () for a communication unit () of a communication system, with at least one mobile agent () comprising an allocated agent policy (), in which migration parameters of the respective mobile agent () are defined, migration control means () for controlling the migration behavior of a mobile agent () in the communication system on the basis of a current migration policy of the mobile agent () and current parameters of the communication system. The present invention further relates to a method for controlling such a mobile agent system () and allows a flexible way of controlling the migration behavior of mobile agents () depending on system parameters.",
	"url": null,
	"owner": "Sony International (Europe) GmbH",
	"publication_number": "06915129",
	"publication_date": "2005-07-05",
	"application_number": "09494158",
	"application_date": "2000-01-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Communication system and device that provides service independent communication bridging",
	"summary": "",
	"abstract": "A communication device automatically transfers a software application to a bridge agent in response to an operational control channel between the communication device and the bridge agent. The bridge agent executes the software application to translate a bridge request into a bridge command. The bridge agent transfers the bridge command to the communication device. The communication device receives the bridge command through a physical port dedicated to bridge control. The communication device processes the bridge command to implement a bridge.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "06907046",
	"publication_date": "2005-06-14",
	"application_number": "09801225",
	"application_date": "2001-03-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer software framework and method for managing communication flow between a user interface and a computer application",
	"summary": "",
	"abstract": "The present invention discloses a computer software framework and method for managing communication flow between a user interface and a computer application performing a task comprising a plurality of steps. The sequence of the steps is controlled by the application, and a user operating the user interface controls the progression through the steps. Each step is mapped to an output file containing information to be sent to the user interface in support of the step. Each task is mapped to an output generator that generates an output sent via an output medium to the user interface based upon the content of the output file. A task object is instantiated, which models the task. The task object receives a progressional input from the user interface and receives a step sequence input from the application. The task object compares the progressional input to the step sequence input to identify a subsequent step, identifies the output file mapped to the subsequent step, and calls the output generator mapped to the task to generate an output to the user interface based upon the content of the output file mapped to the subsequent step.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "06971108",
	"publication_date": "2005-11-29",
	"application_number": "09671981",
	"application_date": "2000-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for deployment modification of transactional behavior in corba OTS",
	"summary": "",
	"abstract": "The present invention extends the programming model of OTS by providing a unique model that offers both flexibility and ease of use. This model separates the transactional behavior of CORBA method from the IDL interface. The transactional behavior of the CORBA method is specified in a deployment descriptor file. Each method is associated with a transactional policy. The server reads the policies of the methods during deployment time and makes decisions of making the method transactional based on the policy. Changing the transactional policy of a method is as easy as modifying the deployment descriptor and redeploying the server. If either of the two usage models that OTS offers is used, making a method transactional means that the IDL interface has to change, causing all the software components in the system to re-compile. With the present invention, such a change can be accomplished without need for such recompilation.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "06944643",
	"publication_date": "2005-09-13",
	"application_number": "09772548",
	"application_date": "2001-01-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for enumerating data pages in a stateless, distributed computing environment",
	"summary": "",
	"abstract": "The present invention discloses a method for enumerating data pages in a stateless, distributed computing environment. A user operating a uses interface calls a stateless application, which in turn invokes a stateful data structure to retrieve data from a datastore. Stateful data residing within the stateful data structure is converted to stateless data, and a display page comprising stateless data is returned to the user. Preferably, the stateless application and the stateful data structures are Enterprise JavaBeans (EJB) compliant session beans. In a preferred embodiment, a servlet generates the display page by retrieving the stateless data from the stateful session bean, the display page is returned to the user interface via a communication framework, and data is retrieved from the datastore via a persistence framework.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "06856995",
	"publication_date": "2005-02-15",
	"application_number": "09796191",
	"application_date": "2001-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for middle-tier optimization in CORBA OTS",
	"summary": "",
	"abstract": "To perform a distributed transaction in a CORBA environment, OTS (the CORBA Transaction Service) defines a process called u201ccontrol object interpositioningu201d. It must be carried out on the server side to ensure transaction integrity. However, for middle-tier servers (servers that do not access a database directly) this process is not necessary. The control object can be simply passed through. However, the two propagation methods of OTS do not provide a good way to take advantage of this fact. The present invention defines a model by which the deployment nature of the server can be specified. Middle-tier or database-tier can be defined in a deployment descriptor file, which is read in deployment time by the server process. The present invention will optimize the middle-tier servers by bypassing the control object interpositioning process and handing the control object directly to the next tier, bringing noticeable performance gains for an n-tiered system.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "06973657",
	"publication_date": "2005-12-06",
	"application_number": "09772545",
	"application_date": "2001-01-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Telecommunications provider agent",
	"summary": "",
	"abstract": "The invention is a provider agent product and method that operates as a software interface between a telephony card and a session manager in an advanced communications network. The provider agent receives event messages from the telephony card indicating on-hook events, off-hook events, and digit events. The provider agent instructs the telephony card to provide dial tone, ring current, ringback, and busy signals to the telephones. The provider agent also exchanges messages with a session manager in the network. These messages include: invite messages, reply messages, join messages, and terminate messages. In response to the above processing, the provider agent instructs the telephony card to interwork telephony signals on a telephony channel with ATM signals on an ATM virtual channel. The provider agent is comprised of a plurality of software objects that are stored on a software storage medium and that include: a controller object, port objects, and event objects. The provider agent objects are executed by a multithreaded processing system and each object has a separate processing thread. The provider agent and the telephony card communicate through an application programming interface that is specified in an Interface Definition Language (IDL) of a Common Object Request Broker Architecture (CORBA).",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "06870832",
	"publication_date": "2005-03-22",
	"application_number": "09803842",
	"application_date": "2001-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for content conversion of hypertext data using data mining",
	"summary": "",
	"abstract": "Method and system for content conversion of electronic data using data mining. A user is able select one or more hypertext elements from one or more hypertext electronic document for conversion based on user conversion preferences. For example, a user selects one or more display elements from one or more u201cweb-pagesu201d from the World-Wide-Web on the Internet or an intranet. The hypertext elements are extracted from one or more hypertext electronic documents and converted into a format suitable for display on a user device based on user conversion preferences. Selected hypertext elements are extracted and converted using data mining conversion operations. The data mining conversion operations allow a user to extract only desired display information displayed from a hypertext element and convert the display information into a format different than that defined for the original electronic document. The converted display information is appropriate for a user device such as hand-held, wireless phone, personal digital assistant, or other device.",
	"url": null,
	"owner": "Spyglass, Inc.",
	"publication_number": "06925595",
	"publication_date": "2005-08-02",
	"application_number": "09129308",
	"application_date": "1998-08-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data processing environment with methods providing contemporaneous synchronization of two or more clients",
	"summary": "",
	"abstract": "A synchronization system providing multi-client synchronization is described. By storing the data that is actually being synchronized (i.e., storing the actual physical body of a memo, for instance) inside an extra database, u201cGrand Unification Databaseu201d (GUD), (or by specially-designated client data set) under control of a central or core synchronization engine, rather than transferring such data on a point-to-point basis, the system of the present invention provides a repository of information that is available at all times and does not require that any other synchronization client (e.g., PIM client or hand-held device) be connected. The GUD provides a super-set of the other client data sets. Therefore, if the user now includes an additional client, such as a server computer storing user information, the synchronization system has all the information necessary for synchronizing the new client, regardless of whether any of the other clients are currently available. The system can, therefore, correctly propagate information to any appropriate client without having to u201cgo backu201d to (i.e., connect to) the original client from which that data originated.",
	"url": null,
	"owner": "Starfish Software, Inc.",
	"publication_number": "06915312",
	"publication_date": "2005-07-05",
	"application_number": "09928609",
	"application_date": "2001-08-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Cable modem link layer bridge",
	"summary": "",
	"abstract": "A cable modem link layer bridge includes a downstream forwarding task and an upstream forwarding task. The downstream forwarding task is structured to receive a first message from a cable network and forward the first message to a customer premises equipment (CPE). The upstream forwarding task is structured to receive a second message from the CPE and forward the second message to the cable network, the upstream and downstream forwarding tasks being multitasked such that the second message is forwarded by the upstream forward task while the first message is being forwarded by the downstream forwarding task.",
	"url": null,
	"owner": "STMicroelectronics, Inc.",
	"publication_number": "06839355",
	"publication_date": "2005-01-04",
	"application_number": "09461672",
	"application_date": "1999-12-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and apparatus for an instruction driven digital video processor",
	"summary": "",
	"abstract": "The present invention provides a system, method and an apparatus for a digital video processor comprising an error memory and a merge memory, a half pixel filter communicably coupled to the merge memory, a controller communicably coupled to the error memory, the merge memory and the half pixel filter. The present invention also including a sum unit communicably coupled to the error memory. The controller executing one or more instructions to provide motion compensation during video decoding.",
	"url": null,
	"owner": "STMicroelectronics, Inc.",
	"publication_number": "06947485",
	"publication_date": "2005-09-20",
	"application_number": "09990027",
	"application_date": "2001-11-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Server based control of robotic libraries",
	"summary": "",
	"abstract": "A method and apparatus for controlling a storage library through a network. A request originating from the network is received, wherein the request is in a protocol and includes a command for the storage library. A type for the request is identified. The request in the protocol is translated into a format used by the storage library to form a type specific request for the storage library in response to the type corresponding to a type for the storage library. The type specific request is sent to the storage library.",
	"url": null,
	"owner": "Storage Technology Corporation",
	"publication_number": "06856985",
	"publication_date": "2005-02-15",
	"application_number": "09546652",
	"application_date": "2000-04-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Implementing standards-based file operations in proprietary operating systems",
	"summary": "",
	"abstract": "A method for generating a file object identifier. A computer allocates memory to store the identifier. The disk volume holding the file object, the disk block holding the file object, and the value of the offset within the disk block holding the file object are stored in the allocated memory. In one embodiment, the file object is a file, a directory, or a symbolic link. In another embodiment, the memory allocated is 32 bits. In yet another embodiment, the disk volume value is a 4-bit value. In still another embodiment, the disk block value is a 23-bit value. In another embodiment, the block offset value is a 5-bit value. In another embodiment, the offset within the disk block is a multiple of 128 byte increments. In one embodiment, the generated file object identifier is a PORTABLE OPERATING SYSTEM INTERFACE (POSIX) file serial number.",
	"url": null,
	"owner": "Stratus Technologies Bermuda LTD",
	"publication_number": "06970892",
	"publication_date": "2005-11-29",
	"application_number": "09785607",
	"application_date": "2001-02-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Measuring the exact memory requirement of an application through intensive use of garbage collector",
	"summary": "",
	"abstract": "Method and apparatus are disclosed for the intensive use of garbage collection in order to determine the exact amount of memory that is consumed by a running application at any point of its execution. A garbage collector executes immediately prior to allocations of memory during execution of a program. The amount of memory used by the application is known after each such allocation of memory, and is very close to or equal to its theoretical requirement. A developer is also enabled to determine whether a specified memory allotment for an application is ever exceeded.",
	"url": null,
	"owner": "Sun Microsystems Inc.",
	"publication_number": "06898602",
	"publication_date": "2005-05-24",
	"application_number": "10315046",
	"application_date": "2002-12-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for achieving high availability in a networked computer system",
	"summary": "",
	"abstract": "The present invention describes a method and system for achieving high availability in a networked computer system. In particular, the method for achieving high-availability is executed in a networked computer system. The networked computer system includes nodes connected by a network. The method includes using high-availability-aware components to represent hardware and software in the networked computer system, managing the components to achieve a desired level of redundancy, and monitoring health of the networked computer system, including health of components and nodes. The method further includes detecting a failure in the networked computer system. Failures detected by the method include failures of a component and/or node. Finally, the method includes recovering from the failure by performing an appropriate failure recovery procedure.",
	"url": null,
	"owner": "Sun Microsystems Inc.",
	"publication_number": "06854069",
	"publication_date": "2005-02-08",
	"application_number": "09845770",
	"application_date": "2001-05-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Arbitration scheme for efficient parallel processing",
	"summary": "",
	"abstract": "A system and method for assigning operations to multiple pipelines in a graphics system is disclosed. The graphics system may include an arbitration unit coupled to a plurality of calculation pipelines. The arbitration unit is operable to provide graphics operations to selected ones of the calculation pipelines. Each of the calculation pipelines is operable to perform a graphics operation. Each of the calculation pipelines may include digital logic and/or a processing element for performing the graphics operations. An operation may be assigned to a pipeline if the pipeline is performing a low latency operation. A low latency operation may comprise an operation that is performed by one of the calculation pipelines in less time than a pre-determined number of clock cycles.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06963342",
	"publication_date": "2005-11-08",
	"application_number": "10085432",
	"application_date": "2002-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Area pattern processing of pixels",
	"summary": "",
	"abstract": "A circuit for outputting area pattern bits from an area pattern array. The circuit includes a first stage, second stage and third stage. The first stage is configured to output N adjacent scan lines from a 2Nu00d72N area pattern array based on a first address. N is a positive integer. The second stage is configured to receive the N adjacent scanlines and to select an Nu00d7N block from the N adjacent scanlines based on a second address. The third stage is configured to (a) select an (N/2)u00d7N region of bits from the Nu00d7N block and load bits of the (N/2)u00d7N region into a set of pixel tag outputs in a first mode, and (b) select an Nu00d7(N/2) region of bits from the Nu00d7N block and load bits of the Nu00d7(N/2) region into the set of pixel tag outputs in a second mode.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06924808",
	"publication_date": "2005-08-02",
	"application_number": "10387338",
	"application_date": "2003-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Asynchronous protocol framework",
	"summary": "",
	"abstract": "An invention is disclosed for providing an asynchronous protocol framework. A registry is provided having a plurality of proxies, wherein each proxy implements a generic interface for a related to a software component. In addition, each proxy is capable of providing specific messages to the related software component based on an underlying design structure of the software component, for example, EJB specific or JMS specific messages. A first proxy is obtained from the registry, wherein the first proxy is related to a first software component, a message is sent to the first software component using the generic interface of the first proxy. In particular, the first proxy sends a specific message to the first software component based on the underlying design structure of the first software component.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06925466",
	"publication_date": "2005-08-02",
	"application_number": "10104297",
	"application_date": "2002-03-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Bulk import in a directory server",
	"summary": "",
	"abstract": "A method of bulk import in a directory server, including defining an extended operation on a server and a client, sending an extended operation request from the client to the server, performing the extended operation after receiving the extended operation request from the server, sending a response of the server back to the client specifying an object identifier of the extended operation and data specific to the extended operation; and performing a series of LDAP add operations framed by extended operations to import an entry into the directory server. A bulk import system for a directory server, including a processor, a memory, extended operations defined on a server and a client, and software instructions residing in memory executable on the processor for performing a series of LDAP add operations framed by extended operations to import an entry into the directory server.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06877026",
	"publication_date": "2005-04-05",
	"application_number": "09877706",
	"application_date": "2001-06-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Caching mechanism for a virtual heap",
	"summary": "",
	"abstract": "A caching mechanism for a virtual persistent heap. A feature of a virtual persistent heap is the method used to cache portions of the virtual persistent heap into the physical heap. The caching mechanism may be effective with small consumer and appliance devices that typically have a small amount of memory and that may be using flash devices as persistent storage. In the caching mechanism, the virtual persistent heap may be divided into cache lines. A cache line is the smallest amount of virtual persistent heap space that can be loaded or flushed at one time. Caching in and caching out operations are used to load cache lines into the heap or to flush dirty cache lines into the store. Different cache line sizes may be used for different regions of the heap. Translation between a virtual persistent heap address and the heap may be simplified by the caching mechanism.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06874066",
	"publication_date": "2005-03-29",
	"application_number": "10783262",
	"application_date": "2004-02-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Client-specified display services in a distributed computing environment",
	"summary": "",
	"abstract": "Various embodiments of a mechanism for a client to specify a display service to be used by a service for displaying data for the client in a distributed computing environment are described. A display service on or associated with the device on which the client resides that the client wishes to use to display the results of the service. When the client runs the service, the client may send a message to the service specifying the service advertisement of the client's display service. The service may then generate a message channel that allows it to send messages to the client's display service. Thus, when displaying results, the service invoked by the client becomes a client of the client's display service and sends its results, directly or by reference, for display to that display service.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06898618",
	"publication_date": "2005-05-24",
	"application_number": "09693297",
	"application_date": "2000-10-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Compensating for the chromatic distortion of displayed images",
	"summary": "",
	"abstract": "A graphics system comprises pixel calculation units and a sample buffer which stores a two-dimensional field of samples. Each pixel calculation unit selects positions in the two-dimensional field at which pixel values (e.g. red, green, blue) are computed. The pixel computation positions are selected to compensate for image distortions introduced by a display device and/or display surface. Non-uniformities in a viewer's perceived intensity distribution from a display surface (e.g. hot spots, overlap brightness) are corrected by appropriately scaling pixel values prior to transmission to display devices. Two or more sets of pixel calculation units driving two or more display devices adjust their respective pixel computation centers to align the edges of two or more displayed images. Physical barriers prevent light spillage at the interface between any two of the display images. Separate pixel computation positions may be used for distinct colors to compensate for color distortions.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06924816",
	"publication_date": "2005-08-02",
	"application_number": "09809829",
	"application_date": "2001-03-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Configuration for a storage network",
	"summary": "",
	"abstract": "A storage system which supports distributed management of client configurations by storing such configuration information for a number of products across the storage network in a central repository is provided. The system further includes an external parser configuration file to provide a framework allowing users to access configuration data. The parser is separate from the configuration information repository. The parser is key-driven and extensible, facilitating programming, updates and modifications without modifying the binary library containing the configuration information.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06917929",
	"publication_date": "2005-07-12",
	"application_number": "09906894",
	"application_date": "2001-07-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Database store for a virtual heap",
	"summary": "",
	"abstract": "A database store method and system for a virtual persistent heap may include an Application Programming Interface (API) that provides a mechanism to cache portions of the virtual heap into an in-memory heap for use by an application. The virtual heap may be stored in a persistent store that may include one or more virtual persistent heaps, with one virtual persistent heap for each application running in the virtual machine. Each virtual persistent heap may be subdivided into cache lines. The store API may provide atomicity on the store transaction to substantially guarantee the consistency of the information stored in the database. The database store API provides several calls to manage the virtual persistent heap in the store. The calls may include, but are not limited to: opening the store, closing the store, atomic read transaction, atomic write transaction, and atomic delete transaction.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06957237",
	"publication_date": "2005-10-18",
	"application_number": "09587076",
	"application_date": "2000-06-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Device centric discovery and configuration for fabric devices",
	"summary": "",
	"abstract": "A host may be coupled to a fabric network. Fabric devices attached to the fabric network may be visible to the host through one or more host adapter ports. The host system may include a device centric discovery interface configured to provide an interface to a fabric driver to obtain information about the devices in the fabric network. The device centric discovery interface may be configured to return device centric discovery information such that a multi-path fabric device is presented as a single device with transport information provided for each path to the multi-path device. A device centric configuration interface may provide an interface to the fabric driver for device centric configuration of the devices in the fabric for use by the host such that a requested fabric device is configured for use by the host on multiple paths in the fabric network.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06965951",
	"publication_date": "2005-11-15",
	"application_number": "10147591",
	"application_date": "2002-05-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamically adjusting a sample-to-pixel filter in response to user input and/or sensor input",
	"summary": "",
	"abstract": "A graphics system capable of super-sampling and performing real-time convolution. The graphics system may comprise a graphics processor, a sample buffer, and a sample-to-pixel calculation unit. The graphics processor receives graphics data and generates a plurality of samples for each of a plurality of frames. The sample buffer stores the samples. The sample-to-pixel calculation unit is operable to generate output pixels by filtering the rendered samples using a filter. A display device then receives and displays the output pixels. A user may observe the displayed image and adjust properties of the filter according to the user's personal visual preferences. A display-monitoring device may be configured to capture the displayed image. The graphics system may then analyze the captured image and, in response to the captured image, perform filter adjustments.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06850236",
	"publication_date": "2005-02-01",
	"application_number": "09751665",
	"application_date": "2000-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "End point value correction when traversing an edge using a quantized slope value",
	"summary": "",
	"abstract": "A system and method for rendering a polygon, such as a triangle. The method may comprise receiving geometry data (or vertex data) defining vertices of the polygon. The method may compute initial vertex x,y values at end points proximate to each of the vertices of the polygon, and a slope value along each edge of the polygon. The computed slope may be a quantized slope value having a first number of bits of precision. The first number of bits of precision may produce inaccuracies for interpolated x,y values computed at the end points of an edge of the polygon. The method may then interpolate x,y values along each respective edge of the polygon using the computed slope along the respective edge of the polygon. Finally the method may store final x,y values for each respective edge of the polygon. The final x,y values comprise the interpolated x,y values for non-end points of the respective edge, and the computed initial vertex x,y values for each of the end points of the respective edge. The operation of storing the computed initial vertex x,y values for each of the end points of the respective edge, instead of using interpolated x,y values at the end points, operates to prevent inclusion of an extraneous pixel and/or exclusion of a pixel within the polygon.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06867778",
	"publication_date": "2005-03-15",
	"application_number": "10085635",
	"application_date": "2002-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Garbage collector for a virtual heap",
	"summary": "",
	"abstract": "A method and system for performing generational garbage collection on a virtual heap in a virtual machine is provided. The garbage collection method is suited for use with small consumer and appliance devices that have a small amount of memory and may be using flash devices as persistent storage. The garbage collection method may provide good performance where only a portion of the virtual heap may be cached in the physical heap. The virtual heap may use a single address space for both objects in the store and the in-memory heap. In one embodiment, a single garbage collector is run on the virtual heap address space. The garbage collection method may remove non-referenced objects from the virtual heap. The garbage collection method may also include a compaction phase to reduce or eliminate fragmentation, and to improve locality of objects within the virtual heap. In one embodiment, the garbage collector for the virtual heap may be implemented as a generational garbage collector using working sets in the virtual heap, where each generation is confined to a working set of the heap. The generational garbage collector may allow the flushing of changes after each garbage collection cycle for each working set region. Heap regions with different flushing policies may be used. An object nursery region without flushing where objects are initially created may be used. When a garbage collection cycle is run, objects truly referenced in the object nursery may be copied back into heap regions to be flushed, while short-lived objects no longer referenced may be deleted without flushing.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06865657",
	"publication_date": "2005-03-08",
	"application_number": "09586334",
	"application_date": "2000-06-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generic and dynamic mapping of abstract syntax notation (ASN1) to and from interface definition language for network management",
	"summary": "",
	"abstract": "A system and method for generic and dynamic mapping of managed object metadata. The data to be mapped may include type information about an attribute, action, or notification of a managed object. The first data type is entered into the mapping system, and then a corresponding second data type is determined and returned. In this manner, data types related to the attributes, events, or other parameters of managed objects are converted between various data description languages, such as OMG IDL and ASN1. A single interface is defined to describe substantially all data types and all managed objects. Having a single object interface for all TMN managed objects saves significant resources in that there is no need to statically compile and store separate interfaces for the many objects, which may increase the scalability of a network management system dramatically.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06915324",
	"publication_date": "2005-07-05",
	"application_number": "09556069",
	"application_date": "2000-04-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Graphics data accumulation for improved multi-layer texture performance",
	"summary": "",
	"abstract": "A graphics system applies multiple layers of texture information to triangles. The graphics system includes a hardware accelerator, a frame buffer and a video output processor. The hardware accelerator receives vertices of a triangle, identifies fragments of a sampling space which intersect the triangle, and applies the multiple layers of texture to the intersecting fragments. The multiple layers of textures may be stored in a texture memory external to the hardware accelerator. The hardware accelerator switches to a next texture layer after applying the textures of a current layer to all the fragments of the triangle. The hardware accelerator includes (or couples to) a texture accumulation buffer which stores color values associated with the triangle fragments between the application of successive texture layers. The frame buffer stores the samples and pixels generated from the samples by filtration. The video output processor transforms the pixels into a video signal.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06859209",
	"publication_date": "2005-02-22",
	"application_number": "09861468",
	"application_date": "2001-05-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Graphics data synchronization with multiple data paths in a graphics accelerator",
	"summary": "",
	"abstract": "A system and method for preserving the order of data items through a divergence-and-reconvergence of two or more paths in a hardware device. A host processor may write a first token to a first path in the hardware device. A convergence unit in the hardware device may receive and store the first token in a synchronization register. The host processor may poll the synchronization register to determine when the first token arrives in the synchronization register. In response to determining that the first token has arrived in the synchronization register, the host processor may safely write a sequence of one or more data items to a second path in the hardware device.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06864892",
	"publication_date": "2005-03-08",
	"application_number": "10093835",
	"application_date": "2002-03-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Graphics primitive size estimation and subdivision for use with a texture accumulation buffer",
	"summary": "",
	"abstract": "A graphics system configured to apply multiple layers of texture information to primitives. The graphics system receives parameters defining a primitive and performs a size test on the primitive. If the size test cannot guarantee that a fragment size of the primitive is less than or equal to a fragment capacity of a texture accumulation buffer, the primitive is divided into subprimitives, and the graphics system applies the multiple layers of texture to fragments which intersect the primitive. The graphics system switches from a current layer to the layer next when it has applied textures corresponding to the current layer to all the fragments intersecting the primitive. The graphics system stores color values associated with the primitive fragments in the texture accumulation buffer between the application of successive texture layers.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06914610",
	"publication_date": "2005-07-05",
	"application_number": "09861192",
	"application_date": "2001-05-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Graphics system using sample masks for motion blur, depth of field, and transparency",
	"summary": "",
	"abstract": "A method and apparatus for creating motion blur, depth of field, and screen door effects when rendering three-dimensional graphics data are disclosed. A graphics system configured with a graphics processor, a super-sampled sample buffer, and a sample-to-pixel calculation unit is disclosed. The graphics processor may be configured to use a sample mask to select different subsets of sample coordinates to be rendered for a particular frame. Each subset may be rendered applying a different set of attributes, and the resulting samples may then be stored together in the sample buffer. The sample-to-pixel calculation unit may be configured to filter the samples into output pixels that are provided to a display device. The attributes that may be changed from subset to subset include the viewpoint, the time at which objects in the data are rendered, which objects or geometric primitives in the data are rendered, the position of objects in the data, the color of objects in the data, the transparency of objects in the data, and the shape of objects in the data.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06956576",
	"publication_date": "2005-10-18",
	"application_number": "09571988",
	"application_date": "2000-05-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Graphics system with a buddy / quad mode for faster writes",
	"summary": "",
	"abstract": "A system and method are disclosed for rendering polygons. In some embodiments, parameter values may be rendered for only one sample position of multiple neighboring sample positions. The parameter values rendered for the one sample position may then be stored in multiple memory locations that correspond to the multiple neighboring sample positions. In some embodiments, storing parameter values in multiple memory locations may be achieved in a single write transaction. In some embodiments, utilization of a method for storage of a rendered sample to multiple memory locations may be subject to a specified test. The method may calculate a value needed for the specified test from vertex data and compare the calculated value with a specified limit. In some embodiments, a multiple storage mode may only be utilized for polygons greater than a certain size.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06847368",
	"publication_date": "2005-01-25",
	"application_number": "10094935",
	"application_date": "2002-03-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Magnified texture-mapped pixel performance in a single-pixel pipeline",
	"summary": "",
	"abstract": "A system and a method for improving magnified texture-mapped pixel performance in a single-pixel pipeline. Two textured pixel addresses corresponding to two pixels may be generated. The two textured pixel addresses may then be passed to the next unit in the pipeline, where the two textured pixel addresses can be examined if the corresponding two pixels correspond to a common set of texels in texture space. The two textured pixel addresses may be merged together if the two pixels correspond to the common set of texels. Merging may operate to create a combined texel structure. Texel data may be generated in response to receiving the combined texel structure. The texel data may be filtered using one or more texture filters in order to generate texture values.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06847372",
	"publication_date": "2005-01-25",
	"application_number": "10094934",
	"application_date": "2002-03-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mechanism and apparatus for returning results of services in a distributed computing environment",
	"summary": "",
	"abstract": "Systems and methods for returning results of services within a distributed computing environment are provided. After a client invokes one or more functions of a service, results of the function(s) may be returned to the client in a plurality of ways: for example, in a message, in a space (e.g., a network-addressable storage location), in a space wherein the client is notified via an event, using an advertisement returned in a message, using an advertisement returned in a space, and using an advertisement returned in a space wherein the client is notified via an event. The advertisement may include the information necessary to access and read the results in a storage location such as a space. A schema for the service may specify a plurality of messages which are usable to invoke the function(s) of the service. The messages, results, and advertisements may be expressed in a platform-independent and/or programming-language-independent data representation language such as XML. The availability of these plurality of methods may enhance the flexibility and adaptability of the distributed computing environment for a variety of situations, such as for clients having differing capabilities. For additional flexibility, results may also be efficiently passed to another service.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06868447",
	"publication_date": "2005-03-15",
	"application_number": "09660553",
	"application_date": "2000-09-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mechanism and apparatus for security of newly spawned repository spaces in a distributed computing environment",
	"summary": "",
	"abstract": "A system and method for providing security for newly spawned spaces in a distributed computing environment. A client may access a first space service. The creation of a second space may be requested, such as by the client sending an appropriate request to an interface of the first space. In one embodiment, the first space and second space may share a common storage model, storage facility, and/or XML schema. The second space may initially be configured to permit access only to the requesting client. In one embodiment, a root authentication token is created for the second space. An authentication service associated with the second space may be initialized, whereby the second space is configured to permit access only to a client holding the root authentication token. The root authentication token may be sent to the requesting client or service. The requesting client may send the root authentication token to a second client. The second client may then access the second space by sending to the second space at least one of the messages specified in the second schema along with the root authentication token. The requesting client may also modify the initially configured security policy of the second space such that the second space is configured to permit access to other clients.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06973493",
	"publication_date": "2005-12-06",
	"application_number": "09653241",
	"application_date": "2000-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mechanism and method for managing service-specified data in a profile service",
	"summary": "",
	"abstract": "A profiling service for accessing user data. The profiling service includes a hierarchical structure of profile objects. Each profile object contains true-data attributes and meta-data attributes associated to the true-data attributes. Methods in the profiling service allow a client to access user data according to meta-data attribute settings. The true-data attributes may include the user data, or an external reference to the user data. The profile objects may also include bindings to other profile objects. Meta-data attributes can be identified with a prefix field in a meta-data value field, and methods to read and write the true and meta-data attributes may be included in the profile objects. The methods may also set an owner, an access privilege, a group, a creation time, a update time, expiration time, a trigger location, a binding flag, and an assurance level of true-data attributes. The profile objects can include profile level meta-data attributes.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06920455",
	"publication_date": "2005-07-19",
	"application_number": "09315200",
	"application_date": "1999-05-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mechanism for enabling customized session managers to interact with a network server",
	"summary": "",
	"abstract": "A mechanism for enabling customized session managers to interact with a network server is disclosed. A programming interface enables customized session managers to u201cplug inu201d to and to interact with the server, making it possible to change session management functionality without having to make any changes to the core server. It also makes it possible to incorporate multiple session managers into the server. These aspects of the programming interface significantly increase the flexibility and scalability of the web server. The mechanism further includes a service engine for coordinating the interaction with the session managers. For each client request, the service engine determines which application needs to be invoked. Then, based upon that application, the service engine determines which, if any, associated session manager needs to be invoked to manage session (i.e. state) information for that application. The service engine invokes the session manager via the programming interface.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06944666",
	"publication_date": "2005-09-13",
	"application_number": "10665637",
	"application_date": "2003-09-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mechanism for implementing server-side pluglets",
	"summary": "",
	"abstract": "A server-centric approach is disclosed for enabling a browser to handle content types that it cannot inherently process. Rather than executing plug-ins on a client, pluglets are executed on one or more servers. A pluglet can perform any function that a plug-in can perform. Because a pluglet resides and executes on a server, the shortcomings of the plug-in approach are overcome. Specifically, a client no longer needs to have large amounts of storage and processing resources since pluglets do not run on clients. Also, a user no longer needs to install plug-ins on a client. In addition, maintenance of the overall system is greatly simplified. To replace, add, or remove functionality, all that needs to be done is to replace, add, or remove pluglets from a relatively small number of servers. It is no longer necessary to maintain plug-ins on a relatively large number of clients. Thus, the server-centric approach enables the benefits of plug-in technology to be realized, but does so without suffering the associated shortcomings.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06973480",
	"publication_date": "2005-12-06",
	"application_number": "10256673",
	"application_date": "2002-09-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Message conductors in a distributed computing environment",
	"summary": "",
	"abstract": "Embodiments of a message conductor in a distributed computing environment are described. A message conductor may accept a data representation language schema that describes the ordering for messages that may be sent between a client and a service. This schema may specify user interface information. The schema may be parsed into an internal form and used to enforce message ordering. The conductor may prevent messages from being sent out of order. In some embodiments, a conductor may be linked to multiple gates. The message conductor may also provide a service interface that may interact with clients of the service to obtain all information to run a service, and then either display results of running the service or return information regarding the location of results. The service interface may be part of a message conductor or may be in addition to and work with the message conductor.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06950875",
	"publication_date": "2005-09-27",
	"application_number": "09693682",
	"application_date": "2000-10-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Message gates in a distributed computing environment",
	"summary": "",
	"abstract": "Embodiments of message gates are described. A message gate is the message endpoint for a client or service in a distributed computing environment. A message gate may provide a secure endpoint that sends and receives type-safe messages. Gates may perform the sending and receiving of messages between clients and services using a protocol specified in a service advertisement. In one embodiment, the messages are eXtensible Markup Language (XML) messages. For a client, a message gate represents the authority to use some or all of a service's capabilities. Each capability may be expressed in terms of a message that may be sent to the service. Creation of a message gate may involve an authentication service that generates an authentication credential, and that may negotiate the desired level of security and the set of messages that may be passed between client and service. A message gate may perform verification of messages against a message schema to ensure that the messages are allowed. Message gates may embed the authentication credential in outgoing messages so that the receiving message gate may authenticate the message. Messages may also include information to allow the receiving gate to verify that the message has not been compromised prior to receipt.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06850979",
	"publication_date": "2005-02-01",
	"application_number": "09653229",
	"application_date": "2000-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Message-based leasing of resources in a distributed computing environment",
	"summary": "",
	"abstract": "A system and method for providing message-based leasing of resources in a distributed computing environment. Services may issue leases to clients and provide operations on those leases. The lease functionality of a service may be defined in an XML message schema. Gates may be used to perform lease operations. Leases may be granted for a period that may be negotiated. Leasing messages for performing leasing operations may be defined. The leasing messages may include messages to renew a lease and to cancel a lease. Services may specify an address where leasing messages may be sent. A lease renewal mechanism may be provided in which a gate may receive lease renewal messages and automatically respond to them. A mechanism to detect stale advertisements in a space may be provided. When a service publishes its advertisement in a space, the service obtains a lease on the publishing of its advertisement. Each advertisement may include a time by which the service may renew the advertisement. When the lease is not renewed, the space service marks the service advertisement as stale. Services renew advertisements by sending a renewal message to the space. Stale service advertisements may be deleted after a period. A space service may allow clients to lease service advertisements in the space to thus grant clients access to the services. Messages are described for accessing the leasing services provided by the space services.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06917976",
	"publication_date": "2005-07-12",
	"application_number": "09653216",
	"application_date": "2000-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for a mobile multimedia java framework",
	"summary": "",
	"abstract": "An invention is provided for creating a mobile multimedia framework API capable of operation in mobile hardware devices is disclosed. All API component access parameters are set to utilize a synchronous programming model. Then, the API components are set to use a pull paradigm, and all master/slave functionality is removed. The resulting mobile multimedia framework API has a memory size of less than 100 kilobytes.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06928648",
	"publication_date": "2005-08-09",
	"application_number": "09930850",
	"application_date": "2001-08-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for adaptive local image quantification verification",
	"summary": "",
	"abstract": "A method and apparatus are disclosed for testing the accuracy of digital images generated by a computer graphics program executed on a computer graphics system. A test program is utilized to compare test images with a set of reference images. Adaptive local image quantification verification aims at an image comparison that allows specified color value and spatial shifts. The color value for each pixel of a specified portion of the test image is compared to the average color value of an offset array of pixels in a reference image. A test image region may be unacceptably different from a reference image, if for any pixel of the test image region an offset reference image array is not found that has an array size, absolute color value difference, and spatial shift less than specified maximums.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06961468",
	"publication_date": "2005-11-01",
	"application_number": "10113954",
	"application_date": "2002-03-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for authentication and payment for devices participating in Jini communities",
	"summary": "",
	"abstract": "Architectures that enable different types of security devices to operate interchangeably in very large network environments for authentication and metered access to services are described. The system relies on a lease-based access to the network services. The leasing model supports a smart card type payment for services allowing for payments to be automatically forwarded from the smart card type device to the service whenever a service is leased. To lease a service, the requesting service must first be authenticated using devices like cellular phones, smart cards, Personal Data Assistants, or similar devices that have processing and memory capabilities and in some instances, wireless communication capabilities. Services may enter or exit the environment at will. Devices and services in this environment have public certificates that are used for authentication. Services may customize access to its products to make them available only to desired services.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06877094",
	"publication_date": "2005-04-05",
	"application_number": "09627848",
	"application_date": "2000-07-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for detecting device support in a graphical user interface",
	"summary": "",
	"abstract": "Embodiments of the invention comprise techniques to detect support for a given input device by a screen element of a graphical user interface (GUI). In one embodiment of the invention, a runtime version of a screen element's program code is examined to detect an ability to process a device's events. In another embodiment of the invention, a determination is made at runtime whether a screen element delegated processing of a given input device's events to other program code. In yet another embodiment of the invention, the runtime version of a screen element's program code is examined to detect a declaration of program code that is indicative of a the screen element's support or non-support of a given input device. In yet another embodiment of the invention, one or more of the previously-identified embodiments can be combined.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06930695",
	"publication_date": "2005-08-16",
	"application_number": "09201644",
	"application_date": "1998-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for eliminating C recursion from a Javau2122 bytecode interpreter",
	"summary": "",
	"abstract": "Methods and apparatus for eliminating C recursion from interpreter loops are disclosed. According to one aspect of the present invention, a computer-implemented method for substantially eliminating C recursion from the execution of static initializer methods in a virtual machine environment includes rewriting native C code associated with a static initializer as a Javau2122 method, and using a transition frame in a Javau2122 stack to execute the Javau2122 method. The method also includes using a native method to manipulate the Javau2122 stack, and using a first opcode in the transition frame. In one embodiment, using the first opcode in the transition frame includes using the first opcode to determine that the transition frame is associated with the static initializer. In another embodiment, the method further includes causing the static initializer to run, wherein the static initializer using a second opcode, and resuming execution at the second opcode after the static initializer has run.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06915508",
	"publication_date": "2005-07-05",
	"application_number": "09841757",
	"application_date": "2001-04-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for extending coverage of GUI tests",
	"summary": "",
	"abstract": "A method of testing a graphical user interface includes selecting a widget of the graphical user interface, associating an access mode with the widget, generating a mode-specific input message based on the widget and the access mode, sending the mode-specific input message to the graphical user interface, detecting a mode-specific response from the graphical user interface using a detection tool, and evaluating the graphical user interface based on the mode-specific response.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06871327",
	"publication_date": "2005-03-22",
	"application_number": "10090188",
	"application_date": "2002-03-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for selecting attachments",
	"summary": "",
	"abstract": "A method and apparatus for selecting attachments. When a sender indicates in an e-mail application or applet that an attachment is to be associated with an e-mail message, an attachment chooser window is presented. The attachment chooser window provides a browser-based graphical user interface (GUI) which allows a sender to browse data resources, such as HTML documents and associated links. An attachment mechanism is provided by which a sender can choose a currently displayed data resource for attachment in an e-mail message. In one embodiment, the attachment mechanism allows a user to select whether the attachment is retrieved and attached to an e-mail message as a resource locator (such as a URL) of the chosen data resource, or whether source data of the data resource is retrieved and attached to the e-mail message as one or more source files.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06859213",
	"publication_date": "2005-02-22",
	"application_number": "09046784",
	"application_date": "1998-03-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus of performing active update notification",
	"summary": "",
	"abstract": "A method and apparatus of performing active update notification. Components of an application are able to specify interest in a data object or set of data objects by registering an interest object with an update management component of the application. The interest object specifies the interested application component, as well as the identity of one or more data objects or an attribute value or range of values to associate with data objects. When modifications are made to data objects corresponding to the registered interest objects, the interested application component or components receive an update notification from the update management component. In one embodiment, active update notification is performed within a multi-tier application. An update management component exists at the application server on the application tier, as well as at each client in the client tier. In the application tier, the update management component maintains, with respect to clients and servers, a registry of interest objects of sufficient depth to determine which clients or other servers may be interested in changes to data objects. Update notifications are then sent only to the interested clients or servers. The interest registry of the update management component in the interested client is used to resolve the interested application component, and to forward the update notification appropriately.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06895401",
	"publication_date": "2005-05-17",
	"application_number": "10436125",
	"application_date": "2003-05-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus to discover services using flexible search criteria",
	"summary": "",
	"abstract": "A service discovery protocol may allow clients in a distributed computing environment to search for services using flexible search criteria. A client may send a search message that may be formatted in a data representational language and may include search criteria. The search criteria may specify a service name or a service type or both a service name and a service type. The search criteria may be compared to advertisements for services within the distributed computing environment to find advertisements that match the search criteria. An advertisement may be a document in the data representation language that provides access information for a corresponding service. The client may receive one or more search response messages indicating one or more advertisements that match the search criteria. The client may obtain and advertisement for a located service and may use the advertisement to construct a message gate to communicate with the service according to messages defined by the advertisement.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06862594",
	"publication_date": "2005-03-01",
	"application_number": "09653608",
	"application_date": "2000-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for improving the performance of safe language multitasking",
	"summary": "",
	"abstract": "A system and method are provided for isolating the execution of a plurality of applications which access shared data. A limited number of special classes encapsulate data that should be shared by all classes in the multitasking system. Static fields of all classes, including the special classes, are virtualized such that each application has its own copy of static fields and class monitors. However, a special class has special program code associated with it, such that an invocation of any of the methods of the special class causes a switch of an application ID associated with the thread (referred to herein as an effective thread application ID or TA-ID) to a constant value. Thus, the applications may access a single, shared copy of the special class. The TA-ID may be changed back to the original value upon exiting one of the methods. Although one instance of identifier-switching is typically more costly than one instance of determining whether a class is special, the identifier-switching may be performed only for special classes rather than for all classes. The common case may therefore be optimized.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06851114",
	"publication_date": "2005-02-01",
	"application_number": "09707579",
	"application_date": "2000-11-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for rasterizing graphics for optimal tiling performance",
	"summary": "",
	"abstract": "A graphics system and method are disclosed that may optimize the rate of pixel generation to match the rate at which a memory may be designed to receive pixel data. If a memory is configured to store multiple pixels substantially simultaneously, it may be advantageous to render an equivalent number of pixels substantially simultaneously and at the same rate. An edge walker that utilizes multiple sets of accumulators to generate multiple scan lines substantially simultaneously and a span walker that utilizes multiple sets of accumulators to render multiple pixel values substantially simultaneously is described.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06900803",
	"publication_date": "2005-05-31",
	"application_number": "10096346",
	"application_date": "2002-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for reduction of possible renderable graphics primitive shapes for rasterization",
	"summary": "",
	"abstract": "A graphics system and method for rendering a plurality of triangles. Information regarding the triangle may first be received. The method may then determine the longest edge or major edge of the triangle and also determine the direction or axis of the longest edge of the triangle. The method may then perform edge walking on the major edge (e.g., along the axis of the major edge) of the triangle, followed by span walking. The edge walking is preferably always performed on the major or longest edge of the triangle, prior to the span walking, and regardless of the orientation of the major edge of the triangle. This operates to load balance the edge walker and the span walker for the plurality of triangles.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06975317",
	"publication_date": "2005-12-13",
	"application_number": "10096090",
	"application_date": "2002-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and program for discovering devices communicating through a switch",
	"summary": "",
	"abstract": "Provided is a computer implemented method, system, and program for discovering a topology of a switch from an initiator device. The switch includes a plurality of switch ports. A plurality of Input/Output (I/O) devices are connected to the switch ports, wherein each I/O device and the initiator device connect to the switch through one of the switch ports. The initiator and I/O devices communicate on a first network configured by the switch and the initiator device communicates with the switch over a second network. The initiator device performs submitting a first query over the first network to the switch requesting a unique address of a plurality of I/O devices that are accessible to the initiator device over the first network. In response to the first query to the switch on the first network, the unique address of each I/O device is received from the switch. A second query is submitted over the second network to the switch for information on switch ports on the switch. In response to the second query to the switch over the second network, the information on the switch ports is received. Information on a topology of the switch ports and the initiator and I/O devices having the unique address is generated.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06965559",
	"publication_date": "2005-11-15",
	"application_number": "10039807",
	"application_date": "2001-10-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and program for managing information for an application program using a file management system",
	"summary": "",
	"abstract": "Provided is a method, system, and program for managing information for an application program. The information includes an information class having a plurality of attributes values. The application program maintains multiple information class instances and wherein each instance includes at least one of the plurality of attribute values. User input is received indicating a plurality of information class instances and for each information class instance at least one attribute value. A main directory is generated for the application program. For each information class instance received from the user, a subdirectory is generated from the main directory for the information class instance and, for each received attribute value for the information class instance, one attribute file is generated providing the at least one attribute value. Each generated attribute file is stored in the subdirectory of the information class instance for which the attribute value is provided.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06934721",
	"publication_date": "2005-08-23",
	"application_number": "09973889",
	"application_date": "2001-10-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for efficiently accessing periodically broadcast data",
	"summary": "",
	"abstract": "The invention relates to methods and apparatus for accessing data that is periodically transmitted by a broadcaster. In accordance with one aspect of the invention, a receiver capable of reception of data is disclosed. The data is transmitted by a broadcaster in a broadcasting system. The receiver reduces the delay conventionally encountered in accessing periodically transmitted data in a broadcasting system.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06976268",
	"publication_date": "2005-12-13",
	"application_number": "09733609",
	"application_date": "2000-12-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for implementing an application lifecycle design for applications",
	"summary": "",
	"abstract": "Methods and apparatus for managing execution of an application according to an application lifecycle. The application lifecycle is managed by an application manager through a set of commands that enable the application manager to cause the application to enter one of a plurality of states. In addition, the application can communicate with the application manager to indicate that the application cannot change its state as the application manager has requested or to request that the application manager change the state of the application to a particular state.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06874145",
	"publication_date": "2005-03-29",
	"application_number": "09465994",
	"application_date": "1999-12-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for facilitating message exchange between networked computing entities",
	"summary": "",
	"abstract": "Methods for establishing communication between computing entities are provided. In one example, a service model illustrates communication with a web server using a service proxy to manage a communication exchange. The service model includes a dispatcher within the service proxy to process the communication exchange. The processing of the communication exchange includes defining a request, defining a container in which to enclose the request, defining a post request event to dispatch the container with the request, and defining a response container for obtaining a response to the request. The container with the request is transmitted through the web server to a service for a responding entity. The service uses a delegate registry to map the request to a delegate which obtains a response from the responding entity. The response is formatted and transmitted through the web server to the service proxy which provides the response to the requesting entity.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06950872",
	"publication_date": "2005-09-27",
	"application_number": "10028195",
	"application_date": "2001-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multi-spectral color correction",
	"summary": "",
	"abstract": "A system and method for performing color correction based on physical measurements (or estimations) of color component spectra (e.g. red, green, blue color component spectra). A color correction system may comprise a spectrum sensing device, a color calibration processor, and a calculation unit. The spectrum sensing device may be configured to measure color component power spectra for pixels generated by one or more display devices on a display surface. The color calibration processor may receive power spectra for a given pixel from the spectrum sensing device and compute a set of transformation parameters in response to the power spectra. The transformation parameters characterize a color correction transformation for the given pixel. The color calibration processor may compute such a transformation parameter set for selected pixels in the pixel array. The calculation unit may be configured to (a) compute initial color values for an arbitrary pixel in the pixel array, (b) compute modified color values in response to the initial color values and one or more of the transformation parameter sets corresponding to one or more of the selected pixels, and (d) transmit the modified color values to the display device.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06950109",
	"publication_date": "2005-09-27",
	"application_number": "09952379",
	"application_date": "2001-09-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multiple scan line sample filtering",
	"summary": "",
	"abstract": "A system and method for generating pixels for a display device. The system may include a sample buffer for storing a plurality samples in a memory, a sample cache for caching recently accessed samples, and a sample filter unit for filtering one or more samples to generate a pixel. The generated pixels may then be stored in a frame buffer or provided to a display device. The method operates to take advantage of the common samples shared by neighboring pixels in both the x and y directions for reduced sample buffer accesses and improved performance. The method involves reading samples from the memory that correspond to pixels in a plurality of neighboring scan lines, and possibly also to multiple pixels in each of these scan lines. The samples may be stored in a cache memory and then accessed from the cache memory for filtering. The method maximizes use of the common samples shared by neighboring pixels in both the x and y directions.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06914609",
	"publication_date": "2005-07-05",
	"application_number": "10085636",
	"application_date": "2002-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multipurpose memory system for use in a graphics system",
	"summary": "",
	"abstract": "A graphics system may include a frame buffer, a processing device coupled to output data, a multipurpose memory device that includes a plurality of storage locations and is coupled to store data output from the processing device, and a multipurpose memory controller coupled to the multipurpose memory device. The multipurpose memory controller may be configured to allocate a first plurality of the storage locations to a first image buffer configured to store image data, a second plurality of the storage locations to a first texture buffer configured to store texture data, and a third plurality of the storage locations to a first accumulation buffer configured to store accumulation buffer data. The multipurpose memory device may be configured to include a first image buffer, a first texture buffer, and a first accumulation buffer at the same time.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06906720",
	"publication_date": "2005-06-14",
	"application_number": "10096065",
	"application_date": "2002-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Object band customization of Java runtime environments",
	"summary": "",
	"abstract": "Techniques for customization of Java runtime environments are disclosed. The techniques can be used to provide Java runtime environments that are specifically tailored for various Java applications. Accordingly, for a particular Java application, an optimized runtime environment can be created. One or more optional attributes which represent the desired runtime customizations are generated. As will be appreciated, the optional attributes can be generated in the attribute table in the class file. The optional attributes can then be parsed and appropriate features can be loaded into the virtual machine. In this way, Java runtime environments can be customized based on a particular Java application requirement. Moreover, customizations can be automated using a runtime performance manager that interacts with various other components that operate to first generate and then load optional attributes into the Java runtime environment.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06964033",
	"publication_date": "2005-11-08",
	"application_number": "09886440",
	"application_date": "2001-06-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Opcode to turn around a bi-directional bus",
	"summary": "",
	"abstract": "A system for managing the control of a bi-directional data bus between a master unit and a slave unit. The master couples to the slave through a request opcode bus, a reply opcode bus and the data bus. If the master is in a bus driving state (with respect to the data bus) and receives a read request, the master relinquishes bus control and sends a read request through the request opcode bus. The slave unit assumes bus control and sends the requested data through the data bus. If the master is in a bus sensing state and receives a write request, the master sends a last read opcode to the slave via the request opcode bus, and waits for the slave to return a special token through the reply opcode bus. Upon receiving the special token the master unit assumes bus control and performs the write transaction.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06895458",
	"publication_date": "2005-05-17",
	"application_number": "10090491",
	"application_date": "2002-03-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Optimistic transaction compiler",
	"summary": "",
	"abstract": "A method for updating Enterprise JavaBeans (EJB) classes is provided. Each EJB class is managed by an application server which maintains a database of active EJB classes. The method includes defining an update plug for an existing EJB class and assigning the update plug to the existing EJB. The method also includes compiling the existing EJB class using the update plug to generate a dependent EJB class. The dependent EJB class uses an adapter and a contract to gain access to methods of the dependent EJB class. Each method of the dependent EJB class is associated with an algorithm that defines a locking timestamp.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06892202",
	"publication_date": "2005-05-10",
	"application_number": "10124825",
	"application_date": "2002-04-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Optimized packing of loose data in a graphics queue",
	"summary": "",
	"abstract": "A data queue optimized for receiving loosely packed graphics data and suitable for use in a computer graphics system is described. The data queue operates on first-in-first-out principals, and has a variable width input and output. The variable width on the input side facilitates the reception and storage of loosely packed data. The variable width output allows for the single-cycle output of multi-word data. Packing of the data occurs on the write-side of the FIFO structure.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06847369",
	"publication_date": "2005-01-25",
	"application_number": "10060915",
	"application_date": "2002-01-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Panning while displaying a portion of the frame buffer image",
	"summary": "",
	"abstract": "A graphics system and method for panning from one portion of a stored image to another portion of the image includes a frame buffer, one or more display devices, one or more raster parameter registers, and one or more raster parameter updaters. The image is stored in the frame buffer and each display device is configured to display less than the entire image. A panning operation is initiated by requesting an update of one or more of the raster parameter registers during a next blanking period.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06864900",
	"publication_date": "2005-03-08",
	"application_number": "09861467",
	"application_date": "2001-05-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Parallel box filtering through reuse of existing circular filter",
	"summary": "",
	"abstract": "A sample filtering system and method for concurrently filtering sample data for two or more sequential pixels (in a scan-line) are disclosed. The system may include a sample cache, a control register, a read cache controller, and a sample-to-pixel calculation unit. The read cache controller reads a first set of S samples from the sample cache, and outputs a second set of S samples to the sample-to-pixel calculation unit. The second set of samples may have one or more subsets of samples, with each subset of samples selected to cover the filter region for one of the sequential pixels. The sample-to-pixel calculation unit may process each subset separately and concurrently.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06927775",
	"publication_date": "2005-08-09",
	"application_number": "10377924",
	"application_date": "2003-03-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Pluggable authentication and access control for a messaging system",
	"summary": "",
	"abstract": "A system and method for providing pluggable authentication and access control in computer systems and services are described. The authentication and access control process may be categorized into three components: an authentication protocol, a user repository and an access control model. In one embodiment, the authentication and access control mechanism may be implemented as three pluggable modules: an authentication protocol handler module for the authenticator side, an authentication protocol handler for the side to be authenticated, and an access control context module on the authenticator side. The pluggable modules may be exchangeable to support a variety of authentication types, user repositories, and access control models. The authentication protocol handlers provide symmetrical methods to handle requests and responses in the authentication process that reflect the symmetrical nature of the authentication process.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06954792",
	"publication_date": "2005-10-11",
	"application_number": "09896090",
	"application_date": "2001-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Pluggable authentication modules for telecommunications management network",
	"summary": "",
	"abstract": "A system and method for authenticating users over a network. At least one pluggable authentication module (PAM) is used to authenticate users of network services. Each PAM includes a client-side authentication library and a server-side authentication library which may each be implemented in accordance with a specification expressed in an interface definition language (IDL), wherein the IDL is operable to define interfaces across a plurality of platforms and programming languages. The client-side authentication library is implemented for a particular client platform and deployed on the client computer system to provide a client-side interface to retrieve and encrypt a user profile. The server-side authentication library is implemented for a particular server platform and deployed on the server computer system to provide a server-side interface to receive the encrypted user profile from the client-side authentication library and decrypt the user profile to authenticate the user for network services. The client-side authentication library may be shared by a plurality of management applications and the server-side authentication library may be shared by a plurality of gateway components.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06950935",
	"publication_date": "2005-09-27",
	"application_number": "09553967",
	"application_date": "2000-04-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Populating binary compatible resource-constrained devices with content verified using API definitions",
	"summary": "",
	"abstract": "Remote incremental program verification may be achieved by receiving content verified by at least one content provider, installing the content on a resource-constrained device, issuing the resource-constrained device to an end user, and allowing post-issuance installation of verified content on the resource-constrained device by a trusted post-issuance installer. The at least one content provider includes an applet provider, a device manufacturer, a device issuer, and a trusted post-issuance installer. The content includes at least one program unit, where each program unit comprises an Application Programming Interface (API) definition file and an implementation. Each API definition file defines items in its associated program unit that are made accessible to one or more other program units, and each implementation includes executable code corresponding to the API definition file. The executable code includes type-specific instructions and data. The verification includes determining binary compatibility of earlier program unit implementations with later program unit implementations.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06981245",
	"publication_date": "2005-12-27",
	"application_number": "09661582",
	"application_date": "2000-09-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Populating resource-constrained devices with content verified using API definitions",
	"summary": "",
	"abstract": "Remote incremental program verification may be achieved by receiving content verified by at least one content provider, installing the content on a resource-constrained device, disabling subsequent installation of content on the resource-constrained device, and issuing the resource-constrained device to an end user. The at least one content provider includes an applet provider, a device manufacturer, and a device issuer. The content includes at least one program unit, where each program unit comprises an Application Programming Interface (API) definition file and an implementation. Each API definition file defines items in its associated program unit that are made accessible to one or more other program units, and each implementation includes executable code corresponding to the API definition file. The executable code includes type specific instructions and data.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06883163",
	"publication_date": "2005-04-19",
	"application_number": "09661581",
	"application_date": "2000-09-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Process persistence in a virtual machine",
	"summary": "",
	"abstract": "A system and method for providing process persistence in a virtual machine are described. A virtual persistent heap may be provided. The virtual persistent heap may enable the checkpointing of the state of the computation of a virtual machine, including processes executing within the virtual machine, to a persistent storage such as a disk or flash device for future resumption of the computation from the checkpoint. The Virtual Persistent Heap also may enable the migration of the virtual machine computation states, and thus the migration of executing processes, from one machine to another. The saved state of the virtual machine heap may also provide the ability to restart the virtual machine after a system crash or shutdown to the last saved persistent state, and to thus restart a process that was running within the virtual machine prior to the system crash or shutdown to a checkpointed state of the process stored in the virtual persistent heap. This persistent feature is important for small consumer and appliance devices, as these appliances may be shutdown and restarted often.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06854115",
	"publication_date": "2005-02-08",
	"application_number": "09587078",
	"application_date": "2000-06-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Recovering added precision from L-bit samples by dithering the samples prior to an averaging computation",
	"summary": "",
	"abstract": "A dithering system comprising a dithering unit, a storage medium, and an averaging unit. The dithering unit is configured to receive a set of data values, to add dither values to the data values, and to truncate the resultant addition values to L-bit truncated values. The storage medium is configured to store the L-bit truncated values. The averaging unit is configured to read the L-bit truncated values from the storage medium, and to compute an average value using at least a subset of the L-bit truncated values. The dither values may have an average value of approximately one-half. The dither values may approximate a uniform distribution of numbers between u2212A+u00bd and A+u00bd, wherein A is greater than or equal to one. Alternatively, the dithering unit may receive a temporal stream of data values, and the average unit may perform a temporal average (e.g. an FIR filter). The dithering system may be incorporated in a graphics system. In this case, data values may represent rendered sample values (e.g. color or alpha).",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06894698",
	"publication_date": "2005-05-17",
	"application_number": "09760512",
	"application_date": "2001-01-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Rendering lines with sample weighting",
	"summary": "",
	"abstract": "A graphics system and method for displaying lines on a display device. The system may comprise a sample buffer, a rendering unit and a sample-to-pixel calculation unit. The rendering unit may (a) generate a plurality of sample positions in a two-dimensional space, (b) determine a sample normal distance for each of the sample positions with respect to a line defined by the line-draw command, (c) assign sample values to the sample positions based on the sample normal distance of each of the sample positions, and (d) store the sample values in the sample buffer. The sample-to-pixel calculation unit may read sample values from the sample buffer, filter them to determine a pixel value, and transmit the pixel value to the display device. The rendering unit may render the line sample values with a narrower width to pre-compensate for the line-expanding effect of the filtering performed by the sample-to-pixel calculation unit.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06947057",
	"publication_date": "2005-09-20",
	"application_number": "09752297",
	"application_date": "2000-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Replication architecture for a directory server",
	"summary": "",
	"abstract": "A directory server includes a supplier server, a consumer server in communication with the supplier server, a plurality of pluggable services that manage replication of data contained within the directory server from the supplier server to the consumer server, and a change log maintained on the consumer server of data replicated to the consumer server. The replication of data is managed by the plurality of pluggable services using the change log.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06973463",
	"publication_date": "2005-12-06",
	"application_number": "09993940",
	"application_date": "2001-11-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Resource locator",
	"summary": "",
	"abstract": "A computing environment includes an application server code resident on a remote application server that can be distributed by a local server. A request for information by a client is serviced by a request handler on the local application server. If the information is available on the local application server, the request handler satisfies the request. If the information is not available locally, the request handler can access the remote application server. When the information is copied to the local application server, the request handler retains a copy of the information and forwards a copy to the client. Where the information cannot be transferred to the local application server, the request handler can establish a proxy to the remote server and a response from the remote application server to the client. The client communicates with the remote application server via the proxy on the local application server and is unaware of the remote application server.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06868448",
	"publication_date": "2005-03-15",
	"application_number": "09267794",
	"application_date": "1999-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Safe language static variables initialization in a multitasking system",
	"summary": "",
	"abstract": "A system and method are provided for thread-safe initialization of static variables in a multitasking system. In one embodiment, the static fields of a class may be u201cvirtualizedu201d such that each application that utilizes the class has its own copy of static fields. Each separate copy of the static fields is initialized only once. Instructions for performing the initialization may be embedded in a class constructor. The class constructor may be executed only once for each separate copy of the static fields. A template class may be loaded for each separate copy of the static fields when a copy of the static fields is sought to be initialized. The template class may include a static initializer for one of the separate copies of the static fields. The static initializer may be executed once for each separate copy of the static fields.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06901586",
	"publication_date": "2005-05-31",
	"application_number": "09707578",
	"application_date": "2000-11-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Search engine interface and method of controlling client searches",
	"summary": "",
	"abstract": "A method for controlling access provided to content files during an information search initiated by a client device and performed by a search engine. The method includes receiving a search request from the client. A modified search request is generated by applying a search profile for the user of the client device to the received search request. The modified search request is then routed to the search engine to apply search criteria in the modified search request to search engine collections populated from the content files. The user's search profile includes restrictions defining which of the search engine collections can be searched and how such collections can be searched. The search profile may be generated at the time the search request is received based on login information for the user of the client and based on stored user profile or account information. According to this method, the client is not provided direct access to the search engine and is particularly useful in client-server environments, such as clients with browsers linked to the Internet that search networked devices for information.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06907423",
	"publication_date": "2005-06-14",
	"application_number": "09754155",
	"application_date": "2001-01-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure photo carrying identification device, as well as means and method for authenticating such an identification device",
	"summary": "",
	"abstract": "Means and a method for authenticating a photographic image () on an identification device (), the identification device () being provided with: a photographic image of a person () and a microprocessor (), the microprocessor () having: a) a processor (), b) a memory () connected to the processor () and having stored authentication data, and c) interface means () connected to the processor () for communicating with an external device, wherein said photographic image () comprises steganographically hidden information, the content of which together with said authentication data allows authentication of said photographic image (), the method having the following steps: au2032) scanning the photographic image () and generating image data, bu2032) analyzing these image data in accordance with a predetermined image analysis procedure to derive said hidden information, and cu2032) carrying out the authentication of the photographic image () based on the hidden information and the authentication data.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06883716",
	"publication_date": "2005-04-26",
	"application_number": "10148830",
	"application_date": "1999-12-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Selectable depacketizer architecture",
	"summary": "",
	"abstract": "A scheme is provided that permits the use of a selectable depacketization module to depacketize data streams. An RTP session manager is responsible for receiving RTP packets from a network and parsing/processing them. A depacketizer module is located using the type of data received on the stream. Thus a specific depacketizer is located at runtime depending on the coding decoding scheme (u201ccodecu201d) used to compress the incoming data stream. A naming convention is followed in order for a specific depacketizer to be located. The depacketizer receives data that has already been parsed and is in a readable form. The depacketizer outputs this data using a well defined interface. This interface has been designed such that it is generic across a number of codecs. The interface passes all relevant information to the decoder where the actual depacketized data stream will be decompressed. The session manager need not know of any codec details since the depacketizer handles all codec specific issues. A default format is described for data that is output by a depacketizer. There is provision for a depacketizer to output data in this pre-defined format. However, there is also a provision for a depacketizer to output data itself in a pre-defined format. This data is provided to a handler that is aware of this format, so that the integration of depacketizers is seamless. Thus, a depacketizer can be made available as long as it implements certain defined interfaces.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06944185",
	"publication_date": "2005-09-13",
	"application_number": "09883009",
	"application_date": "2001-06-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Simplified thread control block design",
	"summary": "",
	"abstract": "A data structure is disclosed. Such a data structure includes a thread control block and a message. The thread control block is described by a first data structure and the message is described by a second data structure. Additionally, the first data structure includes the second data structure. Thus, a data structure according to the present invention combines a thread control block structure and a message structure to provide the various benefits described herein. The first data structure may be configured, for example, to store information used to control execution of a thread, with the second data structure configured to store a message.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06865579",
	"publication_date": "2005-03-08",
	"application_number": "09649370",
	"application_date": "2000-08-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Small memory footprint system and method for separating applications within a single virtual machine",
	"summary": "",
	"abstract": "A system and method for isolating the execution of a plurality of applications. The applications may utilize or share one or more u201coriginalu201d classes. Only one copy of each original class is maintained, regardless of how many applications utilize it. Static fields are extracted from the original classes. A separate copy of the static fields is created for each of the utilizing applications. A static field class which includes instance fields corresponding to the static fields may be created, wherein each instance of the static field class corresponds to one of the utilizing applications. Access methods for the one or more static fields may be created, wherein the access methods are operable to access the corresponding separate copy of the static fields based upon the identity of the utilizing application. A single access methods class may be created for each original class, wherein the single access methods class includes the access methods for accessing the extracted fields from the original class. The method and system may be optimized by exempting from extraction static fields that are classified as secure for utilization by the plurality of applications without inter-application interference. The secure set of static fields may include final static fields of primitive types, final static strings, immutable arrays of primitive types, and/or other appropriate fields.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06938247",
	"publication_date": "2005-08-30",
	"application_number": "10440665",
	"application_date": "2003-05-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Spawning new repository spaces using information provided in advertisement schema messages",
	"summary": "",
	"abstract": "A system and method for spawning new spaces in a distributed computing environment. A client may access a first space service at a first Internet address. The first space service may store one or more service advertisements and/or other content in a first space, and each of the service advertisements may include information which is usable to access and execute a corresponding service. The first space service may include a first XML schema which specifies one or more messages usable to invoke functions of the first space service. The creation of a second space may be requested such as by the client sending an appropriate request to an interface of the first space. The second space may be created to store the results of running a service. In response, a second space service with a second space may be created at a second Internet address. The second space service may include a second schema which includes at least the first schema, and the second schema may include additional functionality as well. The first and second space may share a common storage model, storage facility, and set of program code. The client may then access the second space at a second Internet address by sending to the second space at least one of the messages specified in the second schema.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06918084",
	"publication_date": "2005-07-12",
	"application_number": "09653525",
	"application_date": "2000-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Stack-based access control using code and executor identifiers",
	"summary": "",
	"abstract": "A system regulates access to resources requested by an operation executing on a computer. The operation invokes a plurality of methods that operate upon code during execution. The system includes a policy file, a call stack, and an execution unit. The policy file stores permissions for each of the resources. The permissions authorize particular types of access to the resource based on a source of the code and an executor of the code. The call stack stores representations of the methods and executors in an order of invocation by the operation. The execution unit grants access to the resource when the types of access authorized by the permissions of all of the methods and executors on the call stack encompass the access requested by the operation.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06934758",
	"publication_date": "2005-08-23",
	"application_number": "10143574",
	"application_date": "2002-05-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Stalling pipelines in large designs",
	"summary": "",
	"abstract": "A method and a system for stalling large pipelined designs. A computational pipeline may comprise a first module and a second module coupled together. The first module may propagate one or more signals to the second module. A stall-signal may be asserted in order to stall the computational pipeline if the second module is not ready to receive the one or more signals from the first module. The one or more signals propagated from the first module and the asserted stall-signal may be buffered in a stall-buffer. The asserted stall-signal may be propagated to the first module in a next cycle. The first module may be stalled in response to the first module receiving the propagated asserted stall-signal. Next, the asserted stall-signal may be propagated up the computational pipeline.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06885375",
	"publication_date": "2005-04-26",
	"application_number": "10095308",
	"application_date": "2002-03-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Switched network for low latency communication",
	"summary": "",
	"abstract": "A switched network includes a buffer-less switch coupling the sending nodes and the receiving nodes. The switch transmits packets successfully delivered to the receiving nodes through the buffer-less switch with a fixed forwarding rate. The switched network resolves conflicts in requests for a transmission path on the switch from multiple packets by allocating the transmission path to a first requester in time for the transmission path. If multiple requests for a switch resource collide by requesting the switch resource at the same time, one of the requests is selected as a winner and the packet or packets associated with the remaining requests are dropped. The winning packet may be selected on a random basis or a round robin basis or based on some other criteria. The requests from transmission paths may be contained with the packets sent into the network and extracted on entry of the packet into the network.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06975626",
	"publication_date": "2005-12-13",
	"application_number": "09540730",
	"application_date": "2000-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Synchronous task scheduler for corba gateway",
	"summary": "",
	"abstract": "A system and method for a synchronous task scheduler. The synchronous task scheduler may be used with a CORBA Gateway between CORBA-based client manager applications and an enterprise manager. The CORBA Gateway may include components such as an Event Gateway which manages events from managed objects, and a Request Gateway which manages requests and responses of managed objects. The Event Gateway and the Request Gateway may be designed as multi-threaded systems. A thread pool may be used to increase efficiency and performance of the CORBA Gateway. To ensure ordered delivery of events or replies to the CORBA gateway clients in a multi-threaded environment using a thread pool, a synchronous task scheduler may be used. There may be a synchronous task scheduler associated with each client manager to preserve the chronology of messages sent to each. The synchronous task scheduler may maintain an internal message list, and deliver one message at a time from that internal list. The synchronous task scheduler may hold a reference to a thread pool and use that thread pool to deliver messages. When a message is scheduled, the synchronous task scheduler may check if any message is already being delivered. If no prior message is currently being delivered, an available thread may be assigned from the thread pool for delivery of the message and the scheduler may initiate delivery of the message. If a prior message is being delivered, it may enqueue the message in the message list. Then, when the prior message delivery is completed, the scheduler may dequeue the message, assign another thread from the thread pool, and initiate delivery of the message. This may continue until the message list is empty.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06839748",
	"publication_date": "2005-01-04",
	"application_number": "09557072",
	"application_date": "2000-04-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for accessing functionality of a backend system from an application server",
	"summary": "",
	"abstract": "A system and method for automatically creating information useable to access functionality of a backend computer system coupled to an application server. The method may operate to connect to the backend computer system and obtain information specifying functionality of the backend system. The information obtained may be analyzed programmatically, and new information may be programmatically created based on the analysis, wherein the programmatically created information is useable for accessing the functionality of the backend system. For example, where the functionality comprises a programmatically callable function, the information created may include information specifying the function name, names of input and output parameters, data types of the parameters, etc. The programmatically created information may be stored in a repository for use in accessing the functionality of the backend computer system from the application server. For example, the information may be retrieved from the repository and used to programmatically construct appropriate data structures and/or execute appropriate code for interfacing with the backend system to access the desired functionality.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06978461",
	"publication_date": "2005-12-20",
	"application_number": "09792810",
	"application_date": "2001-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for enabling failover for an application server cluster",
	"summary": "",
	"abstract": "A system and method for enabling failover in an application server cluster. A u201cprimaryu201d application server computer in the cluster may provide a service or data necessary for other application server computers in the cluster to operate. In addition to the primary application server computer, one or more of the other application server computers may be designated as u201cbackupu201d application server computers. Each backup application server may backup the processing information managed by the primary application server. When the primary application server itself becomes unavailable (e.g., due to a failure of the computer system or network), one or more of the backup application servers may be promoted to the role of primary application server.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06944788",
	"publication_date": "2005-09-13",
	"application_number": "10096067",
	"application_date": "2002-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for managing a scalable list of items for display",
	"summary": "",
	"abstract": "A system and method for managing a scalable list of items for display in a display device of a small footprint device. A client program running in a small footprint device may instantiate a u201clist container objectu201d and add u201clist item data objectsu201d to the list container object. The list container object may instantiate a fixed number of u201citem renderer objectsu201d, which are responsible for appropriately displaying the list item data objects. Each item renderer object may correspond to a row in the displayed list. The list container object interfaces with the set of item renderer objects, in order to manage the display of the list. In one embodiment, the item renderer objects are instances of a class that supports an u201citem renderer interfaceu201d that includes methods for interacting with the item renderer objects. Thus, a general framework is described in which any of various types of objects may be displayed, by implementing the item renderer interface methods appropriately for different item renderer object implementations. The list container object may keep track of the set of list item data objects being displayed at any given time. As a user interacts with the list, e.g., by scrolling up or down, the list container object may receive method calls or user interface events indicating the user's action, may determine the new start index for items to display, and may instruct each item renderer object to redisplay the appropriate list item data object, e.g., by calling an item renderer interface method for each item renderer object, passing the corresponding list item data object as a parameter.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06959425",
	"publication_date": "2005-10-25",
	"application_number": "09464021",
	"application_date": "1999-12-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for migrating processes on a network",
	"summary": "",
	"abstract": "A method and system is provided for migrating processes from one virtual machine to another on a network. To migrate the external state of a process, the process may use a network service connection system or a compact network service connection system for accessing resources external to the virtual machine. A process may be migratable separately from other processes. A process may have an in-memory heap used for the execution of the process, a virtual heap that may include the entire heap of the process including at least a portion of the runtime environment, and a persistent heap where the virtual heap may be checkpointed. In one embodiment, the virtual heap may serve as the persistent heap. In another embodiment, the virtual heap may be checkpointed to a separate, distinct persistent heap. The combination of the in-memory heap, the virtual heap, and the persistent store may be referred to as a virtual persistent heap. One embodiment of a method for migrating an application may include checkpointing the application to a persistent heap. Current leases to local and/or remote resources may be expired. The persistent state of the process may be packaged in the persistent heap and sent to the node where the process is to migrate. A transaction mechanism may be used, where the process's persistent state is copied and committed as having migrated on both the sending and receiving nodes. The state of the process may then be reconstituted into a new virtual persistent heap on the node where the application migrated. Leases to local and/or remote resources for the process may be re-established. The process may then resume execution on the node where it migrated. In one embodiment, a versioning mechanism may be used whereby nodes where a process once lived may cache a previous state. In addition, a user interface (UI) may be provided to manage process checkpoints.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06934755",
	"publication_date": "2005-08-23",
	"application_number": "09587113",
	"application_date": "2000-06-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for performing predictable signature analysis",
	"summary": "",
	"abstract": "In one embodiment, a computer system includes a first component configured to output data on a bus in response to a request for data from a second component. The data output by the first component may include both the requested data and unrequested data, and the unrequested data may have an unpredictable value. A controller coupled to the bus may be configured to replace the unrequested data with data that has a predictable value. A signature analysis register included in the second component is configured to capture the requested data and the predictable data output by the controller. Thus, the signature captured in the second component may be predictable, despite the unpredictable data output by the first component.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06873330",
	"publication_date": "2005-03-29",
	"application_number": "10090490",
	"application_date": "2002-03-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for performing scale and bias operations by preclamping input image data",
	"summary": "",
	"abstract": "In one embodiment, a scale and bias unit for use in a graphics system includes a preclamping unit configured to receive an input and to responsively generate an output value equal to a first value if the input is within a first input range. The scale and bias unit also includes a processing unit coupled to the preclamping unit and configured to perform a calculation on the input to generate the output value. The processing unit does not perform the calculation if the input is within the first input range.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06847378",
	"publication_date": "2005-01-25",
	"application_number": "10093364",
	"application_date": "2002-03-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing software upgrades to a vehicle",
	"summary": "",
	"abstract": "An system and method for providing software upgrades to components of a vehicle, wherein the labor, time and expense of providing the upgrades are minimized. In one embodiment, a network is installed in the vehicle, wherein the network comprises a transmission medium and one or more network devices coupled thereto. The network devices are addressable using IP addresses or object terminology. Data, software or service upgrades may be provided to the devices coupled to the network. The data, software and services may be delivered to the network through a first device, such as a wireless communication device, and then transmitted through the network to the device which is to be upgraded. The network may join an external network which is configured to query the in-vehicle network and/or automatically download data to the in-vehicle network.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06975612",
	"publication_date": "2005-12-13",
	"application_number": "09332348",
	"application_date": "1999-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Techniques for permitting access across a context barrier in a small footprint device using global data structures",
	"summary": "",
	"abstract": "A small footprint device can securely run multiple programs from unrelated vendors by the inclusion of a context barrier isolating the execution of the programs. The context barrier performs security checks to see that principal and object are within the same namespace or memory space or to see that a requested action is authorized for an object to be operated upon. Each program or set of programs runs in a separate context. Access from one program to another program across the context barrier can be achieved under controlled circumstances by using a global data structure.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06907608",
	"publication_date": "2005-06-14",
	"application_number": "09235156",
	"application_date": "1999-01-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Techniques for permitting access across a context barrier on a small footprint device using run time environment privileges",
	"summary": "",
	"abstract": "A small footprint device can securely run multiple programs from unrelated vendors by the inclusion of a context barrier isolating the execution of the programs. The context barrier performs security checks to see that principal and object are within the same context or to see that a requested action is authorized for an object to be operated upon. Each program or set of programs runs in a separate context, however, one context has access to all program modules without context barrier constraints.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06922835",
	"publication_date": "2005-07-26",
	"application_number": "09235155",
	"application_date": "1999-01-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transaction data structure for process communications among network-distributed applications",
	"summary": "",
	"abstract": "A process automation application, referred to as a commerce exchange server, for sending transaction messages between application programs uses a transaction definition data structure for specifying the component operations and processing logic that comprise the transaction. The data structure specifies one or more operations that constitute the transaction, instructions for producing the input data needed for each operation, and conditional logic for specifying constraints on the sequence of operation execution. The conditional logic may include one or more expressions, ranging from simple to complex, including variables, math operations and functions, that are evaluated using the inputs or outputs of one or more prior operations to determine execution order of subsequent operations. The transaction definition data structure may also provide for broadcast operations and for conditioning the success of their execution. In an illustrated implementation, the transaction definition data structure is an XML (Extensible Markup Language) document in the form of a directed acyclic graph (DAG). A transaction service architecture provides for storing transaction definitions that define specific types or categories of transactions in a transaction database, and for matching a transaction definition to a transaction definition identifier from a requesting application. The transaction service then builds a transaction instance DAG to perform the transaction, produces the messages needed for performing the transaction, and manages the message flow to and from the service applications that perform the constituent operations of the transaction.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06971096",
	"publication_date": "2005-11-29",
	"application_number": "09574335",
	"application_date": "2000-05-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Tree structure to pass data values to prepared statement object",
	"summary": "",
	"abstract": "A method of processing a query in a system in an object oriented programming environment, includes using a code to create a condition filter in a standard query language statement, the condition filter defining properties to be satisfied by a result of the query, and the condition filter using an object to execute a precompiled query language statement, and sending the standard query language statement to a database.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06925472",
	"publication_date": "2005-08-02",
	"application_number": "09902274",
	"application_date": "2001-07-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Using and generating finite state machines to monitor system status",
	"summary": "",
	"abstract": "Provided are a method, system, and program for monitoring a system including a plurality of subcomponents. An implementation of a plurality of subcomponent finite state machines for subcomponents of the system is provided, wherein each subcomponent finite state machine indicates output values for combinations of input state values related to states in the subcomponent. An implementation of a system finite state machine having output values for combinations of the output values from the subcomponent finite state machines is provided. For each subcomponent finite state machine, a determination is made of the output value by determining the input state values of the subcomponent, processing the subcomponent finite state machine with the determined input state values to determine the subcomponent output value, and processing the system finite state machine with the determined subcomponent output values to determine the system output value.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06968291",
	"publication_date": "2005-11-22",
	"application_number": "10702150",
	"application_date": "2003-11-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web-based enterprise management with multiple repository capability",
	"summary": "",
	"abstract": "A transport neutral technique allows an object manager to communicate with a CIM repository using any of a variety of protocols. The object manager software is independent of the transport mechanism used and need not be changed if the transport mechanism changes. A computer system to be managed includes a CIM object manager and any number of provider APIs that provide resource information about the computer system. A CIM repository stores classes and instances used by the object manager. A remote application computer runs a software management application that communicates with the object manager of the computer system using a local client API. A Repository API of the object manager includes an interface definition defining all methods called by the object manager. Also included is a protocol-specific class that implements the interface definition; there is a protocol-specific class for each protocol desired to be supported. Each class implements methods using a specific protocol. A factory class is executed when the object manager invokes a method call passing in a desired protocol parameter. The factory class creates a protocol-specific object of one of the protocol-specific classes depending on the protocol parameter. The object is returned to the object manager which executes one of its protocol-specific methods thus allowing communication to a repository using a protocol independent of the object manager.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06976262",
	"publication_date": "2005-12-13",
	"application_number": "09333591",
	"application_date": "1999-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Z-slope test to optimize sample throughput",
	"summary": "",
	"abstract": "A system and method are disclosed for utilizing a Z slope test to select polygons that may be candidates for multiple storage methods. The method may calculate the absolute Z slope from vertex data and compare the calculated value with a specified threshold value. In some embodiments, for polygons that have an absolute Z slope less than the threshold value, parameter values may be rendered for only one sample position of multiple neighboring sample positions. The parameter values rendered for the one sample position may then be stored in multiple memory locations that correspond to the multiple neighboring sample positions. In some embodiments, storing parameter values in multiple memory locations may be achieved in a single write transaction. In some embodiments, utilization of the Z slope test method may be subject to user input and in other embodiments may be a dynamic decision controlled by the graphics system.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06943791",
	"publication_date": "2005-09-13",
	"application_number": "10094947",
	"application_date": "2002-03-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Java-based data access object",
	"summary": "",
	"abstract": "A Database Development System is described that provides methodologies for creating a Java-based database control object (the u201cJava DataWindowu201d) for use in a Client/Server Database System. The methodology provided by the present invention maintains the DataWindow properties (e.g., SQL statement for data to retrieve, format specifications, and the like) at a server-side DataWindow component residing at an application server. A corresponding client-side DataWindow component, embedded for instance in a target HTML page, knows how to query the server-side DataWindow component for dynamically streaming the DataWindow's properties, so that they may be applied at run-time on the client side. After an end user has entered in the input desired, the changes are determined by the client-side DataWindow component and flushed back to the server-side DataWindow component at the application server. The server-side DataWindow component, in turn, can effect the changes to the back end database, as appropriate.",
	"url": null,
	"owner": "Sybase, Inc.",
	"publication_number": "06938041",
	"publication_date": "2005-08-30",
	"application_number": "09562641",
	"application_date": "2000-05-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Seamless user mobility in a short-range wireless networking environment",
	"summary": "",
	"abstract": "The present invention provides methods, systems, and computer program instructions for enabling a variety of devices, particularly low-power hand-held devices, to travel seamlessly through a networking environment such as that encountered within a building by establishing connectivity to a plurality of network access points. The illusion of seamless network connectivity is provided by having these access points coordinate with a core server to perform user authentication, device address assignment, and handoff services.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "06975864",
	"publication_date": "2005-12-13",
	"application_number": "10457573",
	"application_date": "2003-06-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Bar code data driven communications by mobile computer terminals operable in wireless networks",
	"summary": "",
	"abstract": "A bar code reader initiated communications method in which a bar code reader having an internally stored user identification, reads a bar code symbol, processes the data from the bar code symbol and the user identification into a message, and automatically transmits the message over a wireless communication link connected to a network according to a predetermined message delivery profile. The message is received at a distribution node on a network, where the symbol data and the user identification information is processed to determine the message destination station, and delivery options, and an alert is transmitted to the destination station over a specified network, such as a radio frequency paging network.",
	"url": null,
	"owner": "Symbol Technologies, Inc.",
	"publication_number": "06869016",
	"publication_date": "2005-03-22",
	"application_number": "09825723",
	"application_date": "2001-04-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for implementing alerts on a browser running on a portable handheld device",
	"summary": "",
	"abstract": "A method and apparatus for implementing alerts on a browser running on a portable handheld device is disclosed. The method generates an asynchronous notification action from the server and in response transmits an alert containing a message indicating availability of HTML pages that describe the nature of the alert. The alert is received at a node on a network and translated into the original message. An alert receipt acknowledgment is transmitted to the server. Access to the alert HTML page is provided through a URL containing the appropriate query strings necessary to present the appropriate HTML page. The invention also discloses a wireless local area network (WLAN) adapter associated with a wireless network that receives paging signals from a server on the network and returns an acknowledgment signal back to the server. The invention also discloses a client/server based method of delivering messages initiated by a client. After a connection is established between a client and server, the client requests a message from the server. In response, the server retrieves and returns the message back to the client.",
	"url": null,
	"owner": "Symbol Technologies, Inc.",
	"publication_number": "06920637",
	"publication_date": "2005-07-19",
	"application_number": "09814879",
	"application_date": "2001-03-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methods for integration of custom classes into pre-existing objects models",
	"summary": "",
	"abstract": "Computer-implemented methods, systems and apparatus implement techniques for generating custom coclasses. A runtime environment includes a client application implementing an object model, which includes a hierarchy of object classes that can be instantiated in the client application. The object model includes class templates, each having an associated class type, and includes class functionality informationu2014including required class functionality and elective class functionalityu2014for custom classes that can be implemented in the client application. When a user requests the creation of a custom class of a specified type, a design-time environment is launched and class functionality information is retrieved for a class template associated with the type. A custom class is created, based on a class definition defining a class having the required class functionality and the specified elective class functionality. Objects belonging to the custom class can be instantiated from the runtime environment independent of the design-time environment.",
	"url": null,
	"owner": "Symyx Technologies, Inc.",
	"publication_number": "06968538",
	"publication_date": "2005-11-22",
	"application_number": "09872608",
	"application_date": "2001-06-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interface for exchanging context data",
	"summary": "",
	"abstract": "A facility for exchanging context attributes is described. A characterization module receives an invocation request to provide an attribute value that was generated by a requesting attribute consumer. The received invocation request identifies the attribute whose value is to be provided. In response to receiving the invocation request, the characterization module provides a value for the identified attribute to the requesting attribute consumer.",
	"url": null,
	"owner": "Tangis Corporation",
	"publication_number": "06920616",
	"publication_date": "2005-07-19",
	"application_number": "09692507",
	"application_date": "2000-10-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for generating configurations used for accessing electronic mailboxes",
	"summary": "",
	"abstract": "A system and method generates configurations used for accessing electronic mailboxes. A database stores the configuration conventions that are sets of e-mail expressions formed by symbols. A transformer module expands configuration conventions stored in the database to generate configurations based on user supplied context data.",
	"url": null,
	"owner": "Teamon Systems, Inc.",
	"publication_number": "06959325",
	"publication_date": "2005-10-25",
	"application_number": "10778446",
	"application_date": "2004-02-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Architecture for the rapid creation of telephony services in a next generation network",
	"summary": "",
	"abstract": "A service architecture for the rapid development of next generation telephony services that overcomes the limitations of the current closed PSTN architecture and service model. In this architecture services are provided by multiple cooperating distributed service providers. This architecture is built upon an object-oriented call model which is defined as a small set of extensions to the standard Java Telephony API call model. This new object-oriented call model hides the detail of the underlying call-state management protocols and hardware from applications.",
	"url": null,
	"owner": "Telcordia Technologies, Inc.",
	"publication_number": "06967957",
	"publication_date": "2005-11-22",
	"application_number": "09783493",
	"application_date": "2001-02-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Universal mail wireless e-mail reader",
	"summary": "",
	"abstract": "A universal mail application maintains login with a plurality of email applications for a particular subscriber, presenting Inbox, Outbox, etc., for an email account as desired, without requiring repeated logouts/logins. The email applications may be defined and identified by email account information files maintained separately for each subscriber, containing, e.g., POP, server and IP address. Sets of email application files corresponding to the multiple email account files contain downloaded and uploaded message files from the respective email application programs. The multiple email account compilation module may be restricted or throttled back to send/receive email from the relevant email application programs only during desirable times, either on a system wide basis or on a per-subscriber (e.g., class of service) basis. The subscriber may peruse the relevant email application files, who is prompted on their mobile display for selection of any one of the email accounts at any one time.",
	"url": null,
	"owner": "TeleCommunication Systems Inc.",
	"publication_number": "06871215",
	"publication_date": "2005-03-22",
	"application_number": "09832009",
	"application_date": "2001-04-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Combined CDMA multi-service carrier and TDMA/CDMA packet carrier",
	"summary": "",
	"abstract": "The present invention provides systems and methods for coordinating calls within hybrid cells that support both an all services carrier and a best-efforts carrier, wherein the all services carrier supports real-time and non-real-time services and the best efforts carrier supports only non-real-time services. In one embodiment of the invention, the all services carrier is a 1u00d7RTT carrier and the best-efforts carrier is an HDR carrier. Calls may be placed on either carrier and transferred between the carriers as circumstances dictate. In addition, the present invention provides systems and methods to dynamically determine the most appropriate carrier for a given call.",
	"url": null,
	"owner": "Telefonaktiebolaget LM Ericsson",
	"publication_number": "06879580",
	"publication_date": "2005-04-12",
	"application_number": "09474056",
	"application_date": "1999-12-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic quality of service reservation in a mobile communications network",
	"summary": "",
	"abstract": "In a mobile communications system, a mobile host communicates packet data with an external network by way of a packet gateway node. The mobile host establishes a packet session during which plural application flows are communicated with an external network entity. Each application flow includes a corresponding stream of packets. In addition, a corresponding quality of service parameter is defined and reserved for each of the plural application flows. In this way, different quality of service parameters may be defined and reserved for different ones of the application flows. Packets corresponding to each of the application flows are then delivered, for example, from the external network entity all the way to the mobile host in accordance with the quality of service reserved for that application flow. Different qualities of service may have different allocated bandwidths, delays, and/or reliabilities.",
	"url": null,
	"owner": "Telefonaktiebolaget LM Ericsson (publ)",
	"publication_number": "06937566",
	"publication_date": "2005-08-30",
	"application_number": "09087496",
	"application_date": "1998-05-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus in a telecommunications system",
	"summary": "",
	"abstract": "The present invention relates to methods for providing access independent global roaming between heterogeneous networks. The invention solves this problem and provides policy enforcement and service transparency when terminals roam between different heterogeneous networks. By providing a policy enforcement point associated with the terminal, and by concerning the transport mechanism between terminals and servers as a packet pipe, adding no extra value except transport and Quality of Service classification thereof. The payment for access and services can be separated and access may be paid in real-time by an anonymous payment method. In accordance with the invention, the terminal becomes more like a personal profile manager, managing rights to services and access. The ability to purchase access opens the possibility for the terminal to act as an e-commerce platform, and the subscriber can access any network any time since access is paid for in real time.",
	"url": null,
	"owner": "Telefonaktiebolaget LM Ericsson (publ)",
	"publication_number": "06880009",
	"publication_date": "2005-04-12",
	"application_number": "09760569",
	"application_date": "2001-01-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for a virtual soft handover in a high data rate network based on data transmission information",
	"summary": "",
	"abstract": "A Virtual Soft Handover (VSHO) process for high data rate (HDR) applications is disclosed that considers the total number packets remaining to be transmitted prior to initiating the VSHO. An HDR mobile terminal maintains data transmission information relating to an amount of data to be transmitted during a data transfer in progress during a data session. The data transmission information may include, for example, the total packet size of a data transmission and the data transmission status (i.e., the number of packets remaining to be transmitted). The decision of whether to perform a VSHO is made according to the data transmission information. In one embodiment, a VSHO may be deactivated when the number of packets remaining to be transmitted is less than a certain threshold. In other embodiments, a VSHO may not be performed if the total packet size is smaller than a certain threshold.",
	"url": null,
	"owner": "Telefonaktiegolaget LM Ericsson",
	"publication_number": "06865389",
	"publication_date": "2005-03-08",
	"application_number": "09947244",
	"application_date": "2001-09-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for making and using test verbs",
	"summary": "",
	"abstract": "A computerized method and system for testing a function of an information-processing system. This includes providing an architecture having a set of test commands, the test commands including a set of one or more stimulation commands and a set of one or more result-testing commands, and defining a set of test verbs out of combinations of the test commands. This allows the test programmer to define an overall test program that uses the test verbs in writing a test program that specifies an overall function that will extensively test a system-under-test. The methods further includes executing a program that includes a plurality of test verb instructions and outputting a result of the program. In some embodiments, the present invention provides a computer-readable media that includes instructions coded thereon that when executed on a suitably programmed computer executes one or more of the above methods.",
	"url": null,
	"owner": "Test Quest, Inc.",
	"publication_number": "06898704",
	"publication_date": "2005-05-24",
	"application_number": "10323095",
	"application_date": "2002-12-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for making and using wireless test verbs",
	"summary": "",
	"abstract": "A computerized method and system for testing a function of an information-processing system. This includes providing an architecture having a set of test commands, the test commands including a set of one or more stimulation commands and a set of one or more result-testing commands, and defining a set of test verbs out of combinations of the test commands. This allows the test programmer to define an overall test program that uses the test verbs in writing a test program that specifies an overall function that will extensively test a system-under-test. The methods further includes executing a program that includes a plurality of test verb instructions and outputting a result of the program. In some embodiments, the present invention provides a computer-readable media that includes instructions coded thereon that when executed on a suitably programmed computer executes one or more of the above methods.",
	"url": null,
	"owner": "TestQuest, Inc.",
	"publication_number": "06862682",
	"publication_date": "2005-03-01",
	"application_number": "10323595",
	"application_date": "2002-12-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application programming interface with inverted memory protocol for embedded software systems",
	"summary": "",
	"abstract": "A system and method is provided for enabling the reuse of algorithms in multiple application frameworks with no alterations required of the algorithm once it is developed. An inverted memory allocation mechanism enables various algorithm modules to be integrated into a single application without modifying the source code of the algorithm modules. An algorithm module is designed in a manner that renders the algorithm module reentrant within a preemptive environment. Each data access instruction of the algorithm module is coded in a manner that renders the algorithm module and all of the data access instructions relocatable. A memory interface is provided within the algorithm module that supports both design-time object instantiation and dynamic object instantiation.",
	"url": null,
	"owner": "Texas Instruments Incorporated",
	"publication_number": "06968438",
	"publication_date": "2005-11-22",
	"application_number": "09666629",
	"application_date": "2000-09-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "MAC/PHY interface",
	"summary": "",
	"abstract": "The present invention provides a method, system and apparatus for managing data flow over an open system interconnection type network () which includes a physical layer () and a media access control layer (). The invention implements a plurality of operating modules () each enabling a respective media access control layer operating function in which at least a portion of the operating modules are implemented in software. The invention further implements a host interface module () for communication between a host processor and the media access control layer, a physical layer interface module () for communication between the physical layer and media access control layer, and an inter-module programming interface for communications between respective operating modules. The physical layer interface includes an enhanced media independent interface in accordance with some embodiments of the present invention.",
	"url": null,
	"owner": "Texas Instruments Incorporated",
	"publication_number": "06839345",
	"publication_date": "2005-01-04",
	"application_number": "09737722",
	"application_date": "2000-12-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Management of co-processor information by integrating non-program information with program information",
	"summary": "",
	"abstract": "A system including a host processor () operating in combination with one or more co-processors () is disclosed. In this system, a file storage facility () stores executable files () that are called by a server () in the host processor () by way of an application programming interface (API) (). In the disclosed system, the executable files () include both a program (obj 2) together with information (obj 2 attrs) indicative of a condition needed for execution of the program. Based on the condition information, the program (obj 2) is downloaded () to the co-processor (), and executed by the co-processor () if the the condition is satisfied.",
	"url": null,
	"owner": "Texas Instruments Incorporated",
	"publication_number": "06922735",
	"publication_date": "2005-07-26",
	"application_number": "09822753",
	"application_date": "2001-03-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for far branch and call instructions",
	"summary": "",
	"abstract": "The present invention provides a method for far branch and call instructions. The present invention includes the link-time modification of object code generated by the compiler or assembler and the addition of custom generated object code to the link for the purpose of implementing far branches and calls without changing the compiler generated instructions or expanding compiler generated object code.",
	"url": null,
	"owner": "Texas Instruments Incorporated",
	"publication_number": "06928641",
	"publication_date": "2005-08-09",
	"application_number": "09604113",
	"application_date": "2000-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for visual linker",
	"summary": "",
	"abstract": "The present invention provides a visual linker. The visual linker includes a link server that implements linking instructions for sections to a memory. The visual linker also includes a graphical user interface that receives said instructions and displays said sections within said memory. The visual linker also includes an application programming interface that receives said instructions and reports the results of said linking instruction and said sections within said memory. The visual linker also includes an incomplete link comprising sections not allocated to said memory. The visual linker also includes a link recipe comprising said instructions implemented by said link server.",
	"url": null,
	"owner": "Texas Instruments Incorporated",
	"publication_number": "06883167",
	"publication_date": "2005-04-19",
	"application_number": "09604112",
	"application_date": "2000-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interactive multimedia report viewer",
	"summary": "",
	"abstract": "A method and system for controlling plural software components to communicate and share a single virtual or real monitor or display. By (1) sending messages to applications aware of data control messages and (2) killing and restarting non-aware applications, a consistent set of information (e.g., images and textual data) can be presented within a single user interface, even if the components used are not originally written with the intention of working together.",
	"url": null,
	"owner": "The Arizona Board of Regents on behalf of the University of Arizona",
	"publication_number": "06889363",
	"publication_date": "2005-05-03",
	"application_number": "09796703",
	"application_date": "2001-03-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "IEEE set top box device driver",
	"summary": "",
	"abstract": "A device interface for use in a receiver/decoder for a broadcast digital television system in which received signals are passed through a receiver to the receiver/decoder and then to a television set. The receiver/decoder decodes a compressed MPEG-type signal, and is controlled by a remote controller handset, through an interface in the receiver/decoder. The operation of the receiver/decoder is controlled by a virtual machine (VM) which includes a run time engine (RTE). The receiver/decoder includes a plurality of interfaces to external units. The device interface enables an application run by the RTE to access an IEEE 1394 interface.",
	"url": null,
	"owner": "Thomson Licensing S.A.",
	"publication_number": "06966063",
	"publication_date": "2005-11-15",
	"application_number": "09489676",
	"application_date": "2000-01-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for determining and maintaining trust in digital data files with certifiable time",
	"summary": "",
	"abstract": "A system and methods for proving dates of digital data files, which are accessed, created, modified, received, or transmitted by a computer includes a trusted time source in a tamperproof environment, a first subsystem for saving the file at a moment in time, a second subsystem for retrieving from the trusted time source a date and a time corresponding to the moment in time, a third subsystem for appending the date and the time retrieved from the trusted time source to the saved file, a fourth subsystem for signing the saved file with the date and the time retrieved from the trusted time source appended thereto, a fifth subsystem for hashing the signed file to produce a digest, a sixth subsystem for signing the digest with a key to produce a certificate, a seventh subsystem for appending the certificate to the saved file, and an eighth subsystem for saving the file with the certificate appended thereto. The trusted time source is a real time clock, which is not resettable, is independent of any system clock of the computer, and is installed locally relative to the computer.",
	"url": null,
	"owner": "Time Certain, LLC",
	"publication_number": "06895507",
	"publication_date": "2005-05-17",
	"application_number": "09609646",
	"application_date": "2000-07-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for determining and maintaining trust in digital image files with certifiable time",
	"summary": "",
	"abstract": "A system and methods for proving dates of digital-imaging files, which are accessed, created, modified, received, saved, or transmitted by a computer includes a trusted time source in a tamperproof environment, a first subsystem for saving the file at a moment in time, a second subsystem for retrieving from the trusted time source a date and a time corresponding to the moment in time, a third subsystem for appending the date and the time retrieved from the trusted time source to the saved file, a fourth subsystem for signing the saved file with the date and the time retrieved from the trusted time source appended thereto, a fifth subsystem for hashing the signed file to produce a digest, a sixth subsystem for signing the digest with a key to produce a certificate, a seventh subsystem for appending the certificate to the saved file, and an eighth subsystem for saving the file with the certificate appended thereto. The trusted time source is a real time clock, which is not resettable, is independent of any system clock of the computer, and is installed locally relative to the computer.",
	"url": null,
	"owner": "Time Certain, LLC",
	"publication_number": "06948069",
	"publication_date": "2005-09-20",
	"application_number": "09609645",
	"application_date": "2000-07-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Portable, high performance messaging system",
	"summary": "",
	"abstract": "A method and implementation is disclosed for messaging between components, preferably the controllers of peripheral devices in a network. The method and implementation includes providing a message from a first process and appending to the message a code indicating at least one descriptive parameter of the message. Steps and implementations are included for transmitting the message to a second process and interpreting the code so as to enable computation of the message by the second process across a plurality of different controller platforms.",
	"url": null,
	"owner": "Toshiba Corporation",
	"publication_number": "06977994",
	"publication_date": "2005-12-20",
	"application_number": "10108655",
	"application_date": "2002-03-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of accessing data and logic on existing systems through dynamic construction of software components",
	"summary": "",
	"abstract": "A record layout in a legacy application is defined by the record definition in the source code of the language in which the application was written. For each record in a legacy application, the layout of the record is saved in a language-neutral and architecture neutral format in preparation for a runtime invocation. During runtime, for each record, the legacy application can send architecture-specific binary information as it exists in memory on the legacy computer to a component runtime environment that will construct a compatible object-oriented instance of a class to manipulate the information. Once the information is manipulated, the updated information can be represented to the original legacy application in an architecture-specific binary record layout.",
	"url": null,
	"owner": "Touchnet Information Systems, Inc.",
	"publication_number": "06931623",
	"publication_date": "2005-08-16",
	"application_number": "09764564",
	"application_date": "2001-01-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Locating a mobile station using a plurality of wireless networks and applications therefor",
	"summary": "",
	"abstract": "A location is disclosed for wireless telecommunication infrastructures. The systems output requested locations of hand sets or mobile stations (MS) based on, e.g., AMPS, NAMPS, CDMA or TDMA communication standards. The system determines both local MS locations, and more global MS location requests via, e.g., Internet communication. The system uses a plurality of mobile station locating technologies, including those based on, e.g., (1) two-way TOA and TDOA; (2) home base stations and (3) distributed antenna provisioning. The system is useful for 911 emergency calls, tracking, routing, people and animal location including applications for confinement to and exclusion from certain areas. The system is particularly useful for estimating a location of an MS using information received from a commercial mobile radio service provider (CMRS) for which the MS is not registered for subscriber services.",
	"url": null,
	"owner": "TracBeam, LLC",
	"publication_number": "06952181",
	"publication_date": "2005-10-04",
	"application_number": "09820584",
	"application_date": "2001-03-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Route guidance for vehicles",
	"summary": "",
	"abstract": "A route guidance system for vehicles comprises central computing apparatus (), transmitting apparatus () by way of which the central computing apparatus () is informed of the positions of respective vehicles on a road network and by way of which the vehicles are supplied with route guidance data calculated by the central computing apparatus as to the best routes for the respective vehicles to take to respective desired destinations, the transmitting apparatus () including transmitting devices () for carrying by the respective vehicles and by way of which the central computing apparatus () is informed as to the desired destinations, computing apparatus () serving to inform the central computing apparatus () as to traffic congestion on the network, and speech synthesisers () for carrying by the respective vehicles and arranged to speak instructions to the drivers of respective vehicles as to the routes to be taken to their respective desired destinations.",
	"url": null,
	"owner": "Trafficmaster plc",
	"publication_number": "06917876",
	"publication_date": "2005-07-12",
	"application_number": "10138418",
	"application_date": "2002-05-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Digital television signal test equipment",
	"summary": "",
	"abstract": "The invention, in part, provides an integrated digital television (DTV) diagnostic instrument comprising: at least one of a video display device (VDD) and an audio display device (AudDD); DTV circuitry (AV) to receive a DTV signal, to reconstruct at least one of a video stream and an audio stream from the DTV signal, and to display at least one of the video stream and the audio stream on the VDD or the AudDD, respectively; and at least one of monitoring circuitry (M), responsive to the DTV circuitry, to monitor digital properties of a live DTV signal and analysis circuitry (AN), responsive to the DTV circuitry, to analyze digital properties of a recorded DTV signal.",
	"url": null,
	"owner": "Triveni Digital Inc.",
	"publication_number": "06847395",
	"publication_date": "2005-01-25",
	"application_number": "09833648",
	"application_date": "2001-04-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure multiprotocol interface",
	"summary": "",
	"abstract": "A network interface for secure multiprotocol data communication includes a doorbell circuit, a processor, memory, and a bridge circuit. The doorbell circuit responds to physical I/O addresses of the host that are mapped by a memory management unit by a registration process. An application program seeking to use a multiprotocol channel must register the virtual address of host memory where data for communication is or will be stored and register the virtual address of a page of I/O addresses. Access to the doorbell functions and to the host memory via the memory management unit are therefore denied when the requesting process identifier does not successfully compare with the process identifier for the process that performed the registrations. A password may be stored in the network interface in association with a multiprotocol channel identifier and stored in association with the virtual to physical map used for communication. The network interface may abandon a requested or implied data communication function when passwords do not successfully compare. Methods for multiprotocol communication performed by an application program may include one or more of the steps of (a) establishing a multiprotocol channel where physical I/O addresses of a network controller are secured; (b) registering host memory for use with a multiprotocol channel where physical memory addresses are secured; (c) describing blocks of host memory with reference to a memory handle; and (d) accomplishing data communication of a described block of host memory via an established channel where the data and controls of the channel are secured and the data and controls of other channels are secured. Security is provided against both erroneous operations and operations intentionally effected by rouge processes.",
	"url": null,
	"owner": "Troika Networks, Inc.",
	"publication_number": "06976174",
	"publication_date": "2005-12-13",
	"application_number": "09792428",
	"application_date": "2001-02-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure virtual interface",
	"summary": "",
	"abstract": "A network interface for secure virtual interface data communication includes a doorbell circuit, a processor, memory, and a bridge circuit. The doorbell circuit responds to physical I/O addresses of the host that are mapped by a memory management unit by a registration process. An application program seeking to use a channel of a virtual interface must register the virtual address of host memory where data for communication is or will be stored and register the virtual address of a page of I/O addresses. Access to the doorbell functions and to the host memory via the memory management unit are therefore denied when the requesting process identifier does not successfully compare with the process identifier for the process that performed the registrations. A password may be stored in the network interface in association with a virtual interface (VI) channel identifier and stored in association with the virtual to physical map used for VI communication. The network interface may abandon a requested or implied data communication function when passwords so not successfully compare. Methods for virtual interface (VI) communication performed by an application program may include one or more of the steps of (a) establishing a VI channel where physical I/O addresses of a network controller are secured; (b) registering host memory for use with a VI channel where physical memory addresses are secured; (c) describing blocks of host memory with reference to a memory handle; and (d) accomplishing data communication of a described block of host memory via an established VI channel where the data and controls of the VI channel are secured and the data and controls of other VI channels are secured. Security is provided against both erroneous operations and operations intentionally effected by rouge processes.",
	"url": null,
	"owner": "Troika Networks, Inc.",
	"publication_number": "06883099",
	"publication_date": "2005-04-19",
	"application_number": "09755642",
	"application_date": "2001-01-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Portable operating environment for information devices",
	"summary": "",
	"abstract": "A software program for use on an embedded computing device includes an operating system layer, an application framework, and a programming environment. the programming environment includes a contention locking scheme for setting light object locks, which are handled in user space, and heavy object locks, which are handled at the system level. The contention locking scheme is configured to set a light object lock on an initially unlocked object when a first thread attempts to lock the object, and to maintain a light lock on the object when a nested intra-thread lock is attempted by the first thread.",
	"url": null,
	"owner": "Twin Communications of America, Inc.",
	"publication_number": "06934933",
	"publication_date": "2005-08-23",
	"application_number": "09925888",
	"application_date": "2001-08-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Ultrasound information processing system and ultrasound information exchange protocol therefor",
	"summary": "",
	"abstract": "An ultrasound information processing system comprises a plurality of ultrasound devices coupled to a high-speed serial ultrasound information bus, wherein each ultrasound device comprises a program for communicating with other ultrasound devices according to an ultrasound information exchange protocol (UIEP). The UIEP is a lightweight, connection-oriented protocol adapted to efficiently transfer ultrasound information among different devices on the ultrasound information bus. Each ultrasound device comprises an application layer program for performing an ultrasound function, as well as a lower protocol layer program for receiving and sending data across the ultrasound information bus according to a high-speed serial bus standard that provides both isochronous and asynchronous data delivery. The ultrasound information exchange protocol (UIEP) program is adapted to receive a communication request from the application layer, open a connection-oriented communication session with the requested ultrasound device, and transfer ultrasound information through the lower protocol layer and across the ultrasound information bus to the requested device. Advantageously, any ultrasound device manufacturer provided with the UIEP program may readily generate application layer code capable of communicating with other manufacturers' ultrasound devices across the ultrasound information bus, without requiring specific knowledge of the internal structure of the other manufacturers' devices or of the specific frame/packet structure of the UIEP/lower layer protocols themselves.",
	"url": null,
	"owner": "U-Systems, Inc.",
	"publication_number": "06839762",
	"publication_date": "2005-01-04",
	"application_number": "09571197",
	"application_date": "2000-05-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and accompanying methods for implementing a network distribution server for use in providing interstitial web advertisements to a client computer",
	"summary": "",
	"abstract": "A technique for implementing in a networked client-server environment, e.g., the Internet, network-distributed advertising in which advertisements are downloaded, from an advertising server to a browser executing at a client computer, in a manner transparent to a user situated at the browser, and subsequently displayed, by that browser on an interstitial basis, in response to a click-stream generated by the user to move from one web page to the next. Specifically, an HTML advertising tag is embedded into a referring web page. This tag contains two components. One component effectively downloads, from an distribution web server and to an extent necessary, and then persistently instantiates an agent at the client browser. This agent u201cpolitelyu201d and transparently downloads advertising files (media and where necessary player files), originating from an ad management system residing on a third-party advertising web server, for a given advertisement into browser cache and subsequently plays those media files through the browser on an interstitial basis and in response to a user click-stream. The other component is a reference, in terms of a web address, of the advertising management system. This latter reference totally u201cdecouplesu201d advertising content from a web page such that a web page, rather than embedding actual advertising content within the page itself, merely includes an advertising tag that refers, via a URL, to a specific ad management system rather than to a particular advertisement or its content. The ad management system selects the given advertisement that is to be downloaded, rather than having that selection or its content being embedded in the web content page.",
	"url": null,
	"owner": "Unicast Communications Corporation",
	"publication_number": "06880123",
	"publication_date": "2005-04-12",
	"application_number": "09351857",
	"application_date": "1999-07-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for accessing hierarchical data via JDBC",
	"summary": "",
	"abstract": "The method of the present invention is useful in a computer system executing a Java application and a hierarchical database. The program executes a method for providing data access from the Java application to the hierarchical database. The method includes the steps of determining JDBC type, Java class name, and metadata values for the Java application to represent a given column in a result set on the hierarchical database. Next, there is a closing of all embedded result sets for the column.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "06845376",
	"publication_date": "2005-01-18",
	"application_number": "10021525",
	"application_date": "2001-10-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for generating unique object indentifiers in a data abstraction layer disposed between first and second DBMS software in response to parent thread performing client application",
	"summary": "",
	"abstract": "A method in a computer system executing a client application and an OODBMS and an RDBMS software, which system has a storage medium accessible by the RDBMS software and the OODBMS software being accessible by the client application. The method generates unique object identifiers in a data abstraction layer disposed between the OODBMS and the RDBMS software in response to a parent thread created by the client application. The method includes the steps of creating a child thread that has access to the RDBMS software, which child thread is used exclusively for generating object identifier numbers and for returning the same to the parent thread. A unique object identifier table is created, which is maintained by the child thread. In response to a request by the parent thread for a unique object identifier, the child thread generates a finite number of the unique object identifiers and communicates their values to the parent thread. After this, a recording is made in the table of the fact that a finite number of unique object identifiers have been generated.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "06947952",
	"publication_date": "2005-09-20",
	"application_number": "09569242",
	"application_date": "2000-05-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for processing administrative requests of a distributed network application executing in a clustered computing environment",
	"summary": "",
	"abstract": "Administrative requests of a distributed network application executing in a clustered computing environment comprising a plurality of nodes, wherein the application requires centralized administration via a master node, are routed from the nodes at which the requests originate to the node that is acting as the master for the distributed network application.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "06868442",
	"publication_date": "2005-03-15",
	"application_number": "09127167",
	"application_date": "1998-07-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for performing input/output diagnostics",
	"summary": "",
	"abstract": "A system and method for testing I/O components without requiring initiation of the test I/O requests from the operating system via the instruction stream. An I/O system facilitates I/O operations between a processing system and I/O devices during normal I/O processing. An exerciser initiation queue is established, which corresponds to an operating initiation queue used during normal I/O processing. The I/O system is configured to monitor for test I/O requests on the exerciser initiation queue in lieu of monitoring for standard I/O requests on the operating initiation queue. A testing module enters the test I/O requests on the exerciser initiation queue in a format analogous to standard I/O requests entered on the operating initiation queue during normal I/O processing. The test I/O requests on the exerciser initiation queue are processed via the I/O system. Upon I/O completion, status may be returned to the testing module for processing of test results.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "06971046",
	"publication_date": "2005-11-29",
	"application_number": "10330716",
	"application_date": "2002-12-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for using anonymous tokens for efficient memory management",
	"summary": "",
	"abstract": "A mechanism for managing pointers or handles to transient objects is disclosed. An anonymous token is assigned to an object. When an anonymous token is needed for an object, an unused token value is obtained from a list of available values and is associated with the object, the token value is removed from the list of available values, and data elements of a token data array entry associated with the anonymous token value are updated. When an operation is performed on an object identified by an anonymous token, data elements are evaluated and if reuse counts are not identical or if the validity indicator does not indicate that the object is valid, the operation is not performed. When an object is de-allocated, the token value associated with the object is returned to the available list and the data elements associated with the token value are updated.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "06874059",
	"publication_date": "2005-03-29",
	"application_number": "09992828",
	"application_date": "2001-11-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Customer services and advertising based upon device attributes and associated distributed processing system",
	"summary": "",
	"abstract": "A method for providing customer services and advertising based upon device attributes is disclosed for a distributed processing system. The distributed processing system identifies and utilizes the capabilities of distributed devices connected together through a wide variety of communication systems and networks and utilize those capabilities to organize, manage and distribute project workloads to the distributed devices.",
	"url": null,
	"owner": "United Devices, Inc.",
	"publication_number": "06963897",
	"publication_date": "2005-11-08",
	"application_number": "09602983",
	"application_date": "2000-06-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network site testing method and associated system",
	"summary": "",
	"abstract": "A method for network site testing and associated distributed parallel processing system are disclosed that identifies the capabilities of distributed devices connected together through a wide variety of communication systems and networks and utilizes those capabilities to provide incentives to the distributed devices and to organize, manage and distribute project workloads to the distributed devices.",
	"url": null,
	"owner": "United Devices, Inc.",
	"publication_number": "06891802",
	"publication_date": "2005-05-10",
	"application_number": "09539106",
	"application_date": "2000-03-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Security architecture for distributed processing systems and associated method",
	"summary": "",
	"abstract": "A security architecture and an associated method are disclosed for providing secure transmissions within distributed processing systems. More particularly, a server system is coupled to a network that is configured to be coupled to a plurality of distributed devices. The server system utilizes a security measure that is partitioned and distributed to multiple distributed devices. The distributed device receiving electronic information reconstructs the security measure by obtaining the various partitioned portions from the multiple distributed devices. In addition, the security measure may be generation of a hash value for the electronic information to be transmitted.",
	"url": null,
	"owner": "United Devices, Inc.",
	"publication_number": "06847995",
	"publication_date": "2005-01-25",
	"application_number": "09648832",
	"application_date": "2000-08-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Queue-based spin lock with timeout",
	"summary": "",
	"abstract": "A queue-based spin lock with timeout allows a thread to obtain contention-free mutual exclusion in fair, FIFO order, or to abandon its attempt and time out. A thread may handshake with other threads to reclaim its queue node immediately (in the absence of preemption), or mark its queue node to allow reclamation by a successor thread.",
	"url": null,
	"owner": "University of Rochester",
	"publication_number": "06965961",
	"publication_date": "2005-11-15",
	"application_number": "10377024",
	"application_date": "2003-03-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System level applications of adaptive computing (SLAAC) technology",
	"summary": "",
	"abstract": "An API (Application Programming Interface) for an adaptive computing system (ACS) may be used to create a system for performing an application on different types of ACS platforms. The API may be used to generate a system object including a host and a number of nodes and channels. A system data structure is created which describes the nodes, which may be FPGA (Field Programmable Gate Array)-based ACS accelerator boards. The API may enable source-code porting and scaling from small research platforms to larger field-deployable platforms.",
	"url": null,
	"owner": "University of Southern California",
	"publication_number": "06915502",
	"publication_date": "2005-07-05",
	"application_number": "10038063",
	"application_date": "2002-01-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic allocation of wireless mobile nodes over an internet protocol (IP) network",
	"summary": "",
	"abstract": "A method is described of automatically locating and connecting a mobile wireless communications device to a packet-switched network such as the Internet. An Internet Protocol (IP) packet from a terminal on the network, destined for receipt by the mobile device, is received at a home agent acting as a gateway or router linking the packet switched network to a second network, such as LAN, coupled to a wireless communications network. The home agent transmits an access-request message to an authentication server. The access-request message includes a destination IP address associated with the mobile device found in the IP packet. The authentication server responsively issues an access-accept message to the home agent if the mobile device is authorized to receive the IP packet. The access-accept message comprises (a) information uniquely identifying said device, such as the IMSI/ESN number for the device, and (b) information identifying a network to use to locate said device. The home agent issues a message containing the information uniquely identifying the device to a mobile node location server. The mobile node location server maintains a table mapping IP addresses for a plurality of mobile communication devices to information uniquely identifying the devices. In the event that the mobile node location server does not find an IP address for the device in the table, the device is paged via the wireless communications network. In response to the page, the mobile device dials into the wireless communications network and second network and initiates a connection to the packet switched network whereby the IP packet is transmitted to the device.",
	"url": null,
	"owner": "UTStarcom Inc.",
	"publication_number": "06970443",
	"publication_date": "2005-11-29",
	"application_number": "09863170",
	"application_date": "2001-05-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for online communication between a check sorter and a check processing system",
	"summary": "",
	"abstract": "A system for handling checks is provided that includes a sorter operable to retrieve MICR data from a plurality of checks. An emulator is coupled to the sorter. The emulator is operable to access the MICR data, to generate a process buffer based on the MICR data, and to generate a plurality of feature instructions for each check based on the process buffer. A communication engine is coupled between the emulator and a check processing system. The communication engine is operable to communicate between the emulator and the check processing system in real-time. The check processing system is operable to receive the process buffer from the emulator through the communication engine. The emulator is further operable to communicate the feature instructions to the sorter. The sorter is further operable to process the checks based on the feature instructions.",
	"url": null,
	"owner": "VECTORsgi, Inc.",
	"publication_number": "06924450",
	"publication_date": "2005-08-02",
	"application_number": "10616117",
	"application_date": "2003-07-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method, and article of manufacture for secure transactions utilizing a computer network",
	"summary": "",
	"abstract": "The present invention is a system or method and device useful for the secure electronic payment of consumer debts over a publicly accessible computer network. The preferred form of the present invention uses at least two separate, but compatible, software packages. Security server software that continuously runs on a security server and payor software that runs on demand on a payor computer system. The payor computer system communicates via the payor software with the security server via the security server software. The communication, or transaction, session operates under the secure communication protocol described below. A payee computer system may also communicate via payee software with the security server. Additionally, a version is provided that utilizes smart card technology and a remote kiosk computer that communicates with the security server.",
	"url": null,
	"owner": "Verify & Protect Inc.",
	"publication_number": "06856975",
	"publication_date": "2005-02-15",
	"application_number": "09540193",
	"application_date": "2000-03-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for providing bitwise constraints for test generation",
	"summary": "",
	"abstract": "A method for enabling bitwise or bit slice constraints to be provided as part of the test generation process, by providing a language structure which enables these constraints to be expressed in a test generation language such as e code for example. The language structure for such bitwise constraints is then handled in a more flexible manner, such that the test generation process does not attempt to rigidly u201csolveu201d the expression containing the constraint as a function. Therefore, the propagation of constraints in such a structure do not necessarily need to be propagated from left to right, but instead are generated in a multi-directional manner. The language structure is particularly suitable for such operators as u201c[:]u201d, u201c|u201d, u201c&u201d, u201c^u201d, u201cu02dcu201d, u201c>>u201d and u201c<<u201d.",
	"url": null,
	"owner": "Verisity Ltd.",
	"publication_number": "06918076",
	"publication_date": "2005-07-12",
	"application_number": "09939743",
	"application_date": "2001-08-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic symbolic link resolution",
	"summary": "",
	"abstract": "To achieve the foregoing, and in accordance with the purpose of the present invention, a system or network is disclosed which provides for a dynamic symbolic link (DSL) and the resolution of that DSL. The invention provides a method and apparatus that renames a first pathname to a target pathname, determines a variable within the target pathname, defines the first pathname as a symbolic link and associates the symbolic link with a virtual pathname. The present invention further defines a specification associated with the virtual pathname including associating the variable with the virtual pathname. In associating the symbolic link with the virtual pathname, the present invention further define a declaration within the virtual pathname.",
	"url": null,
	"owner": "Veritas Operating Corporation",
	"publication_number": "06895400",
	"publication_date": "2005-05-17",
	"application_number": "09680560",
	"application_date": "2000-10-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Snapshot image for the application state of unshareable and shareable data",
	"summary": "",
	"abstract": "A system, methods, and computer program products are disclosed for creating virtual application templates for the purpose of propagating a single application snapshot into multiple, distinct images. Snapshot virtual templates allow multiple application instances to use the same fixed resource identifier by making the resource identifier virtual, privatizing it, and dynamically mapping it to a unique system resource identifier. When a snapshot is cloned from a virtual template, the common or shared data is used exactly as is, whereas the non-sharable data is either copied-on-write, multiplexed, virtualized, or customized-on-duplication. The present invention notes access to modified resources, fixed system IDs/keys and unique process-related identifies and automatically inserts a level of abstraction between these resources and the application. The resources contained in a snapshot virtual template can be dynamically redirected at restore time. Access to memory and storage is managed in a copy-on-write fashion. System resource handles are managed in a virtualize-on-allocate fashion or by a multiplex-on-access mechanism. Process-unique resources are managed in a redirect-on-duplicate fashion. Rules may be defined through an application configurator that allows some degree of control over the creation of non-sharable data. The snapshot virtual template is constructed by dividing the snapshot image into sharable and non-sharable data. Knowledge of which system resources can be shared is encoded in the application snapshot/restore framework.",
	"url": null,
	"owner": "VERITAS Operating Corporation",
	"publication_number": "06917963",
	"publication_date": "2005-07-12",
	"application_number": "09684373",
	"application_date": "2000-10-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Snapshot restore of application chains and applications",
	"summary": "",
	"abstract": "The present invention saves all process state, memory, and dependencies related to a software application to a snapshot image. Interprocess communication (IPC) mechanisms such as shared memory and semaphores must be preserved in the snapshot image as well. IPC mechanisms include any resource that is shared between two process or any communication mechanism or channel that allow two processes to communicate or interoperate is a form of IPC. Between snapshots, memory deltas are flushed to the snapshot image, so that only the modified-pages need be updated. Software modules are included to track usage of resources and their corresponding handles. At snapshot time, state is saved by querying the operating system kernel, the application snapshot/restore framework components, and the process management subsystem that allows applications to retrieve internal process-specific information not available through existing system calls. At restore time, the reverse sequence of steps for the snapshot procedure is followed and state is restored by making requests to the kernel, the application snapshot/restore framework, and the process management subsystem.",
	"url": null,
	"owner": "VERITAS Operating Corporation",
	"publication_number": "06848106",
	"publication_date": "2005-01-25",
	"application_number": "09680847",
	"application_date": "2000-10-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Storage area network (SAN) device logical relationships manager",
	"summary": "",
	"abstract": "A method and apparatus for managing one or more logical relationships between a plurality of devices in a storage area network (SAN). The method includes receiving a first identifier associated with a first SAN device, determining the logical relationships associated with the first SAN device, receiving a second identifier associated with a second SAN device, and associating the second identifier to the logical relationships associated with the first SAN device.",
	"url": null,
	"owner": "Veritas Operating Corporation",
	"publication_number": "06839746",
	"publication_date": "2005-01-04",
	"application_number": "10453107",
	"application_date": "2003-06-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Storage management software bridges",
	"summary": "",
	"abstract": "Methods and systems to bridge storage management software are provided. A first storage management application communicates with a host and performs an analysis of a storage environment associated with the host. The first storage management application uses the analysis to determine if a storage resource interface is controlled by a second storage management application, and if so a plugin application is accessed by the first storage management application to permit the second storage management application to perform a storage management operation on behalf of the host. In one embodiment, the analysis is updated by the first storage management application upon receiving results from second storage management application, where the results reflect the processing of the storage management operation by the second storage management application.",
	"url": null,
	"owner": "VERITAS Operating Corporation",
	"publication_number": "06883081",
	"publication_date": "2005-04-19",
	"application_number": "10208559",
	"application_date": "2002-07-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for controlling the creation of stable disk images",
	"summary": "",
	"abstract": "A system and method for controlling the creation of stable disk images. Data is transmitted to an application program interface identifying the storage object. The application program interface returns a list with one or more methods appropriate for quiescing or for freezing the storage object.",
	"url": null,
	"owner": "Veritas Operating Corporation",
	"publication_number": "06968433",
	"publication_date": "2005-11-22",
	"application_number": "10087901",
	"application_date": "2002-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for partitioned service-enablement gateway with utility and consumer services",
	"summary": "",
	"abstract": "A gateway for providing consumer services is presented. The gateway includes a secure partition associated with a gateway and operable to control access to at least one utility service and a bundle associated with the secure partition. The gateway also includes a consumer service associated with the secure partition and an application programmer interface (API) bundle associated with the secure partition and providing at least one support function to the consumer service. In addition, the gateway includes a provisioning service associated with the secure partition and the API bundle, the provisioning service operable to install the consumer service, a billing service associated with the secure partition and the API bundle, the billing service operable to provide billing capabilities to the consumer service and a profile service associated with the secure partition and the API bundle, the profile service operable to store a user profile. Further, the gateway includes an authentication service associated with the secure partition and the API bundle, the authentication service operable to authorize a user associated with the gateway, a remote-logging service associated with the secure partition and the API bundle, the remote-logging service operable to log an event associated with the consumer service, and a maintenance service associated with the secure partition and the API bundle, the maintenance service operable to determine a network status associated with the gateway.",
	"url": null,
	"owner": "Verizon Corporate Services Group",
	"publication_number": "06871193",
	"publication_date": "2005-03-22",
	"application_number": "09870143",
	"application_date": "2001-05-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for service-enablement gateway and its service portal",
	"summary": "",
	"abstract": "A method and system for dynamic service support is presented. A portal-page service and an interface bundle are installed at the gateway. A customer service at the gateway, based on the interface bundle, is installed at the gateway. The portal-page service searches for the customer service and generates a user interface for the customer service based on the customer service. The portal-page service generates a portal-page based on the user interface and the portal page service.",
	"url": null,
	"owner": "Verizon Corporate Services Group Inc.",
	"publication_number": "06920615",
	"publication_date": "2005-07-19",
	"application_number": "09870084",
	"application_date": "2001-05-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for facilitating the interaction between multiple telephone and computer users",
	"summary": "",
	"abstract": "AIN based call routing, transfer and conferencing methods and apparatus are disclosed. In various embodiments initial call routing is based on the availability of a party to service a call as determined from a computer system associated with the party selected to service the call. The party's computer system supports a telephone programming application interface (TAPI) which allows a telephone network server to determine the availability of the party selected to service the call from, in part, TAPI obtained telephone line status information. The network server supplies call related data to the computer system of the party assigned to service the call. Call transfer and conferencing operations along with the transfer of call related data are also supported. AIN mid-call triggers are used in some embodiments to support call transfer and conferencing operations.",
	"url": null,
	"owner": "Verizon Services Corp.",
	"publication_number": "06920213",
	"publication_date": "2005-07-19",
	"application_number": "09812488",
	"application_date": "2001-03-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for using AIN techniques to facilitate servicing of calls by a group of users",
	"summary": "",
	"abstract": "AIN based call routing, transfer and conferencing methods and apparatus are disclosed. In various embodiments initial call routing is based on the availability of a party to service a call as determined from a computer system associated with the party selected to service the call. The party's computer system supports a telephone application programming interface (TAPI) which allows a telephone network server to determine the availability of the party selected to service the call from, in part, TAPI obtained telephone line status information. The network server supplies call related data to the computer system of the party assigned to service the call. Call transfer and conferencing operations along with the transfer of call related data are also supported. AIN mid-call triggers are used in some embodiments to support call transfer and conferencing operations.",
	"url": null,
	"owner": "Verizon Services Corp.",
	"publication_number": "06947537",
	"publication_date": "2005-09-20",
	"application_number": "09812487",
	"application_date": "2001-03-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Parameterizing system and method",
	"summary": "",
	"abstract": "A system for intelligently parameterizing and configuring a file is provided. The system includes a parameterizing tool that facilitates identifying items to be parameterized. The parameterizing tool also facilitates creating code (e.g., XML elements and/or attributes) that stores information associated with the parameterized item. The system also includes a configuration tool that facilitates making configuration choices for the parameterized item. The system also includes a merge tool that facilitates creating a configured file based on the original file, the stored information concerning the parameterized item, and the configuration choices for the parameterized item.",
	"url": null,
	"owner": "Vibren Technologies, Inc.",
	"publication_number": "06907420",
	"publication_date": "2005-06-14",
	"application_number": "10294303",
	"application_date": "2002-11-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for monitoring end-user experience in a distributed network",
	"summary": "",
	"abstract": "A network performance monitoring system uses a plurality of user modules, each user operating on a unique user machine coupled to one or more provider servers and an experience test server for collecting data from the plurality of user modules. The collected data includes at least one performance datum relating to user experience with a link from the user machine to the provider server. The system also cleanses the collected data to account for variable user configurations, user errors and the like.",
	"url": null,
	"owner": "Visual Networks, Inc.",
	"publication_number": "06970924",
	"publication_date": "2005-11-29",
	"application_number": "09256647",
	"application_date": "1999-02-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for collaborative and fail-tolerant deployment of automatic identification and data collection (AIDC) devices",
	"summary": "",
	"abstract": "Data is stored on a tag unit. The tag unit provides for alert monitoring capabilities and monitoring of events, these capabilities allow for supply chain plans to be restructured and for events to be rescheduled. The tag unit is attached to an item for tracking purposes. The tag unit monitors and stores a status of the item. Then the item is sent to a destination. The tag unit is scanned when the item has been sent to a destination. The data on the tag unit is updated as a function of scanning. The data is updated when the tag unit is scanned at a destination. Then the data on the tag unit is validated. The data is validated for security purposes. The data on the tag unit is scanned to identify conditions to trigger actions. The system recovers from failure to read data on the tag unit by reconstructing the expected data from a history of the tag unit. Failure may be a result of identified or unidentified tempering of tag units, failure of the tag unit mechanism, or violation of the tag unit access limitations.",
	"url": null,
	"owner": "Vizional Technologies, Inc.",
	"publication_number": "06919807",
	"publication_date": "2005-07-19",
	"application_number": "10360885",
	"application_date": "2003-02-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for determining whether a verbal message was spoken during a transaction at a point-of-sale terminal",
	"summary": "",
	"abstract": "A point-of-sale terminal initiates a transaction and provides a prompt to be spoken to an operator (e.g. a cashier) of the POS terminal. The prompt indicates a verbal message that is to be spoken by the operator. The POS terminal then receives an audio signal via a microphone or similar device to record what the operator has spoken. Using speech recognition, the POS terminal determines whether the audio signal corresponds to the prompt, and thus whether the operator spoke the prompt properly. In one embodiment, the transaction is paused until the operator properly speaks the prompt. In another embodiment, the POS terminal stores an indication of whether the operator has properly spoken the prompt, thereby allowing the performance of the operator to be measured.",
	"url": null,
	"owner": "Walker Digital, LLC",
	"publication_number": "06871185",
	"publication_date": "2005-03-22",
	"application_number": "10401409",
	"application_date": "2003-03-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic compiling of address filter information",
	"summary": "",
	"abstract": "Automatic compilation of address filter information that permits a cable modem to appropriately route incoming data packets to destination devices is described. Cable modems use address filter information to identify incoming data packets that are addressed to communication devices associated with the cable modem. The address filter information might be, for example, a list of addresses of communication devices that have previously registered with the cable modem. On occasion, the cable modem may have incorrect or insufficient or incomplete filter information when, for instance, a new communication device is added to a group of networked communication devices associated with the cable modem. In order to automatically recognize associated communication devices that are to be registered with the cable modem, a cable modem driver inspects the source address of outgoing data packets. If the source address is not included in the address filter information, the source address is added to the address filtering information. Subsequently, if an incoming data packet addresses the associated communication device, the cable modem driver allows the data packet to be passed through to the communication device.",
	"url": null,
	"owner": "WebTV Networks, Inc.",
	"publication_number": "06889258",
	"publication_date": "2005-05-03",
	"application_number": "09371916",
	"application_date": "1999-08-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Disk drive for receiving setup data in a self monitoring analysis and reporting technology (SMART) command",
	"summary": "",
	"abstract": "A disk drive is disclosed for receiving a Self Monitoring Analysis and Reporting Technology (SMART) command from a host computer. The disk drive comprises a plurality of configuration parameters stored in a non-volatile manner for configuring at least one system when the disk drive is powered on. The SMART command comprises a command code comprising a predetermined value for identifying the command code as a SMART command and a sub command comprising one of a plurality of predetermine values identifying one of a plurality of SMART commands selected from the group consisting of enabling SMART diagnostics, reading diagnostic data, and transmitting setup data to the disk drive. The SMART command further comprises setup data for modifying the configuration parameters.",
	"url": null,
	"owner": "Western Digital Technologies, Inc.",
	"publication_number": "06895500",
	"publication_date": "2005-05-17",
	"application_number": "10004231",
	"application_date": "2001-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic gopher program generator",
	"summary": "",
	"abstract": "A system and method for automatically generating a gopher program is provided. The system invokes a debugger and loads a type library into the debugger. The type library containing information regarding each data type used in a program. The system reads each line of a command file, wherein the command file is comprised of literal text and one or more predefined instructions. For each predefined instruction read, the system calls a corresponding function in the debugger and the debugger returns a numerical offset value based upon information in the type library. The system copies the each line of the command file to an output file, with each predefined instruction replaced with its corresponding offset value.",
	"url": null,
	"owner": "Wind River Systems, Inc.",
	"publication_number": "06938239",
	"publication_date": "2005-08-30",
	"application_number": "10124843",
	"application_date": "2002-04-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Architecture for software for remote maintenance of a machine such as a copier",
	"summary": "",
	"abstract": "Software in a computer which accesses one or more software-intensive devices, such as a digital copier or printer, is organized in a set of layers. A device-dependent layer converts data transferred over various means, such as a modem or network, to a uniform data format. A protocol layer converts data from a particular accessed machine to a set of function calls. A system interface associated with the computer restricts a user of the computer to seeing only a subset of function calls, depending permissions granted to a particular user. The modular architecture of the software enables a system administrator to restrict a user to viewing machine status for a specific set of machines on a network, or limits the user to viewing only a certain set of functionalities from a particular machine.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "06959442",
	"publication_date": "2005-10-25",
	"application_number": "10639423",
	"application_date": "2003-08-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for searching indexed string containing a search string",
	"summary": "",
	"abstract": "Systems and methods for indexing and searching the inner structure of a string over a language having a vocabulary and a grammar using bit vectors. The index preserves the inner grammatical structure of the string while allowing for a fast search. A single search provides immediate access to every level of a document, without having to re-search a single string to determine which sub-parts of that string match the search string. When a string is indexed, the index maintains a compositional representation and the grammatical relationship between the elements of the vocabulary according to the language. The string is then indexed on different levels by disregarding some of the grammatical relationships of component levels.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "06915300",
	"publication_date": "2005-07-05",
	"application_number": "10739192",
	"application_date": "2003-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and article of manufacture for knowledge-based password protection of computers and other systems",
	"summary": "",
	"abstract": "A system, method and article of manufacture are provided for password protecting user access to a computer system. One or more images are displayed to a user. The user is then required to perform a sequence of actions involving the images. The performed sequence of actions is compared with a predefined sequence of actions. If the performed sequence of actions matches the predefined sequence of actions, user access is permitted.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "06934860",
	"publication_date": "2005-08-23",
	"application_number": "09566860",
	"application_date": "2000-05-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for diagnosing and predicting fluid flow systems using sensors",
	"summary": "",
	"abstract": "A fluid flow system for continuously monitoring the flow of fluid including fluid flow conduit with an upstream side and a downstream side, sensors and fluid flow elements, with the method for analyzing the operation of a fluid flow system by determining whether the fluid flow subsystem of the main system is operating properly, inputting a sensor reading of the parameter in the fluid flow of the main system and outputting an error indication of the main system.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "06917891",
	"publication_date": "2005-07-12",
	"application_number": "10248913",
	"application_date": "2003-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for providing original document orientation, tone reproduction curves and task specific user instructions based on displayed portions of a graphical user interface",
	"summary": "",
	"abstract": "Features, such as finely controlling toner response curves and properly orienting documents, provided by imaging capturing devices are accessed through a complicated graphical user interface that includes a number of tabs and large number of dropdown boxes, pop-up boxes, drop-down menus, and the like. Various displayable portions of a scanner control graphical user interface include a task-specific user instruction access button. Selecting the task-specific user instruction access button causes a pop-up menu to be displayed listing tasks that can be accomplished using, at least in part, various ones of the control elements displayed in the currently displayed portion of the scanner control graphical user interface. Upon selecting a selectable task item in the pop-up menu, a task-specific user instruction graphical user interface is displayed. A task instruction portion of the task-specific user instruction graphical user interface, provides the user with detailed instructions for accomplishing the selected task. A related tasks portion provides the user with a list of selectable tasks related to the selected task. The task description in the task instruction portion includes selectable terms used in the task description. Selecting a selectable term allows the user to either access the help entries on the selected term and/or causes a new list of selectable tasks to be displayed in the related tasks portion.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "06850259",
	"publication_date": "2005-02-01",
	"application_number": "09487266",
	"application_date": "2000-01-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for simplex and duplex image on paper registration",
	"summary": "",
	"abstract": "Systems and methods of registering a sheet in an image reproduction, e.g. . , . a xerographic, device use sheet parameters regardless of the tray or bin with which the sheets are associated, separate tallies of sheet registration correction factors for both sides of a sheet, and use registration errors detected on a first side of a sheet to generate correction factors concerning proper registration of the second side of that sheet. In embodiments, the systems and methods average registration errors for one particular side of a plurality of sheets to obtain a damped error signal that is taken into account for registration of subsequent sheets on each respective sheet side. In embodiments, the systems and methods determine variations between actual and target system performance to affect subsequent sheet flow and registration.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "06920307",
	"publication_date": "2005-07-19",
	"application_number": "10249632",
	"application_date": "2003-04-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generating hardware interfaces for designs specified in a high level language",
	"summary": "",
	"abstract": "A method of processing a general-purpose, high level language program to determine a hardware representation of the program can include compiling the general-purpose, high level language program to generate a language independent model (, and ). The language independent model can be scheduled such that each component is activated when both control and valid data arrive at the component (). An interface structure specifying a hardware interface through which devices external to the language independent model interact with a physical implementation of the language independent model can be defined and included in the language independent model ().",
	"url": null,
	"owner": "Xilinx, Inc.",
	"publication_number": "06952817",
	"publication_date": "2005-10-04",
	"application_number": "10310336",
	"application_date": "2002-12-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Reconfiguration of a programmable logic device using internal control",
	"summary": "",
	"abstract": "A method of partially reconfiguring an IC having programmable modules that includes the steps of reading a frame of configuration information from the configuration memory array; modifying at least part of the configuration information, thereby creating a modified frame of configuration information; and overwriting the existing frame of configuration information in the configuration memory array with the modified frame, thereby partially reconfiguring the IC.",
	"url": null,
	"owner": "XILINX, Inc.",
	"publication_number": "06920627",
	"publication_date": "2005-07-19",
	"application_number": "10377857",
	"application_date": "2003-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for controlling a complementary user interface on a display surface",
	"summary": "",
	"abstract": "An alternate display content controller provides a technique for controlling a video display separately from and in addition to the content displayed on the operating system display surface. Where the display is a computer monitor, the alternate display content controller interacts with the computer utility operating system and hardware drivers to control allocation of display space and create and control one or more parallel graphical user interfaces in addition to the operating system desktop. An alternate display content controller may be incorporated in either hardware or software. As software, an alternate display content controller may be an application running on the computer operating system, or may include an operating system kernel of varying complexity ranging from dependent on the utility operating system for hardware system services to a parallel system independent of the utility operating system and capable of supporting dedicated applications. The alternate display content controller may also include content and operating software delivered over the Internet or any other LAN. The alternate display content controller may also be included in a television decoder/settop box to permit two or more parallel graphical user interfaces to be displayed simultaneously.",
	"url": null,
	"owner": "xSide Corporation",
	"publication_number": "06892359",
	"publication_date": "2005-05-10",
	"application_number": "09724978",
	"application_date": "2000-11-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for displaying data in a second display area",
	"summary": "",
	"abstract": "A method for creating and accessing a graphical user interface in the overscan area outside the area of the display normally visible to users of the common operating systems. This normal display area is generally known as the u201cdesktopu201d. The desktop serves as the graphical user interface to the operating system. The desktop displays images representing documents and applications available to the user (icons). The desktop is restricted in the common environments to a predetermined set of resolutions (e.g., 640u00d7480, 800u00d7600, 1024u00d7768) as defined by VGA and SuperVGA standards. Displayable borders outside this area are the overscan.",
	"url": null,
	"owner": "xSides Corporation",
	"publication_number": "06966036",
	"publication_date": "2005-11-15",
	"application_number": "10114857",
	"application_date": "2002-04-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for distributed storage and retrieval of personal information",
	"summary": "",
	"abstract": "A system for distributing, storing and retrieving information associated with an end user from one or more information providers between a host computer and a client computer associated with the end user according to the present invention includes a host computer with a processor. The processor aggregates information associated with the end user and transmits the information to the client computer associated with the end user. The processor receives requests concerning the aggregated information from a variety of sources. The processor also receives the previously transmitted aggregated information from the client computer. The processor proceeds to service the received request based on the aggregated information received from the client computer.",
	"url": null,
	"owner": "Yodlee, Inc.",
	"publication_number": "06871220",
	"publication_date": "2005-03-22",
	"application_number": "09427787",
	"application_date": "1999-10-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
}]