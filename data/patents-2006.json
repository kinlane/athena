
[{
	"name": "3D stereo browser for the internet",
	"summary": "",
	"abstract": "A viewer for viewing stereo images either downloaded over a network, such as the Internet, or resident on a personal computer uses a graphical user interface (GUI) to facilitate the display of wireframes with or without texture applied in a variety of formats. In stereo mode, the GUI permits adjustment of the neutral plane and of camera offset. The file sizes utilized with the viewer are very small and permit rapid transmission over a network. The files contain wireframe information, texture map information and animation information.",
	"url": null,
	"owner": "",
	"publication_number": "07091991",
	"publication_date": "2006-08-15",
	"application_number": "10839581",
	"application_date": "2004-05-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "3D stereo browser for the internet",
	"summary": "",
	"abstract": "A viewer for viewing stereo images either downloaded over a network, such as the Internet, or resident on a personal computer uses a graphical user interface (GUI) to facilitate the display of wireframes with or without texture applied in a variety of formats. In stereo mode, the GUI permits adjustment of the neutral plane and of camera offset. The file sizes utilized with the viewer are very small and permit rapid transmission over a network. The files contain wireframe information, texture map information and animation information.",
	"url": null,
	"owner": "",
	"publication_number": "07154506",
	"publication_date": "2006-12-26",
	"application_number": "10839584",
	"application_date": "2004-05-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "3D stereo browser for the internet",
	"summary": "",
	"abstract": "A viewer for viewing stereo images either downloaded over a network, such as the Internet, or resident on a personal computer uses a graphical user interface (GUI) to facilitate the display of wireframes with or without texture applied in a variety of formats. In stereo mode, the GUI permits adjustment of the neutral plane and of camera offset. The file sizes utilized with the viewer are very small and permit rapid transmission over a network. The files contain wireframe information, texture map information and animation information.",
	"url": null,
	"owner": "",
	"publication_number": "07038698",
	"publication_date": "2006-05-02",
	"application_number": "09117219",
	"application_date": "1997-02-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Active keyboard system for handheld electronic devices",
	"summary": "",
	"abstract": "An active keyboard system includes a processor, a memory, and a display communicatively connected to one another. The system includes input means for inputting data and commands into the system. The input means include at least one selector, and a plurality of keys. Active keyboard system software is stored on the memory and is configured to dynamically present available choices on the display grouped to effect unambiguous selection of the available choices through use of the input means. The active keyboard system software includes presentation code and filter code. The presentation code includes step or scroll resolution code to enable scrolling, and grid presentation code to organize available choices on a visual grid and provide the visual grid to the display. The grid presentation code configures the visual grid with one or more panes each configured as a matrix with a plurality of columns and plurality of rows.",
	"url": null,
	"owner": "",
	"publication_number": "07002553",
	"publication_date": "2006-02-21",
	"application_number": "10895967",
	"application_date": "2004-07-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for increased security of wireless transactions",
	"summary": "",
	"abstract": "A mobile communication device with security mechanisms is provided for enabling wireless personal information transfer with increased security. In another embodiment of the invention, a mobile communication device is used to confirm a transaction.",
	"url": null,
	"owner": "",
	"publication_number": "07110792",
	"publication_date": "2006-09-19",
	"application_number": "10848405",
	"application_date": "2004-05-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application independent write monitoring method for fast backup and synchronization of files",
	"summary": "",
	"abstract": "A method for monitoring file system requests made by an application program, storing changes made to a first copy of a selected file by the application program into a first file and synchronizing the changes made to the selected file with a second copy of the selected file. The monitoring and storing process is application independent in that it is utilized by the operating system for all file system requests made by any application program. The monitoring and storing process is repeated each time a file system request is made by the application program to track changes made to the selected file. At the time of synchronization, if the application program is no longer modifying the selected file and the selected file is closed, all entries in the first file are applied to the second copy of the selected file. As a result, synchronization of both copies of the selected files is achieved.",
	"url": null,
	"owner": "",
	"publication_number": "06985915",
	"publication_date": "2006-01-10",
	"application_number": "09794094",
	"application_date": "2001-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Associating content with households using smart cards",
	"summary": "",
	"abstract": "Media content is associated with households using smart cards. The media content is encrypted and/or decrypted based on a household identifier corresponding to a smart card. Media content is encrypted such that it can only be decrypted with the same (or similar) smart card. Thus, the encrypted media content can be safely transferred within a computing device, stored, transferred to other computing devices, etc. because it cannot be decrypted without the smart card.",
	"url": null,
	"owner": "",
	"publication_number": "07080039",
	"publication_date": "2006-07-18",
	"application_number": "09534923",
	"application_date": "2000-03-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Asynchronous messaging using a node specialization architecture in the dynamic routing network",
	"summary": "",
	"abstract": "A network routes update messages containing updates to properties of live objects from input sources to clients having the objects. When the clients receive live objects, the clients identify the object IDs associated with the objects and register the object IDs with the routing network. The routing network is adapted to selectively send update messages to nodes in the network and the nodes forward the messages to the clients. One implementation uses a hierarchy of registries to indicate which nodes and clients receive which update messages. Another implementation assigns update messages to one or more of N categories and nodes to one or more of M types, and the gateways maintain mapping between categories and types. To ensure that clients receive all of the update messages for which they register, the clients connect to client proxies that in turn connect to at least one node of each type.",
	"url": null,
	"owner": "",
	"publication_number": "07051070",
	"publication_date": "2006-05-23",
	"application_number": "10105018",
	"application_date": "2002-03-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Auto configuration of portable computers for use in wireless local area networks",
	"summary": "",
	"abstract": "A method and apparatus for the configuration of a wireless network adapter is disclosed. A wireless network adapter is provided with software that enables the adapter to recognize and connect with one or more networks. Software profiles are loaded onto or created on the adapter. The software profiles each correspond to a unique network.",
	"url": null,
	"owner": "",
	"publication_number": "07103661",
	"publication_date": "2006-09-05",
	"application_number": "09803203",
	"application_date": "2001-03-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Cable with built in-frame grabber for a dental video camera",
	"summary": "",
	"abstract": "A cable assembly for a dental video camera system includes a dental video camera with a camera cable and a camera connector, a monitor with a monitor cable and a monitor connector and a power supply with power supply cable and a power supply connector. The cable assembly also includes an input housing, a camera cable with a complement-camera connector and a first connector. The camera cable is electrically coupled to the first connector. The complement camera connector that electrically couples the dental video camera through the camera connector to said camera cable. The cable assembly also an output housing with a complement-monitor connector, a complement-power supply connector and a complement-first connector. The complement-monitor connector and the complement-power supply connector are disposed in the output housing and the complement camera connector electrically couples the dental video camera through the camera connector to the camera cable.",
	"url": null,
	"owner": "",
	"publication_number": "07084899",
	"publication_date": "2006-08-01",
	"application_number": "10059079",
	"application_date": "2002-01-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Collection installable knowledge",
	"summary": "",
	"abstract": "A Collection Knowledge System provides context-sensitive knowledge delivery services to application programs, thereby enabling application programs to effectively support variant computational processes. In operation, a Collection Knowledge System receives knowledge requests from application programs, performs local and remote lookups into structured trees of knowledge, and returns requested knowledge to requesting application programs. Collection Knowledge Systems can manage knowledge for entire variant computational processes, thereby enabling application programs to calculate and execute many variant computational processes in fully automated, scalable ways that were not previously possible. As a consequence of automated process construction and execution, associated human labor costs are effectively reduced to zero.",
	"url": null,
	"owner": "",
	"publication_number": "07020644",
	"publication_date": "2006-03-28",
	"application_number": "10227821",
	"application_date": "2002-08-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer program and data structure for use in knowledge enhance electronic logic",
	"summary": "",
	"abstract": "A computer program and related data processing methods adapted for computational decision-making including a graphical programming interface, a data structure and a program execution engine. The program uses a hierarchical structure of positions and arguments along with linkages which define functional relationships between different positions and arguments. The positions are primarily characterized by position values that may represent outputs although the positions also have other functional features. The arguments are characterized by argument values that may represent inputs. The values of the arguments are associated with each position are combined to determine the value of that position. A data structure is utilized that is comprised of position and argument data tables and a linkage data structure including data arrays associated with each type of linkage. The position and argument data tables store basic position and argument data such as value. The data arrays of the linkage data structures store the basic data entries by linkage type specifying the linkage connections and in accordance with index values that may be used in identifying the data entries.",
	"url": null,
	"owner": "",
	"publication_number": "07039623",
	"publication_date": "2006-05-02",
	"application_number": "10289663",
	"application_date": "2002-11-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer program and related data processing methods for use in knowledge enhanced electronic logic",
	"summary": "",
	"abstract": "A computer program and related data processing methods adapted for use in computational decision-making. The underlying program uses a hierarchical structure of positions and arguments along with linkages which define functional relationships between different positions and arguments. The positions are primarily characterized by position values that may represent outputs although the positions also have other functional features. The arguments are characterized by argument values that may represent inputs. The values of arguments associated with particular positions are combined to determine the value of that position. Supporting arguments increase position value while objecting arguments reduce position value. The program includes an iterative loop that runs until stable values are achieved for all positions and arguments. Position values are calculated position by position. Once a position is selected its arguments are collected and mathematically combined to arrive at a modified position value. Thereafter, this new modified value is used in adjusting the values of other positions and arguments having linkages with the selected position.",
	"url": null,
	"owner": "",
	"publication_number": "07009610",
	"publication_date": "2006-03-07",
	"application_number": "10289517",
	"application_date": "2002-11-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed, multi-user, multi-threaded application development system and method",
	"summary": "",
	"abstract": "An object-oriented multi-threaded application development system and method for developing resource information software is provided, wherein the application development framework is made up of three tiers. The first tier comprises at least one computer running a web browser, where the web browser is capable of running an object-orientated applet. The second tier similarly comprises at least one computer, wherein the computer runs a web server, a report server, and an application server. The first and second tiers are connected through a network. The third tier comprises at least a third computer, wherein the third computer runs an object-orientated database management system. The third computer is connected to the second tier through a second network.",
	"url": null,
	"owner": "",
	"publication_number": "07124134",
	"publication_date": "2006-10-17",
	"application_number": "10434495",
	"application_date": "2003-05-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Flexible interrupt handling methods for optical networking apparatuses with multiple multi-protocol optical networking modules",
	"summary": "",
	"abstract": "An API including an interrupt handler registration function and one or more interrupt dispatchers, is provided to an optical networking apparatus to facilitate registration of interrupt handlers to handle interrupts triggered by the function blocks of multi-protocol optical networking modules (MPONM). Each registered interrupt handler may handle interrupts triggered by one or more function blocks of any of the MPONM, and/or for one or more cause. In one embodiment, the one or more interrupt dispatchers are equipped to determine the triggering function block and the cause, and determine the interrupt handlers, if any, are to be notified. Each of the interrupt handlers to be notified is notified accordingly, including the triggering function block and the cause.",
	"url": null,
	"owner": "",
	"publication_number": "07130948",
	"publication_date": "2006-10-31",
	"application_number": "10211001",
	"application_date": "2002-08-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Global electronic commerce system",
	"summary": "",
	"abstract": "A comprehensive system effectuates global electronic commerce on the Internet across frontiers of nations, cultures, and languages. Referral Websites serving various locales offer Buyers the opportunity to view products for purchase. A Buyer selects categories of products for viewing by using drop-down menus that organize products into a clear taxonomy that can be expressed across all languages. Having selected a category of products for viewing, a Buyer receives, from a multi-version relational database, a version of marketing information about each product. The version is one automatically sent from the database to match the Buyer's language, culture, and nationality, as deduced from the use of a particular Referral Website. A shopping cart allows Buyers to select a product for purchase in an interactive way that encourages completion of the purchase. Products can be offered with custom options and in wholesale quantities. Personalized Web pages allow comprehensive customer service after a sale.",
	"url": null,
	"owner": "",
	"publication_number": "07013289",
	"publication_date": "2006-03-14",
	"application_number": "09788853",
	"application_date": "2001-02-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Instance browser for ontology",
	"summary": "",
	"abstract": "An instance browser including a repository of class and relation definitions, a server for responding to queries relating to class and relation definitions in the repository, and a graphical user interface including icons for representing instances of classes. A method is also described and claimed.",
	"url": null,
	"owner": "",
	"publication_number": "07093200",
	"publication_date": "2006-08-15",
	"application_number": "09904457",
	"application_date": "2001-07-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integrated fiber, sensor and lens arrays and their applications for optical networks",
	"summary": "",
	"abstract": "Fiber, lens and sensor arrays and their precision alignment for optical devices with free space light propagation is disclosed. Fabrication methods of arrays and their assembly are also proposed. In one implementation, a device includes a fiber alignment module holding fibers in parallel to form a fiber array. The fiber alignment module includes first and second alignment plates, and a spacer plate engaged between the first and second alignment plates. Each alignment plate includes an array of through holes to respectively hold the fibers. A lens array can be engaged to the fiber alignment module to align lenses to their corresponding fibers. Passive alignment features may be formed at interfacing surfaces of different layers to assist the alignment. Applications of these integrated fiber, lens and sensor arrays to optical cross-connect switches and reconfigurable add-drop multiplexers are also disclosed.",
	"url": null,
	"owner": "",
	"publication_number": "07058253",
	"publication_date": "2006-06-06",
	"application_number": "11101989",
	"application_date": "2005-04-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interactive three-dimensional multimedia I/O device for a computer",
	"summary": "",
	"abstract": "A motion based communications system having an animated device, which is controlled locally or over a network connection, and which uses motion to convey information to a user. The information can relate to a predefined system events, such as printer status changes, e-mail status, system errors or communications. Further, it can represent remote individuals in a chat room, or when playing games. Computer games can use it to represent a remote or local human or software opponent. Voice recognition software allows commands or data to be input to the system via the device. Multiple devices can be used for multiple remotely located users. A universal base unit allows characters to be replaceably attached to, and controlled by, the base unit. Different characters can be substituted for different games, etc. The device may be software controlled by any application program via a standard application program interface.",
	"url": null,
	"owner": "",
	"publication_number": "07137861",
	"publication_date": "2006-11-21",
	"application_number": "10604387",
	"application_date": "2003-07-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Memory address prediction under emulation",
	"summary": "",
	"abstract": "Emulation of a guest computer architecture on a host system of another computer architecture. Legacy instructions are translated into translated instructions. If the particular legacy instruction is an operand-setting instruction for storing a value of a precedent operand, a corresponding flag is set when the value of the precedent operand has not been determined. If the particular legacy instruction is an operand-using instruction for using the precedent operand, a check is made to determine if the corresponding flag is set.",
	"url": null,
	"owner": "",
	"publication_number": "07092869",
	"publication_date": "2006-08-15",
	"application_number": "09992137",
	"application_date": "2001-11-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Memory device with applications software for releasable connection to a host computer",
	"summary": "",
	"abstract": "There is disclosed a memory device that is releasably connectable to a computer, and which contains at least one applications software package and associated data. Upon connection to the computer, the applications software package runs directly from the device without being uploaded or installed on the computer. In this way, a user of the device may work on any compatible computer using his or her preferred applications software packages and data, without having to configure the computer or install any particular software or data.",
	"url": null,
	"owner": "",
	"publication_number": "07051157",
	"publication_date": "2006-05-23",
	"application_number": "10388210",
	"application_date": "2003-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for automatically archiving a file system",
	"summary": "",
	"abstract": "In a digital data processing system having an on-line file system component, a method and apparatus for archiving the contents of a selected client volume stored on the file system. The archiving is performed automatically, beginning with an initial duplication of the existing contents of the client volume into an archive volume, then continuing as changes, including additions, deletions and modifications, are made to the files comprising the client volume. Older, previously-archived versions of modified files are gracefully discarded so as to moderate the rate of growth of the archive volume. The archive volume may be used to restore the client volume, either selectively or in whole, in the event of inadvertent damage to, or loss of, files in the client volume.",
	"url": null,
	"owner": "",
	"publication_number": "07155465",
	"publication_date": "2006-12-26",
	"application_number": "10420113",
	"application_date": "2003-04-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing communication transmissions",
	"summary": "",
	"abstract": "A method and apparatus for providing communications between a broadcast station and a plurality of viewing stations operated by viewers that allows the viewers to customize the broadcast transmissions to remove or replace particular phrases or scenes. The broadcast station also identifies broadcast transmissions of interest to a viewer by comparing the broadcast transmission characteristics to the viewer's broadcast request. The broadcast station also receives a plurality of electronic transmissions and identifies the recipients and transmitters of the electronic transmissions to facilitate providing incentives to persons for forwarding the transmissions. The viewing station includes command software that includes a watch mode in which information that is manually provided by a user and transmitted to a web page, is stored for use with voice commands. The voice commands and stored information is used by the command software to supply web pages with appropriate data. The broadcast station also provides a virtual space to the viewers operating the viewing station.",
	"url": null,
	"owner": "",
	"publication_number": "07133837",
	"publication_date": "2006-11-07",
	"application_number": "09606350",
	"application_date": "2000-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing service selection, redirection and managing of subscriber access to multiple WAP (Wireless Application Protocol) gateways simultaneously",
	"summary": "",
	"abstract": "A method (FIG. ) and apparatus (FIG. ) to provide control and policy enforcement of WAP (Wireless Application Protocol) services in a wireless data networks is taught herein. WAP traffic is inspected with efficient algorithms to intercept un-registered WAP access and intercept dynamic change of user service selection. The intercepted WAP requests are modified with value-added parameters (such as QoS and subscriber identifiers) as per user and service provider agreement and table data. A series of strategies are described to blend wireless intelligence, user preference and service subscription, network operator requirements and service provider or enterprise preferences into routing and drive page generation. The means to dynamically provision users' service choices to wireless network elements are also presented without having to break the session within the system. This enables innovative data services such as pay-per-use, smart routing, and enterprise secured WAP services unlike any current conventional system.",
	"url": null,
	"owner": "",
	"publication_number": "07039037",
	"publication_date": "2006-05-02",
	"application_number": "09933781",
	"application_date": "2001-08-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for self-describing externally defined data structures",
	"summary": "",
	"abstract": "Embodiments of the invention provide a framework for computer application to utilize data structures by loading externally-defined container data structures, and building in-memory representation of data structures at runtime. Contrary to existing applications, computer applications implementing the invention may utilize data structures for which the architecture is not embedded within the application code. Embodiments of the invention provide mechanisms by which applications (or components thereof) implementing the invention may access and modify data structures and their individual elements.",
	"url": null,
	"owner": "",
	"publication_number": "07143101",
	"publication_date": "2006-11-28",
	"application_number": "10418957",
	"application_date": "2003-04-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and device for protecting digital data by double re-encryption",
	"summary": "",
	"abstract": "A method and an apparatus ensuring protection of digital data are provided. In addition to re-encrypting the data using an unchangeable key, the data is double re-encrypted using a changeable key. The changeable key is used first and the unchangeable key is then used, or in another case, the unchangeable key is used first, and the changeable key is then used. In the aspect of embodiments, there is a case adopting a software, a case adopting a hardware, or a case adopting the software and the hardware in combination. The hardware using the unchangeable key developed for digital video is available. In adopting the software, encryption/decryption is performed in a region below the kernel which cannot be handled by the user to ensure the security for the program and for the key used. More concretely, encryption/decryption is performed with RTOS using a HAL and a device driver, i.e., a filter driver, a disk driver and a network driver, in an I/O manager. Either one of two filter drivers, with a file system driver between them, may be used. Further, both filter drivers may be used.",
	"url": null,
	"owner": "",
	"publication_number": "07093295",
	"publication_date": "2006-08-15",
	"application_number": "09806510",
	"application_date": "1999-10-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for deploying an asset over a multi-tiered network",
	"summary": "",
	"abstract": "A method and system for deploying assets to multi-tiered network nodes. An asset may represent network and/or application components (e.g., data, objects, applications, program modules, etc.) that may be distributed among the various resources of the network. In one embodiment, a target node's environment may be adjusted before an asset is deployed to that target node. In an alternative embodiment, a target deployment adapter, associated with the asset, may be selected and deployed with the asset in order to allow the asset to operate in the target node environment. An implementation class, associated with the asset, may be inserted into the target node environment. An altered target deployment descriptor may also be inserted into the target node environment.",
	"url": null,
	"owner": "",
	"publication_number": "07150015",
	"publication_date": "2006-12-12",
	"application_number": "09946438",
	"application_date": "2001-09-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for remotely facilitating the integration of a plurality of dissimilar systems",
	"summary": "",
	"abstract": "The present invention is related to a method and system for facilitating the integration of a plurality of dissimilar systems by allowing networks of integration framework installations and/or other compatible B2B servers to inter-operate across corporate enterprise boundaries to integrate the disparate systems operating within each corporate enterprise.",
	"url": null,
	"owner": "",
	"publication_number": "07143190",
	"publication_date": "2006-11-28",
	"application_number": "10109874",
	"application_date": "2002-04-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and systems for making OLAP hierarchies summarisable",
	"summary": "",
	"abstract": "A method, a computer system and a computer program product for a computer system for transforming general On-line Analytical Processing (OLAP) hierarchies into summarizable hierarchies whereby pre-aggregation is disclosed, by which fast query response times for aggregation queries without excessive storage use is made possible even when the hierarchies originally are irregular. Pre-aggregation is essential for ensuring adequate response time during data analysis. Most OLAP systems adopt the practical pre-aggregation approach, as opposed to full pre-aggregation, of materializing only select combinations of aggregates and then re-use these for efficiently computing other aggregates. However, this re-use of aggregates is contingent on the dimension hierarchies and the relationships between facts and dimensions satisfying stringent constraints. The present invention significantly extends the scope of practical pre-aggregation by transforming irregulare dimension hierarchies and fact-dimension relationships into well-behaved structures that enable practical pre-aggregation.",
	"url": null,
	"owner": "",
	"publication_number": "07133865",
	"publication_date": "2006-11-07",
	"application_number": "10031911",
	"application_date": "2000-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "PC-based open metering system and method",
	"summary": "",
	"abstract": "A transaction evidencing system includes a personal computer (PC) comprising a processor, memory and hard drive, with a plurality of non-metering application programs that selectively run on the PC. An unsecured printer is operatively coupled to the PC for printing in accordance with the non-metering application programs. A portable vault card that is removably coupled to the PC is programmed to generate tokens generation and perform transaction accounting. An application interface module in the PC, which interfaces with the non-metering application programs, issues a request for digital tokens in response to requests for indicia from a non-metering application program. A secure communications module in the PC, which securely communicates with the vault card when the vault card is coupled to the PC, sends the request for digital token to the vault card and receives a digital token generated by the vault card. An indicia bitmap generation module generates an indicia bitmap in the PC from the digital token and stores it in memory. The indicia bitmap is accessed by the non-metering application program when a print indicia operation is selected. A transaction capture module in the PC stores on the hard drive a transaction record corresponding to each issued digital token and associated postal data. The application interface module, the secure communications module, the indicia bitmap generation module and the transaction capture module are part of a dynamic link library module in the PC.",
	"url": null,
	"owner": "",
	"publication_number": "07080044",
	"publication_date": "2006-07-18",
	"application_number": "09690285",
	"application_date": "2000-10-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Performance of intermediate nodes with flow splicing",
	"summary": "",
	"abstract": "A method and apparatus for splicing a first data flow inbound to an intermediate node and second data flow outbound from the intermediate node transforms the first data flow and the second data flow into a single composite data flow originating at the source of the first data flow and terminating at the destination of the second data flow. The method allows any other data flows associated with the first or second data flow, such as other data flows associated with connections that encompass either the first or second data flow, to remain unaffected by the splice. The method allows intermediate nodes in a network to influence data flow between a pair of nodes at or above the transport layer without incurring all the overhead commonly associated with transport and higher layer processing.",
	"url": null,
	"owner": "",
	"publication_number": "07139268",
	"publication_date": "2006-11-21",
	"application_number": "09240374",
	"application_date": "1999-01-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Peripheral apparatus for intelligent networks and method for providing user services in intelligent networks",
	"summary": "",
	"abstract": "An apparatus and method for providing user interaction functionality in connection with providing call services (e.g., toll-free calls, 900 calls, calling card calls, etc.) in an intelligent network, especially, but not necessarily only, an advanced intelligent network. More specifically, an apparatus is provided in association with a given service control point (that offers a given call service). According to the present invention, user information needed to set up or otherwise provide the call service (e.g., a calling card number) is collected and, if needed, feedback is provided to the user. In particular, the feedback is customized with respect to a particular user (e.g., using language and/or dialect corresponding to a geographic location of the user). Collecting user information can include speech recognition, including speech recognition across multiple languages and synonymous terms. The present invention may be embodied, for example, in a computer system that processes input information and outputs information to the user. The system may include a signaling interface unit for communicating with the intelligent network. The system is connected to a service switching point and may additionally be connected to a service connection point. The nodal connections are made on an out-of-band signaling network, such as a Signaling System 7 network.",
	"url": null,
	"owner": "",
	"publication_number": "06996224",
	"publication_date": "2006-02-07",
	"application_number": "09845810",
	"application_date": "2001-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Storing state in a dynamic content routing network",
	"summary": "",
	"abstract": "A dynamic content routing network routes update messages containing updates to properties of live objects from input sources to clients. The clients receive a web page having live objects, identify the object IDs associated with the objects, and contact an object state storage to obtain update messages specifying the objects'initial properties. The clients register the object IDs with the routing network. The routing network maintains a registry of object IDs and clients. The input source provides an update message to the routing network containing the object ID and data for updating a property of the object. The routing network routes update messages from the input source to the clients registered for the object ID contained in the message. Upon receipt of the message, a client updates the specified property of the live object. The update messages are also provided to, and stored by, the object state storage.",
	"url": null,
	"owner": "",
	"publication_number": "07127720",
	"publication_date": "2006-10-24",
	"application_number": "10213269",
	"application_date": "2002-08-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and apparatus for compressing and decompressing data stored to a portable data storage device",
	"summary": "",
	"abstract": "A portable memory device is provided that is capable of easy connection to a personal computer via a universal serial bus (USB) port, IEEE 1394 (i.e., firewire) or similar port. Included in the portable memory device is a compression/decompression engine capable of compressing and decompressing data. Data residing on a personal computer or other host platform is compressed by the engine and saved to the memory of the portable memory device. Compressed data is retrieved and decompressed by the engine and transmitted to the personal computer for use by the user. Embodiments of the present invention thus provide a highly convenient system and apparatus for users to access and save larger quantities of data to a relatively small device.",
	"url": null,
	"owner": "",
	"publication_number": "07082483",
	"publication_date": "2006-07-25",
	"application_number": "10147124",
	"application_date": "2002-05-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for an automated system of record",
	"summary": "",
	"abstract": "An automated system of record creates and administers a sponsored community for participants. Participants use an automated negotiations engine for iterative, multivariate negotiations that stores each set of terms at each iteration to form a system of record. The automated negotiations engine can also be used to propose and negotiate specifications, prototypes and implementations of other systems. An active contract feature informs the results of such negotiations, by incorporating predefined templates to track activity related to the concluded negotiation. The system implements a higher level of security by validating activities against the originally negotiated terms. A contract authority assigns a unique identifier to each transaction to track activities against the transaction for analysis and reporting. A multiple repository enables users to maintain the non-repudiation data for transactions in which they participate at user designated locations. Participants can also use process mining to measure the effectiveness of processes.",
	"url": null,
	"owner": "",
	"publication_number": "07149724",
	"publication_date": "2006-12-12",
	"application_number": "09702062",
	"application_date": "2000-10-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for communicating information relating to a network resource",
	"summary": "",
	"abstract": "In an information retrieval system, a system and method for presentation of information and/or resources that are pertinent to an individual's interests or task. Guiding individuals to places of interest on a network where information is stored, and displaying or otherwise presenting useful information to the user.",
	"url": null,
	"owner": "",
	"publication_number": "07043526",
	"publication_date": "2006-05-09",
	"application_number": "10021761",
	"application_date": "2001-12-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for establishing and controlling an on-demand teleconference by a remote computer",
	"summary": "",
	"abstract": "A teleconference network, using multiple teleconference bridges and a data network is disclosed. A first telephone network transmits, in one or more frames, a voice transmission generated by a first telecommunication unit. A first gateway, connected to said first telephone network, converts each frame received from said first telephone network into one or more data packets. A first routing device, coupled to said first gateway and said data network, transmits the one or more data packets generated by said first gateway through said data network. A second routing device, coupled to said data network, receives the one or more data packets transmitted by said first routing device. A second gateway, coupled to said second routing device, converts the data packets received by said second routing devices into frames. One of the multiple teleconference bridges inserts the frames received from said second gateway into a teleconference hosted on said bridge.",
	"url": null,
	"owner": "",
	"publication_number": "07119828",
	"publication_date": "2006-10-10",
	"application_number": "10423693",
	"application_date": "2003-04-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for information retrieval employing a preloading procedure",
	"summary": "",
	"abstract": "A document retrieval system having improved response time. During the time the user spends viewing the displayed information, other information that the user is likely to read or study later is preloaded into memory. If the user later requests the preloaded information, it can be written to the display very quickly. As a result, the user's request to view new information can be serviced quickly.",
	"url": null,
	"owner": "",
	"publication_number": "07103594",
	"publication_date": "2006-09-05",
	"application_number": "10611077",
	"application_date": "2003-07-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing learning material",
	"summary": "",
	"abstract": "A system and method provides content or material such as educational, informational, or learning content from existing and/or third party content on a network such as the Internet and disseminates the content via the network to a user by correlating the culled content to a user's learning profile. The system preferably pushes the content to the user after correlation of content to the user's learning profile. The user's learning profile includes data regarding a user's learning proclivities and/or preferences of a user's learning profile. The system scans and/or searches the Internet for the existing content. The system stores data about the scanned content particularly with respect to the content itself and relative to the classifications, categories, and/or categorization of learning proclivities and/or preferences. Particularly, the system stores data regarding the elements and/or characteristics of the content with respect to the learning proclivities and/or preferences. Subject matter content is then provided as per a curriculum and/or learning chain. The learning profile also maintains data regarding learning chain progression with regard to a curriculum. Preferably, but not necessarily, the content data and learning profile are in the form of an object model and, particularly, as metadata.",
	"url": null,
	"owner": "",
	"publication_number": "07050753",
	"publication_date": "2006-05-23",
	"application_number": "10662033",
	"application_date": "2003-09-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Television commerce system with program identifiers",
	"summary": "",
	"abstract": "A commerce control network is provided for obtaining product information and for purchasing products through a two-way interactive broadcast distribution system, such as a cable or satellite television system. The network includes advanced television set top boxes that provide users with the ability to access product information through the system. A unique identifier is received with the program being viewed and included in the user's request for product information to assure that the information retrieved from the network is timely and related to that program.",
	"url": null,
	"owner": "",
	"publication_number": "07110714",
	"publication_date": "2006-09-19",
	"application_number": "09704796",
	"application_date": "2000-11-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Run-time architecture for enterprise integration with transformation generation",
	"summary": "",
	"abstract": "An enterprise application system including a run-time transformation server, and a message broker for routing and transforming data in the form of messages between a source application and a target application, including a plug-in for preparing requests to the run-time transformation server and for processing responses from the run-time transformation server. A method is also described and claimed.",
	"url": null,
	"owner": "2006 Trident Company",
	"publication_number": "07146399",
	"publication_date": "2006-12-05",
	"application_number": "10104785",
	"application_date": "2002-03-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for integrating IP address reservations with policy provisioning",
	"summary": "",
	"abstract": "A method and system for policy provisioning and access managing on a data-over-cable system. One method includes receiving a first message on a first network device such as a CMTS from a second network device and marking the first message with an identifier of a network access device. The method further includes intercepting the first message on a third network device prior to a first protocol network server such as a Dynamic Host Configuration Protocol (u201cDHCPu201d) server receives the first message. When the third network device intercepts the first message, the third network device determines the identity of the second network device. Based on the identity of the second network device and using the identifier of the network access device, the third network device manages an assignment of configuration parameters for the second network device.",
	"url": null,
	"owner": "3Com Corporation",
	"publication_number": "07107326",
	"publication_date": "2006-09-12",
	"application_number": "09722939",
	"application_date": "2000-11-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for automatic load balancing in a data-over-cable network",
	"summary": "",
	"abstract": "A method and system for load balancing in a network system such as a data-over-cable system. One method includes receiving a first message on a first network device such as a cable modem termination system (u201cCMTSu201d) from a second network device and marking the first message with an identifier of a network access device. The method further includes intercepting the first message on a third network device such as a provisioning/access manager prior to any first protocol server such a Dynamic Host Configuration Protocol server receives the first message. When the third network device intercepts the first message, the third network device determines capabilities of the second network device and applies a set of rules to load balance any requests between a plurality of channel pairs. Each charmel pair is associated with at least one capability of a network device and also has a load factor parameter and a threshold value defining a capacity of a channel pair. The third network device assigns the second network device to a predetermined channel pair based on the capabilities of the second network device, a load factor of the channel pair and a capacity of the channel pair.",
	"url": null,
	"owner": "3Com Corporation",
	"publication_number": "07068597",
	"publication_date": "2006-06-27",
	"application_number": "09722980",
	"application_date": "2000-11-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for collaboratively viewing and editing seismic data",
	"summary": "",
	"abstract": "In one embodiment, a computer-implemented seismic viewing/editing collaboration method includes performing real-time collaborative cursor tracking, copaging, picking, and image manipulation in a distributed-display-processing, peer-to-peer architecture. A parameterized, minimal set of information required to update a display is transferred directly between different clients. A group state containing events generated by different clients is enforced to be synchronized on the different clients.",
	"url": null,
	"owner": "3DGeo Development, Inc.",
	"publication_number": "07031842",
	"publication_date": "2006-04-18",
	"application_number": "10787505",
	"application_date": "2004-02-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Communications service provider network",
	"summary": "",
	"abstract": "The present invention is directed to a method and system for enhancing the routing of telephony data. According to an example embodiment of the present invention, a telephony private branch exchange routing arrangement is adapted to route IP telephony data. The routing arrangement includes a call-control application having an OOP telephony interface and programmed, using OOP and the OOP telephony interface, to control the routing of calls. A device-control application is adapted to provide telephony communication signals for the routed calls and to interface between the call-control application and a plurality of telephony devices. Configuration information for the call-control application is provided via a configuration manager. In this manner, voice and data networks are effectively fused, allowing the easy integration of computer telephony applications.",
	"url": null,
	"owner": "8u00d78, Inc.",
	"publication_number": "07035935",
	"publication_date": "2006-04-25",
	"application_number": "09880706",
	"application_date": "2001-06-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Asset tracking in a network-based supply chain environment",
	"summary": "",
	"abstract": "The present disclosure controls the network and manages resources for managing network assets through in a network-based supply chain framework. Network assets are available to network users. One user may submit information reguarding potential for growth, the capacity, or the technological level of one of the network assets. Another user may submit similar information about another network asset. Based on the information from the users, the system may determine the optimal set of network assets. When network events about the assets are recieved, the events can be filtered, correlated and isolated. These events can then be translated into a standard object form for facilitating the determination of the problem causing the network event.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "07124101",
	"publication_date": "2006-10-17",
	"application_number": "09444653",
	"application_date": "1999-11-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Collaboration planning in a collaborative work tool architecture",
	"summary": "",
	"abstract": "The present disclosure provides for affording collaboration planning in a collaborative work tool architecture. A client user interface including an activity data field is provided. Then, activity data is received from a facilitator user, wherein the activity data includes a start time for the activity and a duration of the activity. The received activity data is then stored on a server via a network. Finally, a multiple of participant users are allowed access to the stored activity data via the network.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "07082430",
	"publication_date": "2006-07-25",
	"application_number": "09551039",
	"application_date": "2000-04-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Communication service architectures for netcentric computing systems",
	"summary": "",
	"abstract": "A communication services architecture for a netcentric computing system is disclosed by the present invention. The communication services architecture includes a communication services layer that includes messaging services, specialized messaging services, communication security services, virtual resource services and directory services. In addition, the communication services architecture includes a transport services layer that includes message transport services, packet forwarding/Internetworking services, circuit switching services, transport security services, network address allocation services and quality of service services. A network media services layer is provided that includes media access services and physical media services.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "07068680",
	"publication_date": "2006-06-27",
	"application_number": "09675232",
	"application_date": "2000-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Component based interface to handle tasks during claim processing",
	"summary": "",
	"abstract": "A computer program is provided for developing component based software capable of handling insurance-related tasks. The program includes a data component that stores, retrieves and manipulates data utilizing a plurality of functions. Also provided is a client component that includes an adapter component that transmits and receives data to/from the data component. The client component also includes a business component that serves as a data cache and includes logic for manipulating the data. A controller component is also included which is adapted to handle events generated by a user utilizing the business component to cache data and the adapter component to ultimately persist data to a data repository. In use, the client component is suitable for receiving a plurality of tasks that achieve an insurance-related goal upon completion, allowing users to add new tasks that achieve the goal upon completion, allowing the users to edit the tasks, and generating a historical record of the tasks that are completed.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "07013284",
	"publication_date": "2006-03-14",
	"application_number": "09305331",
	"application_date": "1999-05-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Controlling data collection, manipulation and storage on a network with service assurance capabilities",
	"summary": "",
	"abstract": "The present disclosure provides for controlling the collection, manipulation and storage of network performance data and network even data of a network with service assurance capabilities. Upon the receipt of an activation signal, a signal is transmitted to initiate the retrieving of network performance data and network event data generated from at least one network monitor. Such network monitor is adapted for monitoring a network system and the relocating of the data into a common directory. A signal is then transmitted to initiate the manipulation of the data and the loading of the manipulated data into a database.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "06985901",
	"publication_date": "2006-01-10",
	"application_number": "09471777",
	"application_date": "1999-12-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Development architecture framework",
	"summary": "",
	"abstract": "A development architecture framework manages information that supports a project being carried out by a development architecture framework. Security requirements are defined and the framework is audited to ensure requirements are met. Quality is ensured by obtaining and statistically analyzing measurements relating to predetermined criterion Personnel are trained to improve the quality of the project. The project is managed by generating a plan, scheduling a timeline, tracking the plan, and reporting information uncovered during tracking. A development environment is also managed. Component delivery is coordinated and delivery problems are rectified during the delivery.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "07139999",
	"publication_date": "2006-11-21",
	"application_number": "09387747",
	"application_date": "1999-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Initiating an agreement in an e-commerce environment",
	"summary": "",
	"abstract": "The present disclosure provides for initiation of an agreement utilizing a network. First, a buyer and a seller are allowed to negotiate terms of trade utilizing a network. A form is received from the buyer indicating the terms of trade utilizing the network. Also received utilizing the network is an identifier of the buyer. Thereafter, the form is sent to a bank for assessing the credit of the buyer utilizing the network. The bank to which the credit application is sent is based on the identifier. Next, the form is forwarded to a seller along with the assessment of the credit of the buyer. At such time, the seller is permitted to digitally sign the form utilizing the network. The digitally signed form is then received from the seller utilizing the network after which a notice is sent to the buyer indicating that the digitally signed form has been received from the seller, thus initiating the agreement.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "07069234",
	"publication_date": "2006-06-27",
	"application_number": "09470039",
	"application_date": "1999-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Knowledgebase framework system",
	"summary": "",
	"abstract": "A system, method and article of manufacture are provided for a knowledgebase framework. Information is obtained from at least one source utilizing a network. Utilizing a knowledge model, an index is generated for the obtained information. The generated index includes a plurality of items each associated with at least some of the obtained information. Utilizing the network, the generated index is displayed to a user. The user is permitted to select an least one of the items of the index. The information associated with the selected item is then displayed to the user utilizing the network.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "07099854",
	"publication_date": "2006-08-29",
	"application_number": "11060722",
	"application_date": "2005-02-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Listing activities in a graphical user interface in a collaborative work tool Architecture",
	"summary": "",
	"abstract": "A system, method and program are provided for listing activities in a graphical user interface in a collaborative work tool framework. An activity window having activity description data, activity start data, activity duration data, and an activity status data is displayed. Then, an activity is defined in response to user selection of a defined activity button and the defined activity is displayed in the activity window. Next, status for the defined activity is determined based on the start time and the duration for the defined activity. Finally, background information relevant to the defined activity is automatically acquired, including automatically obtaining the activity description when the start time is within a predetermined period, parsing and pattern matching the activity description to identify searchable components thereof, querying a plurality of sources across a network to obtain the background information, and receiving the background information in response to querying the plurality of sources.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "06993723",
	"publication_date": "2006-01-31",
	"application_number": "09550987",
	"application_date": "2000-04-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing user information on an e-commerce system",
	"summary": "",
	"abstract": "The present invention provides for the management of user information of both site server and regular web site users. A site server is provided with information stored thereon including preferences, roles, and details related to users. A database separate from the site server is also provided. The database has information stored thereon including preferences, roles, and details relating to the users. An identity of one of the users is authenticated. A single interface is displayed which provides the user access to both the site server and the database upon authentication of the identity of the user. The user is allowed to view and change the information that is stored on the site server and the database and that is associated with the user. The single interface is tailored based on the information associated with the user.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "07100195",
	"publication_date": "2006-08-29",
	"application_number": "09364091",
	"application_date": "1999-07-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Organizing and managing transaction-related tax information",
	"summary": "",
	"abstract": "Organizing and managing a transaction-related dimension of tax-related data allows for the generation of fact details to facilitate payment of taxes. First, a transaction-related dimension of tax-related data is provided along with a plurality of attributes for the transaction-related dimension. Such attributes include a transaction line item determined based on a transaction identifier, a transaction type, a tax type, a customer account identifier, a sold to location geographic code, a ship to location geographic code, a contract number, a purchase order number, a vendor account identifier, and a vendor zip code. Next, a plurality of entries are received which are associated with the attributes of the transaction-related dimension. A plurality of fact details are then generated using the entries of a predetermined set of the attributes of the transaction-related dimension. Thereafter, a set of aggregate fact details are generated based on the plurality of fact details. These aggregate fact details are then outputted.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "07043448",
	"publication_date": "2006-05-09",
	"application_number": "10430691",
	"application_date": "2003-05-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Sharing a centralized profile",
	"summary": "",
	"abstract": "A system is disclosed that facilitates web-based a virtually ubiquitous network interface is created by obtaining user profile information from a user and activity information from a user device, storing the user profile information and activity information in a database, providing access to the database from any Internet enabled device with appropriate security clearance for altering the database, receiving permission from the user to allow a third party to access the user profile, providing the third party access to a public subset of the user profile, receiving and storing content from the third party, and synchronizing the database and an Internet enabled device. The system responds to unsolicited updates from Internet enabled devices such as gas meters, electrical meters and household appliances to keep a user profile current.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "07076504",
	"publication_date": "2006-07-11",
	"application_number": "09195852",
	"application_date": "1998-11-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and article of manufacture for advanced information gathering for targetted activities",
	"summary": "",
	"abstract": "An agent based system assists in preparing an individual for an upcoming meeting by helping him/her retrieve relevant information about the meeting from various sources based on preexisting information in the system. The system obtains input text in character form indicative of the target meeting from a calendar program that includes the time of the meeting. As the time of the meeting approaches, the calendar program is queried to obtain the text of the target event and that information is utilized as input to the agent system. Then, the agent system parses the input meeting text to extract its various components such as title, body, participants, location, time etc. The system also performs pattern matching to identify particular meeting fields in a meeting text. This information is utilized to query various sources of information on the web and obtain relevant stories about the current meeting to send back to the calendaring system. For example, if an individual has a meeting with Netscape and Microsoft to talk about their disputes, the system obtains this initial information from the calendaring system. It will then parse out the text to realize that the companies in the meeting are u201cNetscapeu201d and u201cMicrosoftu201d and the topic is u201cdisputesu201d. It will then surf the web for relevant information concerning the topic. Thus, in accordance with an objective of the invention, the system updates the calendaring system and eventually the user with the best information it can gather to prepare for the target meeting. In accordance with a preferred embodiment, the information is stored in a file that is obtained via selection from a link imbedded in the calendar system.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "07149741",
	"publication_date": "2006-12-12",
	"application_number": "10748376",
	"application_date": "2003-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Technology sharing during demand and supply planning in a network-based supply chain environment",
	"summary": "",
	"abstract": "The present disclosure provides for supplying collaborative planning by a computerized framework manager. Steps include furnishing network connections and collecting supply and demand information from business entities. Such information is analyzed and used to facilitate planning among the business entites. The network provides data access for multiple data sources and the network is used to store capacity data. The computerized framework manager conducts reverse inventory management of the business entities through the collection of data; analysis of data is then used to predict future demand, and predicted future demand is used to forecast costs to manufacturers, from which suggestions regarding optimization is made.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "07130807",
	"publication_date": "2006-10-31",
	"application_number": "09444739",
	"application_date": "1999-11-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Business alliance identification in a web architecture Framework",
	"summary": "",
	"abstract": "A method is provided for identifying alliances among a plurality of business entities in components of a network framework. First, alliances are identified among a plurality of business entities in terms of components of a current network framework. Next, a pictorial representation is displayed of the current network framework and the components. The alliances are then conveyed by indicia coding the components of the current network framework in which the alliances exist.",
	"url": null,
	"owner": "Accenture, LLP",
	"publication_number": "07149698",
	"publication_date": "2006-12-12",
	"application_number": "10662037",
	"application_date": "2003-09-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic toolbar in a tutorial system",
	"summary": "",
	"abstract": "A system is disclosed that provides a goal based learning system utilizing a rule based expert training system to provide a cognitive educational experience. The system provides the user with a simulated environment that presents a training opportunity to understand and solve optimally. Mistakes are noted and remedial educational material presented dynamically to build the necessary skills that a user requires for success in the business endeavor. The system uses an artificial intelligence engine driving individualized and dynamic feedback with synchronized video and graphics used to simulate real-world environment and interactions. Multiple u201ccorrectu201d answers are integrated into the learning system to allow individualized learning experiences in which navigation through the system is at a pace controlled by the learner. A dynamic toolbar that contains information that is context sensitive and utilities that are integrated into the presentation is instantiated from a database of presentation tailored information.",
	"url": null,
	"owner": "Accenture, LLP",
	"publication_number": "07065512",
	"publication_date": "2006-06-20",
	"application_number": "09868694",
	"application_date": "1999-02-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Goal based system tailored to the characteristics of a particular user",
	"summary": "",
	"abstract": "A system is disclosed that provides a goal based learning system utilizing a rule based expert training system to provide a cognitive educational experience. The system provides the user with a simulated environment that presents a business opportunity to understand and solve optimally. Mistakes are noted and remedial educational material presented dynamically to build the necessary skills that a user requires for success in the business endeavor. The system utilizes an artificial intelligence engine driving individualized and dynamic feedback with synchronized video and graphics used to simulate real-world environment and interactions. Multiple u201ccorrectu201d answers are integrated into the learning system to allow individual learning experiences in which navigation through the system is at a pace controlled by the learner. A robust business model provides support for realistic activities and allows a user to experience real-world consequences for their actions and decisions and entails real-time decision making and synthesis of the educational material. The system characterizes a user to tailor the presentation.",
	"url": null,
	"owner": "Accenture, LLP",
	"publication_number": "07089222",
	"publication_date": "2006-08-08",
	"application_number": "09868667",
	"application_date": "1999-02-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Simulation enabled feedback system",
	"summary": "",
	"abstract": "A system is disclosed that provides a goal based learning system utilizing a rule based expert training system to provide a cognitive educational experience. The system provides the user with a simulated environment that presents a business opportunity to understand and solve optimally. Mistakes are noted and remedial educational material presented dynamically to build the necessary skills that a user requires for success in the business endeavor. The system utilizes an artificial intelligence engine driving individualized and dynamic feedback with synchronized video and graphics used to simulate real-world environment and interactions. Multiple u201ccorrectu201d answers are integrated into the learning system to allow individualized learning experiences in which navigation through the system is at a pace controlled by the learner. A robust business model provides support for realistic activities and allows a user to experience real world consequences for their actions and decisions and a tutorial system analyzes student inputs to determine appropriate feedback to teach new skills.",
	"url": null,
	"owner": "Accenture, LLP",
	"publication_number": "07065513",
	"publication_date": "2006-06-20",
	"application_number": "09868713",
	"application_date": "1999-02-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for musical sonification of data parameters in a data stream",
	"summary": "",
	"abstract": "One embodiment of a musical sonification system and method receives a data stream including different data parameters. The sonification system may apply different sonification processes to the different data parameters to produce a musical rendering of the data stream. In one embodiment, the sonification system and method maps data parameters related to options trades to pitch values corresponding to musical notes in an equal tempered scale.",
	"url": null,
	"owner": "Accentus, LLC",
	"publication_number": "07135635",
	"publication_date": "2006-11-14",
	"application_number": "11101185",
	"application_date": "2005-04-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Security token sharable data and synchronization cache",
	"summary": "",
	"abstract": "This invention provides a system and method for implementing a middleware caching arrangement to minimize device contention, network performance and synchronization issues associated with enterprise security token usage. The invention comprises a token API mapped to a cache API. Logic associated with the token API preferentially retrieves information from a memory cache managed by the cache API. Mechanisms are included to periodically purge the memory cache of unused information.",
	"url": null,
	"owner": "Activcard",
	"publication_number": "07032067",
	"publication_date": "2006-04-18",
	"application_number": "10320678",
	"application_date": "2002-12-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Semantic user interface",
	"summary": "",
	"abstract": "A system and method that allows a user to use their everyday language or user defined words to operate the computer in a highly efficient way. In short, every word, letter, control character and symbols is potentially actionable. A computer user's productivity is dramatically increased by making available those functions that enable a user to produce most of his work through simple, language-based commands. The present invention provides an intuitive interface, referred to as a semantic user interface (SUI), that enhances the operation of the current standard window-based interface in a manner that is simple, richer and natural. By leveraging all of the richness and power inherent in a user's language, the present invention provides an important tool that allows the personal computer to operate in a manner that is much closer to our natural way of interacting. A user is allowed to enter u201ccommandsu201d in his everyday natural language in order to control the operations of the computer. All commands are language-based and user-defined. These commands can be entered from any context of the user's computer (e.g., any application or operating system workspace). The commands allows a user to launch applications and navigate within applications by using language rather than clicks from a pointing device such as a mouse. It also allows the replacement of keystrokes with stored words or keystrokes. The system keeps a complete archive record of all the text content the user provides as input, regardless of which application program or operating system window the user is operating in at the time. The combined set of all user defined commands and the memory of all the input text that is stored in the archive constitutes the personality profile and is transportable from one computer to another.",
	"url": null,
	"owner": "ActiveWord Systems, Inc.",
	"publication_number": "RE039090",
	"publication_date": "2006-05-02",
	"application_number": "09983981",
	"application_date": "2001-10-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for leveraging independent innovation in entertainment content and graphics hardware",
	"summary": "",
	"abstract": "A method for supporting development of content independent of a run time platform is provided. A method includes storing processing blocks and storing an application graph that expresses the identity of the stored processing blocks and data connectivity therebetween. The application graph can be traversed by a graphical application platform at run time to execute appropriate blocks. A game development and run time system includes a graphical application platform that enables a game application to run on any of multiple hardware platforms. The graphical application platform has an application real time kernel, a plurality of standard features implemented as executable blocks of logic, and connections between blocks that implement data flow between the blocks. Capabilities of the game application and any of the hardware platforms can be implemented modularly by adding additional corresponding blocks and connections.",
	"url": null,
	"owner": "Activision Publishing, Inc.",
	"publication_number": "07103873",
	"publication_date": "2006-09-05",
	"application_number": "09779453",
	"application_date": "2001-02-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Technique for encapsulating a query definition",
	"summary": "",
	"abstract": "A method and system for querying data sources. The query system provides a query definition for defining queries in a uniform manner. The query definition includes a query specification, a data source identifier, and optionally, one or more results transforms. The query definition may be stored as a data structure on computer-readable media, such as a CD-ROM. The query specification includes query text and parameters. The query text specifies the query expression that is to be applied to the identified data source to generate the results. The parameters specify portions of the query text that can be changed by a user before a query is executed.",
	"url": null,
	"owner": "Actuate Corporation",
	"publication_number": "07152062",
	"publication_date": "2006-12-19",
	"application_number": "09718228",
	"application_date": "2000-11-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Centralized console API testing architecture",
	"summary": "",
	"abstract": "A method for API testing is provided that includes attaching a top level header to an API request from a console where the top level header facilitates processing of the API request by a host driver. The method also includes forwarding the API request with the top level header to the host driver and receiving an API response from the host driver where the API response includes the top level header. The method also includes removing the top level header from the API response so the console can process the API response.",
	"url": null,
	"owner": "Adaptec, Inc.",
	"publication_number": "07016800",
	"publication_date": "2006-03-21",
	"application_number": "10738312",
	"application_date": "2003-12-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "File system metadata describing server directory information",
	"summary": "",
	"abstract": "A computer network file system is described. The computer network file system includes first metadata, which is managed primarily by a first file server that is operably connected to a network fabric. The first metadata includes first file location information, and the first file location information includes at least one server id. The computer network file system also includes second metadata, which is managed primarily by a second file server that is operably connected to a network fabric. The second metadata includes second file location information, and the second file location information includes at least one server id. The first metadata and the second metadata are configured to allow a requester to locate files that are stored by the first file server and files that are stored by the second file server in a directory structure that spans the first file server and the second file server.",
	"url": null,
	"owner": "Adaptec, Inc.",
	"publication_number": "07054927",
	"publication_date": "2006-05-30",
	"application_number": "10060920",
	"application_date": "2002-01-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Replacing file system processors by hot swapping",
	"summary": "",
	"abstract": "A system and method for replacing file system processors, also known as hot swapping, is described. The system and method operate on a fault-tolerant network file system that includes a first file server that is operably connected to a network fabric and a second file server that is operably connected to the network fabric. The fault-tolerant network file system includes a first disk array that is operably coupled to the first file server and to the second file server and a second disk array that is operably coupled to the first file server and to the second file server. First file system information is loaded on the first file server. The first file system information includes a first intent log of proposed changes to first metadata. Second file system information is loaded on the second file server. The second file system information includes a second intent log of proposed changes to second metadata. The first file server has a copy of the second metadata, and the second file server maintains a copy of the first metadata, thereby allowing the first file server to access files on the second disk array in the event of a failure of the second file server.",
	"url": null,
	"owner": "Adaptec, Inc.",
	"publication_number": "06990547",
	"publication_date": "2006-01-24",
	"application_number": "10060908",
	"application_date": "2002-01-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Server-independent object positioning for load balancing drives and servers",
	"summary": "",
	"abstract": "A file system that balances the loading of filers and the capacity of drives that are associated with the filers is described. The file system includes a first disk drive that includes a first unused capacity and a second disk drive that includes a second unused capacity, wherein the second unused capacity is smaller than the first unused capacity. The file system further includes a first filer that is configured to fill requests from clients through access to at least the first disk drive. The file system further includes a second filer that is configured to fill requests from clients through access to at least the second disk drive. The second filer is configured to select an infrequently accessed file from the second disk drive and to push the infrequently accessed files to the first disk drive, thereby improving a balance of unused capacity between the first and second disk drives without substantially affecting a loading for each of the first and second filers.",
	"url": null,
	"owner": "Adaptec, Inc.",
	"publication_number": "06990667",
	"publication_date": "2006-01-24",
	"application_number": "10060918",
	"application_date": "2002-01-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer generation of documents using layout elements and content elements",
	"summary": "",
	"abstract": "Bindings are used to describe a document (and a different document) by associating content elements with layout elements, the layout elements defining layout features or placement information to be applied to the associated content elements in the document, the bindings being stored separately from both the content and layout elements.",
	"url": null,
	"owner": "Adobe Systems Incorporated",
	"publication_number": "07039863",
	"publication_date": "2006-05-02",
	"application_number": "09360399",
	"application_date": "1999-07-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Extensible help facility for a computer software application",
	"summary": "",
	"abstract": "An extensible help facility for a computer software application may include a graphical user interface for communicating with a user, help files arranged in a hierarchical file structure, and software processes configured to perform operations such as (i) enabling a user to generate or modify help files that specify content to be displayed and include an interactive link that, when activated, performs an operation in the application associated with the specified content, (ii) causing the help facility, while executing, to access the generated help files upon detecting that the help files exist in a predetermined location within the hierarchical file structure, and/or (iii) causing the help facility to detect a state of the computer software application and to selectively cause an operation corresponding to an interactive link to be performed by the computer software application based on the detected state.",
	"url": null,
	"owner": "Adobe Systems Incorporated",
	"publication_number": "07024658",
	"publication_date": "2006-04-04",
	"application_number": "09966806",
	"application_date": "2001-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Merging images to form a panoramic image",
	"summary": "",
	"abstract": "Methods, and apparatus implementing methods, including computer program products, for merging images of segments of a view. Methods include: receiving, from a network, a first image representing a first segment of the view and a second image representing a second segment of the view; determining the position of the second segment of the view relative to the first segment of the view; blending the first image with the second image based on the determined position of the second segment relative to the first segment to form a panoramic image of the view; and transmitting the panoramic image over the network.",
	"url": null,
	"owner": "Adobe Systems Incorporated",
	"publication_number": "07095905",
	"publication_date": "2006-08-22",
	"application_number": "09657949",
	"application_date": "2000-09-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "External locking mechanism for personal computer memory locations",
	"summary": "",
	"abstract": "A method and system for providing an external locking mechanism for memory locations. The memory includes a first plurality of storage locations configured with BIOS data and a second plurality of storage locations. The second plurality of storage locations includes a first plurality of blocks readable only in SMM and a second plurality of blocks readable in SMM and at least one operating mode other than SMM. The computer system includes a bus, a memory coupled to the bus, and a device coupled to access the memory over the bus. The memory includes a plurality of storage locations, divided into a plurality of memory units. The device includes one or more locks configured to control access to one or more of the plurality of memory units.",
	"url": null,
	"owner": "Advanced Micro Devices, Inc.",
	"publication_number": "07149854",
	"publication_date": "2006-12-12",
	"application_number": "09870889",
	"application_date": "2001-05-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Locking mechanism override and disable for personal computer ROM access protection",
	"summary": "",
	"abstract": "A method and system for overriding access locks on secure assets in a computer system. The system includes a processor and a device coupled to the processor. The device includes one or more sub-devices, one or more access locks, and an access lock override register that stores one or more access lock override bits, including a lock override bit. The one or more access locks are configured to prevent access to the one or more sub-devices when the one or more access locks are engaged. Access to the one or more sub-devices is not allowed when the lock override bit is set. The method includes requesting a memory transaction for one or more memory addresses and determining a lock status for the one or more memory addresses. The method also includes returning the lock status for the one or more memory addresses. The method may determine if the lock status for the one or more memory address can be changed. The method may change the lock status of the one or more memory addresses to allow the memory transaction.",
	"url": null,
	"owner": "Advanced Micro Devices, Inc.",
	"publication_number": "07003676",
	"publication_date": "2006-02-21",
	"application_number": "09871084",
	"application_date": "2001-05-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Resource sequester mechanism",
	"summary": "",
	"abstract": "A method and system for controlling access to selected resources in a computer system. The system includes a processor and a device coupled to the processor. The device includes one or more sub-devices and one or more access locks. The access locks are configured to prevent access to the sub-devices when the access locks are engaged. The device may include a bridge. The sub-devices may include a duration timer, mailbox RAM, locks for a storage device, overrides for the locks for the storage device, a TCO counter, a monotonic counter, scratchpad RAM, and/or a random number generator. The method includes unlocking security hardware and accessing a first device. The method also includes locking the security hardware and calling an SMM exit routine.",
	"url": null,
	"owner": "Advanced Micro Devices, Inc.",
	"publication_number": "07043581",
	"publication_date": "2006-05-09",
	"application_number": "09853446",
	"application_date": "2001-05-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure booting of a personal computer system",
	"summary": "",
	"abstract": "Methods for securing booting a personal computer system. One method includes establishing a secret between two or more devices and securing the secret in each of the two or more devices. Another method includes processing BIOS code instructions and accessing security hardware. The method also includes accessing a first device, locking the security hardware, and calling boot code. Another method includes reading a secret from a first location, storing the secret in a secure location different from the first location, and locking the first location. Another method includes requesting authentication for a device, receiving authentication for the device, and setting a timer associated with the device. Another method includes requesting authentication for a device, failing authentication for the device, and preventing access to the device upon failing authentication for the device.",
	"url": null,
	"owner": "Advanced Micro Devices, Inc.",
	"publication_number": "07007300",
	"publication_date": "2006-02-28",
	"application_number": "09870890",
	"application_date": "2001-05-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure execution box",
	"summary": "",
	"abstract": "A system and method for secure computing. The system includes a processor, one or more secured assets coupled to the processor, and security hardware. The processor is configured to operate in various operating modes, including a secure operating mode. The security hardware is configured to control access to the secured assets dependant upon the operating mode of the processor. The security hardware is configured to allow access to the secure assets in the secure operating mode, preferably only in the secure operating mode. The method includes switching the computer system between operating modes, while allowing or restricting access to the secured assets based on the operating modes. The second operating mode comprises a secure operating mode. The method restricts access to the secured assets in the first operating mode and permits access to the secured assets in the secure operating mode.",
	"url": null,
	"owner": "Advanced Micro Devices, Inc.",
	"publication_number": "07065654",
	"publication_date": "2006-06-20",
	"application_number": "09852372",
	"application_date": "2001-05-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System architecture for high speed ray tracing",
	"summary": "",
	"abstract": "A system and method for generating images of three-dimensional objects. The system includes one or more tracing processors, and one or more shading processors. Each of the tracing processors may be configured to (a) perform a first set of computations on a corresponding group of primary rays emanating from a viewpoint resulting in a ray tree and a set of one or more light trees for each primary ray of the corresponding group, (b) transfer the ray trees and associated light trees to one of the shading processors, and (c) repeat (a) and (b). Each of the shading processors may be configured to (d) receive ray trees and associated light trees from one of the tracing processors, (e) perform a second set of computations on the received ray trees and associated light trees to determine pixel color values, and (f) repeat (d) and (e) a plurality of times.",
	"url": null,
	"owner": "Advanced Micro Devices, Inc.",
	"publication_number": "07012604",
	"publication_date": "2006-03-14",
	"application_number": "10242199",
	"application_date": "2002-09-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Efficient use of user-defined shaders to implement graphics operations",
	"summary": "",
	"abstract": "User-defined shaders are constructed from fragments. The shaders are identified by tags. At run-time, the tag is used to determine whether the user-defined shader has been previously compiled. If it has, the compiled version is executed. If it has not, the fragments are assembled to form the shader and the shader is run-time compiled. The compiled shader can be stored for subsequent reuse, with the tag serving as an index to the compiled version.",
	"url": null,
	"owner": "Aechelon Technology, Inc.",
	"publication_number": "07015909",
	"publication_date": "2006-03-21",
	"application_number": "10102592",
	"application_date": "2002-03-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and accompanying methods for providing, through a centralized server site, a secure, cost-effective, web-enabled, integrated virtual office environment remotely accessible through a network-connected web browser",
	"summary": "",
	"abstract": "Apparatus and accompanying methods for use therein for implementing an integrated, virtual office user environment, through an office server(s), through which a remotely stationed user can access typical office network-based applications, including e-mail, file sharing and hosted thin-client programs, through a remotely located network, e.g., WAN, connected web browser. Specifically, a front end, namely a service enablement platform (SEP), to one or more office servers on a LAN is connected to both the WAN and LAN and acts both as a bridge between the user and his(her) office applications and as a protocol translator to enable bi-directional, web-based, real-time communication to occur between the browser and each such application. The SEP translates user input originating from the browser into application-specific protocols and applies a result to a corresponding office application server.",
	"url": null,
	"owner": "AEP Networks, Inc.",
	"publication_number": "07111060",
	"publication_date": "2006-09-19",
	"application_number": "09808404",
	"application_date": "2001-03-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer software for automated annotation of biological sequences",
	"summary": "",
	"abstract": "Methods, software products and systems are provided for automated high throughout gene characterization. In one exemplary embodiment, HMM models are used to characterize genes. Biological sequences are classified according to their hit with different HMM models using a curve analysis.",
	"url": null,
	"owner": "Affymetrix, Inc.",
	"publication_number": "07133780",
	"publication_date": "2006-11-07",
	"application_number": "09683264",
	"application_date": "2001-12-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "On/off keying node-to-node messaging transceiver network with dynamic routing and configuring",
	"summary": "",
	"abstract": "The invention is a system operating on a reference frequency. The system comprises a plurality of at least three nodes. Each node hands off a message received from another node to a subsequent node. Each of the nodes comprises a transceiver receiving a message on the reference frequency from another node and transmitting the received message on the reference frequency to a subsequent node, and a controller controlling operation of the transceiver to receive the.. message transmitted by another node and to transmit the received message to a subsequent node.",
	"url": null,
	"owner": "AFX Technology Group International, Inc.",
	"publication_number": "07027773",
	"publication_date": "2006-04-11",
	"application_number": "09578237",
	"application_date": "2000-05-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and program solving LCPs for rigid body dynamics",
	"summary": "",
	"abstract": "A projected iterative descent method is used to resolve LCPs related to rigid body dynamics, such that animation of the rigid body dynamics on a display system occur in real-time.",
	"url": null,
	"owner": "AGEIA Technologies, Inc.",
	"publication_number": "07079145",
	"publication_date": "2006-07-18",
	"application_number": "10793899",
	"application_date": "2004-03-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus, product, and method of trapping using a distance buffer",
	"summary": "",
	"abstract": "A method, apparatus, and product to generate trap areas. One embodiment is a method for generating a trap pixel of a trap area surrounding one or more trapping edges of an image that includes, for each trapping edge in the image, and for each pixel within a predefined area around the trapping edge, comparing the distance of the pixel from the trapping edge according to a distance measure with a provided measure indicative of the distance of the pixel from any edge of the image to determine if said each pixel is closer to the trapping edge than to another edge. The method further includes, if said pixel is closer to said edge than to any edge, setting the pixel as a trap pixel of the trap area, including setting a trap color for the trap pixel.",
	"url": null,
	"owner": "Agfa-Bevaert N.V.",
	"publication_number": "06992798",
	"publication_date": "2006-01-31",
	"application_number": "09800428",
	"application_date": "2001-03-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Biotechnology information naming system",
	"summary": "",
	"abstract": "Systems and methods for performing programmatic queries about molecular and biomolecule information. The methods comprise creating one or more databases of molecular data formatted or conditioned according to a directory service protocol, forming, by a user, a query based on a molecular identifier or other molecular indicia, submitting the query to a name server, performing a lookup in the databases based on the molecular name or identifier, retrieving a query result or results from the databases, and returning the query results to the user. The systems comprise at least one client computer, at least one name server operatively coupled to the client computer, at least one database operatively coupled to the name server and containing data formatted or conditioned according to a directory service protocol, at least one client application configured to generate queries based on molecular identifiers and receive results based the queries, and a directory service associated with the name server configured perform lookups in the database based on the query and retrieve results responsive to the query.",
	"url": null,
	"owner": "Agilent Technologies, Inc.",
	"publication_number": "07155453",
	"publication_date": "2006-12-26",
	"application_number": "10154529",
	"application_date": "2002-05-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Control and communication infrastructure (CCI) for selecting a transport mechanism to transport data to one or more servers in a content delivery network based on the size of the data, together with frequency and loss tolerance with respect to transport of the data",
	"summary": "",
	"abstract": "A control and communication infrastructure (CCI) for use in a wide area network wherein a plurality of interconnected machines operate a plurality of different applications having varying data transport requirements. Machines within a wide area distributed network agree on a namespace of data objects so that all machines use the same name for a particular data object. Then, machines communicate with one another by publishing and subscribing to data objects in the namespace. The infrastructure selects an optimal transport mechanism from a set of available transport mechanisms based on the data being moved and its frequency and loss tolerance, and then hides the details of how the data is moved from the application using the infrastructure.",
	"url": null,
	"owner": "Akamai Technologies, Inc.",
	"publication_number": "07149807",
	"publication_date": "2006-12-12",
	"application_number": "10061983",
	"application_date": "2002-02-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Extending an Internet content delivery network into an enterprise",
	"summary": "",
	"abstract": "An Internet content delivery network deploys one or more CDN server regions in an enterprise and manages those regions as part of the Internet CDN. In one aspect of the invention, a CDN service provider (CDNSP) deploys one or more CDN regions behind an enterprise's corporate firewall(s). The regions are used to deliver Internet contentu2014content that has been tagged or otherwise made available for delivery over the Internet from the CDN's content servers. This content includes, for example, content that given content providers have identified is to be delivered by the CDN. In addition, the enterprise may tag intranet content, which is then also served from the CDN regions behind the firewall. Intranet content remains secure by virtue of using the enterprise's existing security infrastructure. In accordance with another aspect of the invention, the CDNSP implements access controls and deploys one or more CDN regions outside an enterprise's firewall(s) such that intranet content can be served from regions located outside the firewall(s). In this embodiment, the CDNSP can provide granular control, such as permissions per groups of users. In this way, the CDNSP, in effect, extends a conventional virtual private network (VPN) to all or a portion of the ICDN, thereby enabling the CDNSP to use multiple regions and potentially thousands of content servers available to serve the enterprise's internal content. In addition to making internal content available from the edge of the network, the CDNSP provides a mechanism by which an enterprise may share secure data with its business partner(s) without setting up any special infrastructure.",
	"url": null,
	"owner": "Akamai Technologies, Inc.",
	"publication_number": "07096266",
	"publication_date": "2006-08-22",
	"application_number": "10041031",
	"application_date": "2002-01-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Java application framework for use in a content delivery network (CDN)",
	"summary": "",
	"abstract": "An application deployment model for enterprise applications to enable such applications to be deployed to and executed from a globally distributed computing platform, such as an Internet content delivery network (CDN). According to the invention, application developers separate their Web application into two layers: a highly distributed edge layer and a centralized origin layer. In a representative embodiment, the edge layer supports a servlet container that executes a Web tier, typically the presentation layer of a given Java-based application. Where necessary, the edge layer communicates with code running on an origin server to respond to a given request. In an alternative embodiment, the edge layer supports a more fully-provisioned application server that executes both Web tier (e.g., presentation) and Enterprise tier application (e.g., business logic) components. In either case, the inventive framework enables one or more different applications to be deployed to and executed from the edge server on behalf of one or more respective entities.",
	"url": null,
	"owner": "Akamai Technologies, Inc.",
	"publication_number": "07127713",
	"publication_date": "2006-10-24",
	"application_number": "10340206",
	"application_date": "2003-01-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for measuring stream availability, quality and performance",
	"summary": "",
	"abstract": "A streaming measurement agent designed to experience, measure, and report on a media stream as an actual end user would experience the stream. Preferably, agent resides transparently within a streaming media player itself so that it can monitor stream packet flows within the player as the measured streams are being played. In an illustrative embodiment, the agent comprises a performance monitoring module (PMM), which is software that resides in an interface between an existing core module and a renderer of a media player. The agent PMM intercepts each useful packet as it goes from the core to the renderer and, as a result, it is able to compute quality metrics about the playback. The agent functions u201ctransparentlyu201d to the media player by presenting the core with an application programming interface (API) that emulates the API that the renderer normally presents to the core. Thus, when the core believes it is calling the renderer, it is actually calling the agent PMM, which can then receive all the packets from the core and process them. After computing relevant performance metrics using the packets it receives, the agent PMM calls the renderer. A set of performance agents can be managed by a service provider to enable a content provider to determine how a stream is perceived by end users.",
	"url": null,
	"owner": "Akamai Technologies, Inc.",
	"publication_number": "07010598",
	"publication_date": "2006-03-07",
	"application_number": "10364753",
	"application_date": "2003-02-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for tiered distribution in a content delivery network",
	"summary": "",
	"abstract": "A tiered distribution service is provided in a content delivery network (CDN) having a set of surrogate origin (namely, u201cedgeu201d) servers organized into regions and that provide content delivery on behalf of participating content providers, wherein a given content provider operates an origin server. According to the invention, a cache hierarchy is established in the CDN comprising a given edge server region and either (a) a single parent region, or (b) a subset of the edge server regions. In response to a determination that a given object request cannot be serviced in the given edge region, instead of contacting the origin server, the request is provided to either the single parent region or to a given one of the subset of edge server regions for handling, preferably as a function of metadata associated with the given object request. The given object request is then serviced, if possible, by a given CDN server in either the single parent region or the given subset region. The original request is only forwarded on to the origin server if the request cannot be serviced by an intermediate node.",
	"url": null,
	"owner": "Akamai Technologies, Inc.",
	"publication_number": "07133905",
	"publication_date": "2006-11-07",
	"application_number": "10118989",
	"application_date": "2002-04-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data communication apparatus for computer intelligent network interface card which transfers data between a network and a storage device according designated uniform datagram protocol socket",
	"summary": "",
	"abstract": "An interface device is connected to a host by an I/O bus and provides hardware and processing mechanisms for accelerating data transfers between a network and a storage unit, while controlling the data transfers by the host. The interface device includes hardware circuitry for processing network packet headers, and can use a dedicated fast-path for data transfer between the network and the storage unit, the fast-path set up by the host. The host CPU and protocol stack avoids protocol processing for data transfer over the fast-path, freeing host bus bandwidth, and the data need not cross the I/O bus, freeing I/O bus bandwidth. Realtime audio and video communication can also be provided when the interface device is coupled by an audio/video interface to appropriate communication devices, such as microphone, a speaker, a camera and/or a display.",
	"url": null,
	"owner": "Alacritech, Inc.",
	"publication_number": "07076568",
	"publication_date": "2006-07-11",
	"application_number": "09802551",
	"application_date": "2001-03-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network interface device that fast-path processes solicited session layer read commands",
	"summary": "",
	"abstract": "A network interface device connected to a host provides hardware and processing mechanisms for accelerating data transfers between the host and a network. Some data transfers are processed using a dedicated fast-path whereby the protocol stack of the host performs no network layer or transport layer processing. Other data transfers are, however, handled in a slow-path by the host protocol stack. In one embodiment, the host protocol stack has an ISCSI layer, but a response to a solicited ISCSI read request command is nevertheless processed by the network interface device in fast-path. In another embodiment, an initial portion of a response to a solicited command is handled using the dedicated fast-path and then after an error condidtion occurs a subsequent portion of the response is handled using the the slow-path. The interface device uses a command status message to communicate status to the host.",
	"url": null,
	"owner": "Alacritech, Inc.",
	"publication_number": "07124205",
	"publication_date": "2006-10-17",
	"application_number": "09970124",
	"application_date": "2001-10-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Architecture for transporting PBX signaling codes via SIP",
	"summary": "",
	"abstract": "An integrated PBX and SIP telephony communications network supporting transmission of private signaling codes over SIP. A telephone emits a private signaling code for accessing a particular PBX function. An enhanced IP translator coupled to the telephone encapsulates the private signaling code within a SIP invite, request, response, information, notification message, and/or instant message. The SIP message with the encapsulated private signaling codes is transmitted over a communications network to a PBX. The PBX is also coupled to an enhanced IP translator that receives the SIP message and decapsulates the embedded private signaling codes. The codes are transmitted to the PBX for rendering a function for the telephone. A SIP user agent aware of the private signaling codes may also access functions provided by the PBX by encapsulating/decapsulating private signaling codes into/from SIP messages.",
	"url": null,
	"owner": "Alcatel",
	"publication_number": "07002912",
	"publication_date": "2006-02-21",
	"application_number": "10074340",
	"application_date": "2002-02-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data management framework for policy management",
	"summary": "",
	"abstract": "A data management framework for a data communications network. The framework includes a dynamically constructed model of elements of the data communications network. The elements are represented as object instances that are self-descriptive. The model provides a uniform application programming interface that allows a client to dynamically access the elements and dynamically add new elements in performing network management functions. The data management framework may be used for policy management.",
	"url": null,
	"owner": "Alcatel",
	"publication_number": "07028307",
	"publication_date": "2006-04-11",
	"application_number": "10003904",
	"application_date": "2001-11-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Error codes in Agent X",
	"summary": "",
	"abstract": "The solution involves placing additional information in the AgentX error status field. In a preferred embodiment, the Agent X error status field is a 32-bit field. The lower 5 bits are reserved for the SNMP-defined error codes which are very general in nature and, therefore, communicate limited information. Additional error information or specific error codes are placed in the upper 27 bits. As a result, thousands of very specific error codes can be communicated by the AgentX packet to the human operator, thereby allowing the operator to know exactly what is wrong. In another preferred embodiment, the internally defined error code is a 16-bit numberu2014the lower 5 bits are reserved for SNMP-defined error codes and the next 11 bits are used to store an internal portion of the additional error information. In another preferred embodiment, the error status field can be divided into 3 sections. The top 5 bits identify the group of error codes (groups are assigned to teams or to software modules). The middle 6 bits identify a unique code within that range. The lowest 5 bits are reserved for the SNMP error code.",
	"url": null,
	"owner": "Alcatel",
	"publication_number": "07120833",
	"publication_date": "2006-10-10",
	"application_number": "10132224",
	"application_date": "2002-04-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interface means between a network switch and a CTI server means and apparatus for providing a service to a customer including such an interface means",
	"summary": "",
	"abstract": "An interface means between a network switch and a CTI server means is adapted to communicate between a service switching function device having a service switching functionality within said network switch and said CTI server means. Such an interface means is as well part of an apparatus for providing a service to at least one customer. This apparatus includes a network switch, of which a service switching function device is coupled via an interface means of the present invention to a CTI server means, which is further coupled via an application programming interface to executable means for executing the service.",
	"url": null,
	"owner": "Alcatel",
	"publication_number": "07110521",
	"publication_date": "2006-09-19",
	"application_number": "10895316",
	"application_date": "2004-07-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of managing information in Java",
	"summary": "",
	"abstract": "A method of managing information in a distributed system context including a local system and a remote system and using a remote invocation method of the JAVA language, said language including instructions and enabling creation of objects from classes having hierarchical relations between them, which method includes defining in the local system classes replicating a hierarchy of classes of the remote system and including means of access to said classes of the remote system in order to enable use in the local system of instructions specific to classes defined in the remote system.",
	"url": null,
	"owner": "Alcatel",
	"publication_number": "07131109",
	"publication_date": "2006-10-31",
	"application_number": "09888449",
	"application_date": "2001-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network element terminal data interface system and method",
	"summary": "",
	"abstract": "A NETWORK ELEMENT TERMINAL DATA INTERFACE (NETDI) system and method incorporating a terminal user interface which permits manipulation of network elements using a hardware-specific control language is disclosed. The present invention teaches automatic generation of on-line help directly from I/O manual specifications and translation of operator commands into network element specific protocols via the use of a network element database and associated XML repository. Various preferred embodiments of the present invention incorporate the use of TL1 composer/parsers to permit the automatic generation of Translation Language 1 interfaces between an operator console and a wide variety of telecommunication network elements. The present invention operates over a wide variety of communication media and permits a significant reduction of software maintenance with respect to on-line help generation directly from I/O manual specifications as well as automated incorporation of new network element features into existing operator console environmental controls, resulting in a drastic reduction in the required network element control language proficiency of network operators in any given telecommunications environment.",
	"url": null,
	"owner": "Alcatel",
	"publication_number": "07127527",
	"publication_date": "2006-10-24",
	"application_number": "10028076",
	"application_date": "2001-12-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Remote monitoring method and system",
	"summary": "",
	"abstract": "The present invention relates to a remote monitoring method comprises the steps ofnn",
	"url": null,
	"owner": "Alcatel",
	"publication_number": "07129848",
	"publication_date": "2006-10-31",
	"application_number": "10791887",
	"application_date": "2004-03-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and arrangement to secure access to a communications network",
	"summary": "",
	"abstract": "The present invention relates to a method and an arrangement in a data communications system in Internet Protocol (IP) environments. The object of the invention is to achieve a simple way of remote and secure access of a computer to a private data communications network. The solution according to the invention is a Remote Access Login system profiled for accessing the private data communications network via a so-called Pseudo-Connectionless Technology (PCT) device.",
	"url": null,
	"owner": "Alice Systems AB",
	"publication_number": "07152160",
	"publication_date": "2006-12-19",
	"application_number": "10312333",
	"application_date": "2001-06-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multiple parallel processor computer graphics system",
	"summary": "",
	"abstract": "An accelerated graphics processing subsystem that significantly increases the processing speed of computer graphics commands. The preferred embodiment of this invention presents a first-of-its-kind graphics processing subsystem that combines the processing power of multiple, off-the-shelf, video cards, each one having one or more graphic processor units. The video cards can be used without substantial modification. Under the preferred embodiment, each video card processes instructions for drawing a predetermined portion of the screen which is displayed to the user through a monitor or other visual output device. The invention harnesses the power of multiple video cards without suffering from the high bandwidth constraints affecting prior attempts at parallel graphics processing subsystems.",
	"url": null,
	"owner": "Alienware Labs Corp.",
	"publication_number": "07119808",
	"publication_date": "2006-10-10",
	"application_number": "10620150",
	"application_date": "2003-07-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Digital media resource messaging",
	"summary": "",
	"abstract": "A digital media resource messaging system provides a convenient digital media resource viewing, managing, organizing, and editing platform that facilitates enhanced resource exchange by storing and forwarding digital media resources via a server between multiple resource-sharing partners designated by the user. In one embodiment, the digital media resource messaging system includes services to view, manage, organize, edit, and exchange digital images and video sequences.",
	"url": null,
	"owner": "Amazon Technologies, Inc.",
	"publication_number": "07080124",
	"publication_date": "2006-07-18",
	"application_number": "10028219",
	"application_date": "2001-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Category searching",
	"summary": "",
	"abstract": "Performing a category search to identify categories of web sites that relate to a search term includes receiving at least one search term that then is compared with a hierarchy of category identifiers, and with terms related to one or more categories, to determine whether matches exist. A category identifier is selected based on the matches that are determined to exist within the hierarchy and the terms, and at least the category identifier is displayed. Performing a search to identify web sites and categories of web sites that relate to a search term also may include receiving at least one search term that then is compared with a list of recommended web sites, previously performed searches, a hierarchy of category identifiers, and terms related to one or more categories to determine whether matches exist. Results based on matches that are determined to exist are displayed.",
	"url": null,
	"owner": "America Online, Inc.",
	"publication_number": "07007008",
	"publication_date": "2006-02-28",
	"application_number": "09749639",
	"application_date": "2000-12-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Displaying content from multiple servers",
	"summary": "",
	"abstract": "A request is sent for a web page and the web page is received from a first server. The web page is displayed by a browser. An identification of the web page is sent to a second server. Content is received from the second server. The content is selected by the second server based on the identification sent to the second server. A toolbar that includes a button is displayed, and the received content is displayed in response to a user selecting the button.",
	"url": null,
	"owner": "America Online, Inc.",
	"publication_number": "07058892",
	"publication_date": "2006-06-06",
	"application_number": "10079228",
	"application_date": "2002-02-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic information caching",
	"summary": "",
	"abstract": "Electronic information is made more readily available to one or more access requestors based on an anticipated demand for the electronic information using a process, system or computer software. For instance, electronic information stored on a first storage medium is identified for transport (e.g., in response to a request of at least one of the access requestors), and the electronic information is transported accordingly. Afterwards, a determination is made to store the electronic information on a second storage medium that is more accessible to the access requestors than the first storage medium. The determination is based on a size of the electronic information and an anticipated demand of the access requestors for the electronic information. The anticipated demand is determined based at least on information that is not particular to any single access requestor. The electronic information then is stored on the second storage medium and the access requestors are provided access to the electronic information from the second storage medium.",
	"url": null,
	"owner": "America Online, Inc.",
	"publication_number": "07039683",
	"publication_date": "2006-05-02",
	"application_number": "09750027",
	"application_date": "2000-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Overriding content ratings and restricting access to requested resources",
	"summary": "",
	"abstract": "A host system may include a content manager application or tool that may be used with a browser application, a content manager database, and a content manager server. The content manager may determine the classification (e.g., static or dynamic) and the content map rating (e.g., a content map) associated with any address (e.g., a URL) network information that is stored in a static resource classifiers. The content manager may be used by a system administrator to view and/or to override the static classifiers.",
	"url": null,
	"owner": "America Online, Inc.",
	"publication_number": "07089246",
	"publication_date": "2006-08-08",
	"application_number": "10158178",
	"application_date": "2002-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure data exchange between date processing systems",
	"summary": "",
	"abstract": "A data transfer method performed at a proxy server includes intercepting a data request from a client computer that is directed to a target server, encrypting profile information, augmenting the data request by adding the encrypted profile information to the data request, and sending the augmented data request to the target server. A data transfer method that is performed at an information server includes receiving a data request from a proxy server, extracting profile information added to the data request by the proxy server, using the extracted profile information to generate a response, and sending the response to the proxy server.",
	"url": null,
	"owner": "America Online, Inc.",
	"publication_number": "07146505",
	"publication_date": "2006-12-05",
	"application_number": "09323415",
	"application_date": "1999-06-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Throttling electronic communications from one or more senders",
	"summary": "",
	"abstract": "A number and/or frequency of electronic data communications received from a sender or group of senders during a period of time may be monitored (e.g., counted). When more than a threshold number of electronic communications are communicated by the sender during the period of time, an ability of the sender to communicate messages may be affected.",
	"url": null,
	"owner": "America Online, Inc.",
	"publication_number": "07032023",
	"publication_date": "2006-04-18",
	"application_number": "09876064",
	"application_date": "2001-06-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer architecture and process of patient generation, evolution and simulation for computer based testing system using bayesian networks as a scripting language",
	"summary": "",
	"abstract": "A method and system for patient generation and evolution for a computer-based testing system and/or expert system. One or more belief networks, which describe parallel health state networks are accessed by a user or a computer. A knowledge base, at least in part, is scripted from the one or more belief networks by the computer. A model patient at least in part, is instantiated by the computer from the scripted knowledge base. Optionally, the model patient is evolved by the computer in accordance with the parallel health state networks and responsive to a received course of action.",
	"url": null,
	"owner": "American Board of Family Practice, Inc.",
	"publication_number": "07107253",
	"publication_date": "2006-09-12",
	"application_number": "09521242",
	"application_date": "2000-04-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer architecture and process of patient generation, evolution, and simulation for computer based testing system using bayesian networks as a scripting language",
	"summary": "",
	"abstract": "A method and system for patient generation and evolution for a computer-based testing system and/or expert system. One or more belief networks, which describe parallel health state networks are accessed by a user or a computer. A knowledge base, at least in part, is scripted from the one or more belief networks by the computer. A model patient at least in part, is instantiated by the computer from the scripted knowledge base. Optionally, the model patient is evolved by the computer in accordance with the parallel health state networks and responsive to a received course of action.",
	"url": null,
	"owner": "American Board of Family Practice, Inc.",
	"publication_number": "07024399",
	"publication_date": "2006-04-04",
	"application_number": "10265599",
	"application_date": "2002-10-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for globalizing software",
	"summary": "",
	"abstract": "A method is proposed for processing software or Website code associated with a primary locale by an automatic, or semi-automatic, parsing process. The method separates the code into a file of international code which is not locale dependent, and a resource pack of items specific to the primary locale. The international code and the resource pack co-operate to perform the function of the original code. The resource pack can be converted for any number of other locales. Each converted resource pack together with the international code has the effect of the original code adapted for another locale.",
	"url": null,
	"owner": "American International Group, Inc.",
	"publication_number": "06983238",
	"publication_date": "2006-01-03",
	"application_number": "09778987",
	"application_date": "2001-02-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for configuring analog elements in a configurable hardware device",
	"summary": "",
	"abstract": "A system is provided for programming a configurable semiconductor device. The system includes a programmable controlling device, a programmable computing device, a communication link, a configurable hardware device, a design tool with first computer program code, and second computer program code. The configurable hardware device has memory with a plurality of memory locations and coupled with the programmable controlling device via the communication link. The design tool includes first computer program code embodied in a programmable computing device. The second computer program code is generated at least in part by the first computer program code and is embodied in the programmable controlling device for: a) applying configuration data to selected memory locations within the configurable hardware device to configure the configurable hardware device; b) determining a location of a subset of at least one of (i) the programmable memory locations in the configurable hardware device and (ii) the configuration data to be modified; and c) determining a new data value to be applied to the subset of at least one of (i) the memory locations in the configurable hardware device and (ii) the configuration data. The design tool provides at least one of configuration data, address data, and a data value algorithm usable in performing at least one of a), b), and c). A method is also provided.",
	"url": null,
	"owner": "Anadigm, Inc.",
	"publication_number": "07024654",
	"publication_date": "2006-04-04",
	"application_number": "10171334",
	"application_date": "2002-06-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Japanese virtual dictionary",
	"summary": "",
	"abstract": "Methods for converting a source character string to a target character string are described herein. In one aspect of the invention, an exemplary method includes receiving a first character string having the source character string, dividing the first character string into a plurality of sub-strings, converting the plurality of the sub-strings to second character strings through a dictionary, creating third character strings corresponding to the plurality of the sub-strings, analyzing the second and third character strings, constructing fourth character strings from the second and third character strings based on the analysis, creating a candidate list based on the fourth character strings, selecting the target character string from the candidate list and outputting the target character string. Other methods and apparatuses are also described.",
	"url": null,
	"owner": "Apple Computer, Inc.",
	"publication_number": "07136803",
	"publication_date": "2006-11-14",
	"application_number": "09965333",
	"application_date": "2001-09-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer integrated manufacturing techniques",
	"summary": "",
	"abstract": "The present invention provides a novel distributed factory system framework including a novel factory automation lifecycle () having lifecycle activities for SW developing and integrating (), installing and administrating (), factory modeling (), manufacturing planning (), manufacturing controlling, monitoring and tracking () and analyzing of manufacturing results (). The factory lifecycle comprises framework components. The distributed factory system framework also includes application components and software building blocks. The framework components are adapted for managing the application components, while the application components are utilized to provide instructions for managing a process such as a wafer fab. The building blocks are adapted for forming or modifying framework and application components. The distributed factory system framework provides computer implemented methods for integrating processing systems and facilitates process and equipment changes.",
	"url": null,
	"owner": "Applied Materials, Inc.",
	"publication_number": "07069101",
	"publication_date": "2006-06-27",
	"application_number": "09363966",
	"application_date": "1999-07-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and medium for process control for the matching of tools, chambers and/or other semiconductor-related entities",
	"summary": "",
	"abstract": "The invention relates to a method, system and computer program useful for producing a product, such as a microelectronic device, for example in an assembly line, where the production facility includes parallel production of assembly lines of products on identically configured chambers, tools and/or modules. Control is provided between such chambers. Behaviors of a batch of wafers (or of each wafer) are collected as the first batch (or each wafer) is processed by one of the identically configured chambers in one assembly line to produce the microelectronic device. The information relating to the behavior is shared with a controller of another one (or more) of the identically configured chambers, process tools and/or modules, to provide an adjustment of the process tool and thereby to produce a second batch (or next wafer) which is substantially identical, within tolerance, to the first batch (or wafer).",
	"url": null,
	"owner": "Applied Materials, Inc.",
	"publication_number": "07082345",
	"publication_date": "2006-07-25",
	"application_number": "10172977",
	"application_date": "2002-06-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of detecting lost objects in a software system",
	"summary": "",
	"abstract": "The execution of program sections written in an object-oriented programming language is supervised. A program section is started, and a supervision object is created as an instance of a class. In a memory, information is stored to identify the created object for a time period. The program section is terminated, and the information stored in the memory is removed when the created object is completed and/or inactive. The memory is then scanned to identify information that has been stored in the memory longer than the time period, and if so, an alarm signal is triggered.",
	"url": null,
	"owner": "Appmind Software AB",
	"publication_number": "07017152",
	"publication_date": "2006-03-21",
	"application_number": "09827810",
	"application_date": "2001-04-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and computer program product for managing database servers and service",
	"summary": "",
	"abstract": "A system, method, and computer program product for managing database servers and services is disclosed, which expands the capabilities of existing systems by providing better scalability and security. A database management system includes databases consisting of database clients and servers that handle the storing of information, a multi-database client that manages database servers, service modules which allow other systems to access the database servers, and a database access manager that manages requests from the service modules. A database access manager facilitates and coordinates interaction between the service modules and the multi-database client. Service modules provide interfaces from which other external or internal systems can access the managed databases. Requests can be sent between systems and the database access manager via the service modules. Two present and representative implementations of service modules are: user management and call detail record (CDR) collection. The user management service module allows systems to access user account information stored in the databases. The CDR collection service module inserts details for each call made on the network.",
	"url": null,
	"owner": "Array Telecom Corporation",
	"publication_number": "07123608",
	"publication_date": "2006-10-17",
	"application_number": "09527915",
	"application_date": "2000-03-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "BRG with PBX capabilities",
	"summary": "",
	"abstract": "A residential private branch exchange (PBX) allowing IP telephones, analog telephones and computers to connect to an IP communication network. A broadband residential gateway (BRG) PBX provides residences with multiple phone lines capability and the implementation of complex calling features traditionally associated with complex and expensive business PBX systems. The BRG PBX provides an open architecture interface minimizing problems during installation and operation, minimizes interoperability problems across multi-vendor equipment platforms and may provide customers with an option to bypass the local telephone company's high cost infrastructure. The BRG PBX may also provide a range of services from basic calling with few features to highly sophisticated calling features servicing multiple phone lines to the residence. The BRG PBX may be configured to connect multiple BRG PBX systems together in a Local Area Network (LAN) or Wide Area Network (WAN) configuration. These network configurations may be implemented to connect neighborhoods or families across multiple geographic regions. In addition to having the capability of connecting to each other, the BRG PBXs may be connected to IP Central Stations forming an IP communication network.",
	"url": null,
	"owner": "AT&T Corp.",
	"publication_number": "07075918",
	"publication_date": "2006-07-11",
	"application_number": "09475165",
	"application_date": "1999-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Broadband cable telephony network architecture IP ITN network architecture reference model",
	"summary": "",
	"abstract": "The present invention provides a system and method for a reliable, low-cost, secure Internet Protocol (IP) based network that provides broadband-based voice communications as well as video and data communications. The IP network is arranged to function with the infrastructure of the Public Switched Telephone Network (PSTN), to control telephone calls in SStype networks and to provide the features, applications, and services of the typical SSnetworks in a voice over IP network. The present invention supports large effective call volumes, allows accommodation of a wide range of broadband-based service platforms, provides flexibility to support current and future calling feature services, and provides high quality voice transmission.",
	"url": null,
	"owner": "AT&T Corp.",
	"publication_number": "07120139",
	"publication_date": "2006-10-10",
	"application_number": "09475141",
	"application_date": "1999-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Control of optical connections in an optical network",
	"summary": "",
	"abstract": "A method for lightpath provisioning in a reconfigurable optical network that comprises the steps of naming each network addressable element in the reconfigurable optical network, determining current resources therein, determining current topology therein, requesting establishment of a lightpath, and allocating the lightpath. A system for lightpath provisioning in a reconfigurable optical network is also provided, comprising means for naming each network addressable element in the reconfigurable optical network, means for determining current topology in the reconfigurable optical network, means for determining current resources in the reconfigurable optical network, means for requesting establishment of a lightpath, means for allocating the lightpath and means for removing the lightpath upon completion.",
	"url": null,
	"owner": "AT&T Corp.",
	"publication_number": "07031299",
	"publication_date": "2006-04-18",
	"application_number": "09769780",
	"application_date": "2001-01-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Control of optical connections in an optical network",
	"summary": "",
	"abstract": "A method for lightpath restoration in a reconfigurable optical network comprises the steps of naming each network addressable element in said reconfigurable optical network, determining current topology in said reconfigurable optical network, determining current resources in said reconfigurable optical network, requesting establishment of a lightpath, requesting reservation of restoration capacity, allocating the lightpath, and reserving the restoration capacity. Also disclosed is a method for lightpath restoration that comprises the steps of reserving restoration capacity, detecting transmission failures in the reconfigurable optical network, handling exceptions as a result of transmission failures, and allocating transmission capacity.",
	"url": null,
	"owner": "AT&T Corp.",
	"publication_number": "07039009",
	"publication_date": "2006-05-02",
	"application_number": "09769735",
	"application_date": "2001-01-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for providing reliability and availability in a distributed component object model (DCOM) object oriented system",
	"summary": "",
	"abstract": "A method and system for improving reliability and availability in distributed computer applications. The method and system may be used in the context of primary-backup, failover recovery. The method involves software-fault tolerance using technique of structured storage; referral components; and wrappers. The method and system exploit the platform and operating system independence of component object models to allow the dynamic linkage of different component objects, the objects being resident on different inter-linked machines, based on the application requirements at any given point in time.",
	"url": null,
	"owner": "AT&T Corp.",
	"publication_number": "07082553",
	"publication_date": "2006-07-25",
	"application_number": "09137907",
	"application_date": "1998-08-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for handling errors related to IDCT data and method thereof",
	"summary": "",
	"abstract": "A system and method for handling errors is provided. Errors related to the processing and storage of inverse discrete cosine transform (IDCT) image data cause hardware to become stalled. Stalled hardware may result in multiple image frames being dropped or lost during video playback. To avoid the stalling of hardware, the hardware is used to analyze the data being processed. Data being stored may be analyzed to determine if any error-characteristics, such as overflow or underflow, are present in the storing of the data. The data is manipulated to avoid stalling due to the error-characteristics.",
	"url": null,
	"owner": "ATI Technologies, Inc.",
	"publication_number": "07035470",
	"publication_date": "2006-04-25",
	"application_number": "10022970",
	"application_date": "2001-12-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method, and apparatus for early culling",
	"summary": "",
	"abstract": "A method of graphics processing includes determining a non-depth conditional status and an occlusion status of a fragment. Such a method may be used in culling occluded fragments before expending resources such as processing cycles and memory bus usage. In one example, a scratchpad stores depth values of robust fragments and is used for occlusion testing. Graphics architectures, and methods that include use of representative Z values, are also disclosed.",
	"url": null,
	"owner": "ATI Technologies, Inc.",
	"publication_number": "06999076",
	"publication_date": "2006-02-14",
	"application_number": "10076350",
	"application_date": "2002-02-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Policy distribution point for setting up network-based services",
	"summary": "",
	"abstract": "A u201cpolicy distribution pointu201d (PDP) allows service drivers to be installed remotely and automatically without rebooting the PDP or otherwise interrupting existing network-based services. The exposure of sensitive configuration data to non-secure networks is minimized by placing PDPs close to the devices to be configured. Service drivers on the PDP can be reused to configure multiple devices of the same type. The PDP receives an u201cactivationu201d and uses a service driver on the PDP to translate the activation into u201cdevice-specific instructions.u201d The device-specific instructions are sent to a device and configure the device to set up the network-based service. One or more PDPs can be used to configure both computing device and networking devices to provide a single service.",
	"url": null,
	"owner": "Atreus Systems Corp.",
	"publication_number": "07134013",
	"publication_date": "2006-11-07",
	"application_number": "10223846",
	"application_date": "2002-08-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for evaluating a structured message store for message redundancy",
	"summary": "",
	"abstract": "A system and method for evaluating a structured message store for message redundancy is described. A header and a message body are extracted from each of a plurality of messages maintained in a structured message store. A substantially unique hash code is calculated over at least part of the header and over the message body of each message. The messages are grouped by the hash codes. One such message is identified as a unique message within each group. In a further embodiment, the messages are grouped by conversation thread. The message body for each message within each conversation thread group is compared. At least one such message within each conversation thread group is identified as a unique message.",
	"url": null,
	"owner": "Attenex Corporation",
	"publication_number": "07035876",
	"publication_date": "2006-04-25",
	"application_number": "10965564",
	"application_date": "2004-10-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for inspection using off-angle lighting",
	"summary": "",
	"abstract": "A system for inspecting components is provided. The system includes an axial lighting system that illuminates the component with axial lighting to allow one or more features of the component to be located, such as by causing protruding features to be brighter than the background and recessed features to be darker than the background. An off-axis lighting system illuminates the component with off-axis lighting in the absence of the axial lighting to allow the component to be inspected to locate one or more features, such as a bump contact.",
	"url": null,
	"owner": "August Technology Corp.",
	"publication_number": "07024031",
	"publication_date": "2006-04-04",
	"application_number": "10035592",
	"application_date": "2001-10-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatically populated display regions for discovered access points and stations in a user interface representing a wireless communication network deployed in a physical environment",
	"summary": "",
	"abstract": "A system for providing automatically populated display regions showing discovered access points and stations in a user interface representing a wireless communication network deployed in a physical environment. A generated user interface includes a first display region in which access point representations are displayed as corresponding access points are automatically discovered within the wireless network, and a second display region in which station representations are displayed as corresponding stations are automatically discovered within the wireless network. The first and second display regions are provided external to another display region, referred to as the u201cphysical spaceu201d display region, in which is shown a representation of the physical space in which the wireless network is deployed. As the access point and station representations appear in the first display region and second display region, the user can manipulate them, for example by drag and drop operations using a computer mouse, in order to place them appropriately in the physical space display region. In response, the disclosed system superimposes the access point and station representations over the physical space representation. The access point and station representations can subsequently be similarly repositioned by the user within the physical space representation.",
	"url": null,
	"owner": "Autocell Laboratories, Inc.",
	"publication_number": "07127275",
	"publication_date": "2006-10-24",
	"application_number": "11285514",
	"application_date": "2005-11-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatically populated display regions for discovered access points and stations in a user interface representing a wireless communication network deployed in a physical environment",
	"summary": "",
	"abstract": "A system for providing automatically populated display regions showing discovered access points and stations in a user interface representing a wireless communication network deployed in a physical environment. A generated user interface includes a first display region in which access point representations are displayed as corresponding access points are automatically discovered within the wireless network, and a second display region in which station representations are displayed as corresponding stations are automatically discovered within the wireless network. The first and second display regions are provided external to another display region, referred to as the u201cphysical spaceu201d display region, in which is shown a representation of the physical space in which the wireless network is deployed. As the access point and station representations appear in the first display region and second display region, the user can manipulate them, for example by drag and drop operations using a computer mouse, in order to place them appropriately in the physical space display region. In response, the disclosed system superimposes the access point and station representations over the physical space representation. The access point and station representations can subsequently be similarly repositioned by the user within the physical space representation.",
	"url": null,
	"owner": "Autocell Laboratories, Inc.",
	"publication_number": "07043277",
	"publication_date": "2006-05-09",
	"application_number": "10855669",
	"application_date": "2004-05-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for determining and representing one or more potential physical locations of a newly detected wireless network device",
	"summary": "",
	"abstract": "A previously unknown wireless device, which may be either an access point or a station, is detected by receipt of transmissions from that device at one or more access points that are currently operating within a managed wireless network. A graphic representation of the newly detected device is displayed in a region of a user interface external to a region containing a representation of the physical environment of the managed wireless network. A user selects a number of known access points from which an estimated distance to the newly detected device is to be determined and represented. A representation is generated of an estimated distance from each one of the selected number of access points, such as those access points that are estimated to be physically closest to the newly detected device, for example on the asis of signal strength with regard to transmissions from the newly detected device received at the known access points. The distance representations from the known access points may be provided using substantially circular u201cdistance ringsu201d, displayed in the region of the user interface containing a representation of the physical environment in which the wireless network is deployed. The distance rings enable a user to may observe one or more distance ring intersections indicating one or more potential positions within the wireless network's physical environment at which the newly detected device may be located.",
	"url": null,
	"owner": "Autocell Laboratories, Inc.",
	"publication_number": "07085588",
	"publication_date": "2006-08-01",
	"application_number": "10937550",
	"application_date": "2004-09-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Continuation manager",
	"summary": "",
	"abstract": "A method of processing data is provided, which includes a plurality of processes  to  equipped with dependencies  and a continuation manager , said processes  to  including a plurality of sub-processes . The continuation manager  recurrently selects () each of said plurality of processes for execution in the order of their dependencies. The continuation manager further recurrently selects () each of said plurality of sub-processes  within each of said plurality of processes  to  for execution. The output data generated at each of said selected sub-processes  is generated in the order of said dependencies ",
	"url": null,
	"owner": "Autodesk Canada Co.",
	"publication_number": "07155719",
	"publication_date": "2006-12-26",
	"application_number": "10196671",
	"application_date": "2002-07-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Geographical data markup on a personal digital assistant (PDA)",
	"summary": "",
	"abstract": "A method, system, and article of manufacture provide the ability to redline or mark up geographic information on a personal digital assistant (PDA). An application on the PDA is configured to obtain map data from a server and display the map data on a screen of the PDA. Markup data is obtained from a user through a stylus that is used to markup the map displayed on the PDA. A file comprised of the markup data is created and then uploaded from the PDA to the server. Accordingly, the markup data comprises a markup layer that is stored locally on the PDA and uploaded (synchronized) with the server automatically when a list of a set of maps is updated.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "07142196",
	"publication_date": "2006-11-28",
	"application_number": "09628851",
	"application_date": "2000-07-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for drawing collaboration on a network",
	"summary": "",
	"abstract": "To address the requirements described above, one or more embodiments of the invention provide a method, apparatus, and article of manufacture for a project hosting service that a user can access with a web browser. With it, a user can communicate and collaborate with the members of a design team or construction project. Embodiments of the invention let a user share CAD drawing files (DWG DWF, etc.), document files, or any other type of file. A user can add comments or reply to discussion threads about the file or other aspects of the project. A user can view or download files from anywhere in the world to work on them, while locking the file to prevent others from overwriting the file. When the user is done, the file can be uploaded and unlocked while simultaneously notifying other Project members of the change by e-mail.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "07062532",
	"publication_date": "2006-06-13",
	"application_number": "09534757",
	"application_date": "2000-03-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for inferred selection of objects",
	"summary": "",
	"abstract": "One or more embodiments of the invention comprises a collection of techniques to infer the real construction of a collection of graphical elements. Typically the underlying graphical elements of a physical object have a parent-child relationship in the graphical display and picking database. The invention examines the children of a parent seeking relationships like co-linear, closed polygon, etc., and then answers u201chitu201d detect queries for areas that are not specifically stroked, but are also inferred to be u201crealu201d, e.g., spaces in a dashed or patterned line, the area of a closed polygon, etc. Certain allowances and flexibility must be taken into account in this process. For example, one or more embodiments do not include u201ctextu201d children on a stroke by stroke basis, but instead may look to the bounding box of the text for selection. One or more embodiments of the invention obtain a selection request from the user. The system and method of the invention examines existing objects to determine and obtain relationships between the objects. Virtual objects that join the existing objects or are complimentary to the existing objects are created based on the relationships. Subsequently, whenever an object is selected (whether the object is an existing object or a virtual object), the object selected and its related objects are selected. In this manner, the physical shape of a graphically represented object may be inferred and utilized by a graphics program and users.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "07000197",
	"publication_date": "2006-02-14",
	"application_number": "09585508",
	"application_date": "2000-06-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing drawing collaboration on a network",
	"summary": "",
	"abstract": "A method, apparatus, and article of manufacture for an application programming interface (API) on a client computer that enables access to architectural project information stored across the internet on a server site. The server site maintains an organization for the architectural information in the form of containers for storing, managing, and sharing files for one or more architectural projects, wherein the files comprise drawings, documents, communications, and tasks related to the architectural projects. The API of the invention permits third parties to create custom clients or permit direct access to a site hosted on a server. Such an API operates with both thick (.exe) and thin (.html) clients. The API establishes/obtains a connection between the client and the server to enable such access. For example, if the user desires to store a file on the server site, the user selects the appropriate server site/folder from within an application program executing the API. The API may then require the user to logon and confirms that the user has appropriate access permissions to work with the server site/folder. Once confirmed, the connection session is established. During the session, the user may access and download files as desired while maintaining the storage structure of architectural information stored on the server site.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "07149959",
	"publication_date": "2006-12-12",
	"application_number": "09690326",
	"application_date": "2000-10-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Object manipulators and functionality",
	"summary": "",
	"abstract": "A method, apparatus, and article of manufacture provide the ability to display and use object manipulators in a computer graphics program. In some embodiments, an object manipulator (i.e., a button object manipulator or traditional object manipulator) is displayed on a graphics object and activated. In response to the activation, a property of the graphics object is directly modified. Various forms and properties of the object manipulator provide additional capabilities that may assist the user in the graphics program.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "07110005",
	"publication_date": "2006-09-19",
	"application_number": "10657422",
	"application_date": "2003-09-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Operator for sculpting solids with sheet bodies",
	"summary": "",
	"abstract": "A computer-implemented solid modeling system provides a graph-based method that sculpts solids with sheet bodies by performing a selective Boolean operation on a part body and one or more sheet bodies, wherein faces of the sheet bodies separate the part body into regions of space such that the regions are separated from each other by the faces of the sheet bodies. Cells thus formed are selected for inclusion or exclusion in the resulting solid as is specified by an option (u201cjoinu201d or u201ccutu201d).",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "07031790",
	"publication_date": "2006-04-18",
	"application_number": "10663391",
	"application_date": "2003-09-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Single gesture map navigation graphical user interface for a personal digital assistant",
	"summary": "",
	"abstract": "An application on a personal digital assistant (PDA) displays a map. A graphical user interface permits the application to receive single gesture inputs of a stylus. If the single gesture input comprises a drag of the stylus a minimum distance, the map is panned such that the map is shifted to a new center view. The displayed map may contain one or more map objects. If the input comprises a single tap on a specific map object, the map object under the tap may be selected and highlighted. Further, a ToolTip for the map object may be displayed. A further tap of the ToolTip may result in the navigation to a link or URL associated with the map object selected. One or more zoom buttons may also be displayed. If a zoom button is tapped by the user, the map may be displayed in a different level of detail.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "07142205",
	"publication_date": "2006-11-28",
	"application_number": "09795890",
	"application_date": "2001-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hierarchically-controlled automatic test pattern generation",
	"summary": "",
	"abstract": "Hierarchically-controlled automatic test pattern generation (ATPG) is provided. One embodiment comprises a method for automatically generating test patterns for testing a device under test. Briefly described, one such method comprises the steps of: receiving a hierarchical model of a device under test, the hierarchical model comprising at least one low-level design component and at least one high-level design component which contains the low-level design component; selecting a fault to be detected in the device under test; and performing an automatic test pattern generation (ATPG) algorithm on the design components based on the hierarchy of the hierarchical model.",
	"url": null,
	"owner": "Avago Technologies General IP (singapore) Pte. Ltd.",
	"publication_number": "07139955",
	"publication_date": "2006-11-21",
	"application_number": "10321758",
	"application_date": "2002-12-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Fault tolerance software system with periodic external self-test failure detection",
	"summary": "",
	"abstract": "Fault tolerance is improved in a computing system which includes one or more computing machines by (i) executing a control thread or other control program in conjunction with a fault tolerance software system running on at least one of the machines, and (ii) initiating via the control program a test script program which sends one or more requests to a monitored program. The test script program also processes corresponding responses to the one or more requests, and generates a return value utilizable by the control program to indicate a failure condition in the monitored program. The computing system may be configured in accordance with a client-server architecture, with the fault tolerance software system and the monitored program both running on a server of the system. The test script program is preferably implemented in an object-oriented programming language such as Java, such that one or more components of the test script program comprise a base class from which one or more other components of the test script program are generatable for use with the monitored program.",
	"url": null,
	"owner": "Avaya Technology Corp.",
	"publication_number": "07096388",
	"publication_date": "2006-08-22",
	"application_number": "09924983",
	"application_date": "2001-08-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Bitstream format and reading and writing methods and apparatus therefor",
	"summary": "",
	"abstract": "Image data having a bit depth of m bits, where m is not a power of two, may be divided into two parts for storage. The first part is the n most significant bits, where n is a power of two. The second part is the k least significant bits, where k=mu2212n and k<n. For example, 10-bit data may be separated into 8-bit and 2-bit parts. The 8-bit data for a given image is placed in the bitstream as a contiguous block with the end of the data aligned with a memory boundary, such as a page boundary. The 2-bit data is collected into bytes that are placed in the bitstream as a contiguous block. The block of 2-bit data is placed in the bitstream preceding and contiguous with the block of 8-bit data. Padding may be provided to align the beginning of the image data with a memory boundary. The image data for multiple images may be placed in the bitstream contiguously for storage. 10-bit data for an alpha channel, if any, also may be split into 8-bit and 2-bit parts. The 8-bit alpha data for a given image is placed in the bitstream as a contiguous block with the beginning of the data aligned with a memory boundary, such as a page boundary. The 2-bit alpha data is collected into bytes that are placed in the bitstream as a contiguous block. The block of 2-bit alpha data is placed in the bistream subsequent to and contiguous with the block of 8-bit alpha data. Padding may be provided to align the end of the alpha data with a page boundary. The alpha data for multiple images may be placed in the bitstream contiguously for storage.",
	"url": null,
	"owner": "Avid Technology, Inc.",
	"publication_number": "07145567",
	"publication_date": "2006-12-05",
	"application_number": "10406013",
	"application_date": "2003-04-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer system and process for transferring multiple high bandwidth streams of data between multiple storage units and multiple applications in a scalable and reliable manner",
	"summary": "",
	"abstract": "Multiple applications request data from multiple storage units over a computer network. The data is divided into segments and each segment is distributed randomly on one of several storage units, independent of the storage units on which other segments of the media data are stored. At least one additional copy of each segment also is distributed randomly over the storage units, such that each segment is stored on at least two storage units. This random distribution of multiple copies of segments of data improves both scalability and reliability. When an application requests a selected segment of data, the request is processed by the storage unit with the shortest queue of requests. Random fluctuations in the load applied by multiple applications on multiple storage units are balanced nearly equally over all of the storage units. This combination of techniques results in a system which can transfer multiple, independent high-bandwidth streams of data in a scalable manner in both directions between multiple applications and multiple storage units.",
	"url": null,
	"owner": "Avid Technology, Inc.",
	"publication_number": "07111115",
	"publication_date": "2006-09-19",
	"application_number": "10883387",
	"application_date": "2004-07-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Update management for encoded data in memory",
	"summary": "",
	"abstract": "This invention concerns a system to update encoded data stored in a memory of a data processing device such as a smartcard. In this system, the data is represented by a tree structure in directories and files according to an object representation. According to the invention, the update system comprises a specific referencing object able to reference all or some of the attributes of the encoded data in memory. A microcontroller is then programmed to extract from the referencing object the information required to locate the memory block occupied by this attribute, and update this block, replacing it by the new previously encoded data.",
	"url": null,
	"owner": "Axalto SA",
	"publication_number": "07147167",
	"publication_date": "2006-12-12",
	"application_number": "10502823",
	"application_date": "2003-01-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure sharing of application methods on a microcontroller",
	"summary": "",
	"abstract": "A method and microcontroller for secure object sharing between applications executing on the microcontroller. A server application registers a delegate object with the operating system of the microcontroller. The delegate object permits access to the public interfaces of the server while enforcing security policies.",
	"url": null,
	"owner": "Axalto, Inc.",
	"publication_number": "07127605",
	"publication_date": "2006-10-24",
	"application_number": "09568401",
	"application_date": "2000-05-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Configuring a network gateway",
	"summary": "",
	"abstract": "A system includes a device, a gateway that is in communication with the device, and a server that is in communication with the gateway. The gateway includes circuitry to obtain data relating to the device, to transmit the data to a server, and to receive configuration information from the server that is generated based on the data. The server includes circuitry to receive the data from the gateway, to generate the configuration information based on the data, and to transmit the configuration information to the gateway.",
	"url": null,
	"owner": "Axeda Corporation",
	"publication_number": "07082460",
	"publication_date": "2006-07-25",
	"application_number": "10126057",
	"application_date": "2002-04-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Trusted computer system",
	"summary": "",
	"abstract": "A trusted computer system that offers Linuxu00ae compatibility and supports contemporary hardware speeds. It is designed to require no porting of common applications which run on Linux, to be easy to develop for, and to allow the use of a wide variety of modern development tools. The system is further designed to meet or exceed the Common Criteria EAL-5 or higher rating through incorporation of required security features, as well as a very high level of assurance for handling data at a wide range of sensitivity (e.g., classification) levels in a wide range of operational environments. This is achieved through the implementation of a well-layered operating system which has been designed from the ground up to enforce security, but which also supports Linux operating system functions and methods.",
	"url": null,
	"owner": "Bae Systems Information Technology LLC",
	"publication_number": "07103914",
	"publication_date": "2006-09-05",
	"application_number": "10462771",
	"application_date": "2003-06-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Techniques for updating live objects at clients using a dynamic routing network",
	"summary": "",
	"abstract": "A dynamic content routing network routes update messages containing updates to properties of live objects from input sources to clients having the objects. Certain objects served to clients by a server are indicated as u201clive.u201d When the clients receive live objects, the clients identify the object IDs associated with the objects and register the object IDs with the routing network. The routing network maintains a registry of object IDs and clients. An input source provides an update message to the routing network containing the object ID and data specifying an update to a property of the object. The routing network routes the message to each client that has registered for the object ID contained in the message. Upon receipt of the message, a client updates the specified property of the live object.",
	"url": null,
	"owner": "Bang Networks, Inc.",
	"publication_number": "07043525",
	"publication_date": "2006-05-09",
	"application_number": "10017182",
	"application_date": "2001-12-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for data item movement between disparate sources and hierarchical, object-oriented representation",
	"summary": "",
	"abstract": "Data moves between multiple, disparate data sources and the object-oriented computer programs that process the data. A data access server is interposed between the object-oriented programs and the data sources, and acts as an intermediary. The intermediary server receives requests for data access from object-oriented computer programs, correlates each request to one or more interactions with one or more data sources, performs each required interaction, consolidates the results of the interactions, and presents a singular response to the requesting computer program. The consolidated response from the intermediary server contains data items requested by the computer program, information regarding the hierarchical topology that relates the data items, and an indication of the possible object types that might embody the data items. The application program receives the consolidated response and builds an object hierarchy to embody the data items and to interface them to the rest of the application program. The class of an object used to embody data items is selected at execution time from a list of possible candidates.",
	"url": null,
	"owner": "Bank of America Corporation",
	"publication_number": "07111016",
	"publication_date": "2006-09-19",
	"application_number": "10299456",
	"application_date": "2002-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data processing, analysis, and visualization system for use with disparate data types",
	"summary": "",
	"abstract": "Furthermore, the user may explore the information contained in sets of records and their associated attributes through the use of interactive 2-D line charts and interactive summary miniplots.",
	"url": null,
	"owner": "Battelle Memorial Institute",
	"publication_number": "06990238",
	"publication_date": "2006-01-24",
	"application_number": "09410367",
	"application_date": "1999-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for displaying disparate types of information using an interactive surface map",
	"summary": "",
	"abstract": "Methods and apparatus allow a user to explore the information contained in sets of records and their associated attributes through the use of interactive surface maps. The records may contain various types of attributes, including text, numeric, categoric, and sequence data.",
	"url": null,
	"owner": "Battelle Memorial Institute",
	"publication_number": "07106329",
	"publication_date": "2006-09-12",
	"application_number": "09408716",
	"application_date": "1999-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application view component for system integration",
	"summary": "",
	"abstract": "This description is not intended to be a complete description of, or limit the scope of, the invention. Other features, aspects, and objects of the invention can be obtained from a review of the specification, the figures, and the claims.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07080092",
	"publication_date": "2006-07-18",
	"application_number": "10271194",
	"application_date": "2002-10-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Selective parsing of an XML document",
	"summary": "",
	"abstract": "A streaming parser API expands a base parser by building an iterative method on top of the base parser. The iterative method allows a user to pass a selected element type to the base parser, which can step through the XML document until it locates a matching element. The base parser can then extract the element, process the element as an event, and place the event on an event stream for use by an application.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07065561",
	"publication_date": "2006-06-20",
	"application_number": "10304207",
	"application_date": "2002-11-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for enterprise authentication",
	"summary": "",
	"abstract": "A method for adaptively authenticating a subject, said method adapted to cooperate with a security provider interface hierarchy, said method comprising the steps of providing for the implementation of an authentication interface adapted to extend and implement at least a portion of the security provider hierarchy, providing for the authentication of the subject when so directed by the authentication interface, and providing for the association of a signed principal with the subject upon the successful authentication of the subject.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07017051",
	"publication_date": "2006-03-21",
	"application_number": "10373532",
	"application_date": "2003-02-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for software component plug-in framework",
	"summary": "",
	"abstract": "The invention provides a software component plugin framework. The system described supports dynamic loading, instantiation, and unloading of interface implementations (plugin modules), together with encapsulation of these interface implementations. The many benefits provided by the invention include software reuse, interoperability and fast product development cycles.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "06996832",
	"publication_date": "2006-02-07",
	"application_number": "09918880",
	"application_date": "2001-07-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Smart call delivery GIS integration",
	"summary": "",
	"abstract": "A method of delivering a call to a called party's device. The method includes receiving a call directed to a wireline device and validating that a telephone number of the wireline device is associated with a telephone number of a wireless device. The method also includes transmitting a message to the wireless device, delivering the call to the wireline device when a return message is not received from the wireless device, and determining a location of the wireless device when a return message is received from the wireless device. The method further includes comparing the location of the wireless device with a location of the wireline device, delivering the call to the wireless device when the location of the wireless device is not within a predefined vicinity of the location of the wireline device, and delivering the call to the wireline device when the location of the wireless device is within a predefined vicinity of the location of the wireline device.",
	"url": null,
	"owner": "BellSouth Intellectual Property Corp.",
	"publication_number": "07099677",
	"publication_date": "2006-08-29",
	"application_number": "09997098",
	"application_date": "2001-11-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for creating extensible content",
	"summary": "",
	"abstract": "A system and method for generating validated extensible content using (i) a ubiquitous portable application as a lightweight data form entry tool, (ii) a business-specific DTD, and (iii) a transformation extensible stylesheet language construct (XSL). In an exemplary use, the system and method is employed to create advertisements for, e.g., a directory. Basic copy information is received in a first database accessible to advertisement salespeople. A second database that is accessible to a graphics artist periodically receives the basic copy information from the first database. The second database is in communication with a graphics workstation, wherein the workstation is operable to (i) access the second database, (ii) launch a first software program, the first software program presenting a form that is displayed on the workstation, wherein the first software program has a native file saving format that is different from a format of an XML file, (iii) at least one of modify selected fields in the form and add data to fields other than the selected fields, (iii) spawn a graphics page using the first software program to display a graphic consistent with the information in form, and (iv) save the information in the form as an XML file.",
	"url": null,
	"owner": "BellSouth Intellectual Property Corp.",
	"publication_number": "07107522",
	"publication_date": "2006-09-12",
	"application_number": "10024142",
	"application_date": "2001-12-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for integrated processing of information from a plurality of data systems",
	"summary": "",
	"abstract": "Systems and methods to integrate processing of information from a plurality of data systems. In an embodiment, a system includes a network connection, which can receive information sent to and from a terminal. The network connection is coupled to a first network, and the first network is coupled to the terminal. The system can also include a plurality of data system connections, where each data system connection of the plurality of data system connections can receive information sent to and from a respective data system of a plurality of data systems. A server is coupled to the network connection and the plurality of data system connections. In an embodiment, the server includes a processor and a memory coupled to the processor. The memory can include a plurality of data system instructions objects, where each data system instructions object of the plurality of data system instructions objects corresponds to a respective data system of the plurality of data systems. Each data system instructions object can manage communications between the terminal and the respective data system of the plurality of data systems.",
	"url": null,
	"owner": "BellSouth Intellectual Property Corp.",
	"publication_number": "07120677",
	"publication_date": "2006-10-10",
	"application_number": "09712930",
	"application_date": "2000-11-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems for an integrated data network voice-oriented service and non-voice-oriented service converged creation and execution environment",
	"summary": "",
	"abstract": "Embodiments of the present invention relate to systems for converged service creation and execution. In an embodiment, a system includes an application server and service session manager logic, where the service session manager logic is in communication with the application server. A converged service creation and execution environment messaging bus is in communication with the service session manager logic, and a plurality of service servers are in communication with the converged service creation and execution environment messaging bus.",
	"url": null,
	"owner": "BellSouth Intellectual Property Corp.",
	"publication_number": "07103644",
	"publication_date": "2006-09-05",
	"application_number": "09893439",
	"application_date": "2001-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for tracking network use",
	"summary": "",
	"abstract": "An interactive media delivery system enables interactive media programming to a multimedia device and also tracks a subscriber's use of the multimedia device. For example, the device tracks events, such as a change in programming, a change in channel selection, and/or the subscriber's interaction with a particular interactive services application. Each event may be stored as an event record in a database, and one or more of the event records may be merged with content data to form event timelines of programming or other activity to the multimedia device over a selected time period. Further, timelines may be analyzed to generate ratings and other information about programming and may also be correlated with demographics data for marketing analysis.",
	"url": null,
	"owner": "BellSouth Intellectual Property Corporation",
	"publication_number": "06983478",
	"publication_date": "2006-01-03",
	"application_number": "09496825",
	"application_date": "2000-02-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for providing visibility to SS7 integrated on-line networks",
	"summary": "",
	"abstract": "A system and method capture data from an SS7 network and pair each invoke message with its corresponding response message. Each message is stored in a daily file as well as in a table dedicated for that particular message type. A separate file is also maintained on each MIN and holds the most current registration information for each MIN. The system and method support four different types of queries: a MIN/ESN query, an active roamer query, a switch-to-switch query, and a transaction statistics query. The MIN/ESN query provides roaming activity on a specific MIN or ESN while the active roamer query provides information on all roamers in a serving market. The switch-to-switch query reveals messaging at one switch or between two switches. The statistics query provides data to a provider on all of its subscribers roaming in foreign networks or on all phones within its own network. The system has a Graphical User Interface (GUI) for displaying information on each message in an easy and convenient manner. The details of a record are displayed in a tabular format with each tab holding data for a group of parameters.",
	"url": null,
	"owner": "BellSouth Intellectual Property Corporation",
	"publication_number": "07027809",
	"publication_date": "2006-04-11",
	"application_number": "10140455",
	"application_date": "2002-05-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System method and computer program product for transferring unregistered callers to a registration process",
	"summary": "",
	"abstract": "A system, method and computer program product are provided for handling unregistered callers in a voice recognition framework. Initially, it is determined whether a user is registered. If it is determined that the user is not registered, a registration process is executed. Once registered, utterances may be received from the user and recognized for the purpose of providing a service to the user.",
	"url": null,
	"owner": "BeVocal, Inc.",
	"publication_number": "07016843",
	"publication_date": "2006-03-21",
	"application_number": "09802394",
	"application_date": "2001-03-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program product for a transcription graphical user interface",
	"summary": "",
	"abstract": "A system, method and computer program product are afforded for providing a transcription graphical user interface. Initially, an utterance icon is displayed for prompting the emission of an utterance via a speaker upon the selection thereof. Further, a transcription field is depicted for allowing entry of a transcription of the utterance utilizing a keyboard. In use, the present transcription graphical user interface is displayed using hypertext markup language (HTML).",
	"url": null,
	"owner": "BeVocal, Inc.",
	"publication_number": "07069513",
	"publication_date": "2006-06-27",
	"application_number": "09769638",
	"application_date": "2001-01-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program product for looking up business addresses and directions based on a voice dial-up session",
	"summary": "",
	"abstract": "A system, method and computer program product for determining an address of an entity based on a user location are disclosed. An utterance representative of an entity is initially received from a user. The entity associated with the utterance is then recognized using a speech recognition process. Next, a location of the user is determined. A query is performed to identify a plurality of locations associated with the entity. Based on the results of the query and the location of the user, it is ascertained which of the identified locations associated with the entity are in proximity to the location of the user.",
	"url": null,
	"owner": "BeVocal, Inc.",
	"publication_number": "07024364",
	"publication_date": "2006-04-04",
	"application_number": "09802493",
	"application_date": "2001-03-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Relational database drill-down convention and reporting tool",
	"summary": "",
	"abstract": "A system generates linked sets of drill-down-enabled reports of increasing levels of detail from one or more databases. Linking relationships between reports are defined using the query language of the databases. Result sets are obtained that includes (1) the sought-after data, and (2) metadata that identifies drill-down reports to be generated if related report elements are selected. When the query is executed, the system passes the sought-after data to a reporting application programming interface, which generates a report (e.g., a pie chart, 3-D bar chart, cross-tabbed table). If an end-user selects one of the report elements (e.g., a bar on the chart), the system maps the reported event to the associated data of the result set. If the associated data has corresponding meta-data containing a drill-down directive, the system then generates the report identified by the drill-down directive.",
	"url": null,
	"owner": "BIF Technologies Corp.",
	"publication_number": "06993533",
	"publication_date": "2006-01-31",
	"application_number": "10063145",
	"application_date": "2002-03-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Graphics engine, and display driver IC and display module incorporating the graphics engine",
	"summary": "",
	"abstract": "A display driver integrated circuit is provided for connection to a small-area display, the integrated circuit including a hardware-implemented graphics engine for receiving vector graphics commands and rendering image data for display pixels in dependence upon the received commands, and also including display driver circuitry for driving the connected display in accordance with the image data rendered by the graphics engine. In another aspect the graphics engine is held within the display module, but not embedded in the display driver IC. The invention provides graphics acceleration that increases display performance, but does not significantly increase cost of manufacture. Power consumption in comparison to non-accelerated CPU graphics processing is lowered.",
	"url": null,
	"owner": "Bitboys, Oy",
	"publication_number": "07027056",
	"publication_date": "2006-04-11",
	"application_number": "10141797",
	"application_date": "2002-05-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for on-line financial services using distributed objects",
	"summary": "",
	"abstract": "A system is disclosed for accessing recent financial information from various financial services providers. The system is based on a client/server architecture so that services are accessible from a variety of presentation tools. Communications between clients and servers are accomplished using u201cInterfacesu201d that group operations and attributes for various services. The system uses the TCP/IP protocol suite so financial services are available at any time and from any location.",
	"url": null,
	"owner": "Block Financial Corporation",
	"publication_number": "07032008",
	"publication_date": "2006-04-18",
	"application_number": "09932373",
	"application_date": "2001-08-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for automatically updating multiple servers",
	"summary": "",
	"abstract": "A system and method updates multiple servers automatically without taking all of the multiple servers off-line at the same time. The system and method selects a group of servers, takes the group off-line, updates the group taken off-line, and then brings on-line those members of the group that were on-line prior to the update and for which the update was installed successfully.",
	"url": null,
	"owner": "BMC Software, Inc.",
	"publication_number": "07020706",
	"publication_date": "2006-03-28",
	"application_number": "10173278",
	"application_date": "2002-06-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computerized national online parcel-level map data portal",
	"summary": "",
	"abstract": "A National Online Parcel-Level Map Data Portal (NPDP) is provided that optimizes online delivery of parcel-level maps and linked attribute data. To do this, the NPDP manages a database of assembled and current vector based parcel data in a spatial format (GIS) that enables geocoded parcel boundaries to be linked to property tax records. A user enters a street address into an appropriate screen window to call up and view road right-of-ways, all parcel boundaries and the u201cexactu201d address location as a highlighted parcel area. In addition, a list of property record attributes such as owner, use code, assessed value and year constructed can be displayed. Other on screen parcels can likewise be selected if one wishes to view their linked attributes. Subscribers may customize the NPDP to perform a variety of spatial analysis/reporting functions. Under public/private alliances, agreements are negotiated with individual property assessor's offices whereby they receive a portion of NPDP service provider revenue in return for parcel map database updates. Such on-going commerce between data sponsors and the NPDP service provider is utilized to assure a sustained and expanding flow of increasingly competent content.",
	"url": null,
	"owner": "Boundary Solutions Incorporated",
	"publication_number": "07092957",
	"publication_date": "2006-08-15",
	"application_number": "10347102",
	"application_date": "2003-01-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Announced session control",
	"summary": "",
	"abstract": "A method and system manages media stream connections in a media session, for example a multimedia conference, that is to take place over multicast capable links provided in networks configured for Internet Protocol operation, (i.e., the communications network known as the MBone (Internet Protocol Multicast Backbone)). The method comprises receiving a session description of a media session by way of a session announcement over a network; parsing the session description to determine appropriate media application program(s) for processing at least one media stream of the session description, and connecting the one or more selected media streams to one or more respective media application programs utilising a session control configured for managing media stream connections for the one or more media application programs.",
	"url": null,
	"owner": "British Telecommunications",
	"publication_number": "07103667",
	"publication_date": "2006-09-05",
	"application_number": "09830459",
	"application_date": "1999-11-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Communications",
	"summary": "",
	"abstract": "A call center associated with an intelligent network has no service-specific executable application software running on its operator positions. Instead, each computer stores a set of templates which define respective screen displays, including text display areas and text input areas, and also a set of corporate logos. When an intelligent peripheral of the network is not able to proceed with a call in accordance with an application, a failure notification is sent to the network, which reroutes, i.e. connects, that call to the call center and sends a message including an identifier for a template to be used by an operator position in generating a screen display. The operator interacts with the customer, obtains information and enters this in the text entry areas, sends a return message to the network, which then sends a message containing an identifier for a template to be used for the next stage of that application.",
	"url": null,
	"owner": "British Telecommunications public limited company",
	"publication_number": "07103169",
	"publication_date": "2006-09-05",
	"application_number": "10221211",
	"application_date": "2001-03-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method to reduce memory footprints in processor architectures",
	"summary": "",
	"abstract": "The present invention provides an apparatus and method to reduce the memory footprint of a processor architecture by structuring processor code to be stored in an external device, and transferring into the processor certain code and associated data as it is needed. The processor code or algorithm is divided into a controlling piece and a working piece. The controlling piece can be located on a low-MIPS, high memory-footprint device, whereas the working piece can be located on a high-MIPS, low memory-footprint device. The working piece can also be broken down into phases or segments, which are put in a data store. The segments are then transferred, on an as-needed basis along with associated data, from the store into the constrained memory of the low memory-footprint device. Transfer is facilitated by a segment manager which can be processed from the low-MIPS device, or alternatively from the high-MIPS device.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07089390",
	"publication_date": "2006-08-08",
	"application_number": "10003563",
	"application_date": "2001-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integrated gigabit ethernet PCI-X controller",
	"summary": "",
	"abstract": "A network controller having a multiprotocol bus interface adapter coupled between a communication network and a computer bus, the adapter including a predictive time base generator; and a management bus controller adapted to monitor and manage preselected components coupled with one of the communication network and the computer bus. The management bus controller is adapted to employ an Alert Standard Format (ASF) specification protocol, a System Management Bus (SMBus) specification protocol, an Intelligent Platform Management Interface (IPMI) specification protocol, a Simple Network Management Protocol (SNMP), or a combination thereof. The network controller also includes a 10/100/1000BASE-T IEEE Std. 802.3-compliant transceiver and media access controller coupled with the communication network; a buffer memory coupled with the MAC, wherein the buffer memory includes one of a packet buffer memory, a frame buffer memory, a queue memory, and a combination thereof; and a transmit CPU and a receive CPU coupled with the multiprotocol bus interface adapter and the management bus controller. The network controller can be a single-chip VLSI device in an 0.18 micron CMOS VLSI implementation.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07062595",
	"publication_date": "2006-06-13",
	"application_number": "10132531",
	"application_date": "2002-04-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Voice and data exchange over a packet based network with AGC",
	"summary": "",
	"abstract": "A signal processing system which discriminates between voice signals and data signals modulated by a voiceband carrier. The signal processing system includes a voice exchange, a data exchange and a call discriminator. The voice exchange is capable of exchanging voice signals between a switched circuit network and a packet based network. The signal processing system also includes a data exchange capable of exchanging data signals modulated by a voiceband carrier on the switched circuit network with umodulated data signal packets on the packet based network. The data exchange is performed by demodulating data signals from the switched circuit network for transmission on the packet based network, and modulating data signal packets from the packet based network for transmission on the switched circuit network. The call discriminator is used to selectively enable the voice exchange and data exchange.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07092365",
	"publication_date": "2006-08-15",
	"application_number": "09643920",
	"application_date": "2000-08-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Voice and data exchange over a packet based network with DTMF",
	"summary": "",
	"abstract": "A method and system for detecting a dual tone in a composite signal having first and second components including means for separating the composite signal into its first and second components, means for estimating power of the separated first and second components, means for determining frequency of the separated first and second components, and means for comparing the power and frequency of the first and second components to at least one of a plurality of respective power and frequency thresholds to determine whether the composite signal comprises a dual tone.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07082143",
	"publication_date": "2006-07-25",
	"application_number": "09692554",
	"application_date": "2000-10-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Voice and data exchange over a packet based network with resource management",
	"summary": "",
	"abstract": "A signal processing system which discriminates between voice signals and data signals modulated by a voiceband carrier. The signal processing system includes a voice exchange, a data exchange and a call discriminator. The voice exchange is capable of exchanging voice signals between a switched circuit network and a packet based network. The signal processing system also includes a data exchange capable of exchanging data signals modulated by a voiceband carrier on the switched circuit network with unmodulated data signal packets on the packet based network. The data exchange is performed by demodulating data signals from the switched circuit network for transmission on the packet based network, and modulating data signal packets from the packet based network for transmission on the switched circuit network. The call discriminator is used to selectively enable the voice exchange and data exchange.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "06990195",
	"publication_date": "2006-01-24",
	"application_number": "09643921",
	"application_date": "2000-08-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Voice gateway with downstream voice synchronization",
	"summary": "",
	"abstract": "A network gateway is configured to facilitate on line and off line bi-directional communication between a number of near end data and telephony devices with far end data termination devices via a hybrid fiber coaxial network and a cable modem termination system. The described network gateway combines a QAM receiver, a transmitter, a DOCSIS MAC, a CPU, a voice and audio processor, a voice synchronizer, an Ethernet MAC, and a USB controller to provide high performance and robust operation. It is emphasized that this abstract is provided to comply with the rules requiring an abstract which will allow a searcher or other reader to quickly ascertain the subject matter of the technical disclosure. It is submitted with the understanding that it will not be used to interpret or limit the scope or the meaning of the claims.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07023868",
	"publication_date": "2006-04-04",
	"application_number": "09737175",
	"application_date": "2000-12-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Voice gateway with voice synchronization",
	"summary": "",
	"abstract": "A network gateway is configured to facilitate on line and off line bi-directional communication between a number of near end data and telephony devices with far end data termination devices via a hybrid fiber coaxial network and a cable modem termination system. The described network gateway combines a QAM receiver, a transmitter, a DOCSIS MAC, a CPU, a voice and audio processor, an Ethernet MAC, and a USB controller to provide high performance and robust operation. It is emphasized that this abstract is provided to comply with the rules requiring an abstract which will allow a searcher or other reader to quickly ascertain the subject matter of the technical disclosure. It is submitted with the understanding that it will not be used to interpret or limit the scope or the meaning of the claims.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "06985492",
	"publication_date": "2006-01-10",
	"application_number": "09706595",
	"application_date": "2000-11-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for performance level modeling and simulation of electronic systems having both hardware and software elements",
	"summary": "",
	"abstract": "A method and system for evaluating performance level models of electronic systems having both hardware and software components is provided. The system and method allow for the simplified implementation and testing of several different architectural designs for compliance with the desired operational requirement of a designed electronic system.",
	"url": null,
	"owner": "Cadence Design System, Inc.",
	"publication_number": "07069204",
	"publication_date": "2006-06-27",
	"application_number": "09670911",
	"application_date": "2000-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Processing of digital picture data in a decoder",
	"summary": "",
	"abstract": "A decoder for a digital audiovisual transmission system, the decoder comprising a processor means for decompressing and displaying compressed still picture data and a memory () characterised in that the memory () comprises a storage memory () allocated to receive from the processor decompressed digital image data representing a plurality of still picture images () and at least one display memory () adapted to hold contemporaneously data representing multiple still picture images () readable by the processor means prior to display, data representing the plurality of images being copied from the storage memory () to the display memory () for subsequent display.",
	"url": null,
	"owner": "Canal + Technologies",
	"publication_number": "07039245",
	"publication_date": "2006-05-02",
	"application_number": "09622246",
	"application_date": "1999-02-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic generation of a new encryption key",
	"summary": "",
	"abstract": "A device (such as a printer or a network device that may be connected to the printer) that is connected to a network and which performs secure operations using an existing encryption keypair maintained within the device, generates a new encryption keypair within the device by receiving a request from another device on the network to provide an encryption key of the existing encryption keypair to the another device. In response to the request, the device determines whether an encryption key of the existing encryption keypair within the device is valid. In a case where it is determined that the encryption key of the existing encryption keypair is invalid, the device automatically deletes each key of the existing encryption keypair from the device, generates a new encryption keypair within the device and stores the new encryption keypair in the device. The device then provides a new encryption key corresponding to the requested encryption key of the new encryption keypair to another device.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07111322",
	"publication_date": "2006-09-19",
	"application_number": "10309896",
	"application_date": "2002-12-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Home printing from internet sources",
	"summary": "",
	"abstract": "Internet-based printing to a home printer in which the print job is pre-rasterized at the cable head end and sent in rasterized format to the set top box. Because the print job is pre-rasterized at the cable head end, and not at the set top box, resources are not wasted at the set top box when they are more readily available at the cable head end. In addition, because of the high speed communication network already in existence between the cable head end and the set top box, even large pre-rasterized print jobs can be transmitted to the set top box in reasonable amounts of time, meaning more quickly than a situation in which it was the set top box that performed rasterization.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07084994",
	"publication_date": "2006-08-01",
	"application_number": "09357585",
	"application_date": "1999-07-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Image processing apparatus and its method, and image processing system and its control method",
	"summary": "",
	"abstract": "In a case where an image region to be processing in RGB color space and an image region to be processed in YMCK color space are mixed, if objects converted from RGB representation to YMCK representation are re-converted to RGB representation and RGB rendering is performed, the load on the system is increased, and the throughput of a printing apparatus is degraded. Accordingly, bands to be processed in the RGB color space are separated from print information inputted from a host computer, and pre-rendering is performed on the separated bands. Thereafter, bands to be processed in the YMCK color space are rendered by a rendering processing execution unit. The output order of the data of the respective bands pre-rendered in the RGB color space and that of the other bands are adjusted, and the data are sent to a printer engine.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07038815",
	"publication_date": "2006-05-02",
	"application_number": "10924893",
	"application_date": "2004-08-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information processing apparatus, distributed printing method, and storage medium",
	"summary": "",
	"abstract": "A requested print job is divided and distributed to a plurality of printers to efficiently and correctly print data of the print job, with only a simple user instruction of distributed printing. Under the control of a distribution controller, data of a print job is divided into data corresponding to the number of printers from which the data is output, and spooled in specific file formats in accordance with a combination of the printers. In accordance with the spooled data, divided print data is generated and distributed to the printers via a network under the control of a transmission controller.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07061635",
	"publication_date": "2006-06-13",
	"application_number": "09678017",
	"application_date": "2000-10-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information processing apparatus, information processing method, and memory medium storing print control program therein",
	"summary": "",
	"abstract": "In case of temporarily spooling an intermediate language by a printer driver, a high speed print can be performed by suppressing a size and the number of holding data. The printer driver adds a tag of each draw object type to information of a draw command received through a DDI function and holds the resultant information into a primary buffer together with attributes such as draw position information, color information, pattern information, and draw logic information. When the information is held into the primary buffer, if there is a draw object which has already been held, if the types and the draw attributes of the draw objects are identical, the draw object is additionally registered into the primary buffer. If one of u201ctype is differentu201d, u201cdata cannot be fully stored into the primary bufferu201d, u201cdraw attribute changesu201d, and u201cpage process is completedu201d is satisfied, a PDF (Page Data File) is generated from the draw object which has already been held in the primary buffer and spooled.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07023579",
	"publication_date": "2006-04-04",
	"application_number": "09779642",
	"application_date": "2001-02-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Printing a plurality of print jobs of a group in a designated order",
	"summary": "",
	"abstract": "A print application () issues print job grouping start and end instructions to a print system (client) (). The print system (client) () reads out the job information spooled at the time of reception of a grouping start instruction from a spooler () and stores the information. The print system (client) () reads out job information spooled at the time of reception of a grouping end instruction from the spooler (). The print system (client) () then extracts jobs that do not coincide with the stored job information as print jobs to be grouped from the spooler () and outputs them.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07068388",
	"publication_date": "2006-06-27",
	"application_number": "09969797",
	"application_date": "2001-10-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Scalable object recognition architecture",
	"summary": "",
	"abstract": "A method of processing received objects in a rendering system determines whether a detection scheme which already has grouped objects exits. The rendering system has a plurality of detection schemes, with each detection schemes having an associated object group type. If such a detection scheme does not exist and a previously received object has been stored, then the method determines in descending priority order whether one of the detection schemes is operative to group the received object with the previously received object. If it is determined that none of the detection schemes is operative to group the received object with the previously received object, then the previously received object is output for rendering the received object is stored. If it is determined that one of the detection schemes is operative to group the received object with the previously received object, then the received object is grouped with the previously received object.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07145578",
	"publication_date": "2006-12-05",
	"application_number": "11070210",
	"application_date": "2005-03-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for remote tracking of reboot status",
	"summary": "",
	"abstract": "Systems and methods consistent with the present invention provide for remote tracking of the reboot status for a plurality of user terminals. Each user terminal runs a start-up routine capable of creating a record of information about the terminal, including reboot status. The record of information is stored in log file on a file server, along with the records of information from other user terminals. A collection routine executed by a central server collects the log files from the file servers and stores the records in a database. Based on the records stored in the database, various status reports may be generated that reflect, among other things, a reboot status associated with the user terminals over a predetermined period of time.",
	"url": null,
	"owner": "Capital One Financial Corporation",
	"publication_number": "07017085",
	"publication_date": "2006-03-21",
	"application_number": "10159767",
	"application_date": "2002-05-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for reducing effects of rotational motion",
	"summary": "",
	"abstract": "A method and system for improving image quality by correcting errors introduced by rotational motion of an object being imaged is provided (). The method provides a computer executable methodology for detecting a rotation () and selectively reordering (), deleting and/or reaquiring projection data ().",
	"url": null,
	"owner": "Case Western Reserve University",
	"publication_number": "07002342",
	"publication_date": "2006-02-21",
	"application_number": "10475382",
	"application_date": "2002-04-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for managing real time data",
	"summary": "",
	"abstract": "A system and method for information management is provided. The system provides for collection of data from multiple, dissimilar and disparate sources having various collection schedules by a plurality of data collectors. It further provides a central database for storage of the collected data with front-end alerts and triggers. The central database has a central data store module for data storage and a central configuration module for configuring the data as well as the components of the system. The system includes a reporting module for generating and forwarding user specific scheduled reports from the accessed data in the central database. The presentation of the data could be any time, anywhere and in any format required by the end user. The system also provides an administration module for collecting, monitoring and configuring the collected data, data collectors, central database and the reports for the end user(s).",
	"url": null,
	"owner": "Centergistic Solutions, Inc.",
	"publication_number": "07130812",
	"publication_date": "2006-10-31",
	"application_number": "10723754",
	"application_date": "2003-11-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for data transformation in a heterogeneous computer system",
	"summary": "",
	"abstract": "A data transformation system includes clients, which initiate requests for transformation of data between first and second data formats. The system also includes peer transformation servers having data converters and graphs of available transformations between input and output data formats of such servers. The graph includes unidirectional edges, which extend between corresponding pairs of the formats. The servers collectively include one or more converters for each of the edges. The servers receive the requests and select plural intermediate transformations from the first format to plural intermediate formats, and a final transformation from an intermediate format to the second format. Each of the intermediate and final transformations is associated with a corresponding one of the edges. The servers initiate the converters corresponding to the selected transformations, in order to obtain and dispose the data in the second format. A communication network provides communication among the client and servers.",
	"url": null,
	"owner": "Chaavi, Inc.",
	"publication_number": "07065588",
	"publication_date": "2006-06-20",
	"application_number": "09928256",
	"application_date": "2001-08-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed user management information in telecommunications networks",
	"summary": "",
	"abstract": "The present invention provides a method and apparatus for implementing distributed user management information in telecommunications networks. At least a portion of a user's management information is stored in a team session file that is accessible by a network management system (NMS) client. For example, the team session file may be saved in memory that is local to the NMS client or, if a user logs in through a remote system using a web browser, the team session file may be saved as a cookie in memory local to the remote system. The NMS client may then utilize the user management information in the team session file while the user is logged into the NMS client. In one embodiment, the user management information stored within the team session file includes NMS server connection information. Thus, when a user logs into an NMS client, the NMS client uses the NMS server connection information to connect to an NMS server. The user management information stored within the team session file may be retrieved from user profile information corresponding to the user and stored in a central data repository, and since the user profile data is stored in a central repository, changes may be easily made to the user profile data and consequently pushed out to the team session files accessible by one or more NMS clients. Consequently, a user's management data may widely distributed for access by NMS clients located anywhere in the network.",
	"url": null,
	"owner": "Ciena Corp.",
	"publication_number": "07020696",
	"publication_date": "2006-03-28",
	"application_number": "09703531",
	"application_date": "2000-11-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Configurable fault recovery policy for a computer system",
	"summary": "",
	"abstract": "Computer systems and methods of data processing are disclosed in which fault/event management is carried out in accordance with a configurable fault recovery policy. In addition, computer systems and methods of data processing are disclosed in which hierarchical levels of fault management (or more generally u201ceventu201d management) are provided in accordance with the configurable fault policy.",
	"url": null,
	"owner": "Ciena Corporation",
	"publication_number": "06983362",
	"publication_date": "2006-01-03",
	"application_number": "09574352",
	"application_date": "2000-05-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Embedded database for computer system management",
	"summary": "",
	"abstract": "The present invention provides a network device having an internal configuration database process for managing configuration of internal resources within the network device in response to configuration input provided by an external Network Management System (NMS) process. In one aspect, the invention provides a communications system having a network device, and a computer system. The network device includes an internal configuration database process for managing configuration of internal resources within the device. The computer system includes an input mechanism for receiving configuration input data from a network manager, and an NMS process for responding to the configuration input data and for sending configuration data to the configuration database process within the network device, where the configuration database process within the network device configures internal resources of the network device in response to the configuration data received from the NMS.",
	"url": null,
	"owner": "CIENA Corporation",
	"publication_number": "07051097",
	"publication_date": "2006-05-23",
	"application_number": "09574435",
	"application_date": "2000-05-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Internal network device dynamic health monitoring",
	"summary": "",
	"abstract": "The present invention provides a method and apparatus for internal network device dynamic health monitoring. To increase network device availability, internal network device evaluations of resource attributes are conducted against threshold expressions and network managers are notified of any threshold events to allow them to address issues before failures occur. Flexibility is added by allowing users to select between various predefined threshold expressions, and flexibility is further increased by allowing users to input new threshold expressions. The user provided threshold expressions are dynamically incorporated into the network device's threshold evaluations while the network device is running. Thus, network managers may change threshold expressions at any time in accordance with their needs. The types of threshold expressions that may be used are practically limitless and may include any operand and multiple variables, including the time of day. In addition, multiple threshold expressions may be cascaded together. Network managers may be notified of threshold events in multiple manners as well. Moreover, the types of resource attributes that may be evaluated is extended by assigning unique identifiers to network device resources and allowing threshold evaluations for any identifiable resource and associated attributes.",
	"url": null,
	"owner": "CIENA Corporation",
	"publication_number": "07143153",
	"publication_date": "2006-11-28",
	"application_number": "09718224",
	"application_date": "2000-11-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for upgrading embedded configuration databases",
	"summary": "",
	"abstract": "The present invention provides a method for upgrading embedded configuration databases while a network device is operating and with minimal disruption to network device operation. While a network device is operating and using an embedded primary configuration database, an embedded backup configuration database stops performing as a backup database and is upgraded. The upgraded configuration database is then switched over to become the primary configuration database. The original primary configuration database may immediately become the backup configuration database, or the original primary configuration database may remain unchanged until the upgrade is committed. If the upgrade is not committed, for example, due to errors, then the original primary configuration database may be quickly switched over to again become the primary configuration database. As a result, embedded configuration databases may be upgraded while a network device is operating and with minimal disruption to network device operation.",
	"url": null,
	"owner": "Ciena Corporation",
	"publication_number": "07130870",
	"publication_date": "2006-10-31",
	"application_number": "09633155",
	"application_date": "2000-08-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network device including central and distributed switch fabric subsystems",
	"summary": "",
	"abstract": "The present invention reduces the cost of a minimally configured network device by providing a network device with a distributed switch fabric. Such a network device locates a portion of the switch fabric functionality on each forwarding card allowing the minimal network device configuration to include less than the entire switch fabric functionality. The cost of the minimal configuration is, therefore, reduced allowing network service providers to more quickly recover the initial cost of the network device. As new services are requested, additional functionality, including both forwarding cards and universal port cards may be added to the network device to handle the new requests, and the fees for the new services may be applied to the cost of the additional functionality. Consequently, the cost of the network device more closely tracks the service fees received by network providers.",
	"url": null,
	"owner": "Ciena Corporation",
	"publication_number": "07039046",
	"publication_date": "2006-05-02",
	"application_number": "09613940",
	"application_date": "2000-07-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network device including multiple mid-planes",
	"summary": "",
	"abstract": "The present invention provides a network device that fully utilizes the available space in a standard telco rack through the use of multiple mid-planes. Full utilization of available space allows a high switching capacity network device including both physical layer switch/router subsystems and upper layer switch/router subsystems to be fit in one telco rack. Inter-mid-plane connections may be provided by connecting switch fabric cards and/or control processor cards to each of the mid-planes. Providing a multi-layer network device in one telco rack allows for intelligent layer 1 switching (for example, dynamic network connection set up), allows for one network management system to control both layer 1 and upper layer networks and eliminates grooming fees. Compared with separate layer 1 and upper layer network devices or a multi-layer network device occupying multiple telco racks, a single network device saves valuable telco site space and reduces expenses by sharing overhead such as the chassis, power and cooling.",
	"url": null,
	"owner": "Ciena Corporation",
	"publication_number": "07023845",
	"publication_date": "2006-04-04",
	"application_number": "09595709",
	"application_date": "2000-06-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Policy based provisioning of network device resources",
	"summary": "",
	"abstract": "Methods are disclosed for establishing a path for data transmissions in a system having a plurality of possible paths by creating a configuration database and establishing internal connection paths based upon a configuration policy and the configuration database. The configuration policy can be based on available system resources and needs at a given time. In one embodiment, one or more tables are initiated in the configuration database to provide connection information to the system. For example, a path table and a service endpoint table can be employed to establishing a partial record in the configuration database whenever a user connects to a particular port on a universal port card in the system. The method can further include periodically polling records in the path table and transmitting data from the partial records to a policy provisioning manager (PPM). The PPM then implements a connection policy by comparing one or more of the new path characteristics, to the available forwarding card resources in the quadrant containing the universal port card port and path. The path characteristics can include the protocol, the desired number of time slots, the desired number of virtual circuits, and any virtual circuit scheduling restrictions. The PPM can also take other factors into consideration, including quality of service, for example, redundancy requirements or dedicated resource requirements, and balancing resource usage (i.e., load balancing) evenly within a quadrant.",
	"url": null,
	"owner": "CIENA Corporation",
	"publication_number": "07062642",
	"publication_date": "2006-06-13",
	"application_number": "09574341",
	"application_date": "2000-05-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Template-driven management of telecommunications network via utilization of operations support services clients",
	"summary": "",
	"abstract": "The present invention provides a method of managing telecommunications networks through an Operations Support Services (OSS) client and templates. Using an OSS client and various provisioning templates a network manager may interactively provision network services in one or more network devices, in one or more networks, through one or more network management systems. A network manager may interactively establish connections between an OSS client and an NMS server and network device, or the network manager may employ a control template to non-interactively establish these connections. The client/server architecture allows network managers to access multiple different network management servers through multiple OSS clients, and an OSS client may be downloaded from a web accessible server to provide u201cmanage anywhereu201d flexibility. Moreover, multiple control and provisioning templates may be ordered and sequenced within a batch template to non-interactively complete multiple provisioning tasks on multiple different network devices managed by multiple different network management systems. Through templates and an OSS client, therefore, one or more network management systems may be integrated with a telecommunication network carrier's OSS to simplify the network device provisioning process.",
	"url": null,
	"owner": "Ciena Corporation",
	"publication_number": "07111053",
	"publication_date": "2006-09-19",
	"application_number": "09633675",
	"application_date": "2000-08-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Upper layer network device including a physical layer test port",
	"summary": "",
	"abstract": "The present invention provides an upper layer network device with one or more physical layer data test ports. The data supplied to the test ports reflects the data received by the network device with minimal modification and no upper layer translation or processing, and supplying the data to the test ports does not impact or disrupt the service provided by the network device. Only a small portion of the network device need be operable to send data to the test ports. In addition, the test ports are programmable while the network device is operating and without impacting its operation. Moreover, because the test ports are programmableu2014that is, they are not dedicatedu2014they may be re-programmed for normal device operation.",
	"url": null,
	"owner": "CIENA Corporation",
	"publication_number": "07054272",
	"publication_date": "2006-05-30",
	"application_number": "09616477",
	"application_date": "2000-07-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Aircraft data services",
	"summary": "",
	"abstract": "A method and system provide efficient, flexible, and convenient data communication services over public wireless systems. The system includes a data communication server, having a plurality of interface units, for facilitating data communication between a moving object and one or more ground terminals via a radio communication path. The data communication server establishes the radio communication path over one of a plurality of wireless data networks including packet data networks and satellite data networks and preferably includes a pre-determined software architecture.",
	"url": null,
	"owner": "Cingular Wireless II, LLC",
	"publication_number": "07020708",
	"publication_date": "2006-03-28",
	"application_number": "09884730",
	"application_date": "2001-06-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing enhanced services at a mobile communication device",
	"summary": "",
	"abstract": "A method and apparatus provide for enhancing personal information management (PIM) services available through a mobile communication device. A PIM service is designed with a full set of features. The mobile communication device is programmed to be able to execute a subset of said full set of features on a stand-alone basis. The device is further programmed to access network resident features when a user initiated command requests a feature not available to the mobile communication device in its stand alone state.",
	"url": null,
	"owner": "Cingular Wireless II, LLC",
	"publication_number": "07120424",
	"publication_date": "2006-10-10",
	"application_number": "09802872",
	"application_date": "2001-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for message threat management",
	"summary": "",
	"abstract": "The present invention is directed to systems and methods for detecting unsolicited and threatening communications and communicating threat information related thereto. Threat information is received from one or more sources; such sources can include external security databases and threat information data from one or more application and/or network layer security systems. The received threat information is reduced into a canonical form. Features are extracted from the reduced threat information; these features in conjunction with configuration data such as goals are used to produce rules. In some embodiments, these rules are tested against one or more sets of test data and compared against the same or different goals; if one or more tests fail, the rules are refined until the tests succeed within an acceptable margin of error. The rules are then propagated to one or more application layer security systems.",
	"url": null,
	"owner": "Cipher Trust, Inc.",
	"publication_number": "07096498",
	"publication_date": "2006-08-22",
	"application_number": "10361091",
	"application_date": "2003-02-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enhanced dead reckoning method",
	"summary": "",
	"abstract": "An enhanced dead reckoning method determines the position of a participating vehicle. The participating vehicle is unable to receive signals from global positioning satellites. The position is calculated by way of observed time difference calculations and received signal strength indications. The position is also calculated by communicating with other participating vehicles or egress points.",
	"url": null,
	"owner": "CircumNav Networks, Inc.",
	"publication_number": "07076365",
	"publication_date": "2006-07-11",
	"application_number": "10436691",
	"application_date": "2003-05-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Architecture for a wireless area network node",
	"summary": "",
	"abstract": "A medium access control (MAC) layer for a node of a wireless local area network, which may be used in embedded, host and stand-alone applications, includes a hardware layer and a software layer. The hardware layer is configured to perform time-critical tasks and the software layer is configured to perform non-time critical tasks. The software layer includes multiple modules, such as one or more of a host communication agent, a bridging layer, a network management support module, a SBM-to-TAME conversion module, and a rate estimation module. Further, the software layer acts as the source of and the destination of MAC Service Data Units and is configured as a hierarchical structure in which functional unit blocks for associated elements of the hardware layer communicate with an application layer through respective device drivers and managers. Device drivers and managers communicate through a device manager layer.",
	"url": null,
	"owner": "Cirrus Logic, Inc.",
	"publication_number": "07092374",
	"publication_date": "2006-08-15",
	"application_number": "09671960",
	"application_date": "2000-09-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and methods for requesting an event notification over a network",
	"summary": "",
	"abstract": "The invention is directed to techniques for providing an event notification string over a network to a notification server. An application server includes a notifying application that monitors, or otherwise determines, the occurrence of an event of interest to a target user who uses a device that can receive notification of the event. The notifying application generates an event notification string that indicates that a notification to the target user should be made. The notifying application then sends the event notification string over a network, such as an IP (Internet Protocol) network, to a notification server, which provides an event notification application that processes the event notification string The event notification application determines the identity of the target user, if the event notification string does not provide this information itself, and which devices accessed by the target user should receive the notification. The event notification application then sends event notifications to one or more of the devices.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07069309",
	"publication_date": "2006-06-27",
	"application_number": "09691895",
	"application_date": "2000-10-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application programming interface for modem and ISDN processing",
	"summary": "",
	"abstract": "An application programming interface provides for command and data communication between a user, application or driver and a telephone data processing system which provides communication between a host computer and a telephone line. The telephone data processing system is capable of processing ISDN telephone calls as well as voice or analog-originated telephone calls. The application programming interface of the invention includes a host interface, an ISDN interface and a modem interface. The host interface receives commands and data from the user. The modem interface and ISDN interface provide commands and data communication between the host interface and the appropriate telephone call processing based on telephone call type. At the top level, the specific call type processing is transparent to the user. That is, the user need not know the type of telephone call, i.e., modem or ISDN, being processed.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07106754",
	"publication_date": "2006-09-12",
	"application_number": "10071502",
	"application_date": "2002-02-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Arrangement for arbitration of display information from multiple applications for a network enabled display device",
	"summary": "",
	"abstract": "A network-enabled user interface device, for example a VoIP telephony device, includes a display, a user input interface, an interface controller, and an application controller. The display is logically defined to include multiple distinct display areas. The interface controller is configured for generating display elements for the respective display areas based on received display requests, and controlling the user input interface based on received commands, and outputting responses to the application controller. The application controller is configured for supplying the commands to the interface controller and display requests based on execution of application operations. The application operations may be executed locally (i.e., within the user interface device), or remotely (e.g., by a server in communication with the user interface device). Remote application operations may include communications between the application controller and the remote server. The interface controller includes an arbitrator configured for selecting, for each display area, a corresponding display element to be displayed based on the received display requests, and based on determined conditions such as application state based on user input. Hence, multiple display elements for different application services may be selected for simultaneous display in respective display areas on the network-enabled user interface device based on prescribed conditions; moreover, the display may be dynamically changed by the arbitrator based on prescribed conditions, for example user input, an application state change, or a prescribed detected event.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07106298",
	"publication_date": "2006-09-12",
	"application_number": "09955129",
	"application_date": "2001-09-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Arrangement for automated teller machine communications based on bisync to IP conversion",
	"summary": "",
	"abstract": "A novel translation is used to enable the transport of bisync information from an automated teller machine (ATM) to a host computer via an Internet Protocol network, without the necessity of providing a serial data stream to a host server for transport of bisync information. A router includes a serial interface configured for receiving a bisync serial data stream carrying Base-24 protocol data from the ATM. The router is configured for retrieving the Base-24 data from the bisync serial stream, and generating a new header that specifies attributes of the Base-24 message from the ATM; the Base-24 message and the corresponding new header are sent by the router to the host server according to Internet Protocol, enabling the host server to receive the Base-24 message and any associated status information based on the corresponding supplied header. The router also is configured for receiving via the data network an IP packet having a Base-24 message generated by the host server, and the associated header, and generating a bisync header based on the received header. The router can then output a new bisync frame having the generated bisync header and the Base-24 message generated by the host server, for the local ATM via the serial connection.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07151780",
	"publication_date": "2006-12-19",
	"application_number": "10090776",
	"application_date": "2002-03-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Arrangement for common-format notification delivery messages based on notification device type in an IP-based notification architecture",
	"summary": "",
	"abstract": "A notification architecture utilizes multiple processes configured for managing notification operations based on reception of SMTP-based messages within IMAP based message stores. The notification architecture includes a notification process, configured for receiving notification messages for respective subscribers from messaging sources according to a prescribed open protocol such as Internet Protocol. The notification process accesses subscriber profile information from an open protocol-based subscriber directory based on the received notification messages. The notification process determines, for each received notification message, the subscriber's notification preference based on the accessed profile information, and selectively outputs a notification delivery message according to a prescribed open protocol to at least one notification delivery process within the notification architecture based on the subscriber's notification preference. The notification process may have access via the prescribed open protocol to multiple notification delivery processes, each configured for outputting a notification to a subscriber's notification device according to a corresponding device protocol. Hence, subscribers may be notified of events according to their respective preferences, including subscriber device type, or time of notification. The notification process also generates the notification delivery message using selected portions of the notification information and subscriber information based on the notification device type, providing a common format for device specific notification messages. Hence, each notification delivery process can receive device specific notification messages according to a common format from the notification process or another external process.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07092497",
	"publication_date": "2006-08-15",
	"application_number": "10704764",
	"application_date": "2003-11-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Communicating messages in a multiple communication protocol network",
	"summary": "",
	"abstract": "A method for communicating messages in a multiple communication protocol network is disclosed. A first message is received at a first signaling adapter. The first message is based on a first communication protocol. A second message is received at a second signaling adapter. The second message is based on a second communication protocol. The first message is converted from the first communication protocol to a generic protocol, and the second message is converted from the second communication protocol to the generic protocol. The first message and the second message are received at a signaling adapter interface. The first signaling adapter and the second signaling adapter are detachable from the signaling adapter interface. The first message and the second message are sent to a network component.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07058082",
	"publication_date": "2006-06-06",
	"application_number": "09948420",
	"application_date": "2001-09-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer security and management system",
	"summary": "",
	"abstract": "The present invention provides a generic distributed command, control, and communication framework that allows computer systems, devices, and operational personnel to interact with the network as a unified entity. The present invention provides these services by building upon a core communication architecture that permits local or remote execution of mobile program code, static execution of program code, flexible communication formats, self-healing network techniques, and expansion by the addition of new system modules, software handlers, or mobile autonomous agents.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07058968",
	"publication_date": "2006-06-06",
	"application_number": "09683507",
	"application_date": "2002-01-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Copy server for collaboration and electronic commerce",
	"summary": "",
	"abstract": "Systems and methods for collaborating over the Internet (or an intranet) in which two or more parties, such as a user and an agent, can share dynamic content generated by a web site server. Collaboration can be accomplished on live, dynamic pages without imposing a proxy server between user browsers and the web servers. Mechanisms prevent multiple submissions, and filters can be provided to selectively filter versions of a page for different users.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07010571",
	"publication_date": "2006-03-07",
	"application_number": "10713618",
	"application_date": "2003-11-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data replication for redundant network components",
	"summary": "",
	"abstract": "A method for replicating data for redundant network components is disclosed. An entry of a replication table of a shared memory database is assigned to a stable call. The replication table is associated with a network component operable to process the stable call. Data associated with the stable call is received and is stored in the shared memory database. The entry is updated in response to storing the data. The data is sent to a mate network component of the network component, and the entry is updated in response to sending the data.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07007190",
	"publication_date": "2006-02-28",
	"application_number": "09948216",
	"application_date": "2001-09-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed interactive multimedia system architecture",
	"summary": "",
	"abstract": "Various aspects of an interactive multimedia system and associated methods. In general, the multimedia system employs central and peripheral hubs that function to provide services to a plurality of clients of a call manager server, or manager subsystem. The hubs and subsystem cooperate to serve requests originating in the plurality of clients. The client-server-client architecture allows for distributed processing and resource management. Redundant connections between the various network subsystems and hubs provide survivability. Each subsystem or hub is provided with the ability to initialize or recover from systemic errors, thereby distributing initialization and recovery. Certain of the distributed resources are capable of being managed from other subsystems, thereby allowing sharing of the resources. An open numbering plan allows efficient call treatment of dialed numbers. Call processing is sharable between multiple manager subsystems. Finally, an iterative process is employed to ensure that calls routed through the network travel the shortest possible path.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07058067",
	"publication_date": "2006-06-06",
	"application_number": "09968402",
	"application_date": "2001-09-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic information object cache approach useful in a vocabulary retrieval system",
	"summary": "",
	"abstract": "A concept cache useful in a vocabulary management system stores references to individual information objects that can be retrieved and dynamically assembled into electronic documents. Information objects are organized in one or more hierarchical trees, and references to nodes in the trees are cached. A query processor receives a cache query from a delivery engine that is attempting to dynamically construct an electronic document with content that matches the query. For example, a common Web site query contains a concept and an information type. The cache is searched to identify one or more rows that match the query concept and the query information type. An intersection of the rows is determined, yielding a result set of rows. Index pointers in the rows of the result set lead to stored information objects, which are passed to the delivery engine. The delivery engine assembles the electronic document using the information objects. Unlike past approaches that cache static pages, rapid delivery of dynamic pages is facilitated. Vocabularies and relationships are cached with their references to other objects, as needed, facilitating speed of execution of both the logic of constructing a document and in finding the appropriate cached version of an information object.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07139973",
	"publication_date": "2006-11-21",
	"application_number": "09925163",
	"application_date": "2001-08-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Encryption method and apparatus with forward secrecy and random-access key updating method",
	"summary": "",
	"abstract": "An encryption method and apparatus that provides forward secrecy, by updating the key using a one-way function after each encryption. By providing forward secrecy within a cipher, rather than through a key management system, forward secrecy may be added to cryptographic systems and protocols by using the cipher within an existing framework. A random-access key updating method can efficiently generate one or more future keys in any order. Embodiments are applicable to forward secret ciphers that are used to protect protocols with unreliable transport, to ciphers that are used in multicast or other group settings, and to protection of packets using the IPSec protocols.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07095850",
	"publication_date": "2006-08-22",
	"application_number": "09982375",
	"application_date": "2001-10-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "High availability architecture for network devices",
	"summary": "",
	"abstract": "A method and apparatus allows for continued operation of one or more applications running at a network device with reduced delay despite crashes or failures at that device. The network device includes two or more supervisor cards for running the applications and a plurality of line cards. According to the invention, one supervisor card is designated the active supervisor card and one supervisor card is designated the standby supervisor card. As changes in state and other operating conditions take place on the active supervisor events are generating for passing at least some of this information to the standby supervisor where it is stored. Following a crash or failure of the active supervisor card, the standby becomes the newly active supervisor card. The standby supervisor performs a consistency check with the line cards and resets those that fail the check. The standby supervisor also determines which data records and state information stored at the standby supervisor are valid, and begins running the applications loaded onto the device. Those data records and state information determined by the standby supervisor to be valid are utilized by the applications in continuing their operation, while invalid data records and state information are discarded.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07061858",
	"publication_date": "2006-06-13",
	"application_number": "09714246",
	"application_date": "2000-11-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "IP web based messaging system for localized management of wireless messaging",
	"summary": "",
	"abstract": "An application server, configured for executing a messaging application defined by XML documents, is able to provide messaging services to a calling party for a remote subscriber based on retrieval of subscriber attribute information obtained from a remote information database server (such as LDAP) via an Internet Protocol (IP) network. The application server, upon receiving a voice application operation request having subscriber identifier information from a browser serving the calling party, obtains from the remote information database server attribute information for responding to the voice application operation request based on the subscriber identifier information. The application server generates an HTML document having media content and control tags for personalized execution of the voice application operation based on the attribute information obtained from the standardized database server. The application server also is configured for sending and retrieving messages from a standardized remote messaging server via the IP network.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07124175",
	"publication_date": "2006-10-17",
	"application_number": "10891994",
	"application_date": "2004-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Message aggregator for channelized interface programming",
	"summary": "",
	"abstract": "A message aggregation technique converts procedural instructions to object-based format for efficient transfer from a route processor to line cards of an intermediate node, such as an aggregation router. The message technique applies to any situation where it is desirable to reduce a large number of fine resolution command messages, e.g., instructions for programming interfaces on the line cards, transferred by the route processor over a communications medium to the line cards. In addition, the technique permits reuse of extant procedural code while condensing the resultant line card programming messages.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "06985493",
	"publication_date": "2006-01-10",
	"application_number": "09791251",
	"application_date": "2001-02-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for a rearrangeably non-blocking switching matrix",
	"summary": "",
	"abstract": "A switching apparatus is disclosed that employs a relatively simple and inexpensive switching matrix, but which avoids interruption of existing connections when connections are added or removed. The switching matrix switches errorlessly by controlling the point in time at which switching occurs. Using such a technique, switching can be performed without disturbing the connections already configured in the switching matrix, and so is referred to herein as being non-blocking. Optionally, the incoming data can be rearranged to provide a larger window of time in which the switching matrix can be switched. In the case of a switch using an optical backplane, this also allows more time for various components of the system (e.g., clock/data recovery units) to re-acquire lock. The switching apparatus includes a switching matrix and control circuitry. The switching matrix has a matrix input, a control input and a number of matrix outputs, and is configured to receive an information stream at the matrix input. The information stream includes a number of portions, while the control circuitry has a control output coupled to the control input. The control circuitry is configured to initially configure the switching matrix to output the information stream at a one of the matrix outputs and to subsequently configure the switching matrix to output the information stream at another of the matrix outputs during a period of time during which the one of the portions is transiting the switching matrix.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "06982974",
	"publication_date": "2006-01-03",
	"application_number": "09477166",
	"application_date": "2000-01-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for creating a secure communication channel among multiple event service nodes",
	"summary": "",
	"abstract": "An approach for establishing secure multicast communication among multiple event service nodes is disclosed. The event service nodes, which can be distributed throughout an enterprise domain, are organized in a logical tree that mimics the logical tree arrangement of domains in a directory server system. The attributes of the event service nodes include the group session key and the private keys of the event service nodes that are members of the multicast or broadcast groups. The private keys provide unique identification values for the event service nodes, thereby facilitating distribution of such keys. Because keys as well as key version information are housed in the directory, multicast security can readily be achieved over any number of network domains across the entire enterprise. Key information is stored in, and the logical tree is supported by, a directory service. Replication of the directory accomplishes distribution of keys. Event service nodes may obtain current key information from a local copy of the replicated directory.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07013389",
	"publication_date": "2006-03-14",
	"application_number": "09407785",
	"application_date": "1999-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for distributing and updating private keys of multicast group managers using directory replication",
	"summary": "",
	"abstract": "An approach for establishing secure multicast communication among multiple multicast proxy service nodes is disclosed. The multicast proxy service nodes, which can be distributed throughout an enterprise domain, are organized in a logical tree that mimics the logical tree arrangement of domains in a directory server system. The attributes of the multicast proxy service nodes include the group session key and the private keys of the multicast proxy service nodes that are members of the multicast or broadcast groups. The private keys provide unique identification values for the multicast proxy service nodes, thereby facilitating distribution of such keys. Because keys as well as key version information are housed in the directory, multicast security can be achieved over any number of network domains across the entire enterprise. Key information is stored in, and the logical tree is supported by, a directory service. Replication of the directory accomplishes distribution of keys. Multicast proxy service nodes may obtain current key information from a local copy of the replicated directory.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07103185",
	"publication_date": "2006-09-05",
	"application_number": "09470054",
	"application_date": "1999-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for provisioning network devices using instructions in extensible markup language",
	"summary": "",
	"abstract": "A method is disclosed for carrying out network device provisioning and configuration, and communication of other information to a network device, automatically and in an assured manner. A configuration service receives a request from a network device to provide configuration information. The configuration service retrieves a template representing the configuration from a storage location, e.g., a directory service. The configuration service also retrieves one or more parameter values specific to the device. Device-specific values are instantiated for the generic parameters in the template, based on the retrieved values. The resulting configuration is stored in XML format using XML tags to delimit configuration commands, tested for well-formed-ness, and syntax checked. A reliable transport protocol carries the configuration information to the device. At the device, a configuration agent syntax checks the embedded configuration information, and then applies the configuration information to the device. As a result, automatic network provisioning may be accomplished remotely, without requiring a skilled technician to visit customer premises to carry out configuration. The process may be integrated with an event service to enable multiple devices to concurrently receive re-configuration without special synchronization logic.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07054924",
	"publication_date": "2006-05-30",
	"application_number": "09675921",
	"application_date": "2000-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for retrieving network quality of service policy information from a directory in a quality of service policy management system",
	"summary": "",
	"abstract": "A method and apparatus is provided for retrieving and storing quality of service policy management information using a directory service in a manner that enforces read/write consistency and enables read/write concurrency. A directory information tree manager is created and stored in the directory service. One or more directory information trees are created in the directory service in association with the directory information tree manager. Each directory information tree is associated with a sub-tree that represents quality of service policy information, and each directory information tree has a validity period value. When a process needs quality of service policy management information, the system determines which of the directory information trees is a currently active directory information tree. The QoS information is retrieved from the currently active directory information tree only during a time period within the validity period value thereof.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07099932",
	"publication_date": "2006-08-29",
	"application_number": "09640466",
	"application_date": "2000-08-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for auditing and tracking changes to an existing configuration of a computerized device",
	"summary": "",
	"abstract": "A change controller application, process and system tracks modification to a configuration of a computerized device by receiving a change request indicating a requested change to an existing configuration of the computerized device and preparing a change notification message identifying the requested change to the existing configuration of the computerized device. The change controller transmits the change notification message to at least one change notification recipient and determines if a change acknowledgement is provided in response. If a change acknowledgement is provided from a change notification recipient that indicates confirmation of receipt of the change notification message, the system allows the requested change to the configuration of the computerized device to take place. If the change acknowledgement is not provided from a change notification recipient, the system conditionally operates the computerized device so that a monitoring device networked to the computerized device perceives that a configuration change to the computerized device may have taken place.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07024548",
	"publication_date": "2006-04-04",
	"application_number": "10385028",
	"application_date": "2003-03-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multiple layer information object repository",
	"summary": "",
	"abstract": "Techniques for relating data stored in one or more storage systems for an enterprise include managing information chunks in one or more storage systems. Each chunk comprises a unit of data for storage and retrieval operations. The techniques also include managing a vocabulary database. The vocabulary database includes data structures describing atomic concepts among names in an enterprise-specific vocabulary and data structures describing relationships among the atomic concepts. Content in a document is arranged based at least in part on data in the vocabulary database. The content is based at least in part on an information object or u201cchunku201d in the storage system. Thus, content originally unrelated and authored over time by many different persons and organizations can be related using the business vocabulary concepts and relationships in the vocabulary database.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "06983288",
	"publication_date": "2006-01-03",
	"application_number": "09925204",
	"application_date": "2001-08-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Processing a subscriber call in a telecommunications network",
	"summary": "",
	"abstract": "A method for processing subscriber calls is disclosed. A call agent receives signals associated with a first call from a first subscriber of a first point of presence. The first subscriber is associated with a first feature set. The call agent receives signals associated with a second call from a second subscriber of a second point of presence. The second subscriber is associated with a second feature set. A feature server is notified of the first call and the second call. A feature from the first feature set is provided to the first subscriber in response to the notification, and a feature from the second feature set is provided to the second subscriber in response to the notification.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07076042",
	"publication_date": "2006-07-11",
	"application_number": "09948288",
	"application_date": "2001-09-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Providing features to a subscriber in a telecommunications network",
	"summary": "",
	"abstract": "A method for providing a feature in a telecommunications network is disclosed. Signals representing a call are received at a call agent to generate a detection point. The call is associated with a service identifier corresponding to a set of features. A feature server is identified from a number of feature servers. The identified feature server is notified of the detection point. The signals are processed in response to the detection point to provide a feature from the set of features.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07042995",
	"publication_date": "2006-05-09",
	"application_number": "09948314",
	"application_date": "2001-09-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Resource sharing among multiple RSVP sessions",
	"summary": "",
	"abstract": "A technique is provided that correctly allocates resources among data flows while taking maximal advantage of resource sharing opportunities. In accordance with the inventive technique, data flows that share the same session group identifier (SGID) are allowed to share resources if no one data flow within the group is sharing its resources with another data flow that has a different SGID. In addition, resource sharing is allowed between data flows that share the same destination provided that none of the data flows are sharing resources with a data flow from another session.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07143168",
	"publication_date": "2006-11-28",
	"application_number": "10039088",
	"application_date": "2002-01-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Techniques for binding an application with a data exchange format based on tags in comments",
	"summary": "",
	"abstract": "Techniques for binding a data exchange format with a computer program application having source code in a particular language include receiving comment data from a particular file that includes the source code. The comment data includes first data indicating a parameter of the data exchange format. Second data from the particular file is also received. The second data is associated with the comment data and includes a statement that defines a class of data objects in the particular language. Based on the first data and the second data, third data for configuring the data exchange format is generated. When the particular language is Java and the data exchange format is XML, these techniques allow a developer to automatically produce an XML grammar document that is based on Java data objects defined by the developer and that is responsive to the developer's choices for options in the XML grammar. Individual classes or multiple nested classes are handled.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07155705",
	"publication_date": "2006-12-26",
	"application_number": "09994525",
	"application_date": "2001-11-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Techniques for forming electronic documents comprising multiple information types",
	"summary": "",
	"abstract": "Techniques for forming electronic documents include storing a plurality of information types for describing how information is used. Also, a plurality of document types is stored. Each document type includes a unique set of information types. A plurality of units of information is also stored. Each unit of information is associated with an information type. A document is produced based on a particular document type having a particular set of information types, and based on a first set of units of information. Each unit of information of the first set is associated with a corresponding information type in the particular set of information types. This invention allows content to be associated with a particular use, through the information type, so that the content can be incorporated in all documents where such usage is desired. This invention also allows the enterprise to control the method of generating and presenting a particular content or information object based on its use and its temporal data, e.g., how often it is refreshed. Such control is employed in predictive caching technologies. Further, the system can allow and reference which documents or info types point to other documents or info types, thereby enabling the system to replace all affected objects and pointers when changes occur, and facilitating caching all objects that are affected by a change.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07062705",
	"publication_date": "2006-06-13",
	"application_number": "09909108",
	"application_date": "2001-07-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Unified messaging system configured for converting short message service messages to audible messages",
	"summary": "",
	"abstract": "A unified communications system includes an SMS command processor configured for executing prescribed messaging operations based on reception of an SMS message having respective prescribed commands, and a text-to-speech resource configured for controlling conversion of the SMS message into an audible message. The SMS command processor parses the received SMS message for the prescribed command, and executes the prescribed command as necessary. In response to detecting a text-to-speech command, the SMS command processor invokes the text-to-speech resource for conversion of the SMS message into an audible message. The SMS command processor outputs the audible message for delivery of the audible message, for example using a notification service that initiates an outgoing telephone call to a messaging destination specified in the SMS message, or by establishing a voice over IP telephone connection with the messaging destination and playing the audible message.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07092728",
	"publication_date": "2006-08-15",
	"application_number": "09846225",
	"application_date": "2001-05-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Unified messaging system configured for management of short message service-type messages",
	"summary": "",
	"abstract": "A unified communications system is configured for receiving, storing, and/or sending SMS messages based on management of the SMS messages according to a prescribed open standards-based protocol. The unified communications system includes an SMS module configured for receiving SMS messages according to SMPP protocol. The SMS module obtains source and destination information from the received SMS message, and accesses a subscriber profile directory for subscriber profile information based on at least one of the source and destination information. The SMS module generates a common format message that includes the SMS message, and selectively supplies the common format message to selected destinations based on the accessed subscriber profile information. The common format message may be stored in a prescribed message store, for example an IMAP directory, or output as an e-mail message to a prescribed destination. The SMS module also is configured for selectively supplying stored messages to a unified messaging subscriber as an SMS message based on the profile information on the unified messaging subscriber. Hence, the unified communications system enables SMS messaging users to send SMS messages to non SMS-type devices (e.g., telephones, e-mail clients, etc.) and retrieve stored common format messages (e.g., fax, e-mail, voice messages) using the SMS message system.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07024209",
	"publication_date": "2006-04-04",
	"application_number": "09739687",
	"application_date": "2000-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Unified messaging system using web based application server for management of messages using standardized servers",
	"summary": "",
	"abstract": "A unified web-based voice messaging system uses an application server, configured for executing a voice application defined by XML documents, that accesses subscriber attributes from a standardized information database server (such as LDAP), and messages from a standardized messaging server (such as IMAP), regardless of message format. The application server, upon receiving a request from a browser serving a user, accesses the standardized database server to obtain attribute information for responding to the voice application operation request. The application server generates an HTML document having media content and control tags for personalized execution of the voice application operation based on the attribute information obtained from the standardized database server. The application server also is configured for storing messages for a called party in the standardized messaging server by storing within the message format information that specifies the corresponding message format. Hence, the application server can respond to a request for a stored message from a subscriber by accessing the stored message from the standardized messaging server, and generating an HTML document having media content and control tags for presenting the subscriber with the stored message in a prescribed format based on the message format and the capabilities of the access device used by the subscriber.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "06990514",
	"publication_date": "2006-01-24",
	"application_number": "09588293",
	"application_date": "2000-06-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Virtual loop carrier system with network clock recovery",
	"summary": "",
	"abstract": "A loop carrier system includes a home local area network having plural telephone modules and a hub coupled to in-home telephone wiring. The telephone modules and the hub communicate voice signals over the in-home wiring in a dedicated frequency band above baseband POTS. The hub converts between voice signals and voice packets and is connected to a network access device for transferring the voice packets from the home local area network to a telecommunications network which routes the voice packets to a gateway. The gateway converts between the voice packets and a circuit format compatible with a local digital voice switch. The home local area network includes a timing recovery mechanism which in the absence of a clock that is traceable to the Primary Reference Clock on the public network is robust to clock drift, cell delay variation and cell impairments.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "06982993",
	"publication_date": "2006-01-03",
	"application_number": "09724303",
	"application_date": "2000-11-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for single sign-on user access to multiple web servers",
	"summary": "",
	"abstract": "Methods and systems for single sign-on user access to multiple web servers are provided. A user is authenticated at a first web server (e.g., by user name and password). The first web server provides a web page to the user having a service selector (e.g., a hyperlink comprising the URL of a second web server offering the service indicated by the selector). When the user activates the service selector, the first web server constructs and transmits an encrypted authentication token (e.g., a cookie) from the first web server to a second web server via the user client. The first and second web servers share a sub-domain. The authentication token comprises an expiration time and is digitally signed by the first web server and is authenticated at the second web server. Upon authentication, the second web server allows the user to conduct a session at the second web server.",
	"url": null,
	"owner": "Citicorp Development Center, Inc.",
	"publication_number": "07137006",
	"publication_date": "2006-11-14",
	"application_number": "09668112",
	"application_date": "2000-09-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Reducing the amount of graphical line data transmitted via a low bandwidth transport protocol mechanism",
	"summary": "",
	"abstract": "The performance of distributed systems can be improved by reducing the amount of graphical line data transmitted between a server and a client. The server separates the graphical line data into a plurality of strips. The server then determines a quantized angle and a strip length for each of the strips. The beginning coordinate of the graphical line data is packaged together with the quantized angle or indicia of the quantized angle and the strip length data into a protocol packet and compressed prior to transmission to the client. In one embodiment the strip data transmitted to the client includes a second indicia that a particular strip has been previously transmitted to the client and the client is instructed to form the strip using locally stored data.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07127525",
	"publication_date": "2006-10-24",
	"application_number": "09866520",
	"application_date": "2001-05-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for efficiently reducing graphical display data for transmission over a low bandwidth transport protocol mechanism",
	"summary": "",
	"abstract": "The present invention improves the performance of distributed systems by reducing the amount of graphical data transmitted between an application server and a thin client. The encoding technique used for graphical data is adapted in response to the repetitiveness of the graphical data during a particular client-server session. Indexes are maintained that are indicative of this repetitiveness and which identify a particular location in the client's cache memory storing the graphical data. Where the index is not found, but a fuzzy key indicates a strong likelihood that the graphical object is located at the client, the client's persistent storage memory is searched for a file name corresponding to the fuzzy key and which stores the graphical object therein.",
	"url": null,
	"owner": "Citrix Sytems, Inc.",
	"publication_number": "07028025",
	"publication_date": "2006-04-11",
	"application_number": "09866531",
	"application_date": "2001-05-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program product for collecting information about a network user",
	"summary": "",
	"abstract": "A system, method and computer program product are disclosed for collecting information about a user. A set of one or more rules for collecting information is obtained by a first application on a client. The first application is utilized to monitor a second application on the client in communication with the network for information that satisfies one or more rules of the set of rules. The second application is utilized by a user to access sites coupled to the network. Information that that satisfies one or more rules of the set of rules is collected from the second application utilizing the first application. At least a portion of the collected information is stored on the client utilizing the first application. Content is received via the network for presentment by the first application based on the portion of the collected information stored on the client.",
	"url": null,
	"owner": "Claria Corporation",
	"publication_number": "07149704",
	"publication_date": "2006-12-12",
	"application_number": "10056932",
	"application_date": "2002-01-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program product for auditing XML messages in a network-based message stream",
	"summary": "",
	"abstract": "A system, method and computer program product for auditing a message in a message stream are disclosed. Messages in a message stream are captured including at least one message in an extensible markup language (XML) format. Each message in the XML format is then extracted from the captured messages and has a timestamp applied thereto. Each timestamped message in the XML format is then stored in a memory.",
	"url": null,
	"owner": "Claymore Systems, Inc.",
	"publication_number": "07124299",
	"publication_date": "2006-10-17",
	"application_number": "09861264",
	"application_date": "2001-05-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing virtual network attached storage using excess distributed storage capacity",
	"summary": "",
	"abstract": "A system and method are disclosed for using free storage capacity on a plurality of storage media as a virtual storage device on a computer network comprising a plurality of computers. A first portion of each storage medium stores data. To implement Virtual Network Attached Storage (VNAS), the respective u201cfreeu201d second portions of each storage medium are aggregated into a shared storage volume. Computers on the network may mount the shared storage volume at one of a plurality of mount points and may store data on the shared storage volume. VNAS may be implemented in a peer-to-peer manner whereby each computer acts as a server for the data stored on its part of the shared storage volume (i.e., the second portion of its storage media). VNAS may be used to implement a system and method for managing data fail-over.",
	"url": null,
	"owner": "ClearCube Technology, Inc.",
	"publication_number": "07139809",
	"publication_date": "2006-11-21",
	"application_number": "10301563",
	"application_date": "2002-11-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Collection makefile generator",
	"summary": "",
	"abstract": "Collection makefile generators generate comprehensive makefiles for processing collections of computer files. In operation, the present collection makefile generator dynamically discovers collection content files, classifies them according to content type and required processing actions, and then generates a makefile for performing those actions. Importantly, all build order dependencies are properly maintained among multiple collection products and among individual collection content files. Automated collection makefile generators drastically improve the productivity of human workers by effectively reducing makefile creation and maintenance costs to zero. Collection makefile generators thus enable humans to easily generate complex makefiles in an automated, scalable way that was not previously possible.",
	"url": null,
	"owner": "Codefast, Inc.",
	"publication_number": "07003759",
	"publication_date": "2006-02-21",
	"application_number": "09885077",
	"application_date": "2001-06-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automated real-time site survey in a shared frequency band environment",
	"summary": "",
	"abstract": "An intelligent spectrum management (ISM) system and method that includes sophisticated features to detect, classify, and locate sources of RF activity. The system comprises one or more radio sensor devices positioned at various locations in a region where activity in a shared radio frequency band is occurring. A server is coupled to the radio sensor devices and aggregates the data generated by the sensor devices. The server receives data from each of the plurality of sensor devices and executes functions to process the data. One feature of the system is to correlate data collected from the sensor or from suitably equipped devices that operate (and may move about) in a space with locations where provocation of that data occurs. To this end, radio frequency energy is received at each of a plurality of known positions (e.g., the sensors) in a space. The positions in the space of one or more devices emitting radio frequency energy in the space is determined from the received radio frequency energy at the plurality of known positions (e.g., the sensors). A variety of positioning techniques may be employed, such as received signal strength, time-difference-of arrival, time-of-arrival, etc. Activity data representing characteristics of received radio frequency energy in the space is generated at the sensors or at suitable equipped devices that may move about the space. The server correlates the activity data with the positions in the space that are associated with the provocation of the activity data.",
	"url": null,
	"owner": "Cognio, Inc.",
	"publication_number": "07110756",
	"publication_date": "2006-09-19",
	"application_number": "10909455",
	"application_date": "2004-08-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Deploying multiple enterprise planning models across clusters of application servers",
	"summary": "",
	"abstract": "An enterprise planning system includes a plurality of application servers, and an administration console to generate a deployment map that associates each of a set of enterprise planning models with a respective set of the application servers. The administration console, either automatically or in response to input from a system administrator, may finely control the allocation of computing resources to enterprise planning. The administrator console may adjust the deployment map based on approaching deadlines for the enterprise planning activities. When administrating a task associated with an enterprise planning activity, the administration console may break the task into a number of jobs, each job associated with a different slice of the model in accordance with the organizational hierarchy defined by the model. Consequently, allocation of computing resources to enterprise planning may be finely controlled, and may be adjusted to meet the current needs within the organizational hierarchy.",
	"url": null,
	"owner": "Cognos Incorporated",
	"publication_number": "07072822",
	"publication_date": "2006-07-04",
	"application_number": "10262651",
	"application_date": "2002-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Real-time aggregation of data within a transactional data area of an enterprise planning environment",
	"summary": "",
	"abstract": "An enterprise business planning system includes a database having a relational data area and a transactional data area, and a server to store within the transactional data area contribution data received from a set of enterprise contributors. The server publishes the contribution data from the transactional data area to the relational data area. The transactional data area may include a set of contribution slots and a set of aggregations slots hierarchically related in accordance with an enterprise model. The relational area includes a set of related tables defined in accordance with the model. The transactional data area supports real-time interaction with the enterprise contributors, while the relational data area allows detailed statistical analysis and report generation.",
	"url": null,
	"owner": "Cognos Incorporated",
	"publication_number": "07111007",
	"publication_date": "2006-09-19",
	"application_number": "10855634",
	"application_date": "2004-05-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for replacing a cursor image in connection with displaying the contents of a web page",
	"summary": "",
	"abstract": "A system for modifying a cursor image, as displayed on a video monitor of a remote terminal, to a specific image having a desired shape and appearance. The system stores cursor image data corresponding to the specific image, and a cursor display code. The cursor display code contains information in response to which the cursor image is modified to the specific image. A server computer transmits specified information to the remote terminal. The information includes at least one cursor display instruction. The cursor display instruction is operable to modify, in conjunction with the cursor information and the cursor image data, a cursor image displayed by a display of the remote terminal in the shape and appearance of the specific image.",
	"url": null,
	"owner": "Comet Systems, Inc.",
	"publication_number": "07111254",
	"publication_date": "2006-09-19",
	"application_number": "09358210",
	"application_date": "1999-07-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Subscriber migration system",
	"summary": "",
	"abstract": "The present invention is a system that uses a migration server to access voicemail of a source system through a front-end switch via a telephony interface, obtain voice messages stored on the source system and store them on a destination system via a data interface. A host processor initiates a migration based on a mailbox migration status stored in a host database and controls the switch to provide a path from the migration server to the source system. The host processor also controls call flow and initiates pass code (PIN) digit capture of a subscriber's pass code by the switch for mailboxes to be migrated. Call flow control includes determining to which system to route an arriving call based on migration status and determining whether to output a message-waiting indicator for newly stored messages. A migration server controls call tree navigation aspects of call flow during migration. Automated speech recognition is used to help capture the voice message as opposed to the voice message envelope and to capture message attribute information as well as the subscriber's greeting and voice announcement, and to assist in voicemail menu navigation.",
	"url": null,
	"owner": "Common Voices LLC",
	"publication_number": "07085554",
	"publication_date": "2006-08-01",
	"application_number": "10350087",
	"application_date": "2003-01-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application response monitor",
	"summary": "",
	"abstract": "A computer-based method of formatting rules for monitoring application responsiveness, the method including defining a collection of resources, each such resource being a source of application events; and defining a first transaction as a timeframe for measuring application responsiveness. The first transaction includes a pattern of application events from resources in the collection of resources, the pattern being defined as a block of constructs, wherein each construct in the block of constructs is selected from a group of construct syntaxes consisting of an event construct syntax, a choice construct syntax, a sequence construct syntax, and a last construct syntax. The the event construct syntax specifies a category of application events for the pattern to accept; the choice construct syntax specifies an option set of constructs from the group of construct syntaxes, any one of which is acceptable to the pattern; the sequence construct syntax specifies a sequence of constructs from the group of construct syntaxes, for the pattern to accept sequentially; and the last construct syntax specifies a final set of constructs from the group of construct syntaxes, such that the final set of constructs must be satisfied for the pattern to be matched.",
	"url": null,
	"owner": "Computer Associates Think, Inc.",
	"publication_number": "07072800",
	"publication_date": "2006-07-04",
	"application_number": "10665580",
	"application_date": "2003-09-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for maintaining data integrity across distributed computer systems",
	"summary": "",
	"abstract": "A method and apparatus are generally disclosed for maintaining data integrity across distributed computer systems. In one embodiment, the method of the invention includes the step of transmitting an object from a server application to a client application. The method also includes the step of transmitting an object state from the server application to the client application. The method further includes the steps of synchronizing the object and object state between the server application and the client application, and updating the object by invoking a server application method after the step of synchronizing. An apparatus and article of manufacture for carrying out the steps of the method are also disclosed.",
	"url": null,
	"owner": "Computer Associates Think, Inc.",
	"publication_number": "07003587",
	"publication_date": "2006-02-21",
	"application_number": "09559237",
	"application_date": "2000-04-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Using kernel level simulation techniques to improve application program robustness",
	"summary": "",
	"abstract": "A method and system for simulating system conditions at a kernel-level is provided. In one aspect, process identifiers of processes for which simulation is to be performed are transmitted along with simulation pattern or rules from a user-space to a kernel space. Emulator in the kernel space intercepts system calls invoked by processes running in the user space. If the system calls originated from the one or more processes for which emulation was to be performed, return results according to the simulation pattern are generated and returned to the calling process.",
	"url": null,
	"owner": "Computer Associates Think, Inc.",
	"publication_number": "07130786",
	"publication_date": "2006-10-31",
	"application_number": "10777837",
	"application_date": "2004-02-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for synchronizing copies of data in a computer system",
	"summary": "",
	"abstract": "An improved synchronization system and method for copies of data in a computer system. The computer system comprises a cluster, wherein each computer in the cluster may store a local copy of a data set along with a validity flag for the local copy. The computer system further comprises a coupling system which is connected to each of the computers in the cluster through a coupling system interface program, wherein the coupling system is configured to coordinate the data sharing and workload of the cluster. The computer system also comprises an external data storage shared by the computers in the cluster. One of the computers may read a first copy of the data set from a primary data set on the external data storage. The computer may then store the first copy locally and set a first validity flag to indicate that the first copy is valid. Another computer, server, or application program may make a second copy of the primary data set and set a second validity flag to valid. If the first copy is modified, then the second validity flag is set to invalid. The second copy may then be replaced with the modified copy, and the second validity flag may be set to valid again. A coupling system interface program may comprise an application programming interface for data synchronization, wherein the application programming interface is accessible by a plurality of application programs.",
	"url": null,
	"owner": "Computer Sciences Corporation",
	"publication_number": "07130924",
	"publication_date": "2006-10-31",
	"application_number": "11243461",
	"application_date": "2005-10-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Communications system using rings architecture",
	"summary": "",
	"abstract": "Systems and methods are provided for implementing: a rings architecture for communications and data handling systems; an enumeration process for automatically configuring the ring topology; automatic routing of messages through bridges; extending a ring topology to external devices; write-ahead functionality to promote efficiency; wait-till-reset operation resumption; in-vivo scan through rings topology; staggered clocking arrangement; and stray message detection and eradication. Other inventive elements conveyed include: an architectural overview of a packet processor; a programming model for a packet processor; an instruction pipeline for a packet processor; and use of a packet processor as a module on a rings-based architecture. Additional inventive elements conveyed include: an architectural overview of a communications processor; a data path protocol support model for a communications processor; an exemplary network processor employed as the core packet processor for the communications processor; an exemplary rings-based SOC switch fabric architecture; and a variety of quality of support features.",
	"url": null,
	"owner": "Conexant, Inc.",
	"publication_number": "07103008",
	"publication_date": "2006-09-05",
	"application_number": "10064340",
	"application_date": "2002-07-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for creating a virtual storage volume with a file size independent of a file size limitation",
	"summary": "",
	"abstract": "A method and apparatus for creating a virtual storage volume with a file size independent of a file size limitation of a computer. In one embodiment, a storage area is randomly selected from among a plurality of available storage areas. A determination is made as to whether the selected storage area contains at least a predetermined amount of free space. If so, the predetermined amount of free space is allocated on the selected storage area to create an allocated storage area. A symbolic link to the allocated storage area is written in a directory associated with the virtual storage volume. Data destined for the virtual storage volume is then written in the allocated storage area.",
	"url": null,
	"owner": "ConocoPhillips Company",
	"publication_number": "07136981",
	"publication_date": "2006-11-14",
	"application_number": "09951113",
	"application_date": "2001-09-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for voice and data communications including hybrid key system/PBX functionality",
	"summary": "",
	"abstract": "A method for operating an integrated communications system providing voice and data communications to a plurality of users and simulating a key system. An outside line appearance is provided on a telephone coupled to the system; the outside line appearance is associated with a predetermined outside telecommunications trunk and has associated therewith a button and a lighting implement. In response to activation of the button, a lighting condition of the lighting implement is changed and a dial tone to the telephone by the integrated system. Digits are entered by a user depressing keys on the telephone and collected by the system. Restriction rule are applied to determine if a telephone number dialed by the user is restricted, and if restricted an error tone is provided. Caller ID information may be determined for the user. A determination is made as to whether the outside telecommunications trunk is available, and if not available an error indication is provided, and if available the caller ID information is applied and a call is initiated via the predetermined outside telecommunications trunk. Upon completion of the call, call statistics for the call in the integrated system are recorded within the system. The integrated system simulates a key system for the user and the particular telecommunications trunk, wherein for other users the integrates provided PBX telephone services.",
	"url": null,
	"owner": "Converged Data Solutions LLC",
	"publication_number": "07006614",
	"publication_date": "2006-02-28",
	"application_number": "10188002",
	"application_date": "2002-07-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for processing telephone calls by IVR",
	"summary": "",
	"abstract": "The present invention relates generally to voice response systems. Specifically, this invention relates to an interactive voice response client using script engines to control various voice processing systems. In a preferred embodiment, a customer dials a designated phone number and is connected to a main switch of the system. The switch sends a message pertaining to the call to a Computer Telephony Integration system, which in turn sends a signal to an IVR Engine. The IVR Engine is adapted to send and receive data from the caller. The IVR Engine also interacts with a Script Engine that is adapted to run any appropriate scripts, such as a script to apply business rules or logic. The Script Engine sends instructions to the IVR Engine, which are then passed on to the caller. Responses from the caller to the IVR may then be passed back to the Main Script Engine. This process repeats itself until all data is gathered or the call is terminated.",
	"url": null,
	"owner": "Convergys CMG Utah Inc.",
	"publication_number": "07076032",
	"publication_date": "2006-07-11",
	"application_number": "09593795",
	"application_date": "2000-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for database conversion",
	"summary": "",
	"abstract": "A database conversion engine comprising a method and system to convert business information residing on one system to another system. A generic, extensible, scalable conversion engine may perform conversion of source data to target data as per mapping instructions/specifications, target schema specifications, and a source extract format specification without the need for code changes to the engine itself for subsequent conversions. A scheduler component may implement a scalable architecture capable of voluminous data crunching operations. Multi-level validation of the incoming source, data may also be provided by the system. A mechanism may provide data feeds to third-party systems as a part of business data conversion. An English-like, XML-based (extensible markup language), user-friendly, extensible data markup language may be further provided to specify the mapping instructions directly or via a GUI (graphical user interface). The system and method employs a business-centric approach to data conversion that determines the basic business object that is the building block of a given conversion. This approach facilitates identification of basic minimum required data for conversion leading to efficiencies in volume of data, performance, validations, reusability, and conversion turnover time.",
	"url": null,
	"owner": "Convergys CMG Utah, Inc.",
	"publication_number": "06996589",
	"publication_date": "2006-02-07",
	"application_number": "10050273",
	"application_date": "2002-01-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and processes for call and call feature administration on a telecommunications network",
	"summary": "",
	"abstract": "Improved systems and methods for call and call feature setup, administration and processing on PSTN and other telecommunications networks are provided. Calls are set up on a service plane of a conceptual switch that includes a switch plane, control plane, and service plane that are analogous to the OSI layered model of networks including a physical layer, network layer and application layer. Call set-up logic is separated from the switching fabric, allowing for flexible, on-demand, modification of service options using software while maintaining the same switching fabric in hardware. Call set-up is accomplished by a call request made upon connection of a call to the switch. This causes a call agent to search an eXtensible Markup Language knowledge base to find a web page corresponding to the initiating caller. The Web page may be collocated with the switch or on a LAN with the switch or on the u201cWeb,u201d even on the caller's termination equipment (telephone).",
	"url": null,
	"owner": "CopperCom, Inc.",
	"publication_number": "07069291",
	"publication_date": "2006-06-27",
	"application_number": "10172782",
	"application_date": "2002-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Limited-use browser and security system",
	"summary": "",
	"abstract": "A limited-use browser and related security system control access to content stored on a server computer linked to a network. The security system secures the content on the server and only permits it to be downloaded to a client computer running the limited-user browser or a general purpose browser executing an add-in security module providing the same functions as the limited-user browser. The limited-use browser or module secures the downloaded content on the client computer and displays it in a u201cview-onlyu201d mode. While the secured content is being displayed, menu selections, key combination, or pointing device commands initiated on the client computer that would modify the content or create a copy on another medium are either disabled as a default or monitored to determine if the action is permitted.",
	"url": null,
	"owner": "Copyright Clearance Center, Inc.",
	"publication_number": "07130831",
	"publication_date": "2006-10-31",
	"application_number": "09393405",
	"application_date": "1999-09-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Business rules user interface for development of adaptable enterprise applications",
	"summary": "",
	"abstract": "Methods and apparatus, including computer program products, for interacting with a user to define business rules in a declarative manner. The invention operates to display a rule set as an editable list of conditions and an editable list of actions, the conditions and actions being linked to each other by the combination of an editable list of if-values and an editable list of then-values, wherein if-values and then-values are explicitly linked to each other, conditions and if-values are explicitly linked to each other, and then-values and actions are explicitly linked to each other in the displayed lists.",
	"url": null,
	"owner": "Corticon Technologies, Inc.",
	"publication_number": "07020869",
	"publication_date": "2006-03-28",
	"application_number": "09994477",
	"application_date": "2001-11-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for loading applications into a multiapplication embedded system equipped with data processing resources, corresponding embedded system and execution method",
	"summary": "",
	"abstract": "A method for loading applications into an embedded system from a station on which the source code of the application is written, compiled, verified and converted. The conversion includes the performance of the static linking of a plurality of sets of packages, called modules, and an application program interface module or a service module corresponding to an application, and consists of assigning an identifier to each module and a reference number to each class, each method and each attribute. The reference to a method or an attribute in the linked pseudocode of a module is coded in three bytes referencing a class internal or external to the module, the number of the class, and either the number of the method or the number of the attribute, a reference to an external class being interpreted as a reference to an API module.",
	"url": null,
	"owner": "CP8 Technologies",
	"publication_number": "06983460",
	"publication_date": "2006-01-03",
	"application_number": "09889416",
	"application_date": "2000-11-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Reverberation processor based on absorbent all-pass filters",
	"summary": "",
	"abstract": "A reverberation processor includes a chain of absorbent all-pass filters and an absorbent delay line. The decay time can be precisely controlled by controlling the magnitude of the attenuation in the absorbent delay lines. Further, each absorbent delay line includes a low-pass filter for controlling the decay time at a particular high frequency.",
	"url": null,
	"owner": "Creative Technology Ltd",
	"publication_number": "07149314",
	"publication_date": "2006-12-12",
	"application_number": "09731322",
	"application_date": "2000-12-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multi-level security network system",
	"summary": "",
	"abstract": "A network prevents unauthorized users from gaining access to confidential information. The network has various workstations and servers connected by a common medium and through a router to the Internet. The network has two major components, a Network Security Center (NSC) and security network interface cards or devices. The NSC is an administrative workstation through which the network security officer manages the network as a whole as well as the individual security devices. The security devices are interposed between each of workstation, including the NSC, and the common medium and operate at a network layer (layer ) of the protocol hierarchy. The network allows trusted users to access outside information, including the Internet, while stopping outside attackers at their point of entry. At the same time, the network limits an unauthorized insider to information defined in their particular security profile. The user may select which virtual network to access at any given time. The result is trusted access to multiple secure Virtual Private Networks (VPN), all from a single desktop machine.",
	"url": null,
	"owner": "Cryptek, Inc.",
	"publication_number": "07069437",
	"publication_date": "2006-06-27",
	"application_number": "09933760",
	"application_date": "2001-08-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Prescription management system",
	"summary": "",
	"abstract": "A prescription creation software system implemented on a computer is provided. The prescription creation software system includes a prescription creation screen display to allow the data capture of information including, patient-identifying data, prescribed drug identification data and drug quantification data. The prescription creation software system additionally provides a prescriber with drug formulary information identifying at least one drug as a patient's drug formulary preference, prior to completion of the prescription.",
	"url": null,
	"owner": "Cybear, L.L.C.",
	"publication_number": "07072840",
	"publication_date": "2006-07-04",
	"application_number": "09201107",
	"application_date": "1998-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Simultaneously driving a hardware device and a software model during a test",
	"summary": "",
	"abstract": "An apparatus generally comprising a circuit and an interface device is disclosed. The circuit may be configured to (i) generate a plurality of test signals to simultaneously stimulate a device and a model of the device during a test and (ii) receive a plurality of model signals generated by the model in response to the test signals. The interface device may be configured to receive a plurality of device signals generated by the device in response the test signals.",
	"url": null,
	"owner": "Cypress Semiconductor Corp.",
	"publication_number": "07017097",
	"publication_date": "2006-03-21",
	"application_number": "10253960",
	"application_date": "2002-09-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic generation of application program interfaces, source code, interrupts, and datasheets for microcontroller programming",
	"summary": "",
	"abstract": "A method to facilitate programming a microcontroller is disclosed. In one embodiment, after a user configures the circuit by selecting circuit parameters and pin-outs, various items are automatically generated to facilitate programming the microcontroller. The generated items may include: application programming interfaces (APIs) for programming the operation of one or more user modules; source code for realizing the user modules in hardware; interrupt vectors to call interrupt service routines for one or more modules; and a data sheet for the circuit.",
	"url": null,
	"owner": "Cypress Semiconductor Corporation",
	"publication_number": "07086014",
	"publication_date": "2006-08-01",
	"application_number": "09989808",
	"application_date": "2001-11-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for facilitating automated interaction of marketable retail orders and professional trading interest at passively determined prices",
	"summary": "",
	"abstract": "A method and system for an automated trading network that continuously collects invisible, anonymous, binding orders and indications of interest to buy and sell specific equity securities at variable, passively determined prices and, then, executes trades based on these collected orders and indications. In general, the binding orders are collected from retail broker-dealers and the binding indications are collected from institutions. The variable, passively determined, non-discrete prices can be linked to the National Best Bid or Offer (NBBO) for each security, or some other prevailing market indicator, at the time a trade is executed. In an embodiment of the method and system, marketable retail orders which match with one or more collected institutional indications, are routed from a Dynamic Order Router (DOR) at each broker-dealer to a Central Order-Match Box (COMB) to be executed against the one or more matched collected institutional indications. The COMB also manages most other aspects of transactions in the method and system and continuously executes trades against the collected institutional indications at improved prices relative to the NBBO.",
	"url": null,
	"owner": "D.E. Shaw & Company",
	"publication_number": "07035819",
	"publication_date": "2006-04-25",
	"application_number": "09565444",
	"application_date": "2000-05-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for processing identification codes",
	"summary": "",
	"abstract": "A method is described comprising: associating a plurality of data object types with a plurality of data object identification (ID) codes within a first database on a data service and within a second database on a wireless device; querying the second database on the wireless device to determine whether an associated object ID code exists for a first data object type; transmitting the object ID code from the wireless device to the service if the associated object ID code exists, responsive to the first data object type being employed by an application on the device; and transmitting a string representing the first data object type from the wireless device if no associated object ID code exists for the first data object type.",
	"url": null,
	"owner": "Danger, Inc.",
	"publication_number": "07062512",
	"publication_date": "2006-06-13",
	"application_number": "10260155",
	"application_date": "2002-09-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for facilitating internet commerce with outsourced websites",
	"summary": "",
	"abstract": "An e-commerce outsourcing system and method provides hosts with transparent, context-sensitive e-commerce supported pages. The look and feel of a target host is captured for future use. The host is provided with one or more links for inclusion within a page on the host website that correlates with a selected commerce object, which may be contextually related to material in the page. The commerce object can be a product, a product category, or a dynamic selection indicator. Upon activation of the provided link, a visitor computer is served with a page with the look and feel of the host website and with content based upon the associated commerce object. Where the commerce object is a dynamic selection indicator, the content is selected at the time of activation based upon an analysis of the page containing the activated link.",
	"url": null,
	"owner": "DDR Holdings, LLC",
	"publication_number": "06993572",
	"publication_date": "2006-01-31",
	"application_number": "10461997",
	"application_date": "2003-06-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing conditional customization for generating a web site",
	"summary": "",
	"abstract": "A technique for generating a web site in accordance with received data entry by: presenting a prompt for data entry; receiving a data entry in response to the prompt; presenting at least one additional prompt for data entry that is determined at least in part based upon the received data entry; receiving an additional data entry in response to each of the at least one additional prompts; determining at least one characteristic of at least one web site dimension of the web site based on the data entry; generating a multi-dimensional description of the web site based on the determined characteristics; retrieving web site data according to the generated multi-dimensional description of the web site; and generating the web site based upon the generated multi-dimensional description of the web site and the retrieved web site data.",
	"url": null,
	"owner": "Decentrix Inc.",
	"publication_number": "07152207",
	"publication_date": "2006-12-19",
	"application_number": "09652612",
	"application_date": "2000-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Failover system and method for cluster environment",
	"summary": "",
	"abstract": "A failover method and system is provided for a computer system having at least three nodes operating as a cluster. One method includes the steps of detecting failure of one node, determining the weight of at least two surviving nodes, and assigning a failover node based on the determined weights of the surviving nodes. Another method includes the steps detecting failure of one node and determining the time of failure, and assigning a failover node based in part on the determined time of failure. This method may also include the steps of determining a time period during which nodes in the cluster are heavily utilized, and assigning a failover node that is not heavily utilized during that time period.",
	"url": null,
	"owner": "Dell Products L.P.",
	"publication_number": "07139930",
	"publication_date": "2006-11-21",
	"application_number": "11188429",
	"application_date": "2005-07-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for providing and processing locality information in switched networks",
	"summary": "",
	"abstract": "The present invention provides a method for providing locality information in a plurality of switched networks of different network types. The method includes transmitting network-specific information of a caller via a signaling protocol of a service logic located on a service platform. Using the transmitted network-specific information of the caller, a current locality information of the caller is determined by a network-specific location information server. The current locality information is provided in a uniform manner outside of the signaling protocol.",
	"url": null,
	"owner": "Deutsche Telekom AG",
	"publication_number": "07110746",
	"publication_date": "2006-09-19",
	"application_number": "10169487",
	"application_date": "2000-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automated banking machine component authentication system and method",
	"summary": "",
	"abstract": "An automated banking machine is provided which includes a first component and a second component. The first component is operative generate a first hash of a first identity data and a public key associated with the second component. The first component is operative to encrypt a randomly generated secret key using the public key associated with the second component. The second component is operative to receive at least one message from the first component which includes the encrypted secret key and the first hash. The second component is operative to decrypt the secret key with a private key that corresponds to the public key. The second component is operative to permit information associated with a transaction function to be communicated between the first and second components which is encrypted with the secret key when the first hash is determined by the second component to correspond to the first component.",
	"url": null,
	"owner": "Diebold Self-Service Systems division of Diebold, Incorporated",
	"publication_number": "07121460",
	"publication_date": "2006-10-17",
	"application_number": "10620966",
	"application_date": "2003-07-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for a client connection manager",
	"summary": "",
	"abstract": "A method and apparatus for a connection manager have been disclosed. By providing for persistent connections with clients, the connection manager allows for servers to communicate with clients, which would otherwise be inaccessible.",
	"url": null,
	"owner": "Digi International Inc.",
	"publication_number": "07152111",
	"publication_date": "2006-12-19",
	"application_number": "10222076",
	"application_date": "2002-08-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Digital asset management and linking media signals with related data using watermarks",
	"summary": "",
	"abstract": "A method of performing digital asset management of media content. In this method, a watermark reader device reads a watermark embedded into media content. The watermark conveys watermark information, such as a content identifier and creator identifier. The reader forwards the watermark information to a router. The router then uses the watermark information to find a metadata database identifier. It then sends a request for metadata along with the watermark information to the metadata database identified by the metadata database identifier. The metadata database uses the watermark information to find related metadata for the media content and sends the related metadata to the reader device.",
	"url": null,
	"owner": "Digimarc Corporation",
	"publication_number": "07095871",
	"publication_date": "2006-08-22",
	"application_number": "10118468",
	"application_date": "2002-04-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Security clearance card, system and method of reading a security clearance card",
	"summary": "",
	"abstract": "The security clearance card, system and method of the present invention includes a card that stores data to verify the identity of an owner of the card. In addition to other types of information, the card stores biometric data of the owner and other identity data. Different portions of the data may be encrypted with different encryption techniques based upon a predetermined level of security assigned to the portions of the stored data. Reader elements are then capable of reading at least a portion of the encrypted data stored on the security clearance card, and receiving at least one biometric from an individual. The biometric stored in the card is then compared with the biometric of the individual presenting the security clearance card to verify that the holder of the card is the owner of the card.",
	"url": null,
	"owner": "Digital Data Research Company",
	"publication_number": "07137553",
	"publication_date": "2006-11-21",
	"application_number": "10272464",
	"application_date": "2002-10-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for risk management",
	"summary": "",
	"abstract": "An integrated risk management tool includes a persistent object database to store information about actors (individuals and/or groups), physical surroundings, historical events and other information. The risk management tool also includes a decision support system that uses data objects from the database and advanced decision theory techniques, such as Bayesian Networks, to infer the relative risk of an undesirable event. As part of the relative risk calculation, the tool uses a simulation and gaming environment in which artificially intelligent actors interact with the environment to determine susceptibility to the undesired event. Preferred embodiments of the tool also include an open u201cplug-inu201d architecture that allows the tool to interface with existing consequence calculators. The tool also provides facilities for presenting data in a user-friendly manner as well as report generation facilities.",
	"url": null,
	"owner": "Digital Sandbox, Inc.",
	"publication_number": "07130779",
	"publication_date": "2006-10-31",
	"application_number": "09853691",
	"application_date": "2001-05-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for automatic placement of advertising",
	"summary": "",
	"abstract": "A computer system for automatic replacement of direct advertisements in scarce media includes an advertising server for selecting a direct advertisement based on certain criteria. Transaction results of the direct advertisement placement are reported back to the advertising server, and an associated accounting system. In one embodiment, the direct advertiser's server reports transactions back to the advertising server by email. In a second embodiment, a direct proxy server brokers the user's session (or interaction) with the direct advertiser's server, including transaction processing and the direct proxy server reports the results of transactions back to the advertising server and its associated accounting system. A direct proxy provides an independent audit of transactions at a remote direct advertiser's web site. The feedback of the results of direct advertisement transactions provides an efficient utilization of direct advertising space by way of an automated computer system with a predictive model for selection and distribution of direct advertising.",
	"url": null,
	"owner": "Doubleclick Inc.",
	"publication_number": "07039599",
	"publication_date": "2006-05-02",
	"application_number": "09094949",
	"application_date": "1998-06-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for computer aided manufacturing",
	"summary": "",
	"abstract": "A system and method is disclosed for centralizing knowledge and improving programming for manufacturing a part. An embodiment includes a method for manufacturing the part. First, a model of the part is received. Next, a predetermined rule is retrieved from a computer readable medium having a plurality of predetermined rules. A feature of the geometric model is selected by evaluating the retrieved predetermined rule and a process is determined that is associated with the feature. Based on the process, computer code is generated to manufacture the part on a computer controlled machine.",
	"url": null,
	"owner": "DP Technology Corp.",
	"publication_number": "07058472",
	"publication_date": "2006-06-06",
	"application_number": "11016187",
	"application_date": "2004-12-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure access method and system",
	"summary": "",
	"abstract": "A secure electronic content system and method is provided. The system includes a controller including an interface component, a host system coupled to the controller, the host system configured to present content under predetermined conditions, the host system operable with a navigation protocol, the host system further including a system manager operable with an associations component configured to be at least partially run by the host system, a translator configured to provide meanings and generate commands within the host system at least a first digital rights management (DRM) component configured to provide encoding and access rules for the content; and a file system component including a file system application programming interface (API) configured to provide a logical interface between a plurality of components.",
	"url": null,
	"owner": "DPHI Acquisitions, Inc.",
	"publication_number": "07110982",
	"publication_date": "2006-09-19",
	"application_number": "09940083",
	"application_date": "2001-08-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Delivering electronic content",
	"summary": "",
	"abstract": "Delivering electronic content includes providing instructions that cause a computer to collect information including an e-mail address and transmitting the collected information to a receiving computer. The computer that receives the transmitted information selects electronic content based on the received information and e-mails the selected electronic content to the e-mail address included in the received information.",
	"url": null,
	"owner": "DRM Technologies, LLC",
	"publication_number": "07127515",
	"publication_date": "2006-10-24",
	"application_number": "09231714",
	"application_date": "1999-01-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer based browsing computer program product, system and method",
	"summary": "",
	"abstract": "A computer based browsing computer program product, system and method arranges a set of information hosted on a computer into a book or a set of books, where each book includes a subset of the set of information, labels each book with a respective portion of the subset of the set of information, and selects a book from the set of books. Selecting the book from the set of books includes steps of displaying the respective portions of the books as a book document image that includes pages which correspond to the respective portions of the books, generating a command for moving through the pages, displaying an animated image of the pages of the book document being at least one of flipped, scrolled, slid and flashed images, and selecting the book when a selected one of the pages containing a selection portion of the book is earlier displayed.",
	"url": null,
	"owner": "E-Book Systems PTE LTD",
	"publication_number": "07079111",
	"publication_date": "2006-07-18",
	"application_number": "10262960",
	"application_date": "2002-10-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Programmable virtual book system",
	"summary": "",
	"abstract": "An electronic information browsing system that provides a book-like interfaceu2014a virtual booku2014for presenting electronic contents. Specifically, an electronic information browsing system that allows users to configure its behavior via data and program specification encapsulated in a dynamic file format. Configurable behavior includes but not limited to the kind of contents to be displayed in the virtual book, the sources of the contents to be displayed, the static aspects of the virtual book such as the book dimensions and the dynamic aspects of the virtual book such as when a page is to be flipped, how the flipping of pages is contingent upon the execution of certain pre-specified events, etc.",
	"url": null,
	"owner": "E-Book Systems PTE LTD",
	"publication_number": "07009596",
	"publication_date": "2006-03-07",
	"application_number": "10760298",
	"application_date": "2004-01-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for configuring software for distribution",
	"summary": "",
	"abstract": "A method for distributing software is provided. The method includes configuring a first software system of a software suite, such as by installing it on a processor. A first set of configuration data associated with the first software system is then stored. A second software system of the software suite is then configured, and a second set of configuration data associated with the second software system is then stored. Conflict resolution rules are then applied to the first set of configuration data and the second set of configuration data. The first set of configuration data and the second set of configuration data are then compared to determine whether any conflicts exist, and the first set of configuration data and the second set of configuration data are assembled for installation on one or more processors if no conflicts exist.",
	"url": null,
	"owner": "Electronic Data Systems Corporation",
	"publication_number": "06983449",
	"publication_date": "2006-01-03",
	"application_number": "10099331",
	"application_date": "2002-03-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for synchronizing a user password between mainframe and alternative computer operating environments",
	"summary": "",
	"abstract": "A system () for synchronizing a user password between mainframe () and alternative () computer operating environments includes a mainframe access module () that receives a current user password from an associated mainframe client computer () and provides a user with access to selected applications or data in the mainframe operating environment () according to the current user password. The mainframe access module () also receives a new user password in response to providing the access and communicates the new user password. A mainframe platform () coupled to the mainframe access module () receives the new user password, stores the new user password, and communicates the new user password. A messaging platform () coupled to the mainframe platform receives the new user password from the mainframe platform () and communicates a broadcast message containing the new user password. Multiple alternative platforms () each coupled to the messaging platform () receive the broadcast message from the messaging platform () and store the new user password to synchronize the new user password between the mainframe () and alternative () computer operating environments. Each alternative platform () is capable of receiving the new user password from an associated alternative platform client computer () and, in response, providing the user with access to the alternative platform client computer ().",
	"url": null,
	"owner": "Electronics Data Systems Corporation",
	"publication_number": "07055042",
	"publication_date": "2006-05-30",
	"application_number": "09276407",
	"application_date": "1999-03-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for mirroring and restoring data",
	"summary": "",
	"abstract": "An apparatus and method for mirroring data is provided wherein integrity of data on a mirror device is maintained during and after a restore process of data to a standard volume. Because integrity of the mirror is maintained, data from the mirror may be used to perform a later restore to the standard volume if data becomes corrupted, or data is unavailable for any other reason. As a result, the mirror may be used for backup or other operations.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07149787",
	"publication_date": "2006-12-12",
	"application_number": "09876492",
	"application_date": "2001-06-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and methods for operating a computer storage system",
	"summary": "",
	"abstract": "Method and apparatus are disclosed for a computer system including host computers and storage elements. The host computers may be configured into a host domain and the storage elements configured into a storage domain. The storage domain includes a plurality of primary storage devices and a secondary storage device. The secondary storage device may be coupled to a plurality of the primary storage devices through a network. In another embodiment, the secondary storage device may send and receive information from a heterogeneous set of host computers. In another embodiment, connections for transfer of data onto the secondary storage element are created automatically.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07107395",
	"publication_date": "2006-09-12",
	"application_number": "09224637",
	"application_date": "1998-12-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "End-to-end checksumming for read operations",
	"summary": "",
	"abstract": "Described are techniques used in detection of a data corruption in a computer system in connection with read and write operations. For a write operation, a host issues a write request that includes a checksum value determined in accordance with data associated with the write request. The write request is received by a data storage system that performs data validation using the checksum. The host issues a vendor-defined write request operation that includes the checksum as a data field in the request packet sent to the data storage system. For a read operation, a host issues a read request and the data storage system determines a checksum value before servicing the read request. The checksum is validated at the top of the I/O stack on the host by the file system filter driver.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07003702",
	"publication_date": "2006-02-21",
	"application_number": "10229685",
	"application_date": "2002-08-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information replication system having enhanced error detection and recovery",
	"summary": "",
	"abstract": "An information recovery system includes mountable data volume replications that can be examined for enhanced error detection and correction.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07096250",
	"publication_date": "2006-08-22",
	"application_number": "09946078",
	"application_date": "2001-09-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information replication system mounting partial database replications",
	"summary": "",
	"abstract": "An information recovery system mounts partial database replications, such as selected tablespaces, on a target host.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07076685",
	"publication_date": "2006-07-11",
	"application_number": "09946007",
	"application_date": "2001-09-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for initializing logical objects in a data storage system",
	"summary": "",
	"abstract": "A method and apparatus for manipulating data in a storage device that is coupled to a host computer. Manipulations that can be performed by the storage device include moving non-contiguous blocks of data between the host computer and the storage device in a single operation. Other manipulations can be performed directly by the storage device without passing data to or from the host computer and include copying data from one logical object that is defined on the host computer to another, initializing, backing-up, transforming, or securely deleting a logical object that is defined by the host computer with a single command. In one embodiment, an application programming interface is provided that allows a relationship between logical objects on a host computer and storage locations on a storage device to be communicated between the host computer and the storage device. By providing the storage device with knowledge of the relationship between a logical object and the storage locations corresponding to that logical object, data corresponding to the logical object can be manipulated directly by the storage device, rather than by the host computer. In another embodiment, a graphical visualization routine is provided that displays the global mapping of a logical object to a set of physical blocks on the storage device for each layer of mapping below the logical object.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07127556",
	"publication_date": "2006-10-24",
	"application_number": "10953936",
	"application_date": "2004-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for maintaining inventory of logical volumes stored on storage elements",
	"summary": "",
	"abstract": "Method and apparatus for keeping and maintaining inventory of logical entities stored in a computer storage system are disclosed. Identifying information for each user of a logical volume is maintained. As a part of the inventory process, this system may verify that the logical volume is still in use, for example by determining when it was last accessed and if a certain time threshold has been exceeded, verifying with the users of the logical entity that logical entity is no longer needed to be stored at its current location.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07065610",
	"publication_date": "2006-06-20",
	"application_number": "09605044",
	"application_date": "2000-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for managing access to volumes of storage",
	"summary": "",
	"abstract": "One embodiment is directed to a method in a computer system including a host computer and at least one storage system including first and second storage volumes, the host computer including at least one application program executing thereon. The method comprises acts of intercepting and redirecting an access request from the at least one application program to the first storage volume to the second storage volume. Other embodiments are directed to a computer readable medium with instructions for performing the method, a host computer with at least one controller to intercept and redirect the access request. Other aspects are directed to methods in a computer system including a host computer, a first storage system including a first storage volume, and a second storage system including a second storage volume, wherein the second storage volume is a hardware mirror of the first storage volume. One method comprises an act of servicing a read request to the second storage volume while maintaining the second storage volume as an active hardware mirror of the first storage volume. Another method comprises an act of, in response to a failure preventing access from the host computer to the first storage volume, servicing access requests directed to the first storage volume from the second storage volume without reconfiguring the host computer.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07076690",
	"publication_date": "2006-07-11",
	"application_number": "10122556",
	"application_date": "2002-04-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for managing migration of data in a clustered computer system environment",
	"summary": "",
	"abstract": "Methods and apparatus for performing a data migration in a clustered computer system. In one aspect, the availability of the data being migrated is maintained during the migration. In another aspect, a data set is migrated by a transfer utility in one of the hosts in the cluster, and in response to a failure of the host, the migration is resumed without restarting from the beginning point of the data set. In a further embodiment, the hosts in the cluster have agents associated therewith to manage the data migration, and prior to taking at least one action associated with the data migration, the agents coordinate to ensure that the hosts in the cluster are prepared to have the at least one action taken.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07080221",
	"publication_date": "2006-07-18",
	"application_number": "10421401",
	"application_date": "2003-04-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for managing migration of data in a computer system",
	"summary": "",
	"abstract": "Methods and apparatus for migrating a data set. In one embodiment, a migration is paused. In another embodiment, for a migration of data between multiple source/target groups, the migration is initiated by beginning transfer for some groups and queuing others for later processing. In a further embodiment, different transfer vehicles are used for different source/target groups. In a still further embodiment, a transfer vehicle is automatically selected for at least one source/target group.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07080225",
	"publication_date": "2006-07-18",
	"application_number": "10315472",
	"application_date": "2002-12-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for obtaining an identifier for a logical unit of data in a database",
	"summary": "",
	"abstract": "A method and apparatus for obtaining an identifier of a logical unit of data that belongs to a database. In one embodiment, a method of obtaining a first identifier of a logical unit of data that belongs to a database is described. The first identifier uniquely identifies a location of the logical unit of data within the database, and the method includes determining a group of identifiers that includes the first identifier based upon information, concerning a structure of the database, that does not directly specify the group of identifiers. In one aspect of the present invention wherein the logical unit of data has an application space label which can be used by application programs to access the logical unit of data from the database, the method obtains the first identifier without first accessing the logical unit of data from the database using the application space label.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "06993530",
	"publication_date": "2006-01-31",
	"application_number": "10376855",
	"application_date": "2003-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for undoing a data migration in a computer system",
	"summary": "",
	"abstract": "A method and apparatus for managing a migration of a data set from at least one first storage location to at least one second storage location, wherein read requests to the data set from at least one application program executing on a computer system initially are serviced from the at least one first storage location. The data set is copied from the at least one first storage location to the at least one second storage location, and then at least one aspect of the computer system is modified so that read requests to the data set are serviced from the at least one second storage location to achieve the migration. In one embodiment, the migration is subsequently undone by modifying the at least one aspect of the computer system so that read requests to the data set are again serviced from the at least one first storage location. In another embodiment, after the migration is performed, a determination is made as to whether to finalize the migration.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07093088",
	"publication_date": "2006-08-15",
	"application_number": "10421252",
	"application_date": "2003-04-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for controlling devices within storage network",
	"summary": "",
	"abstract": "A management station includes a management application that controls zoning within devices manufactured or provided from different vendors within a network, such as a data storage network. The management application receives a generic zone control command from a user to control zoning within a device in the network. The management application translates the zone control command to one or more vendor specific device zone control commands in a vendor specific device command set that is specifically designed to control zoning within devices from a specific vendor. To perform the translation, the management application identifies the vendor of one or more devices that are affected by the zone control command. Based on this identification, the management application selects an appropriate vendor specific device command set that contains vendor specific zone control commands.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07051101",
	"publication_date": "2006-05-23",
	"application_number": "09661103",
	"application_date": "2000-09-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for managing devices within storage area networks",
	"summary": "",
	"abstract": "Mechanisms and techniques provide a management application providing an enterprise storage area network application programming interface for managing elements in a storage area network. The management application initializes a plurality of access wrappers that each defines operations for management of a respective class of elements operating within the storage area network. The management application provides, to a management client, connection data associated with a specific element associated with one of the plurality of access wrappers. The connection data identifies connection data parameters for performing management of the specific element in the storage area network. The management application receives at least one generic management command for the specific element. The generic management command includes at least a portion of the associated connection data for the specific element. The management application operates at least one access wrapper to translate the at least one generic management command into an operation of at least one vendor-specific command to manage the vendor specific element in the storage area network.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07003527",
	"publication_date": "2006-02-21",
	"application_number": "10186250",
	"application_date": "2002-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus providing remote operation of an application programming interface",
	"summary": "",
	"abstract": "A system can analyze an application programming interface definition to automatically produce software string generator and parser software components allowing remote access to functions within the application programming interface definition by processes that are not natively compatible with the computing system environment in which the application programming interface operates. A first string generator processes can produce an encapsulated function call from a first process, such as a Java-based process, that calls a first function in a first computing environment. A second parser process operates in a second computing environment to receive the encapsulated function call and to invoke a second function call in a second process, such as a C-based process. Results from the second function call are returned to a second string generator which produces an encapsulated response that is returned to a first parser process. The first parser process maps the encapsulated response back into first function call parameters for return to the first process, thus providing access to second functions of the application programming interface by the first process.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07010796",
	"publication_date": "2006-03-07",
	"application_number": "09966615",
	"application_date": "2001-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Power cord retainer",
	"summary": "",
	"abstract": "A power cord retainer for retaining a plug portion of an electrical cord in an electrical socket mounted to a chassis. The retainer includes a pair of resilient, self supporting posts, each one having a distal end configured for affixation to positions of the chassis on opposing sides of the socket and a pair of shoulders, each one affixed to a proximal end of a corresponding one of the pair of posts. The pair of shoulders are configured to form a grove along adjacent inner sides thereof. The groove is axially aligned with the socket. The groove is configured to receive the power cord when the posts are in a stretched position. The shoulders are configured to engage a rear portion of the plug portion and, together with the forces provided by the pair of posts when such posts are enabled to return to an un-stretched position, retain such plug in the socket.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07134902",
	"publication_date": "2006-11-14",
	"application_number": "11238284",
	"application_date": "2005-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Storage automated replication processing",
	"summary": "",
	"abstract": "Described are techniques used in performing data replication processing. Data is replicated on a recovery site from a production site. When a disaster occurs, the state of the replication processing is determined and a restart copy of the data is made available from the recover site. Processing continues based on whether protection mode is desired such that the system executes using the recovery site as the restart with a replicated copy of the data. Data is propagated from the recovery site to the production site to resume operations and replication processing originating from the production site.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07024528",
	"publication_date": "2006-04-04",
	"application_number": "10225021",
	"application_date": "2002-08-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Open systems printing",
	"summary": "",
	"abstract": "A print server for use with an arbitrary number of similar types of source computers and an arbitrary number of similar types of printers, the print server directs print jobs received from the source computers to the printers without the source computers selecting printers for each print job.",
	"url": null,
	"owner": "Emtex Software, Inc.",
	"publication_number": "07072067",
	"publication_date": "2006-07-04",
	"application_number": "10627497",
	"application_date": "2003-07-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integrating user specified extensions into an information access system",
	"summary": "",
	"abstract": "A method and apparatus is provided for securely executing access control functions that may be customized by or on behalf of administrators of information access systems. Examples of such functions include changing a password of a user, determining whether or not data specifying a user and a password identifies an authentic user, and displaying a message indicating whether a login attempt was successful. An access control function is mapped to a digital signature. The digital signature is used to verify that an executable element retrieved for executing the access control function is the proper executable element. The access control functions may be invoked upon the occurrence of access control events, such as a user successfully logging onto an information access system or the modification of a user's password. A mapping contains data used to determine what events are tied to what access control functions, and whether the access control function should be executed. Upon the occurrence of an extension event that is tied to an extension, an executable element for the extension is retrieved. After executing an extension, data is returned to the caller of the extension. The returned data may be a hash table that includes other objects, such as strings or even other hash tables. The access control functions are developed in manner that exploits the power and simplicity of the inheritance feature of object oriented programming.",
	"url": null,
	"owner": "Entrust, Inc.",
	"publication_number": "07155737",
	"publication_date": "2006-12-26",
	"application_number": "09309360",
	"application_date": "1999-05-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for state-less authentication",
	"summary": "",
	"abstract": "Systems and methods for providing user logon and state-less authentication are described in a distributed processing environment. Upon an attempted access by a user to an online resource, transaction, or record, a logon component asks the user to supply a logon ID and a password. The logon component verifies the provided information, and upon successful identification, a security context is constructed from information relevant to the user. The security context is sent to the user and is presented to the system each time the user attempts to invoke a new resource, such as a program object, transaction, record, or certified printer avoiding the need for repeated logon processing.",
	"url": null,
	"owner": "Eoriginal, Inc.",
	"publication_number": "07020645",
	"publication_date": "2006-03-28",
	"application_number": "09839551",
	"application_date": "2001-04-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of and system for controlling task-oriented systems utilizing an application programming interface",
	"summary": "",
	"abstract": "A method of, and system for, using a high-level, task-oriented Application Programming Interface (API) to access a legacy system, the method including the steps of: (a) providing the legacy system, including emulation software for accessing the legacy system; (b) operating a low level API over the emulation software; (c) operating the high-level, task-oriented application programming interface over the low level API, and (d) implementing database access protocol emulation over the high-level API.",
	"url": null,
	"owner": "Ericom Software 8 2001 Ltd.",
	"publication_number": "07107597",
	"publication_date": "2006-09-12",
	"application_number": "09948599",
	"application_date": "2001-09-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for production and authentication of original documents",
	"summary": "",
	"abstract": "A system and method for authenticating documents and content thereof. A counterfeit resistant document recording medium is provided, having thereon a predefined unique document identifier and at least one security feature. The recording medium is thereafter imprinted with document content, which typically varies between documents. The document content is stored in a database, indexed by an associated document identifier. The document may then be authenticated by checking the security feature and comparing the stored document content with a perceived document content. The system provides a number of opportunities for commercial exploitation, including sales of identified recording media, recording of information in a database, on-line authentication transactions, differential accounting for document validations and counterfeit identifications, imprinting devices, AND authentication devices. The system prevents counterfeiting of valuable documents through casual unit by providing both physical and logical security.",
	"url": null,
	"owner": "eSecure.biz, Inc.",
	"publication_number": "07152047",
	"publication_date": "2006-12-19",
	"application_number": "09577533",
	"application_date": "2000-05-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for production and authentication of original documents",
	"summary": "",
	"abstract": "A system and method for authenticating documents and content thereof. A counterfeit resistant document recording medium is provided, having thereon a predefined unique document identifier and at least one security feature. The recording medium is thereafter imprinted with document content, which typically varies between documents. The document content is stored in a database, indexed by an associated document identifier. The document may then be authenticated by checking the security feature and comparing the stored document content with a perceived document content. The system provides a number of opportunities for commercial exploitation, including sales of identified recording media, recording of information in a database, on-line authentication transactions, differential accounting for document validations and counterfeit identifications, imprinting devices, authentication devices, and the like. The system prevents counterfeiting of valuable documents through casual means by providing both physical and logical security.",
	"url": null,
	"owner": "eSecureDocs, Inc.",
	"publication_number": "07080041",
	"publication_date": "2006-07-18",
	"application_number": "10894766",
	"application_date": "2004-07-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Bad pixel correction while preserving features",
	"summary": "",
	"abstract": "A pixel correction system is provided. The pixel correction system includes a dynamic range detection system that receives test pixel data and adjacent pixel data and determines whether the test pixel data is within minimum pixel characteristic data and maximum pixel characteristic data of the adjacent pixel data. For example, if the pixel characteristic data is intensity, the dynamic range detection system detects bad pixels by identifying those pixels having an intensity value that is greater than the maximum intensity value of an adjacent pixel, or less than the minimum intensity value of an adjacent pixel. A dynamic range correction system coupled to the dynamic range detection system adjusts the test pixel data if the test pixel data is not within the maximum pixel characteristic data and the minimum pixel characteristic data, such as by setting the test pixel data equal to the maximum pixel characteristic data if the test pixel data is greater than the maximum pixel characteristic data, and by setting the test pixel data equal to the minimum pixel characteristic data if the test pixel data is less than the minimum pixel characteristic data.",
	"url": null,
	"owner": "ESS Technology, Inc.",
	"publication_number": "07064768",
	"publication_date": "2006-06-20",
	"application_number": "10102410",
	"application_date": "2002-03-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Efficient implementation of a noise removal filter",
	"summary": "",
	"abstract": "A method for noise removal filtering is provided. The method includes selecting a characteristic of a test pixel, such as brightness, and comparing the brightness of the test pixel to the brightness of an adjacent pixel. The noise removal filtering is terminated if the test pixel brightness is equal to the adjacent pixel brightness, such that it can be determined that the test pixel has not been corrupted with noise data.",
	"url": null,
	"owner": "ESS Technology, Inc.",
	"publication_number": "07127121",
	"publication_date": "2006-10-24",
	"application_number": "10102042",
	"application_date": "2002-03-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for a mortgage loan management system",
	"summary": "",
	"abstract": "The automated system of the present invention uses the Federal, State, local and professional regulations and requirements and implementing instructions to generate a plurality of tasks which can be used to control and drive the process of handling a mortgage loan application to completion and settlement in accordance with these regulations. Loan requestors may specify that the system will generate the plurality of required tasks, including tasks required by applicable federal and/or state law, provide the plurality of required tasks to the requester for his execution, and monitor the completion of all required tasks so as to provide a completion certificate to the requestor. Alternatively, loan requestors may specify that the automated system will generate the plurality of required tasks, including tasks required by applicable federal and/or state law, will manage and control the execution of the required tasks, and monitor the completion of all required tasks so as to provide a completion certificate to the requestor.",
	"url": null,
	"owner": "Everbank",
	"publication_number": "06985886",
	"publication_date": "2006-01-10",
	"application_number": "09645799",
	"application_date": "2000-08-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Order processing",
	"summary": "",
	"abstract": "In one aspect, orders for goods or services are enabled to be received from electronic devices situated at multiple points at which orders are to be placed, and the orders are received electronically through a communication medium that enables automatic identification of the location at which each of the orders is placed.",
	"url": null,
	"owner": "Exit41, Inc.",
	"publication_number": "07110964",
	"publication_date": "2006-09-19",
	"application_number": "10652702",
	"application_date": "2003-08-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for using a floating pallet for a digital asset managements system in a plurality of different applications",
	"summary": "",
	"abstract": "An method for using a floating pallet for a digital asset management system in a plurality of different applications is disclosed. A single extension plug-in is created to interface with API's of all of the plurality of different applications, wherein the extension plug-in communicates with the digital asset management system. The floating pallet for said digital asset management system is created in one of the plurality of different applications wherein the floating pallet uses the properties and behaviors of a selected application. An indication that a file has been transferred from said digital asset management system to said selected application is then given.",
	"url": null,
	"owner": "Extensis, Inc.",
	"publication_number": "07124411",
	"publication_date": "2006-10-17",
	"application_number": "09625989",
	"application_date": "2000-07-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information management system",
	"summary": "",
	"abstract": "A system sends an electrical signal communicated over a communication link. Both a system hardware and communication architecture and a software data processing system are provided to permit gathering, transmission, processing, storage, access, presentation and use of the data gathered by the system of the present invention.",
	"url": null,
	"owner": "Eye on Solutions, LLC",
	"publication_number": "07069188",
	"publication_date": "2006-06-27",
	"application_number": "10844283",
	"application_date": "2004-05-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Message integration framework for multi-application systems",
	"summary": "",
	"abstract": "A system and method for integrating messages across multiple applications. The applications may be on one server or on several servers, and each application may service one or more e-clients. The system and method securely segregates the data for each e-client. Further, the system can be dynamically reconfigured by adding or deleting new messages and/or applications, without affecting the performance of the unchanged parts of the system. The various applications using the system need not be aware of the existence of the other applications.",
	"url": null,
	"owner": "Fair Isaac Corporation",
	"publication_number": "07093261",
	"publication_date": "2006-08-15",
	"application_number": "09915492",
	"application_date": "2001-07-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Common service platform and software",
	"summary": "",
	"abstract": "The invention advantageously provides a mobile common service platform and software in telecommunications systems. A common service platform (CSP) according to the invention is an integrated platform that supports both wireless and landline mobile services and business transactions. A CSP system according to the invention includes a common service platform or CSP for integrating a plurality of applications into a single platform for multiple uses in a plurality of communications systems. The CSP is connected with the plurality of applications and a plurality of users. Multiple users in different communications systems having varied communications protocols can utilize generally the same application (as selected by the users) through the CSP. Requests for uses in different communications system are transferred to the CSP for conversion into generally the same format that is acceptable by a selected application. Outputs from the selected application are transferred into formats that are acceptable by the requesting user. The CSP system advantageously enables a communications system to be quickly offered to market in conjunction with value-added services through applications rendered by third party service providers.",
	"url": null,
	"owner": "Far EasTone Telecommunications Co., Ltd.",
	"publication_number": "07088995",
	"publication_date": "2006-08-08",
	"application_number": "10318301",
	"application_date": "2002-12-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributing queries and combining query responses in a fault and performance monitoring system using distributed data gathering and storage",
	"summary": "",
	"abstract": "Combining system fault and performance monitoring using distributed data collection and storage of performance data. Storage requirements are relaxed and real-time performance monitoring is possible. Data collection and storage elements can be easily configured via a central configuration database. The configuration database can be easily updated and changed. A federated user model allows normal end users to monitor devices relevant to the part of a service they are responsible for, while allowing administrative users to view the fault and performance of a service in an end-to-end manner.",
	"url": null,
	"owner": "Fidelia Technology, Inc.",
	"publication_number": "06985944",
	"publication_date": "2006-01-10",
	"application_number": "10286469",
	"application_date": "2002-11-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Copyright protection of digital images transmitted over networks",
	"summary": "",
	"abstract": "A method for protecting digital images distributed over a network, including the steps of receiving a request from a client computer running a network browser, for an original layout page containing references to digital images therein, parsing the original layout page for the references to digital images, generating a modified layout page from the original layout page by replacing at least one of the references to digital images in the original layout page with references to substitute data, and sending the modified layout page to the client computer. A system is also described and claimed.",
	"url": null,
	"owner": "Finjan Software Ltd.",
	"publication_number": "07076469",
	"publication_date": "2006-07-11",
	"application_number": "09731572",
	"application_date": "2000-12-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Copyright protection of digital images transmitted over networks",
	"summary": "",
	"abstract": "A method for protecting digital images distributed over a network, including the steps of receiving a request from a client computer running a network browser, for an original layout page containing references to digital images therein, parsing the original layout page for the references to digital images, generating a modified layout page from the original layout page by replacing at least one of the references to digital images in the original layout page with references to substitute data, and sending the modified layout page to the client computer. A system is also described and claimed.",
	"url": null,
	"owner": "Finjan Software, Ltd",
	"publication_number": "07155744",
	"publication_date": "2006-12-26",
	"application_number": "09730326",
	"application_date": "2000-12-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for controlling use of a dynamically linked software library",
	"summary": "",
	"abstract": "A method for authenticating a software library, including inserting an encrypted checksum into a software library, and in response to loading the software library calculating a checksum of the software library, requesting the encrypted checksum from the library, decrypting the encrypted checksum, and checking whether or not the decrypted checksum agrees with the calculated checksum. A system is also described and claimed.",
	"url": null,
	"owner": "Finjan Software, Ltd",
	"publication_number": "07155743",
	"publication_date": "2006-12-26",
	"application_number": "10202550",
	"application_date": "2002-07-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Arrangement and method for modifying the functionality of a security module",
	"summary": "",
	"abstract": "An arrangement and a method for modifying the functionality of a security module employ a start loading program stored in a FLASH program memory for reprogramming the FLASH program memory by copying a portion of the start loading program into a main memory of the security module. Data of at least a part of an application program, an appertaining certificate code and identifier data are offered in the communication interface of the security module. The data of the part of the application program are stored on a free memory location of the FLASH program memory when the identifier data characterize a successor status for the stored status. The authenticity of the loaded part of the application program is checked with the certificate code, and given authenticity of the loaded part of the application program, it is stored as valid.",
	"url": null,
	"owner": "Francotyp Postalia AG & Co. KG",
	"publication_number": "07043631",
	"publication_date": "2006-05-09",
	"application_number": "10193043",
	"application_date": "2002-07-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Anchored conversations: adhesive, in-context, virtual discussion forums",
	"summary": "",
	"abstract": "Anchored conversations are maintained by a conversation coordinator that retrieves an anchor position from an artifact and maintains a position of a conversation client relative to the retrieved anchor position. The conversations are synchronous and asynchronous communications. The anchors, and hence the conversations may be moved within the artifact or to other artifacts. The conversation clients include detach and re-attach buttons that allow a conversation to be detached and reattached from/to a corresponding anchor. The conversation coordinator manages conversations anchored in any number of different applications. Each conversation is accessible either by invoking an associated anchor within a corresponding artifact (embodied as an ActiveX control, for example), or via the conversation coordinator. A database is connected to each conversation and is a silent participant maintaining a record of the conversation and any metadata regarding the conversation. The database is available for query by a user and/or the conversation coordinator.",
	"url": null,
	"owner": "Fuji Xerox Co., Ltd.",
	"publication_number": "07089278",
	"publication_date": "2006-08-08",
	"application_number": "09391069",
	"application_date": "1999-09-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic video system using multiple cameras",
	"summary": "",
	"abstract": "A camera array captures plural component images which are combined into a single scene from which u201cpanningu201d and u201czoomingu201d within the scene are performed. In one embodiment, each camera of the array is a fixed digital camera. The images from each camera are warped and blended such that the combined image is seamless with respect to each of the component images. Warping of the digital images is performed via pre-calculated non-dynamic equations that are calculated based on a registration of the camera array. The process of registering each camera in the arrays is performed either manually, by selecting corresponding points or sets of points in two or more images, or automatically, by presenting a source object (laser light source, for example) into a scene being captured by the camera array and registering positions of the source object as it appears in each of the images. The warping equations are calculated based on the registration data and each scene captured by the camera array is warped and combined using the same equations determined therefrom. A scene captured by the camera array is zoomed, or selectively steered to an area of interest. This zooming- or steering, being done in the digital domain is performed nearly instantaneously when compared to cameras with mechanical zoom and steering functions.",
	"url": null,
	"owner": "Fuji Xerox Co., Ltd.",
	"publication_number": "07015954",
	"publication_date": "2006-03-21",
	"application_number": "09370406",
	"application_date": "1999-08-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for controllably refilling a fluid quantity sensing fluid ejection head",
	"summary": "",
	"abstract": "A controller for a fluid ejecting system having a refillable container includes an ejection count initializing circuit, routine or application, a count incrementing circuit, routine or application, at least one fluid level indicator, and a fluid quantity circuit, routine or application for determining an expended quantity of fluid, a fluid reserve capacity circuit, routine or application for determining a fluid reserve capacity in the container, an ejection job determining circuit, routine or application for determining a fluid job requirement, a reserve comparing circuit, routine or application to compare the fluid reserve capacity and the fluid job requirement, and a refill condition determining circuit, routine or application to determine that the container is to be refilled. Counts for a ejection amount and a reserve capacity are incremented in response to a specific amount of fluid being ejected from the container. The expended quantity of fluid is based on the ejection amount count subsequent to the fluid level being indicated. The fluid reserve capacity is based on the reserve capacity count and the expended quantity of fluid. The fluid job requirement is based on the expended quantity of fluid and a job number of ejected amounts of fluid. The container is determined to be refilled upon at least a condition wherein the fluid job requirement exceeds the fluid reserve capacity, and a condition wherein the fluid level is below a refill threshold.",
	"url": null,
	"owner": "Fuji Xerox Co., Ltd.",
	"publication_number": "07029083",
	"publication_date": "2006-04-18",
	"application_number": "10721275",
	"application_date": "2003-11-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for creating and updating an interactive 3D visualization of media indices",
	"summary": "",
	"abstract": "Systems and methods for creating and updating interactive 3D visualizations of media indices wherein separate indices are located above and below a ground plane. The indices are organized in table structure defined by two axes and provide links to the media that is indexed. Various visual characteristics of the indices communicate characteristics of the media that is indexed as well as various user defined or group defined information relating to the indexed media.",
	"url": null,
	"owner": "Fuji Xerox Co., Ltd.",
	"publication_number": "07079142",
	"publication_date": "2006-07-18",
	"application_number": "10756397",
	"application_date": "2004-01-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for embedding data by dimensional compression and expansion",
	"summary": "",
	"abstract": "The systems and methods of this invention watermark an original data file using dimensional compression and expansion. The original data file extends along a given dimension and has portions that extend along that given dimension. The information is embedded into the data file by selectively dimensionally compressing or expanding a size of each of some or all of the portions along the given dimension, which can be space or time. The portions of the data file are selectively dimensionally expanded or compressed according to a given encoding scheme. This encoding scheme can use the kind of modification, the relationships between the type of modification between adjacent portions, or the duration or degree of compression or expansion to store a portion of the embedded information. The portions of the embedded information can be individual bits of binary or trinary information, or can be a portion of analog information.",
	"url": null,
	"owner": "Fuji Xerox Co., Ltd.",
	"publication_number": "06999598",
	"publication_date": "2006-02-14",
	"application_number": "10104017",
	"application_date": "2002-03-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed environment type computer system able to achieve high speed consecutive message communications by service layer",
	"summary": "",
	"abstract": "A distributed environment type computer system enabling a service layer to execute consecutive message communications at a high speed provided with a message transferring unit, a service layer for providing a specific additional service to an application, a policy manager for supplying a policy, a communication layer for transferring messages, an analyzing unit for extracting from a message the parameters describing the message, while dividing the parameters into static parameters and dynamic parameters, and a requesting unit for requesting the policy manager to acquire a group of policies allocated to the static parameters using the static parameters.",
	"url": null,
	"owner": "Fujitsu Limited",
	"publication_number": "07051107",
	"publication_date": "2006-05-23",
	"application_number": "10067710",
	"application_date": "2002-02-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for changing power modes based on monitored I/O packets",
	"summary": "",
	"abstract": "A portable information device, a power saving mode switching method, and a recording medium in which a power saving mode switching program is stored, for efficiently suppressing power generation peaks. In an information device having a component () such as a processor and a component () such as a magnetic disk device, it is detected whether it is the peak power generation condition or the peak power completion condition on the basis of access information to the component (), and a power mode change request is given to a power mode changing means (); and the power mode changing means () changes over the component () such as the processor from a normal power mode to a power saving mode where the operating voltage is reduced, the clock frequency is reduced, or the like when the peak power generation condition is detected, and changes over it from the power saving mode to the normal power mode when the peak power completion condition is detected.",
	"url": null,
	"owner": "Fujitsu Limited",
	"publication_number": "07134032",
	"publication_date": "2006-11-07",
	"application_number": "09809106",
	"application_date": "2001-03-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for quality of service (QoS) support in a packet-switched network",
	"summary": "",
	"abstract": "A method and system for transporting traffic having disparate qualities of service classes across a packet-switched network includes receiving at an ingress node of a network a plurality of packets each comprising a quality of service (QoS) class defined externally to the network. Packets having a QoS class comprising delay bound guarantees and a low drop priority are combined into a first internal QoS class. Packets having a QoS class comprising a flexible drop priority and no delay bound guarantees are combined into a second internal QoS class. Packets having a QoS class including no delivery guarantees are combined into a third internal QoS class. The packets are transmitted in the network based on their internal QoS class.",
	"url": null,
	"owner": "Fujitsu Limited",
	"publication_number": "07075927",
	"publication_date": "2006-07-11",
	"application_number": "09848994",
	"application_date": "2001-05-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Remote-controlled robot and robot self-position identification method",
	"summary": "",
	"abstract": "A remotely controlled robot comprises a unit storing the layout plan of a building, a unit receiving a position remotely designated in the layout plan from a remote location and a unit controlling the travel of the robot to the designated position. A self-position identification method is implemented by a robot with a camera whose shooting direction can be changed. The robot takes in advance a panoramic picture of a room where the robot may travel, generates a reference picture by extracting a plurality of block pictures from the panoramic picture and identifies a room where the robot is located, by applying correlation and DP matching, using both a picture taken in the room where the robot is located and the reference picture.",
	"url": null,
	"owner": "Fujitsu Limited",
	"publication_number": "07120519",
	"publication_date": "2006-10-10",
	"application_number": "10978439",
	"application_date": "2004-11-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Service unit for a hub having multiple star interconnect configurations",
	"summary": "",
	"abstract": "Architecture for a SONET network element. The architecture includes an interconnection system for a network element, including a line unit slot, a switch fabric slot, and service unit slots. The line unit slot is connected as a hub to the switch fabric slot and the service unit slots in a first star interconnection configuration. The switch fabric slot is connected as a hub to the line unit slot and the service unit slots in a second star interconnection configuration. The star interconnection configurations provide fault isolation between different units, and allow for replacement of failed units without interfering with the links of other units to the hub. A service unit is provided including a first backplane interface for connecting with an ATM star interconnect configuration within the network element, and a second backplane interface for connecting to an STM star interconnect configuration within the network element.",
	"url": null,
	"owner": "Fujitsu Limited",
	"publication_number": "07012917",
	"publication_date": "2006-03-14",
	"application_number": "10100208",
	"application_date": "2002-03-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for distributing video information over network",
	"summary": "",
	"abstract": "A system and method to adaptively control a process of distributing video information over a network. Each client data terminal subscribing to video services has a performance level reporting unit which sends a performance level message Da indicating what resources and computing power the terminal has. Each terminal also has an error status monitor which sends an error status message De. A video coder produces coded data Dc by coding source video signals, based on the received performance level messages Da and error status messages De. The traffic of this coded data Dc is dynamically varied by a dynamic traffic controller, and a distribution unit transmits the resultant video stream Di over the network, using IP multicasting techniques. A video decoder in each client terminal adaptively decodes the received video stream Di.",
	"url": null,
	"owner": "Fujitsu Limited",
	"publication_number": "06986158",
	"publication_date": "2006-01-10",
	"application_number": "09442885",
	"application_date": "1999-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transport network and method",
	"summary": "",
	"abstract": "A transport network includes a flexible topology for internally defining transport elements. The transport elements each include a port group having a plurality of geographically distributed ports from the transport network. Point-to-multipoint connectivity is defined between the ports in a port group. An identifier represents the port group as a single element to internal and/or external elements for protocol exchanges.",
	"url": null,
	"owner": "Fujitsu Limited",
	"publication_number": "07133403",
	"publication_date": "2006-11-07",
	"application_number": "09588806",
	"application_date": "2000-06-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Unique address space and method for a transport network",
	"summary": "",
	"abstract": "A method and system for routing an externally generated message in a network includes receiving at an ingress port of a network a message from an external network. The message includes Internet protocol (IP) source and destination addresses and message data. The IP source and destination addresses are translated to internal addresses that are non-forwardable in the external network. The message data is routed in the network based on the internal addresses.",
	"url": null,
	"owner": "Fujitsu Limited",
	"publication_number": "07058730",
	"publication_date": "2006-06-06",
	"application_number": "09849003",
	"application_date": "2001-05-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Base rolling engine for data transfer and synchronization system",
	"summary": "",
	"abstract": "A base rolling engine for collapsing data packages stored in a data transfer and synchronization system. A first data package is provided. The first data package has a first transaction including an identification number, an action, and a plurality of fields. Each field has an attribute representing change information. A second data package is also provided. The second data package has a second transaction made subsequent to the first transaction. The second transaction has an identification number, an action, and a field with an attribute. The base rolling engine determines whether the identification number of the second transaction corresponds to the identification number of the first transaction. The base rolling engine also determines whether the field of the second transaction corresponds to one of the fields of the first transaction. When the identification numbers of the first and second transactions correspond to one another, and the field of the second transaction corresponds to one of the fields of the first transaction, the first and second data packages are combined. A combined data package is thus defined having a combined transaction with the identification number. The combined data package replaces the second data package, and the first data package is deleted.",
	"url": null,
	"owner": "fusionOne, Inc.",
	"publication_number": "07035878",
	"publication_date": "2006-04-25",
	"application_number": "09641028",
	"application_date": "2000-08-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Synchronization system application object interface",
	"summary": "",
	"abstract": "In another aspect, an application object is provided on a server coupled to a network. In this aspect, the application object may comprise an application data function call interpreter, the interpreter being accessible to a synchronization engine and an application running on a network coupled device having user data; and a universal data record mapping formatter.",
	"url": null,
	"owner": "fusionOne, Inc.",
	"publication_number": "07007041",
	"publication_date": "2006-02-28",
	"application_number": "09753643",
	"application_date": "2001-01-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and systems to interface navigation operations",
	"summary": "",
	"abstract": "Methods and Systems are provided for interfacing to navigation operations. An application programming interface (API) library is provided having navigation modules, guidance modules, routing modules, and mapping modules. The API is accessible to customized modules operating on a portable electronic device. The customized modules are operable to selectively access and process a number of the modules using the API library while the customized modules are processing on the portable electronic device.",
	"url": null,
	"owner": "Garmin Ltd.",
	"publication_number": "07099771",
	"publication_date": "2006-08-29",
	"application_number": "10822330",
	"application_date": "2004-04-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems to interface navigation operations",
	"summary": "",
	"abstract": "Methods and Systems are provided for interfacing to navigation operations. An application programming interface (API) library is provided having navigation modules, guidance modules, routing modules, and mapping modules. The API is accessible to customized modules operating on a portable electronic device. The customized modules are operable to selectively access and process a number of the modules using the API library while the customized modules are processing on the portable electronic device.",
	"url": null,
	"owner": "Garmin Ltd.",
	"publication_number": "07062374",
	"publication_date": "2006-06-13",
	"application_number": "10822331",
	"application_date": "2004-04-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems to interface navigation operations",
	"summary": "",
	"abstract": "Methods and Systems are provided for interfacing to navigation operations. An application programming interface (API) library is provided having navigation modules, guidance modules, routing modules, and mapping modules. The API is accessible to customized modules operating on a portable electronic device. The customized modules are operable to selectively access and process a number of the modules using the API library while the customized modules are processing on the portable electronic device.",
	"url": null,
	"owner": "Garmin Ltd.",
	"publication_number": "07013216",
	"publication_date": "2006-03-14",
	"application_number": "10246026",
	"application_date": "2002-09-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and software for creating and utilizing broadcast electronic program guide templates",
	"summary": "",
	"abstract": "A method, system and software for broadcasting, receiving, providing and/or configuring an electronic program guide (EPG). A broadcast station broadcasts a template to a system where program information is inserted into the broadcasted template, thereby creating a station specific EPG. The template accesses program information, service information, event information, user interface information, etc., for configuration and presentation of the EPG to the user. User interface assets and other associated information such as program information, tuning information, etc., may be accessed through a local data base or even through a broadcast signal containing the desired information. Event handling instructions are provided for selecting programs and events and accessing service information, tuning information, etc., for selected programs and events. Additionally, application program interfaces are accessible for execution, tuning, program, and scheduling information, etc. Templates are provided through a propagated signal wherein the signal may contain further information relating to channel information, user preference information, application information, return channel information, etc.",
	"url": null,
	"owner": "Gateway Inc.",
	"publication_number": "07134133",
	"publication_date": "2006-11-07",
	"application_number": "09435744",
	"application_date": "1999-11-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Protective relay with embedded web server",
	"summary": "",
	"abstract": "A protective relay having an embedded web server to allow communication with a remote device having a standard web browser package. The relay can receive and transmit HTML files according to the HTTP protocol over a communications network. The relay can receive commands from the remote device, and can generate and return requested data to the remote device.",
	"url": null,
	"owner": "General Electric Company",
	"publication_number": "07085938",
	"publication_date": "2006-08-01",
	"application_number": "09605010",
	"application_date": "2000-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integrating SIP control messaging into existing communication center routing infrastructure",
	"summary": "",
	"abstract": "A software suite is disclosed for routing communication events over a data-packet-network using an IP session initiation and management protocol. The software suite comprises, a server application running on the network for computing and serving routing determinations per request, a session management application running on the network for initiating and managing routed and established session events, a parsing application running on the network for parsing request data received under session initiation protocol and a conversion application running on the network for converting data received under session initiation protocol into a routing request. All received communication requests for routing are in the form of the session initiation protocol wherein they are parsed and converted into routing requests processed by the server application and routed to determined destinations and wherein events are established as session events conducted under the session initiation and management protocol.",
	"url": null,
	"owner": "Genesys Telecommunications Laboratories, Inc.",
	"publication_number": "07120141",
	"publication_date": "2006-10-10",
	"application_number": "09927301",
	"application_date": "2001-08-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for building multimedia applications using interactive multimedia viewers",
	"summary": "",
	"abstract": "A programming application for creating an Interactive Multimedia Application (IMA) which includes access to and rendering of multimedia files stored in a data repository has first selectable software modules providing functionality for an Interactive Multimedia Application other than access to and rendering of the multimedia files, and at least one selectable Interactive Multimedia Viewer (IMV) software module including a code set adapted to access and render media code from multimedia files stored in a data repository and an editable layer allowing a programmer to program limitations limiting access by the IMV to preselected media files. In the programming application the programmer, by selecting, including, and editing software modules the programmer is enabled to create the IMA. IVRs may access and render code of one multimedia type or more than one type, and are adapted to interact with other software modules in an application. Multimedia files stored in the data repository represent multimedia transactions, and are typically characterized with tags according to one or more of date, time, participants, file type, company affiliation of participants, subject or issue, and relationship to other multimedia files, and IMVs are limited through the editable layer to tags of the multimedia files.",
	"url": null,
	"owner": "Genesys Telecommunications Laboratories, Inc.",
	"publication_number": "07039857",
	"publication_date": "2006-05-02",
	"application_number": "09182745",
	"application_date": "1998-10-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for processing multi-media transactions in a communication center",
	"summary": "",
	"abstract": "In a multimedia call center (MMCC) operating through an operating system, a client-specific self-help wizard is provided for active clients and updated periodically with information related to client transaction history with the MMCC. A connected client is presented by the wizard with a selective media function through which the client may a select a media type for interaction and help, and the MMCC will then re-contact the client through the selected media. The client, for example, may select IP or COST telephony, and the MMCC will place a call to the client to a number or IP address listed for the client, and interactivity will then be through an interactive voice response unit. Help information specific to a client is updated in the client's wizard periodically according to ongoing transaction history with the MMCC. The wizard may also monitor client activity with the wizard and make reports available to various persons.",
	"url": null,
	"owner": "Genesys Telecommunications Laboratories, Inc.",
	"publication_number": "07120700",
	"publication_date": "2006-10-10",
	"application_number": "11069382",
	"application_date": "2005-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for and method of providing priority access service and cell load redistribution",
	"summary": "",
	"abstract": "Systems of and methods for providing cellular priority access and topological guidance information to cellular users are described, employing wireless ad hoc network and cellular logic. A centralized aspect of acquiring cell loading information and geographic coordinates is combine with a distributed scatternet forming aspect to enable guidance information to be computed and indicated to the user. The guidance information is reflective of cell loading and congestion status of neighboring cells, as well as the availability of alternative radio resources in the user's current cell or neighboring cells. The system may also be employed in re-distributing cell traffic among cells to optimally balance cell loads.",
	"url": null,
	"owner": "Green Wireless LLC",
	"publication_number": "06985740",
	"publication_date": "2006-01-10",
	"application_number": "10214885",
	"application_date": "2002-08-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for connecting a secure peer-to-peer collaboration system to an external system",
	"summary": "",
	"abstract": "A connection between a secure shared space and an external system is created with a connector tool. The connector tool code is included in an independent agent called a u201cbotu201d that is created by a software developer. Bots run in the background in an automated and unattended manner in a specialized enterprise integration server. Each bot has a unique identity and runs under an account assigned to the enterprise integration server. A bot can be invited to a shared space much as another collaborator. Bots can also invite others to shared spaces. All bots running in the enterprise integration server are administered by a centralized administrative control. This allows account and identity policies to be established and global behaviors, including authentication settings, startup options and scope to be determined centrally. The centralized control allows simple installation, configuration and deployment and administrative control of bot operation and access. It also allows for logging and monitoring of system behavior.",
	"url": null,
	"owner": "Groove Networks, Inc.",
	"publication_number": "07139798",
	"publication_date": "2006-11-21",
	"application_number": "10150757",
	"application_date": "2002-05-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for managing secure collaborative transactions",
	"summary": "",
	"abstract": "Different levels of security are provided in a security system so that users can decide the security level of their own communications. Users can choose a low level of security and maintain the security overhead as low as possible. Alternatively, they can choose higher levels of security with attendant increases in security overhead. The different levels of security are created by the use of one or more of two keys: an encryption key is used to encrypt plaintext data in a delta and a message authentication key is used to authenticate and insure integrity of the data. Two keys are used to avoid re-encrypting the encrypted data for each member of the telespace. In one embodiment, the security level is determined when a telespace is created and remains fixed through out the life of the telespace. For a telespace, the security level may range from no security at all to security between the members of the telespace and outsiders to security between pairs of members of the telespace. In another embodiment, subgroups called u201ctribesu201d can be formed within a telespace and each tribe adopts the security level of the telespace in which it resides.",
	"url": null,
	"owner": "Groove Networks, Incorporated",
	"publication_number": "06986046",
	"publication_date": "2006-01-10",
	"application_number": "09571851",
	"application_date": "2000-05-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for assessing the security posture of a network",
	"summary": "",
	"abstract": "A method and data processing system assesses the security vulnerability of a network by creating a system object model database representing a network. The system object model database supports the information data requirements of disparate network vulnerability analysis programs. The system object model database is exported to the disparate network vulnerability analysis programs. The network is analyzed with each network vulnerability analysis program to produce data results from each program. Data results are correlated to determine the security posture of the network.",
	"url": null,
	"owner": "Harris Corporation",
	"publication_number": "07096502",
	"publication_date": "2006-08-22",
	"application_number": "09500108",
	"application_date": "2000-02-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for determining line-of-sight volume for a specified point",
	"summary": "",
	"abstract": "A system and method determines a Line-of-Sight volume for a specified point within a three dimensional model. Each data file includes data about geometric entities that make-up a geographic feature that may impact a Line-of-Sight from a focus. A processor is operative for processing the data files and creating a series of polygons that represent a shell of a Line-of-Sight volume to the focus at a specified resolution based on the process data files.",
	"url": null,
	"owner": "Harris Corporation",
	"publication_number": "07098915",
	"publication_date": "2006-08-29",
	"application_number": "10950804",
	"application_date": "2004-09-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for interfacing with a multi-level data structure",
	"summary": "",
	"abstract": "The present invention provides a method and system for interfacing with a multi-level data structure by selecting a concept object stored in the multi-level data structure, displaying a first image representing the selected concept object, displaying one or more second images generally above the first image, and displaying a first connector connecting each second image to the first image. Whenever the selected concept object has one or more child concept objects, one or more third images are displayed generally below the first image, and a second connector is displayed connecting each third image to the first image. Whenever the selected concept object has one or more lateral concept objects, one or more fourth images are displayed generally on one or both sides of the first image, and a third connector is displayed connecting each fourth image to the first image.",
	"url": null,
	"owner": "Health Language, Inc.",
	"publication_number": "07120646",
	"publication_date": "2006-10-10",
	"application_number": "09829461",
	"application_date": "2001-04-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for performing event processing in a mixed-language simulator",
	"summary": "",
	"abstract": "An apparatus performs event processing in a mixed-language simulator. The apparatus comprises logic for generating a list of actions to be performed for a given trigger event occurrence and for processing at least some of the listed actions in a source-code-to-HDL-interface domain before performing a context switch from the source-code-to-HDL-interface domain to a source code model domain. By listing actions to be performed for a given trigger event occurrence and then processing listed actions before switching contexts, the amount of context switching between the HDL model domain and the source code model domain that occurs during the simulation is reduced.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07058562",
	"publication_date": "2006-06-06",
	"application_number": "09798485",
	"application_date": "2001-03-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method of communicating changes in states of contractual responsibilities",
	"summary": "",
	"abstract": "It is often difficult to reliably monitor contract performance and receive timely information as to whether a party is actually going to carry out their contractual obligations. Accordingly the invention provides an apparatus and methods for communicating the changes in states of the contractual commitments of contracting parties according to an agreed commitment model and using agreed messaging protocols. There is a storage facility for the commitment data which is accessible by an encoding engine, in addition to a commitment state store that forms a part of the commitment model and stores the known commitment state of parties. The encoding engine encodes commitment data according to the commitment model and data received by an external information source, before passing the message to a messaging module for formatting and sending out to the other contracting party.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07149725",
	"publication_date": "2006-12-12",
	"application_number": "10251428",
	"application_date": "2002-09-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Communication system and method",
	"summary": "",
	"abstract": "The present invention relates to a communication system and method and, more particularly, to a fault tolerant network element for providing fault tolerant call connections in the event of a failure of, for example, a Gatekeeper or other part of a network. Calls set up across a network consume large amounts of resources both throughout the network and at the devices which form the end points of the network. Therefore, even though a call connection may be supported, in the event of the failure of a network element, it is often the case that there is an ungraceful failure or use of resources throughout the network. Accordingly, an aspect of the present invention provides a method for preserving a connection context at a first layer of a communication protocol; the communication protocol comprising a second, higher, signalling layer in which, in response to a switch-over from an active host to a standby host in the event of failure of the former, the connection is terminated in response to receipt of a signalling layer signal other than a disconnect or terminate signal.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07085960",
	"publication_date": "2006-08-01",
	"application_number": "10284050",
	"application_date": "2002-10-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer system operable to revert to a trusted state",
	"summary": "",
	"abstract": "When software is loaded into an operating system kernel and so has access the same memory space as the operating system a problem occurs if the operating system cannot determine in advance whether the operating system will afterwards be in a suitably trusted state or not. By using a high availability cluster in which each System Processing Unit (S, S) has a trusted device, it is possible to gain more trust and a more flexible approach to trust whilst maintaining the high availability properties of the cluster. Software can be loaded onto one of at least two computing platforms (S) of a computing system. Another of the platforms (S) performs integrity tests on the platform (S) carrying the new software to check whether the platform (S) is still in a trusted state. If the tests are passed, then the test results are signed and sent to the platform (S) with the new software and the new software is copied onto the other computing platform (S). If the tests are failed, then the first platform (S) can either be rebooted or returned to the state of the testing platform (S).",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06986042",
	"publication_date": "2006-01-10",
	"application_number": "10110950",
	"application_date": "2001-08-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer systems, virtual storage systems and virtual storage system operational methods",
	"summary": "",
	"abstract": "Computer systems, virtual storage systems, and virtual storage system operational methods are described. According to one aspect, a computer system includes a virtual storage system including a physical storage space, a virtual storage space, and a non-guaranteed available capacity utilized to generate a non-guaranteed snapshot volumes of virtual storage volumes of the virtual storage space, wherein the virtual storage system is configured to monitor the non-guaranteed available capacity and to present a report regarding the non-guaranteed available capacity responsive to the monitoring and a host configured to execute an application wherein generation of a non-guaranteed snapshot volume of at least one of the virtual storage volumes is desired, to access the report to determine the non-guaranteed available capacity, and to issue a request to the virtual storage system to generate the at least one non-guaranteed snapshot volume of the at least one virtual storage volume responsive to the accessing.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07089395",
	"publication_date": "2006-08-08",
	"application_number": "10264957",
	"application_date": "2002-10-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computing apparatus and methods using secure authentication arrangements",
	"summary": "",
	"abstract": "Computing apparatus comprises a memory means storing the instructions of a secure process and an authentication process; a processing means arranged to control the operation of the computing apparatus including by executing the secure process and the authentication process; a user interface means arranged to receive user input and return to the user input; and an interface means for receiving a removable primary token and communication with the token. The token comprises a body supporting a token interface for communicating with the interface means, a token processor; and a token memory adapted to store token data including information for identifying the token and auxiliary token information identifying one or more authorized auxiliary tokens. The processing means is arranged to receive the identity information and the auxiliary token information from the primary token, to authenticate the toke using the authentication process and, if the token is successfully authenticated, permit a user to interact with the secure process via the user interface means. The processing means is arranged to repeatedly authenticate the primary toke and cause the computing platform to suspend interaction between the secure process and the user if authentication is not possible as a result of the removal of the primary token unless the primary token is replaced by an authorized auxiliary token.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07069439",
	"publication_date": "2006-06-27",
	"application_number": "09936132",
	"application_date": "2000-03-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Configurable web-based imaging service that prevents time consuming jobs from printing",
	"summary": "",
	"abstract": "In a web-based imaging environment, a user accesses a destination service (e.g.,representing a printer), which retrieves user's imaging data production options for a processing job. The user selects desired production options, after which the destination service estimates the time duration required to process the user's job based on the selected options. If the estimated time required is greater than a predetermined threshold, the option of processing is disabled and a message is normally displayed to the user. If not, the option to process is enabled. In variations, the user's ability to process is reevaluated as the user selects differing options. In other variations, an administrator specifies the threshold, or specifies multiple user-specific thresholds, and/or thresholds specific to time of day and/or day of week and/or month. In another variation, if the user cannot process to this production device, a link to an alternative device is provided.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07145678",
	"publication_date": "2006-12-05",
	"application_number": "10001574",
	"application_date": "2001-10-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data entry device",
	"summary": "",
	"abstract": "A data entry device is provided. The data entry device includes a key having a first data entry value associated with depressing the key, and one or more additional discrete data entry values associated with deflecting the key in a predetermined direction, where a user-readable indication is provided for each discrete data entry value. The key is adapted for being depressed or deflected by a human fingertip.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07014099",
	"publication_date": "2006-03-21",
	"application_number": "10039048",
	"application_date": "2001-12-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data storage network with host transparent failover controlled by host bus adapter",
	"summary": "",
	"abstract": "A method and host bus adapter for controlling failover and failback processes within a redundant data storage system. The method is carried out by a failover mechanism in a host bus adapter linked to a host server. The system includes a communication fabric providing data paths to pairs of redundant storage controllers managing access to storage devices (such as hard disk drives arranged as RAID). The method includes operating the host bus adapter to detect a failover condition and in response, to match the failover condition to a particular failover action. The failover conditions and corresponding actions are stored in a well-defined rule set accessed by the host bus adapter. The method continues with performing with the host bus adapter the matched failover action. The method is transparent to the host computer device, as the host is not required to participate in the failover processes.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07111084",
	"publication_date": "2006-09-19",
	"application_number": "10035660",
	"application_date": "2001-12-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Deferred memory allocation for application threads",
	"summary": "",
	"abstract": "Various systems and methods are provided that facilitate deferred memory allocation. In one method, an attempt to allocate an amount of memory for an application thread is made. If the attempt was unsuccessful and if the application thread is designated for deferred memory allocation, then the application thread is stored in a holding queue. Once the application thread is stored in the holding queue, periodic attempts are made to reallocate the amount of memory for the application thread.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07069396",
	"publication_date": "2006-06-27",
	"application_number": "10184863",
	"application_date": "2002-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Detector and operational method for a firmware interface",
	"summary": "",
	"abstract": "A detector detects information about a firmware system. The detector includes an interface that receives a generic instruction. The generic instruction may be a function call made through an EFI shell. The detector has a controller communicatively connected to the interface. The controller receives the generic instruction and gathers information about the firmware system. Gathering information about the firmware system permits platform-specific firmware system functions to be written to the firmware system. The controller gathers information about the firmware system by accessing a data-gathering function based on the generic instruction. The controller retrieves the information through the data-gathering function and transfers the information to the interface.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07100031",
	"publication_date": "2006-08-29",
	"application_number": "10107608",
	"application_date": "2002-03-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Determining whether a telephony call is permitted based on permission data",
	"summary": "",
	"abstract": "Apparatus and methods to store permission data relating to security for a system and to receive a request to establish a telephony call. In response to the request, the telephony call is established, and after establishing the telephony call, an indication of a type of the telephony call is detected. Based on permission data relating to security for the system, it is determined whether the type of the telephony call is permitted.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07151823",
	"publication_date": "2006-12-19",
	"application_number": "10666027",
	"application_date": "2003-09-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Disaster recovery system with cascaded resynchronization",
	"summary": "",
	"abstract": "A disaster recovery system with sequenced cascaded resynchronization comprises a plurality of data centers and a distributed control system. The individual data centers comprise a communication interface, a data storage, and a controller. The distributed control system is distributed and executable in the controllers of the plurality of data centers, and is capable of coordinating operations via the communication interfaces of the plurality of data centers to resynchronize a plurality of communication links between data center pairs of the plurality of data centers. The communication links including at least one synchronous link and at least one asynchronous link.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07149919",
	"publication_date": "2006-12-12",
	"application_number": "10440209",
	"application_date": "2003-05-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic class interposition",
	"summary": "",
	"abstract": "Method and apparatus for extending functionality of a first set of classes and methods in an application hosted by a computing arrangement. A mapping is established that maps original class names in the first set to corresponding substitute class names of classes in a second set. The classes in the second set change the functionality of the classes in the first set. In response to loading a class file of a class in the first set, the original class names are replaced with corresponding substitute class names in the class file. Classes referenced by the substitute class names are then instantiated in lieu of classes referenced by the original class names.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07093242",
	"publication_date": "2006-08-15",
	"application_number": "09993229",
	"application_date": "2001-11-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic user interfaces for network services",
	"summary": "",
	"abstract": "In order to assure that services in an network and applications or users in the network are able to communicate and interact with one another a framework is provided that registers the service. The service provides the necessary information, in particular configuration files that are processed by the framework. The framework directly interfaces to a user by way of application or applications used by the users. An interface is established between the application and the framework allowing the user to indirectly communicate to the service by way of the framework. This allows the interface to the service and to the application to be handled by the framework.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07028310",
	"publication_date": "2006-04-11",
	"application_number": "09943940",
	"application_date": "2001-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic commerce system",
	"summary": "",
	"abstract": "A method of brokering a transaction between a consumer and a vendor by a broker, wherein the consumer, the broker and the vendor are all attached to a public network, the consumer having a secure token containing a true consumer identity. The method comprising the steps of: the consumer obtaining a temporary identity from the broker by using the true consumer identity from the secure token; the consumer selecting a purchase to be made from the vendor; the consumer requesting the purchase from the vendor and providing the temporary identity to the vendor; the vendor requesting transaction authorisation from the broker by forwarding the request and the temporary identity to the broker; the broker matching the temporary identity to a current list of temporary identities, and obtaining the true consumer identity; the broker providing authorisation for the transaction based on transaction details and true consumer identity.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07096204",
	"publication_date": "2006-08-22",
	"application_number": "10110280",
	"application_date": "2000-10-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Facility creation process for clustered servers",
	"summary": "",
	"abstract": "A method of creating a facility in a clustered server configuration, includes: creating a facility on a first cluster node; adding facility registry keys to a resource in the cluster group, the registry keys comprising a facility key, a full text key, open database connectivity format keys, and connectivity information keys; performing a fail-over operation of the cluster group from the first cluster node to the second cluster node; resetting a password for the open database connectivity for the added facility; and removing the added facility registry keys to prevent replication back to the first cluster node. An apparatus for providing a facility in a cluster server configuration, includes: a first cluster node; a second cluster node; a shared disk system coupled to the first cluster node and second cluster node; where a facility can be created on the first cluster node.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07010717",
	"publication_date": "2006-03-07",
	"application_number": "10208097",
	"application_date": "2002-07-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Group composition store",
	"summary": "",
	"abstract": "A system for web based imaging comprising: at least one graphic store for storing a plurality of different graphics; a group composition store for storing a plurality of compositions, with each different composition referencing at least one graphic in a graphic store that is external to the group composition store and including data to place the referenced graphic within the composition; and a plurality of different user profiles, each for a different imaging client, with each user profile including a reference to the group composition store.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, l.P.",
	"publication_number": "07073131",
	"publication_date": "2006-07-04",
	"application_number": "09923957",
	"application_date": "2001-08-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Instrumenting a software program and collecting data from the instrumented software program by type",
	"summary": "",
	"abstract": "The XAM architecture that specifies a software program instrumentation and data collection method and system is disclosed. The XAM architecture includes definition of a measurement type hierarchy, the definition of an XAM API that adapts an application program to a local XAM library, and a message protocol, based on XML, through which the XAM library is configured by, and sends collected data to, an XAM services process. Predefined measurement types include primitive measurement types and aggregate measurement types, the latter allowing for significant decrease in data transmission overheads between the XAM library and the XAM services process because of data filtering and processing by XAM library routines.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07111282",
	"publication_date": "2006-09-19",
	"application_number": "09880327",
	"application_date": "2001-06-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Internet usage data recording system and method employing a configurable rule engine for the processing and correlation of network data",
	"summary": "",
	"abstract": "A network usage data recording system and method employing an aggregation rule scheme for processing and correlation of network data is described. In one embodiment, the present invention provides a method for recording network usage. The method includes the step of defining a network data collector including an encapsulator, an aggregator and a data storage system. A set of network accounting data is received via the encapsulator. The network accounting data set is converted to a standard data format. The network accounting data set is processed via the aggregator, including the steps of defining a rule chain and applying the rule chain to the network accounting data set to construct an aggregation tree including creating an aggregated network accounting data set. The aggregated network accounting data set is stored in the data storage system.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07124180",
	"publication_date": "2006-10-17",
	"application_number": "09560032",
	"application_date": "2000-04-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Internet usage data recording system and method with configurable data collector system",
	"summary": "",
	"abstract": "An internet usage data recording system and method is described. In one embodiment, the present invention provides a network usage recording system. The network usage recording system includes a configurable collector. The collector includes an encapsulator for reading a plurality of network data records from a network data source and converting the network data records to a plurality of normalized metered events. An aggregator is provided for processing the normalized metered events to create aggregated normalized metered events. A data storage system is provided, wherein the aggregator periodically stores the aggregated normalized metered events in the data storage system.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07024468",
	"publication_date": "2006-04-04",
	"application_number": "09560509",
	"application_date": "2000-04-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing power consumption based on utilization statistics",
	"summary": "",
	"abstract": "The present invention, in various embodiments, provides techniques for managing system power. In one embodiment, system compute loads and/or system resources invoked by services running on the system consume power. To better manage power consumption, the spare capacity of a system resource is periodically measured, and if this spare capacity is outside a predefined range, then the resource operation is adjusted, e.g., the CPU speed is increased or decreased, so that the spare capacity is within the range. Further, the spare capacity is kept as close to zero as practical, and this spare capacity is determined based on the statistical distribution of a number of utilization values of the resources, which is also taken periodically. The spare capacity is also calculated based on considerations of the probability that the system resources are saturated. In one embodiment, to maintain the services required by a Service Level Agreement (SLA), a correlation between an SLA parameter and a resource utilization is determined. In addition to other factors and the correlation of the parameters, the spare capacity of the resource utilization is adjusted based on the spare capacity of the SLA parameter. Various embodiments include optimizing system performance before calculating system spare capacity, saving power for system groups or clusters, saving power for special conditions such as brown-out, high temperature, etc.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06996728",
	"publication_date": "2006-02-07",
	"application_number": "10133730",
	"application_date": "2002-04-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mechanism for mapping Java objects onto an LDAP repository",
	"summary": "",
	"abstract": "A method and apparatus for dynamically storing objects of an object-oriented programming application in a LDAP repository so that useful information from the objects may be read by other applications are disclosed. Embodiments of the method preferably comprise dynamically determining persistent attributes, which are a subset of each object's attributes, for each object being stored and mapping the persistent attributes to LDAP attributes in the LDAP repository. Embodiments of the invention preferably comprise a persistent data manager that is a component of the object-oriented programming application and that acts as an interface to the LDAP repository, storing objects in the LDAP repository when requested. The objects may be Java objects.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07107595",
	"publication_date": "2006-09-12",
	"application_number": "09827035",
	"application_date": "2001-04-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing print job status",
	"summary": "",
	"abstract": "An apparatus and methods facilitate collection of print job status information. A first method configures a computer to obtain status information for subsequent print jobs to a printer. The first method supplies a proxy printer driver in place of an actual printer driver associated with the printer. The first method may hook a function in the actual printer driver. The first method may also configure the computer to spool RAW datatype to the printer. The first method may also store a unique identifier of the computer in the registry. The first method may also set a flag within the registry so as to indicate that the computer is able to provide status for print jobs on the printer. A second method gathers print status for a print job from a computer to a printer. The second method executes a proxy printer driver while producing the print job, wherein the proxy printer driver is a proxy for an actual printer driver. The second method inserts into the print job a unique identifier of the print job. The second method also queries at least one of a spooler and the printer regarding status of the print job. Optionally, the second method may detect inception of the print job and produce a notification of the status of the print job. In executing the proxy printer driver, the second method preferably receives a call to a function and calls a corresponding function in the actual printer driver. In some embodiments, the proxy printer driver produces RAW data. The apparatus is a computer readable medium on which is embedded a computer program. The program comprises a proxy printer driver translation part, the proxy printer driver translation part being a proxy for an actual printer driver translation part. Optionally, the program comprises one or more of a status configuration utility, a status monitor, a spooler comprising a port monitor, a graphic device interface, a registry, the actual printer driver translation part and an application.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07106465",
	"publication_date": "2006-09-12",
	"application_number": "09702766",
	"application_date": "2000-11-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for comparing firmware images",
	"summary": "",
	"abstract": "A method and system for comparing firmware images of add-in cards of a computer system, and updating if difference exist.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07080243",
	"publication_date": "2006-07-18",
	"application_number": "10439141",
	"application_date": "2003-05-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, computer system, and computer program product for monitoring services of an information technology environment",
	"summary": "",
	"abstract": "The invention is also directed to a corresponding computer system and a corresponding computer program product.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07099938",
	"publication_date": "2006-08-29",
	"application_number": "09816940",
	"application_date": "2001-03-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program product for multi-profile operations and expansive profile operation",
	"summary": "",
	"abstract": "A program product, method and system including machine readable code for accessing compositions, comprising: code for providing access to a plurality of user profiles, with each different user profile including a reference to a different composition store and a different graphics store; and code for selecting one of the plurality of user profiles. In one embodiment, the plurality of user profiles include an internal user profile including a reference to an internal composition store inside a firewall and a reference to a default internal graphic store inside the firewall; and an external user profile including a reference to an external composition store outside the firewall and a reference to a default external graphic store outside the firewall.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07062752",
	"publication_date": "2006-06-13",
	"application_number": "09924058",
	"application_date": "2001-08-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multiple trusted computing environments with verifiable environment identities",
	"summary": "",
	"abstract": "A host computing platform  provides one or more computing environments  and includes a trusted device  arranged to form an integrity metric individual to each computing environment  The integrity metric is provided to a user  in response to an integrity challenge, signed for authentication using a signature key  held by the trusted device. In one embodiment the trusted device  selects a signature key unique to the computing environment  or in a second embodiment the trusted device forms the signed integrity metric including an identity label, in each case such that the user  can verify that the signed integrity metric corresponds to the expected computing environment ",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07076655",
	"publication_date": "2006-07-11",
	"application_number": "10175183",
	"application_date": "2002-06-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Print driver for an extended printing device",
	"summary": "",
	"abstract": "A print driver is provided for use in printing a document from a computing device to an extended printing device are provided, the extended printing device being based upon a base printing device. The print driver typically includes a base module configured to process at least one print operation involving printer-specific attributes of the extended printing device that are shared with the base printing device, and an interface module configured to enable an extended module to be added to the print driver to process at least one print operation involving printer-specific attributes of the extended printing device that are not shared with the base printing device.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07106472",
	"publication_date": "2006-09-12",
	"application_number": "10286119",
	"application_date": "2002-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Printed medium data storage",
	"summary": "",
	"abstract": "A method of, and apparatus for, printing information on a hardcopy medium includes the acceptance of data representing a first information and the acceptance of data representing a second information. Second information is printed in regions on the medium where first information data is not printed. Second information data is encoded into a grayscale or color data representation such that necessary or maximum data density is achieved. First information is printed using black (K) ink (or alternatively using a different color gamut than that used for printing the second information) such that first information can be filtered out in a straightforward manner upon scanning of the printed medium by a digital scanning apparatus, and second information can then be recovered and utilized to advantage.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07050195",
	"publication_date": "2006-05-23",
	"application_number": "09556965",
	"application_date": "2000-04-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Printer collator facility and method",
	"summary": "",
	"abstract": "A method of printing a plurality of documents includes generating a page file for each page of each document, generating a control file for each page file, and operating a number of printers to generate printed pages based on the page files. The method includes scanning the printed pages to generate a scan file for each page, and identifying the corresponding control file to permit the printed pages to be segregated into properly sequenced separate documents.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07034951",
	"publication_date": "2006-04-25",
	"application_number": "09568779",
	"application_date": "2000-05-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Reliability and performance of SNMP status through protocol with reliability limitations",
	"summary": "",
	"abstract": "A system for an interceptor client is utilized to improve the reliability of data transfer between devices on a network. In particular, the interceptor client may be configured to monitor transactions between a SNMP manager application and a SNMP application. The interceptor client may be further configured to monitor and to identify a u201cGetu201d command requesting multiple object identifiers (OIDs), e.g., OID.a, OID.b, . . . , OID.n, from a destination agent. The interceptor client may be further configured to preprocess the requested OIDs to the nearest possible previous OIDs, i.e., OID.au22121, OID.bu22121, . . . , OID.nu22121. The interceptor client may be further configured format the requested u201cGetu201d command as a u201cGet-Nextu201d command requesting the modified OIDs from the destination agent. u201cGet-Nextu201d command will always retrieve the next value in the tree of the MIB, regardless of whether or not a valid OID was specified.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06985921",
	"publication_date": "2006-01-10",
	"application_number": "09779222",
	"application_date": "2001-02-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Scalable java servers for network server applications",
	"summary": "",
	"abstract": "A system for providing Java-implemented Application Servers to a plurality of clients. Each of the Java-implemented Application Servers is configured to execute on a processing element of a server which has multiple independent processing elements arranged such that a failure of one processing element does not affect the operability of the other processing elements. A Distributor is provided to enable making connections with the clients and then determine which of the Application Servers actually services the clients requests. The Distributor attempts to choose the Application Server that has the fewest number of clients as the server for a new client request. A monitoring program restarts the Distributor if it fails. The system thus provides a scalable and available set of Java-implemented Application Servers without requiring any change to the Java-implemented application itself.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07139805",
	"publication_date": "2006-11-21",
	"application_number": "09870029",
	"application_date": "2001-05-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Shared memory coupling of network infrastructure devices",
	"summary": "",
	"abstract": "Described herein are systems and methods of coupling network infrastructure devices through a shared memory facility, rather than through conventional network I/O (input/output) adapters. All communications through the resulting network infrastructure service system are conducted using shared memory as the physical transport medium. In this way, the congestion and processing overhead caused by the duplication and storage of multiple copies of data packets to be transferred between network infrastructure devices may be avoided. This feature of the invention significantly increases the speed at which packets may be transmitted between network infrastructure devices.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06999998",
	"publication_date": "2006-02-14",
	"application_number": "09971135",
	"application_date": "2001-10-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software-based acceleration color correction filtering system",
	"summary": "",
	"abstract": "A color correction filtering system filters color video data by compensating for non-linearities and color characteristics specific to a color monitor. Color video data is received by the system, for example through a web browser, and in an accelerated manner passed through a pre-calculated gamut-shifting array. The color correction filtering system gamma decompensates incoming color video data referenced to a non-linear color space through use of a linearization filter. The gamut-shifting array may contain pre-calculated compensation values stored in a plurality of look-up tables. A non-linearization filter is applied to the gamut-shifted color video data to produce color video data compensated for non-linearities specific to the color monitor.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07106344",
	"publication_date": "2006-09-12",
	"application_number": "10929605",
	"application_date": "2004-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for creating a user interface between an applications and network services",
	"summary": "",
	"abstract": "In order to assure that services in an network and applications or users in the network are able to communicate and interact with one another data is provided by the specification and the application that provides for an operable interface between the application and the service. A user or user system can make use of the data information provided by the service to perform selected functions and tasks that is conveyed to the application and passed on to the service. Various graphical user interfaces can be provided, depending on the application and the need of the user.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07016962",
	"publication_date": "2006-03-21",
	"application_number": "09943717",
	"application_date": "2001-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for detecting accesses to non-existing hardware entities using architectural simulation",
	"summary": "",
	"abstract": "A system and method for detecting accesses to non-existing hardware entities using a simulator environment. When an application running on a simulated target platform issues a transaction that involves accessing a hardware address, wherein the address is within a range of addresses allocated to a simulated hardware block, a set of instructions provided with the simulator are operable to determine if there exists a backing that corresponds to the transaction's address. If there is no backing (i.e., a control status register) associated with the address, an appropriate notification or warning is provided as a response.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07130785",
	"publication_date": "2006-10-31",
	"application_number": "10303427",
	"application_date": "2002-11-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for isolating applications from each other",
	"summary": "",
	"abstract": "The present disclosure relates to a system and method for isolating applications from each other. In one arrangement, the system and method pertain to intercepting application instructions, determining if an application instruction calls for an illegal action, and preventing the illegal action from occurring if the application instruction calls for the illegal action. In some arrangements, the system and method further pertain to determining if the application instruction contains an indirect memory reference and, if so, modifying the application instruction to enable the application instruction to determine itself whether an illegal operation is to be performed.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07051340",
	"publication_date": "2006-05-23",
	"application_number": "10126647",
	"application_date": "2002-04-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for performing texture synthesis",
	"summary": "",
	"abstract": "In one embodiment, a method for synthesizing a texture of a desired size from a sample texture is provided. The method comprises the steps of generating a matrix of the desired size, and providing values to the matrix. The values include random values and at least a portion of the values represents a desired structure according to which graphical features of a synthesized texture are to substantially conform. The method further comprises executing a texture synthesis process that utilizes the matrix to generate a synthesized texture of the desired size having graphical features arranged therein substantially in conformance with the desired structure.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07136072",
	"publication_date": "2006-11-14",
	"application_number": "09921464",
	"application_date": "2001-08-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Test for processor memory cache",
	"summary": "",
	"abstract": "Systems, methods, software products test a memory cache of a processor that includes a test engine (e.g., a BISTE). High level test source code is formulated to use routines in API source code that, when compiled into machine test code, interfaces with the test engine. The machine test code is executed with the processor to test the memory cache to detect one or more faulty memory blocks in the memory cache. If any of the faulty memory blocks are detected, the test engine is instructed, through the machine test code, to set one or more bits in registers to functionally replace the faulty memory blocks with redundant blocks of the memory cache.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07058864",
	"publication_date": "2006-06-06",
	"application_number": "10442453",
	"application_date": "2003-05-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Translating device adapter having a common command set for interfacing multiple types of redundant storage devices to a host processor",
	"summary": "",
	"abstract": "A translating host bus interface adapter is capable of connecting a computer system as a compute node to a storage area network. The adapter has a processor and a memory system containing firmware for execution in the processor. The host bus adapter is capable of recognizing first and second types of redundant storage accessible over the storage area network and translating generic storage commands into translated commands suitable for communicating with either type of redundant storage, and forwarding the translated commands onto the storage area network. The translating host bus adapter is also capable of constructing and maintaining a mirrored dataset comprising copies on redundant storage systems of either or both types.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06985983",
	"publication_date": "2006-01-10",
	"application_number": "09797096",
	"application_date": "2001-03-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Two tier arrangement for threads support in a virtual machine",
	"summary": "",
	"abstract": "A software system with a two tier arrangement for threads support that enhances the adaptability of a virtual machine to differing platforms. The software system includes a virtual machine with a threads interface layer having a set of methods that provide thread support in the virtual machine according to a standard threads interface associated with the virtual machine. The software system includes a native threads interface layer that provides a set of methods that adapt the methods of the threads interface layer to a platform which underlies the software system. The native threads interface layer shields the virtual machine from the particulars of the underlying operating system while the threads interface layer provides a stable interface for application programs and other tasks that benefit from thread support in the virtual machine.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07043725",
	"publication_date": "2006-05-09",
	"application_number": "09350492",
	"application_date": "1999-07-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Use of job tickets to secure resource access",
	"summary": "",
	"abstract": "A job ticket service center includes features to provide security and to control access to a job ticket and related resources. The service center may include programming or servers to authenticate a processor and to authorize the processor to access a particular job ticket. An authentication server receives authentication information from a processor and an authorization server uses the information to check authorization functionality. The authorization or access rights of the processor may be carried as a part of the job ticket. Using these features, the service center may provide trusted authentication information about the processor to the authorization server, and the authorization server then performs its authority check functions. The job ticket maybe signed with an industry standard public key encryption message digest (MD) signature, and may be protected by a public key encryption system. Hence, any entity that has the public key may validate the job ticket without having to communicate with the authentication server. These features reduce communication between distributed server applications. The features also allow the job ticket to be passed from one processor to another processor, maintaining security, without communicating with the service center.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07073174",
	"publication_date": "2006-07-04",
	"application_number": "09873196",
	"application_date": "2001-06-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Variable data printing with web based imaging",
	"summary": "",
	"abstract": "A method, system, and program product for printing comprising the steps of: receiving a print designation to print a document; receiving a description of graphics contained in the document; obtaining one of the graphics; determining if a preprocessed form of the graphic is available for reuse, and if so, retrieving the processed data therefor from preprocessed graphics storage; and formulating a print job.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07106469",
	"publication_date": "2006-09-12",
	"application_number": "09924060",
	"application_date": "2001-08-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Virtual bus interface production of header-type fields from data-type fields",
	"summary": "",
	"abstract": "Systems, methodologies, media, and other embodiments associated with a system for producing a bus-type header-type field from a point-to-point data-type field are described. One exemplary system embodiment includes a logic configured to identify that a point-to-point transaction includes non-memory-data information encoded in a data flit, a logic configured to extract the non-memory-data information from the data flit, and a logic configured to produce a header-type field for a bus-type transaction produced by the virtual bus interface from the point-to-point transaction.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07065603",
	"publication_date": "2006-06-20",
	"application_number": "10812150",
	"application_date": "2004-03-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Virtual storage systems and virtual storage system operational methods",
	"summary": "",
	"abstract": "Virtual storage systems and virtual storage system operational methods are described. According to one aspect, a virtual storage system includes a physical storage space configured to store data, a virtual storage space adapted to provide a representation of data stored within the physical storage space to a host, a memory configured to store a plurality of pointers utilized to implement addressing intermediate the physical storage space and the virtual storage space, and a controller configured to extract selected ones of the pointers from the memory and to provide the selected pointers in another storage location different than the memory at a first moment in time and to extract the selected pointers from the another storage location and to provide the selected pointers in the memory at a second moment in time subsequent to the first moment in time.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06996582",
	"publication_date": "2006-02-07",
	"application_number": "10264525",
	"application_date": "2002-10-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web-based imaging device service influenced by accessories",
	"summary": "",
	"abstract": "A web based imaging destination service requests web content from its paper handling accessories for a represented printing device and incorporates this content into the web content that it downloads into the client browser. In some embodiments, the printing device's destination service does not understand the web content coming from the accessory but simply integrates that content into the content it downloads. In some embodiments, the destination service synthesizes web content that is influenced by the accessories of the represented printing device. In a variation, the content coming from the accessory includes executable content. In a further variation, the executable content includes a means of collecting and conveying settings back to the printing device. In yet another variation, the accessory actually contains its own destination server that is accessed through the printing device's destination server.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07145686",
	"publication_date": "2006-12-05",
	"application_number": "09999425",
	"application_date": "2001-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web-based imaging service capable of being trained to provide manual duplex printing",
	"summary": "",
	"abstract": "In a web based imaging environment, a user accesses a destination service representing a printer having manual duplex printing capability, and selects a manual duplex option. If the selected printer is unfamiliar to the destination service, it guides the user through a training process describing the paper input path of the printer. The destination service prints an image on a page, asks the user to reload the page in a certain orientation and prints an image on the page again. The user provides feedback about the orientations of the printed images, which the destination service uses to formulate instructions to later guide the user through manual duplex printing using the selected printer. In a variation, the destination service stores the manual duplex instructions formulated for various printers, thus avoiding the need to retrain.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07072064",
	"publication_date": "2006-07-04",
	"application_number": "10021343",
	"application_date": "2001-10-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web-based imaging service enabling jobs to be interrupted gracefully",
	"summary": "",
	"abstract": "In a web-based imaging environment, a user accesses a destination service (e.g., representing a printer), which retrieves user's imaging data and configures available production options for a processing job. The user selects desired production options, after which the destination service estimates the time duration required to process the user's job based on the selected options. The user selects an option indicating whether subsequent copies of a current job can be interrupted. If so, a subsequent user can interrupt either manually or via the destination service, delivering a status message to the first user. The interrupted job is stored and is resumed intact after the interrupting job has processed. Subsequent output copies can be delivered into the original output tray, or can be separated in other ways. In some embodiments, if the currently processing job includes multiple output copies, then it is allowed to complete the current copy before being interrupted.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "06986136",
	"publication_date": "2006-01-10",
	"application_number": "10001551",
	"application_date": "2001-10-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web-based imaging system providing means of accessing content individually",
	"summary": "",
	"abstract": "A method, system and program product for printer processing comprising the steps of: receiving a print designation to print a document; constructing an ordering of graphics; selecting a graphic to send to a printer; getting graphic data for the selected graphic; and sending the graphic data for printer processing.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07006243",
	"publication_date": "2006-02-28",
	"application_number": "09923325",
	"application_date": "2001-08-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing seamless hooking and intercepting of selected kernel and HAL exported entry points",
	"summary": "",
	"abstract": "In a computer system having at least one host processor, a method and apparatus for providing seamless hooking and interception of selected entrypoints includes finding the IDT for each CPU which can include scanning the HAL image for the HAL PCR list. Saving the interrupt handler currently mapped in the CPU's interrupt descriptor table. Patching the original interrupt into the new interrupt handler. Storing the new interrupt exception into the CPU's interrupt descriptor table. Hooking a select entrypoint by first determining if the entrypoint begins with a one byte instruction code. If it does, saving the address of the original entrypoint, saving the original first one byte instruction, and patching the new interrupt intercept routine to jump to the original entrypoint's next instruction.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, LP.",
	"publication_number": "07039739",
	"publication_date": "2006-05-02",
	"application_number": "10097472",
	"application_date": "2002-03-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for the separation and collection of particles",
	"summary": "",
	"abstract": "A separation operation for particles includes loading particles of various sizes and responsive to electromagnetic forces into a starting position upon a separation collection component, sending a first current through a first set of conductors in a first direction drawing a subset of larger particles toward a first adjacent position to the starting position and sending successively lower currents compared to the first current through a second set of conductors in the first direction drawing a subset of smaller particles toward a second adjacent position to the starting position. A collection operation includes sending a lower current through a first set of conductors near a subset of smaller particles that forces the smaller particles into a first particle collection point and sending a higher current through the second set of conductors to collect a subset of larger particles into a second particle collection point.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, LP.",
	"publication_number": "07147108",
	"publication_date": "2006-12-12",
	"application_number": "10977998",
	"application_date": "2004-10-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for enabling resource sharing in a communication network having a plurality of application environments",
	"summary": "",
	"abstract": "A method for enabling resource sharing in a communication network supporting a plurality of application environments. Specifically, one embodiment of the present invention discloses a method ensuring only sufficient computational resources are used by a multi-component system as needed to meet its service level objectives. A method is disclosed wherein quality of service is monitored at each component in a multi-component application environment. A metric characterizes quality of service for each component. The method determines whether the quality of service at each component meets an associated service level objective. The method then optimizes the number of computational resources in each of components in the application environment to satisfy service level objectives.",
	"url": null,
	"owner": "Hewlett-Packard Development, L.P.",
	"publication_number": "07062558",
	"publication_date": "2006-06-13",
	"application_number": "09991340",
	"application_date": "2001-11-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Color/black-and-white switchable portable terminal and display unit",
	"summary": "",
	"abstract": "A display unit has a brightness equal to that in a conventional black-and-white reflection type and the power consumption is small at a standby time, and bright color display of high quality can be produced and power consumption is small at the time of use. An information device having this display unit, such as a portable phone, also is provided. The display unit has a color light emitting means, a reflecting mean of external light and a light polarizing state modulating means. The display unit has a driving method switching means for switching color light emitting display and reflection display by on/off control of the light emitting means and switching control of a driving method of a display element.",
	"url": null,
	"owner": "Hitachi, Ltd.",
	"publication_number": "07038641",
	"publication_date": "2006-05-02",
	"application_number": "10752508",
	"application_date": "2004-01-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Connecting device of storage device and computer system including the same connecting device",
	"summary": "",
	"abstract": "In an environment in which plural external storage devices having different function control interfaces are intermixed, when a function of a storage device is controlled from a computer, a common interface for controlling the function of the storage device is provided. A device that provides the common interface manages an interrelationship between a storage area recognized by a host computer and a storage area provided by the storage device and associates a storage area which becomes a target of a function control instruction with the storage device that provides the storage area. A type of the storage device that provides the storage area which becomes the target of the function control instruction is identified and function control is ordered through a function control interface unique to the device.",
	"url": null,
	"owner": "Hitachi, Ltd.",
	"publication_number": "07020734",
	"publication_date": "2006-03-28",
	"application_number": "10372913",
	"application_date": "2003-02-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integrated service management system",
	"summary": "",
	"abstract": "The present invention provides techniques for creation, operation and management of network-based storage services. Specific embodiments provide improved efficiency of the service management tasks used for designing, operating and accounting the robust and profitable network services, for example. In representative embodiments, techniques for constructing integrated network and storage services are provided. In a specific embodiment, the service comprises of three major service components: virtual private networks (VPN), application servers and storage area networks (SAN). Each of these service components has its own customer identification information, such as VPN identifier for VPN services, process identifier for application servers and logical unit number (LUN) for storage devices.",
	"url": null,
	"owner": "Hitachi, Ltd.",
	"publication_number": "07099912",
	"publication_date": "2006-08-29",
	"application_number": "09841710",
	"application_date": "2001-04-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integrated service management system for remote customer support",
	"summary": "",
	"abstract": "Techniques for creation, operation, management, and access control of network-based storage services are described. Specific embodiments provide improved efficiency of the service management tasks used for designing, operating and accounting the robust and profitable network services, for example. In representative embodiments, techniques for constructing integrated network and storage services are provided. In a specific embodiment, the service comprises of three major service components: virtual private networks (VPN), applications servers and storage area networks (SAN). Each of these service components has its own customer identification information, such as VPN identifier for VPN services, process identifier for application servers and logical unit number (LUN) for storage devices.",
	"url": null,
	"owner": "Hitachi, Ltd.",
	"publication_number": "07085827",
	"publication_date": "2006-08-01",
	"application_number": "09956635",
	"application_date": "2001-09-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for file management",
	"summary": "",
	"abstract": "File management method having first and second processing modes for storing file type information for discrimination between first and second processing modes in recording medium as file management information associated with file for file management. In first processing mode, when data in the form of file is written on a recording medium and a write error occurs, replacement processing to another write area is performed to write the data in another area. In second processing mode, when write error occurs, the replacement processing to other write area is not performed to write the data. Method includes reading file type information associated with a file to be processed from recording medium, converting the file type from file type indicative of first processing mode to file type indicative of second processing mode, and writing the file type after conversion in recording medium as file management information associated with the file to be processed.",
	"url": null,
	"owner": "Hitachi, Ltd.",
	"publication_number": "07089267",
	"publication_date": "2006-08-08",
	"application_number": "09942782",
	"application_date": "2001-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for managing replication volumes",
	"summary": "",
	"abstract": "Replication of volumes is facilitated by tools which provide and manage a pool of mirror volumes. Primary (or production) volumes containing user provided data are easily mirrored by volumes selected from the pool. User criteria can be provided to limit the selection of candidate volumes for mirroring.",
	"url": null,
	"owner": "Hitachi, Ltd.",
	"publication_number": "07039777",
	"publication_date": "2006-05-02",
	"application_number": "10305714",
	"application_date": "2002-11-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of managing a resource storage data, program for managing the resource storage data, storage media having the resource managing program, and resource manager for managing the resource storage data",
	"summary": "",
	"abstract": "A resources managing program is provided on a computer network for converting a resources allocation request issued from a user into a setup request adapting to the type of storage systems that are resources on the network. Computer network interface type information is added to the address of each resources unit of the storage systems and stored as a part of management object information that a resources managing program holds for management. The request received is converted into a setup request adapting to the type of the interface.",
	"url": null,
	"owner": "Hitachi, Ltd.",
	"publication_number": "07103665",
	"publication_date": "2006-09-05",
	"application_number": "10216746",
	"application_date": "2002-08-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method to dynamically select and locate server objects based on version information of the server objects",
	"summary": "",
	"abstract": "A distributed object management method and system, and a recording medium for recording a processing program of the method and the system are disclosed. According to this method, a server object can be changed in operation. The method for managing objects in a distributed object environment includes steps of requesting server object information of server objects to be accessed, selecting and supplying a requester with server object information of the newest one of requested server objects, accessing the server object indicated in the server object supplied, and performing processing requested by the access.",
	"url": null,
	"owner": "Hitachi, Ltd.",
	"publication_number": "07043735",
	"publication_date": "2006-05-09",
	"application_number": "09873362",
	"application_date": "2001-06-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Vehicle travel control apparatus",
	"summary": "",
	"abstract": "An object of the present invention is to provide a vehicle control apparatus which makes it possible to share information by a plurality of devices and which can improve controllability. An OS switching means (OS-CH) switches a plurality of operating system (OS, OS). A shared object (CO) has a memory resource which can be referred to from the plurality of operating systems. The shared object (CO) shares at least road information, and the road information registered by the application of one of the operating systems can be referred to from the application of the other operating system.",
	"url": null,
	"owner": "Hitachi, Ltd.",
	"publication_number": "07072749",
	"publication_date": "2006-07-04",
	"application_number": "10301744",
	"application_date": "2002-11-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for monitoring online behavior at a remote site and creating online behavior profiles",
	"summary": "",
	"abstract": "A method and system for monitoring users on one or more computer networks, disassociating personally identifiable information from the collected data, and storing it in a database so that the privacy of the users is protected. The system includes monitoring transactions at both a client and at a server, collecting network transaction data, and aggregating the data collected at the client and at the server. The system receives a user identifier and uses it to create an anonymized identifier. The anonymized identifier is then associated with one or more users' computer network transactions. The data is stored by a collection engine and then aggregated to a central database server across a computer network.",
	"url": null,
	"owner": "Hitwise Pty. Ltd.",
	"publication_number": "06983379",
	"publication_date": "2006-01-03",
	"application_number": "09608136",
	"application_date": "2000-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Allocation measures and metric calculations in star schema multi-dimensional data warehouse",
	"summary": "",
	"abstract": "Disclosed is a system, method, and apparatus for calculating metrics by using hierarchical level metadata to describe the various structures within the database. The hierarchical level metadata permit calculation of complex metrics by an analytical server which would otherwise be difficult or impossible. As a result of the way that the analytical server calculates the metrics, slicing and drilling are supported. Additionally, dimension and fact level security are also supported.",
	"url": null,
	"owner": "Hyperion Solutions Corporation",
	"publication_number": "07080090",
	"publication_date": "2006-07-18",
	"application_number": "09844706",
	"application_date": "2001-04-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Analytical server including metrics engine",
	"summary": "",
	"abstract": "Disclosed is a method for determining database queries to be sent by an analytical server to a Relational Database Monitoring System (RDBMS) by using hierarchical level metadata to describe the various structures within the database.",
	"url": null,
	"owner": "Hyperion Solutions Corporation",
	"publication_number": "07031953",
	"publication_date": "2006-04-18",
	"application_number": "10731773",
	"application_date": "2003-12-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Non-additive measures and metric calculation",
	"summary": "",
	"abstract": "Disclosed is a system, method, and apparatus for calculating metrics by using hierarchical level metadata to describe the various structures within the database. The hierarchical level metadata permit calculation of complex metrics by an analytical server which would otherwise be difficult or impossible. As a result of the way that the analytical server calculates the metrics, slicing and drilling are supported. Additionally, dimension and fact level security are also supported.",
	"url": null,
	"owner": "Hyperion Solutions Corporation",
	"publication_number": "07072897",
	"publication_date": "2006-07-04",
	"application_number": "09844483",
	"application_date": "2001-04-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for adding a plurality of user selectable functions to a hyperlink",
	"summary": "",
	"abstract": "An enhanced hyperlink and method for providing an enhanced hyperlink are provided. This invention permits the user to interact with a hyperlink in a variety of ways without necessarily having to open and/or follow the hyperlink. This is accomplished by detecting the presence of a cursor near a hyperlink. After detecting the hyperlink, a toolbar is displayed containing one or more link enhancements that the user may select. In response to the users' selection of a particular link enhancement, that link enhancement function would be performed without requiring any further action by the user.",
	"url": null,
	"owner": "I-LOR, LLC",
	"publication_number": "07076743",
	"publication_date": "2006-07-11",
	"application_number": "09847999",
	"application_date": "2001-05-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for entertainment production financing",
	"summary": "",
	"abstract": "A system for purchasing from an intermediary a right to a payment related to the performance of an entertainment production. The system comprises a transaction server for generating web page data for a web page that displays information concerning one or more entertainment productions, and an offer to purchase one or more related participation units. The transaction server is adapted to transmit and receive such web page data via the Internet. A plurality of client information appliances, each adapted to receive via the Internet such web page data, and generate and display a web page based on such data, and further adapted to transmit information to the transaction server via the Internet, including acceptance of an offer to purchase a participation unit.",
	"url": null,
	"owner": "IAC/Interactivecorp.",
	"publication_number": "07062457",
	"publication_date": "2006-06-13",
	"application_number": "09668721",
	"application_date": "2000-09-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method, and computer program product for syncing to mobile devices",
	"summary": "",
	"abstract": "Described herein are systems, methods, computer program products, and combinations and sub-combinations thereof, for enabling web content (as well as other objects) to be loaded on mobile devices (as well as other types of devices), and for users of mobile devices to operate with such web content on their mobile devices in an interactive manner while in an off-line mode.",
	"url": null,
	"owner": "iAnywhere Solutions, Inc.",
	"publication_number": "07000032",
	"publication_date": "2006-02-14",
	"application_number": "09897607",
	"application_date": "2001-07-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for object replication in a content management system",
	"summary": "",
	"abstract": "A system and method in accordance with the present invention provides for replication in a content management system. Replication is provided by utilizing the library server to track the objects to be replicated within the system. The replication is accomplished by adding two tables to the library server, a copies table and replicate table. The copies tables includes three new parts flags. A first flag identifies an ending as a copied part. A second flag identifies that other copies of this part exist. Finally a third flag identifies that a part is not yet available.",
	"url": null,
	"owner": "IBM Corporation",
	"publication_number": "07054887",
	"publication_date": "2006-05-30",
	"application_number": "10011181",
	"application_date": "2001-11-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interactive intelligent searching with executable suggestions",
	"summary": "",
	"abstract": "A method, system, and computer program product for interactive searching with executable suggestions are provided. The present invention provides a search engine and data management technology that can understand what users are looking for, understand the data in a database, and present immediately useful suggestions for finding the right information. Executable suggestions are presented that enable a user to further narrow or broaden a search intelligently and adaptively in real-time. Each executable suggestion describes a search and corresponding search criteria and provides information on the actual search results a user will obtain according to this search criteria. In one embodiment of the present invention, a system has a suggestion engine and one or more suggestion spaces.",
	"url": null,
	"owner": "icPlanet Corporation",
	"publication_number": "07069254",
	"publication_date": "2006-06-27",
	"application_number": "10456955",
	"application_date": "2003-06-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing authorization and other services",
	"summary": "",
	"abstract": "A system and method are disclosed for providing authorization and other services. In a preferred embodiment, an authorization service is defined that includes both a messaging specification and a set of rules that govern its use. A first customer wishing to use the authorization service prepares a request that complies with the service's messaging specification and transmits it to a first participant. The first participant transmits the request to a second participant which processes the request according to authorization information provided by a second customer and rules that have been specified for the service. The second participant then prepares a response that complies with the service's messaging specification.",
	"url": null,
	"owner": "Identrus, LLC",
	"publication_number": "07072870",
	"publication_date": "2006-07-04",
	"application_number": "09950059",
	"application_date": "2001-09-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for transparently providing certificate validation and other services within an electronic transaction",
	"summary": "",
	"abstract": "A system and method are disclosed for transparently providing certificate validation and other services without requiring a separate service request by either a relying customer or subscribing customer. In a preferred embodiment, after the subscribing customer digitally signs a document (e.g., a commercial document such as a purchase order), it forwards the document to a trusted messaging entity which validates the certificates of both the subscribing customer and relying customer and the respective system participants of which they are customers. If the certificates are valid, the trusted messaging entity appends a validation message to the digitally-signed document and forwards the document to the relying customer. A validation message is also preferably appended to a digitally-signed receipt from the relying customer and transmitted to the subscribing customer. In this way, both the relying customer and subscribing customer obtain certification of their respective counterparty to the transaction.",
	"url": null,
	"owner": "Identrus, LLC",
	"publication_number": "07000105",
	"publication_date": "2006-02-14",
	"application_number": "09950315",
	"application_date": "2001-09-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Remote monitoring, configuring, programming and diagnostic system and method for vehicles and vehicle components",
	"summary": "",
	"abstract": "A system and method for monitoring, configuring, programming and/or diagnosing operation of at least one vehicle includes an on-board unit disposed on the vehicle to send and receive data corresponding to at least one vehicle operating characteristic, a plurality of modular applications, each application having an associated function that processes the data corresponding to said at least one vehicle operating characteristic obtained via the on-board unit, and an interface that allows selection among the plurality of modular applications to create a customized system.",
	"url": null,
	"owner": "IDSC Holdings, LLC",
	"publication_number": "07092803",
	"publication_date": "2006-08-15",
	"application_number": "10091096",
	"application_date": "2002-03-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic gaming apparatus with authentication",
	"summary": "",
	"abstract": "A gaming machine is provided with a cabinet, at least one user-interface button, a value-receiving mechanism associated with the cabinet, a display unit associated with the cabinet, a processor disposed in the cabinet, system software representing a game that may be played by a player, encoded data generated from at least one message digest that was generated based on using an encoding function with the system software, loading software stored in memory that loads system software into random-access memory and verifies correctness and authenticity of the system software, and operating system (OS) software stored in memory that comprises an application programming interface including an application programming interface portion that provides a software interface to the display unit.",
	"url": null,
	"owner": "IGT",
	"publication_number": "07063615",
	"publication_date": "2006-06-20",
	"application_number": "10601465",
	"application_date": "2003-06-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for optimizing performance and battery life of electronic devices based on system and application parameters",
	"summary": "",
	"abstract": "An electronic device (e.g., computer system, etc.) employing dynamic power management of the present invention adjusts power consumption in accordance with an analysis of parameters and events occurring over one or more time-periods. Preferably, the electronic device monitors microprocessor, operating system, peripheral and/or device-level events and adjusts run-time parameters, such as microprocessor clock frequency and voltage, to reduce power consumption with minimal perceived degradation in performance.",
	"url": null,
	"owner": "In-Hand Electronics, Inc.",
	"publication_number": "07111179",
	"publication_date": "2006-09-19",
	"application_number": "10268914",
	"application_date": "2002-10-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Fast path caching",
	"summary": "",
	"abstract": "Described are techniques used in a computer system for handling data operations to storage devices. A switching fabric includes one or more fast paths for handling lightweight, common data operations and at least one control path for handling other data operations. A control path manages one or more fast paths. The fast path and the control path are utilized in mapping virtual to physical addresses using mapping tables. The mapping tables include an extent table of one or more entries corresponding to varying address ranges. The size of an extent may be changed dynamically in accordance with a corresponding state change of physical storage. The fast path may cache only portions of the extent table as needed in accordance with a caching technique. The fast path may cache a subset of the extent table stored within the control path. A set of primitives may be used in performing data operations. A locking mechanism is described for controlling access to data shared by the control paths.",
	"url": null,
	"owner": "Incipient, Inc.",
	"publication_number": "06986015",
	"publication_date": "2006-01-10",
	"application_number": "10218192",
	"application_date": "2002-08-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "I/O primitives",
	"summary": "",
	"abstract": "Described are techniques used in a computer system for handling data operations to storage devices. A switching fabric includes one or more fast paths for handling lightweight, common data operations and at least one control path for handling other data operations. A control path manages one or more fast paths. The fast path and the control path are utilized in mapping virtual to physical addresses using mapping tables. The mapping tables include an extent table of one or more entries corresponding to varying address ranges. The size of an extent may be changed dynamically in accordance with a corresponding state change of physical storage. The fast path may cache only portions of the extent table as needed in accordance with a caching technique. The fast path may cache a subset of the extent table stored within the control path. A set of primitives may be used in performing data operations. A locking mechanism is described for controlling access to data shared by the control paths.",
	"url": null,
	"owner": "Incipient, Inc.",
	"publication_number": "07013379",
	"publication_date": "2006-03-14",
	"application_number": "10218189",
	"application_date": "2002-08-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Creating chat rooms with multiple roles for multiple participants",
	"summary": "",
	"abstract": "A system is disclosed that provides a goal based learning system utilizing a rule based expert training system to provide a cognitive educational experience. The system provides the user with a simulated environment that presents a training opportunity to understand and solve optimally. The system utilizes an artificial intelligence engine driving individualized and dynamic feedback with synchronized audio, video, graphics and animation used to simulate real-world environment and interactions. Multiple u201ccorrectu201d answers are integrated into the learning system to allow individualized learning experiances in which navigation through the system is at a pace controlled by the learner. Multiple users or students can utilize the simulated environment simultaniously and interactively from mupltiple viewpoints. A dynamic feedback system is utilized theat narrowly tailors feedback and focuses it based on the performance and characteristics of the student to assist the student in reaching a predefined goal.",
	"url": null,
	"owner": "Indeliq, Inc.",
	"publication_number": "07152092",
	"publication_date": "2006-12-19",
	"application_number": "10008265",
	"application_date": "2001-11-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interactive simulations utilizing a remote knowledge base",
	"summary": "",
	"abstract": "A system is disclosed that provides a goal based learning system utilizing a rule based expert training system to provide a cognitive educational experience. The system provides the user with a simulated environment that presents a training opportunity to understand and solve optimally. Mistakes are noted and remedial educational material presented dynamically to build the necessary skills that a user requires for success in the business endeavor. The difficulty level is automatically adjusted to the student's skill level. The system utilizes an artificial intelligence engine driving individualized and dynamic feedback with synchronized audio, video, graphics and animation used to simulate real-world environment and interactions. Multiple u201ccorrectu201d answers are integrated into the learning system to allow individualized learning experiences in which navigation through the system is at a pace controlled by the learner. A robust business model provides support for realistic activities and allows a user to experience real world consequences for their actions and decisions and entails realtime decision-making and synthesis of the educational material. A dynamic feedback system is utilized that narrowly tailors feedback and focuses it based on the performance and characteristics of the student to assist the student in reaching a predefined goal.",
	"url": null,
	"owner": "Indeliq, Inc.",
	"publication_number": "06993513",
	"publication_date": "2006-01-31",
	"application_number": "09935219",
	"application_date": "2001-08-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Modeling system for retrieving and displaying data from multiple sources",
	"summary": "",
	"abstract": "A model development system provides tools for developers to define reusable, object oriented components and views for collecting and displaying data from multiple sources, and for incorporating such reusable components and views into an informational model. Using the system, a developer can create a reusable component, create multiple instances of that component, and connect each such instance to one or more corresponding back-end data sources. The developer can also define one or more associated views that specify how data collected by the component from the back-end data sources is to be displayed. Many different components and views may be defined and deployed to build an informational model of a business entity, such as a business that operates processing or manufacturing plants in various locations.",
	"url": null,
	"owner": "IndX Software Corp.",
	"publication_number": "07069514",
	"publication_date": "2006-06-27",
	"application_number": "10726430",
	"application_date": "2003-12-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Emulation interface system",
	"summary": "",
	"abstract": "An integrated circuit with multiple circuit cores each of which have integrated emulated circuits, and an emulation interface module, such that the integrated circuit has an on-chip debugging system. As cores other than a processor core have integrated emulation circuits, debugging of programs and operations of systems-on-a-chip becomes viable.",
	"url": null,
	"owner": "Infineon Technologies AG",
	"publication_number": "07058855",
	"publication_date": "2006-06-06",
	"application_number": "10202372",
	"application_date": "2002-07-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Extensible navigation systems",
	"summary": "",
	"abstract": "Computer-assisted navigation is achieved with component-oriented programming and instructions that provide a distributed component programming navigation system. The computer-assisted navigation is achieved with a computing device including a logical data model configured to provide abstract interfaces in a process to convert a format and data model of a provider to an appropriate format and data model suitable for the computing device, wherein the process occurs on demand, only when needed, or the conversion occurs in accordance with the format and data model of the provider, and at download time or at an initial processing time. As a result, such a computing device can be advantageously used many environments including a distributed navigation system.",
	"url": null,
	"owner": "Infogation Corporation",
	"publication_number": "07043357",
	"publication_date": "2006-05-09",
	"application_number": "11219288",
	"application_date": "2005-09-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Similarity search engine for use with relational databases",
	"summary": "",
	"abstract": "The invention provides a system and method for defining a schema and sending a query to a Similarity Search Engine to determine a quantitative assessment of the similarity of attributes between an anchor record and one or more target records. The Similarity Search Engine makes a similarity assessment in a single pass through the target records having multiple relationship characteristics. The Similarity Search Engine is a server configuration that comprises a Gateway for command and response routing, a Virtual Document Manager for document generation, a Search Manager for document scoring, and an Relational Database Management System for providing data persistence, data retrieval and access to User Defined Functions. The Similarity Search Engine uses a unique command syntax based on the Extensible Markup Language to implement functions necessary for similarity searching and scoring.",
	"url": null,
	"owner": "Infoglide Software Corporation",
	"publication_number": "07020651",
	"publication_date": "2006-03-28",
	"application_number": "10969473",
	"application_date": "2004-10-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for scheduling work orders in a manufacturing process",
	"summary": "",
	"abstract": "A computerized system is provided for scheduling a plurality of work orders in a manufacturing process. Each work order to be scheduled specifies a set of operations to be performed using a plurality of resources and materials. Data including resource availability information for each resource used in the manufacturing process, material availability information for each material used in the manufacturing process, and work order information is received and stored in a computer. The work order information includes a release date for the work order, a want date for the work order, operations information, and material requirements information. The operations information includes the identity and sequence of operations to be performed for the work order, the identity of the resources needed to perform each operation, a minimum resource capacity needed to perform each operation, and the time needed to perform the operation. The materials information includes the identity of the materials needed to perform each operation and the quantity of each material needed for the operation. Resource capacity and a start date/time and a finish date/time are assigned to each operation based upon the resource availability information, the material availability information, and the work order information. The assigned resource-capacity, the assigned start date/time, and the assigned finish date/time for each operation are displayed on a computer screen in a graphical format.",
	"url": null,
	"owner": "Infor International Limited",
	"publication_number": "07089071",
	"publication_date": "2006-08-08",
	"application_number": "10945560",
	"application_date": "2004-09-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for dynamically mapping dynamic multi-sourced persisted EJBs",
	"summary": "",
	"abstract": "Dynamic Multi-sourced Persisted Enterprise Java Bean (EJB) instances are dynamically created on a J2EE compliant Application Server to access data contained in multiple data source systems. This Dynamic Multi-sourced Persisted EJB is a general class responsible for dynamically aggregating source system information and it to data in the source systems based on a Context definition. Individual EJB attributes that include mapping, caching and security definitions are mapped to individual pieces of data in source systems by the Context definition. A mapping definition can be reloaded during execution as desired. Applications can access the Dynamic Multi-sourced Persisted Entity EJB directly, or use a Session EJB to create a static interface to the dynamically mapped, cached and secured data. Dynamic mapping of Context definition attributes to source system data for transferring data between client and source systems and for modifying data attributes are achieved without recoding, recompiling and redeploying of custom coded solutions.",
	"url": null,
	"owner": "Initiate Systems, Inc.",
	"publication_number": "06996565",
	"publication_date": "2006-02-07",
	"application_number": "10064965",
	"application_date": "2002-09-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for allocating time slots within a frame of a TDMA frequency channel",
	"summary": "",
	"abstract": "A satellite communications system provides a communications service to a mobile terminal on which different communications applications may be run. Calls are set up between any of the applications via a satellite to a network management center which provides different service adaptors which adapt the calls to different types of service provided over terrestrial networks such as telephony, facsimile, internet or ATM services. The bandwidth allocated to each call over the satellite link may be varied during the call according to demand either from the relevant application or from the network management center. Multiple calls may be connected concurrently to or from different applications running on the mobile terminal. A maximum bandwidth is allocated to each call. Efficient use is thereby made of the limited bandwidth available over the satellite, according to the instantaneous bandwidth requirements of different applications. For real-time calls requiring multiple slots per frame in a TDMA channel, the slots are mutually spaced apart to reduce delay.",
	"url": null,
	"owner": "Inmarsat Global Limited",
	"publication_number": "07133418",
	"publication_date": "2006-11-07",
	"application_number": "09319460",
	"application_date": "1997-12-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for inmarsat capacity expansion and control",
	"summary": "",
	"abstract": "The Inmarsat Capacity Expansion invention, in an embodiment to retrofit a standard Inmarsat-B mobile earth station (MES), combines standard MES equipment and functionality with an assembly containing a diplexer/switch and a digital signal processor, a second SCPC modem that has configurable modulation and error correction capabilities, control signals and paths, and related management and control software and hardware to enable the transmission and reception of standard service types and higher data rate services.",
	"url": null,
	"owner": "Innovative Communications Technologies, Inc.",
	"publication_number": "07068971",
	"publication_date": "2006-06-27",
	"application_number": "09885580",
	"application_date": "2001-06-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Active tracking and retrieval of shared memory resource information",
	"summary": "",
	"abstract": "An arrangement is provided for actively tracking and retrieve shared memory resource information. Share memory object information is recorded. Upon a request from a user, recorded shared memory object information is scanned according to the request and reported to the user.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06993634",
	"publication_date": "2006-01-31",
	"application_number": "10133800",
	"application_date": "2002-04-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Aggressive content pre-fetching during pre-boot runtime to support speedy OS booting",
	"summary": "",
	"abstract": "A method and system for content pre-fetching during a processing system pre-boot runtime. First, it is determined when a processor of a processing system is in one of a busy wait state and an idle state during a pre-boot runtime of the processing system. Then, content is pre-fetched from a data storage unit of the processing system. The content is pre-fetched based upon a pre-fetch profile. The content is loaded into system memory of the processing system.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07127600",
	"publication_date": "2006-10-24",
	"application_number": "10675826",
	"application_date": "2003-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for computer controlled call processing applications in packet switched telephone networks",
	"summary": "",
	"abstract": "A method is presented comprising transmitting, from an application computer communicably connected to a call controller which is connected to a data network, packetized messages indicative of telephone calls in progress at an endpoint of the data network, or indicative of such endpoint, and transmitting, from the call controller to the application computer, packetized messages indicative of a variety of information contained in, or relevant to, the telephone calls so as to process such information for a variety of applications. Apparatus to implement the method is also presented.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07072308",
	"publication_date": "2006-07-04",
	"application_number": "09805501",
	"application_date": "2001-03-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for parallel processing of network data on a single processing thread",
	"summary": "",
	"abstract": "A method and apparatus for handling multiple processing streams in parallel on a single thread of a processing device. In one embodiment, a parallel processing agent includes a scheduler that multiplexes a number of processing streams, or pipelines, on a single thread of execution.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07000048",
	"publication_date": "2006-02-14",
	"application_number": "10740771",
	"application_date": "2003-12-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for UPnP device code generation using XML",
	"summary": "",
	"abstract": "An apparatus and method for UPnP device code generation using XML are described. The method includes receiving a UPnP device description document from a device developer. Once received, one or more service control class files are generated, including one or more service control stub-methods. Next, the service control class files are received, including updated service control stub-methods. The updated stub-methods are modified by the device developer in order to respond to actions received by a UPnP device described by the UPnP device description document. Finally, the service control class files and the updated service control stub-methods, along with a device class library and a UPnP SDK are compiled to generate a device executable for the UPnP device described by the UPnP device description document.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07017148",
	"publication_date": "2006-03-21",
	"application_number": "09903019",
	"application_date": "2001-07-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Attestation key memory device and bus",
	"summary": "",
	"abstract": "In an embodiment of the present invention, a technique is provided for remote attestation. An interface maps a device via a bus to an address space of a chipset in a secure environment for an isolated execution mode. The secure environment is associated with an isolated memory area accessible by at least one processor. The at least one processor operates in one of a normal execution mode and the isolated execution mode. A communication storage corresponding to the address space allows the device to exchange security information with the at least one processor in the isolated execution mode in a remote attestation.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07013481",
	"publication_date": "2006-03-14",
	"application_number": "09541667",
	"application_date": "2000-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic memory management",
	"summary": "",
	"abstract": "The present invention optimizes graphics performance during zone rendering by providing an automatic management of bin memory between the binning and rendering phases. Embodiments of the present invention provide a mechanism by which the binner and renderer automatically share a pool of physical memory pages in order to build bin buffers and recycle them after they have been used in rendering. This is performed in such a fashion that multiple binned scenes can be queued up concurrently, with no requirement for software intervention except under exceptional conditions. The need for software management of zone rendering bin buffer memory is thus eliminated. Multiple scenes for binning and rendering can also be queued without software intervention.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06995773",
	"publication_date": "2006-02-07",
	"application_number": "10861589",
	"application_date": "2004-06-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Bridging memory access across pre-boot and runtime phases",
	"summary": "",
	"abstract": "The present disclosure relates to bridging access to a memory space across pre-boot and runtime phases and, more particularly, to accessing the memory utilizing a separate pre-boot memory accessor and a runtime accessor.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07082523",
	"publication_date": "2006-07-25",
	"application_number": "10321022",
	"application_date": "2002-12-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Console redirection system for remotely controlling operation of devices on a host computer if data packet has been received during a time interval",
	"summary": "",
	"abstract": "A technique for providing communication between two computers through a network in a way to allow one computer to control the other.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06999995",
	"publication_date": "2006-02-14",
	"application_number": "10405857",
	"application_date": "2003-04-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Continuous mobility across wireless networks by integrating mobile IP and GPRS mobility agents",
	"summary": "",
	"abstract": "The present invention supports mobility for a mobile node between different packet data services. In one embodiment, the invention includes listening for a registration message from a mobile node at an external interface of a gateway node of a wireless packet service, the registration message containing a care-of address for the mobile node that is outside of the wireless packet service, accepting a registration message from the mobile node at the external interface, and registering the mobile node to the care-of address contained in the registration message. This embodiment further includes sending a registration reply message to the mobile node via the care-of address, the registration reply message indicating successful registration, creating a binding for the mobile node, tunneling packets addressed to the mobile node to the care-of address, and receiving tunneled packets from the mobile node, decapsulating the tunneled packets and sending them to the appropriate address.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07039404",
	"publication_date": "2006-05-02",
	"application_number": "10184310",
	"application_date": "2002-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Device and method for disabling an override hardware pin assertion",
	"summary": "",
	"abstract": "One embodiment of present invention is a method for preventing the modification of a primary pass-phrase of an electronic system. Access to stored information such as a primary pass-phrase is disabled despite assertion of an override pin of an integrated circuit device of the electronic device when an override disable pin of the integrated circuit device is asserted prior to assertion of the override pin.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07089595",
	"publication_date": "2006-08-08",
	"application_number": "09540614",
	"application_date": "2000-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distribution of processing activity in a multiple core microprocessor",
	"summary": "",
	"abstract": "Distribution of processing activity across processing hardware based on power consumption and/or thermal considerations. One embodiment includes a plurality of processing units and a monitor to obtain monitor (e.g., power consumption, or temperature or some combination thereof) values from the processing units. The monitor transfers a process from one processing unit to another in response to the monitor values from the processing units.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07043405",
	"publication_date": "2006-05-09",
	"application_number": "10964413",
	"application_date": "2004-10-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Efficient detection of texture sharing between multiple contexts",
	"summary": "",
	"abstract": "A technique for detecting texture sharing between multiple contexts having unique ID's includes obtaining a texture usage mask of a subject texture and a context ID of a subject context. A first logic operation with the texture usage mask of the subject texture and the context ID of the subject context is performed to produce a resultant value. The subject texture is determined not to be shared by another context with the subject context upon the resultant value being equal to a first predetermined value. The subject texture is determined to be shared by another context with the subject context upon the resultant value being equal to a second predetermined value which is different from the first predetermined value. The texture usage mask of a subject texture may be revised prior to the subject texture being used by another context by performing a second logic operation with the texture usage mask and a context ID of another context to produce a resultant new texture usage mask for the subject texture. The texture usage mask of a subject texture may be revised upon the subject texture no longer being used by a particular context by performing a third logic operation with the texture usage mask and a context ID of the particular context to produce a resultant new texture usage mask for the subject texture.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07075548",
	"publication_date": "2006-07-11",
	"application_number": "09672954",
	"application_date": "2000-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Extensible network services system",
	"summary": "",
	"abstract": "Automatically finding and using network services. An extensible framework is defined which allows any network service, new or old, to be defined. A base schema is defined that defines existing network services, and extension schemes may also be defined which are specific to new network services. A vendor can define the schemas in XML, as well as using software plug-ins and configuration data. The information is stored on a network provider's server. Clients can browse the network providers server for available services. Any available services can be accepted. When this happens, a form is provided to the client; the client fills out the form; and returns it. The information on the form is associated with the XML schemas and used to select and automatically configure the network service.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07136908",
	"publication_date": "2006-11-14",
	"application_number": "09772518",
	"application_date": "2001-01-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Flash memory file system with transacted operations",
	"summary": "",
	"abstract": "A flash memory file system logically divides at least a portion of the flash memory into memory fragments and headers associated with the memory fragments. The flash memory file system also includes a transaction information structure in support of transacted operations. The transaction information structure includes fields to indicate whether a transaction has begun, whether commitment of the transaction has begun, and whether commitment of the transaction has been completed. File system operations may be rolled back if a transaction was interrupted.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07139199",
	"publication_date": "2006-11-21",
	"application_number": "10878237",
	"application_date": "2004-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generating isolated bus cycles for isolated execution",
	"summary": "",
	"abstract": "The present invention is a method and apparatus to generates an isolated bus cycle for a transaction in a processor. A configuration storage contains configuration parameters to configure a processor in one of a normal execution mode and an isolated execution mode. An access generator circuit generates an isolated access signal using at least one of the isolated area parameters and access information in the transaction. The isolated access signal is asserted when the processor is configured in the isolated execution mode. A bus cycle decoder generates an isolated bus cycle corresponding to a destination in the transaction using the asserted isolated access signal and the access information.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07111176",
	"publication_date": "2006-09-19",
	"application_number": "09538954",
	"application_date": "2000-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing a secure environment using a chipset in isolated execution mode",
	"summary": "",
	"abstract": "A chipset is initialized in a secure environment for an isolated execution mode by an initialization storage. The secure environment has a plurality of executive entities and is associated with an isolated memory area accessible by at least one processor. The at least one processor has a plurality of threads and operates in one of a normal execution mode and the isolated execution mode. The executive entities include a processor executive (PE) handler. PE handler data corresponding to the PE handler are stored in a PE handler storage. The PE handler data include a PE handler image to be loaded into the isolated memory area after the chipset is initialized. The loaded PE handler image corresponds to the PE handler.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07013484",
	"publication_date": "2006-03-14",
	"application_number": "09540613",
	"application_date": "2000-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing accesses in a processor for isolated execution",
	"summary": "",
	"abstract": "In one embodiment, a method comprises configuring an access transaction generated by a processor by a configuration storage containing configuration parameters. The processor has a normal execution mode and an isolated execution mode. The access transaction has access information. In a further embodiment, a method comprises checking the access transaction by an access checking circuit using at least one of the configuration parameters and the access information.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07089418",
	"publication_date": "2006-08-08",
	"application_number": "09540611",
	"application_date": "2000-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing dynamic device color profiles",
	"summary": "",
	"abstract": "Device information is extracted from a graphical object's data file to dynamically generate a profile suitable for processing by a color management system. In one embodiment, the graphical object is an image and the graphical object's data file is generated by a digital camera.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07080058",
	"publication_date": "2006-07-18",
	"application_number": "09105844",
	"application_date": "1998-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mesh compression process",
	"summary": "",
	"abstract": "A process for encoding an update of a polygon mesh having at least one target vertex includes defining a local index of a vertex that neighbors the target vertex, storing a global index of the target vertex, storing a number of new faces resulting from the update, storing an identity of a face of the mesh using the local index, and storing a movement status of a corner of a polygon adjacent to the target vertex.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06982715",
	"publication_date": "2006-01-03",
	"application_number": "10206808",
	"application_date": "2002-07-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for accelerating hardware encryption with multiple networking interfaces",
	"summary": "",
	"abstract": "The invention provides for utilizing abilities of network interfaces, such as embedded encryption support, or access to such encryption support, so as to extend support for such abilities to network interfaces or other devices lacking such ability. In one configuration, a non-homogeneous team of network interfaces is presented to a protocol stack as being a homogeneous team, by having network interfaces lacking a particular ability be backed up by team member supporting the ability. Various methods may be applied to distribute the work load of backing up network interface according to an operation mode of the team. For example, when operating in load balancing mode, performing backup services is balanced across the team, whereas in a fault tolerant mode, processing may be first given to non-primary network interfaces.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07082530",
	"publication_date": "2006-07-25",
	"application_number": "09476612",
	"application_date": "1999-12-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for detecting prosodic phrase break in a text to speech (TTS) system",
	"summary": "",
	"abstract": "Methods for processing speech data are described herein. In one aspect of the invention, an exemplary method includes receiving a text sentence comprising a plurality of words, each of the plurality of words having a part of speech (POS) tag, generating a POS sequence based on the POS tag of each of the plurality of words, detecting a prosodic phrase break through a recurrent neural network (RNN), based on the POS sequence, and generating a prosodic phrases boundary based on the prosodic phrase break. Other methods and apparatuses are also described.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07136802",
	"publication_date": "2006-11-14",
	"application_number": "10052147",
	"application_date": "2002-01-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for generating a large payload file",
	"summary": "",
	"abstract": "Large payload files are selectively partitioned in blocks and the blocks distributed to a plurality of distribution stations at the edge of the network qualified to have the data. Each qualified station decides how much and what portion of the content to save locally, based on information such as network location and environment, usage, popularity, and other distribution criteria defined by the content provider. Different pieces of a large payload file may be available from different nodes, however, when a user requests access to the large payload file, for example, through an application server, a virtual file control system creates an illusion that the entire file is present at the connected node. However, since only selective portions of the large payload file may actually be resident at that node's storage at the time of request, a cluster of distribution servers at the distribution station may download the non-resident portions of the file as the application server is servicing the user. The download may be in parallel and usually from the least congested nodes. New nodes added to the network learn from other nodes in the network what content they should have and download the required content, in a desired amount, onto their local storage devices from the nearest and least congested nodes without interrupting network operation. Each node manages its local storage and decides what content to prune based on information such as usage patterns.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07058014",
	"publication_date": "2006-06-06",
	"application_number": "09681673",
	"application_date": "2001-05-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and mechanism for programmable filtering of texture map data in 3D graphics subsystems",
	"summary": "",
	"abstract": "A system, method and apparatus to provide flexible texture filtering. A programmable texture filtering module is introduced into the graphics processing pipeline of a graphic coprocessor and graphic processor integrated with the host. A program from a defined instruction set may then be loaded into texture processing cores to process texture data consistent with the program.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07133047",
	"publication_date": "2006-11-07",
	"application_number": "10872049",
	"application_date": "2004-06-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for distributing applications",
	"summary": "",
	"abstract": "Methods and systems for distributing applications are described herein. In one aspect of the invention, an exemplary method includes receiving an original request for accessing a distributed resource management system (DRMS) through an application distributor application programming interface (API), the application distributor API being independent of the DRMS, selecting the DRMS as requested, translating the original request to be compatible with the selected DRMS, and transmitting translated request to the selected DRMS. Other methods and systems are also described.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07096249",
	"publication_date": "2006-08-22",
	"application_number": "10109938",
	"application_date": "2002-03-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for communicating occurrence of events in a storage medium",
	"summary": "",
	"abstract": "Briefly, in accordance with one embodiment of the invention, a computing system includes an event programming interface and a management application. The management application is communicatively coupled to the event programming interface so that the management application may register an event that the event programming interface will notify the management application once that event has occurred. In one embodiment, the event programming interface may notify the management application of the occurrence of an event that is associated with a storage medium in a RAID process.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07000237",
	"publication_date": "2006-02-14",
	"application_number": "09468614",
	"application_date": "1999-12-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods, systems, and data structures for generating a rasterizer",
	"summary": "",
	"abstract": "Methods, systems and data structures produce a rasterizer. A graphical state is detected on a machine architecture. The graphical state is used for assembling a shell rasterizer. The machine architecture is used for selecting replacement logic that replaces portions of shell logic in the shell rasterizer. The machine architecture is used for selectively inserting memory management logic into portions of the shell logic to produce a rasterizer.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06989838",
	"publication_date": "2006-01-24",
	"application_number": "10608453",
	"application_date": "2003-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "On connect security scan and delivery by a network security authority",
	"summary": "",
	"abstract": "A network security authority system provides on-connect scan and delivery in a virtual lobby to enforce security requirements for a network.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07058970",
	"publication_date": "2006-06-06",
	"application_number": "10085147",
	"application_date": "2002-02-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Persistency control in an information browser",
	"summary": "",
	"abstract": "A method of persistently displaying data including displaying first and second data in a display region of an information browser where a persistency control has been installed in the information browser. The persistency control prevents attempts to replace data that has been flagged as persistent. The attempts to replace data are requests associated with a navigation operation definable in data loadable in the information browser.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07124355",
	"publication_date": "2006-10-17",
	"application_number": "09671555",
	"application_date": "2000-09-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Platform and method for generating and utilizing a protected audit log",
	"summary": "",
	"abstract": "Briefly, one embodiment of a platform for generating and utilizing a protected audit log is described. The platform comprises a system memory and a memory to contain an audit log. The audit log includes a plurality of single-write, multiple read entries. At least one of the entries of the audit log includes stored data integrity information loaded into the system memory during its power cycle.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07073071",
	"publication_date": "2006-07-04",
	"application_number": "09540612",
	"application_date": "2000-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Platform and method for issuing and certifying a hardware-protected attestation key",
	"summary": "",
	"abstract": "In one embodiment, a method for certifying an attestation key comprises generating a remote attestation key pair within a platform and producing a certificate. The certificate includes a public attestation key to attest that a private attestation key, corresponding to the public attestation key, is stored in hardware-protected memory.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06996710",
	"publication_date": "2006-02-07",
	"application_number": "09538951",
	"application_date": "2000-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Platform and method for remote attestation of a platform",
	"summary": "",
	"abstract": "In one embodiment, a method of remote attestation for a special mode of operation. The method comprises storing an audit log within protected memory of a platform. The audit log is a listing of data representing each of a plurality of IsoX software modules loaded into the platform. The audit log is retrieved from the protected memory in response to receiving a remote attestation request from a remotely located platform. Then, the retrieved audit log is digitally signed to produce a digital signature for transfer to the remotely located platform.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "06990579",
	"publication_date": "2006-01-24",
	"application_number": "09541108",
	"application_date": "2000-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Power management for clustered computing platforms",
	"summary": "",
	"abstract": "Methods, apparatus, and systems for power management of clustered computing platforms. Firmware provided on each platform is loaded for operating system runtime availability. The firmware traps power change events corresponding to a change in a power state of a component or device associated with a platform, such as a processor or a peripheral device. In response to the power change event, the firmware sends corresponding data to a power arbiter using an out-of-band (OOB) communication network/channel. The power arbiter determines an appropriate reallocation of power consumption allotments for the various platforms under its control based on a power management policy. Updated power consumption allocation information is then sent to selected platforms via the OOB network/channel. Upon receipt of the updated allotments, corresponding registers and/or tables are updated on the platforms to effectuate a change in power consumption of one or more components/devices associated with the platform.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07051215",
	"publication_date": "2006-05-23",
	"application_number": "10461038",
	"application_date": "2003-06-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Pre-boot interpreted namespace parsing for flexible heterogeneous configuration and code consolidation",
	"summary": "",
	"abstract": "A system and method to interact with a hardware device of a processing system. An interpreted language code defining how to interact with the hardware device of the processing system is provided. The interpreted language code is interpreted to interact with the hardware device of the processing system prior to entering an operating system runtime mode of operation of the processing system.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07107441",
	"publication_date": "2006-09-12",
	"application_number": "10443220",
	"application_date": "2003-05-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Protecting software environment in isolated execution",
	"summary": "",
	"abstract": "The present invention is a method and apparatus to protect a subset of a software environment. A key generator generates an operating system nub key (OSNK). The OSNK is unique to an operating system (OS) nub. The OS nub is part of an operating system in a secure platform. A usage protector uses the OSNK to protect usage of a subset of the software environment.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07082615",
	"publication_date": "2006-07-25",
	"application_number": "09668610",
	"application_date": "2000-09-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for sign mask encryption and decryption",
	"summary": "",
	"abstract": "In general, one embodiment of the invention involves a method to protect the integrity of the sign mask. The method involves computing a key shared by a plurality of software modules employed within an image display device and encrypting a sign mask with the shared key. The sign mask is used for scrambling a bit stream prior to its transmission along with the encrypted sign mask. The encrypted sign mask is decrypted at the destination in order to descramble the scrambled bit stream.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07103184",
	"publication_date": "2006-09-05",
	"application_number": "10141724",
	"application_date": "2002-05-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Using software objects to communicate with hardware devices",
	"summary": "",
	"abstract": "An interface to one or more hardware devices includes a configuration library and objects to model the hardware. Software programs using the interface need not understand how to communicate with the hardware. Instead, the software programs may communicate with the interface. In turn, the interface communicates with the hardware. The software may be written when the hardware implementation features are unknown.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07139693",
	"publication_date": "2006-11-21",
	"application_number": "09469277",
	"application_date": "1999-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic mail software with modular integrated authoring/reading software components",
	"summary": "",
	"abstract": "Electronic mail software includes a main email component and a number installable components. The installable components include authoring/reading components for creating/reading different kinds of documents and mailbox components for listing different kinds of messages or for listing messages in different styles. The main email component provides an underlying graphical user interface for functions directly associated with the storage and transfer of electronic mail messages, and also handles all data bundling and unbundling required to transform a message created by an authoring component into a MIME compliant message. The authoring/reading components act like applications embedded within the email program and allow specific types of documents such as spreadsheets, graphics, databases, etc. to be created from within the email program and emailed directly. The authoring/reading components also allow received documents to be read without the difficulties traditionally associated with attaching binary files to an email letter. The authoring components of the invention pass data to the main email component which packages the data as a MIME compliant message. When the message is received, the main email component concatenates and decodes the MIME message and sends the data to the authoring/reading component associated with the MIME type.",
	"url": null,
	"owner": "Intellinet, Inc.",
	"publication_number": "07076730",
	"publication_date": "2006-07-11",
	"application_number": "09209162",
	"application_date": "1998-12-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic document delivery system employing distributed document object model (DOM) based transcoding and providing interactive javascript support",
	"summary": "",
	"abstract": "Several different embodiments of an electronic document delivery system are described including a client machine (e.g., a palmtop/handheld computer or wireless communication device) coupled to a transcoder proxy. One embodiment of the system allows a client machine with limited resources to support JAVASCRIPT. The transcoder proxy receives an electronic document in a first digital format (e.g., HTML or XML). A JAVASCRIPT event may be associated with an element of the document including JAVASCRIPT code executed in response to the JAVASCRIPT event. The transcoder proxy assigns a unique identifier to the element, and forms a model of a logical structure of the document (e.g., a document object model or DOM). The transcoder proxy uses the model to produce an u201coriginalu201d script including a portion of the document expressed in a second digital format (e.g., a scripting language), and provides the original script to the client machine. The client machine uses the original script to display/present the document portion. The client machine associates the JAVASCRIPT event with the element identifier, generates the JAVASCRIPT event in response to user input, and provides JAVASCRIPT event information and the associated identifier to the transcoder proxy. The transcoder proxy accesses the element within the model using the identifier, executes the JAVASCRIPT code producing a result, uses the model and the result to produce a u201cmodificationu201d script, and provides the modification script to the client machine. The client machine uses the modification script to modify the displayed/presented portion of the document.",
	"url": null,
	"owner": "International Business Machines Corp.",
	"publication_number": "07054952",
	"publication_date": "2006-05-30",
	"application_number": "09458642",
	"application_date": "1999-12-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for evaluating character in a message",
	"summary": "",
	"abstract": "An evaluator system accepts input textual messages in unknown languages and assesses which character sets, corresponding to languages, matches that message. Textual messages whose individual characters are encoded in 16 bit Unicode or other universal format are parsed, and character sets which can express each character and the accumulated correspondence is logged. When the character sets against which the message is being tested only provide partial matches, the invention can determine which offers the best fit, including by means of a weighting function. The evaluation technology of the invention can be applied to multipart documents, and to search engines and indices.",
	"url": null,
	"owner": "International Business Machines Corp.",
	"publication_number": "07103532",
	"publication_date": "2006-09-05",
	"application_number": "09384443",
	"application_date": "1999-08-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Accessing legacy applications from the Internet",
	"summary": "",
	"abstract": "Interactive legacy applications can be run from a network, such as the Internet, without requiring any code changes in the application. Typically, legacy applications are critical to a business, are self-contained on the computer, have mixed business and user interface logic, and were written before distributed computing emerged. Separating business logic from user interface logic as required by web application architectures is not practicable in the case of legacy applications. A client has a network user agent which can access a network server connected to the computer. When an application is invoked from the network user agent, a runtime data redirector intercepts the application's raw data and sends the data to the network server which then serves the data across the network to the network user agent. Input data from the user entered through the network user agent are sent back to the application via the same runtime intercept.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07007278",
	"publication_date": "2006-02-28",
	"application_number": "09828562",
	"application_date": "2001-04-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Addressing the name space mismatch between content servers and content caching systems",
	"summary": "",
	"abstract": "Techniques are disclosed for addressing the name space mismatch between content caching systems (which use Uniform Resource Locators, or u201cURLsu201d) and content servers (which use file and path names). A file name-to-URL mapping is created for use by content caching systems, and data in protocol response messages (and optionally in protocol request messages) is augmented to transmit information for use in creating this mapping, enabling a content caching system to automatically and dynamically populate its file name-to-URL mapping. By having the file name available, the caching system can now respond to content management messages which identify the cached content by only the content's associated file name. Techniques for encoding the message extensions include: use of new directives on existing cache-control headers in Hypertext Transfer Protocol (u201cHTTPu201d) messages; addition of new headers in HTTP messages; and use of meta-data in markup languages such as Hypertext Markup Language (u201cHTMLu201d) or Extensible Markup Language (u201cXMLu201d) format.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06985936",
	"publication_date": "2006-01-10",
	"application_number": "09966229",
	"application_date": "2001-09-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Adjusted monitoring in a relational environment",
	"summary": "",
	"abstract": "A system, method and apparatus for adjustable performance monitoring in a relational environment. The system can include a registry of related applications, at least two performance monitors communicatively linked to one another and coupled to respective related applications listed in the registry, and a set of adjustable monitoring parameters for each of the performance monitors. The system further can include a policy engine coupled to at least one of the performance monitors and configured to process a policy for defining an adjustment of a corresponding set of the adjustable monitoring parameters based upon an indication received from a communicatively linked one of the performance monitors.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06993453",
	"publication_date": "2006-01-31",
	"application_number": "10695164",
	"application_date": "2003-10-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Administering devices in dependence upon user metric vectors with optimizing metric action lists",
	"summary": "",
	"abstract": "Exemplary embodiments of the present invention include methods for administering devices. Such exemplary embodiments include creating a user metric vector comprising a plurality of disparate user metrics, creating a user metric space comprising a plurality of metric ranges, and determining whether the user metric vector is outside the user metric space. If the user metric vector is outside a user metric space, such embodiments include creating in dependence upon the user metric vector, a dynamic action list, identifying at least one action in the dynamic action list, executing the action, and determining whether a value of a user metric of the user metric vector that was outside a metric range of the user metric space before executing the action is outside the metric range after executing the action.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07151969",
	"publication_date": "2006-12-19",
	"application_number": "10607486",
	"application_date": "2003-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for deletion of objects from an object-relational system in a customizable and database independent manner",
	"summary": "",
	"abstract": "An apparatus and method for deleting objects from an object-relational system in a customizable and database independent manner. The apparatus and method provide a customizable and database independent mechanism for the deletion of object data from a relational database. The method implemented by the apparatus determines the dependency structure of a relational database using database metadata. The dependency structure is then utilized to determine the type of deletion to be performed on data representations of the object and its related objects, i.e., parent or child objects. The deletion actions include cascade deletion and nullify columns deletion. Appropriate SQL statements are then automatically generated at run-time to perform the deletion of the object data from the relational database.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07143108",
	"publication_date": "2006-11-28",
	"application_number": "09544274",
	"application_date": "2000-04-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method to write information to and/or read information from an information storage medium",
	"summary": "",
	"abstract": "A method to write information to an information storage medium. The method creates one or more objects comprising information and provides a first one of those one or more objects. The method writes a header label to an information storage medium, where the header label comprises an object processing indicator. The method assigns a first sequence number to the first object and writes that first object to the information storage medium beginning at a first blockid and ending at a second blockid. The method writes a trailer label to the information storage medium, where that trailer label comprises an embedded object field count. The method writes an object information block to the information storage medium, where that object information block comprises the first sequence number, the first blockid, and the second blockid.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07111113",
	"publication_date": "2006-09-19",
	"application_number": "10652162",
	"application_date": "2003-08-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus, system and method for detecting old version of an applet in a client brower's JVM",
	"summary": "",
	"abstract": "An apparatus, system and method for checking the version of a cached applet on a client device against version information stored on a host server is provided. By checking the version of the applet, it can be determined whether or not the applet is still usable with the host server. If an applet is not usable with the host server, the applet is either automatically updated to a current version or the user is provided with information as to how to update the applet to the current version. If an applet is usable with the host server but is not a current version of the applet, the user may be informed of this fact and given the opportunity to either update the applet or continue to execute the older version of the applet.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07131122",
	"publication_date": "2006-10-31",
	"application_number": "09645156",
	"application_date": "2000-08-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Audio renderings for expressing non-audio nuances",
	"summary": "",
	"abstract": "Methods, systems, computer program products, and methods of doing business by adapting audio renderings of non-audio messages (for example, e-mail messages that are processed by a text-to-speech translator) to reflect various nuances of the non-audio information. Audio cues are provided for this purpose, which are sounds that are u201cmixedu201d in with the audio rendering as a separate (background) audio stream. Audio cues may reflect information such as the topical structure of a text file, or changes in paragraphs. Or, audio cues may be used to signal nuances such as changes in the color or font of the source text. Audio cues may also be advantageously used to reflect information about the translation process with which the audio rendering of a text file was created, such as using varying background tones to convey the degree of certainty in the accuracy of translating text to audio using a text-to-speech translation system, or of translating audio to text using a voice recognition system, or of translating between languages, and so forth. Stylesheets, such as those encoded in the Extensible Stylesheet Language (u201cXSLu201d), may optionally be used to customize the audio cues. For example, a user-specific stylesheet customization may be performed to override system-wide default audio cues for a particular user, enabling her to hear a different background sound for messages on a particular topic than other users will hear.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07062437",
	"publication_date": "2006-06-13",
	"application_number": "09782564",
	"application_date": "2001-02-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automated interface generation for computer programs in different environments",
	"summary": "",
	"abstract": "Automated interface generation for computer programs operating in different environments is provided. An automated interface generation system, method, computer program product and article of manufacture is provided comprising an import utility and a runtime environment. The import utility imports a COBOL IMS transaction source file, parses the specified input and output message records, and generates an application programming interface. The application programming interface operates with the runtime environment to take the data values from the language of a different environment and translate them to a formatted IMS input message. This format is derived from the definition of the input message record in the COBOL IMS transaction source file. After the IMS transaction has executed, the resulting IMS output message is translated back to the data values of the language of the different environment, said values including the results of the transaction. The translation step handles data conversion between different code pages, machine architectures, and program semantics, and handles the dynamic nature of IMS messages.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06983468",
	"publication_date": "2006-01-03",
	"application_number": "09574409",
	"application_date": "2000-05-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automated servlet configuration",
	"summary": "",
	"abstract": "A system and method for automated servlet configuration. In a servlet development environment, an automated servlet configuration file generation method can include querying a subject servlet for associated servlet configuration data through the servlet development environment. Subsequently, the servlet configuration data can be incorporated in a servlet configuration file. In consequence, the servlet configuration file can be processed in an application server to explicitly configure the subject servlet.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07017149",
	"publication_date": "2006-03-21",
	"application_number": "10079018",
	"application_date": "2002-02-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automated test generation",
	"summary": "",
	"abstract": "A system and method for automated FVT test generation by distributed processing among a master () and one or more slave () JVMs which communicate via RMI. Using reflection analysis, the master () sequentially tests each of a plurality of classes, instructs the slave to test each of the plurality of classes, compares the results of the testing at the master and slave and in dependence thereon adds the class to a pool () of classes for subsequent use. This provides the advantage that the test application may be set running and allowed to continue automatically. The more objects that are serialised, the more variations and permutations can be tested and theoretically, there is no limit to the amount of testing that can be done. Rather than having a static set of tests that are run over and over, the tests are constantly changing which increases the likelihood of finding bugs.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06993682",
	"publication_date": "2006-01-31",
	"application_number": "10294979",
	"application_date": "2002-11-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Broadcast tiers in decentralized networks",
	"summary": "",
	"abstract": "Methods, systems, and computer program products are disclosed for classifying nodes into broadcast tiers to reduce traffic in decentralized networks. Persistent identifiers are defined for nodes, allowing nodes to be identified across sessions and invocations, even though they re-enter the network with a different network address. Paths taken by content resources as they traverse the network (e.g. which nodes forwarded the content) are persisted, along with reputation information about nodes (e.g. indicating how successful they are at answering queries from peers). Trust relationships can be derived using the persisted information. Preferred embodiments leverage a web services implementation model.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07143139",
	"publication_date": "2006-11-28",
	"application_number": "10108014",
	"application_date": "2002-03-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Clickstream data collection technique",
	"summary": "",
	"abstract": "Methods, systems, computer program products, and methods of doing business by improving collection of clickstream data in network exchanges comprising a plurality of related request and response messages. A clickstream cookie is created by an application, and contains a clickstream data collection correlator for messages of a particular transaction. A Uniform Resource Locator (u201cURLu201d) token is created, and is used both in URLs of messages and in cookies downstream of a cookie jar for locating the application-generated correlator. In preferred embodiments, this application-generated correlator is a unique value which is used to identify related clickstream data once it is collected. A flag may also be used to indicate whether data collection is enabled. No changes are required on client devices or in client software, and there is no dependency on a client to support cookies. Using the disclosed techniques, a particular application may specify varying clickstream data collection requirements for the transactions it generates.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07003565",
	"publication_date": "2006-02-21",
	"application_number": "09825097",
	"application_date": "2001-04-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Client side socks server for an internet client",
	"summary": "",
	"abstract": "An Internet client is provided with a SOCKS server. The client comprises a processor having an operating system, and a suite of one or more Internet tools. The SOCKS proxy server includes means for intercepting and servicing connection requests from the Internet tools. Preferably, the proxy server has a predetermined Internet Protocol address, preferably the loopback address. If the loopback address is not available on the protocol stack, a redirecting mechanism is used to redirect connection requests associated with stale IP addresses to a current IP address. The SOCKS server includes a filtering mechanism for filtering connection requests to particular servers, and a monitoring mechanism for monitoring network IP activity.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07020700",
	"publication_date": "2006-03-28",
	"application_number": "08808286",
	"application_date": "1997-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Content management system and methodology for implementing a complex object using nested/recursive structures",
	"summary": "",
	"abstract": "A content management system is provided including a plurality of tables forming a tree-based storage hierarchy. The system includes a library server having a stored procedure which creates a hierarchical tree-based storage structure having any number of child components horizontally and any number of component types vertically thus specifying a tree topology. Advantageously, a single invocation of the stored procedure will create the specified tree-based data storage structure which is stored in the library server.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06999966",
	"publication_date": "2006-02-14",
	"application_number": "10128332",
	"application_date": "2002-04-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Content tracking in transient network communities",
	"summary": "",
	"abstract": "Methods, systems, and computer program products are disclosed for tracking content in a transient peer-to-peer networking environment where communities have ad hoc participants. Persistent identifiers are defined for nodes, allowing nodes to be identified across sessions and invocations, even though they re-enter the network with a different network address. Paths taken by content resources as they traverse the network (e.g. which nodes forwarded the content) are persisted, along with reputation information about nodes (e.g. indicating how successful they are at answering queries from peers). Trust relationships can be derived using the persisted information. A tiered broadcast strategy is defined for reducing the number of messages exchanged. Preferred embodiments leverage a web services implementation model.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07069318",
	"publication_date": "2006-06-27",
	"application_number": "10107696",
	"application_date": "2002-03-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Coverage analysis of message flows",
	"summary": "",
	"abstract": "A method for assessing adequacy of message flow testing, including defining coverage criteria for testing a message flow through a set of message flow elements, determining a message-flow-coverage-goal for the message flow with respect to the coverage criteria, and designing a test suite responsive to the message-flow-coverage-goal. The method further includes applying the test suite to the message flow to generate a coverage result for the set of message flow elements and comparing the coverage result with the message-flow-coverage-goal.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07137103",
	"publication_date": "2006-11-14",
	"application_number": "10091416",
	"application_date": "2002-03-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Cross-platform subselect metadata extraction",
	"summary": "",
	"abstract": "A metadata extraction system executes a query against a database on a data storage device connected to a computer. Initially, the query is modified to replace one or more selected clauses with a false clause. The modified query with the false clause is executed. Metadata is retrieved from the result set obtained by executing the modified query. The metadata is used to obtain column types, which are converted to Javau2122 types. Then, a SQLJ iterator is generated, which has parameters for the Javau2122 types.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07058620",
	"publication_date": "2006-06-06",
	"application_number": "09545592",
	"application_date": "2000-04-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data management application programming interface failure recovery in a parallel file system",
	"summary": "",
	"abstract": "In a cluster of computing nodes having shared access to one or more volumes of data storage using a parallel file system, a method for managing the data storage includes initiating a session of a data management application on a session node selected from among the nodes in the cluster. The session node receives an event message in a session queue for processing by the data management application, responsive to a request submitted to the parallel file system by a source node among the nodes in the cluster to perform a file operation on a file in the data storage. Following a failure at the session node, the session queue is reconstructed so that processing of the event message by the data management application can continue after recovery from the failure, and the request can be fulfilled at the source node.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07024582",
	"publication_date": "2006-04-04",
	"application_number": "09887533",
	"application_date": "2001-06-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data management application programming interface for a parallel file system",
	"summary": "",
	"abstract": "In a cluster of computing nodes having shared access to one or more volumes of data storage using a parallel file system, a method for managing the data storage includes initiating a session of a data management application on a first one of the nodes, while running a user application on a second one of the nodes. A request is submitted to the parallel file system by the user application on the second node to perform a file operation on a file in one of the volumes of data storage. A data management event message is sent from the second node to the first node responsive to the request, for processing by the data management application on the first node.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06990478",
	"publication_date": "2006-01-24",
	"application_number": "09887520",
	"application_date": "2001-06-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data management application programming interface handling mount on multiple nodes in a parallel file system",
	"summary": "",
	"abstract": "In a cluster of computing nodes having shared access to one or more file systems in data storage using parallel file system software, a method for managing the data storage includes initiating a session of a data management application on a first one of the nodes, while running a user application on a second one of the nodes. A request is submitted to the parallel file system software by the user application on the second node to mount one of the file systems in the data storage. A mount event message is sent from the second node to the first node responsive to the request, for processing by the data management application on the first node. When the file system is to be unmounted, preunmount and unmount events are sent for processing by the data management application on the first node.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07072894",
	"publication_date": "2006-07-04",
	"application_number": "09887576",
	"application_date": "2001-06-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data management application programming interface session management for a parallel file system",
	"summary": "",
	"abstract": "In a cluster of computing nodes having shared access to one or more volumes of data storage using a parallel file system, a method for managing the data storage includes selecting a first one of the nodes to serve as a session manager node, and selecting a second one of the nodes to serve as a session node for a data management application. A session of the data management application is created on the session node by sending a message from the session node to the session manager node, causing the session manager node to distribute information regarding the session among the nodes in the cluster. Responsive to the information distributed by the session manager node, events are received at the session node from the nodes in the cluster for processing by the data management application.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07111291",
	"publication_date": "2006-09-19",
	"application_number": "09887550",
	"application_date": "2001-06-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data store for knowledge-based data mining system",
	"summary": "",
	"abstract": "In a data mining system, data is gathered into a data store using, e.g., a Web crawler. The data is classified into entities and stored into underlying vertical and horizontal tables respectively representing miner outputs and entities that can be the subjects of indexing. Data miners use rules to process the entities and append respective keys to the entities representing characteristics of the entities as derived from rules embodied in the miners, with the keys being associated with the entities in the tables. With these keys, characteristics of entities as defined by disparate expert authors of the data miners are identified for use in responding to complex data requests from customers.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06993534",
	"publication_date": "2006-01-31",
	"application_number": "10142673",
	"application_date": "2002-05-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Database optimization apparatus and method",
	"summary": "",
	"abstract": "A database optimizer collects statistics regarding which types of applications are accessing the database, and makes one or more changes to the database schema to optimize performance according to the collected statistics. In a first embodiment, the optimizer detects when a certain type of application accesses the database a percentage of time that exceeds a predefined threshold level, and if the data in the database is stored in a less-than-optimal format for the application, the data type of one or more columns in the database is changed to a more optimal format for the application. This means that the database optimizer must recognize when a different type of application requests data from any changed column, and must potentially perform a conversion from the new data type to the old data type before returning the requested data. In a second embodiment, the optimizer detects when one type of application accesses a column a percentage of time that exceeds a first predefined threshold level and that accesses the column a percentage of time that is less than a second predefined threshold level. In this case, a new column is created in the database so the data is present in both formats, thereby optimizing the performance of both old and new applications that access the data. The database optimizer looks at what type of application requested data, and returns the data in the format optimized for that type of application.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07089260",
	"publication_date": "2006-08-08",
	"application_number": "10075651",
	"application_date": "2002-02-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Design environment to facilitate accessible software",
	"summary": "",
	"abstract": "The present invention generally is directed to a method of associating a label with a component in a graphical user interface panel. The method comprises: displaying an image of the panel containing an image of the component and an image of the label; receiving a set of user inputs selecting the image of the component, the image of the label, and a predefined user action configured to associate the label with the component; and associating the label with the component in response to the set of user inputs.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07093199",
	"publication_date": "2006-08-15",
	"application_number": "10140493",
	"application_date": "2002-05-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Direct-manipulation user interface control for proportionally adjusting a graph of multi-range data sets",
	"summary": "",
	"abstract": "A multi-range data set graph control and adjustment process. A multi-range data set graph adjustment control can include a graph display having at least two axises. At least one of the axises can include a contiguous set of selectable and adjustable segments. A rescaling processor can be configured to rescale segments which are adjacent to an adjusted segment in a proportional manner according to the distance of each of the adjacent segments from the adjusted segment. Also, a graph display plotter can be configured to plot graphs of data in the multi-range data set according the scale of each segment in the contiguous set of selectable and adjustable segments. Notably, the control can be included in an application server analysis tool to provide a visual display of multi-range data sets produced by the analysis tool.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07084872",
	"publication_date": "2006-08-01",
	"application_number": "10198558",
	"application_date": "2002-07-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic intelligent discovery applied to topographic networks",
	"summary": "",
	"abstract": "A method, system, and computer program product for discovering status of a network topology. A network management framework provides the ability to specify a method for determining how to gather status of a data processing system. A data gathering technique (DGT) may be dynamically adjusted to discovery or monitoring of devices within the data processing system. Different data gathering techniques may be employed in an effort to discover or monitor the devices. In addition, results of previous network data gathering may be stored for later use. These stored results may used to develop an order of relative capabilities for a managed device or devices as compared to other device or devices in the same network. Discovery and monitoring information may be obtained about one device or N devices within the network.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07139823",
	"publication_date": "2006-11-21",
	"application_number": "09935397",
	"application_date": "2001-08-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Efficient method for determining record based I/O on top of streaming protocols",
	"summary": "",
	"abstract": "Apparatus, methods and articles of manufacture for handling messages in a client-server environment. In general, computers of a client-server environment are configured with sockets to facilitate network communications. A socket of at least one of the computers is configured to recognize a format of a message to be received from another computer, whereby the socket is configured to handle receiving the message without invoking the application until the message is completely received. In general, the message may be formatted with a length field or terminating characters. In one embodiment, the socket utilizes a record definition to recognize the message format.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07054925",
	"publication_date": "2006-05-30",
	"application_number": "09990850",
	"application_date": "2001-11-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Efficient method of globalization and synchronization of distributed resources in distributed peer data processing environments",
	"summary": "",
	"abstract": "Syndrome values are employed as a mechanism for synchronization and consistency in a distributed data processing environment. Syndromes are computed for local resources on individual peer nodes and an aggregate syndrome is computed from the individual syndromes. This renders it easy to determine not only that a change has occurred but it also makes it easy to determine which node needs to be updated and thus avoids the needless transmission of updated contents.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07010576",
	"publication_date": "2006-03-07",
	"application_number": "10158500",
	"application_date": "2002-05-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Efficient RPC mechanism using XML",
	"summary": "",
	"abstract": "The present invention provides for a system and method of performing efficient XML-RPC. Generally, the system comprises a client which generates XML-RPC requests in a compression format which encodes tags, attributes and attribute values as tokens rather than strings and transmits the request to a server. The server gets the requests from the client, invokes the corresponding method and sends a response encoded in the same format that the clients request was encoded in. In a further aspect of the present invention, the client receives a URL of a valid XML-RPC server. The client establishes a persistent connection with the server via a request utilizing the URL. The method to be called utilizing XM-RPC is passed to the client along with the associated parameters. The client generates and XML-RPC request which is transmitted in an encoding format which represents at least a portion of the tags (and attributes and attribute values if present) as tokens rather than strings. The server receives the requests, and after being parsed receives the method to be called and the associated parameters. The server attempts to locate the method and handler in a hash table, and if available, calls the method. When the return parameters of the method are returned to the server, it encodes the parameters in a XML-RPC response according to the tokenized format, and sends the response back to the client. The response is then parsed and the client obtains the parameters, which it then utilizes as appropriate.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07089567",
	"publication_date": "2006-08-08",
	"application_number": "09828542",
	"application_date": "2001-04-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Externalized classloader information for application servers",
	"summary": "",
	"abstract": "A process and system for externalizing classloader information to non-application modules such as tool modules that do not reside within the same Application server virtual machine such as a J2EE AppServer JVM. Tools that read and display classloader information typically need to co-reside within the AppServer because of the virtual machine security mechanisms that prevent classes outside the virtual machine itself to introspect the classloaders. This presents a problem for tooling vendors because most server owners do not want anything other than their applications running within the AppServer virtual machine. The invention allows tooling vendors to create a classloader tool that is external to the AppServer virtual machine, and which is running in a completely separate virtual machine, thus having minimal overhead on production systems, but which allows classloading through standard or open (e.g. non-proprietary) interfaces.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07051324",
	"publication_date": "2006-05-23",
	"application_number": "10346291",
	"application_date": "2003-01-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "File system with access and retrieval of XML documents",
	"summary": "",
	"abstract": "A XML-aware file system exploits attributes encoded in a XML document. The file system presents a dynamic directory structure to the user, and breaks the conventional tight linkage between sets of files and the physical directory structure, thus allowing different users to see files organized in a different fashion. The dynamic structure is based upon content, which is extracted using an inverted index according to attributes and values defined by the XML structure. In one application, a dynamically changing federated repository is searchable using a system of local and merged master indices, wherein query results are presented as virtual directory paths that are semantically organized.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07043472",
	"publication_date": "2006-05-09",
	"application_number": "10270705",
	"application_date": "2002-10-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Implementing data management application programming interface access rights in a parallel file system",
	"summary": "",
	"abstract": "In a cluster of computing nodes having shared access to one or more volumes of data storage using a parallel file system, a method for managing the data storage includes initiating a data management application in the cluster using a data management application programming interface (DMAPI) of the parallel file system. When a request submitted to the parallel file system is received on one of the nodes to perform an operation on a file in one of the volumes of data storage, a data management access right is obtained from the DMAPI responsive to the request The operation is performed on the file using the access right.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07120650",
	"publication_date": "2006-10-10",
	"application_number": "09887549",
	"application_date": "2001-06-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Intelligent query re-execution",
	"summary": "",
	"abstract": "A method, apparatus and article of manufacture for accessing data in a database. One embodiment comprises providing a query against the database, the query being associated with a re-execution indication; initially executing the query; providing an initial query result; determining at least one re-execution time from the re-execution indication; and re-executing the query at the at least one determined re-execution time.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07051020",
	"publication_date": "2006-05-23",
	"application_number": "10184429",
	"application_date": "2002-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Knowledge-based data mining system",
	"summary": "",
	"abstract": "In a data mining system, data is gathered into a data store using, e.g., a Web crawler. The data is classified into entities. Data miners use rules to process the entities and append respective keys to the entities representing characteristics of the entities as derived from expert rules embodied in the miners. With these keys, characteristics of entities as defined by disparate expert authors of the data miners are identified for use in responding to complex data requests from customers.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07010526",
	"publication_date": "2006-03-07",
	"application_number": "10141686",
	"application_date": "2002-05-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "License compliance verification system",
	"summary": "",
	"abstract": "A license compliance verification system and method includes a license manager that internally monitors the use of licensed property and gathers data over specified time periods about the usage of the licensed property relative to a plurality of parameters including a parameter that defines the licensors of the licensed property. License compliance verification software interfaces with the license manager and extracts from its data logs licensor specific data that is subsequently forwarded to licensors. The collected data is authenticated to assure licensors that it has not been tampered with.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07155414",
	"publication_date": "2006-12-26",
	"application_number": "09726166",
	"application_date": "2000-11-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Locale based call forwarding",
	"summary": "",
	"abstract": "Call forwarding a telephone number, including tracking recent locations of a user with the user's mobile personal communications device and a wireless telecommunications network; identifying a locale for the user in dependence upon the recent locations and upon historical location records for the user; and forwarding a telephone number in dependence upon the locale. In many embodiments, identifying a locale further comprises comparing historical location records and recent locations, wherein the historical location records are related to the locale through a locale identification field used as a foreign key.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07082192",
	"publication_date": "2006-07-25",
	"application_number": "10290419",
	"application_date": "2002-11-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Locale based call forwarding with automated creation of new locales",
	"summary": "",
	"abstract": "Call forwarding including tracking recent locations of a user with the user's mobile personal communications device and a wireless telecommunications network; determining whether the recent locations match a set of historical location records identifying a locale for the user; creating, if the recent locations do not match a set of historical location records, a new set of historical location records identifying a new locale for the user in dependence upon the recent locations; and forwarding a telephone number in dependence upon the new locale.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06999573",
	"publication_date": "2006-02-14",
	"application_number": "10290418",
	"application_date": "2002-11-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Maintaining screen and form state in portlets",
	"summary": "",
	"abstract": "A portlet state maintenance system can include a portal page setup component configured to generate a logical form in a single portal page from a multiplicity of forms defined within portlet markup aggregated into the single portal page. A portal state save component further can be configured to save state values for selected portlets defined within the logical form. Finally, a portal state restore component can be configured to restore the saved state values in refreshed portlet markup for the selected portlets. Notably, a refresh timing component further can be configured to embed submit auto-initiation logic in the single portal page responsive to identifying a dynamic refresh requirement associated with the portlet markup in the single portal page. Finally, a portlet markup cache can be coupled to the portal state restore component.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07146563",
	"publication_date": "2006-12-05",
	"application_number": "10448365",
	"application_date": "2003-05-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing workload within workflow-management-systems",
	"summary": "",
	"abstract": "A computerized method of managing workload within a Workflow-Management-System (WFMS), the WFMS having a process-model, the process-model including one or more activities being the nodes of an arbitrary graph, and directed edges of the graph defining a potential control-flow within the process-model. The method comprises a determination-step, wherein the process-model is analyzed if a priority-execution-indicator is assigned to the activity within the process model; and a launching step, wherein, in the affirmative case of the determination-step, the WFMS launches execution of the activity in the activity's execution-environment with an execution priority specified according to the priority execution indicator. Moreover the WFMS can set its own execution priority, and processing-related messages for communication are set to the execution priority specified.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07024669",
	"publication_date": "2006-04-04",
	"application_number": "09513350",
	"application_date": "2000-02-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mapping between native data type instances",
	"summary": "",
	"abstract": "Mapping of a first native data type instance to a second native data type instance is performed in three stages: the first native data type instance is converted into a first programming language and platform independent representation conforming to a first schema capable of defining base and derived data types; the first programming language and platform independent representation is transformed into a second programming language and platform independent representation conforming to a second schema capable of defining base and derived data types; and the second programming language and platform independent representation is converted into the second native data type instance. The programming language and platform independent representations may be event-based extensible Markup Language (XML) representations implemented according to the Simple API for XML (SAX). The transformation may be governed by an extensible Stylesheet Language Transform (XSLT) stylesheet.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07058645",
	"publication_date": "2006-06-06",
	"application_number": "10378377",
	"application_date": "2003-03-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mechanism independent cluster security services",
	"summary": "",
	"abstract": "The problem of providing and interacting with a number of different security mechanisms in a clustered data processing environment is solved by providing a Mechanism Abstract Layer which presents a consistent interface to applications running on the various nodes within the cluster. Mechanism Pluggable Modules are provided for each security mechanism that one wishes to employ. The Pluggable Modules provide a mechanism for mapping individualized security mechanism parameters through an interface with the Mechanism Abstract Layer. This provides a consistent interface for applications running on the nodes and it also avoids costly adaptations that would otherwise be necessary to accommodate new security mechanisms or variations in prior security mechanisms.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07107446",
	"publication_date": "2006-09-12",
	"application_number": "09942417",
	"application_date": "2001-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Memory balancing and optimization services",
	"summary": "",
	"abstract": "Memory balancing and optimization services (MBOS) control a size of a plurality of memory heaps, and a memory optimizer for allocating and de-allocating memory for a plurality of respective memory consumers. The MBOS may be instantiated within an application program such as a database management system providing services to memory consumers within the application. Alternatively, the MBOS may be instantiated within an operating system for providing services to memory consumers that are applications such as database management systems, e-commerce engines, operating systems, customer relationship management (CRM), enterprise resource planning (ERP), or supply chain management (SCM). Alternatively, an MBOS is instantiated within the operating system to provide services to applications and an MBOS is instantiated within each application to provide services to memory consumers within the application.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07007150",
	"publication_date": "2006-02-28",
	"application_number": "10401329",
	"application_date": "2003-03-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Message bridging system and method for singular server to singular or multiple event reception engines",
	"summary": "",
	"abstract": "The present invention provides a system and method for facilitating communications between different systems requiring different event message techniques. In one embodiment, a method for bridging messages between a first and at least a second application having differing message formats comprises receiving message data from the adapter of a first application in a first format, translating and/or parsing the received message data into at least a second format and outputting the translated and/or parsed message data to at least the second application.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07080381",
	"publication_date": "2006-07-18",
	"application_number": "09870563",
	"application_date": "2001-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for communication of message data using shared queues",
	"summary": "",
	"abstract": "A method and apparatus for communicating message data between a plurality of subsystems () in the form of distributed resource managers. The subsystems are coupled together through a coupling means () with a shared memory with at least one shared queue () in the shared memory. Access to the shared queue () is available from each of the coupled subsystems and message data can be communicated between the subsystems via the shared queue (). Each subsystem has a long running process () checking the shared queue for messages for that subsystem.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06999997",
	"publication_date": "2006-02-14",
	"application_number": "09960447",
	"application_date": "2001-09-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for converting programs and source code files written in a programming language to equivalent markup language files",
	"summary": "",
	"abstract": "A method and apparatus for converting programs and source code files written in a programming language to equivalent markup language files is provided. The conversion may be accomplished by a static process or by a dynamic process. In a static process, a programming source code file is converted by an application to a markup language file. A document type definition file for a markup language is parsed; a source code statement from a source code file is parsed; an element defined in the document type definition file is selected based on an association between the element and an identifier of a routine in the source code statement; and the selected element is written to a markup language file. In a dynamic process, the program is executed to generate the markup language file that corresponds to the source code file or presentation steps of the program. The application program is executed; a document type definition file for a markup language is provided as input; an element defined in the document type definition file is selected based on a routine called by the application program; and the selected element is written to a markup language file.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06986101",
	"publication_date": "2006-01-10",
	"application_number": "09306189",
	"application_date": "1999-05-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for determining the performance of data processing devices with unsynchronized clocks",
	"summary": "",
	"abstract": "Method and apparatus to enable measurement of response times, for example at one-second resolution or better, in a system where a starting location and ending location of processing are different. A timing data that signals a start of data processing is entered into a logging device and recorded in a system log file with a time stamp placed according to a system clock of the logging device. Output data from a CIS interface or TV interface that signals the end of processing is sent to the logging device and recorded in the system log file  with a time stamp placed according to the system clock of the logging device. The processing time is calculated with reference to the time stamps in the log data in the system log file associated with the processing.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07089156",
	"publication_date": "2006-08-08",
	"application_number": "09918986",
	"application_date": "2001-07-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for dual hardware and software cryptography",
	"summary": "",
	"abstract": "The present invention provides a method, apparatus, and computer implemented instructions for executing cryptographic operations. Responsive to a request to perform a cryptographic operation, one (or more) of a software process and a hardware process is selected for performing the cryptographic operation based on a policy which process results with available resources to perform the cryptographic operation to form a selected process. The cryptographic operation is performed using the selected process. Necessary object conversions, which is transparent to the application, is carried out in order to convert objects to usable forms of the selected process(es).",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07120799",
	"publication_date": "2006-10-10",
	"application_number": "09738243",
	"application_date": "2000-12-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for dynamically controlling scroller speed employed for a user interface of a wearable appliance",
	"summary": "",
	"abstract": "A wearable mobile computing device/appliance (e.g., a wrist watch) with a high resolution display that is capable of wirelessly accessing information from the network and a variety of other devices. The Wrist Watch device/appliance includes a user interface that is used to efficiently interact with alarms, time keeping functions and notifications on the watch via use of a scroll device implementing dynamic scroll speed controller capability which enables seamless fine-grain and coarse-grain scroll and/or cursor movement through displayed content without notice to the user of the scroll device.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07081905",
	"publication_date": "2006-07-25",
	"application_number": "09607801",
	"application_date": "2000-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for generating data for use in memory leak detection",
	"summary": "",
	"abstract": "A method, apparatus, and computer instructions for collecting data for analyzing memory leaks. A plurality of indicators are associated with a plurality of objects. The plurality of indicators are set to a first state. An indicator is set for each live object in the plurality of objects to a second state. In response to a request for the data, data is collected from all objects in the plurality of objects having indicators set to the first state.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07100003",
	"publication_date": "2006-08-29",
	"application_number": "10720436",
	"application_date": "2003-11-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for generating electronic document definitions",
	"summary": "",
	"abstract": "A method of automatically creating an electronic document definition can include querying an application using a meta data interface of the application to retrieve meta data describing at least one application specific object for interacting with the application. The meta data can be received responsive to the querying step. The meta data can be processed to determine an electronic document definition describing the at least one application specific object in accordance with the received meta data.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07130842",
	"publication_date": "2006-10-31",
	"application_number": "10102764",
	"application_date": "2002-03-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for identifying false cache line sharing",
	"summary": "",
	"abstract": "A method, apparatus, and computer instructions in a data processing system for processing instructions are provided. Instructions are received at a processor in the data processing system. If a selected indicator is associated with the instruction, counting of each event associated with the execution of the instruction is enabled. In some embodiments, the performance indicators may be utilized to obtain information regarding the nature of the cache hits and reloads of cache lines within the instruction or data cache. These embodiments may be used to determine whether processors of a multiprocessor system, such as a symmetric multiprocessor (SMP) system, are truly sharing a cache line or if there is false sharing of a cache line. This determination may then be used as a means for determining how to better store the instructions/data of the cache line to prevent false sharing of the cache line.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07093081",
	"publication_date": "2006-08-15",
	"application_number": "10757249",
	"application_date": "2004-01-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for portable universal resource locator and coding across runtime environments",
	"summary": "",
	"abstract": "A method, apparatus, and computer instructions in a data processing system for generating links. The present invention provides a mechanism for constructing a link in a manner that removes the need to rely on hard-coded strings. Generation of a page containing a link to a target is detected. A link is generated using parameters associated with the target.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07134076",
	"publication_date": "2006-11-07",
	"application_number": "09970865",
	"application_date": "2001-10-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing protocol independent naming and life cycle services in an object-oriented system",
	"summary": "",
	"abstract": "A framework based Java naming and lifecycle services system includes a Moniker class which universally identifies an instance of any object model, whether the instance exists or not. Moniker objects instantiated from the Moniker class operate with a set of directory service classes and object adapters to create a directory service framework and a mechanism for connecting the directory service framework to existing directory services. A set of runtime classes provide u201cin processu201d services for objects. For example, the Moniker class is automatically substituted for a client reference when the underlying object instance is streamed or persisted. In accordance with one embodiment, life cycle services are provided by associating a predefined policy with each Moniker object, which policy specifies how and when life cycle services should be performed. Remote objects are then created or bound in accordance with these policies which eliminates the need for the client to directly incorporate life cycle services code into its logic.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07127724",
	"publication_date": "2006-10-24",
	"application_number": "09244291",
	"application_date": "1999-02-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for advanced restart of application servers processing time-critical requests",
	"summary": "",
	"abstract": "A method and apparatus for implementing a recovery process for a resource manager. The method and apparatus has the resource manager take checkpoints in a manner such that in the case of failure of the resource manager, the time it takes to have requests processed again is shorter than a specified request processing time.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07055063",
	"publication_date": "2006-05-30",
	"application_number": "09683015",
	"application_date": "2001-11-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for dynamic addition and removal of multiple network names on a single server",
	"summary": "",
	"abstract": "A method and apparatus for configuring a server in a distributed data processing system is provided. The server receives a request for a function that specifies a first server name and a second server name. The server responds to requests directed to a set of server names that includes the first server name. The function executes on the server specified by the first server name, wherein the function dynamically modifies a membership of the second server name in the set of server names. The server names for the server are added or removed dynamically without halting or restarting the server.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07085826",
	"publication_date": "2006-08-01",
	"application_number": "10254308",
	"application_date": "2002-09-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for gathering information by voice input",
	"summary": "",
	"abstract": "The present invention allows users to navigate in a Web application or Web pages using a combination of point-and-click and voice-input. At each point of the dialog, the user can use the standard point-and-click interface to perform context-dependent actions, or alternatively, use speech input to navigate and operate in the global application context. The voice input uses a voice navigation component which builds an interface to the installed recognition and synthesis engines. The point-and-click and the voice navigation components can be loaded automatically with the initial Web page of a Web application. Grammars for recognizing vocabulary related to that Web application will be provided with the voice navigation component. The present invention combines the advantages of a context-dependent point-and-click user interface with those of a context-independent speech-input interface. Accordingly, a multi-modal interface can be provided to a Web browser.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07146323",
	"publication_date": "2006-12-05",
	"application_number": "10003791",
	"application_date": "2001-11-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for providing useable images on a high resolution display when a 2D graphics window is utilized with a 3D graphics window",
	"summary": "",
	"abstract": "A graphics pipeline for use with a high resolution display is disclosed. The graphics pipeline comprises a frame buffer configuration. The frame buffer configuration includes a first mode area and a second mode area. The graphics pipeline further includes a display pipeline for obtaining data from the frame buffer configuration. The display pipeline includes a controller. The controller provides pixels from the first mode area to the display as is. Finally, the controller expands pixels from the second mode area and provides the expanded pixels to the display. Accordingly, a system and method in accordance with the present invention solves the GUI problem (small icon and small menu text) of high resolution display by allowing the 3D Graphics Window to display fine pitch pictures while being able to display images in the 2D graphics window in a useable form. The system and method in accordance does not depend on the types of drawing objects (line or surface), drawing order, and crossover.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07015920",
	"publication_date": "2006-03-21",
	"application_number": "10427386",
	"application_date": "2003-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for the garbage collection of shared data",
	"summary": "",
	"abstract": "A method of garbage collection of shared data in a system heap within a data processing system, the method comprising the steps of: (a) determining if the contents of the system heap has reached a predetermined threshold, the system heap storing shared objects which are shared amongst a plurality of processes running in a data processing system; (b) in a table identifying each of the plurality of processes with a status field, setting the status field of a process which has carried out determining step (a) to a mark initiator value; (c) triggering remaining processes to mark all objects in the system heap that each process is currently using; (d) determining that each of the remaining processes has completed the marking, at step (c); (e) releasing any unmarked objects in the system heap to an object pool.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06996590",
	"publication_date": "2006-02-07",
	"application_number": "10324548",
	"application_date": "2002-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for aligning two or more independent printing systems with a single control unit and intelligent print controllers",
	"summary": "",
	"abstract": "A method and system receives a print job from a host device, parses the print job into individual print data for at least two separate printing devices, generates a random set of marks for identification of the print job, embeds the identification marks into the individual print data for a first printing device; and sends the individual print data and the marks to each printing device. Simultaneously, each printing device in the system receives its individual dataset for printing and the set of identification marks from the control unit and starts its print engine at a high speed. The first printing device prints its dataset and the identification marks on at least a first page of the printed dataset. The remaining printing devices then scan the roll of print media until they recognize the matching identification marks and begin printing their individual dataset on the roll of print media.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07099029",
	"publication_date": "2006-08-29",
	"application_number": "09952706",
	"application_date": "2001-09-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for controlling group membership in a distributed multinode data processing system to assure mutually symmetric liveness status indications",
	"summary": "",
	"abstract": "In distributed multinode data processing systems, mechanisms are employed to insure that the nodes are continually informed about the liveness of the other nodes within node groups in the network and across networks. The method of the present invention employs the concept of node stability which it uses to provide indications of membership in a previous stable group as part of messages transmitted in a protocol for forming, maintaining and dissolving node groupings in such a way as to assure that all of the nodes in the group have a consistent indication of liveness status for all of the nodes within any given group of nodes.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07043550",
	"publication_date": "2006-05-09",
	"application_number": "10077051",
	"application_date": "2002-02-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for enabling a client to specify the characteristics of an image to be downloaded from a server",
	"summary": "",
	"abstract": "A method for serving an image from a server to a client, e.g., a computer having a browser or other graphics viewing engine. The user of the client first specifies a set of one or more bitmap characteristics for an image transfer, with at least one of the bitmap characteristics including a number of bits per pixel. Preferably, this specification is accomplished using an applet or other piece of code that is downloaded to the client from the server. Later, when the server receives a client request that includes data identifying a specified bitmap characteristic, a server processing routine (e.g., a servlet) generates a version of the image that conforms to the specified bitmap characteristic. This version is then delivered back to the client in response to the original request. In this way, the user of the client machine can control the particular characteristics of the image files that are delivered to his or her machine.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07099040",
	"publication_date": "2006-08-29",
	"application_number": "09434765",
	"application_date": "1999-11-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for operating proactively secured applications on an insecure system",
	"summary": "",
	"abstract": "A method for providing a proactive security in proactive operating environment. The proactive operating environment includes a group of proactive servers communicating over a network. Each proactive server (PS) includes a storage that includes a non erasable part that stores a public, non proactive related, key V. The storage further includes an erasable part for storing private and public data. The proactive server has a discardable one-time private key Sthat corresponds to the public key V. The proactive server further has configuration data C. There is further provided a processor for providing a proactive services to applications. The proactive server has a group public proactive key Vcommon to the group of proactive servers and a share Sof a corresponding private proactive key S. The method further includes the steps of invoking initialization procedure for generating restore related information, and invoking a restore procedure for utilizing the public, non proactive related, key Vand the restore related information for restoring the public proactive key V.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07003677",
	"publication_date": "2006-02-21",
	"application_number": "09431067",
	"application_date": "1999-11-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for tracking relationships between specified file name and particular program used for subsequent access in a database",
	"summary": "",
	"abstract": "A method, apparatus, and computer implemented instructions for tracking relationships between programs and data in a data processing system. A file access request is received from a program, wherein the request is received at an operating system level. An association is stored between the file and the program.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07016920",
	"publication_date": "2006-03-21",
	"application_number": "09865243",
	"application_date": "2001-05-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for web-based delivery of use-restricted programs to handle mail attachments",
	"summary": "",
	"abstract": "An e-mail server is configured so that when an e-mail having an attachment is received at the server, a web-based URL is included in the e-mail to identify a fulfillment site at which a handler (e.g., a plug-in) for the attachment may be obtained. The e-mail is delivered to a client machine. When the user of the machine selects the attachment to open, the e-mail application checks to determine if there is a registered handler in the client machine to handle the attachment. If there is no installed attachment handler (or if the handler is not available), the e-mail application automatically contacts the fulfillment site by opening a browser (or other viewer) to the URL that was included with the e-mail. When the user enters the required data, the fulfillment site sends the attachment handler. Upon receipt, the plug-in self-installs and opens the attachment in a seamless manner.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07107315",
	"publication_date": "2006-09-12",
	"application_number": "09561183",
	"application_date": "2000-04-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of automatically generating an SNMP management information base from extension-enabled management agents",
	"summary": "",
	"abstract": "A method and machine readable storage for adding a simple network management protocol (SNMP) interface to an existing resource management extension-enabled management agent. The SNMP interface can be added without modifying the management agent. The method includes the step of reading definitions of managed objects associated with said management agent. The definitions can be read at runtime of the management agent. A SNMP management information base (MIB) definition is automatically generated. The SNMP MIB provides a SNMP representation of the management agent and incorporates SNMP object definitions correlating to at least a portion of read managed object definitions.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07099931",
	"publication_date": "2006-08-29",
	"application_number": "10324538",
	"application_date": "2002-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of changing service attributes in a service logic execution environment",
	"summary": "",
	"abstract": "A method of directly changing a service attribute corresponding to a service component through a hypermedia document. The hypermedia document can provide an interface to a service logic execution environment (SLEE). The method can include providing a plurality of selections embodied in the hypermedia document. The plurality of selections can correspond to the service attribute. The method further can include receiving a user specified selection in the hypermedia document and generating a SLEE compatible event based on the user selection. The event can be of a type which the service component has been registered in the SLEE to receive. Also, the event can be routed to the service component via the SLEE. The service component can process the event and update service attribute information corresponding to the service attribute consistent with the event.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07100107",
	"publication_date": "2006-08-29",
	"application_number": "09867831",
	"application_date": "2001-05-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of enabling an intermediary server to impersonate a client user's identity to a plurality of authentication domains",
	"summary": "",
	"abstract": "An enterprise computing environment such as a corporate web portal includes an intermediary server, a sign on service, and one or more backend enterprise systems managed by resource managers. Before or after user primary logon, which establishes a user primary account identity, the intermediary server uses its own identity to authenticate to the sign on service its right to retrieve user secondary account identities with respect to the backend enterprise systems. Retrieved secondary account identities are then used by the intermediary server to perform user secondary logons to respective resource managers in the environment. The intermediary server also manages the passing of resource requests and associated replies between the user and the resource managers.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07039714",
	"publication_date": "2006-05-02",
	"application_number": "09487187",
	"application_date": "2000-01-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of providing open access to application profiling data",
	"summary": "",
	"abstract": "A data structure for exchanging profiling data in the form of trace elements between collection agents and analysis agents in a profiling tool, wherein the data structure comprises elements for identifying fragments, and attributes defining a logical hierarchy between the trace elements. A system is also set forth for providing access to profiling data of an application over an network, comprising a profiling interface for transmitting event data from the application, a collection agent for receiving and encoding the event data in trace element fragments each containing at least one attribute, and in response transmitting the fragments over the network, and at least one analysis client for receiving and collating the fragments in accordance with the at least one attribute.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07007269",
	"publication_date": "2006-02-28",
	"application_number": "10093464",
	"application_date": "2002-03-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method to import/export or detach/attach a file to/from a remote mail server",
	"summary": "",
	"abstract": "A computer-implemented method for importing/attaching or exporting/detaching a file during a given e-mail operation. From a user's perspective, the method begins when the user elects to perform the import/attach or export/detach function with respect to a given file. If the file resides locally, the operation proceeds as usual by carrying out the function as if the file is on the local system and resides in a known place. If, however, the file does not reside locally, a panel or other user interface is displayed. Using this panel, the user may then attempt to log into a remote system on which the file is supported. Thus, for example, the user interface may require the user to enter a userid, password, hostname, or some combination thereof. If the user login is successful, the routine gets or puts the file (e.g., using an FTP operation) as required, preferably as a background process. Upon completion of the file transfer, the routine then automatically completes the import/attach or export/detach function as if the file is on the local system and resides in the known location.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07133897",
	"publication_date": "2006-11-07",
	"application_number": "09442693",
	"application_date": "1999-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and computer program for syntax validation",
	"summary": "",
	"abstract": "A system, method and computer program for validating a syntactical statement employing a stored syntax tree which represents all possible syntax options. The tree consists of a network of junction nodes and data nodes between a root node and an end node, whereby all paths through the tree lead to the end node. Firstly, a syntactical statement is passed to the root node, where it is parsed into elementary tokens. Next, a table is created to store the tokens, and entries representing the end node of the syntax. The location of a current node in the syntax tree is also maintained, whereby the current node is initially the root node. Then, the potential nodes that can be selected from the current node and their distances from the current node are returned. The potential nodes are then compared to the stored tokens, and a potential node is selected. Finally, the location of the current node is updated and the process is repeated until the syntactical statement has been validated.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07065753",
	"publication_date": "2006-06-20",
	"application_number": "09930598",
	"application_date": "2001-08-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program product for automatically transforming a configuration of a digital system utilizing traceback of signal states",
	"summary": "",
	"abstract": "A method of processing a configuration of a digital system is disclosed. The digital system contains a configuration latch having a plurality of possible latch values that each corresponds to a different configuration of a functional portion of the digital system. The digital system further includes a signal coupled to an output of the configuration latch by a signal path. According to the method, a configuration specification for the digital system is received. The configuration specification includes a Dial mapping between each of a plurality of possible input values that can be received by the Dial and a respective one of a plurality of signal values for the signal. In response to receipt of the configuration specification, a number of inverting circuit elements within the signal path coupling the signal and the output of the configuration latch is determined. In response to the determining, the configuration specification is modified to specify a mapping between each of the plurality of possible input values and a corresponding one of the plurality of possible latch values.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07080346",
	"publication_date": "2006-07-18",
	"application_number": "10425074",
	"application_date": "2003-04-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program product for specifying a configuration for multiple signal or dial instances in a digital system",
	"summary": "",
	"abstract": "A digital system includes a plurality of hierarchically arranged design entity instantiations including a first entity instantiation containing second and third instantiations of the same design entity. Each of the instantiations contains a respective instance of a configurable entity having a plurality of possible configuration values that each corresponds to a different configuration of a functional portion of the digital system. A configuration specification for the digital system is received including a Dial containing a mapping between each of a plurality of possible Dial input values and a respective one of a plurality of configuration values. The configuration specification generically refers to the design entity. In response to receipt of the configuration specification, both instance of the configurable entity are automatically located. In response to the instances of the configurable entity, an association between the mapping and each of the instances of the configurable entity is automatically created.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07134098",
	"publication_date": "2006-11-07",
	"application_number": "10425051",
	"application_date": "2003-04-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program product for specifying a configuration of a digital system described by a hardware description language (HDL) model",
	"summary": "",
	"abstract": "A method of specifying a configurable digital system is disclosed. According to the method, at least one design entity containing a functional portion of a digital system is specified in at least one hardware definition language (HDL) file. The design entity logically contains a configuration latch having a plurality of different possible configuration values that each corresponds to a different configuration of the functional portion of the digital system. A statement in the HDL file associates a Dial entity with the design entity. The Dial has a Dial input, a Dial output, and a mapping table indicating a mapping between each of a plurality of possible input values that can be received at the Dial input and a respective corresponding output value for the Dial output. The output value specifies which of the plurality of different possible configuration values is loaded into the configuration latch.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07080347",
	"publication_date": "2006-07-18",
	"application_number": "10425096",
	"application_date": "2003-04-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program product for specifying a dial group for a digital system described by a hardware description language (HDL) model",
	"summary": "",
	"abstract": "A statement in at least one hardware definition language (HDL) file specifies a plurality of design entities representing a functional portion of a digital system. The plurality of design entities have an associated plurality of configuration latches each having a plurality of different possible latch values, where different sets of latch values for the plurality of configuration latches correspond to different configurations of the functional portion of the digital system. With a statement in the at least one HDL file, a Dial group entity is associated with one of the plurality of design entities. The Dial group entity has a Dial list listing a plurality of Dial entities whose settings collectively control which set of latch values is loaded into the plurality of configuration latches. Membership in the Dial group constrains all instances of the plurality of Dial entities belonging to a particular instance of the Dial group to be set as a group.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06993729",
	"publication_date": "2006-01-31",
	"application_number": "10425070",
	"application_date": "2003-04-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program product for specifying and using a dial having a default value to configure a digital system described by a hardware description language (HDL) model",
	"summary": "",
	"abstract": "In at least one hardware definition language (HDL) file, at least one design entity containing a functional portion of a digital system is specified. The design entity logically contains a configuration latch having a plurality of different possible configuration values that each corresponds to a different configuration of the functional portion of the digital system. With a statement in the HDL file(s), a Dial entity is associated with the at least one design entity. The Dial has a Dial input, a Dial output, a mapping table indicating a mapping between each of a plurality of possible input values that can be received at the Dial input and a respective corresponding output value for the Dial output, and a default input value among the plurality of possible input values. The output value of the Dial entity controls which of the different possible configuration values is loaded in the configuration latch.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07062745",
	"publication_date": "2006-06-13",
	"application_number": "10425079",
	"application_date": "2003-04-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program product for specifying and using dials having phased default values to configure a simulated or physical digital system",
	"summary": "",
	"abstract": "In at least one hardware definition language (HDL) file, at least one design entity containing a functional portion of a digital system is specified. The design entity logically contains a configuration latch having a plurality of different possible configuration values that each corresponds to a different configuration of the functional portion of the digital system. With a statement in the HDL file(s), a Dial entity is associated with the at least one design entity. The Dial has a Dial input, a Dial output, a mapping table indicating a mapping between each of a plurality of possible input values that can be received at the Dial input and a respective corresponding output value for the Dial output, a phase ID and a default input value among the plurality of possible input values. The output value of the Dial entity controls which of the different possible configuration values is loaded in the configuration latch and the phase ID indicates a phase during which the default input value is to be applied.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07039894",
	"publication_date": "2006-05-02",
	"application_number": "10750112",
	"application_date": "2003-12-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program product providing a configuration specification language supporting arbitrary mapping functions for configuration constructs",
	"summary": "",
	"abstract": "A method is disclosed of associating a mapping function with a configuration construct of a digital design defined by one or more hardware description language (HDL) files. According to the method, in the HDL files, a configuration latch is specified within a design entity forming at least a portion of the digital design. In addition, a Dial is specified that defines a relationship between each of a plurality of input values and a respective one of a plurality of different output values. The HDL files also include a statement that instantiates an instance of the Dial in association with the configuration latch such that a one-to-one correspondence exists between a value contained within the configuration latch and an input value of the instance of the Dial. The HDL files further include a statement associating the Dial with a mapping function that applies a selected transformation to values read from or written to the instance of the Dial.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07096434",
	"publication_date": "2006-08-22",
	"application_number": "10749759",
	"application_date": "2003-12-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program product providing a configuration specification language that supports the definition of links between configuration constructs",
	"summary": "",
	"abstract": "Methods, data processing systems, and program products are disclosed that support the definition and accessing of links indicating a relationship between configuration construct instances, such as Dial and Dial group instances, within a digital design. According to one method, first and second latches within the digital design are specified in at least one HDL statement within one or more HDL files representing the digital design. In the one or more HDL files, a first configuration construct instance referencing the first latch and a second configuration construct instance referencing the second latch are also defined. The first and second configuration construct instances provide interfaces through which values of the first and second latches can be accessed. In addition, a link indicating a relationship between the first and second configuration construct instances is also defined within the one or more HDL files.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07143387",
	"publication_date": "2006-11-28",
	"application_number": "10651187",
	"application_date": "2003-08-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program product that utilize a configuration database to configure a hardware digital system having an arbitrary system size and component set",
	"summary": "",
	"abstract": "A system configuration database is constructed in volatile memory by first determining which types of integrated circuits are present in a hardware system and the number of each type. In response to a determination, a system configuration database is loaded into volatile memory that includes a respective chip hardware database for each type of integrated circuit in the hardware system. Each chip hardware database defines a Dial entity controlling which of a plurality of different possible latch values is placed in a hardware latch of the associated type of integrated circuit. The system configuration database includes at least a first chip hardware database for a first type of integrated circuit that contains per-instance information for each of the multiple instances of the first type of integrated circuit within the hardware system.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07146302",
	"publication_date": "2006-12-05",
	"application_number": "10425076",
	"application_date": "2003-04-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program product that utilize a configuration database to configure a hardware digital system having multiple access methods",
	"summary": "",
	"abstract": "In a configuration database, at least one latch data structure is created that corresponds to a hardware latch in a hardware system to be configured. The at least one latch data structure includes a method field indicating which of a plurality of different access methods can be used to access the hardware latch. In addition, the latch data structure includes at least one Dial data structure defining an instance of a Dial entity controlling which of a plurality of different possible latch values is placed in the hardware latch in response to each of a plurality of Dial settings. The configuration database further includes an association between the instance of the Dial entity and the hardware latch. The configuration database can then be referenced to set the hardware latch utilizing an access method indicated by the at least one latch data structure.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07062746",
	"publication_date": "2006-06-13",
	"application_number": "10425089",
	"application_date": "2003-04-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program products for automatically connecting a client to a server of a replicated group of servers",
	"summary": "",
	"abstract": "A client application sends a request to a given server of a replicated group of servers, and expects a response to the request. If the client does not receive a response to the request, or if the server is otherwise unavailable, the client is automatically reconnected to another server of the replicated group. The servers of the replicated group do not, however, have to have any knowledge of the communication session of the client.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07133891",
	"publication_date": "2006-11-07",
	"application_number": "09583694",
	"application_date": "2000-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and article of manufacture for transferring structured data between different data stores",
	"summary": "",
	"abstract": "Provided is a method, system, and an article of manufacture for transferring structured data between different data stores. Data stores include a type identifier with every instance of a structured data type. A typeID-typeName map within each data store includes the mapping between the type identifiers and the type names of the structured data types. The typeID-typeName map is sent as metadata while transferring data from a source database to a target database. An application replaces the type identifiers of the source database with the corresponding type identifiers of the target database.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07136872",
	"publication_date": "2006-11-14",
	"application_number": "10123478",
	"application_date": "2002-04-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and program for executing a workflow",
	"summary": "",
	"abstract": "Provided is a method, system, and program for executing a workflow. A workflow class implement methods and objects to provide information on and control of workflows. A work list class implements methods and objects to provide information on and manipulate work items assigned to the workflows. A work item class implements methods and objects to provide information on and manipulate work items when executing one workflow.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07069536",
	"publication_date": "2006-06-27",
	"application_number": "09894076",
	"application_date": "2001-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and program for generating a workflow",
	"summary": "",
	"abstract": "Provided is a method, system, and program for generating a workflow. A plurality of graphical user interfaces (GUI) panels are displayed through which a user may define nodes of a workflow and associate at least one action and user with each node. During workflow execution of each node, the associated user performs the associated action. Further, multiple nodes define actions that process at least one object that is routed through multiple nodes of the workflow. A workflow model is generated from information entered into the GUI panels including the nodes and workflow defined by the user through the GUI panels that process the at least one object. The workflow model is transformed into a workflow definition language (WDL) file. The WDL file is then transferred to a workflow server, wherein the workflow server interacts with a database to implement the workflow model defined in the WDL file in the database. When executing the implementation of the workflow, a request by one user associated with one node is received to access the node when no other user is accessing the node. The user requesting access to the node is granted access to the node to perform the action associated with the node. The node is locked to prevent other users associated with the node from accessing the node. The lock on the node is released when the user granted access to the node completes the action associated with the node, wherein other users can access the node after the lock is released.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07100147",
	"publication_date": "2006-08-29",
	"application_number": "09894074",
	"application_date": "2001-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and program for merging log entries from multiple recovery log files",
	"summary": "",
	"abstract": "Provided are a method, system, and program for merging independent log entries in a multiple node shared nothing DBMS. Initially, log entries from multiple log entries are combined to form a single log entry sequence. Local transactions are generated from the single log entry sequence and stored in a local transactions structure. In particular, log entries with the same local transaction identifier form a local transaction. Then, local transactions having the same global identifier are merged to form global transactions.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07076508",
	"publication_date": "2006-07-11",
	"application_number": "10217707",
	"application_date": "2002-08-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and program for remotely manipulating a user interface over a network",
	"summary": "",
	"abstract": "Disclosed is a system, method, and program for generating user interface output on an output device attached to a remote computer. The remote computer communicates over a network to at least one server. The remote computer and server may comprise any computing device known in the art or any appliance or device including an embedded computing device. An object is transmitted to the remote computer including user interface components and data. The remote computer generates user interface output from the user interface components and data in the object. The computer further transmits to the remote computer standard application program interfaces (API) that are a member of a set of standard APIs in a first format. The remote computer converts the standard APIs in the first format to user interface APIs in a second format to manipulate the object and generate further user interface output from the components and data in the object.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07020882",
	"publication_date": "2006-03-28",
	"application_number": "09662519",
	"application_date": "2000-09-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and program for using objects in data stores during execution of a workflow",
	"summary": "",
	"abstract": "Provided is a method, system, and program for performing an Input/Output (I/O) operation on an object during execution of a workflow comprised of nodes. A plurality of objects are stored in one of multiple data stores, wherein each object is identified within the data store with a first object identifier. A workflow packet references at least one object with a second object identifier, wherein the second object identifier indicates one of the data stores and the first object identifier of the referenced object in the data store. An I/O request for one target object referenced by one second object identifier in the workflow packet is received from one node. A determination is made from the second object identifier for the target object the data store and the first object identifier of the target object. The I/O request is performed on the target object at the determined first object identifier in the determined data store.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07043714",
	"publication_date": "2006-05-09",
	"application_number": "09894413",
	"application_date": "2001-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and program product to support multiple content-management data models",
	"summary": "",
	"abstract": "Methods, systems, and program products for managing multimedia content. These are built upon a combination of a high level content model for specific multimedia content types and a low level physical for mapping to a data engine. The method, system, and program product include representing multimedia content management objects and managing the objects in a relational database. The relational database is adapted for representing data in a plurality of relational database tables, where each of the relational database tables has at least one row with a plurality of columns. Content is managed by associating the object as an item to a row in a first relational database table; and associating additional components, if any, of the object to additional relational database tables.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07043490",
	"publication_date": "2006-05-09",
	"application_number": "10091919",
	"application_date": "2002-03-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for monitoring a lower priority process by a higher priority process",
	"summary": "",
	"abstract": "The monitoring of a worker process by an executive process. A worker process periodically sends a signal to an executive process, such as via a call to a heartbeat interface, which receives the signal and determines whether the worker process is improperly functioning. If the worker process is improperly functioning, the executive process terminates the worker process. The executive process may also examine the worker process for diagnostic purposes before terminating, or returning control to, the worker process.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07051331",
	"publication_date": "2006-05-23",
	"application_number": "10040130",
	"application_date": "2002-01-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for performing adaptive and robust prediction",
	"summary": "",
	"abstract": "Techniques for performing adaptive and robust prediction. Prediction techniques are adaptive in that they use a minimal amount of historical data to make predictions, the amount of data being selectable. The techniques are able to learn quickly about changes in the workload traffic pattern and make predictions, based on such learning, that are useful for proactive response to workload changes. To counter the increased variability in the prediction as a result of using minimal history, robustness is improved by checking model stability at every time interval and revising the model structure as needed to meet designated stability criteria. Furthermore, the short term prediction techniques can be used in conjunction with a long term forecaster.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07039559",
	"publication_date": "2006-05-02",
	"application_number": "10385265",
	"application_date": "2003-03-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for root cause identification and problem determination in distributed systems",
	"summary": "",
	"abstract": "A technique for determining a root cause of a condition (e.g., service outage) of at least one subject component in a computing environment comprises the following steps/operations. First, one or more components in the computing environment upon which the at least one subject component depends (e.g., antecedents) are identified. Identification comprises traversing at least a portion of a model representative of an existence of one or more relationships associated with at least a portion of components of the computing environment and which is capable of accounting for a full lifecycle (e.g., including deployment, installation and runtime) associated with at least one component of the computing environment. Then, one or more procedures are performed in accordance with the one or more identified components to determine a condition status associated with each of the one or more identified components. By way of example, the inventive techniques may be applied to a distributed computing environment. The computing environment may also be an autonomic computing environment.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07096459",
	"publication_date": "2006-08-22",
	"application_number": "10241213",
	"application_date": "2002-09-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Object oriented apparatus and method for preserving stack frame identity during inlined method calls",
	"summary": "",
	"abstract": "An object oriented mechanism and method provide exact information about the current invocation stack even when methods are inlined. A virtual stack frame mechanism determines whether a called method has been inlined, and counts both virtual frames and real frames when determining information corresponding to a called method. The virtual stack frame mechanism is preferably implemented in an object oriented class that provides methods for determining information corresponding to a called method.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07080368",
	"publication_date": "2006-07-18",
	"application_number": "10285255",
	"application_date": "2002-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Object-oriented framework for document routing service in a content management system",
	"summary": "",
	"abstract": "An object-oriented framework for document routing service in a content management system directly provides the server API set for document routing to the application programmers, without an intermediate interface layer. This framework provides document routing functions and system administration support for document routing. In addition, the system defines the document routing process as a series of steps provided by an administrator through which a document is routed, where a work node is a step within the process. A work list is provided that is a filter of one or more work nodes; a user may obtain a list of work or the u201cnextu201d work item from the work list. Work packages can be suspended pending the satisfaction of criteria such as delay time or collection of a specified group of documents. The process can be resumed at any time. Suspension and resumption of the process are defined by the resume list in the work package and the work node. The object-oriented framework defines the object model of the document routing service that includes a set of classes and associated methods to support the model.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07032225",
	"publication_date": "2006-04-18",
	"application_number": "10131167",
	"application_date": "2002-04-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Object-oriented framework for generic adaptive control",
	"summary": "",
	"abstract": "A system and method are described for constructing and implementing generic software agents for automated tuning of computer systems and applications. The framework defines the modules and interfaces to allow agents to be created in a modular fashion. The specifics of the target system are captured by adaptors that provide a uniform interface to the target system. Data in the agent is managed by a metric manager, and controller modules implement the desired control algorithms. The modular structure and common interfaces allow for the construction of generic agents that are applicable to a wide variety of target systems, and can use a wide variety of control algorithms.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07120621",
	"publication_date": "2006-10-10",
	"application_number": "10059665",
	"application_date": "2002-01-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Object-oriented framework for reasoning having pluggable inference engines",
	"summary": "",
	"abstract": "A computer program product for implementing a rule-based programming language, the computer program product comprising a computer usable media, having computer program code thereon, comprises a single rule language supporting a plurality of rulesets, an object-oriented framework that compiles the rulesets into a collection of framework objects, and a plurality of pluggable inference engines for processing the collection of framework objects.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07136843",
	"publication_date": "2006-11-14",
	"application_number": "10278378",
	"application_date": "2002-10-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Open framework for the definition of metadata",
	"summary": "",
	"abstract": "A family of Java interfaces defines methods to provide common information about a property, such as data type and editing capabilities. The interfaces identify the methods used to get generic metadata. Implementers may extend these classes, as needed, to provide the metadata for their specific properties. The common metadata description interface of the present invention allows multiple metadata sources to be used interchangeably within the same software product without the software code being specifically written for each metadata source.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06983448",
	"publication_date": "2006-01-03",
	"application_number": "09903726",
	"application_date": "2001-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Optimization of database network traffic based upon data-use analysis",
	"summary": "",
	"abstract": "An apparatus, program product and method utilize one or more usage statistics, which are reflective of what data is actually and/or likely to be used by a client when processing a database query, to reduce or eliminate the transfer of unnecessary data between a client and server in a client-server database management system. Information such as the columns that are or have been used and/or the number of rows that have been accessed, may be utilized to identify certain data that is likely to not be used during processing of the database query. Based upon the data that has been identified, a subset of the data that would otherwise be returned as a result of the database query may be identified and returned to a client, often substantially reducing the amount of data required to be retrieved by a client in connection with a database query.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07127463",
	"publication_date": "2006-10-24",
	"application_number": "10124845",
	"application_date": "2002-04-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Personal product locator on store-owned shopping aid",
	"summary": "",
	"abstract": "A method for providing a location of products to a customer in a retail environment. A product locator unit is attached to a shopping aid utilized within the retail environment. The product locator unit has an access point for entering a customer ID, a signalling mechanism for alerting the customer to a location of a desired product, and a program algorithm for correctly identifying the desired product. A user specifies a desired product which has been linked to the user's customer ID. A signal is transmitted with the product information and location within the retail environment. The signal is received by the product locator unit and the products are compared to the desired products to determine a match and subsequent location of said desired products. The customer is then alerted to the location of the desired product via the signalling mechanism.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07010498",
	"publication_date": "2006-03-07",
	"application_number": "09404398",
	"application_date": "1999-09-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Pre-connection call authentication within a telephony network",
	"summary": "",
	"abstract": "A method for providing call authorization within a telephony network can include receiving a telephony connectivity request for establishing a telephony voice channel between the originating device and a receiving device. The specified receiving device can be determined and receiving device specific information that includes an authorization requirement can be accessed. A connection between the originating device and the receiving device can be established responsive to whether the authorization code satisfies the authorization requirement.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07099653",
	"publication_date": "2006-08-29",
	"application_number": "10324893",
	"application_date": "2002-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Problem determination method, system and program product",
	"summary": "",
	"abstract": "A problem determination method, system and program product are provided. Specifically, the present invention identifies problems with software programs by inserting compiled problem determination probes into program classes while the computer system on which the program is loaded is running. Once the probes have been inserted, the classes will be run and trace data will be generated. The trace data can be retrieved and analyzed to identify and address the problem. When the probes are no longer needed, they can be removed while the computer system continues to run.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07039644",
	"publication_date": "2006-05-02",
	"application_number": "10244865",
	"application_date": "2002-09-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Programmable agent workstation system and method",
	"summary": "",
	"abstract": "A programmable workstation system and method for network based call center with telephony functions provided over the IP network and using a personal computer is disclosed. For such automated call centers there exists a need to coordinate the telephony functions with agent availability functions. Existing solutions use a switch and PSTN phone to communicate information to an automated call director (ACD). The present invention solves the problem of doing similar reporting and with coexistence of telephony functions along with agent data functions. Features of invention include (a) special protocols to relay agent information to Virtual ACD and coexist with H.323 signaling and (b) the ability to relay agent status and provide screen based interface to agent also for such information for agent availability and alerting. The system disclosed generally incorporates JavaPhone (), PlusTcp (), and PlusTapi () APIs with associated method functions to implement the major functions.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07010610",
	"publication_date": "2006-03-07",
	"application_number": "09576166",
	"application_date": "2000-05-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Programmatically pre-selecting specific physical memory blocks to allocate to an executing application",
	"summary": "",
	"abstract": "A method and system for allocating pre-selected physical memory locations to an application executing on a data processing system. Memory allocation subroutines, interacting with the programming interfaces of the operating system (OS), allocates and looks down blocks of memory. The memory allocation subroutines then de-allocates the memory blocks based on whether or not the memory blocks fall within the pre-selected range of physical memory locations. The physical memory locations of the blocks locked down are discovered using the driver. The driver takes the virtual address of the specified memory locations and returns with a corresponding physical address. The memory allocation subroutines provide functions that allow the program developer to specify the number of physical pages to allocate and a range of physical addresses and comprises algorithm(s) that allocates the physical memory within the selected range.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07000087",
	"publication_date": "2006-02-14",
	"application_number": "10008615",
	"application_date": "2001-11-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Providing management functions in decentralized networks",
	"summary": "",
	"abstract": "Methods, systems, and computer program products are disclosed for providing management functions in decentralized networks. Persistent identifiers are defined for nodes, allowing nodes to be identified across sessions and invocations, even though they re-enter the network with a different network address. Paths taken by content resources as they traverse the network (e.g. which nodes forwarded the content) are persisted, along with reputation information about nodes (e.g. indicating how successful they are at answering queries from peers). Trust relationships can be derived using the persisted information. A tiered broadcast strategy is defined for reducing the number of messages exchanged. Preferred embodiments leverage a web services implementation model.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07039701",
	"publication_date": "2006-05-02",
	"application_number": "10107842",
	"application_date": "2002-03-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Real-time shared disk system for computer clusters",
	"summary": "",
	"abstract": "A clustered computer system includes a shared data storage system, preferably a virtual shared disk (VSD) memory system, to which the computers in the cluster write data and from which the computers read data, using data access requests. The data access requests can be associated with deadlines, and individual storage devices in the shared storage system satisfy competing requests based on the deadlines of the requests. The deadlines can be updated and requests can be killed, to facilitate real time data access for, e.g., multimedia applications such as video on demand.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07080218",
	"publication_date": "2006-07-18",
	"application_number": "10990230",
	"application_date": "2004-11-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Remote administration and monitoring of a service component in a service logic execution environment",
	"summary": "",
	"abstract": "A method of directly administering a service component through a hypermedia document can include a series of steps. The hypermedia document can provide an interface to a service logic execution environment (SLEE). At least one administrative option embodied in the hypermedia document can be provided. The at least one administrative option can correspond to a function to be performed by the service component. A user specified administrative option can be received in the hypermedia document and a SLEE compatible event can be generated based on the user specified administrative option. The event can be a type which the service component has been registered in the SLEE to receive. Also, the event can be routed to the service component via the SLEE. The service component can process the event and perform an administrative function consistent with the event.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07072957",
	"publication_date": "2006-07-04",
	"application_number": "09871402",
	"application_date": "2001-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Remote telephony receiver",
	"summary": "",
	"abstract": "A method for implementing a remote receiver connected to a telephony network can include a call authorizer that can access remote receiver specific information, wherein the remote receiver specific information can include an authorization requirement. The call authorizer can receive a digitally encoded signal specifying an authorization code. Prior to a telephony connection being established between the remote receiver and an originating device, the call authorizer can determine whether the authorization code satisfies the authorization requirement. Responsive to this determination, the call authorizer can send a ringing signal via the telephone line to the remote receiver. The remote receiver can power an actuator within the remote receiver with a voltage from the ringing signal. The actuator can activate a device controlled by the remote receiver.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07092500",
	"publication_date": "2006-08-15",
	"application_number": "10325116",
	"application_date": "2002-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Resource and data administration technologies for IT non-experts",
	"summary": "",
	"abstract": "A system and method for managing data resources includes a policy definition layer, a policy deployment layer and a policy execution layer. The policy definition layer provides for creating, editing and visualizing policies through a user interface using intuitive simple language constructs. The policy deployment layer converts the created policies into a relational format that can be directly stored in a policy database. The policy execution layer executes the deployed policies on occurrence of an event. A resource abstraction and notification layer provides the interfacing of the resources with the policy definition layer, policy deployment layer and the policy execution layer.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07149738",
	"publication_date": "2006-12-12",
	"application_number": "10319979",
	"application_date": "2002-12-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Robust NP-based data forwarding techniques that tolerate failure of control-based applications",
	"summary": "",
	"abstract": "In a network environment including one or more network processing (NP) devices implementing for communicating packets, each NP device supporting a forwarding table comprising entries to enable forwarding of received data packets from a source device to a destination device according to a routing protocol via a network connection, the network device routing receiving updated forwarding table entries from one or more network control devices executing routing protocol applications, a system and method for updating forwarding table entries comprises: generating for each forwarding table entry update, a data structure indicating identification of the routing protocol application and a version of a particular routing protocol application instance generating the entry update, the data structure received by the forwarding table and incorporated within a respective forwarding table entry; identifying for deletion forwarding table entries having data structures matching a designated selection criteria; and, deleting the designated forwarding table entries. By doing this old forwarding table entries in the forwarding table are updated efficiently without disrupting packet forwarding process.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07003582",
	"publication_date": "2006-02-21",
	"application_number": "09885782",
	"application_date": "2001-06-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Scalable call management system",
	"summary": "",
	"abstract": "A scalable call management system. The system can include at least one voice server hosting one or more voice browsers, the voice server having a single communications port through which voice call requests can be processed by the voice browsers, each voice browser having a port alias through which call requests can be processed. The system also can include a call processing gateway linking telephony endpoints in a public switched telephone network (PSTN) to the voice server. Finally, the system can include a translation table mapping port aliases to respective voice browsers.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07058046",
	"publication_date": "2006-06-06",
	"application_number": "09999474",
	"application_date": "2001-11-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Self service single sign on management system allowing user to amend user directory to include user chosen resource name and resource security data",
	"summary": "",
	"abstract": "A method for directory enabled, self service, single sign on user account management, the method implemented in conjunction with a directory, the directory comprising resource directory entries and user directory entries. Exemplary embodiments include receiving, from a user through a browser, an SSO user ID and SSO password of the user, the SSO password being known only to the user, retrieving from the directory, in dependence upon the SSO user ID and SSO password, a user directory entry for the user, and creating, in dependence upon the user directory entry, a new mapping of a resource to the SSO user ID.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07016959",
	"publication_date": "2006-03-21",
	"application_number": "10121876",
	"application_date": "2002-04-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Server side program interface to service logic execution environment",
	"summary": "",
	"abstract": "An advanced intelligent network according to the present invention can include a service logic execution environment (SLEE). The SLEE can include an event handler for routing messages between and among client components and service components. The advanced intelligent network further can include at least one service component configured to post and receive messages to and from other service components in the SLEE through the event handler. At least one Internet enabled service component (IESC) executing in the SLEE also can be included. The IESC can be configured to post and receive messages to and from other service components in SLEE through the event handler. The IESC can be communicatively linked to a server side program external to the SLEE.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07007063",
	"publication_date": "2006-02-28",
	"application_number": "09864696",
	"application_date": "2001-05-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Service logic context cache for signaling events",
	"summary": "",
	"abstract": "A method for sharing signaling event data in a telephony system can include receiving within a first service logic component an event from a telephony signaling network. An event context can be determined for the event and asynchronously stored within an event context cache communicatively linked with at least said first service logic component and a second service logic component.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07130408",
	"publication_date": "2006-10-31",
	"application_number": "10172410",
	"application_date": "2002-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Simple scenario builder",
	"summary": "",
	"abstract": "A method of constructing a diagnostic scenario can include intercepting at least one user input event, capturing an image of a region surrounding the user input event, and generating a diagnostic frame specifying the image and text representing attributes of the intercepted user input event.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07043669",
	"publication_date": "2006-05-09",
	"application_number": "10115517",
	"application_date": "2002-04-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Size reduction techniques for vital compliant VHDL simulation models",
	"summary": "",
	"abstract": "A method and system select delay values from a VHDL standard delay file that correspond to an instance of a logic gate in a logic model. Then the system collects all the delay values of the selected instance and builds super generics for the rise-time and the fall-time of the selected instance. Then, the system repeats this process for every delay value in the standard delay file () that correspond to every instance of every logic gate in the logic model. The system then outputs a reduced size standard delay file () containing the super generics for every instance of every logic gate in the logic model.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07085701",
	"publication_date": "2006-08-01",
	"application_number": "10038311",
	"application_date": "2002-01-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Smart bookmarks",
	"summary": "",
	"abstract": "A smart bookmark article of manufacture can include both a network address pointing to the network location of content specifying a form; and, one or more field references, each field reference corresponding to fields specified in the form. The smart bookmark article of manufacture also can include at least one field attribute corresponding to at least one of the field references.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07051117",
	"publication_date": "2006-05-23",
	"application_number": "10202791",
	"application_date": "2002-07-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "SNMP interface to existing resource management extension-enabled management agents",
	"summary": "",
	"abstract": "A method of adding a simple network management protocol (SNMP) interface to an existing resource management extension-enabled management agent without modifying the management agent can include reading a management information base definition of the management agent and creating a static mapping of SNMP object identifiers to management software components of the management agent using the management information base definition. During operation of the management agent, dynamic operating information for the management software components of the management agent can be determined. The static mapping can be updated with the dynamic operating information.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07085851",
	"publication_date": "2006-08-01",
	"application_number": "10189722",
	"application_date": "2002-07-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "SQL debugging using stored procedures",
	"summary": "",
	"abstract": "A method, apparatus and article of manufacture is provided for SQL debugging within a computer system network. The method uses stored procedures via a console for debugging of SQL instructions located in a server, wherein preferably only one database communication line exists between the server and the console. The server has a database management system for retrieving data from a database stored in an electronic storage device coupled to the server. The method uses a debugger manager at the console for commanding and monitoring debugging operations of the server-side SQL instructions performed by a debugger engine, and uses stored procedures of a debugger router as a database communication interface for receiving commands and sending status reports between the debugger manager and the debugger engine.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07155426",
	"publication_date": "2006-12-26",
	"application_number": "09957970",
	"application_date": "2001-09-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Standards-based formatting of flat files into markup language representations",
	"summary": "",
	"abstract": "A method of building an application response message can include receiving a master file specifying a message format for populating a particular data object of an application. The master document can specify element names which correspond to fields of the data object. A technique for mapping particular data items specified by at least one flat file to the element names specified in the master file can be determined; and a markup language representation of the data object can be generated according to the determined mapping technique and the specified message format.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07093195",
	"publication_date": "2006-08-15",
	"application_number": "10103435",
	"application_date": "2002-03-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Statistically-triggered heuristics",
	"summary": "",
	"abstract": "Methods, systems, and computer program products for providing a heuristics service using a generically-consumable, reusable heuristics manager object. This heuristics manager object provides a u201cblack boxu201d approach to statistically-triggered heuristics, and eliminates the need to write application-specific code for compiling statistics and performing complicated analysis of those statistics within each application program. In one embodiment, the heuristics manager object is provided as a web-accessible service, which may be registered in a network-accessible registry such as a UDDI registry. Enterprises may subscribe to this service for monitoring and analyzing statistics pertaining to one or more of the enterprise's applications, thereby providing a novel method of doing business for the provider of the heuristics service.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07107596",
	"publication_date": "2006-09-12",
	"application_number": "10097953",
	"application_date": "2002-03-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Super-distribution of protected digital content",
	"summary": "",
	"abstract": "Briefly according to the present invention, a system, computer readable medium and method to deliver encrypted digital content to from a first system for playing the content to a second system for playing the content. The method on the first user system comprising the steps of: reading from a computer readable medium metadata which has previously been associated with the content; selecting from the metadata associated content to decrypt; establishing a secure connection with an authorization authority, such as a clearinghouse, for decrypting the key used to encrypt the content; receiving a secure container containing the decrypting key for decrypting at least part of the previously encrypted content as permitted; decrypting the content and then encrypting the content with a new encryption key that is generated locally on the end user system.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06983371",
	"publication_date": "2006-01-03",
	"application_number": "09711431",
	"application_date": "2000-11-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for asynchronously reading data across secure sockets layer sessions",
	"summary": "",
	"abstract": "A system and method for asynchronously reading data across secure sockets layer (SSL) sessions, comprising: an SSL session receiving a request from a first application process for an asynchronous reading of data across the SSL session wherein the request specifies a second application program to be executed upon the receiving of data from an Internet protocol network; the SSL session passing the request to TCP/IP; TCP/IP receiving data from an Internet protocol network; TCP/IP executing the second application program as a new process; TCP/IP passing the received data to the SSL session; and the SSL session passing the received data to the second application process.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07016965",
	"publication_date": "2006-03-21",
	"application_number": "10013740",
	"application_date": "2001-11-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for business process space definition",
	"summary": "",
	"abstract": "A method and system for representing business processes such as in a workflow model. Each of a plurality of processes is defined as a 3-tuple including a noun, a verb and an attribute, and a selected process is displayed as a point in navigation space. In this manner, business processes are classified and organized in terms of a 3-dimensional process navigation space facilitating process identification, decomposition and definition by traversal of this space.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07055109",
	"publication_date": "2006-05-30",
	"application_number": "09756931",
	"application_date": "2001-01-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for caching a network connection",
	"summary": "",
	"abstract": "The invention relates to a system and method for caching a network connection. The system sustains connections between a server and one or more back-end databases. The server may establish multiple connections with one or more back-end databases based on data requests from one or more users. The server may determine one or more back-end databases from which the data requests may be satisfied. After receiving the data, the users, using an end-user device, may request disconnection of a connection between the end-user device and the server. The server, however, sustains the connection with the back-end database from which the data was retrieved. The server may use this connection to satisfy other data requests without re-establishing a connection with that back-end database.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07010606",
	"publication_date": "2006-03-07",
	"application_number": "09750321",
	"application_date": "2000-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for catalog administration using supplier provided flat files",
	"summary": "",
	"abstract": "A hybird Notes/DB2 environment provides a requisition catalog on the Web. Client browsers are connected to a GWA infrastructure including a first network dispatcher and a virtual cluster of Domino.Go servers. The network dispatcher sprays out browser requests among configured .nsf servers in virtual server cluster. Communications from this virtual server cluster are, in turn, dispatched by a second network dispatcher servers in a Domino cluster. External objects, primarily for a GUI, are served in a .dfs and include graphic files, Java files, HTML images and net.data macros. The catalog is built from supplier provided flat files. A front end is provided for business logic and validation, as also is a relation database backend. HTML forms are populated using relational database agents. A role table is used for controlling access both to Notes code and DB2 data. Large amounts of data is quickly transferred using an intermediate agent and window.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07133868",
	"publication_date": "2006-11-07",
	"application_number": "09657196",
	"application_date": "2000-09-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for concurrent logical device swapping",
	"summary": "",
	"abstract": "A system and method for concurrently performing logical device swaps for at least one logical subsystem, comprising: concurrently performing the following for each logical subsystem of each computer system prior to the occurrence of an event calling for logical device swapsu2014receiving a list of data storage device pairs, each pair comprising a first device and a corresponding second device and placing each listed second data storage device into a pseudo-online state; and concurrently performing the following for each logical subsystem of each computer system upon the occurrence of an event calling for logical device swapsu2014replacing a binding to each listed first device with a binding to each corresponding listed second device, wherein the binding causes I/O requests to be directed to the listed first device prior to the replacement, and further wherein the binding causes I/O requests to be directed to the corresponding listed second device subsequent to the replacement.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07085956",
	"publication_date": "2006-08-01",
	"application_number": "10134254",
	"application_date": "2002-04-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for converting management models to specific console interfaces",
	"summary": "",
	"abstract": "A system and method for converting management models to specific console interfaces is provided. A plug-in builder process is used to read a management definition object. The plug-in builder process derives display information and method information from the management definition object. Console interface information is used to take the management definition object and transform it into a format suitable for the selected consoles. The management definition object information includes information used to display tree nodes in a management console. The plug-in builder process retrieves methods from the management definition object that corresponds to the displayed nodes. In this manner, when a user selects a tree node from a management console, the method included in the management definition object that was written to support the displayed node is executed. National language files can be used by the plug-in builder process in order to support various national languages used by users.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07065744",
	"publication_date": "2006-06-20",
	"application_number": "10047792",
	"application_date": "2002-01-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for detecting memory management programming errors",
	"summary": "",
	"abstract": "A memory management functions system enables an efficient memory management programming errors. The system includes a server code that reports detailed trace data showing memory management calls; memory that was allocated but not freed; memory requested to be freed that was not allocated; corrupted memory immediately following the allocated space; and incorrect exit from a stored procedure that bypasses reporting and memory cleanup. In addition, the present system frees on exit, memory leaks or memories that were allocated but not explicitly freed earlier. These features allow a programmer to more readily easily detect and debug memory management errors within their program code.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07096339",
	"publication_date": "2006-08-22",
	"application_number": "10378192",
	"application_date": "2003-03-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for enabling efficient multi-protocol database transaction processing",
	"summary": "",
	"abstract": "A system provides efficient multi-protocol database transaction processing in a multi-communications protocol and multi-programming model computing environment. The system separates the source and the target functionalities, and uses generic function names linked to function pointers, in order to permit the source layer to call embedded functions in the target layer. As an example, the system provides a source layer code path that includes embedded call-back functions and embedded generic function names. A target layer code path is set to include embedded functions and generic call-back function names. A function pointer array permits the source layer code path to call functions embedded in the target layer code path using the generic function names. A call-back function pointer array permits the target layer code path to call the call-back functions embedded in the source layer code path using the generic call-back function names.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07076489",
	"publication_date": "2006-07-11",
	"application_number": "10390062",
	"application_date": "2003-03-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for ensuring referential integrity for heterogeneously scoped references in an information management system",
	"summary": "",
	"abstract": "A system and method are provided for an information management system (IMS) to manage heterogenous references in the system, to ensure u201creferential integrityu201d, without changing the underlying relational database management system (RDBMS) of the IMS. One or more system tables are kept that are not visible to system users. In one embodiment, the RDBMS' mechanisms to ensure referential integrity for homogenous references is used in conjunction with the system table to extend referential integrity to heterogenous references. In another embodiment, the triggers of the RDBMS, in conjunction with the system table, are used to ensure referential integrity of heterogenous references.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07080085",
	"publication_date": "2006-07-18",
	"application_number": "09614369",
	"application_date": "2000-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for evaluating characters in an inputted search string against a character table bank comprising a predetermined number of columns that correspond to a plurality of pre-determined candidate character sets in order to provide enhanced full text search",
	"summary": "",
	"abstract": "An evaluator system accepts input textual messages in unknown languages and assesses which character sets, corresponding to languages, matches that message. Textual messages whose individual characters are encoded in 16 bit Unicode or other universal format are parsed, and character sets which can express each character and the accumulated correspondence is logged. When the character sets against which the message is being tested only provide partial matches, the invention can determine which offers the best fit, including by means of a weighting function. The evaluation technology of the invention can be applied to multipart documents, and to search engines and indices. Documents can be indexed according to assigned character sets, and quary strings matched to indices according to language.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07039637",
	"publication_date": "2006-05-02",
	"application_number": "09384088",
	"application_date": "1999-08-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for identifying and utilizing a secondary index to access a database using a management system without an internal catalogue of online metadata",
	"summary": "",
	"abstract": "A system for identifying and utilizing a secondary index to access a database using a management system without an internal catalogue of online metadata. The system receives an application request to access a database from the application program, and parses the application request to determine at least one column name and at least one table name. The system utilizes an online catalogue containing metadata to translate the column name to a field name and the table name to a segment name, wherein the segment name has an associated secondary index. The system utilizes the online catalogue to determine an associated secondary index name, and builds a database request that includes the segment name, the field name, and the associated secondary index name. The system then sends the database request to the database management system, so that the associated secondary index can be used by the database management system in response to the database request.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07020648",
	"publication_date": "2006-03-28",
	"application_number": "10319941",
	"application_date": "2002-12-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for introducing enhanced features into a java swing application program interface",
	"summary": "",
	"abstract": "A system and method are disclosed for providing additional features in an enhanced version of the portable application program interface, Java Swing. The enhanced API can replace the first generation heavyweight abstract windowing toolkit used by legacy Java application programs, with no changes required to those programs. Thus, legacy applications running on various platforms can benefit from the improved functionality. Among the added features are a consistent, platform neutral GUI look and feel, Unicode font encoding for all text controls, and improved text drawing (based on the use of a high performance Java font rasterizer). The enhanced version of Swing is referred to herein as AWTSwing.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06993773",
	"publication_date": "2006-01-31",
	"application_number": "09870612",
	"application_date": "2001-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for metadirectory differential updates among constituent heterogeneous data sources",
	"summary": "",
	"abstract": "A system and method which propagates change operations to data items within a metadirectory on a differential basis in order to minimize or eliminate redundant updates to attributes within data items that have not changed, as well as conserve computing resources and transmission bandwidth consumed by update activities in large organizations of data items. A best match entry in the metadirectory is selected using a weighted score process, a determination is made as to exactly which attributes are changed by the update operation, and a differential update is propagated throughout the metadirectory via direct joiner access to the data items, or through remote access such as through LDAP.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07107297",
	"publication_date": "2006-09-12",
	"application_number": "10044998",
	"application_date": "2002-01-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for monitoring software locks",
	"summary": "",
	"abstract": "A system and method for monitoring software locks is presented. Metric data collection is invoked only when thin lock contention arises in a computer system's application layer. Instrumentation in a computer system's middleware layer tracks time-based metric information such as a waiting time for an application to acquire a lock. Instrumentation tracks garbage collection events and removes garbage collection time durations from time-based metric data as to not distort time-based metric data. Instrumentation also tracks quantity-based events such as the number of applications that request a particular lock. An instrumentation user may retrieve metric data for computer system performance analysis.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07051026",
	"publication_date": "2006-05-23",
	"application_number": "10210832",
	"application_date": "2002-07-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for sharing secure sockets layer sessions across multiple processes",
	"summary": "",
	"abstract": "The invention is a system and method for sharing secure sockets layer (SSL) sessions across multiple processes, comprising: at least one SSL wrapper receiving a request for a shared SSL session from an application program; an SSL daemon process receiving at least one request for a shared SSL session from an SSL wrapper; the SSL daemon calling at least one SSL session; the SSL daemon receiving at least one return code from at least one called SSL session; at least one SSL wrapper receiving at least one return code from the SSL daemon; and at least one SSL wrapper passing a return code to the return code's requesting application.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07073181",
	"publication_date": "2006-07-04",
	"application_number": "10010992",
	"application_date": "2001-11-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for storing conceptual information",
	"summary": "",
	"abstract": "A system and method for storing conceptual information. The system stores concepts as a single object. The object includes all information relating to the concept. Therefore, the object is a self-defining object. A request for any information included in the concept may retrieve the entire object. The object may store the information as a hierarchy. The hierarchy may be navigated in a plurality of directions. The concept may be a color.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07016917",
	"publication_date": "2006-03-21",
	"application_number": "09750319",
	"application_date": "2000-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for using character set matching to enhance print quality",
	"summary": "",
	"abstract": "A system and method of using character set matching to identify the matching or best-matching font to print text of indeterminate language are presented. Today's operating systems do not provide the native tools and functions to easily display text of unknown language or multiple languages. The complexity of any underlying code that handles a multilingual display is sharply increased due to the text being segmented into multiple text runs. The invention employs character set engine that provides necessary character set guessing functionality, as well as an enumerator module to build a linked list of suitable output fonts to display text from an arbitrary language, and multilingual text. Output on a laser, inkjet or other printing apparatus can be granted by traversing that list.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07031002",
	"publication_date": "2006-04-18",
	"application_number": "09384541",
	"application_date": "1999-08-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method to support varying maximum cryptographic strength for common data security architecture (CDSA) applications",
	"summary": "",
	"abstract": "A technique for cryptographic strength selection for at least one application is provided, in accordance with a framework for providing cryptographic support of the at least one application. Data encryption is performed at a first cryptographic strength when the at least one application is privileged to perform encryption at a first cryptographic strength. Data encryption is performed at a second cryptographic strength when the at least one application is not privileged to perform encryption at the first cryptographic strength. The first cryptographic strength is stronger than the second cryptographic strength.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07096505",
	"publication_date": "2006-08-22",
	"application_number": "10788855",
	"application_date": "2004-02-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for implementing modular DOM (Document Object Model)-based multi-modal browsers",
	"summary": "",
	"abstract": "Systems and methods for building multi-modal browsers applications and, in particular, to systems and methods for building modular multi-modal browsers using a DOM (Document Object Model) and MVC (Model-View-Controller) framework that enables a user to interact in parallel with the same information via a multiplicity of channels, devices, and/or user interfaces, while presenting a unified, synchronized view of such information across the various channels, devices and/or user interfaces supported by the multi-modal browser. The use of a DOM framework (or specifications similar to DOM) allows existing browsers to be extended without modification of the underling browser code. A multi-modal browser framework is modular and flexible to allow various fat client and thin (distributed) client approaches.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07028306",
	"publication_date": "2006-04-11",
	"application_number": "10007092",
	"application_date": "2001-12-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Telephony and voice interface for voice server system management",
	"summary": "",
	"abstract": "A method of administering a voice server can include, within the voice server, receiving a call from a system administrator. Call control data of the received call can be matched with a system administration application of the voice server. The system administration application can be executed. Responsive to the executing step, communications between the system administration application and a resource management system of the voice server can be established such that the system administrator can interact with the resource management system to request administrative functions over the call.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07099442",
	"publication_date": "2006-08-29",
	"application_number": "10302437",
	"application_date": "2002-11-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Telephony voice server",
	"summary": "",
	"abstract": "A voice server for hosting telephony services can include a stack interface configured to exchange telephony signaling information with a circuit-switched to packet-switched interface and a plurality of core clients, each having a call model stored therein. Each core client can be configured to select and execute at least one voice service associated with a call. The voice server further can include a speech processing system configured to convert speech to text and to convert text to speech for processing the call as well as a core processor. The core processor can be configured to distribute the telephony signaling information to the core clients and coordinate operation of the core clients and the speech processing system. The core processor also can exchange telephony signaling information with the circuit-switched to packet-switched interface via the stack interface.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07103156",
	"publication_date": "2006-09-05",
	"application_number": "10310238",
	"application_date": "2002-12-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Tilting tree spinning cones method and system for mapping XML to n-dimensional data structure using a single dimensional mapping array",
	"summary": "",
	"abstract": "A tilting tree, spinning cones process is employed to map n-dimensional array data originally in markup language, to an n-dimension table suitable for use by COBOL application programs. Mapping is performed without scanning the result array for an empty slot. This allows the result array slots to be pre-loaded with state data. During mapping, the hierarchical nature of the markup language n-dimensional data is represented in two-dimensions using an inverted tree structure having cones for each array level. The tree is tilted to bring a member of a given level into contact with one of the axes of the tree graph, followed by spinning appropriate cones to bring a certain member of that level into contact with the same axis. This results in the ability to use a one-dimensional mapping array. The dimension offset on the mapping axis can then be used as an index value into the mapped array output for storage or retrieval of element data.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "06985910",
	"publication_date": "2006-01-10",
	"application_number": "10361170",
	"application_date": "2003-02-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Timed start-conditions for activities in workflow management systems",
	"summary": "",
	"abstract": "The present invention relates to a method for processing of start conditions of activities within a process model processable by a Workflow Management System (WFMS); said process model comprises activities being nodes of an graph and directed control connectors defining a potential control flow. The method evaluates, if a target-activity may be started, by evaluating the truth-value of a start-condition once the truth-values of all incoming control-connectors of said target-activity have been posted. A further timed-evaluation-step evaluates, if at least a first one of said incoming control-connectors is associated with a time-interval, and if said time-interval has been met. In the affirmative case said timed-evaluation-step continues the processing to start said target-activity even if not all truth-values of said incoming control-connectors have been posted yet under the condition, that the truth-value of said first incoming control-connector has been posted and that said truth-value evaluates to TRUE.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07024670",
	"publication_date": "2006-04-04",
	"application_number": "09396245",
	"application_date": "1999-09-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transforming data automatically between communications parties in a computing network",
	"summary": "",
	"abstract": "Methods, systems, and computer program products for automatically transforming data or business messages to enable communication between parties in a distributed computing environment (e.g. between business partners who exchange data over a public network, and who do not necessarily use the same data formats), where this data transformation preferably occurs at the edge of the computing network. A set of transformation services is described, and include template registration, transformation, forward, and receive services. Services from this set may optionally be combined to create composite transformation services. A template defines how to transform one data format into another. Selection criteria may be provided to enable dynamically selecting a template at run-time. Using these services, one business partner simply hands its data off into the network to a network-accessible transformation service, where the data is automatically transformed into a format usable by its business partner and forwarded to that business partner.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07120703",
	"publication_date": "2006-10-10",
	"application_number": "11059165",
	"application_date": "2005-02-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Updating usage conditions in lieu of download digital rights management protected content",
	"summary": "",
	"abstract": "A method on an end user system for creating additional copies onto at least one computer readable medium such as CDs, DVDs, ZipDisksu2122, tape, Flash memory, and RAM. The method comprising the steps of: receiving encrypted content with associated usage conditions and a first hash value; receiving a selection from an end user to create at least one copy of the encrypted content onto at least one computer readable medium; sending a request to an online electronic store of the encrypted content selected to be copied; receiving from the electronic store a description of the content selected to be copied along with a second hash value; and determining if the first hash value received is identical to the second hash value and if the first hash and the second hash value is identical authorizing the creating additional copies onto at least one computer readable medium.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07110984",
	"publication_date": "2006-09-19",
	"application_number": "09711747",
	"application_date": "2000-11-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "User registry adapter framework",
	"summary": "",
	"abstract": "A method, computer program product, and data processing system, with which a unified security policy may be implemented using existing application components with disparate security mechanisms and user registries is disclosed. The present invention provides a generic application programming interface (API) that forms a framework for creating registry adapters. Registry adapters allow a policy director (an item of software for imposing a sitewide security policy) to operate with new or unfamiliar registry types by acting as a drop-in translator for converting generic registry-access commands into operations specific to the particular registry in question.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07146637",
	"publication_date": "2006-12-05",
	"application_number": "09895978",
	"application_date": "2001-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Using introspection for access of class resource bundle information for messages",
	"summary": "",
	"abstract": "Using introspection for access to class resource bundle information for the display and update of pairs of related graphical user interface (u201cGUIu201d) panels. In preferred embodiments, a Java resource bundle is provided with a first array containing pairs of key strings and corresponding text blocks and a second array containing pairs of key strings and corresponding text blocks, with the first key identifying a list entry and the second key identifying the text block corresponding to the list entry. This data structure may be used in the display of a pair of GUI panels, representing for example a list of help topics where the help text corresponds to a selected help topic. By introspecting, a mouse listener can efficiently find and display the help text corresponding to a topic selected by a mouse click; furthermore, the resource bundle can be updated without rebuilding the software accessing it.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07069509",
	"publication_date": "2006-06-27",
	"application_number": "10052579",
	"application_date": "2002-01-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Virtual printer with asynchronous job and device status",
	"summary": "",
	"abstract": "A flexible and extensible virtual printer architecture is provided. According to one aspect of the present invention final status associated with a presentation job (e.g., a fax job or a print job) is made available to an output server. One or more host processing threads or processes are spawned for each new presentation job received by the output server. Then, the presentation job is submitted to a presentation device for which the presentation job is destined by way of an instance of a wrapper process that is capable of communicating bi-directionally with the presentation device. After submitting the presentation job, a host job status thread or process waits for status pertaining to the presentation job. Ultimately, a final status associated with the presentation job is received by the wrapper process and the wrapper process reports the final status to the host job status thread or process. According to another aspect of the present invention, job and device status may be reported asynchronously. One or more host processing threads or processes are spawned for each new presentation job received. A first presentation job is submitted to a presentation device for which the presentation job is destined by way of a first instance of a wrapper process that communicates bi-directionally with the presentation device. Subsequently, a second presentation job is submitted to the presentation device by way of a second instance of the wrapper process. A first and second job status thread or process wait for status pertaining to the first and second presentation jobs, respectively. A final status associated with the second presentation job is received by the second instance of the wrapper before a final status associated with the first presentation job is received by the first instance of the wrapper. Then, the second instance of the wrapper process reports the final status to the second job status thread or process.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07095523",
	"publication_date": "2006-08-22",
	"application_number": "10318717",
	"application_date": "2002-12-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Visible multi-level online-offline configuration control",
	"summary": "",
	"abstract": "A method and system presents a plurality of selections to a user for updating a system configuration from the choices of: an immediate mode, a scheduled queued mode, a queued mode, and an optimized activation mode. The immediate mode activates all change requests immediately. The scheduled queued mode queues all change requests and activates the change requests at a predetermined time. The queued mode queues all change requests and activates the change requests after receiving a triggering event. The optimized activation mode analyzes the system usage to determine and optimally vary the mode among the immediate mode, the scheduled queued mode, and the queued mode.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07065563",
	"publication_date": "2006-06-20",
	"application_number": "10022135",
	"application_date": "2001-12-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web browser-based object oriented application component test client",
	"summary": "",
	"abstract": "The universal, Web browser-based Enterprise JavaBean (EJB) test client is itself a Java 2 Enterprise Edition (J2EE) application packaged in a Web archive file. This archive, when extracted, consists of a set of files that are installed on a target application server. The installation makes it possible for a user of a Web browser on a workstation remote from the application server to perform a number of tests on, and invoke, methods in EJB beans that are installed on the staging, or even production, servers. It is also possible to perform tests in real time under real conditions.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07043460",
	"publication_date": "2006-05-09",
	"application_number": "09871496",
	"application_date": "2001-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Workflow system and method",
	"summary": "",
	"abstract": "A network-enabled workflow system is used in conjunction with a rules-based search engine to provide an easy-to-use interface to build workflow processes that facilitate the support for electronic business applications as well as business-to-business relationships. The system allows workflow services to be rendered to external organizations such as partners, suppliers, distributors and customers. Workflow services are preferably represented by roles that can be used to represent workflow actors in the workflow routing rules. These roles are preferably evaluated at run-time to best match recipients (via the MORSE algorithm) depending on the organization context from which the routing request is made. Furthermore, the network-enabled workflow system provides for the analysis of workflow processes in real time.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07065493",
	"publication_date": "2006-06-20",
	"application_number": "09828596",
	"application_date": "2001-04-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and systems for accessing information on a network using message aliasing functions having shadow callback functions",
	"summary": "",
	"abstract": "The present invention provides methods and systems for accessing a network URL through a pre-assigned simplified network address, correlating to the URL, and for displaying the home page having the URL as its address. These methods and systems provide easier URL and home page access because persons wanting to access the home page need only input the simplified network address, thereby avoiding the need to know and input the URL character string. The simplified network addresses of the present invention include numbers. Methods are provided for selecting numbers for assignment to URLs. The URL and home page access and display methods of the present invention include: assigning a simplified network address such as a number to a URL, storing the URL and number conversion in a network accessible storage system, inputting the assigned number in a network accessible computer, communicating the inputted number to the storage system, converting the number to the URL, retrieving the home page corresponding to the URL and displaying the home page on the computer. Additionally, the invention provides methods for use in message passing operating systems wherein system level messages to specific objects are intercepted, creating an alias message. The invention further defines networked systems and methods for operating the networked systems that rely on the interception and rule-based modification of messages passing between system applications.",
	"url": null,
	"owner": "Internet Number Corporation",
	"publication_number": "07058726",
	"publication_date": "2006-06-06",
	"application_number": "09566443",
	"application_date": "2000-05-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Digital certificate support system, methods and techniques for secure electronic commerce transaction and rights management",
	"summary": "",
	"abstract": "Different support functions can be collected together in hierarchical and/or in networked relationships to suit various business models and/or other objectives. Modular support functions can combined in different arrays to form different Commerce Utility Systems for different design implementations and purposes. These Commerce Utility Systems can be distributed across a large number of electronic appliances with varying degrees of distribution.",
	"url": null,
	"owner": "Intertrust Technologies Corp.",
	"publication_number": "07133846",
	"publication_date": "2006-11-07",
	"application_number": "09398665",
	"application_date": "1999-09-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methods for secure transaction management and electronic rights protection",
	"summary": "",
	"abstract": "The present invention provides systems and methods for secure transaction management and electronic rights protection. Electronic appliances such as computers equipped in accordance with the present invention help to ensure that information is accessed and used only in authorized ways, and maintain the integrity, availability, and/or confidentiality of the information. Such electronic appliances provide a distributed virtual distribution environment (VDE) that may enforce a secure chain of handling and control, for example, to control and/or meter or otherwise monitor use of electronically stored or disseminated information. Such a virtual distribution environment may be used to protect rights of various participants in electronic commerce and other electronic or electronic-facilitated transactions. Distributed and other operating systems, environments and architectures, such as, for example, those using tamper-resistant hardware-based processors, may establish security at each node. These techniques may be used to support an all-electronic information distribution, for example, utilizing the u201celectronic highwayu201d.",
	"url": null,
	"owner": "Intertrust Technologies Corp.",
	"publication_number": "07133845",
	"publication_date": "2006-11-07",
	"application_number": "09328668",
	"application_date": "1999-06-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for matching, selecting, narrowcasting, and/or classifying based on rights management and/or other information",
	"summary": "",
	"abstract": "Rights management information is used at least in part in a matching, narrowcasting, classifying and/or selecting process. A matching and classification utility system comprising a kind of Commerce Utility System is used to perform the matching, narrowcasting, classifying and/or selecting. The matching and classification utility system may match, narrowcast, classify and/or select people and/or things, non-limiting examples of which include software objects. The Matching and Classification Utility system may use any pre-existing classification schemes, including at least some rights management information and/or other qualitative and/or parameter data indicating and/or defining classes, classification systems, class hierarchies, category schemes, class assignments, category assignments, and/or class membership. The Matching and Classification Utility may also use at least some rights management information together with any artificial intelligence, expert system, statistical, computational, manual, or any other means to define new classes, class hierarchies, classification systems, category schemes, and/or assign persons, things, and/or groups of persons and/or things to at least one class.",
	"url": null,
	"owner": "Intertrust Technologies Corp.",
	"publication_number": "07143066",
	"publication_date": "2006-11-28",
	"application_number": "10272911",
	"application_date": "2002-10-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for secure transaction management and electronic rights protection",
	"summary": "",
	"abstract": "The present invention provides systems and methods for secure transaction management and electronic rights protection. Electronic appliances such as computers equipped in accordance with the present invention help to ensure that information is accessed and used only in authorized ways, and maintain the integrity, availability, and/or confidentiality of the information Such electronic appliances provide a distributed virtual distribution environment (VDE) that may enforce a secure chain of handling and control, for example, to control and/or meter or otherwise monitor use of electronically stored or disseminated information. Such a virtual distribution environment may be used to protect rights of various participants in electronic commerce and other electronic or electronic-facilitated transactions. Distributed and other operating systems, environments and architectures, such as, for example, those using tamper-resistant hardware-based processors, may establish security at each node. These techniques may be used to support an all-electronic information distribution, for example, utilizing the u201celectronic highway.u201d",
	"url": null,
	"owner": "Intertrust Technologies Corp.",
	"publication_number": "07051212",
	"publication_date": "2006-05-23",
	"application_number": "10157061",
	"application_date": "2002-05-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for secure transaction management and electronic rights protection",
	"summary": "",
	"abstract": "The present invention provides systems and methods for secure transaction management and electronic rights protection. Electronic appliances such as computers equipped in accordance with the present invention help to ensure that information is accessed and used only in authorized ways, and maintain the integrity, availability, and/or confidentiality of the information. Such electronic appliances provide a distributed virtual distribution environment (VDE) that may enforce a secure chain of handling and control, for example, to control and/or meter or otherwise monitor use of electronically stored or disseminated information. Such a virtual distribution environment may be used to protect rights of various participants in electronic commerce and other electronic or electronic-facilitated transactions. Distributed and other operating systems, environments and architectures, such as, for example, those using tamper-resistant hardware-based processors, may establish security at each node. These techniques may be used to support an all-electronic information distribution, for example, utilizing the u201celectronic highway.u201d",
	"url": null,
	"owner": "Intertrust Technologies Corp.",
	"publication_number": "07120800",
	"publication_date": "2006-10-10",
	"application_number": "09870801",
	"application_date": "2001-06-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for secure transaction management and electronic rights protection",
	"summary": "",
	"abstract": "The present invention provides systems and methods for electronic commerce including secure transaction management and electronic rights protection. Electronic appliances such as computers employed in accordance with the present invention help to ensure that information is accessed and used only in authorized ways, and maintain the integrity, availability, and/or confidentiality of the information. Secure subsystems used with such electronic appliances provide a distributed virtual distribution environment (VDE) that may enforce a secure chain of handling and control, for example, to control and/or meter or otherwise monitor use of electronically stored or disseminated information. Such a virtual distribution environment may be used to protect rights of various participants in electronic commerce and other electronic or electronic-facilitated transactions. Secure distributed and other operating system environments and architectures, employing, for example, secure semiconductor processing arrangements that may establish secure, protected environments at each node. These techniques may be used to support an end-to-end electronic information distribution capability that may be used, for example, utilizing the u201celectronic highway.u201d",
	"url": null,
	"owner": "Intertrust Technologies Corp.",
	"publication_number": "07124302",
	"publication_date": "2006-10-17",
	"application_number": "09948806",
	"application_date": "2001-09-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for secure transaction management and electronic rights protection",
	"summary": "",
	"abstract": "The present invention provides systems and methods for secure transaction management and electronic rights protection. Electronic appliances such as computers equipped in accordance with the present invention help to ensure that information is accessed and used only in authorized ways, and maintain the integrity, availability, and/or confidentiality of the information. Such electronic appliances provide a distributed virtual distribution environment (VDE) that may enforce a secure chain of handling and control, for example, to control and/or meter or otherwise monitor use of electronically stored or disseminated information. Such a virtual distribution environment may be used to protect rights of various participants in electronic commerce and other electronic or electronic-facilitated transactions. Distributed and other operating systems, environments and architectures, such as, for example, those using tamper-resistant hardware-based processors, may establish security at each node. These techniques may be used to support an all-electronic information distribution, for example, utilizing the u201celectronic highway.u201d",
	"url": null,
	"owner": "Intertrust Technologies Corp.",
	"publication_number": "07095854",
	"publication_date": "2006-08-22",
	"application_number": "09678252",
	"application_date": "2000-10-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for secure transaction management and electronic rights protection",
	"summary": "",
	"abstract": "The present invention provides systems and methods for secure transaction management and electronic rights protection. Electronic appliances such as computers equipped in accordance with the present invention help to ensure that information is accessed and used only in authorized ways, and maintain the integrity, availability, and/or confidentiality of the information. Such electronic appliances provide a distributed virtual distribution environment (VDE) that may enforce a secure chain of handling and control, for example, to control and/or meter or otherwise monitor use of electronically stored or disseminated information. Such a virtual distribution environment may be used to protect rights of various participants in electronic commerce and other electronic or electronic-facilitated transactions. Distributed and other operating systems, environments and architectures, such as, for example, those using tamper-resistant hardware-based processors, may establish security at each node. These techniques may be used to support an all-electronic information distribution, for example, utilizing the u201celectronic highway.u201d",
	"url": null,
	"owner": "Intertrust Technologies Corp.",
	"publication_number": "07069451",
	"publication_date": "2006-06-27",
	"application_number": "09342899",
	"application_date": "1999-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for secure transaction management and electronic rights protection",
	"summary": "",
	"abstract": "The present invention provides systems and methods for secure transaction management and electronic rights protection. Electronic appliances such as computers equipped in accordance with the present invention help to ensure that information is accessed and used only in authorized ways, and maintain the integrity, availability, and/or confidentiality of the information. Such electronic appliances provide a distributed virtual distribution environment (VDE) that may enforce a secure chain of handling and control, for example, to control and/or meter or otherwise monitor use of electronically stored or disseminated information. Such a virtual distribution environment may be used to protect rights of various participants in electronic commerce and other electronic or electronic-facilitated transactions. Distributed and other operating systems, environments and architectures, such as, for example, those using tamper-resistant hardware-based processors, may establish security at each node. These techniques may be used to support an all-electronic information distribution, for example, utilizing the u201celectronic highway.u201d",
	"url": null,
	"owner": "Intertrust Technologies Corp.",
	"publication_number": "07100199",
	"publication_date": "2006-08-29",
	"application_number": "10696659",
	"application_date": "2003-10-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for using cryptography to protect secure computing environments",
	"summary": "",
	"abstract": "Secure computation environments are protected from bogus or rogue load modules, executables and other data elements through use of digital signatures, seals and certificates issued by a verifying authority. A verifying authorityu2014which may be a trusted independent third partyu2014tests the load modules or other executables to verify that their corresponding specifications are accurate and complete, and then digitally signs the load module or other executable based on tamper resistance work factor classification. Secure computation environments with different tamper resistance work factors use different verification digital signature authentication techniques (e.g., different signature algorithms and/or signature verification keys)u2014allowing one tamper resistance work factor environment to protect itself against load modules from another, different tamper resistance work factor environment. Several dissimilar digital signature algorithms may be used to reduce vulnerability from algorithm compromise, and subsets of multiple digital signatures may be used to reduce the scope of any specific compromise.",
	"url": null,
	"owner": "Intertrust Technologies Corp.",
	"publication_number": "07120802",
	"publication_date": "2006-10-10",
	"application_number": "09925072",
	"application_date": "2001-08-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Techniques for defining, using and manipulating rights management data structures",
	"summary": "",
	"abstract": "A descriptive data structure provides an abstract representation of a rights management data structure such as a secure container. The abstract representation may describe, for example, the layout of the rights management data structure. It can also provide metadata describing or defining other characteristics of rights management data structure use and/or processing. For example, the descriptive data structure can provide integrity constraints that provide a way to state rules about associated information. The abstract representation can be used to create rights management data structures that are interoperable and compatible with one another. This arrangement preserves flexibility and ease of use without compromising security.",
	"url": null,
	"owner": "Intertrust Technologies Corp.",
	"publication_number": "07062500",
	"publication_date": "2006-06-13",
	"application_number": "09819063",
	"application_date": "2000-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Trusted storage systems and methods",
	"summary": "",
	"abstract": "Systems and methods are disclosed for providing a trusted database system that leverages a small amount of trusted storage to secure a larger amount of untrusted storage. Data are encrypted and validated to prevent unauthorized modification or access. Encryption and hashing are integrated with a low-level data model in which data and meta-data are secured uniformly. Synergies between data validation and log-structured storage are exploited.",
	"url": null,
	"owner": "Intertrust Technologies Corp.",
	"publication_number": "07152165",
	"publication_date": "2006-12-19",
	"application_number": "09617148",
	"application_date": "2000-07-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods for matching, selecting, narrowcasting, and/or classifying based on rights management and/or other information",
	"summary": "",
	"abstract": "Rights management information is used at least in part in a matching, narrowcasting, classifying and/or selecting process. A matching and classification utility system comprising a kind of Commerce Utility System is used to perform the matching, narrowcasting, classifying and/or selecting. The matching and classification utility system may match, narrowcast, classify and/or select people and/or things, non-limiting examples of which include software objects. The Matching and Classification Utility system may use any pre-existing classification schemes, including at least some rights management information and/or other qualitative and/or parameter data indicating and/or defining classes, classification systems, class hierarchies, category schemes, class assignments, category assignments, and/or class membership. The Matching and Classification Utility may also use at least some rights management information together with any artificial intelligence, expert system, statistical, computational, manual, or any other means to define new classes, class hierarchies, classification systems, category schemes, and/or assign persons, things, and/or groups of persons and/or things to at least one class.",
	"url": null,
	"owner": "Intertrust Technologies Corporation",
	"publication_number": "07110983",
	"publication_date": "2006-09-19",
	"application_number": "10272906",
	"application_date": "2002-10-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods for matching, selecting, narrowcasting, and/or classifying based on rights management and/or other information",
	"summary": "",
	"abstract": "Rights management information is used at least in part in a matching, narrowcasting, classifying and/or selecting process. A matching and classification utility system comprising a kind of Commerce Utility System is used to perform the matching, narrowcasting, classifying and/or selecting. The matching and classification utility system may match, narrowcast, classify and/or select people and/or things, non-limiting examples of which include software objects. The Matching and Classification Utility system may use any pre-existing classification schemes, including at least some rights management information and/or other qualitative and/or parameter data indicating and/or defining classes, classification systems, class hierarchies, category schemes, class assignments, category assignments, and/or class membership. The Matching and Classification Utility may also use at least some rights management information together with any artificial intelligence, expert system, statistical, computational, manual, or any other means to define new classes, class hierarchies, classification systems, category schemes, and/or assign persons, things, and/or groups of persons and/or things to at least one class.",
	"url": null,
	"owner": "Intertrust Technologies Corporation",
	"publication_number": "07092914",
	"publication_date": "2006-08-15",
	"application_number": "09498369",
	"application_date": "2000-02-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for governing content rendering, protection, and management applications",
	"summary": "",
	"abstract": "System and methods are disclosed for governing digital rights management systems and other applications through the use of supervisory governance applications and keying mechanisms. Governance is provided by enabling the supervisory applications to revoke access keys and/or to block certain file system calls, thus preventing governed applications from accessing protected electronic content.",
	"url": null,
	"owner": "Intertrust Technologies Corporation",
	"publication_number": "07107448",
	"publication_date": "2006-09-12",
	"application_number": "09874744",
	"application_date": "2001-06-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Trusted and secure techniques, systems and methods for item delivery and execution",
	"summary": "",
	"abstract": "Documents and other items can be delivered electronically from sender to recipient with a level of trustedness approaching or exceeding that provided by a personal document courier. A trusted electronic go-between can validate, witness and/or archive transactions while, in some cases, actively participating in or directing the transaction. Printed or imaged documents can be marked using handwritten signature images, seal images, electronic fingerprinting, watermarking, and/or steganography. Electronic commercial transactions and transmissions take place in a reliable, u201ctrustedu201d virtual distribution environment that provides significant efficiency and cost savings benefits to users in addition to providing an extremely high degree of confidence and trustedness. The systems and techniques have many uses including but not limited to secure document delivery, execution of legal documents, and electronic data interchange (EDI).",
	"url": null,
	"owner": "Intertrust Technologies Corporation",
	"publication_number": "07143290",
	"publication_date": "2006-11-28",
	"application_number": "09632944",
	"application_date": "2000-08-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Virtual hardware machine, methods, and devices",
	"summary": "",
	"abstract": "The invention relates to methods and apparatus suitable for executing a service or application at a client peer or client side, having a client specific device or client specific platform, with a reconfigurable architecture, said service or application being provided from a service peer or a service side. In a first aspect of the invention, the method comprises transmitting to the client peer from the server peer an abstract bytecode. The abstract bytecode is generated at the service peer by performing a compilation of an application. The abstract bytecode includes hardware bytecode and software bytecode. At the client peer, the abstract bytecode is transformed into native bytecode for the client specific device.",
	"url": null,
	"owner": "Interuniversitair Microelektronica Centrum (IMEC)",
	"publication_number": "07150011",
	"publication_date": "2006-12-12",
	"application_number": "09886533",
	"application_date": "2001-06-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Cash flow optimization using a genetic algorithm",
	"summary": "",
	"abstract": "A genetic algorithm determines a plan for payment of payment obligations in accounts payable of a finance account. The genetic algorithm operates to satisfy certain objectives, including maximizing the minimum daily cash on hand in the finance account. A genome population including a number of vectors is generated. The genome population is modified using a genetic algorithm, until at least one vector represents a plan for the payment obligations such that payment of each payment obligation in accordance with the vector most nearly satisfies one or more objectives.",
	"url": null,
	"owner": "Intuit Inc.",
	"publication_number": "07124105",
	"publication_date": "2006-10-17",
	"application_number": "10349700",
	"application_date": "2003-01-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Granting access rights to unattended software",
	"summary": "",
	"abstract": "An access site allows a client application to access a server application on behalf of a subscriber who has an account at the client site. A client application registers with the access site and receives a certificate for the client application. A subscriber is directed to the access site upon an indication that she would like to use the features of the client application that integrate with the server application. The subscriber specifies access rights to the access site, and issues a validation token in association with the specified access rights. When the client site needs the server application to process subscriber data, it forwards the validation token to the access site, using the certificate. The access site validates this information, and where appropriate the server application processes the subscriber data and returns the results to the client application.",
	"url": null,
	"owner": "Intuit, Inc.",
	"publication_number": "07024689",
	"publication_date": "2006-04-04",
	"application_number": "10318569",
	"application_date": "2002-12-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Process control configuration system with connection validation and configuration",
	"summary": "",
	"abstract": "Connection objects or other such data structures facilitate establishing and configuring connections between objects that model components in a process control system. A first set of data structures (e.g. the object connection type structures) identify valid types for component-to-component pairings and the respective roles of each component in the pairing (e.g., parent or child, source or sink). A second set of data structures (e.g., the parameter connection type structures) supply similar information for parameter-to-parameter connections. Together, these data structures can be used, for example, to validate component-to-component connections suggested by the user and to automatically configure parameter-to-parameter connections. Actual connections, both at the component or parameter level, are reflected using parameter overrides within the parameterized object modelu2014with which the connection objects are constructed.",
	"url": null,
	"owner": "Invensys Systems, Inc.",
	"publication_number": "07089530",
	"publication_date": "2006-08-08",
	"application_number": "09448223",
	"application_date": "1999-11-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Process control configuration system with parameterized objects",
	"summary": "",
	"abstract": "A process control system is configured via manipulation of objects that model system components, e.g., sensors, blocks, control processors, historians, workstations, etc. Individual objects include parameters that characterize the underlying components and/or the behavior of the objects themselves. These parameters are derived from the u201cparents,u201d from which the objects are created. Derived characteristics need not be defined explicitly but, rather, are defined implicitly or by reference. These derived characteristics may be overridden for an individual object and, thereby, its progeny. Although objects have class-like characteristics (i.e., insofar as they are definitional in nature), they can be created at configuration time, without the need for recompilation.",
	"url": null,
	"owner": "Invensys Systems, Inc.",
	"publication_number": "07096465",
	"publication_date": "2006-08-22",
	"application_number": "09448374",
	"application_date": "1999-11-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Time synchronization schemes wherein at least one data message associates a hardware pulse with a future time",
	"summary": "",
	"abstract": "Schemes for synchronizing networked stations using data messages and hardware pulses are described herein. In one embodiment, a method to provide time data from a first processor to at least one second processor may include transmitting a data message from the first processor to the at least one second processor, in which the data message associates a hardware pulse with a future time, and transmitting a hardware pulse from the first processor to the at least one second processor at the future time.",
	"url": null,
	"owner": "Invensys Systems, Inc.",
	"publication_number": "07146516",
	"publication_date": "2006-12-05",
	"application_number": "10324842",
	"application_date": "2002-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interface bus protocol for managing transactions in a system of distributed microprocessor interfaces toward marco-cell based designs implemented as ASIC or FPGA bread boarding",
	"summary": "",
	"abstract": "A distributed interface between a microprocessor or a standard bus and user macro-cells belonging to an ASIC, FPGA, or similar silicon devices includes a main module connected to the microprocessor bus on one side and to a COMMON-BUS inside the interface on which a cluster of peripheral modules is appended on the other side. Peripheral modules are also connected to the user macro-cells through multiple point-to-point buses to transfer signals in two directions. A set of hardware and firmware resources such as registers, counters, synchronizers, dual port memories (e.g. RAM, FIFO) either synchronous or asynchronous with respect to macro-cells clock is encompassed in each peripheral module. Subsets of the standard resources are diversely configured in each peripheral module in accordance with specific needs of the user macro-cells.",
	"url": null,
	"owner": "Italtel S.p.A.",
	"publication_number": "07130942",
	"publication_date": "2006-10-31",
	"application_number": "11081913",
	"application_date": "2005-03-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Adaptive software management",
	"summary": "",
	"abstract": "Adaptive control techniques, such as power management techniques for use in managing power consumption in an electronic device, employ optimization analysis to generate power consumption/quality of service performance plots. The optimization analysis can include experiments that are performed for various settings of control factors that control the operation of the device. The performance plots relate power consumption in the device to quality of service levels for the device. During operation, aspects of the device are monitored. A control factor and a level for the control factor are automatically selected based on the monitored aspects, by using the performance plots to identify an experiment having the desired quality of service level and the corresponding control factor level. The control factor is then automatically set to that selected level to control the power consumption or quality of service of the device.",
	"url": null,
	"owner": "ITT Manufacturing Enterprises, Inc.",
	"publication_number": "07079904",
	"publication_date": "2006-07-18",
	"application_number": "10660768",
	"application_date": "2003-09-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application program interface-access to hardware services for storage management applications",
	"summary": "",
	"abstract": "A method and device for using a set of APIs are provided. Some of the functions which used to be performed by software are now accelerated through hardware.",
	"url": null,
	"owner": "Ivivity, Inc.",
	"publication_number": "07093038",
	"publication_date": "2006-08-15",
	"application_number": "10428638",
	"application_date": "2003-05-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multi-protocol, multi-interface communications device testing system",
	"summary": "",
	"abstract": "A multi-protocol, multi-interface communications device testing system is disclosed. The system simultaneously control communication channels of a communications platform though multiple Interface Protocols, such as TDM, IP and Telephony Application Program Interfaces. The system also allows the creation of multi Interface Protocol Test Scenarios, and displays the results of executing The test results from all Protocols Interfaces and records and displays results.",
	"url": null,
	"owner": "IXIA",
	"publication_number": "07099438",
	"publication_date": "2006-08-29",
	"application_number": "10172548",
	"application_date": "2002-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for simplifying databinding in application programs",
	"summary": "",
	"abstract": "A method for communicating between an application and a database by using a lightweight stored procedure data-binding framework for applications written in object oriented programming languages such as JAVA, significantly reduces the coding effort required to communicate with a relational database. Once the developer specifics the needed tabular data, the inventive framework generates all needed data objects and stored procedures to accomplish the interaction with that database data. The automatically generated code is then used by the application via a run-time component. This means the developer need only make simple calls in a few lines of code for database interaction. The encapsulated data model deals only with persistence and retrieval issues and is therefore de-coupled from the business model.",
	"url": null,
	"owner": "JP Morgan Chase Bank",
	"publication_number": "07149752",
	"publication_date": "2006-12-12",
	"application_number": "10308792",
	"application_date": "2002-12-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for archive integrity management and related methods",
	"summary": "",
	"abstract": "A system for archive integrity management and related methods are disclosed. The invention includes one or more integrity manager applications, each of which monitor the integrity of an aspect of a data archive. Some integrity manager applications monitor the integrity of processes executed by the archive system, and other integrity manager applications monitor the integrity of communication paths in the archive system. A file input integrity manager application monitors the integrity of a plurality of processes associated with storing a new data file in the archive. A business content integrity manager application determines what documents are required for a transaction and monitors whether all of the required documents have been received by the archive system. Further, an event integrity manager application executes predetermined events triggered by characteristics of documents stored in the archive system and ensures that all events have been properly executed.",
	"url": null,
	"owner": "JPMorgan Chase Bank, N.A.",
	"publication_number": "07069278",
	"publication_date": "2006-06-27",
	"application_number": "10912819",
	"application_date": "2004-08-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Diagnosis of network fault conditions",
	"summary": "",
	"abstract": "In general, the invention facilitates diagnosing fault conditions, such as flapping, by permitting users to request information for specific components in a network device such as a router. The invention also facilitates the diagnosis of other fault conditions, including, but not limited to, excessive numbers of dropped packets, hard drive crashes, high temperature readings, and inactive interface cards. A user may obtain a targeted log containing information relating to selected fault conditions or other network device events, rather than a system log containing information relating to all network device events, some of which may not be of interest to the user. The targeted log may be parsed and analyzed with greater ease than the system log.",
	"url": null,
	"owner": "Juniper Networks, Inc.",
	"publication_number": "07111206",
	"publication_date": "2006-09-19",
	"application_number": "10247778",
	"application_date": "2002-09-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network management interface with selective rendering of output",
	"summary": "",
	"abstract": "A network router management interface offers two different presentation modes for viewing configuration and operational information encoded in extensible markup language output obtained from a network router. The network router management interface provides an application programming interface (API) that permits client applications to formulate configuration and operational requests according to an extensible markup language, such as XML. In response to the configuration and operational requests submitted by a client application, the router produces XML output. On a selective basis, the user may elect to view or archive the XML output in either a rendered or unrendered format. In this manner, clients such as network administrators, installation technicians and applications developers can view raw XML output on a selective basis for use in development and debugging.",
	"url": null,
	"owner": "Juniper Networks, Inc.",
	"publication_number": "07054901",
	"publication_date": "2006-05-30",
	"application_number": "09871046",
	"application_date": "2001-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network router management interface with API invoked via login stream",
	"summary": "",
	"abstract": "A network router management interface for use in configuring a router and obtaining operational information provides an application programming interface (API) that permits clients to formulate requests and receive replies according to an extensible markup language such as XML. The router may transform a login stream at a router command line interface (CLI) to implement the XML-based API. For example, the management server accepts input from the CLI and, upon receipt of a particular command from the client, transforms the CLI into a programmatic interface for exchange of XML-tagged requests and XML-tagged replies according to the XML-based API. Providing access to the XML-based API via the CLI login shell enables the use of standard login, security, authentication and authorization techniques.",
	"url": null,
	"owner": "Juniper Networks, Inc.",
	"publication_number": "07072946",
	"publication_date": "2006-07-04",
	"application_number": "09871458",
	"application_date": "2001-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus for transmitting connecting status and method of displaying connecting status",
	"summary": "",
	"abstract": "On the basis of information of a topology map, a parent node ID list is generated to show correspondence of ID of each node to that of its parent node. Information given by the parent node ID list is transmitted as connection display data in a predetermined format. The receiving side, on the basis of the received connection display data, obtains information of a connecting status display to display connecting status of a network. On the basis of this information, a display to show connecting status of the network is displayed.",
	"url": null,
	"owner": "Kabushiki Kaisha Toshiba",
	"publication_number": "07058679",
	"publication_date": "2006-06-06",
	"application_number": "10330499",
	"application_date": "2002-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Character code converting system in multi-platform environment, and computer readable recording medium having recorded character code converting program",
	"summary": "",
	"abstract": "A character code converting system capable of lightening the burden imposed on the management of a code converting library and mapping information on the side of users and of easily and surely carrying out code conversion of character data including types of characters such as special characters and external characters between a plurality of different coding schemes. In the character code converting system, a code converting component carries out code conversion of character data, which are exchanged between processing programs operating on the respective platforms and an internal code converting module in a middleware, based on mapping information by an external code converting part, and processes the code-converted character data into a predetermined data format, which will be code-converted by the internal code converting module, by a data processing part. Thus, even if the internal code converting module in the middleware is operating, it is possible to equivalently transmit character data.",
	"url": null,
	"owner": "Kabushiki Kaisha Toshiba",
	"publication_number": "06999082",
	"publication_date": "2006-02-14",
	"application_number": "09790606",
	"application_date": "2001-02-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Agent apparatus",
	"summary": "",
	"abstract": "Apparatus for collecting information pertaining to a driver of the vehicle includes a unit for determining if the current load on the driver is a u201clow-loadu201d in terms of satisfaction of one or more specific conditions. Driver information is stored and supplemented by answers to question scenarios communicated to the driver only when a u201clow-loadu201d state is determined. A question information storage unit contains various question scenarios correlated with different items of driver information and from which a question scenario, corresponding to driver information not yet obtained, is retrieved for output when a u201clow loadu201d is determined.",
	"url": null,
	"owner": "Kabushikikaisha Equos Research",
	"publication_number": "07079925",
	"publication_date": "2006-07-18",
	"application_number": "10482021",
	"application_date": "2002-09-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Communication between machines and feed-forward control in event-based product manufacturing",
	"summary": "",
	"abstract": "Providing communication between machines and feed-forward control in event-based product manufacturing. Some of the disclosed embodiments include a system, method, and computer-readable media for communicating data relating to a material between machines during a process for feed-forward control. Also disclosed are an intelligent event-based manufacturing system including a process for converting a raw material to a product and a method of reducing the probability of waste, delay, or a quality defect in a process having process conditions for the manufacture of a product from a sequentially trackable raw material. The embodiments are operable in an intelligent manufacturing system including a process for converting raw materials to a product, a process control system including one or more sensors capable of generating an alarm in response to an event that results in one of waste, machine delay, or decrease product quality, a data logger associated with the process control system for obtaining event parameters associated with the event, a database on a server for recording event parameters obtained by the data logger, and a reporting system cooperatively associated with the database for reporting productivity parameters regarding the process derived at least in part from the event parameters.",
	"url": null,
	"owner": "Kimberly-Clark Worldwide, Inc.",
	"publication_number": "07032816",
	"publication_date": "2006-04-25",
	"application_number": "10306794",
	"application_date": "2002-11-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Quality management and intelligent manufacturing with labels and smart tags in event-based product manufacturing",
	"summary": "",
	"abstract": "Providing quality management and intelligent manufacturing with labels and smart tags in event-based product manufacturing. Some of the disclosed embodiments include a system, method, and computer-readable media for storing, during a process, data associated with a material. Also disclosed are a method of collecting, storing, and reporting machine productivity, waste, and delay information on an event basis in a manufacturing system, a method of capturing and storing material history, a method of automating tracking of positions of components used in a process and correlating portions of a component with production problems, an improved inventory management system, and a method of tracking and recording actions of specific operators of a process performed by a machine. The embodiments are operable in an intelligent manufacturing system including a process for converting raw materials to a product, a process control system including one or more sensors capable of generating an alarm in response to an event that results in one of waste, machine delay, or decrease product quality, a data logger associated with the process control system for obtaining event parameters associated with the event, a database on a server for recording event parameters obtained by the data logger, and a reporting system cooperatively associated with the database for reporting productivity parameters regarding the process derived at least in part from the event parameters.",
	"url": null,
	"owner": "Kimberly-Clark Worldwide, Inc.",
	"publication_number": "07035877",
	"publication_date": "2006-04-25",
	"application_number": "10306868",
	"application_date": "2002-11-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Parser, code generator, and data calculation and transformation engine for spreadsheet calculations",
	"summary": "",
	"abstract": "A system including spreadsheet sheets, makes calculations and data transformations, which is available through a programming interface, and conforms to the grammar and syntax of a target software development language is presented. The system includes an Object Model with Data Structures representing entities involved in spreadsheets. The system includes a Parser and Code Generator that extracts data from a body of spreadsheet data, instantiates instances of Data Structures of the Object Model to represent the spreadsheet data, parses the data and formulas contained in the cells of the spreadsheets, iterates through the instantiated instances of the Data Structures, and generates source code that performs the calculations and data transformations embodied in the spreadsheet data. The system includes a Calculation Engine with software base classes that implement the common structural and data access features of spreadsheet data, and further implement the operations of common spreadsheet functions and operators.",
	"url": null,
	"owner": "Knowledge Dynamics, Inc.",
	"publication_number": "07010779",
	"publication_date": "2006-03-07",
	"application_number": "10222730",
	"application_date": "2002-08-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Knowledge filter",
	"summary": "",
	"abstract": "A method and system for sharing knowledge is disclosed. The method and system comprises receiving information input into a database and organizing items of information in the database. The method and system further includes collecting ratings and comments associated with each item of information and allowing users to access and sort items of information according to selected rating criteria in order to find the most reliable and/or valuable information from the database. In a second aspect, the present invention including an interface for providing information concerning a subject is disclosed. The interface comprises a first area that shows the subject and contributor name; and a second area that shows the content of the information item. The interface includes a third area that shows rating related to the subject; and a fourth area that allows users to submit ratings for the information item. Accordingly, a knowledge sharing system and interface are provided which allows every member of a knowledge sharing group to benefit from aggregate knowledge, experience and opinions of other members of the group. The system and method allows individual members to easily locate the information from a collectively generated knowledge base that is most consistent with that individual's personal measures of value in the information.",
	"url": null,
	"owner": "Knowledge Filter, Inc.",
	"publication_number": "07031952",
	"publication_date": "2006-04-18",
	"application_number": "09685165",
	"application_date": "2000-10-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for reading data from and writing data to a memory",
	"summary": "",
	"abstract": "The invention relates to a method of writing data to and reading data from a memory () by a host. By limiting processing time, time restrictions regarding the data to be processed can be met. However, this is at the expense of data integrity. By setting time limits for a group () of multiple processing assignments and dynamic allocation of time, reserved for error recovery and retries, data integrity can be improved, while time limits can still be met. Furthermore, by attaching priorities to the assignments, multiple types of data can be handled in one group of assignments. For example, assignments with real-time requirements can be put in a group with assignments with best effort requirements. In this way, more flexible planning of processing assignments is possible. The invention also relates to a system for writing data to and reading data from a memory.",
	"url": null,
	"owner": "Koninklijke Philips Electronics N.V.",
	"publication_number": "06986012",
	"publication_date": "2006-01-10",
	"application_number": "10233450",
	"application_date": "2002-09-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Virtual environment navigation aid",
	"summary": "",
	"abstract": "A virtual environment browser () holds a number of clip-in files () defining guide charactersu2014locally generated visual aids to navigation that appear within a generated image of a virtual environment and follow a user's input () navigational commands to provide an advance cue as to the effects of an input command. Where the virtual environment data is supplied from a remote source () and includes () an indication of a preferred mode for navigating that environment, for example, flying or walking, the browser () detects this indication and automatically selects the appropriate guide character. Scaling () of the guide character to match the scale of the virtual environment, or such as to render the guide character unobtrusive, may also be provided.",
	"url": null,
	"owner": "Koninklijke Philips Electronics N.V.",
	"publication_number": "06995759",
	"publication_date": "2006-02-07",
	"application_number": "09170468",
	"application_date": "1998-10-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and program product for sharing information",
	"summary": "",
	"abstract": "A member accessible information system for managing member information, and selectively providing member information to individual members. The members, typically belong to a common industry, such as the food industry and connect through remotely connected networked computers, such as over the Internet. Members may be food industry members include suppliers, manufacturers and customers, each accessing information supplied by members and maintained by the system. Members may search through previously authorized member provided information. The system includes a central storage which may be located on a database server and which stores product information, e.g., food product information and specifications. Members access the system through a web server. A security policy server verifies what product information and which specifications are to be available to each member. Specifications may be stored centrally or, distributed to member locations. An app server stores and selectively executes applications used by members. User security profiles are stored on and managed by a policy server. Each member's security profile indicate the level of authorization of the corresponding member. A personalization server may be included to record user member characteristics, i.e., content viewed by the member, and personalizes content to subsequently automatically make similar content available to the member. An ad server may be included to schedule, serve and track advertising content provided to members. Orders may be generated and placed automatically. Member use may be tracked to generate member bills automatically and bill individual members.",
	"url": null,
	"owner": "Kraft Foods Holdings, Inc.",
	"publication_number": "07024391",
	"publication_date": "2006-04-04",
	"application_number": "09730144",
	"application_date": "2000-12-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multi-tiered control architecture for adaptive optical networks, and methods and apparatus therefor",
	"summary": "",
	"abstract": "A hierarchical and distributed control architecture for managing an optical communications network. The architecture includes a line card manager level for managing individual line cards in an optical switch, a node manager level for managing multiple line cards in an optical switch/node, and a network management system level for managing multiple optical switches/nodes in a network. An event manager at the node manager level enables software components that are running at the node manager to register for and receive events, and to post events. The events may be triggered, e.g., by a change in a status of the switch, or an alarm condition. Control architecture functionalities include signaling, routing, protection switching and network management. Furthermore, the network management function includes a topology manager, a performance manager, a connection manager, a fault detection manager, and a configuration manager.",
	"url": null,
	"owner": "Lambda OpticalSystems Corporation",
	"publication_number": "07013084",
	"publication_date": "2006-03-14",
	"application_number": "09795252",
	"application_date": "2001-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "PKI-based client/server authentication",
	"summary": "",
	"abstract": "A client/server authentication system is disclosed. The system includes a filter, a plug-in, and an extension. The filter monitors sessions between a client and a server for proper authentication. The plug-in is coupled to the client and the server. The plug-in generates public and private key pairs, and receives and stores certificates. The extension is coupled to the filter. The extension generates script commands to cause the client and the server to perform required steps indicated by the filter.",
	"url": null,
	"owner": "LANDesk Software Limited",
	"publication_number": "07127607",
	"publication_date": "2006-10-24",
	"application_number": "10856450",
	"application_date": "2004-05-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "PKI-based client/server authentication",
	"summary": "",
	"abstract": "A client/server authentication system is disclosed. The system includes a filter, a plug-in, and an extension. The filter monitors sessions between a client and a server for proper authentication. The plug-in is coupled to the client and the server. The plug-in generates public and private key pairs, and receives and stores certificates. The extension is coupled to the filter. The extension generates script commands to cause the client and the server to perform required steps indicated by the filter.",
	"url": null,
	"owner": "LANDesk Software Limited",
	"publication_number": "07032110",
	"publication_date": "2006-04-18",
	"application_number": "09608986",
	"application_date": "2000-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for analyzing and imaging three-dimensional volume data sets",
	"summary": "",
	"abstract": "A system and method is provided for analyzing and imaging three-dimensional volume data sets. In one embodiment of the invention, a ribbon section is produced which may include a plurality of planes projected from a polyline. The polyline may include one or more line segments preferably formed within a plane. The projected planes intersect the three-dimensional volume data set and the data located at the intersection may be selectively viewed. The polyline may be edited or varied by editing or varying the control points which define the polyline. In another embodiment of the present invention, a method is provided for quickly tracking a physical phenomena represented within the three-dimensional volume data set. A plurality of planes may be successively displayed in the three-dimensional volume data set from which points are digitized related to the structure of interest to create a spline curve on each plane. The area between the spline curves is interpolated to produce a surface representative of the structure of interest, which may for example be a fault plane described by the three-dimensional volume data set. In this manner, the user can more easily and effectively visualize and interpret the features and physical parameters that are inherent in the three-dimensional volume data set.",
	"url": null,
	"owner": "Landmark Graphics Corporation",
	"publication_number": "07098908",
	"publication_date": "2006-08-29",
	"application_number": "11056823",
	"application_date": "2005-02-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for electronic presentations having simultaneous display windows in a control screen",
	"summary": "",
	"abstract": "An electronic presentation system and method provides multiple display screens for presentation materials as well as permits dynamic annotations to presentation materials that do not permanently alter the presentation materials. The presentation materials can easily be directed to any one of the display screens and any annotations can be saved for future use or simply deleted. A single interface screen allows simple annotation of either the left or right screen images while a zoom feature allows slides to be presented in a variety of different ways.",
	"url": null,
	"owner": "Learning Tree International",
	"publication_number": "07131068",
	"publication_date": "2006-10-31",
	"application_number": "10445322",
	"application_date": "2003-05-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for multiple screen electronic presentations",
	"summary": "",
	"abstract": "An electronic presentation system and method provides multiple display screens for presentation materials as well as permits dynamic annotations to presentation materials that do not permanently alter the presentation materials. The presentation materials can easily be directed to any one of the display screens and any annotations can be saved for future use or simply deleted.",
	"url": null,
	"owner": "Learning Tree International",
	"publication_number": "07134079",
	"publication_date": "2006-11-07",
	"application_number": "10153859",
	"application_date": "2002-05-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interface for a system of method of electronic presentations having multiple display screens with remote input",
	"summary": "",
	"abstract": "An electronic presentation system and method provides multiple display screens for presentation materials as well as permits dynamic annotations to presentation materials that do not permanently alter the presentation materials. The presentation materials can easily be directed to any one of the display screens and any annotations can be saved for future use or simply deleted. A single interface screen allows simple annotation of either the left or right screen images while a zoom feature allows slides to be presented in a variety of different ways. Additional features include tracking and displaying an indication of how a presentation is progressing relative to a pre-set timeline, identifying and tracking slides of a presentation which need correction or updating, and permitting a presenter to annotate slides of a presentation while located remotely from the presentation system.",
	"url": null,
	"owner": "Learning Tree International, Inc.",
	"publication_number": "07058891",
	"publication_date": "2006-06-06",
	"application_number": "10448429",
	"application_date": "2003-05-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for the automatic migration of applications and their associated data and configuration files",
	"summary": "",
	"abstract": "A method, apparatus, and computer implemented instructions for the automatic migration of applications and their associated data and configuration files from a source data processing system to a destination data processing system. A data store containing meta data regarding files associated with the application is queried in which the data store includes meta data describing the files accessed by the application. A result is received in response to querying the data store in which the associations are maintained. Copying of the files from the source data processing system to the destination data processing system using the result is initiated.",
	"url": null,
	"owner": "Lenovo (Singapore) Pte, Ltd.",
	"publication_number": "07028079",
	"publication_date": "2006-04-11",
	"application_number": "09865249",
	"application_date": "2001-05-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for protecting software applications against static and dynamic software piracy techniques",
	"summary": "",
	"abstract": "An application module is rewritten by overwriting executable code at identified authorization points with control transfers to a managed challenge system such that a rewritten application module results. The managed challenge system is constructed to include the overwritten executable code, and performs an authorization check upon acquiring control from an authorization point. The managed challenge system is linked to the rewritten application module.",
	"url": null,
	"owner": "Liquid Machines, Inc.",
	"publication_number": "07111285",
	"publication_date": "2006-09-19",
	"application_number": "10197063",
	"application_date": "2002-07-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic securities marketplace having integration with order management systems",
	"summary": "",
	"abstract": "An electronic trading marketplace (ETM) communicates with interfacing modules interfacing directly with order management systems (OMS's) at trading institutions. The interfacing modules automatically transmit orders from the OMS databases to the ETM and update the OMS databases in response to orders executed at the ETM. Traders can communicate with the ETM to anonymously negotiate trades of securities.",
	"url": null,
	"owner": "Liquidnet, Inc.",
	"publication_number": "07136834",
	"publication_date": "2006-11-14",
	"application_number": "09834171",
	"application_date": "2001-04-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and article of manufacture for facilitating user interface roaming in an interface roaming network framework",
	"summary": "",
	"abstract": "A system, method and article of manufacture are provided for facilitating user interface roaming in an interface roaming network framework. Received from a wireless link is a list of usable interface clients in proximity to the wireless link. Each usable interface client has functional capabilities associated with it. One of the interface clients is selected from the list and the wireless link is notified of the selected interface client. A connection is then initiated with the selected interface client and an application is executed based on the capabilities of the selected interface client in order to generate content. The generated content is then transmitted to the interface client so that the content may be displayed using the interface client.",
	"url": null,
	"owner": "Litepoint, Corp.",
	"publication_number": "07093017",
	"publication_date": "2006-08-15",
	"application_number": "09695493",
	"application_date": "2000-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing reusable software assets",
	"summary": "",
	"abstract": "In general, techniques are described that facilitate the reuse of software assets within an enterprise. A software asset, as used herein, refers to a set of one or more related artifacts that have been created or harvested for the purpose of applying that asset repeatedly in subsequent development environments. A system, for example, is described that includes a repository to store artifacts, and an asset source to generate a software asset based on the artifacts. The system further includes an asset management system to receive the software asset from the asset source and store the software asset within an asset library. The system may further include a model having one or more elements, and an asset retrieval module to selectively retrieve a subset of the software assets from the asset library based on input from a user identifying one or more of the elements.",
	"url": null,
	"owner": "Logic Library, Inc.",
	"publication_number": "07149734",
	"publication_date": "2006-12-12",
	"application_number": "10109601",
	"application_date": "2002-03-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Targeted asset capture, identification, and management",
	"summary": "",
	"abstract": "A targeted asset capture system that maps software resources to a domain model, and search and management tools for retrieving asset information and controlling asset acquisition. The domain model may include a process-centered organization and/or a structural organization of model tasks, functions, and data types. Capture includes mapping to the model functions and data types, and preferably also includes capturing other information about the asset and about the quality of mapping. The domain model may be used to build a search specification for searching for available assets that meet some or all of a set of functional (and/or nonfunctional) requirements. The search specification may also be published in part or in whole as a development specification.",
	"url": null,
	"owner": "LogicLibrary, Inc.",
	"publication_number": "07080355",
	"publication_date": "2006-07-18",
	"application_number": "09900101",
	"application_date": "2001-07-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data communications networks with high performance and reliability",
	"summary": "",
	"abstract": "An Optical Transport Network (OTN) (comprising a number of OTN nodes) uses an Internet Protocol (IP) based control plane (out-of-band signaling on a separate wavelength). Each OTN node of the IP-based control plane performs dual-feeding and dual-selecting of signaling messages on diverse signaling paths. The IP-based control plane establishes a pair of physically disjoint signaling paths between every set of neighboring OTN nodes (pre-computed and pre-established physically disjoint primary and secondary message paths in the IP-based control plane).",
	"url": null,
	"owner": "Lucent Technologies Inc.",
	"publication_number": "07099327",
	"publication_date": "2006-08-29",
	"application_number": "09687348",
	"application_date": "2000-10-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "High capacity Multi-AAL system for VTOA Gateway",
	"summary": "",
	"abstract": "A Packet Voice Gateway (PVG) system and related method are disclosed wherein a single ATM circuit emulation board performs conversion of Asynchronous Transfer Mode (ATM) formatted cells received from an ATM packet network to a Time Division Multiplexed (TDM) format for delivery to a circuit switched network, including AAL 1/2 bearer cells, AAL 3/4 data cells, AAL5 signaling cells, and raw AAL0 cells. In particular, as ATM cells are received from the ATM packet network, their cell headers are translated according to a predetermined translation scheme. The ATM cells are then processed according to their translated cell headers, which allows the cells to be handled according to their payload type.",
	"url": null,
	"owner": "Lucent Technologies Inc.",
	"publication_number": "07020144",
	"publication_date": "2006-03-28",
	"application_number": "09825397",
	"application_date": "2001-04-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of setting up an application initiated call to a mobile station within a CAMEL network, and a telecommunications system comprising a CAMEL network",
	"summary": "",
	"abstract": "A method is provided of setting up a call connection to a mobile station operative to communicate with a Customised Application for Mobile Enhanced Logic (CAMEL) telecommunications network. The call is initiated by an Open Service Architecture (OSA) application, which causes a message to be produced which indicates to the network that the mobile station is now available to make a ring back call connection. The network setting up the call connection in response to the message.",
	"url": null,
	"owner": "Lucent Technologies Inc.",
	"publication_number": "07050811",
	"publication_date": "2006-05-23",
	"application_number": "10633895",
	"application_date": "2003-08-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for flexible embedded Boundary Scan testing",
	"summary": "",
	"abstract": "A flexible Boundary Scan test system is disclosed. The system includes an interpreter module operable to execute a program element selected from a plurality of program elements that include at least one instruction type having an interface to identify and execute selected functions wherein each of the selected functions has associated therewith at least one data information item. In one aspect of the invention, selected ones of the functions are composed of a plurality of functions. In another aspect of the invention, the instruction includes parameters and adornments for determining the selected function execution.",
	"url": null,
	"owner": "Lucent Technologies Inc.",
	"publication_number": "07149943",
	"publication_date": "2006-12-12",
	"application_number": "10756689",
	"application_date": "2004-01-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for remotely configuring testing laboratories",
	"summary": "",
	"abstract": "The invention provides a system for remotely configuring a plurality of devices to customize a lab network system for testing components and for training operators to use and maintain such systems. The system is configured to remotely access and control such a system via a computer network such as the Internet. Once connected, a user can run testing scenarios on the configured devices remotely from any location that has access to the Internet. In accordance with the invention, an organization's network equipment is integrated with specialized physical switching technologies, and controlled by unique management software. Access to the network equipment may be provided remotely, and granted via a scheduling service. Thus, multiple physical equipment labs can be integrated into one globally, visible resource, enabling one-stop scheduling of lab time without knowing the detailed inventory of a particular network equipment facility. Storage capability is provided for network topologies described using a standards-based topology description language. This topology archive is integrated with the equipment lab management software allowing lab efforts to be saved for later reuse. In addition to topology and configuration information, complete session logs can also be saved, allowing u201cofflineu201d analysis of lab activities. Network topologies and device configurations may be uniquely specified using a provided authoring environment to facilitate customized lab configurations.",
	"url": null,
	"owner": "Lumenare Networks",
	"publication_number": "07133906",
	"publication_date": "2006-11-07",
	"application_number": "09785008",
	"application_date": "2001-02-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for analyzing a region of interest relative to a predetermined event",
	"summary": "",
	"abstract": "A system and method are disclosed for analyzing a three-dimensional (3-D) region of interest relative to a predetermined event. The system and method are particularly useful as analytical, diagnostic and interpretive tools for any type of scientific data.",
	"url": null,
	"owner": "Magic Earth, Inc.",
	"publication_number": "07002576",
	"publication_date": "2006-02-21",
	"application_number": "10718018",
	"application_date": "2003-11-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for analyzing and imaging three-dimensional volume data sets",
	"summary": "",
	"abstract": "A system and method is provided for quickly tracking a physical phenomena represented within the three-dimensional volume data set. A plurality of planes may be successively displayed in the three-dimensional volume data set from which points are digitized related to the structure of interest to create a spline curve on each plane. The area between the spline curves () is interpolated to produce a surface () representative of the structure of interest, which may for example be a fault plane described by the three-dimensional volume data set. In this manner, the user can more easily and effectively visualize and interpret the features and physical parameters that are inherent in the three-dimensional volume data set.",
	"url": null,
	"owner": "Magic Earth, Inc.",
	"publication_number": "07006085",
	"publication_date": "2006-02-28",
	"application_number": "09936682",
	"application_date": "2000-10-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Internet-based shared file service with native PC client access and semantics",
	"summary": "",
	"abstract": "A multi-user file storage service and system enables each user of a user group to operate an arbitrary client node at an arbitrary geographic location to communicate with a remote file server node via a wide area network. More than one user of the user group is permitted to access the file group at the remote file server node simultaneously, but the integrity of the files is maintained by controlling access so that each access to one of the files at the remote file server is performed, if at all, on a respective portion of that file as most recently updated at the remote file server node.",
	"url": null,
	"owner": "Mangosoft Corporation",
	"publication_number": "07058696",
	"publication_date": "2006-06-06",
	"application_number": "09703884",
	"application_date": "2000-11-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Internet-based shared file service with native PC client access and semantics and distributed access control",
	"summary": "",
	"abstract": "A multi-user file storage service and system enable each user of a pre-subscribed user group to communicate with a remote file server node via a wide area network and to access the files of the file group via the respective client node. More than one user of the pre-subscribed user group is permitted to access the file group at the remote file server node simultaneously. Integrity of the files at the remote file server node are maintained by controlling each access to each file at the remote file server node so that each access to files at the remote file server is performed, if at all, on a respective portion of each file as most recently updated at the remote file server node. Additionally, an encrypted key is transferred from the file server node to a particular client node via a secure channel. The encrypted key uses an encryption function and a decryption function not known locally at the remote file server. Furthermore, both privileged access control rights and file sharing mode access control to a particular file of the group of files are delegated to one or more distributed nodes other than the remote file server node which provides the data.",
	"url": null,
	"owner": "Mangosoft Intellectual Property, Inc.",
	"publication_number": "07136903",
	"publication_date": "2006-11-14",
	"application_number": "09704050",
	"application_date": "2000-11-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Event revenue management system",
	"summary": "",
	"abstract": "The present invention provides an event revenue management system that calculates event pricing to manage revenue and to maximize profit from the event. In particular, the system uses event parameters, including timing, resource, and discount categories, and initializes forecasting parameters. The system aggregates historical data using the forecasting parameters to generate initial forecast statistics, taking into account the event parameters. It then forecasts demand by updating the initial forecast statistics based on current data and optimizes pricing and availability of the event based on the forecasted demand.",
	"url": null,
	"owner": "Manugistics, Inc.",
	"publication_number": "07110960",
	"publication_date": "2006-09-19",
	"application_number": "09876218",
	"application_date": "2001-06-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for geocoding diverse address formats",
	"summary": "",
	"abstract": "A method and system for providing geocodes in response to complete or partial address information is disclosed. The disclosure teaches embodiments that are naturally upgraded to integrate changing spatial information due to addition of countries, better data, political changes, and other similar changes in geographical data. A single geocoding engine is capable of handling the various address formats in use in different countries and jurisdictions. The disclosed embodiments are error tolerant and capable of overcoming many errors due to spelling, variety of languages and formats used to provide and address. The diversity in addresses due to, for instance country-specific formats such as postal-codes are naturally integrated into existing database of geocoding information. Preferably, the embodiments are based on JAVA to allow platform independence and use XML based communication to use networks without requiring excessive resources while providing fast services.",
	"url": null,
	"owner": "MapInfo Corporation",
	"publication_number": "07039640",
	"publication_date": "2006-05-02",
	"application_number": "10159195",
	"application_date": "2002-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for transacting purchases with a cash vendor using points",
	"summary": "",
	"abstract": "A system for permitting a participant to transact a purchase using awarded points with a vendor system which transacts purchases in currency. A loyalty program awards points to the participant. The awarded points are maintained in a point account for the participant. An application programming interface (API) interfaces with the vendor system. A program account for use in currency transactions provides the basis for the purchase with the vendor system. A graphical user interface (GUI) provides an interface between the participant and the API and for communicating with the loyalty program.",
	"url": null,
	"owner": "Maritz Inc.",
	"publication_number": "07134087",
	"publication_date": "2006-11-07",
	"application_number": "10117309",
	"application_date": "2002-04-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Fast port failover in a network switch",
	"summary": "",
	"abstract": "A network switch, method and computer program product. The network switch comprises a plurality of ports each adapted to exchange frames of data with one or more network devices; a transfer circuit adapted to transfer the frames of the data between the ports; and wherein at least one of the ports comprises a loopback circuit adapted to send to the transfer circuit, when the one of the ports is not operational, each frame of the data received by the one of the ports from the transfer circuit, and a redirect circuit adapted to cause the transfer circuit to transfer, to one or more predetermined others of the ports, when the one of the ports is not operational, each frame of the data received by the transfer circuit from the one of the ports.",
	"url": null,
	"owner": "Marvell International Ltd.",
	"publication_number": "07120834",
	"publication_date": "2006-10-10",
	"application_number": "10353451",
	"application_date": "2003-01-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer system and computer implemented process for representing software system descriptions and for generating executable computer programs and computer system configurations from software system descriptions",
	"summary": "",
	"abstract": "A computer-implemented method for automatically generating computer code for a software system from a representation of the software system. An architectural description language is used to represent activities and dependencies between activities as separate entities. Dependencies are managed by coordination processes associated with the dependency. Activities and dependencies are connected through ports which encode interfaces between activities and coordination processes. At least one associated computer program is identified for each activity and dependency for implementing the activity or managing the dependency, wherein the representation is defined by activities, dependencies and ports through which activities are connected to dependencies. The associated computer programs are combined to provide the computer code for the software system.",
	"url": null,
	"owner": "Massachusetts Institute of Technology",
	"publication_number": "07017146",
	"publication_date": "2006-03-21",
	"application_number": "10002480",
	"application_date": "2001-11-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for providing content delivery to a set of participating content providers",
	"summary": "",
	"abstract": "The present invention is a network architecture or framework that supports hosting and content distribution on a truly global scale. The inventive framework allows a Content Provider to replicate and serve its most popular content at an unlimited number of points throughout the world. The inventive framework comprises a set of servers operating in a distributed manner. The actual content to be served is preferably supported on a set of hosting servers (sometimes referred to as ghost servers). This content comprises HTML page objects that, conventionally, are served from a Content Provider site. In accordance with the invention, however, a base HTML document portion of a Web page is served from the Content Provider's site while one or more embedded objects for the page are served from the hosting servers, preferably, those hosting servers near the client machine. By serving the base HTML document from the Content Provider's site, the Content Provider maintains control over the content.",
	"url": null,
	"owner": "Massachusetts Institute of Technology",
	"publication_number": "07103645",
	"publication_date": "2006-09-05",
	"application_number": "10417607",
	"application_date": "2003-04-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Flexible digital cable network architecture",
	"summary": "",
	"abstract": "A digital cable network architecture and services method includes a cable medium and a plurality of hosts that include a receiver. A policy file store contains policy files having at least one of a service provider section, a consumer section, and a manufacturer section that can be updated by at least one of the service provider, a consumer and a receiver manufacturer, respectively. A service provider that is associated with the policy file store provides digital cable services over the cable medium to the hosts and downloads monitor applications and policy files to the hosts over the cable medium. The MAs use the service provider section, the consumer section, and/or the manufacturer section of the policy file to alter resource contention, alter service provisioning at levels below a channel level, and/or alter fraudulent receiver identification calculations.",
	"url": null,
	"owner": "Matsushita Electric Industrial Co., Ltd.",
	"publication_number": "07058964",
	"publication_date": "2006-06-06",
	"application_number": "10308930",
	"application_date": "2002-12-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Format-converting device and private branch exchange system using the same, and format-converting method and memory medium storing a program to allow computer to execute the same method",
	"summary": "",
	"abstract": "A format-converting device couples a control device controlling an extension with a private branch exchange (PBX). A memory stores a converting table, which brings a first command data into correspondence with a given function and stores the first command data and the given function, a telephony application programming interface (TAPI) function and a telephony service provider interface (TSPI) function. A converting section calculates the given function based on the received first command data referring to the converting table. A first calculating section calculates the TAPI function. A second calculating section calculates the TSPI function. The first calculating section calculates based on a calculated result of the converting section. The second calculating section produces a second command data based on a calculated result of the first calculating section, where the second command data differs from the first command data. The second command data is sent to the PBX.",
	"url": null,
	"owner": "Matsushita Electric Industrial Co., Ltd.",
	"publication_number": "07010105",
	"publication_date": "2006-03-07",
	"application_number": "10098820",
	"application_date": "2002-03-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for reducing fraud in a digital cable network",
	"summary": "",
	"abstract": "A digital cable network architecture includes hosts that include a receiver with a hash function generator that calculates hash values based on a hash function and data from memory blocks in the receiver. A policy file store contains policy files having a service provider section, a consumer section, and/or a manufacturer section that can be updated by the service provider, a consumer and/or a receiver manufacturer. A service provider downloads monitor applications (MAs) and policy files to the hosts over the cable medium. The MAs access the service provider section, the consumer section, and/or the manufacturer section of the policy file to alter resource contention, service provisioning, and/or alter fraudulent receiver identification calculations. The hash function of the receiver outputs the hash values to the MA, which compares the hash values to expected hash values to identify fraudulent access.",
	"url": null,
	"owner": "Matsushita Electric Industrial Co., Ltd.",
	"publication_number": "06993132",
	"publication_date": "2006-01-31",
	"application_number": "10308909",
	"application_date": "2002-12-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transmission apparatus of video information, transmission system of video information and transmission method of video information",
	"summary": "",
	"abstract": "A transmission apparatus for video information is disclosed. The apparatus has an input part for inputting video; a level information generation part for generating level information of each pixel on a screen; a memory part for storing the level information of each pixel in the entire region of the screen; a region extraction part for extracting a changed region which is a region on the screen including pixels related to the video information; an update region level information generation part for generating level information of each pixel in the changed region; a compression part for compressing the information amount of level information of each pixel in the changed region; and a communication part for transmitting position information of the changed region and the compressed level information.",
	"url": null,
	"owner": "Matsushita Electric Industrial Co., Ltd.",
	"publication_number": "07082612",
	"publication_date": "2006-07-25",
	"application_number": "09844565",
	"application_date": "2001-04-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web server for communicating with one or more electronic devices through a gateway computer",
	"summary": "",
	"abstract": "A web server is disclosed for facilitating communications with an embedded device through a gateway. The web server includes a plurality of web pages for downloading by web clients. The web pages are usable by the web clients. The web server includes an HTTP server for serving the web pages to the web clients. A user interface component is also included. The user interface component is downloadable by a web client and usable by the web client to present a user interface element that relates to an embedded device. The user interface element is capable of causing communication with the embedded device. A gateway communications module is also included for communicating with the gateway. The gateway is in electronic communication with the embedded device and is programmed to communicate with the embedded device. The user interface element initiates instructions included in the gateway communications module to communicate with the embedded device. In operation, the HTTP server sends the user interface component to the web client, the web client receives and processes the user interface component to present the user interface element. Communication with the embedded device is initiated through use of the user interface element by the user interface element sending data to the HTTP server. The HTTP server sends the data to the gateway communications module, and the gateway communications module communicates with the gateway that communicates with the embedded device.",
	"url": null,
	"owner": "Matsushita Electric Works, Ltd.",
	"publication_number": "07024473",
	"publication_date": "2006-04-04",
	"application_number": "09755348",
	"application_date": "2001-01-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and article of manufacture for selecting a gateway of a hybrid communication system architecture",
	"summary": "",
	"abstract": "Telephone calls, data and other multimedia information is routed through a hybrid network which includes transfer of information across the internet utilizing telephony routing information and internet protocol address information. A media order entry captures complete user profile information for a user. This profile information is utilized by the system throughout the media experience for routing, billing, monitoring, reporting and other media control functions. Users can manage more aspects of a network than previously possible, and control network activities from a central site. A directory service that supports a hybrid communication system architecture is provided for routing traffic over the hybrid network and the internet and selecting a network proximal to the origination of the call.",
	"url": null,
	"owner": "MCI Communications Corporation",
	"publication_number": "07145898",
	"publication_date": "2006-12-05",
	"application_number": "08746901",
	"application_date": "1996-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multimedia interface for IP telephony",
	"summary": "",
	"abstract": "An IP telephony client initiates and manages multimedia sessions. The client includes a user interface, an application interface, and a protocol stack. The application interface provides an interface between the protocol stack and the user interface and helper applications. The protocol stack packages messages received from the application interface and parses messages received from other parties or prospective parties. The application interface converts incoming messages to appropriate application programming interfaces (APIs) and sends incoming payloads to the appropriate helper application.",
	"url": null,
	"owner": "MCI, Inc.",
	"publication_number": "06982973",
	"publication_date": "2006-01-03",
	"application_number": "10303342",
	"application_date": "2002-11-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for communicating from an integration platform to a provisioning server",
	"summary": "",
	"abstract": "A method for communicating from an integration platform to a server that executes object request broker (ORB) software includes receiving user-entered information at the integration platform. The integration platform generates an event based on the user-entered information and publishes the event on a channel subscribed to by a connector associated with the server. The connector receives the event information, transforms the event information to a format compatible with the server and establishes communications with the server. The connector downloads the information to the server and the server updates its database. The connector may also determine whether at least one other system received the event information before downloading the data to the server.",
	"url": null,
	"owner": "MCI, Inc.",
	"publication_number": "07054866",
	"publication_date": "2006-05-30",
	"application_number": "10097862",
	"application_date": "2002-03-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for facilitating communications involving hearing-impaired parties",
	"summary": "",
	"abstract": "A method for providing communication services for the hearing-impaired may include receiving a telephone call having a terminating number associated with a hearing-impaired party. The method may also include forwarding the telephone call to a communication assistant and establishing a communication link from the communication assistant to the hearing-impaired party based on the terminating number.",
	"url": null,
	"owner": "MCI, LLC",
	"publication_number": "07142642",
	"publication_date": "2006-11-28",
	"application_number": "10979811",
	"application_date": "2004-11-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for detecting and resolving circularflow paths in graphical programming systems",
	"summary": "",
	"abstract": "A system that detects and resolves circular paths within a graphical flow diagram that represents the logical operation of a corresponding application program. The flow diagram is formed by interconnecting symbolic representations that correspond to program objects configured to execute associated functions in response to corresponding triggering events. The functions of the program objects are called upon and executed by the application program at run-time. At the program objects, a busy indicator is established. When a program object is triggered by its respective event, the object first tests its busy indicator to determine whether it is already in the process of executing its associated function. If not, it proceeds to execute its associated function in response to an earlier triggering event. If, however, the object is already in the process of executing its associated function, then the object is blocked from re-executing in response to this new triggering event.",
	"url": null,
	"owner": "Measurement Computing Corporation",
	"publication_number": "07082599",
	"publication_date": "2006-07-25",
	"application_number": "09483759",
	"application_date": "2000-01-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for back-projection and forward-projection",
	"summary": "",
	"abstract": "The invention provides improvements in reconstructive imaging of the type in which a volume is reconstructed from a series of measured projection images (or other two-dimensional representations) generated by projection of a point x-ray source (or other radiation source), positioned at a distinct focus, through the volume to a plane at which the respective projection image is acquired (u201cdetector planeu201d). In one aspect, the improvements are with respect to back-projecting a two-dimensional representation lying in the detector plane (representing, for example, a difference between an originally-acquired measured projection image and a subsequently-generated estimate thereof) to generate three-dimensional representation (which can be used, for example, to update an estimate of the volume). According to this aspect, for each of one or more slices of the 3D representation parallel to the projection plane and for each distinct focus at which a projection is generated, the following steps are performed in connection with the back-projection: (i) warping the first 2D representation to generate a second 2D representation by applying to the first 2D representation a selected linear mapping, where that selected linear mapping would map, in order to match dimensions of the respective slice within the 3D representation, a region defined by projection, at the respective focus, of corners of that slice onto the detector plane, and (ii) incrementing values of each of one or more voxels of the respective slice by an amount that is a function of a value of a correspondingly indexed pixel of the second 2D representation. A related aspect provides improvements with respect to forward-projecting, as well as in iterative (and non-iterative) methodologies that incorporate both back-projection and forward-projection.",
	"url": null,
	"owner": "Mercury Computer Systems, Inc.",
	"publication_number": "07120283",
	"publication_date": "2006-10-10",
	"application_number": "10756172",
	"application_date": "2004-01-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer pointer control",
	"summary": "",
	"abstract": "The present invention relates to a method and system which allows for the transfer of pointer movements and events from small devices with space and data rate constraints to a display device. This will allow a pointer device to be implemented in a small area, but will still enable full pointer movement and event capabilities.",
	"url": null,
	"owner": "Meta4Hand Inc.",
	"publication_number": "07109975",
	"publication_date": "2006-09-19",
	"application_number": "10248566",
	"application_date": "2003-01-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for delivery of targeted video programming",
	"summary": "",
	"abstract": "A system residing preferably in a television set-top box monitors the television watching habits of one or more viewers and creates one or more profiles for each viewers descriptive of various characteristics of each viewers, including television watching preferences and demographics. The set-top box is able to select among various available video programming segments to create customized and/or targeted video programs for delivery to the viewer or viewers as a linear program. The customized linear video programs may include targeted content, advertising, and other video programming.",
	"url": null,
	"owner": "Metabyte Networks, Inc.",
	"publication_number": "07146627",
	"publication_date": "2006-12-05",
	"application_number": "09652478",
	"application_date": "2000-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "AUTOMATED OBJECT IDENTIFICATION AND ATTRIBUTE ACQUISITION SYSTEM HAVING A MULTI-COMPARTMENT HOUSING WITH OPTICALLY-ISOLATED LIGHT TRANSMISSION APERTURES FOR OPERATION OF A PLANAR LASER ILLUMINATION AND IMAGING (PLIIM) BASED LINEAR IMAGING SUBSYSTEM AND A LASER-BASE",
	"summary": "",
	"abstract": "An automated object identification and attribute acquisition system comprising a planar light illumination and imaging subsystem (PLIIM) based linear imaging subsystem, and a laser-based object profiling subsystem integrated within a multi-compartment system housing. The system housing has a substantially unitary construction and includes a first optically-isolated compartment formed in its upper deck portion for containing the PLIIM based linear imaging subsystem and associated components therewithin. The system housing also includes a second optically-isolated compartment formed in its lower deck portion, disposed below the first optically-isolated compartment; for containing the laser-based object profiling subsystem and associated components therewithin. First and second light transmission apertures are formed in the first optically-isolated compartment, for enabling the transmission of a planar laser illumination beam (PLIB) from the PLIIM based linear imaging sybsystem, and towards the object to be illuminated. A third light transmission aperture is formed in the first optically-isolated compartment, and spatially aligned with the first and second light transmission apertures, for enabling the field of view (FOV) of a linear image detection array provided in the PLIIM-based linear imaging subsystem, to project from the linear image detection array towards the illuminated object to be imaged. A fourth light transmission aperture is formed in the second optically-isolated compartment, and spatially distanced from the first optically-isolated compartment, for enabling the transmission of one or more laser scanning beams from the laser-based object profiling subsystem, towards the object being illuminated and imaged. By virtue of the present invention, it is now possible to automatically identify a moving object such as a package moving along a conveyor belt structure, and acquire geometrical and surface attributes thereof, using a single integrated device of substantially unitary construction, thereby simplifying system installation, set-up and maintenance in diverse field of operation",
	"url": null,
	"owner": "Metrologic Instruments, Inc.",
	"publication_number": "06988661",
	"publication_date": "2006-01-24",
	"application_number": "10150491",
	"application_date": "2002-05-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "HAND-SUPPORTABLE PLANAR LASER ILLUMINATION AND IMAGING (PLIIM) BASED CAMERA SYSTEM CAPABLE OF PRODUCING DIGITAL LINEAR IMAGES OF AN OBJECT, CONTAINING PIXELS HAVING A SUBSTANTIALLY UNIFORM ASPECT-RATIO INDEPENDENT OF THE MEASURED RELATIVE VELOCITY OF AN OBJECT WHILE MANUALLY MOVING SAID PLIIM BASED CAMERA SYSTEM PAST SAID OBJECT DURING ILLUMINATION AND IMAGING OPERATIONS",
	"summary": "",
	"abstract": "A hand-supportable planar laser illumination and imaging (PLIIM) based camera system for producing digital linear images of a object within a working range, wherein the digital linear images contain pixels having a substantially uniform aspect-ratio independent of the measured relative velocity of the object while the PLIIM based camera system is manually moved (e.g. swept) past the object during illumination and imaging operations. The hand-supportable PLIIM based camera system comprises an object velocity measurement subsystem mounted within its hand-supportable housing, for determining the velocity of the object relative to the hand-supportable housing and generating object velocity data indicative of the determined velocity of the object. Also, a camera control computer is mounted within the hand-supportable housing, for controlling the operation of the PLIIM-based linear imaging subsystem, in automatic response to object velocity data generated by the object velocity measurement subsystem. During object illumination and imaging operations, the camera control computer (1) uses the object velocity data to determine a photo-integration time period parameter for the linear image detection array which produces digital linear images of the object, containing pixels having a substantially uniform aspect-ratio, independent of relative velocity of the object; and then (2) uses the determined photo-integration time period parameter to automatically control the operation of the linear image detection array so that the linear image detection array automatically produces digital linear images of the object, containing pixels having a substantially uniform aspect-ratio independent of the measured velocity of the moving object. By virtue of the present invention, it is now possible to produce digital images of objects containing pixels having a substantially uniform aspect-ratio, thereby satisfying the processing constraints associated with conventional 2-D bar code reading and OCR algorithms used in automatic object identification applications.",
	"url": null,
	"owner": "Metrologic Instruments, Inc.",
	"publication_number": "07066391",
	"publication_date": "2006-06-27",
	"application_number": "10150540",
	"application_date": "2002-05-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Internet-based remote monitoring, configuration and service (RMCS) system capable of monitoring, configuring and servicing a planar laser illumination and imaging (PLIIM) based network",
	"summary": "",
	"abstract": "An Internet-based remote monitoring, configuration and service (RMCS) system capable of monitoring, configuring and servicing a planar laser illumination and imaging (PLIIM) based network. The network has one or more nodes and performs object identification and attribute acquisition functions. Each node is a PLIIM-based subsystem operably connected to a digital communications network interconnectable to the infrastructure of the Internet. The Internet-based RMCS system comprises a monitoring subsystem for remotely monitoring a set parameters associated with the PLIIM-based network. The set of parameters relate to network, system and/or subsystem characteristics of the PLIIM-based network. The RMCS also includes an analyzing subsystem for remotely analyzing the parameters to diagnose (i) performance failures in the PLIIM-based network, as well as (ii) the operation and performance of the PLIIM-based network. The RMCS also includes a control subsystem for remotely controlling one or more of the parameters so as to improve the performance of the PLIIM-based network and/or provide service thereto from a remote location.",
	"url": null,
	"owner": "Metrologic Instruments, Inc.",
	"publication_number": "07070106",
	"publication_date": "2006-07-04",
	"application_number": "09999687",
	"application_date": "2001-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "LED-based planar light illumination and imaging (PLIIM) engine",
	"summary": "",
	"abstract": "A LED-based planar light illumination and imaging (PLIIM) engine for use in a hand-supportable linear imager adapted for manual movement relative to an object to be illuminated and imaged. The LED-based PLIIM engine comprises an engine housing having a light transmission aperture, and a linear image formation and detection (IFD) module having a linear image detection array with image detection elements and image formation optics having a field of view (FOV) projected through the light transmission aperture into an illumination and imaging field, in which an object is presented for illumination and imaging. A pair of planar light illumination arrays (PLIAs) are arranged on opposite sides of the linear IFD module. Each PLIA includes a plurality of planar light illumination modules (PLIMs) for producing a plurality of spatially-incoherent planar light illumination beam (PLIB) components which are spatially aligned to produce a planar light illumination beam (PLIB) arranged in a coplanar relationship with a portion of the FOV. Each PLIM includes a light emitting diode (LED) and beam focusing and diverging optics for producing one PLIB component. An image frame grabber is provided for grabbing images formed and detected by the linear IFD module. An image data buffer is provided for buffering the grabbed linear images. A controller is provided for controlling the linear IFD module, and the pair of planar light illumination arrays. As the engine housing moves past the object, a series of linear images of the object are sequentially detected by the linear IFD module, grabbed by the image frame grabber, and buffered in the image data buffer for subsequent processing by an image processing computer, so to decode a 1-D or 2-D bar code symbol structure represented within the structure of said two-dimensional image, or recognize character strings or other forms of graphical intelligence represented therewithin.",
	"url": null,
	"owner": "Metrologic Instruments, Inc.",
	"publication_number": "06991166",
	"publication_date": "2006-01-31",
	"application_number": "10187473",
	"application_date": "2002-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "METHOD OF AND APPARATUS FOR PRODUCING A DIGITAL IMAGE OF AN OBJECT WITH REDUCED SPECKLE-PATTERN NOISE, BY CONSECUTIVELY CAPTURING, BUFFERING AND PROCESSING A SERIES OF DIGITAL IMAGES OF THE OBJECT OVER A SERIES OF CONSECUTIVELY DIFFERENT PHOTO-INTEGRATION TIME PERIODS",
	"summary": "",
	"abstract": "A method of and system for producing a digital image of an object with reduced speckle-pattern noise power. The method comprises moving a hand-supportable PLIIM-based imager relative to an object so as to consecutively capture, over a series of consecutively different photo-integration time periods, a series of digital images of an object with speckle-pattern noise. This series of digital images are buffered over the series of consecutively different photo-integration time periods. Corresponding pixel data subsets defined over a small window in the set of captured digital images are processed so as to produce spatially corresponding pixels data subsets in a reconstructed digital image of the object, containing speckle-pattern noise having a substantially reduced level of RMS power. The method and system may also be used using both linear and area type PLIIM-based imagers. By virtue of the present invention, it is possible to now use laser illumination and electronic image detection arrays to produce digital images of objects with substantially reduced speckle-noise power levels.",
	"url": null,
	"owner": "Metrologic Instruments, Inc.",
	"publication_number": "07090133",
	"publication_date": "2006-08-15",
	"application_number": "10146652",
	"application_date": "2002-05-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "METHOD OF SPECKLE-NOISE PATTERN REDUCTION AND APPARATUS THEREFOR BASED ON REDUCING THE TEMPORAL COHERENCE OF THE PLANAR LASER ILLUMINATION BEAM BEFORE IT ILLUMINATES THE TARGET OBJECT BY APPLYING TEMPORAL INTENSITY MODULATION TECHNIQUES DURING THE TRANSMISSION OF THE PLIB TOWARDS THE TARGET",
	"summary": "",
	"abstract": "A planar laser illumination and imaging (PLIIM) based camera system capable of producing digital images with reduced levels of speckle-pattern noise. The PLIIM based camera system comprises a planar laser illumination array (PLIA) including a plurality of laser diodes for producing and projecting a planar laser illumination beam (PLIB), so as to illuminate an object as it is moving past said PLIIM based camera system. An image formation and detection (IFD) module is provided having a image detection array and imaging forming optics for providing said image detection array with a field of view (FOV). The PLIB and FOV are arranged in a coplanar relationship along the working range of the camera system so that the PLIB illuminates primarily within the FOV of the IFD module. A speckle-pattern noise reduction subsystem is integrated with the PLIA, for reducing the temporal-coherence of the PLIB before the PLIB illuminates a target object.",
	"url": null,
	"owner": "Metrologic Instruments, Inc.",
	"publication_number": "06991165",
	"publication_date": "2006-01-31",
	"application_number": "10136182",
	"application_date": "2002-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "METHOD OF SPECKLE-NOISE PATTERN REDUCTION AND APPARATUS THEREFORE BASED ON REDUCING THE TEMPORAL-COHERENCE OF THE PLANAR LASER ILLUMINATION BEAM BEFORE IT ILLUMINATES THE TARGET OBJECT BY APPLYING TEMPORAL PHASE MODULATION TECHNIQUES DURING THE TRANSMISSION OF THE PLIB TOWARDS THE TARGET",
	"summary": "",
	"abstract": "A planar laser illumination and imaging (PLLIM) based camera system capable of producing digital images with reduced levels of speckle-pattern noise. The PLIIM based camera system comprises a planar laser illumination array (PLIA) including a plurality of laser diodes for producing and projecting a planar laser illumination beam (PLIB), so as to illuminate an object as it is moving past said PLIIM based camera system. An image formation and detection (IFD) module is provided having a image detection array and imaging forming optics for providing the image detection array with a field of view (FOV). The PLIB and FOV are arranged in a coplanar relationship along the working range of the PLIIM based camera system so that the PLIB illuminates primarily within the FOV of the IFD module. A speckle-pattern noise reduction subsystem is integrated with the PLIA, for reducing the temporal-coherence of said planar laser illumination beam (PLIB) before the PLIB illuminates a target object. The speckle-pattern noise reduction subsystem carries out a temporal phase modulation technique during the transmission of the PLIB towards the target, so that the object is illuminate with a temporally coherent-reduced planar laser illumination beam (PLIB) and numerous substantially different time-varying speckle-noise patterns are produced at the image detection array over the photo-integration time period thereof. The numerous substantially different time-varying speckle-noise patterns are detected at the image detection array over the photo-integration time period, and the detected speckle-noise patterns are temporally averaged at said image detection array during the photo-integration time period thereof. As a result of such temporal averaging, the RMS power of observable speckle-noise patterns is reduced at the image detection array. By virtue of the present invention, it is now possible to enjoy the benefits of using laser-based illumination during high-speed imaging operations, without the adverse effects associated with speckle-pattern noise.",
	"url": null,
	"owner": "Metrologic Instruments, Inc.",
	"publication_number": "07028899",
	"publication_date": "2006-04-18",
	"application_number": "09990585",
	"application_date": "2001-11-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Nuclear resonance based scanning system having an automatic object identification and attribute information acquisition and linking mechanism integrated therein",
	"summary": "",
	"abstract": "A Quadrupole Resonance (QR) object scanning-tunnel system for automatically acquiring and linking object identity and attribute information about each object transported therethrough while bearing a bar code symbol and/or graphical indicia on the exterior surface thereof. The system comprises a scanning-tunnel housing through which one or more objects can be transported. A planar light illumination (PLIIM) based subsystem, is mounted within said scanning-tunnel housing, and includes a pair of planar light illumination arrays (PLIAs) for producing a planar light illumination beam (PLIB) for illuminating the exterior surface of each object. A linear image formation and detection (IFD) module automatically forms and detects digital linear images of the bar code symbol and/or graphical indicia thereon. An image processing computer buffers and processes the digital linear images so to construct a 2-D image of the bar code symbol and/or identifying graphical indicia on the object, and then processes the 2-D image so as to read the bar code symbol and/or identifying graphical indicia, and identify the object by producing object identification information. A QR scanning subsystem mounted within the scanning-tunnel housing, produces low-intensity electromagnetic radio waves for scanning the interior and/or contents of each object, and automatically produces digital images of the object's interior and/or contents. An information linking computer subsystem automatically links (i) digital images of the interior and/or contents of each transported object, with (ii) object identification information, for storage within a relational database management system (RDBMS) for subsequent access and retrieval. By virtue of the present invention, object attribute information is automatically linked to object identity information, and the resulting composite information set is stored in a relational database management system (RDBMS) for subsequent retrieval and use in diverse applications.",
	"url": null,
	"owner": "Metrologic Instruments, Inc.",
	"publication_number": "07059524",
	"publication_date": "2006-06-13",
	"application_number": "10165046",
	"application_date": "2002-06-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Planar laser illumination and imaging (PLIIM) based camera system for producing high-resolution 3-D images of moving 3-D objects",
	"summary": "",
	"abstract": "A planar laser illumination and imaging (PLIIM) based camera system for producing high-resolution 3-D images of moving 3-D objects having arbitrary surface geometry. The PLIIM-based camera system comprises a system housing of unitary construction, a LADAR-based object profiling subsystem, a PLIIM-based linear imaging subsystem, and an image processing subsystem disposed therein. The system housing has first, second, third and fourth light transmission apertures linearly aligned with and optically isolated from each other, and the third light transmission aperture is disposed between the first and second light transmission aperture. The LADAR-based object profiling subsystem projects an amplitude modulated (AM) laser beam through the fourth light transmission aperture, and scans the laser beam across an 3-D object surface of arbitrary surface geometry moving past the fourth light transmission aperture. The return AM laser beam is processed in order to measure the surface profile of the moving 3-D object surface and produce a series of linear 3-D surface profile maps thereof. Each linear 3-D surface profile map comprises a set of 3-D coordinates specifying the location of sampled points along the moving 3-D object surface. The PLIIM-based linear imaging subsystem produces a series of linear high-resolution 2-D images of the moving 3-D object surface. Each linear high-resolution 3-D image comprises a set of pixel intensity values, and each pixel intensity value is assigned a set of two-dimensional coordinates specifying the location of the pixel in the linear high-resolution 2-D image. The image processing subsystem automatically processes the linear 3-D surface profile maps and the high-resolution 2-D linear images captured by the subsystems in order to construct high-resolution 3-D images of the 3-D object surface. By virtue of the present invention, it is now possible to produce high-resolution 3-D images of moving 3-D object surfaces using linear imaging and 3-D profiling techniques.",
	"url": null,
	"owner": "Metrologic Instruments, Inc.",
	"publication_number": "06988660",
	"publication_date": "2006-01-24",
	"application_number": "10084764",
	"application_date": "2002-02-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "PLANAR LASER ILLUMINATION AND IMAGING (PLIIM) DEVICE EMPLOYING A LINEAR IMAGE DETECTION ARRAY HAVING VERTICALLY-ELONGATED IMAGE DETECTION ELEMENTS, WHEREIN THE HEIGHT OF THE VERTICALLY-ELONGATED IMAGE DETECTION ELEMENTS AND THE F/# PARAMETER OF THE IMAGE FORMATION OPTICS ARE CONFIGURED TO REDUCE SPECKLE-PATTERN NOISE POWER THROUGH SPATIAL-AVERAGING OF DETECTED SPECKLE-NOISE PATTERNS",
	"summary": "",
	"abstract": "A planar laser illumination and imaging (PLIIM) based device a linear image formation and detection (IFD) module characterized by an F/# parameter mounted on a support platform. The IFD module has a linear image detection array with vertically elongated image detection elements and image formation optics having a field of view (FOV) projected through the light transmission window into an illumination and imaging field external to the hand-supportable housing and in which an object is presented for illumination and imaging. Each vertically-elongated image detection element having a height dimension (H) that is substantially greater than the width dimension (W) thereof. A pair of planar laser illumination arrays (PLIAs) is mounted within the hand-supportable housing and arranged on opposite sides of linear image formation and detection module. Each PLIA includes a plurality of planar laser illumination modules (PLIMs) for producing a plurality of spatially-incoherent planar laser illumination beam (PLIB) components which are spatially aligned to produce a composite planar laser illumination beam (PLIB) arranged in a coplanar relationship with a portion of the FOV. Each PLIM includes a laser diode and beam focusing and diverging optics for producing one PLIB component. For a given wavelength of planar laser illumination, the height dimension (H) of each image detection element is selected to provide the largest possible spatial averaging area, while the F/# parameter of the linear IFD module is selected to provide the smallest possible average speckle noise pattern size along the height dimension of vertically-elongated image detection elements so that more individual speckle noise patterns can occur along the height dimension of each vertically-elongated image detection element in the linear IFD module. A series of linear images of object are sequentially detected by the linear IFD module as the object moves past the hand-supportable housing, so that the series of linear images can be grabbed and buffered for subsequent use in constructing two-dimensional images of the object. The level of speckle noise power observed at the linear image detection array is reduced through the spatial averaging of individual speckle noise patterns occurring along the height dimension of the image detection elements.",
	"url": null,
	"owner": "Metrologic Instruments, Inc.",
	"publication_number": "06997386",
	"publication_date": "2006-02-14",
	"application_number": "10105961",
	"application_date": "2002-03-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "SYSTEM AND METHOD FOR CARRYING OUT INFORMATION-RELATED TRANSACTIONS USING WEB DOCUMENTS EMBODYING TRANSACTION-ENABLING APPLETS AUTOMATICALLY LAUNCHED AND EXECUTED IN RESPONSE TO READING URL-ENCODED SYMBOLS POINTING THERETO",
	"summary": "",
	"abstract": "A novel transaction-enabling method and system are disclosed, wherein a transaction-enabling Java-Applet is embedded within an HTML-encoded document stored in an HTTP server at predetermined URL. When a code symbol (e.g., magstripe or bar code) encoded with the URL is read using a code symbol reader interfaced with a Java-enabled Internet terminal, the corresponding HTTP document is automatically accessed and displayed at the terminal, and the transaction-enabling Java-Applet initiated for execution so that the customer, consumer or client desiring the transaction can simply and conveniently conduct the information-related transaction over the Internet. The transaction-enabling Internet terminal can be in the form of an Internet kiosk installed in a public location, in the manner as conventional ATMs. By virtue of the present invention, universal transaction machine (UTMs) can be easily deployed for use by the mass population so that they can easily conduct various types of transaction over the Internet.",
	"url": null,
	"owner": "Metrologic Instruments, Inc.",
	"publication_number": "06988662",
	"publication_date": "2006-01-24",
	"application_number": "10420544",
	"application_date": "2003-04-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Techniques for generating serial presence detect contents",
	"summary": "",
	"abstract": "Techniques are presented for automatically generating Serial Presence Detect (SPD) contents. Standards for specific values associated with SPD contents are electronically represented with SPD tokens and rules. When a memory module is identified, a string of needed SPD tokens are acquired for that memory module. The SPD tokens are searched for in the standards and specific SPD values are assembled for the memory module based on the defined rules. The resulting SPD values which are associated with the rules form the needed SPD contents for the memory module. The SPD contents are used to configure an Electrically Erasable Programmable Read-Only Memory (EEPROM) on a memory module.",
	"url": null,
	"owner": "Micron Technology, Inc.",
	"publication_number": "07152139",
	"publication_date": "2006-12-19",
	"application_number": "10782446",
	"application_date": "2004-02-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Partial migration of an object to another storage location in a computer system",
	"summary": "",
	"abstract": "A technique is provided whereby a stream of data located in a first storage location is registered for migration administration and according to preset criteria, portion(s) of the stream of data that are suited to another storage location are migrated to maximize system storage efficiencies. The file system may have use of facilities that enable the monitoring of files/streams that have been registered for migration administration or files/streams may be polled according to preset criteria. If the stream of data has portions to migrate to another storage location, the hierarchical storage management (HSM) system migrates the data to the other storage location, such as to long term or off-line storage, and preserves the data relationships of the stream via metadata. The technique allows for multiple volumes to be spanned by the migration target location, and multiple file systems may service the source and target.",
	"url": null,
	"owner": "Microsft Corporation",
	"publication_number": "07072914",
	"publication_date": "2006-07-04",
	"application_number": "11008822",
	"application_date": "2004-12-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Accessing audio processing components in an audio generation system",
	"summary": "",
	"abstract": "An application program provides a performance manager and an audio rendition manager to produce a rendition corresponding to an audio source. The performance manager receives audio data from the audio source and instantiates audio data processing components to process the audio data. The audio rendition manager receives the audio data from the performance manager and instantiates audio data processing components to further process the audio data, including a synthesizer component that generates audio sound wave data, and audio buffers that process the audio sound wave data. The audio data processing components are instantiated as objects having an interface that can be called by the application program. The application program requests a programming reference to an interface of an audio data processing component in the performance manager, or in the audio rendition manager, by calling an interface method of the performance manager or the audio rendition manager, respectively.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06990456",
	"publication_date": "2006-01-24",
	"application_number": "10994572",
	"application_date": "2004-11-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Accounting for references between a client and server that use disparate e-mail storage formats",
	"summary": "",
	"abstract": "In one exemplary implementation, a client receives a record from a server. The record has a server identification key that uniquely identifies the record from any other records. If the record is viewable by a user in one or more folders, there are corresponding one or more associated references that indicate which one of the one or more folders the record is viewable For each of the one or more associated references, one or more new records identical to the received record are created. One or more client identification keys are assigned to the one or more new client records; wherein each of the one or more client identification keys uniquely identifies the one or more new client records. Each of the one or more new client records are synchronized to the record received from the server by mapping the one or more client identification keys to the server identification key.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07031973",
	"publication_date": "2006-04-18",
	"application_number": "10167781",
	"application_date": "2002-06-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Administrative tool environment",
	"summary": "",
	"abstract": "In an administrative tool environment, user input is supplied to an administrative tool framework for processing. The administrative tool framework maps user input to cmdlet objects. The cmdlet objects describe a grammar for parsing the user input and input objects to obtain expected input parameters. The input objects are emitted by one cmdlet and are available as input to another cmdlet. The input objects may be any precisely parseable input, such as .NET objects, plain strings, XML documents, and the like. The cmdlets may operate within the same process. Alternatively, one cmdlet may operate locally while another cmdlet operates remotely. The cmdlets may be provided by the administrative tool framework or may be provided by third party developers. The user input may be supplied to the framework via a host cmdlet.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07155706",
	"publication_date": "2006-12-26",
	"application_number": "10693785",
	"application_date": "2003-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Analyzing, indexing and seeking of streaming information",
	"summary": "",
	"abstract": "A streaming information handling system receives streaming information and analyzes the streaming information to locate one or more sync points in the streaming information. The streaming information and sync point location information, indicative of a location of the sync points, is provided to a storage module. The streaming information and at least a portion of the sync point location information are stored on the storage module.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07149868",
	"publication_date": "2006-12-12",
	"application_number": "11096792",
	"application_date": "2005-04-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Annotations for multiple versions of media content",
	"summary": "",
	"abstract": "Multiple different versions of the same multimedia content are available to a multimedia server. An annotation server maintains annotations corresponding to the multimedia content, each such annotation corresponding to each of the different versions of the multimedia content.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07051275",
	"publication_date": "2006-05-23",
	"application_number": "09396984",
	"application_date": "1999-09-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "API communications for vertex and pixel shaders",
	"summary": "",
	"abstract": "A three-dimensional API for communicating with hardware implementations of vertex shaders and pixel shaders having local registers. With respect to vertex shaders, API communications are provided that may make use of an on-chip register index and API communications are also provided for a specialized function, implemented on-chip at a register level, that outputs the fractional portion(s) of input(s). With respect to pixel shaders, API communications are provided for a specialized function, implemented on-chip at a register level, that performs a linear interpolation function and API communications are provided for specialized modifiers, also implemented on-chip at a register level, that perform modification functions including negating, complementing, remapping, stick biasing, scaling and saturating. Advantageously, these API communications expose these very useful on-chip graphical algorithmic elements to a developer while hiding the details of the operation of the vertex shader and pixel shader chips from the developer.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07142216",
	"publication_date": "2006-11-28",
	"application_number": "10937031",
	"application_date": "2004-09-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application programming interface enabling application programs to group code and data to control allocation of physical memory in a virtual memory system",
	"summary": "",
	"abstract": "An application programming interface (API) enables application programs in a multitasking operating environment to classify portions of their code and data in a group that the operating system loads into physical memory all at one time. Designed for operating systems that implement virtual memory, this API enables memory-intensive application programs to avoid performance degradation due to swapping of units of memory back and forth between the hard drive and physical memory. Instead of incurring the latency of a page fault whenever the application attempts to access code or data in the group that is not located in physical memory, the API makes sure that all of the code or data in a group is loaded into physical memory at one time. This increases the latency of the initial load operation, but reduces performance degradation for subsequent memory accesses to code or data in the group.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06983467",
	"publication_date": "2006-01-03",
	"application_number": "10934202",
	"application_date": "2004-09-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Applying multiple texture maps to objects in three-dimensional imaging processes",
	"summary": "",
	"abstract": "Systems and methods for providing multi-pass rendering of three-dimensional objects. A rendering pipeline that includes (N) physical texture units and one or more associated buffers emulates a rendering pipeline containing more texture units (M) than are physically present (N). Multiple rendering passes are performed for each pixel. During each texture pass only N sets of texture coordinates are passed to the texture units. The number of passes required through the pipeline to emulate M texture units is M/N, rounded up to the next integer. The N texture units of the rendering pipeline perform look-ups on a given pass for the corresponding N texture maps. The texture values obtained during the texture passes are blended by texture blenders to provide composite texture values. In successive passes, the buffers are used for temporary data and the most current composite texture values. The process is repeated until all desired texture maps are applied.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07095419",
	"publication_date": "2006-08-22",
	"application_number": "11216251",
	"application_date": "2005-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Audio buffers with audio effects",
	"summary": "",
	"abstract": "An audio buffer includes one or more audio effects that modify audio data received from an audio data source. A first audio effect in the audio buffer receives audio data from the audio data source and modifies the audio data to generate a stream of audio data. Subsequent audio effects in the audio buffer receives the stream of audio data from the first audio effect and further modifies the audio data to generate a stream of modified audio data. The stream of modified audio data is then routed from the audio buffer to a second audio buffer, or communicated to an audio rendering component that produces an audio rendition corresponding to the modified audio data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07107110",
	"publication_date": "2006-09-12",
	"application_number": "10092740",
	"application_date": "2002-03-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Audio wave data playback in an audio generation system",
	"summary": "",
	"abstract": "An audio generation system includes MIDI track components that generate event instructions for MIDI audio data received from a MIDI audio data source, and includes audio wave track components that generate playback instructions for audio wave data maintained in an audio wave data source. A segment component plays one or more of the MIDI track components to generate the event instructions, and plays one or more of the audio wave track components to generate the playback instructions. An audio processing component, such as a synthesizer component, receives the event instructions and the playback instructions, and generates an audio rendition corresponding to the MIDI audio data and/or the audio wave data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07126051",
	"publication_date": "2006-10-24",
	"application_number": "10092944",
	"application_date": "2002-03-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automated recovery of computer appliances",
	"summary": "",
	"abstract": "Aspects of the invention provide methods and architectures for enhancing the reliability of computer appliances and reducing the possibilities that human intervention is necessary in the event of a system failure or failure condition. The provided architecture is extensible and provides a generalized framework that is adaptable to many different types of computer appliances. One aspect of the invention provides a boot up redundancy component to ensure that a computer appliance can be appropriately booted. In the described embodiment, the appliance hard drive is configured with multiple partitions that can be utilized to boot the appliance thereby reducing the chances that the appliance will not boot. In addition, an architecture is disclosed that comprises one or more resource monitoring components that monitor an associated appliance resource for a failure condition. The resource monitoring components are programmed to attempt to remedy certain failure conditions that they detect. An appliance monitoring service is also provided and is programmed to attempt to remedy failure conditions that are not remedied by one or more of the resource monitoring objects.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07131026",
	"publication_date": "2006-10-31",
	"application_number": "10842263",
	"application_date": "2004-05-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic assigning of shortcut keys",
	"summary": "",
	"abstract": "Automatic assignment of shortcut keys for launching applications or for providing other commands is provided based on the position of corresponding application listings or shortcuts in a menu. The menu may include an applications menu, such as a start menu. The menu may also include an application launch bar listing applications that may be launched therefrom by selecting the respective application, or by entering shortcut keys that are automatically assigned based on the position of the application listing on the launch bar. Methods are provided for assigning application launch shortcut keys, for identifying assigned shortcut keys, for modifying shortcut keys, and for using shortcut keys for instantiating or switching applications.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07134094",
	"publication_date": "2006-11-07",
	"application_number": "11034745",
	"application_date": "2005-01-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic baud rate detection of null modem unimodem client connection",
	"summary": "",
	"abstract": "A baud rate detection system and method automatically detects the baud rate at which a client computing device is communicating with a host computer over a serial connection. The host computer is coupled to the client computing device via a serial connection, which employs a Unimodem null serial protocol. The baud rate detection system includes a baud rate selector to select among multiple baud rates that the client computing device might use to transmit a predefined message (e.g., a text string u201cCu201d, u201cLu201d, u201cIu201d, u201cEu201d, u201cNu201d, u201cTu201d). The system also includes a message detector to listen at the currently selected baud rate for the predefined message. If the message detector receives the message, the current baud rate is the correct rate and is used for continuing communications with the client computing device. On the other hand, if the message detector fails to detect the message after a predetermined time period or detects characters not included in the predefined message, the baud rate selector chooses a new baud rate and the message detector begins listening at the new baud rate. This process continues until the baud rate detection system finds the appropriate baud rate for communicating with the client computing device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07000020",
	"publication_date": "2006-02-14",
	"application_number": "10715101",
	"application_date": "2003-11-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Binary cache file format for themeing the visual appearance of a computer system",
	"summary": "",
	"abstract": "A binary theme file format provides optimized access to retrieve graphical component theme property data. The binary format includes data structures storing a set of defined visual characteristics for graphical component classes, parts, and states. The data structure includes a hierarchy of theme data. A theme manager quickly retrieves theme property data by indexing into the binary file with a unique theme handle. The theme manager accesses state, part, class, and global property sections to retrieve theme data. Jump tables and jump-to-parent references allow for quickly traversing property data sections. Packed data sections have packed objects having the necessary property data for frequently used graphical components. A custom image region data section provides border data for nontransparent image borders. A sampled colors section facilitates rendering of images with solid sections. The binary file format can be constructed using a text theme file and is loaded into shared process memory.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07137066",
	"publication_date": "2006-11-14",
	"application_number": "09827993",
	"application_date": "2001-04-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Calibration of a device location measurement system that utilizes wireless signal strengths",
	"summary": "",
	"abstract": "An architecture for minimizing calibration effort in an IEEE 802.11 device location measurement system. The calibration technique is based upon a regression function that produces adequately accurate location information as a function of signal strength regardless of gaps in the calibration data or minimally available data. The algorithm takes a set of signal strengths from known room locations in a building and generates a function giving (x,y) as a function of signal strength, which function may then be used for the estimation of new locations. Radial basis functions, which are simple to express and compute, are used for regression. The fact that the algorithm maps signal strength to continuous location makes it possible to skip rooms during calibration, yet still evaluate the location in those rooms.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06992625",
	"publication_date": "2006-01-31",
	"application_number": "10423093",
	"application_date": "2003-04-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Client programming model with abstraction",
	"summary": "",
	"abstract": "A client programming model with abstraction hides from an underlying client application or application program interface (API) the details of where each element of data is located, and which copy of the data is resident on an available server and associated databases. The model wraps a database, such as a virtual database, and provides data-dependent and application-dependent routing, failover, and operational administration.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07058958",
	"publication_date": "2006-06-06",
	"application_number": "10128060",
	"application_date": "2002-04-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Clock radio with computer-based remote control facilitator",
	"summary": "",
	"abstract": "A clock radio includes a clock a user interface that is dynamically configurable from a remote computer. Once configured, the user interface allows a user to select radio programs that are accessible by the remote computer. When a user selects a radio program via the interface, a signal indicating the selected radio program is transmitted from the clock radio to the remote computer. The remote computer then accesses the selected radio program and transmits the selected radio program to speaker(s) for broadcast.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07010361",
	"publication_date": "2006-03-07",
	"application_number": "10874083",
	"application_date": "2004-06-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Code and thread differential addressing via multiplex page maps",
	"summary": "",
	"abstract": "Described is a system and method whereby processes may have multiple memory maps associated therewith to provide curtained memory and overcome other memory-related problems. Multiple maps are used to restrict memory access of existing code such as drivers, without changing that code, and without changing existing microprocessors. A thread of a process is associated with one memory map at a time, which by mapping to different memory locations, provides memory isolation without requiring a process switch. Memory isolation may be combined with controlled, closed memory map switching performed only by trusted code, to ensure that some protected memory is inaccessible to all but the trusted code (curtained memory). Map switching among multiple maps eliminates the need to change a process in order to access different memory, thereby allowing expanded memory addressing in a single process and isolating untrusted code run in process from certain memory of that process.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07073173",
	"publication_date": "2006-07-04",
	"application_number": "09915628",
	"application_date": "2001-07-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Color management system that supports legacy and advanced color management applications",
	"summary": "",
	"abstract": "The present invention provides method and apparatus for supporting a legacy application programming interface (API) set between a component and a color management system. The legacy API set supports both the new capabilities as well as the legacy capabilities. The color management system determines the format type for an object that is referenced by an API call. If the object is associated with a legacy format, the API call is processed by a legacy processing module. If the object is associated with an advanced format, the API call is processed by an advanced processing module. If a plurality of objects is associated with an API call with mixed formats, the color management system converts some of the objects so that the objects have a consistent format. A common structure supports an object that may have either a legacy format or an advanced format.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07068284",
	"publication_date": "2006-06-27",
	"application_number": "10705132",
	"application_date": "2003-11-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Communication protocol for synchronizing animation systems",
	"summary": "",
	"abstract": "A communications protocol is described that governs asynchronous exchange of data between a high level animation system and a low level animation system. The high level animation system has a variable, medium-frequency frame rate and is optimized for interactivity. The low level animation system has a constant, high frequency frame rate and is optimized for high refresh frame rate. The communications protocol includes messages that can be sent by the high-level animation system to the low-level animation system to designate an animation and how the animation is to change over a specified period of time. As a result, the low-level system can display the animation at the high refresh rate even if animation data is not received from the high-level system for every frame.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07034834",
	"publication_date": "2006-04-25",
	"application_number": "10692673",
	"application_date": "2003-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Compact easily parseable binary format for a context-free grammer",
	"summary": "",
	"abstract": "A computer-loadable data structure is provided that represents a state-and-transition-based description of a speech grammar. The data structure includes first and second transition entries that both represent transitions from a first state. The second transition entry is contiguous with the first transition entry in the data structure and includes a last-transition value. The last-transition value indicating that the second transition is the last transition from the first state in the data structure. A method is also provided for retrieving information from a binary grammar. The method includes receiving an index into a set of transition entries and converting the index into a memory offset relative to the beginning of the binary grammar, where the offset is based on a memory offset to the beginning of the set of transition entries, the fixed size of each transition entry and the index.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07024350",
	"publication_date": "2006-04-04",
	"application_number": "09778479",
	"application_date": "2001-02-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Component self-deactivation while client holds a returned reference",
	"summary": "",
	"abstract": "A component-based framework includes system services and component integration interfaces that provide a run-time environment for component-based server application in which server application components have control over the duration of their state independent of client action. The framework provides functions that a server application component calls to indicate its work for a client is complete, and its state is to be destroyed. On the component's return from the client's method call, the framework destroys the component's state thus releasing any server computer resources held by the component. This allows the server application components to be programmed so as to minimize the duration that their state remains in memory consuming server computer resources, and which enhances scalability of the server application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07043734",
	"publication_date": "2006-05-09",
	"application_number": "11059033",
	"application_date": "2005-02-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Configuration for binding software assemblies to application programs",
	"summary": "",
	"abstract": "A method, system and infrastructure that allow an application to run with specified versions of assemblies bound thereto, while allowing the application author, assembly publisher and/or an administrator to change the originally-specified version as desired. Each assembly may exist and run side-by-side on the system with other versions of the same assembly being used by other applications. An application manifest specifies any desired assembly versions, which may be redirected to another version (overridden) by an application configuration. A publisher configuration provided by an assembly publisher can similarly override the specified version. Lastly, an administrator configuration is capable of overriding other configuration versioning information. A table built from the manifest and any configuration redirection may be accessed during execution to quickly locate the appropriate version. The various configuration data structures themselves may be wrapped as assemblies, thereby enabling versioning of configurations.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07073170",
	"publication_date": "2006-07-04",
	"application_number": "11085673",
	"application_date": "2005-03-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Context free grammar engine for speech recognition system",
	"summary": "",
	"abstract": "The present invention includes a context-free grammar (CFG) engine which communicates through an exposed interface with a speech recognition engine. The context-free grammar engine, in one illustrative embodiment, handles loading and unloading of grammars, as well as maintaining a desired activation state of the grammars which are loaded. Further, the CFG engine represents all loaded grammars, and their corresponding activation states, as a single grammar to the speech recognition engine.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07155392",
	"publication_date": "2006-12-26",
	"application_number": "11052449",
	"application_date": "2005-02-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data driven remote device control model with general programming interface-to-network messaging adapter",
	"summary": "",
	"abstract": "A general programmatic interface-to-network messaging adapter exposes a suitable object integration interface or application programming interface to applications on a controller device and sends network data messages to invoke services or query status of a controlled device. The adapter maps application calls to the interface into network data messages according to service protocols of the controlled device. The general adapter provides the interface suitable to any specific service of a controlled device based on a data description of the interface, and converts the application calls to network data messages based on a data description of a protocol and format for network data messages to interact with the specific service. Once the interface/messaging description is obtained, applications on the controller device can programmatically interact with the adapter, and the adapter then handles appropriate message exchanges with the service of the controlled device. The general adapter allows controller device applications to be written using object-oriented programming, while avoiding code download.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07085814",
	"publication_date": "2006-08-01",
	"application_number": "09706446",
	"application_date": "2000-11-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data format for a streaming information appliance",
	"summary": "",
	"abstract": "A method is provided for handling streaming information encoded with a data structure having a data block format. The data block format includes a data block having a header portion and an end portion. The header portion includes a prefix field having a pointer to a succeeding data block and the end portion includes a suffix field having a pointer to a preceding data block. A first data block size field is included in the header portion and indicates the size of the data block and a second data block size field is included in the end portion and indicates the size of the data block. A payload field is bounded by the first data block size field and a second data block size field. The payload field includes streaming information to be rendered.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07139869",
	"publication_date": "2006-11-21",
	"application_number": "11098017",
	"application_date": "2005-04-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Database object script generation method and system",
	"summary": "",
	"abstract": "An automatic scripting of objects of various complexities in a relational database includes creating a hierarchical object tree from a single or multiple reference object reference passed into the system. Duplicate object references are eliminated in the formation of the hierarchical tree. A dependency list is generated from the hierarchical tree. The dependency list represents a linear list of objects sequenced in the manner they should be created to satisfy dependency constraints. A script is generated from the dependency list which permits the deployment of varying complexity objects onto a target database. Script is generated by instantiating each object in the dependency list and calling a pre-constructed script method on the object. Each phase may be operated independently.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07136868",
	"publication_date": "2006-11-14",
	"application_number": "10456139",
	"application_date": "2003-06-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Display controller permitting connection of multiple displays with a single video cable",
	"summary": "",
	"abstract": "A display controller that permits more than one display to be operated by a single cable and a single display adapter. The display controller provides custom EDID information to a computer to which it is attached. The custom EDID information may include information about the single virtual display surface provided by all displays, and may include information about each of the individual monitors or displays, including the location of the individual displays in the single composite display surface. The single composite display surface may be utilized by computers that are not capable of recognizing the EDID for the multiple display system. If the computer does recognize the EDID for the multiple display system, the operating system of the computer and/or applications running on the computer may understand and utilize the heterogeneous nature of the display surface and may optimize display quality and presentation for a user.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07136042",
	"publication_date": "2006-11-14",
	"application_number": "10284045",
	"application_date": "2002-10-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed computing services platform",
	"summary": "",
	"abstract": "A server federation cooperatively interacts to fulfill service requests by communicating using data structures that follow a schema in which the meaning of the communicated data is implied by the schema. Thus, in addition to the data being communicated, the meaning of the data is also communication allowing for intelligent decisions and inferences to be made based on the meaning of the data. Cooperative interaction is facilitated over a wide variety of networks by messaging through a common API that supports multiple transport mechanisms. Also, mid-session transfer between client devices is facilitated by schema and the transport-independent messaging structure. The user interfaces of the client devices will appear consistent even if the client devices have different user interface capabilities.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06990513",
	"publication_date": "2006-01-24",
	"application_number": "09887847",
	"application_date": "2001-06-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dual-band modem and service",
	"summary": "",
	"abstract": "A communications device, method and service are provided that integrate broadband and dial-up internet access in a seamless service package. A modem is provided that combines both broadband and dial-up connectivity in a single device. The modem includes an auto-sense procedure for switching between the two types of connections. Additionally, a connectivity utility allows a user to interact with a modem that combines both broadband and dial-up connectivity in a single device. The connectivity utility receives various event notifications from the modem and provides the user with the ability to receive off or on-line help, current modem or connection status, the status of an order for service, control of modem parameters, billing information, and other features.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07023973",
	"publication_date": "2006-04-04",
	"application_number": "10425066",
	"application_date": "2003-04-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic channel allocation in a synthesizer component",
	"summary": "",
	"abstract": "An audio generation system receives audio instructions that have instruction channel designations and dynamically allocates synthesizer channels in groups of sixteen channels that support the MIDI standard to receive the audio instructions. The synthesizer channels are assigned to receive the audio instructions such that audio instructions having the same instruction channel designations are assigned to be received by synthesizer channels in different synthesizer channel groups. The audio instructions are routed to the synthesizer channels in accordance with the instruction channel designations of the audio instructions and the synthesizer channel assignments via mapping channels in a mapping component, where an individual mapping channel corresponds to a particular synthesizer channel.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07005572",
	"publication_date": "2006-02-28",
	"application_number": "10974189",
	"application_date": "2004-10-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic filtering in a database system",
	"summary": "",
	"abstract": "A dynamic filtering module receives a request to perform an operation on data in the database and a input. The dynamic filtering module provides as an output a modified request to a data access system. The modified request can include one or more restrictions added to the original request pertaining to which data will be accessed as a function of the input.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07136873",
	"publication_date": "2006-11-14",
	"application_number": "10199489",
	"application_date": "2002-07-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Efficient write-watch mechanism useful for garbage collection in a computer system",
	"summary": "",
	"abstract": "An efficient write-watch mechanism and process. A bitmap is associated with the virtual address descriptor (VAD) for a process, one bit for each virtual page address allocated to a process having write-watch enabled. As part of the write-watch mechanism, if a virtual address is trimmed to disk and that virtual address page is marked as modified, then the corresponding bit in the VAD is set for that virtual address page. In response to an API call (e.g., from a garbage collection mechanism) seeking to know which virtual addresses in a process have been modified since last checked, the memory manager walks the bitmap in the relevant VAD for the specified virtual address range for the requested process. If a bit is set, then the page corresponding to that bit is known to have been modified since last asked. If specified by the API, the bit is cleared in the VAD bitmap so that it will reflect the state since this time of asking. If the bit is not set, to determine if the page was modified, the page table entry (PTE) is checked for that page, and if the PTE indicates the page was modified, the page is known to be modified, otherwise that page is known to be unmodified since the last call. One enhancement uses page directory tables to locate a series of trimmed pages, sometimes avoiding the need to access the PTE.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07065617",
	"publication_date": "2006-06-20",
	"application_number": "10828877",
	"application_date": "2004-04-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic content search and delivery based on cursor location",
	"summary": "",
	"abstract": "An electronic search is automatically initiated when a cursor hovers in one location for a predetermined time. A target process associated with a target window is forced to re-render data to the target window in an update region that includes the detected cursor location. From the re-rendered data, a primary word and context words near the cursor location are determined. One or more local or remote electronic data stores are searched for substantive content related to the words. The content is prioritized according to user preference and displayed in a semitransparent window that is persistently visible to a user, yet does not obscure other content in an underlying window and does not shift the focus from an active window. Re-rendering is accomplished by invalidating an update region of the target window, and forcing the operating system to issue a paint message, causing the target process to redraw the update region.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07100123",
	"publication_date": "2006-08-29",
	"application_number": "10057433",
	"application_date": "2002-01-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Encrypting file system and method",
	"summary": "",
	"abstract": "A system and method for encryption and decryption of files. The system and method operate in conjunction with the file system to transparently encrypt and decrypt files in using a public key-private key pair encryption scheme. When a user puts a file in an encrypted directory or encrypts a file, data writes to the disk for that file are encrypted with a random file encryption key generated from a random number and encrypted with the public key of a user and the public key of at least one recovery agent. The encrypted key information is stored with the file, whereby the user or a recovery agent can decrypt the file data using a private key. With a correct private key, encrypted reads are decrypted transparently by the file system and returned to the user. One or more selectable encryption and decryption algorithms may be provided via interchangeable cryptographic modules.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06986043",
	"publication_date": "2006-01-10",
	"application_number": "09870411",
	"application_date": "2001-05-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enhancing smart card usage for associating media content with households",
	"summary": "",
	"abstract": "Various enhancements are made to using smart cards that are associated with (or to be associated with) a household. In one embodiment, data that is expected to be of value to a user (e.g., electronic money) is attached to that user's smart card(s), thereby providing an incentive for the user to keep his or her smart card(s) secure. In another embodiment, the smart cards are used for parental control (e.g., by restricting the children's access to one or more of the smart cards). In yet another embodiment, smart cards are used to enhance user privacy by maintaining user-specific information on the smart cards (which can be de-coupled from the computing device whenever the user desires). In another embodiment, the boundaries of a network of computing devices are defined by multiple smart cardsu2014any computing device to which a smart card is coupled is part of the network.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07124938",
	"publication_date": "2006-10-24",
	"application_number": "09534916",
	"application_date": "2000-03-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "External resource files for application development and management",
	"summary": "",
	"abstract": "This invention provides a method and system for developing a software application program with user interfaces that make resource files external to the other compiled executable files such that the information from the resource file may be obtained at runtime as needed without the need for compilation. The external resource file may be edited at runtime to allow designers to modify the application's interface without having to depend on developers implement changes in the interface. This is achieved by providing resources in a markup language and routines that locate and parse the markup language text on the fly as an application executes. Compartmentalization of the effort in developing and porting an application is facilitated for protection of source code and better management of designers and developers working on different aspects of a software application due to the externalization of the resource files needed primarily by the designers.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07017143",
	"publication_date": "2006-03-21",
	"application_number": "09452421",
	"application_date": "1999-12-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "External resource files for application development and management",
	"summary": "",
	"abstract": "A method and system are provided for efficient development of software application programs with user interfaces. Customarily, several specialists, including designers and developers, cooperate during the development stage of an application program. The invention teaches a strategy for making resource files external to the other compiled executable files in an application such that the information from the resource file may be obtained at runtime as needed without the need for compilation. Furthermore, the external resource file may be edited at runtime to allow designers to modify the look and feel for an application's interface without having to depend on developers to implement changes in the interface.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07152221",
	"publication_date": "2006-12-19",
	"application_number": "11102528",
	"application_date": "2005-04-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Facilitating performance analysis for processing",
	"summary": "",
	"abstract": "Facilitating performance analysis for processing includes capturing a state of a processing unit and capturing a plurality of commands submitted to the processing unit for processing. Both the captured state and the captured plurality of commands are also saved. The saved state and commands can be used for analysis, such as by processing only a subset of the commands or processing a modified set of the commands.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07095416",
	"publication_date": "2006-08-22",
	"application_number": "10667940",
	"application_date": "2003-09-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Flexible variable and execution matrix",
	"summary": "",
	"abstract": "Systems and methods are provided for selecting parameter values and combinations of parameter values to use in connection with testing. A graphical user interface allows a user to graphically illustrate the importance of parameter values by drawing a probability curve for each parameter. The resulting curves are then converted to mathematical functions that are then combined into a combination function. The combination function is then evaluated for different parameter value combinations. The parameter value combinations that cause the combination function to exceed a predetermined probability value are selected for testing.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07110914",
	"publication_date": "2006-09-19",
	"application_number": "10700178",
	"application_date": "2003-11-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Handling collisions during synchronization of data between client and server computers",
	"summary": "",
	"abstract": "Data stored on a server are synchronized with corresponding data on a plurality of client computers. To facilitate synchronization of the data, the data for a class of nodes on the server are provided with a version identifier (a serial number) that is incremented each time the data are modified on the server. During synchronization, the version identifier for the data stored on the client is transferred to the server, and the nodes stored on the client are updated by downloading nodes modified on the server since the last synchronization. Data on the client that have been modified are then uploaded to the server. Collisions between nodes of the data that have been modified on two different clients are detected, and a user is given an opportunity to resolve a collision.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07032033",
	"publication_date": "2006-04-18",
	"application_number": "09997801",
	"application_date": "2001-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hardware accelerated anti-aliased primitives using alpha gradients",
	"summary": "",
	"abstract": "Systems and methods are provided for providing anti-aliasing by introducing a falloff area around a graphics object to be rendered. The falloff area is shaded, using Gouraud shading or texture mapping to reduce the aliasing effects of the graphics object. The outside edge of the falloff area is set to be fully transparent, and the inside edge to an opacity matching the outer edge of the graphics object being rendered. To counteract bloating effects, the graphics object is shrunk by half the width of the falloff area. While the width of the falloff area may vary, generally, the width of the falloff area stays constant. In one embodiment, this width corresponds to the edge or diagonal of the square area mapped to each pixel.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07050067",
	"publication_date": "2006-05-23",
	"application_number": "10341168",
	"application_date": "2003-01-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Highly componentized system architecture with a demand-loading namespace and programming model",
	"summary": "",
	"abstract": "The invention is embodied in software executable on a computer having a working memory with demand-loadable components initially stored outside of the working memory, each component having an entry point including a constructor for an object. Preferably, the demand-loadable components are initially provided in a memory within the computer or a location external of the computer. A Namespace in the working memory provides access in the working memory to the components as they become needed by applications running in the computer. The Namespace provides the access by managing demand-loading and unloading of the components in the working memory.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07143421",
	"publication_date": "2006-11-28",
	"application_number": "09282238",
	"application_date": "1999-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hosting controls in a window via an interface for controlling the window",
	"summary": "",
	"abstract": "Hosting user interface controls in a window via an interface for controlling the window is disclosed. One aspect of the invention is a computerized system having an operating system and at least one program. The operating system provides for hosting controls of a predetermined type within windows of a predetermined type via an interface for controlling the windows. The programs utilize the interface to host one or more controls within one or more windows. Thus, with respect to versions of the MICROSOFT WINDOWS operating system, a program may utilize the WIN32 API (i.e., interface) to host ACTIVEX-type controls within windows hosted by the program, also via the WIN32 API.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07093267",
	"publication_date": "2006-08-15",
	"application_number": "10198861",
	"application_date": "2002-07-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Importation of automatically generated content",
	"summary": "",
	"abstract": "The present invention is directed to a system for automatically recording information indicative of actions of an author in completing steps in an overall task performed on a user interface. Recording systems are used to record the steps taken to perform the task on different computers having different configurations. The recorded steps are then imported into an authoring component where the recorded steps are arranged into a desired content.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07036079",
	"publication_date": "2006-04-25",
	"application_number": "10887543",
	"application_date": "2004-07-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Importing and exporting markup language data in a spreadsheet application document",
	"summary": "",
	"abstract": "Methods and systems are provided for importing and exporting markup language formatted data into a spreadsheet document. XML data is associated with a schema file defining data types and data type definitions for applying the XML data to the document. A map is prepared that relates any XML data applied to the document back to corresponding elements or attributes defined in the schema file. When the document is imported into a spreadsheet application grid, the map is parsed to find XPATHs which determine the location, data types and user data for each cell or list object in the document related to the schema file. The cells and lists are populated with the XML data and user data and rendered according to formatting dictated by the XML data applied to the document. The document may be exported such that the XML data is maintained for subsequent import and use.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07017112",
	"publication_date": "2006-03-21",
	"application_number": "10377145",
	"application_date": "2003-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Infrastructure for generating a downloadable, secure runtime binary image for a secondary processor",
	"summary": "",
	"abstract": "Preparing one or more secure media effect programs, generating a binary image of the programs and associated data, loading the binary image into memory of a secondary processor, and executing the programs of the binary image with the secondary processor, substantially independent from a primary processor. A binary image builder automatically maps one or more programs and data to secondary processor memory by changing encoded binary instructions of each program before execution by the secondary processor. The changes identify locations at which the programs and data will be stored in secondary processor memory, identify locations of parameters that can be updated in real time, and enable execution control to return to a secondary processor execution kernel. The secondary processor execution kernel polls flags in a main memory to determine whether to download new or updated state data and/or program code from main memory to the secondary processor memory.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07076774",
	"publication_date": "2006-07-11",
	"application_number": "10241786",
	"application_date": "2002-09-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integration of three dimensional scene hierarchy into two dimensional compositing system",
	"summary": "",
	"abstract": "A hierarchy of 2D visual objects and 3D scene objects are integrated for seamless processing to render 2D images including a 2D view of a 3D scene on a 2D computer display. The processing of the 3D model objects and 2D visual objects in the visual hierarchy is integrated so that the processing is readily handed off between 3D and 2D operations. Further the number of transitions between processing visual 2D objects and 3D model objects when creating a display image has no architectural limit. A data structure integrates computer program objects for creating 3D images and 2D images in a visual tree object hierarchy having visual 2D objects or 3D scene objects pointing to 3D model objects. The data structure comprises an object tree hierarchy, one or more visual 2D objects, and one or more 3D reference or scene objects pointing to 3D model objects. The visual 2D objects define operations drawing a 2D image. The 3D reference or scene objects define references pointing to objects with operations that together draw a two-dimensional view of a three-dimensional scene made up of one or more 3D models. The 3D reference or scene objects point to 3D model objects and a camera object. The camera object defines a two-dimensional view of the 3D scene. The 3D model objects draw the 3D models and define mesh information used in drawing contours of a model and material information used in drawing surface texture of a model. The material information for the surface texture of a model may be defined by a visual 2D object, a 3D reference or scene object or a tree hierarchy of visual 2D objects and/or 3D reference scene objects.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07145562",
	"publication_date": "2006-12-05",
	"application_number": "10838935",
	"application_date": "2004-05-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integration of voice and data channels",
	"summary": "",
	"abstract": "Integrated voice and data channel communications. Browsing and source computing devices establish a first data channel. The browser transmits its data address to the source. The source then correlates that data address to a browse session identifier that may be dialed using a telephone keypad. The source then transmits a calling mechanism along with the browse session identifier to the browser. Upon selection of the calling mechanism at the browser, a voice call is placed using the telephone number supplied with the calling mechanism. Once the voice channel is established, the appended browse session identifier is dialed. The source may use the browse session identifier to correlate the voice call to the browser's data address. The source then establishes another data channel with the browsing computing device. Then, the source may transmit update information to the browser that relates to a concurrent voice conversation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07106725",
	"publication_date": "2006-09-12",
	"application_number": "10138472",
	"application_date": "2002-05-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Intelligent caching data structure for immediate mode graphics",
	"summary": "",
	"abstract": "An intelligent caching data structure and mechanisms for storing visual information via objects and data representing graphics information. The data structure is generally associated with mechanisms that intelligently control how the visual information therein is populated and used. The cache data structure can be traversed for direct rendering, or traversed for pre-processing the visual information into an instruction stream for another entity. Much of the data typically has no external reference to it, thereby enabling more of the information stored in the data structure to be processed to conserve resources. A transaction/batching-like model for updating the data structure enables external modifications to the data structure without interrupting reading from the data structure, and such that changes received are atomically implemented. A method and mechanism are provided to call back to an application program in order to create or re-create portions of the data structure as needed, to conserve resources.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07064766",
	"publication_date": "2006-06-20",
	"application_number": "10185775",
	"application_date": "2002-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interactive playlist generation using annotations",
	"summary": "",
	"abstract": "A plurality of user-selected annotations are used to define a playlist of media segments corresponding to the annotations. The user-selected annotations and their corresponding media segments are then provided to the user in a seamless manner. A user interface allows the user to alter the playlist and the order of annotations in the playlist. The user interface identifies each annotation by a short subject line.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07111009",
	"publication_date": "2006-09-19",
	"application_number": "09396702",
	"application_date": "1999-09-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Key exchange mechanism for streaming protected media content",
	"summary": "",
	"abstract": "In accordance with a key exchange mechanism for streaming protected media content, key exchange components on both a client device and a server device communicate with one another to pass one or more keys from a removable storage medium (e.g., a DVD) on the server device to a media content player on the client device. The communications passed between the components allow keys used by the media content player to be transferred from the removable storage medium to the player so that the player can decode the content on the storage medium.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07155609",
	"publication_date": "2006-12-26",
	"application_number": "09882810",
	"application_date": "2001-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Local queue creation security",
	"summary": "",
	"abstract": "Local queue creation security is disclosed. In one embodiment, for a message transaction system being implemented in conjunction with an operating system provide user-level security only, local machine- or local-level security is provided for by a service running on a client. In one embodiment, a method includes sending a first request to create a local queue, by an application of a client from a function of the client to a server. If the server determines that the user under which the application is running has permission to create local queues, the local queue is created. Otherwise, a second request to create the local queue is sent from the function to a service having permission to create local queues. If the service determines that the second request originated locally, then the service calls the server to create the local queue.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07093022",
	"publication_date": "2006-08-15",
	"application_number": "11215482",
	"application_date": "2005-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Lock-free handle resolution",
	"summary": "",
	"abstract": "Lock-free resource handle resolution is provided by a handle management system that generates a hierarchy of handle mapping tables such that the number of mapping tables and the number of hierarchical levels can each increase dynamically. Resource handles are generated based on index values associated with pointers stored in the handle mapping tables. Handle resolution can be performed without having to lock the tables because changes to the hierarchical structure of handle mapping tables do not affect handle resolution processing for existing resource handles.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07031971",
	"publication_date": "2006-04-18",
	"application_number": "10394990",
	"application_date": "2003-03-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing packet transmissions between a device in a limited connectivity network and a device residing outside the limited connectivity network",
	"summary": "",
	"abstract": "The invention makes possible remote control of devices in a piconet by remote users communicating over the Internet and the like by providing a proxy-bridge device. The proxy-bridge device is a bridge for sending packets to and from between an external device and a device in the piconet. Moreover, the proxy-bridge device also serves as a proxy for the external device to devices in the piconet and as a proxy for devices in the piconet accessing an external device. The proxy-bridge wireless device's protocol stack allows communications with the piconet devices within the piconet. In addition, the protocol stack allows an application to communicate with a remote device e.g., via the Internet Protocol. Thus, the proxy-bridge device, using two protocols, enables remote users discover the presence of a service offered by a device in a piconet as a logical embedded device within the proxy-bridge device and vice-versa.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07088687",
	"publication_date": "2006-08-08",
	"application_number": "10977021",
	"application_date": "2004-10-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Manifest-based trusted agent management in a trusted operating system environment",
	"summary": "",
	"abstract": "Manifest-based trusted agent management in a trusted operating system environment includes receiving a request to execute a process is received and setting up a virtual memory space for the process. Additionally, a manifest corresponding to the process is accessed, and which of a plurality of binaries can be executed in the virtual memory space is limited based on indicators, of the binaries, that are included in the manifest.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07137004",
	"publication_date": "2006-11-14",
	"application_number": "09993370",
	"application_date": "2001-11-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Manifest-based trusted agent management in a trusted operating system environment",
	"summary": "",
	"abstract": "Manifest-based trusted agent management in a trusted operating system environment includes receiving a request to execute a process is received and setting up a virtual memory space for the process. Additionally, a manifest corresponding to the process is accessed, and which of a plurality of binaries can be executed in the virtual memory space is limited based on indicators, of the binaries, that are included in the manifest.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07107463",
	"publication_date": "2006-09-12",
	"application_number": "11206519",
	"application_date": "2005-08-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Markov model of availability for clustered systems",
	"summary": "",
	"abstract": "Availability of a clustered system is determined by identifying all possible states of a cluster, mapping the connections between the states are mapped and determining the probability of the cluster being in each of the states is determined. Availability of the cluster is the sum of the probabilities of being in those states in which the cluster is at least partially available. Parameters affecting the availability of the cluster include the rates at which a cluster transitions from state to state, including the reciprocal of Mean Time To Fail, Mean Time to Fail-Over, Mean Time To Fail-Back and Mean Time To Restore. Availability of statefull and stateless clusters may be determined. Availability of clusters including any number of nodes (e.g., a Internet service) can be determined. In one embodiment of the invention, a target availability is determined and parameters are varied to determine the most efficient approach to reach the target availability.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07024580",
	"publication_date": "2006-04-04",
	"application_number": "10295286",
	"application_date": "2002-11-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Markup language visual mapping",
	"summary": "",
	"abstract": "Methods and systems are provided for mapping markup language data and schema, such as eXtensible Markup Language (XML) data and XML schema, to selected fields (cells, columns, rows) of a spreadsheet application document. An XML schema file is associated with a spreadsheet application document by providing a mechanism of adding the schema definitions to the spreadsheet application document. Furthermore, XML schema constructs such as elements, attributes, and simple content are associated to regions in the spreadsheet application document by providing a tree view structure of a generalized instance of a given XML schema file. A user may drag and drop markup language nodes representing elements, attributes and simple data content, from the tree view structure of the generalized instance of the XML schema file onto a spreadsheet worksheet grid. Once a cell, column or row in worksheet grid accepts the dropped element or attribute, an association is made between the target location in the worksheet grid, and the definition, data type and rules associated with the dropped element or attribute by setting an XML path language (XPATH) marker to point the target location back to the selected element or attribute in the XML schema file. Having all or partially all desired markup language elements or attributes associated with desired target locations in the spreadsheet grid, a general mapping of marked-up locations in the spreadsheet grid and their associated elements and/or attributes in an associated XML schema file is created.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07096422",
	"publication_date": "2006-08-22",
	"application_number": "10377256",
	"application_date": "2003-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Media identifier registry",
	"summary": "",
	"abstract": "A media identifier registry for managing metadata records. The registry stores a unique logical identifier for each of the records as well as a base type corresponding to each of the logical identifiers. The base types are representative of the information contained in the respective metadata records for the corresponding logical identifiers. The registry further defines associations between the logical identifiers and base types. Improvements in identifying media content and related information according to the invention permit building a media data warehouse capable of aggregating data from many different sources, uniquely identify the same piece of content from different data providers, in different cultures, and in different physical forms to allow a consistent set of data to be stored and retrieved.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07136866",
	"publication_date": "2006-11-14",
	"application_number": "10219456",
	"application_date": "2002-08-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Message based inter-process for high volume data",
	"summary": "",
	"abstract": "An interprocess communications platform enables individual processes to request and exchange data in a shared memory space, mediated by a communications engine. Processes, such as applications or other software running under an operating system or in a network, register to blocks of a shared memory space via an administrative memory space which tracks pointers, handles and other indicators of memory areas populated by individual processes. When one process requests access to a variable, pointer or other data generated by another process, the request is mediated by the communications engine. The communications engine may locate the target data belonging to the other process in the shared memory space, via a lookup of relative addressing in a separate administrative memory space. The communications engine, memory management objects and other resources may then lock the portion of the shared memory space allocated to the target process to permit the requesting process to access the data. Data may therefore be exchange between given processes while maintaining data integrity, and also may be cached in the shared memory space or elsewhere by the communications engine to further increase efficiency. Available memory in the shared memory space may be managed using the so-called buddy system or other heap or other management techniques. No named pipes or similar mechanisms under an operating system need be invoked.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07124255",
	"publication_date": "2006-10-17",
	"application_number": "10608337",
	"application_date": "2003-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for adapting a class entity dictionary used with language models",
	"summary": "",
	"abstract": "A method and apparatus are provided for augmenting a language model with a class entity dictionary based on corrections made by a user. Under the method and apparatus, a user corrects an output that is based in part on the language model by replacing an output segment with a correct segment. The correct segment is added to a class of segments in the class entity dictionary and a probability of the correct segment given the class is estimated based on an n-gram probability associated with the output segment and an n-gram probability associated with the class. This estimated probability is then used to generate further outputs.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07124080",
	"publication_date": "2006-10-17",
	"application_number": "10008432",
	"application_date": "2001-11-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for creating templates",
	"summary": "",
	"abstract": "A template creator creates a template class that stores at least one template parameter. The template creator also specifies at least one additional object to be created when an instance of the template class is created. A template user initiates the creation of a new instance of the template class. If an error occurs during the creation of the new instance of the template class, the template user receives a report identifying the error.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07100167",
	"publication_date": "2006-08-29",
	"application_number": "10081442",
	"application_date": "2002-02-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for distribution-based language model adaptation",
	"summary": "",
	"abstract": "A method and apparatus are provided for adapting a language model to a task-specific domain. Under the method and apparatus, the relative frequency of n-grams in a small training set (i.e. task-specific training data set) and the relative frequency of n-grams in a large training set (i.e. out-of-domain training data set) are used to weight a distribution count of n-grams in the large training set. The weighted distributions are then used to form a modified language model by identifying probabilities for n-grams from the weighted distributions.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07043422",
	"publication_date": "2006-05-09",
	"application_number": "09945930",
	"application_date": "2001-09-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for dynamic grammars and focused semantic parsing",
	"summary": "",
	"abstract": "The present invention provides a dialogue system in which semantic ambiguity is reduced by selectively choosing which semantic structures are to be made available for parsing based on previous information obtained from the user or other context information. In one embodiment, the semantic grammar used by the parser is altered so that the grammar is focused based on information about the user or the dialogue state. In other embodiments, the semantic parsing is focused on certain parse structures by giving preference to structures that the dialogue system has marked as being expected.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06985852",
	"publication_date": "2006-01-10",
	"application_number": "09934313",
	"application_date": "2001-08-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for facilitating execution of applications accepting local path and URL specified file parameters",
	"summary": "",
	"abstract": "A compiler command is specified and a compiler application or other application is executed. A file name is passed to the application identifying data file input. Special net I/O functionality is included in the net I/O API. This functionality determines whether the file identifier is a URL. If it is not a URL, then standard C API's are used to open, read, and write the file specified. If the identifier is a URL, then Win32 API functions are used to access the Internet and to open, read, and write the file. Thus, the application executes successfully without a download of the remotely stored file input prior to execution.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07073165",
	"publication_date": "2006-07-04",
	"application_number": "09767768",
	"application_date": "2001-01-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for identifying programming object attributes",
	"summary": "",
	"abstract": "The present invention provides a method and computer-readable medium for searching for programming objects on a computer system. Under one aspect of the invention, optional search attributes are used to order a list of references to found programming objects. Under a second aspect of the invention, object attributes that are stored outside of a static attribute storage area are inspected during the search for programming objects. Under a third aspect of the invention, different sets of object data are allowed to reference the same programming object class, and different objects of a single programming object class may be initialized in different ways so that they exhibit different attributes.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07099886",
	"publication_date": "2006-08-29",
	"application_number": "09871550",
	"application_date": "2001-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for improved grammar checking using a stochastic parser",
	"summary": "",
	"abstract": "A method and grammar checking system are provided that generate a stochastic score, or a statistical goodness measure, for each of an input string of text and one or more alternative strings of text. An alternative generator generates the alternative strings of text, and a ranking parser produces parse trees and corresponding statistical goodness measures for each of the strings. The string of text having the highest goodness measure is selected for recommendation to a user.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07003444",
	"publication_date": "2006-02-21",
	"application_number": "09904232",
	"application_date": "2001-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing improved HMM POS tagger for multi-word entries and factoids",
	"summary": "",
	"abstract": "A method of calculating trigram path probabilities for an input string of text containing a multi-word-entry (MWE) or a factoid includes tokenizing the input string to create a plurality of parse leaf units (PLUs). A PosColumn is constructed for each word, MWE, factoid and character in the input string of text which has a unique first (Ft) and last (Lt) token pair. TrigramColumns are constructed which define corresponding TrigramNodes each representing a trigram for three PosColumns. Forward and backward trigram path probabilities are calculated for each separate TrigramNode. The sums of all trigram path probabilities through each PLU are then calculated as a function of the forward and backward trigram path probabilities. Systems and computer-readable medium configured to implement the methods are also provided.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06985851",
	"publication_date": "2006-01-10",
	"application_number": "09907315",
	"application_date": "2001-07-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing improved HMM POS tagger for multi-word entries and factoids",
	"summary": "",
	"abstract": "A method of calculating trigram path probabilities for an input string of text containing a multi-word-entry (MWE) or a factoid includes tokenizing the input string to create a plurality of parse leaf units (PLUs). A PosColumn is constructed for each word, MWE, factoid and character in the input string of text which has a unique first (Ft) and last (Lt) token pair. TrigramColumns are constructed which define corresponding TrigramNodes each representing a trigram for three PosColumns. Forward and backward trigram path probabilities are calculated for each separate TrigramNode. The sums of all trigram path probabilities through each PLU are then calculated as a function of the forward and backward trigram path probabilities. Systems and computer-readable medium configured to implement the methods are also provided.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07124074",
	"publication_date": "2006-10-17",
	"application_number": "11151953",
	"application_date": "2005-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing instrumentation data to an instrumentation data source from within a managed code environment",
	"summary": "",
	"abstract": "A method and apparatus for providing instrumentation data to an instrumentation data source from within a managed code environment is provided. A decoupled provider is provided that executes partially in managed code and partially in unmanaged code. The decoupled provider facilitates communication with an instrumentation data source. The decoupled provider also dynamically registers schema for managed code objects to be instrumented at run-time. The decoupled provider also receives and processes requests from the instrumentation data source to retrieve instance data for managed code objects, to write properties on managed code objects, and to execute methods on managed code objects.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06996809",
	"publication_date": "2006-02-07",
	"application_number": "09899959",
	"application_date": "2001-07-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for removing noise from feature vectors",
	"summary": "",
	"abstract": "A method and computer-readable medium are provided for identifying clean signal feature vectors from noisy signal feature vectors. The method is based on variational inference techniques. One aspect of the invention includes using an iterative approach to identify the clean signal feature vector. Another aspect of the invention includes using the variance of a set of noise feature vectors and/or channel distortion feature vectors when identifying the clean signal feature vectors. Further aspects of the invention use mixtures of distributions of noise feature vectors and/or channel distortion feature vectors when identifying the clean signal feature vectors. Additional aspects of the invention include using a variance for the noisy signal feature vector conditioned on fixed values of noise, channel transfer function, and clean speech, when identifying the clean signal feature vector.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06985858",
	"publication_date": "2006-01-10",
	"application_number": "09812524",
	"application_date": "2001-03-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for robust efficient parsing",
	"summary": "",
	"abstract": "The present invention provides a method for improving the efficiency of parsing text. Aspects of the invention include representing parse tokens as integers where a portion of the integer indicates the location in which a definition for the token can be found. In a further aspect, an integer representing a token points to an array of tokens that can be activated by the token. In another aspect, a list of pointers to partial parses is created before attempting to parse a next word in the text string. The list of pointers includes pointers to partial parses that are expecting particular semantic tokens. A fourth aspect of the invention utilizes a data structure to list the semantic tokens that have been fully parsed for each span in the input text segment. When a token is fully parsed, the list is accessed to determine if the new token should be discarded.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07024351",
	"publication_date": "2006-04-04",
	"application_number": "09934223",
	"application_date": "2001-08-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for speech synthesis without prosody modification",
	"summary": "",
	"abstract": "A speech synthesizer is provided that concatenates stored samples of speech units without modifying the prosody of the samples. The present invention is able to achieve a high level of naturalness in synthesized speech with a carefully designed training speech corpus by storing samples based on the prosodic and phonetic context in which they occur. In particular, some embodiments of the present invention limit the training text to those sentences that will produce the most frequent sets of prosodic contexts for each speech unit. Further embodiments of the present invention also provide a multi-tier selection mechanism for selecting a set of samples that will produce the most natural sounding speech.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07127396",
	"publication_date": "2006-10-24",
	"application_number": "11030208",
	"application_date": "2005-01-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus using spectral addition for speaker recognition",
	"summary": "",
	"abstract": "A method and apparatus for speaker recognition is provided that matches the noise in training data to noise in testing data using spectral addition. Under spectral addition, the mean and variance for a plurality of frequency components are adjusted in the training data and the test data so that each mean and variance is matched in a resulting matched training signal and matched test signal. The adjustments made to the training data and test data add to the mean and variance of the training data and test data instead of subtracting from the mean and variance.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06990446",
	"publication_date": "2006-01-24",
	"application_number": "09685534",
	"application_date": "2000-10-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus using spectral addition for speaker recognition",
	"summary": "",
	"abstract": "A method and apparatus for speaker recognition is provided that matches the noise in training data to noise in testing data using spectral addition. Under spectral addition, the mean and variance for a plurality of frequency components are adjusted in the training data and the test data so that each mean and variance is matched in a resulting matched training signal and matched test signal. The adjustments made to the training data and test data add to the mean and variance of the training data and test data instead of subtracting from the mean and variance.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07133826",
	"publication_date": "2006-11-07",
	"application_number": "11065573",
	"application_date": "2005-02-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and arrangements for generating debugging information following software failures",
	"summary": "",
	"abstract": "Methods and arrangements are provided that substantially reduce the requisite amount of data required to conduct postmortem analysis following a computer failure. The methods and arrangements can be advantageously configured to allow for rapid online user support for a variety of users, computing devices, operating systems, applications, and the like. One method includes determining when to generate a dump file, and generating a dump file by gathering thread, callstack and thread context information for the running thread, process identifying information associated with the running thread, and information identifying the reason for generating the dump file. The resulting dump file is then stored to a storage medium and accessed during subsequent analysis. The dump file can be a kernel minidump file that is associated with an operating system program failure, in which case the running thread is the single thread that was running when the failure occurred. The kernel minidump file would include the kernel callstack and the process identifying information that would identify the process that initiated the single thread. The method is further applicable to non-operating system programs, wherein a user minidump file is generated by also gathering callstack information for all running threads, thread context information for all running threads, and a listing of all loaded modules for the faulting non-operating system program.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07028056",
	"publication_date": "2006-04-11",
	"application_number": "09549814",
	"application_date": "2000-04-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for accessing web pages in the background",
	"summary": "",
	"abstract": "A method and system that allows the user to fetch a subsequent web page while maintaining the current web page as the active web page. The next web page is fetched u201cin the backgroundu201d and stored in cache memory without interrupting the user. Once the requested web page has been stored in cache, an indicator is added to the history list allowing the user access to the processed web page. In order to view the next web page, the user simply selects the appropriate icon on the user interface, such as the forward button which is akin to selecting the back or forward button to scroll through the history of web pages. Since the web page is in the cache, it is displayed relatively quickly and since the user selects when to display the page, there is no interruption.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07007237",
	"publication_date": "2006-02-28",
	"application_number": "09563371",
	"application_date": "2000-05-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for authoring a soundscape for a media application",
	"summary": "",
	"abstract": "A method and system are provided for allowing a sound designer to design and implement interactive soundscapes based on existing waveform audio files, MIDI files, or audio streams. This is accomplished by using a set of tools consisting of an authoring tool for creating specifications of interactive soundscapes visually without having to write complex code, and a graph builder object that recreates the authored soundscape and interacts with it in real-time according to its specification. To give non-programmers the ability to specify and test how a soundscape will interact with programmatic events and user input in an application, the following tools are also provided: an interface to construct a u201ccontrol panel;u201d a graphical u201ctrigger-condition-actionu201d specification that defines what actions to take when input from the control panel or application interface is received; a preview mode that enables the sound designer to interact with the soundscape in the same way that the application will; and the ability to save the soundscape as a file that can be edited or used at run-time to recreate the soundscape. Once the interface between the soundscape and the application has been agreed to, the tools allow the sound designer to work independently of the programmer of the media application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07039478",
	"publication_date": "2006-05-02",
	"application_number": "10870242",
	"application_date": "2004-06-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for client-side caching",
	"summary": "",
	"abstract": "An improved method and system for client-side caching that transparently caches suitable network files for offline use. A cache mechanism in a network redirector transparently intercepts requests to access server files, and if the requested file is locally cached, satisfies the request from the cache when possible. Otherwise the cache mechanism creates a local cache file and satisfies the request from the server, and also fills in a sparse cached file as reads for data in ranges that are missing in the cached file are requested and received from the server. A background process also fills in local files that are sparse, using the existing handle of already open server files, or opening, reading from and closing other server files. Security is also provided by maintaining security information received from the server for files that are in the cache, and using that security information to determine access to the file when offline.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07089284",
	"publication_date": "2006-08-08",
	"application_number": "10880056",
	"application_date": "2004-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for creating and employing an operating system having selected functionality",
	"summary": "",
	"abstract": "A system and method of creating and employing an operating system (OS) image having selected functionality. A user, such as an original equipment manufacturer (OEM) of personal computers (PCs) or an information technology professional, selects a set of OS components from a plurality of OS components available in an installation OS image. The selected set of OS components is installed as the OS image on a computer readable medium such as a CD-ROM. The OS image includes a script for interacting with the OS image to perform functions desired by a user, such as booting a destination computer and installing a reference OS image or recovering the destination computer from a failed installation of the reference OS image.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06993642",
	"publication_date": "2006-01-31",
	"application_number": "09912864",
	"application_date": "2001-07-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for displaying transient notifications",
	"summary": "",
	"abstract": "A notification component that is shared between all applications that provides notifications to users without interrupting the task that the user is working and allows users to manage the notifications from one location. The user can globally set preferences as to how the notifications should be rendered. These preferences include enabling or disabling notification classifications, which rendering type they want to use for each notification classification, and priority of notifications within each notification classification. The notification component allows the user to indicate what notifications the user want to sees and how the notifications are rendered. Rendering types include audio, visual, and pager styles. An application uses an application programming interface to send notification using schema based or text based notifications. The system parses the notification and provides the user the notification through notification classifications in accordance with the user preferences.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07155729",
	"publication_date": "2006-12-26",
	"application_number": "09705858",
	"application_date": "2000-11-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for efficiently transferring data objects within a graphics display system",
	"summary": "",
	"abstract": "An API is provided to automatically transition data objects or containers between memory types to enable the seamless switching of data. The switching of data containers from one location to another is performed automatically by the API. Thus, polygon or pixel data objects are automatically transitioned between memory types such that the switching is seamless. It appears to a developer as if the data chunks/containers last forever, whereas in reality, the API hides the fact that the data is being transitioned to optimize system performance. The API hides an optimal cache managing algorithm from the developer so that the developer need not be concerned with the optimal tradeoff of system resources, and so that efficient switching of data can take place u2018behind the scenesu2019, thereby simplifying the developer's task. Data containers are thus efficiently placed in storage to maximize data processing rates and storage space, whether a data container is newly created or switched from one location to another.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06992668",
	"publication_date": "2006-01-31",
	"application_number": "10973494",
	"application_date": "2004-10-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for frame alignment and unsupervised adaptation of acoustic models",
	"summary": "",
	"abstract": "An unsupervised adaptation method and apparatus are provided that reduce the storage and time requirements associated with adaptation. Under the invention, utterances are converted into feature vectors, which are decoded to produce a transcript and alignment unit boundaries for the utterance. Individual alignment units and the feature vectors associated with those alignment units are then provided to an alignment function, which aligns the feature vectors with the states of each alignment unit. Because the alignment is performed within alignment unit boundaries, fewer feature vectors are used and the time for alignment is reduced. After alignment, the feature vector dimensions aligned to a state are added to dimension sums that are kept for that state. After all the states in an utterance have had their sums updated, the speech signal and the alignment units are deleted. Once sufficient frames of data have been received to perform adaptive training, the acoustic model is adapted.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07016838",
	"publication_date": "2006-03-21",
	"application_number": "10987529",
	"application_date": "2004-11-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for generating test matrices for software programs",
	"summary": "",
	"abstract": "Methods and data structures are disclosed for a program module (e.g., API) test matrix generator system/process. The disclosed methods and data structures facilitate and carry out a streamlined, yet logically thorough test to verify the proper operation and/or expose errors within the program module under test. The method comprises breaking a set of input parameters to the program module into clusters of related parameters (i.e., parameters whose values affect each other's validity regarding the output of the program module). Thereafter, a set of groups, representing different usages of a set of clustered parameters, are identified. After identifying the groups, a set of test calls (or a test matrix) is rendered for the program module. A covering set of test calls for a particular cluster comprises a sum of all logically/operationally distinct input value combinations rendered for each group. Such distinct input value combinations are rendered according to parameter equivalence classes defined for each parameter of each one of the cluster's groups. An actual test call includes a representative set of parameter values for a particular selected combination of equivalence classes.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07032212",
	"publication_date": "2006-04-18",
	"application_number": "10139846",
	"application_date": "2002-05-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for improved security to control and facilitate access to data stored in a database",
	"summary": "",
	"abstract": "A project data service (u201cPDSu201d) shields the database from direct client access by requiring all data requests made by a client to go through the PDS, thereby reducing the risk of losing or corrupting data and limiting inconsistencies caused by third-party add-on applications accessing data in the database. In order to access data stored in a database, a client typically must send a request through the PDS, which can determine if the client has access to the requested data. Then PDS typically retrieves the data from the database and passes the data to the client.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07139758",
	"publication_date": "2006-11-21",
	"application_number": "10308713",
	"application_date": "2002-12-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for naming and binding objects",
	"summary": "",
	"abstract": "A method and system for referring to and binding to objects using a moniker object is provided. In a preferred embodiments moniker object contains information to identify linked source data and provides methods through which a program can bind to the linked source data. A binding method is provided that returns an instance of an interface through which the linked source data can be accessed. The moniker object can identify source data that is stored persistently or nonpersistently. In addition, moniker objects can be composed to form a composite moniker object. A composite moniker object is used to identify linked source data that is nested in other data. In a preferred embodiment, the moniker object provides other methods including a reducing method that returns a more efficient representation of the moniker object; equality and hash methods for comparing moniker objects; and inverse, common prefix, and relative-path-to methods for comparing and locating moniker objects from other moniker objects. Several implementations of a moniker object are provided including a file moniker, an item moniker, a generic composite moniker, a pointer moniker, and an anti moniker. Each implementation is a moniker class and has a class identifier that identifies code to manage the moniker class.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07150024",
	"publication_date": "2006-12-12",
	"application_number": "10283627",
	"application_date": "2002-10-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for obtaining computer shutdown information",
	"summary": "",
	"abstract": "A method and a system for obtaining shutdown information for a computer allows a user to indicate a reason or reasons for the shutdown. The states of the user mode processes that are running on the computer are saved for later analysis. The state information as well as the shutdown reason entered by the user is stored in a computer-readable memory, such as in the form of a log file. A user may report a shutdown reason by selecting a reason from a predefined reason list and/or by typing a reason in a comment area.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07028172",
	"publication_date": "2006-04-11",
	"application_number": "10040222",
	"application_date": "2001-10-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for passing messages between threads",
	"summary": "",
	"abstract": "A method and system for passing messages between threads is provided, in which a sending thread communicates with a receiving thread by passing a reference to the message to a message queue associated with the receiving thread. The reference may be passed without explicitly invoking the inter-process or inter-thread message passing services of the computer's operating system. The sending thread may also have a message queue associated with it, and the sending thread's queue may include a reference to the receiving thread's queue. The sending thread can use this reference to pass messages to the receiving thread's queue.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07058955",
	"publication_date": "2006-06-06",
	"application_number": "09731690",
	"application_date": "2000-12-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for providing data to a graphics chip in a graphics display system",
	"summary": "",
	"abstract": "An API is provided to feed multiple data objects, wherever originated or located at the time of operation, to a 3D graphics chip simultaneously or in parallel. Multiple containers may be fed to a 3D graphics chip memory at the same time. In the case where data is being transmitted to a graphics chip memory, wherein the data includes the same spatial position of pixel(s), but only the orientation or color is changing, the data may be loaded into two separate containers, with a header description understood by the graphics chip and implemented by the graphics API, whereby a single copy of the position data can be loaded into one container, and the changing color or orientation data may be loaded into a second container. Thus, when received by the graphics chip, the data is loaded correctly into register space and processed according to the header description.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07023431",
	"publication_date": "2006-04-04",
	"application_number": "09796899",
	"application_date": "2001-03-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for providing transparent mobility support",
	"summary": "",
	"abstract": "A system and method for providing transparent mobility support employs a mobile service in an API layer of an operating system to leverage the capability of a session establishment service that implements the Session Initiation Protocol or the like for locating a remote node for session setup and detecting address change of the remote node. When an application on a correspondent host (CH) wants to communicate with a second application on a mobile host (MH), the mobility service of the CH uses the session establishment service to locate the mobile host and set up a session with it, and then sets up a transport data channel for the session. When the MH changes its network address, the session establishment service of the CH finds out the new address through the operation of the session establishment protocol and reestablishes the session with the MH. The new address of the MH is then communicated to the CH's mobility service, which resets the data channel to connect to the new address, thereby allowing communication data from the first application to continue to flow to the MH.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07146418",
	"publication_date": "2006-12-05",
	"application_number": "09992451",
	"application_date": "2001-11-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for automatically implementing special forms in an e-mail system",
	"summary": "",
	"abstract": "In an electronic mail system environment, a system and method for automatically checking recipients' names, providing message flags, providing custom forms, and providing an autoresponse feature. Recipients' names are resolved in the background, while the user of the e-mail system is composing the message. The user easily resolves ambiguous names by using a context menu. The resolved ambiguous names are automatically used to create nicknames, which are used to resolve ambiguous names in the future. Message flags allow a sender or recipient to identify required follow-up action and a deadline. The recipient may use the message flags to quickly determine which messages require follow-up action. The e-mail system notifies a recipient when a due date is approaching or when a follow-up action is past due. A custom forms feature allows a user to create and share custom forms without requiring the form to be published or installed by other user. The custom form's attributes are transmitted to the recipient as an element of the e-mail message. An autoresponse feature allows a sender to create a message that includes voting buttons corresponding to the possible responses to a query. A recipient replies by selecting one of the voting buttons. The recipient's vote is automatically tallied in the sender's copy of the message, thus allowing the sender to view a vote tally, a list of the recipients, and their response.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07010616",
	"publication_date": "2006-03-07",
	"application_number": "10084589",
	"application_date": "2002-02-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of iterative noise estimation in a recursive framework",
	"summary": "",
	"abstract": "A method and apparatus estimate additive noise in a noisy signal using an iterative technique within a recursive framework. In particular, the noisy signal is divided into frames and the noise in each frame is determined based on the noise in another frame and the noise determined in a previous iteration for the current frame. In one particular embodiment, the noise found in a previous iteration for a frame is used to define an expansion point for a Taylor series approximation that is used to estimate the noise in the current frame. In one embodiment, noise estimation employs a recursive-Expectation-Maximization framework with a maximum likelihood (ML) criteria. In a further embodiment, noise estimation employs a recursive-Expectation-Maximization framework based on a MAP (maximum a posterior) criteria.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07139703",
	"publication_date": "2006-11-21",
	"application_number": "10237162",
	"application_date": "2002-09-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of noise reduction based on dynamic aspects of speech",
	"summary": "",
	"abstract": "A system and method are provided that reduce noise in pattern recognition signals. To do this, embodiments of the present invention utilize a prior model of dynamic aspects of clean speech together with one or both of a prior model of static aspects of clean speech, and an acoustic model that indicates the relationship between clean speech, noisy speech and noise. In one embodiment, components of a noise-reduced feature vector are produced by forming a weighted sum of predicted values from the prior model of dynamic aspects of clean speech, the prior model of static aspects of clean speech and the acoustic-environmental model.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07107210",
	"publication_date": "2006-09-12",
	"application_number": "10152143",
	"application_date": "2002-05-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of noise reduction using correction and scaling vectors with partitioning of the acoustic space in the domain of noisy speech",
	"summary": "",
	"abstract": "A method and apparatus are provided for reducing noise in a training signal and/or test signal. The noise reduction technique uses a stereo signal formed of two channel signals, each channel containing the same pattern signal. One of the channel signals is u201ccleanu201d and the other includes additive noise. Using feature vectors from these channel signals, a collection of noise correction and scaling vectors is determined. When a feature vector of a noisy pattern signal is later received, it is multiplied by the best scaling vector for that feature vector and the best correction vector is added to the product to produce a noise reduced feature vector. Under one embodiment, the best scaling and correction vectors are identified by choosing an optimal mixture component for the noisy feature vector. The optimal mixture component being selected based on a distribution of noisy channel feature vectors associated with each mixture component.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07003455",
	"publication_date": "2006-02-21",
	"application_number": "09688764",
	"application_date": "2000-10-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of pattern recognition using noise reduction uncertainty",
	"summary": "",
	"abstract": "A method and apparatus are provided for using the uncertainty of a noise-removal process during pattern recognition. In particular, noise is removed from a representation of a portion of a noisy signal to produce a representation of a cleaned signal. In the meantime, an uncertainty associated with the noise removal is computed and is used with the representation of the cleaned signal to modify a probability for a phonetic state in the recognition system. In particular embodiments, the uncertainty is used to modify a probability distribution, by increasing the variance in each Gaussian distribution by the amount equal to the estimated variance of the cleaned signal, which is used in decoding the phonetic state sequence in a pattern recognition task.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07103540",
	"publication_date": "2006-09-05",
	"application_number": "10152127",
	"application_date": "2002-05-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of speech recognition using time-dependent interpolation and hidden dynamic value classes",
	"summary": "",
	"abstract": "A method of speech recognition is provided that identifies a production-related dynamics value by performing a linear interpolation between a production-related dynamics value at a previous time and a production-related target using a time-dependent interpolation weight. The hidden production-related dynamics value is used to compute a predicted value that is compared to an observed value of acoustics to determine the likelihood of the observed acoustics given a sequence of hidden phonological units. In some embodiments, the production-related dynamics value at the previous time is selected from a set of continuous values. In addition, the likelihood of the observed acoustics given a sequence of hidden phonological units is combined with a score associated with a discrete class of production-related dynamic values at the previous time to determine a score for a current phonological state.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07050975",
	"publication_date": "2006-05-23",
	"application_number": "10267522",
	"application_date": "2002-10-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and arrangements for providing multiple concurrent desktops and workspaces in a shared computing environment",
	"summary": "",
	"abstract": "Methods and arrangements are provided for use in multiple user computing environments. These methods and arrangements can be configured to allow for a plurality of separate and concurrent desktops and workspaces within the shared computing environment. One method includes creating a separate desktop thread for each user that is authenticated during a logon process, creating a separate desktop associated with each desktop thread, and maintaining a list of desktop threads that are created. In this manner, several users can be logged on simultaneously. In certain implementations, the method further includes establishing a separate user environment associated with each desktop and launching a separate user shell associated with each desktop. The list of desktop threads allows for selective and/or automatic switching from a first desktop to a second desktop without terminating a desktop thread associated with the first desktop. The methods and arrangements are also applicable to remote process logon and switching.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07127719",
	"publication_date": "2006-10-24",
	"application_number": "10966571",
	"application_date": "2004-10-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for adaptive delivery of multimedia contents",
	"summary": "",
	"abstract": "Methods and systems for generic adaptive multimedia content delivery are described. In one embodiment, a novel framework features an abstract content model and an abstract adaptive delivery decision engine. The abstract content model recognizes important aspects of contents while hiding their physical details from other parts of the framework. The decision engine then makes content adaptation plans based on the abstracted model of the contents and needs little knowledge of any physical details of the actual contents. Thus, under the same framework, adaptive delivery of generic contents is possible.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07093001",
	"publication_date": "2006-08-15",
	"application_number": "09995499",
	"application_date": "2001-11-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for broadcast data services",
	"summary": "",
	"abstract": "The present invention provides for the collection and delivery of broadcast data. Broadcast data is captured by broadcast data sources from television broadcasts and the captured broadcast data is collected by a broadcast data source miniport. The miniport differentiates the broadcast data to separate the requested broadcast data and to separate the broadcast data that complies with a protocol from broadcast data that does not comply with a protocol. The nonrequested broadcast data is preferably discarded and the broadcast data that does not comply with a protocol is encapsulated with appropriate headers. The broadcast data is then transferred through the network or system to a common application interface such as Winsock through NDIS and a protocol such as UDP/IP. Alternatively, a RawData module is used that does not rely on sockets and is capable of communicating with the miniport. A presenter retrieves the broadcast data from either the RawData module or Winsock and prepares the broadcast data for use by an application. The application then accesses the presenter for the prepared broadcast data it requested. In another mode, an application may access unprocessed broadcast data from either Winsock or the RawData module.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07076794",
	"publication_date": "2006-07-11",
	"application_number": "11053515",
	"application_date": "2005-02-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for creating and communicating with computer processes",
	"summary": "",
	"abstract": "Disclosed are mechanisms for creating and communicating with computer processes. An application programming interface (API) presents services of the system to applications. The API is usable with all processes, local and remote, and is transparent with respect to the location of processes. A process table stores information about processes created using the system. The process table supports centralized process control and peer-to-peer process communication and synchronization. Each process is assigned a Universally Unique Identifier (UUID) that uniquely identifies the process no matter the computing device on which it runs. A parent UUID and a group UUID may be attached to the process and used for enforcing dependencies (e.g., for halting the process and all of its child processes) and for managing arbitrary, user-defined groups, respectively. A global event is associated with each process. When a process receives this event, it performs a controlled shutdown, cleans up, and reports status.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07089561",
	"publication_date": "2006-08-08",
	"application_number": "09872257",
	"application_date": "2001-06-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for preparing extensible markup language (XML) documents and for responding to XML requests",
	"summary": "",
	"abstract": "Methods and systems for generating and sending an XML document are described. In a specific implementation, methods and systems for responding to an XML client request utilize an XML response generator that includes one or more request method objects. There is one object for each particular type of client request that might be received. Each request method object knows and gathers the data that is needed to respond to its particular associated client request. An emitter object receives calls from the request method object and translates the data that it receives into response portions that are in proper XML syntactic form.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06993715",
	"publication_date": "2006-01-31",
	"application_number": "11192952",
	"application_date": "2005-07-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for preparing extensible markup language (XML) documents and for responding to XML requests",
	"summary": "",
	"abstract": "Methods and systems for generating and sending an XML document are described. In one embodiment, an XML response generator responds to a client request without having to first build and save a hierarchical tree structure in memory that represents the response.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06996770",
	"publication_date": "2006-02-07",
	"application_number": "09361782",
	"application_date": "1999-07-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for processing XML documents",
	"summary": "",
	"abstract": "An architecture for processing an Extensible Markup Language (XML) document converts schema elements in the XML document to data type definition (DTD) objects that can be used to validate data elements in the XML document. The architecture utilizes a node factory design in which an XML parser calls one or more node factory interfaces to construct an in-memory tree representation of an XML document. One of the node factory interfaces is a schema node factory, which is a thin layer that receives calls from the parser to build nodes in the tree representation and translates those calls to calls to a schema builder. The schema builder is a table driven interface that converts the schema elements in the XML document into DTD objects. The DTD objects are then used to validate the data elements as belonging to the schema. If valid, the data elements are used to construct the tree representation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07134072",
	"publication_date": "2006-11-07",
	"application_number": "09417990",
	"application_date": "1999-10-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for screening input strings intended for use by web servers",
	"summary": "",
	"abstract": "Methods and systems of screening input strings that are intended for use by a Web server are described. In the described embodiment, an attack pattern is determined that can be used to attack a Web server. A search pattern is defined that can be used to detect the attack pattern. The search pattern is defined in a flexible, extensible manner that permits variability among its constituent parts. An input string that is intended for use by a Web server is received and evaluated using the search pattern to ascertain whether the attack pattern is present. If an attack pattern is found that matches the search pattern, then a remedial action is implemented.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07051368",
	"publication_date": "2006-05-23",
	"application_number": "09437584",
	"application_date": "1999-11-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Middleware layer between speech related applications and engines",
	"summary": "",
	"abstract": "The present invention provides an application-independent and engine-independent middleware layer between applications and engines. The middleware provides speech-related services to both applications and engines, thereby making it far easier for application vendors and engine vendors to bring their technology to consumers.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07139709",
	"publication_date": "2006-11-21",
	"application_number": "09751836",
	"application_date": "2000-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multi-packet transport structure and method for sending network data over satellite network",
	"summary": "",
	"abstract": "A method for encoding network data, such as Internet Protocol (IP) data, into a format for transmission over a satellite system is described. The network data is configured in a packet having a data block and header information. The network data packet is encoded into a variable-length multi-packet transport (MPT) frame. The MPT frame comprises a data frame to hold data and header information. The IP packet in inserted its entirety into the data frame of the MPT frame. The variable-length MTP frame is then encoded into one or more fixed-length MTP packets. Each MPT packet has a data fragment block comprising a portion of the MTP frame and associated header information to designate what portion of the MTP frame is contained in the data fragment block. The MPT packets are sized to be embedded as a specific size payload of the satellite packet that is transmitted over a satellite network. Using this method, data received over a data network (i.e., Ethernet or Internet) in large network data packets are broken into smaller packets defined by the mult-packet transport. These smaller packets are then inserted as the data payload within standard fixed-size packets suitable for transmission across a particular distribution medium, such as satellite network. The network data remains independent of the underlying network and can be easily extracted at the receiver for use by computer applications.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07058043",
	"publication_date": "2006-06-06",
	"application_number": "11017958",
	"application_date": "2004-12-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multi-packet transport structure and method for sending network data over satellite network",
	"summary": "",
	"abstract": "A method for encoding network data, such as Internet Protocol (IP) data, into a format for transmission over a satellite system is described. The network data is configured in a packet having a data block and header information. The network data packet is encoded into a variable-length multi-packet transport (MPT) frame. The MPT frame comprises a data frame to hold data and header information. The IP packet in inserted its entirety into the data frame of the MPT frame. The variable-length MTP frame is then encoded into one or more fixed-length MTP packets. Each MPT packet has a data fragment block comprising a portion of the MTP frame and associated header information to designate what portion of the MTP frame is contained in the data fragment block. The MPT packets are sized to be embedded as a specific size payload of the satellite packet that is transmitted over a satellite network. Using this method, data received over a data network (i.e., Ethernet or Internet) in large network data packets are broken into smaller packets defined by the multi-packet transport. These smaller packets are then inserted as the data payload within standard fixed-size packets suitable for transmission across a particular distribution medium, such as satellite network. The network data remains independent of the underlying network and can be easily extracted at the receiver for use by computer applications.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06993008",
	"publication_date": "2006-01-31",
	"application_number": "09755877",
	"application_date": "2001-01-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Negotiated interconnection of visual modeling elements",
	"summary": "",
	"abstract": "Described is a method and system that enables open, non-proprietary and extensible visualization and modeling tools by providing multiple-way negotiations between model element end points (nodes) and a connecting model element (arc). Based on these negotiations, a user is guided to make appropriate interconnections between model elements. A protocol is provided for intelligent model elements (objects) to communicate their information to one another, e.g., an arc communicates its capabilities and requirements to a node, and vice-versa, whereby the model element objects themselves decide whether they can interconnect, and if so, how they need to interconnect. The objects themselves enforce semantics and rules. According to the protocol, either object can reject the interconnection (break off the negotiation) with the other object if it determines it is not compatible with the other object, or is otherwise unable to connect to it.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07103527",
	"publication_date": "2006-09-05",
	"application_number": "09742909",
	"application_date": "2000-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network independent profiling of applications for automatic partitioning and distribution in a distributed computing environment",
	"summary": "",
	"abstract": "An instrumentation system profiles an application using structural metadata description of the application. Units (such as COM objects) of the application have strongly-typed, binary-standard interfaces, and are profiled, for example, using an executable file and DLLs for the application. A structural metadata description of the application includes compiled, interface-level type information used to identify and measure interaction between units of the application. For example, the type information is produced by analyzing IDL information. Profiling results in an application profile that includes description of the static relationships and/or dynamic interactions between units of the application. The application profile is combined with a network profile that describes a distributed computing environment. Analysis of the result yields a distribution plan, which, for example, reduces costs associated with communication between the units. During execution, units of the application are distributed through the distributed computing environment according to the distribution plan.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06983463",
	"publication_date": "2006-01-03",
	"application_number": "09197080",
	"application_date": "1998-11-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Non-blocking buffered inter-machine data transfer with acknowledgement",
	"summary": "",
	"abstract": "A system, method and data structures for transmitting batched data over a network in asynchronous, non-blocking operations, with acknowledgements returned to the senders. Each machine includes a sender subsystem and a receiver subsystem. Transmission items corresponding to data to be sent are buffered until a send is triggered, at which time the transmission items are sorted according to their destinations and sent as a GUID-identified batch to each destination by a send thread. At each receiver, a receiving thread adds descriptions of the data to a receive list, which a transfer thread processes when triggered. The transfer thread sends the corresponding data to a recipient program, and sends GUID-identified acknowledgements corresponding to each GUID back to the originating senders. An acknowledge thread at each originating sender buffers the acknowledgements, and when triggered, a cleanup thread uses the GUID to identify which batched transmissions were received.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07103890",
	"publication_date": "2006-09-05",
	"application_number": "10396870",
	"application_date": "2003-03-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Non-delegable client requests to servers storing local information only",
	"summary": "",
	"abstract": "Non-delegable client requests to servers storing local information only are disclosed. In one embodiment, a request is sent from a client to a server of a list of servers. The server determines whether it is inappropriate to fulfill the request. If so, it sends an error message to the client that it is off-line. When the client receives the message that the server is off-line, it sends the request to another server on the list, which is continued until a server is found that is able to fulfill the request. Embodiments of the invention thus leverage existing client-known error messages to redirect client requests to other servers.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07152112",
	"publication_date": "2006-12-19",
	"application_number": "11257271",
	"application_date": "2005-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "On demand patching of applications via software implementation installer mechanism",
	"summary": "",
	"abstract": "A method and mechanism for automatically patching software implementations such as applications as they are installed from an external source. A patch program is run for a software implementation that is advertised as available, or is otherwise available, though not yet installed (or fully installed). The mechanism maintains the patch information for that software implementation. Whenever the software implementation is installed, the mechanism determines that the software implementation has the patch information maintained therefor. The mechanism automatically applies the patch as part of the on-demand installation process. The patch may change the files, the values of registry entries and/or the installation logic associated with the software implementation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07073172",
	"publication_date": "2006-07-04",
	"application_number": "10228770",
	"application_date": "2002-08-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Optimized fixed-point mathematical library and graphics functions for a software-implemented graphics rendering system and method using a normalized homogenous coordinate system",
	"summary": "",
	"abstract": "A software-implemented graphics rendering system and method designed and optimized for embedded devices (such as mobile computing devices) using fixed-point operations including a variable-length fixed point representation for numbers and a normalized homogenous coordinates system for vector operations. The graphics rendering system and method includes a fixed-point mathematics library and graphics functions that includes optimized basic functions such as addition, subtraction, multiplication, division, all vertex operations, matrix operations, transform functions and lighting functions, and graphics functions. The mathematical library and graphics functions are modified and optimized by using a variable-length fixed-point representation and a normalized homogenous coordinate system (NHCS) for vector operations.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07139005",
	"publication_date": "2006-11-21",
	"application_number": "10661055",
	"application_date": "2003-09-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Peer-to-peer record structure and query language for searching and discovery thereof",
	"summary": "",
	"abstract": "A simple record query language (SRQL) is a generic record meta-data query solution that can natively describe the information contained in a record and search each against it to find records whose meta-data matches a particular set of criteria. SRQL includes both a record data structure that includes searchable SRQL attributes that describe the record, and queries that are able to search the attributes. The attributes are an XML node that exists in the record header itself. There are two types of queries, to wit local to find records in the local data store, and distributed to find records that may be stored in a neighbor's data store. As such, SRQL finds particular applicability to peer-to-peer networks.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07139760",
	"publication_date": "2006-11-21",
	"application_number": "10351726",
	"application_date": "2003-01-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Performant and scalable merge strategy for text indexing",
	"summary": "",
	"abstract": "A full-text search index system and method is generated by creating instances of a database index from an in-memory inverted list of keywords associated with a text identifier and the occurrences of the keyword in the text. Instances of the index are placed in a priority queue. A merge scheduling process determines when a merge should be initiated, selects instances of the index to be merged and selects a type of merge to perform. Instances of an index are assigned a temporal indicator (timestamp). A set of instances is selected to be merged. The set of instances is validated and merged.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07016914",
	"publication_date": "2006-03-21",
	"application_number": "10164052",
	"application_date": "2002-06-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Performing operations on a set of objects in a database system",
	"summary": "",
	"abstract": "A method and system for updating data for a set of objects in a database is provided. A request identifies a set of objects using a property of the objects and an operation to be performed thereon. The object request is translated to a relational request such that a column in a table corresponding to the property can be operated upon by a relational data store mechanism.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07096216",
	"publication_date": "2006-08-22",
	"application_number": "10199977",
	"application_date": "2002-07-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Permutation nuances of the integration of processes and queries as processes at queues",
	"summary": "",
	"abstract": "A program that includes expressions written in a process-based language for representing protocol-based applications as processes is disclosed. A process kernel executes the expressions in the program. The process kernel parses an expression to obtain syntactical elements that represent a queue, a set of queue delimiters, a query, a sequence delimiter, and other actions. The process kernel further translates the expression as a process whose first action is submitting the query as another process to the queue and after which the process continues with other actions. The query includes an organization scheme formed from a customizable, tag-based language that contains data and describes data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07055142",
	"publication_date": "2006-05-30",
	"application_number": "10303445",
	"application_date": "2002-11-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Personal mobile computing device having antenna microphone and speech detection for improved speech recognition",
	"summary": "",
	"abstract": "A mobile computing device, adapted to be held in the palm of a user's hand, includes an antenna for transmission of information from the mobile computing device. A first microphone, adapted to convert audible speech from the user into speech signals, is positioned at a distal end of the antenna. The antenna is rotatable, while the mobile computing device is held by the user, into a position which directs the first microphone toward the mouth of the user. A speech sensor outputs a sensor signal indicative of whether the user is speaking.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07120477",
	"publication_date": "2006-10-10",
	"application_number": "10698324",
	"application_date": "2003-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Placing exception throwing instructions in compiled code",
	"summary": "",
	"abstract": "A compiler that completes compilation upon identifying unresolvable input during compilation instead of aborting compilation. This can be accomplished by inserting an exception-throwing instruction, and/or handlers in place of the unresolvable input in the compiled code output. If the section of the compiled code containing the inserted exception throwing instruction is later executed, an exception is thrown and/or handled. Compilation of code from a trusted source can be completed without inserting an exception throwing instruction when the code has only suspected but unverifiable problems.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06993751",
	"publication_date": "2006-01-31",
	"application_number": "09855239",
	"application_date": "2001-05-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Playback control methods and arrangements for a DVD player",
	"summary": "",
	"abstract": "In accordance with certain aspects of the present invention, enhancements have been developed to further extend the performance of a generic DVD navigator. The methods and arrangements herein provide a mechanism that allows a player application to precisely u2018bookmarku2019 locations during playback, and later resume playback at the selected bookmarked locations.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06990671",
	"publication_date": "2006-01-24",
	"application_number": "09721266",
	"application_date": "2000-11-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Prioritized merging for full-text index on relational store",
	"summary": "",
	"abstract": "A full-text search index system and method is generated by creating instances of a database index from an in-memory inverted list of keywords associated with a text identifier and the occurrences of the keyword in the text. Instances of the index are placed in a priority queue. A merge scheduling process determines when a merge should be initiated, selects instances of the index to be merged and selects a type of merge to perform.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07007015",
	"publication_date": "2006-02-28",
	"application_number": "10137023",
	"application_date": "2002-05-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Probability estimate for K-nearest neighbor",
	"summary": "",
	"abstract": "Systems and methods are disclosed that facilitate producing probabilistic outputs also referred to as posterior probabilities. The probabilistic outputs include an estimate of classification strength. The present invention intercepts non-probabilistic classifier output and applies a set of kernel models based on a softmax function to derive the desired probabilistic outputs. Such probabilistic outputs can be employed with handwriting recognition where the probability of a handwriting sample classification is combined with language models to make better classification decisions.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07016884",
	"publication_date": "2006-03-21",
	"application_number": "10183213",
	"application_date": "2002-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Profile-driven data layout optimization",
	"summary": "",
	"abstract": "Data layout optimization arranges data members within memory to enhance software performance. Profiling data is consulted to determine how to group data members for an object class into groups. One technique groups the data members based on how frequently the data members are referenced in memory. Another technique groups the data members based on their affinities for one another in time as determined by observing when references to the data members take place. A variety of options when collecting the profiling data and grouping the data members is supported. The data member grouping is recorded in metadata associated with a definition of the object class. At runtime, a class loader places the data members of an object in memory according to the metadata. Data members of different groups can be placed in separately-loadable units of memory in the memory system. Subsequently, when the data members are referenced in memory, more frequently referenced data members, including those that tend to be referenced at times close to each other, reside at neighboring locations in the memory system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07013459",
	"publication_date": "2006-03-14",
	"application_number": "10987408",
	"application_date": "2004-11-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Promotion and demotion techniques to facilitate file property management between object systems",
	"summary": "",
	"abstract": "The present invention relates to a system and methodology to facilitate interoperability and compatibility between disparate data systems. In one aspect, a file transformation system is provided having at least one file associated with one or more unstructured properties. A file property handler manipulates the unstructured properties in accordance with one or more structured properties associated with a structured object store environment. If an unstructured file is to be operated in the context of a structured object store environment, a promotion operation is performed to update unstructured properties in the file with structured properties suitable for operation in the structured object store environment. If a promoted item were to be manipulated in the structured object store environment, a demotion operation or reverse transformation is performed to update properties in the file.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07155444",
	"publication_date": "2006-12-26",
	"application_number": "10693090",
	"application_date": "2003-10-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Quality of service over paths having a wireless-link",
	"summary": "",
	"abstract": "The invention provides Quality of Service assurances in a manner expected in other media to communications over paths that include one or more wireless links. The invention combines a subnet bandwidth manager (u201cSBMu201d) at an access point (u201cAPu201d) to track allocations of wireless bandwidth. The invention further incorporates multiple priority levels for packet transmission in a two-prong stochastic scheme. The first prong reserves bandwidth at each of the intermediate nodes in a transmission path subject to a veto by any intermediate node. The second prong modulates the transmission probability of a packet based on the previous failed attempts at transmission and the priority level of the packet. The overall result of this hybrid scheme is to not shut out users with the lowest priority, e.g., u201cbest effortu201d priority, while assuring adequate bandwidth to higher priority applications.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07079508",
	"publication_date": "2006-07-18",
	"application_number": "09792765",
	"application_date": "2001-02-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Query optimizer system and method",
	"summary": "",
	"abstract": "An optimizer/normalizer is used to generate optimized intermediate language representation of an input query, such as an XML input query. A method of optimization of an input query in intermediate language form includes receiving the input query, examining the nodes in a left-depth first manner to identify code patterns and node types which are subjects for optimization, tagging the identified code patterns until the intermediate language representation of the input query has been examined in its entirety, searching from the top of the intermediate language representation for tagged code patterns, and adjusting the tagged code patterns with improved code patterns to form an optimal representation for an input query. The input to the optimizer/normalizer is assumed to be an input query transformed into an intermediate language representation containing code patterns and nodes, each node having a respective node type.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07146352",
	"publication_date": "2006-12-05",
	"application_number": "10601480",
	"application_date": "2003-06-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Recycling components after self-deactivation",
	"summary": "",
	"abstract": "A component-based framework includes system services and component integration interfaces that provide a run-time environment for component-based server application in which server application components have control over the duration of their state independent of client action. The framework provides functions that a server application component calls to indicate its work for a client is complete, and its state is to be destroyed. On the component's return from the client's method call, the framework destroys the component's state thus releasing any server computer resources held by the component. This allows the server application components to be programmed so as to minimize the duration that their state remains in memory consuming server computer resources, and which enhances scalability of the server application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07062770",
	"publication_date": "2006-06-13",
	"application_number": "11058937",
	"application_date": "2005-02-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Reflection space image based rendering",
	"summary": "",
	"abstract": "The present invention provides a method, system, and computer program product for reflection space image based rendering of an object at an interactive frame rate. A set of source radiance environment maps associated with a set of source viewing vectors are warped to create a destination radiance environment map associated with a destination viewing vector in a current frame. Blending and weighting operations can also be applied in creating the final destination radiance environment map. An object is then rendered with texture environment mapped from the destination radiance environment map.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07123259",
	"publication_date": "2006-10-17",
	"application_number": "10694470",
	"application_date": "2003-10-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Reporting engine for data warehouse",
	"summary": "",
	"abstract": "A reporting engine for generating customized reports from relational data stored in a database. Metadata associated with the data in the database describes the data according to one or more characteristics of the data. One or more of tables organizing the metadata is exposed as a dimension having at least one column of attributes. The reporting enging compares search criteria, specified by a request from a user, to the metadata attributes, and executes a predefined procedure for retrieving selected data from the database. The procedure constructs a query as a function of the comparison between the search criteria and the metadata attributes for implementing the query to optimize retrieval of the selected data from the database. Other aspects of the invention are directed to computer-readable media for use in connection with the reporting engine.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07143107",
	"publication_date": "2006-11-28",
	"application_number": "10606720",
	"application_date": "2003-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Result set formatting and processing",
	"summary": "",
	"abstract": "The select list for the query is thus constructed such that it produces a result set having a predefined structure. Columns representing identifier properties of an entity are added to the select list. If the entity is an inheritance entity or a collection, then entities from a least derived entity to all descendants are identified and columns representing their identifiers are added to the select list and columns representing non-inherited properties for those entities are added. If the entity is not an inheritance entity or a collection, then columns representing properties of the entity are added to the select list.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07010542",
	"publication_date": "2006-03-07",
	"application_number": "10199944",
	"application_date": "2002-07-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Reviewing cached user-group information in connection with issuing a digital rights management (DRM) license for content",
	"summary": "",
	"abstract": "A computer network has storage devices organized into X levels and storing element-group information. To determine whether an element is a member of any target groups, each target group is validated by searching the storage devices to find a target group item and, if found, placing the target group in a validated target bin (V). Also, the element is validated by searching the storage devices to find an element item, and if found, determining from the item all groups that the element is listed as being a member of and placing such member-of groups in a search bin (S). If (S) intersects (V), the element is a member of a target group. If not, all groups in (S) are moved to a queue (Q) corresponding to the storage device at level  and an iterative process searches for a membership path from the element to any target group.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06990502",
	"publication_date": "2006-01-24",
	"application_number": "10374324",
	"application_date": "2003-02-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Scalable computing system for managing annotations",
	"summary": "",
	"abstract": "A scalable computing system for managing annotations is capable of handling requests for annotations to millions of documents a day. The computing system consists of multiple tiers of servers. A tier I server indicates whether there are annotations associated with a content source. A tier II server indexes the annotations. A tier III server stores the body of the annotation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07051274",
	"publication_date": "2006-05-23",
	"application_number": "09339733",
	"application_date": "1999-06-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secondary processor execution kernel framework",
	"summary": "",
	"abstract": "Preparing one or more secure media effect programs, generating a binary image of the programs and associated data, loading the binary image into memory of a secondary processor, and executing the programs of the binary image with the secondary processor, substantially independent from a primary processor. A binary image builder automatically maps one or more programs and data to secondary processor memory by changing encoded binary instructions of each program before execution by the secondary processor. The changes identify locations at which the programs and data will be stored in secondary processor memory, identify locations of parameters that can be updated in real time, and enable execution control to return to a secondary processor execution kernel. The secondary processor execution kernel polls flags in a main memory to determine whether to download new or updated state data and/or program code from main memory to the secondary processor memory.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06996699",
	"publication_date": "2006-02-07",
	"application_number": "10241777",
	"application_date": "2002-09-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Server application components with control over state duration",
	"summary": "",
	"abstract": "A component-based framework includes system services and component integration interfaces that provide a run-time environment for component-based server application in which server application components have control over the duration of their state independent of client action. The framework provides functions that a server application component calls to indicate its work for a client is complete, and its state is to be destroyed. On the component's return from the client's method call, the framework destroys the component's state thus releasing any server computer resources held by the component. This allows the server application components to be programmed so as to minimize the duration that their state remains in memory consuming server computer resources, and which enhances scalability of the server application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07043733",
	"publication_date": "2006-05-09",
	"application_number": "10868138",
	"application_date": "2004-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Smart car radio",
	"summary": "",
	"abstract": "The present invention provides a large capacity, user defined audio content delivery system. The system delivers uninterrupted music and delivers information content (e.g., news by evaluating and encoding an input audio stream while outputting another stream. Undesirable audio content (e.g., advertisements and unwanted news) are not present in the output audio stream as only desired portions of information content are stored for playback on demand. The invention also includes a user interface that is simple enough to facilitate utilization of the audio system in an automobile and employs standard hardware available in typical computing and/or personal digital assistant equipment. Additionally, the audio system can be portable (e.g., as portable as a personal digital assistant) and can be updated in real time or off line via a personal computer.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06996390",
	"publication_date": "2006-02-07",
	"application_number": "10180249",
	"application_date": "2002-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software component execution management using context objects for tracking externally-defined intrinsic properties of executing software components within an execution environment",
	"summary": "",
	"abstract": "A run-time executive of an object management system for managing execution of software components in an object execution environment uses a component context object to store intrinsic context properties related to an associated component. The run-time executive maintains an implicit association of the component context object with the application component. For example, the context properties can include a client id, an activity id, and a transaction reference. The component context object also provides an interface accessible to the associated component, with member functions for use in transaction processing, in creating additional other application components inheriting component's context properties, and in access control based on abstract user classes (roles).",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07076784",
	"publication_date": "2006-07-11",
	"application_number": "09425102",
	"application_date": "1999-10-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Speech-related event notification system",
	"summary": "",
	"abstract": "The present invention is directed to a system and method of notifying a speech related application of events generated by a speech related engine. A middleware layer receives a notification selection from the application. The notification selection is indicative of a selected notification mechanism for notifying the application of the events. The middleware component receives an event indication from the engine. The event indication is indicative of an event generated by the engine. The event indication is transferred to the application according to the selected notification mechanism.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07089189",
	"publication_date": "2006-08-08",
	"application_number": "10991612",
	"application_date": "2004-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Stack allocation system and method",
	"summary": "",
	"abstract": "A stack allocation system and method is described. In one implementation, an attempt is made to allocate N bytes of data to a stack having a fixed depth. A probe size for the stack is determined. Verification is then made to ascertain whether the probe size and the N bytes of data exceed the fixed depth of the stack, prior to allocating the N bytes of data to the stack. In another implementation, the N bytes of data are allocated to a heap; if the probe size and the N bytes of data exceed the fixed depth of the stack.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07124251",
	"publication_date": "2006-10-17",
	"application_number": "10178291",
	"application_date": "2002-06-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Statistically driven sentence realizing method and apparatus",
	"summary": "",
	"abstract": "A method of, and system for, generating a sentence from a semantic representation maps the semantic representation to an unordered set of syntactic nodes. Simplified generation grammar rules and statistical goodness measure values from a corresponding analysis grammar are then used to create a tree structure to order the syntactic nodes. The sentence is then generated from the tree structure. The generation grammar is a simplified (context free) version of a corresponding full (context sensitive) analysis grammar. In the generation grammar, conditions on each rule are ignored except those directly related to the semantic representation. The statistical goodness measure values, which are calculated through an analysis training phase in which a corpus of example sentences is processed using the full analysis grammar, are used to guide the generation choice to prefer substructures most commonly found in a particular syntactic/semantic context during analysis.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07003445",
	"publication_date": "2006-02-21",
	"application_number": "09909530",
	"application_date": "2001-07-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Stream class driver for computer operating system",
	"summary": "",
	"abstract": "A stream class driver for use in a computer operating system functions together with a minidriver. The minidriver is associated with a particular design for an adapter, which is a hardware device that generates or receives streaming data. The stream class driver deals with common operating system tasks such as direct memory access, scatter/gather memory use and Plug n Play. The stream class driver is independent of the hardware design and can therefore function with any type of streaming device or external buses such as USB or IEEE 1394. the minidriver functionality is limited to only those functions required by the unique aspects of the hardware and for the minimum requirements of operation, thereby minimizing the complexity and burden of designing minidrivers for hardware devices.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07093266",
	"publication_date": "2006-08-15",
	"application_number": "10950911",
	"application_date": "2004-09-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Streaming information appliance with buffer read and write synchronization",
	"summary": "",
	"abstract": "An information appliance receives streaming information and includes a buffer, a writer module, a reader module and a synchronizer. The buffer has a plurality of storage locations, a logical head, a logical tail and a valid data area between the logical head and the logical tail. The logical head and the logical tail move sequentially through the plurality of storage locations in a first logical direction. The writer module has a write position at the logical head of the buffer. The writer module receives the streaming information and writes the streaming information to the buffer at the write position. The reader module is coupled to the buffer and has a first read position which is temporally movable with respect to the write position. The synchronizer is coupled to the writer module and the reader module and maintains the first read position within the valid data area.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07139868",
	"publication_date": "2006-11-21",
	"application_number": "11097966",
	"application_date": "2005-04-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Streaming information appliance with circular buffer for receiving and selectively reading blocks of streaming information",
	"summary": "",
	"abstract": "An information appliance for receiving streaming information includes a buffer, a writer module which receives blocks of streaming information and writes the blocks to the buffer, and a reader module which selectively reads the blocks from the buffer.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07089348",
	"publication_date": "2006-08-08",
	"application_number": "10827619",
	"application_date": "2004-04-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Synchronization of controlled device state using state table and eventing in data-driven remote device control model",
	"summary": "",
	"abstract": "Controlled devices according to a device control model maintain a state table representative of their operational state. Devices providing a user control point interface for the controlled device obtain the state table of the controlled device, and may also obtain presentation data defining a remoted user interface of the controlled device and device control protocol data defining commands and data messaging protocol to effect control of the controlled device. These user control devices also subscribe to notifications of state table changes, which are distributed from the controlled device according to an eventing model. Accordingly, upon any change to the controlled device's operational state, the eventing model synchronizes the device's state as represented in the state table across all user control devices.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07089307",
	"publication_date": "2006-08-08",
	"application_number": "10794515",
	"application_date": "2004-03-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Synchronization of plugins",
	"summary": "",
	"abstract": "A system and process for ensuring the smooth flow of electronic ink is described. Dynamic rendering is give priority over other event handlers. Priority may be the use of one or more queues to order when events occur and may be performing dynamic rendering prior to other steps.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07016055",
	"publication_date": "2006-03-21",
	"application_number": "10985912",
	"application_date": "2004-11-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Synthesizer multi-bus component",
	"summary": "",
	"abstract": "An audio generation system produces streams of audio wave data and routes the audio wave data to audio buffers via logic buses that correspond respectively to the audio buffers. A logic bus, or buses, are assigned to an audio wave data source. Additionally, a logic bus corresponds to an audio buffer. Thus, any streams of audio wave data generated by the audio wave data source are routed to the audio buffer corresponding to the logic bus. A logic bus can receive streams of audio wave data from multiple sources, and route the multiple audio wave data streams to an audio buffer. Additionally, an audio buffer can receive streams of audio wave data from multiple logic buses.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07089068",
	"publication_date": "2006-08-08",
	"application_number": "09802111",
	"application_date": "2001-03-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method adapted to facilitate dimensional transform",
	"summary": "",
	"abstract": "Systems and methods that facilitate dimensional transformations of data points are disclosed. In particular, the subject invention provides for a system and methodology that simplifies dimensional transformations while mitigating variations of a distance property between pairs of points. A set of n data points in d dimensional space is represented as an nu00d7d input matrix, where d also corresponds to the number of attributes per data point. A transformed matrix represents the n data points in a lower dimensionality k after being mapped. The transformed matrix is an nu00d7k matrix, where k is the number of attributes per data point and is less than d. The transformed matrix is obtained by multiplying the input matrix by a suitable projection matrix. The projection matrix is generated by randomly populating the entries of the matrix with binary or ternary values according to a probability distribution. Unlike previous methods, the projection matrix is formed without obtaining an independent sample from a Gaussian distribution for each entry in the projection matrix, without applying a linear algebraic technique to generate the projection matrix and without employing arbitrary floating point numbers. Processes and/or algorithms can utilize the reduced transformed matrix instead of the larger input matrix to facilitate computational efficiency and data compression.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07043514",
	"publication_date": "2006-05-09",
	"application_number": "10086309",
	"application_date": "2002-03-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method employing script-based device drivers",
	"summary": "",
	"abstract": "A computer system and method uses script-based device drivers for operating hardware devices. The script-based driver architecture comprises a scripting driver, a script engine, and a driver script for a given hardware device, such as a scanner. The driver script is generally a text file containing a sequence of programming instructions defining the operational behavior of the hardware device. The scripting driver exports a set of objects whose functions can be called by the driver script to communicate with and control the device. When a request to operate the hardware device is received by the scripting driver, the script engine interprets the programming instructions in the driver script corresponding to the request and invokes the functions of the scripting driver objects called by the programming instructions to carry out the requested device operation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07100170",
	"publication_date": "2006-08-29",
	"application_number": "11012366",
	"application_date": "2004-12-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for a snapshot query during database recovery",
	"summary": "",
	"abstract": "A method of performing a snapshot query in a database undergoing recovery allows access to the database during rollback or undo operations. The method includes allowing the query to detect whether a redo lock is present on a data item and if so, waiting until subsequent rollback operations release the lock. If another user has placed an exclusive lock on a data item of the database, the query may continue by reading a version of the data item form the version store. In an embodiment where a mirror database is used for recovery, the constant redo operations have an associated version store. Upon failover to the mirror database, queries may begin during the undo phase of recovery by allowing a query to read the version store of redo operations.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07146386",
	"publication_date": "2006-12-05",
	"application_number": "10812188",
	"application_date": "2004-03-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for a unified composition engine in a graphics processing system",
	"summary": "",
	"abstract": "The present invention is directed to a system and method for a unified composition engine that, in general, combines previously separate composition services. The unified composition engine provides a composition service used both in-process in conjunction with application programming interfaces (API's) and on the desktop as the desktop compositor.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07012606",
	"publication_date": "2006-03-14",
	"application_number": "10692288",
	"application_date": "2003-10-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for automatic detection of collocation mistakes in documents",
	"summary": "",
	"abstract": "A method and computer-readable medium are provided that construct a collocation mistake pattern database for use in writing in a first language by a person whose native language is a second language. The method includes obtaining a bilingual corpus having sentences in first and second languages and extracting second language word pairs from the second language sentences in the corpus. For each second language word pair extracted from the corpus, a corresponding first language word pair is extracted from the corresponding first language sentence in the corpus to determine a correct first language translation for the second language word pair. Also, for each second language word pair extracted from the corpus, a set of combinations of first language translation words corresponding to the second language word pair is created. Finally, for each second language word pair extracted from the corpus, the correct first language translation is removed from the set of combinations of first language translation words such that the set of combinations represent a set of collocation mistake first language word pairs corresponding to the second language word pair.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07031911",
	"publication_date": "2006-04-18",
	"application_number": "10185430",
	"application_date": "2002-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for building a target operating system from a source operating system",
	"summary": "",
	"abstract": "System and methods are described herein for determining which components of a source operating system are required to be included in a target operating system to support selected source operating system features in the target operating system. Data objects are constructed to represent each component and feature of the source operating system, each data object identifying Exports and References for the component or feature it represents. The dependency model identifies, for each component, other components that must be included in a target operating system having the component. A target operating system builder program receives input from a user as to the features the user desires to include in the target operating system. The dependency model is utilized to identify and select the components from the source operating system necessary to support the selected features. The selected components are then linked to create the target operating system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07140028",
	"publication_date": "2006-11-21",
	"application_number": "10970875",
	"application_date": "2004-10-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for composing, processing, and organizing electronic mail message items",
	"summary": "",
	"abstract": "In an electronic mail system environment, a system and method for automatically checking recipients' names, providing message flags, providing custom forms, and providing an autoresponse feature. Recipients' names are resolved in the background, while the user of the e-mail system is composing the message. The user easily resolves ambiguous names by using a context menu. The resolved ambiguous names are automatically used to create nicknames, which are used to resolve ambiguous names in the future. Message flags allow a sender or recipient to identify required follow-up action and a deadline. The recipient may use the message flags to quickly determine which messages require follow-up action. The e-mail system notifies a recipient when a due date is approaching or when a follow-up action is past due. A custom forms feature allows a user to create and share custom forms without requiring the form to be published or installed by other user. The custom form's attributes are transmitted to the recipient as an element of the e-mail message. An autoresponse feature allows a sender to create a message that includes voting buttons corresponding to the possible responses to a query. A recipient replies by selecting one of the voting buttons. The recipient's vote is automatically tallied in the sender's copy of the message, thus allowing the sender to view a vote tally, a list of the recipients, and their response.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06993563",
	"publication_date": "2006-01-31",
	"application_number": "10360181",
	"application_date": "2003-02-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for data rights management",
	"summary": "",
	"abstract": "A system and method for data rights management across multiple data rights management architectures is disclosed. The system and method solves the problems posed by multiple incompatible data rights management architectures. In particular, a data rights management clearing house is provided that generates permits, permit classes, and enables content packaging across multiple data rights management architectures. Consumers may acquire rights to content packaged with different data rights management architecture from the single data rights management clearing house. Additionally, the system and method enables content packagers to package content with multiple data rights management architectures. Finally, the data rights management clearing house provides consumers with a single location from which to manage data access rights and restore data access rights that have been lost.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07120932",
	"publication_date": "2006-10-10",
	"application_number": "11202292",
	"application_date": "2005-08-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for defining and using subclasses declaratively within markup",
	"summary": "",
	"abstract": "Described is a system, method, and data structure that enables an executable assembly associated with a subclass to be generated from a subclass definition within a markup document. In accordance with the invention, the subclass definition is written based on a schema. The schema may be XML-based. The schema includes a subclass tag for defining a name for the subclass. The name is associated with a type for an object that is instantiated when the executable assembly executes. The schema further includes one or more hints, such as for specifying a programming language to compile the subclass definition, for specifying a superclass from which the subclass derives, for specifying actions to perform when the object becomes instantiated, for creating an event definition and event handler for the subclass, and for specifying a property that becomes a member within the object when the object is instantiated.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07120618",
	"publication_date": "2006-10-10",
	"application_number": "10377313",
	"application_date": "2003-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for enhancing XML schemas",
	"summary": "",
	"abstract": "A system and method for enhancing XML schemas is presented. A schema enhancer inputs an input schema, a parameter file, and (optionally) a preamble file to generate an enhanced schema. The optional preamble file comprises definitions and syntax for elements and/or attributes to be added and/or to modify relationships in the input schema to create the enhanced schema. Instructions for modifying the input schema to generate the enhanced schema comprise the parameter file.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07089491",
	"publication_date": "2006-08-08",
	"application_number": "10138687",
	"application_date": "2002-05-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for extending application preferences classes",
	"summary": "",
	"abstract": "The present systems and methods disclose a system for personalizing computer functionality. End-users are provided with tools to easily write rich and complex preferences, for example, by using a plurality simple IF-THEN propositional logic. The preferences are then transformed into queries and executed efficiently on structured data. Preferences that are satisfied then execute actions such as providing notification or storing data in a particular folder. Furthermore, according to an aspect of the invention, data, logic, events, inter alia, are all schematized, thereby enabling sharing of data between application components and across applications.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07137099",
	"publication_date": "2006-11-14",
	"application_number": "10693717",
	"application_date": "2003-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for managing visual structure, timing, and animation in a graphics processing system",
	"summary": "",
	"abstract": "A visual tree structure as specified by a program is constructed and maintained by a visual system's user interface thread. As needed, the tree structure is traversed on the UI thread, with changes compiled into change queues. A secondary rendering thread that handles animation and graphical composition takes the content from the change queues, to construct and maintain a condensed visual tree. Static visual subtrees are collapsed, leaving a condensed tree with only animated attributes such as transforms as parent nodes, such that animation data is managed on the secondary thread, with references into the visual tree. When run, the rendering thread processes the change queues, applies changes to the condensed trees, and updates the structure of the animation list as necessary by resampling animated values at their new times. Content in the condensed visual tree is then rendered and composed. Animation and a composition communication protocol are also provided.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07088374",
	"publication_date": "2006-08-08",
	"application_number": "10402322",
	"application_date": "2003-03-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for manipulating offline software",
	"summary": "",
	"abstract": "A system and method for manipulation of offline software. A software driver executing on a computer accesses and modifies target software while the target software is in an offline state. The software driver allows installation and configuration of an operating system and/or associated application programs to the target software when an operating system associated with the target software is not executing.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07062764",
	"publication_date": "2006-06-13",
	"application_number": "10173216",
	"application_date": "2002-06-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for protecting data streams in hardware components",
	"summary": "",
	"abstract": "A scrambling architecture protects data streams in the operating system and hardware components of a computer by scrambling the otherwise raw data prior to the data being handled by the operating system. The architecture has a scrambler implemented at either the client or the server that adds noise to the content. More specifically, the scrambler produces periodic sets of tone patterns having varying amplitudes based on a first key. The scrambler also generates a random signal based on the first key and a second key. The tone patterns and random signal are added to the content to scramble the content. The scrambled content is then passed to the filter graph (or other processing system) where the content is processed while scrambled. Any attacker attempting to siphon off the bits during processing will steal only noisy data, which is worthless for redistribution or copying purposes. After processing, the scrambled data is passed to a driver for output. The driver implements a descrambler to unscramble the content by subtracting out the random noise signal. The descrambler detects the tone patterns in the content and recovers the first key from the varying amplitudes of the tone patterns. The descrambler also receives the second key via a separate channel (e.g., a cryptographically secured path) and generates the same random signal using the recovered first key and the second key. The descrambler subtracts the tone patterns and the random signal from the scrambled content to restore the content.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07069590",
	"publication_date": "2006-06-27",
	"application_number": "09507478",
	"application_date": "2000-02-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for transferring data over a network",
	"summary": "",
	"abstract": "A system and method are provided for transferring a set of data over a network by monitoring the level of actual network bandwidth utilization. The method identifies a maximum monitored level of actual utilization and calculates a threshold level of utilization as a function of the maximum monitored level of utilization. If the actual level of utilization is less than the threshold level, at least a portion or segment of the data is received over the network. Each time a portion of the data is received, the monitoring step is repeated and a counter is incremented. The size of the discrete portions of the data is a function of the value of the counter and is increased when the value of the counter is greater than a predetermined value.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07139815",
	"publication_date": "2006-11-21",
	"application_number": "11005998",
	"application_date": "2004-12-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methods for caching in connection with authorization in a computer system",
	"summary": "",
	"abstract": "An authorization handle is supported for each access policy determination that is likely to be repeated. In particular, an authorization handle may be assigned to access check results associated with the same discretionary access control list and the same client context. This likelihood may be determined based upon pre-set criteria for the application or service, based on usage history and the like. Once an access policy determination is assigned an authorization handle, the static maximum allowed access is cached for that policy determination. From access check to access check, the set of permissions desired by the client may change, and dynamic factors that might affect the overall privilege grant may also change; however, generally there is still a set of policies that is unaffected by the changes and common across access requests. The cached static maximum allowed access data is thus used to provide efficient operations for the evaluation of common policy sets. In systems having access policy evaluations that are repeated, authorization policy evaluations are more efficient, computer resources are free for other tasks, and performance improvements are observed.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07096367",
	"publication_date": "2006-08-22",
	"application_number": "09849099",
	"application_date": "2001-05-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methods for providing histogram computation in a high precision rasterization data pipeline",
	"summary": "",
	"abstract": "A system and methods for implementing histogram computation, for example, into the rasterization pipeline of a 3-D graphics system, are provided. With the histogram computation mechanism, statistical histogram data may be generated for input data of any kind or retrieved from any source that may be specified in a 2-D array or specified in an immediate fashion to specialized data processing hardware. Depending on the nature of the input data, the data may be filtered before passing the data to data processing hardware for further processing. The data processing hardware may then apply an additional function to the input data set before calculation of the histogram data. Then, at some point, the data processing hardware may apply a function to the data to map the derived data to a real-valued function that can then be quantized to a histogram element in the range specified from zero to the number of histogram elements minus one. The corresponding element in this histogram is then incremented according to the data received as it passes through the graphics processor. Advantageously, relatively expensive host computing resources are conserved, and developers are insulated from the tedious details required of implementing histogram computation from the ground up each time it becomes desirable to compute histogram data in connection with an application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07010458",
	"publication_date": "2006-03-07",
	"application_number": "11054915",
	"application_date": "2005-02-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methods for providing physical location information and a location method used in discovering the physical location information to an application on a computing device",
	"summary": "",
	"abstract": "A service is described that discovers the physical locations of a computer's connections to logical networks and provides that information to applications. The service decides which method or methods for discovering physical location information are applicable to each network interface on the computer, applies those methods, and collects the results. The results are then converted into a common format. In addition to physical location, the information may include estimates of the quality and reliability of the information, such as error ranges and confidence intervals, and the methods used to gather the information. The information is made available to whatever system services and applications need it. Clients of the physical location information may be notified when the information provided to them changes or when new information becomes available. Clients may specify a threshold so that location changes of a magnitude below the threshold are not reported to them.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07000015",
	"publication_date": "2006-02-14",
	"application_number": "09840368",
	"application_date": "2001-04-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methods for sharing configuration information with multiple processes via shared memory",
	"summary": "",
	"abstract": "A system and methods for sharing configuration information with multiple services, or processes, via shared memory. The configuration information, typically, comprises runtime information utilized by processes during operation, including without limitation, information describing data communication connections between the local computer and other computing resources (i.e., port and wire information), and information defining numeric values or character string values (i.e., genre and record information). The system architecture includes a plurality of APIs which: reside at the local computer; populate, manage, and control access to a shared memory containing the configuration information; and, are executable only by processes executing at the local computer, thereby limiting access to the shared memory. Access to the configuration information is further limited to only those processes identified as having appropriate permission. The methods enable the configuration information of the shared memory to be modified during local computer operation and without impeding access to the configuration information.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07139894",
	"publication_date": "2006-11-21",
	"application_number": "10661721",
	"application_date": "2003-09-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for performing context-sensitive decisions about ideal communication modalities considering information about channel reliability",
	"summary": "",
	"abstract": "A system and method for identifying ideal channels for communications based on an analysis of communication channel reliability, communicating party preferences, and communicating party contexts is provided. The system attempts to optimize the utility of a communication based on inferred or directly accessed channel reliability data, communicating party preferences and communicating party contexts. Such optimization can be achieved using reliabilities, preferences and policies concerning handling the attempted contact based on a deterministic specification or through inferring reliability, context, content and task under uncertainty by employing decision-theoretic inferences. The methods may consider channels currently available as well as channels available at later times. Thus, the service can include automated rescheduling of communications based on a consideration of forecasts of reliability and availability. The approach may include the use of forecasts about the time required for a communication and the likelihood that a connection will be dropped or will lose fidelity over this period of time. The methods may also include a consideration of metadata within a standard schema that is transmitted along with a communication attempt, the metadata representing information about attributes like the potential communication channels, the identity of the contactor, the task at hand, and the context of the communicating parties. The invocation of the communication service may be performed in a variety of ways, including single button invocations, and via a communication service that is more deeply integrated with other applications and functionalities.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07103806",
	"publication_date": "2006-09-05",
	"application_number": "10281547",
	"application_date": "2002-10-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for storing streaming information in a circular buffer by using padding block containing non-streaming information to fill a partition of the buffer",
	"summary": "",
	"abstract": "One aspect of the present invention relates to an information appliance for handling streaming information for storage in a circular buffer having a plurality of partitions defined by boundaries. The information appliance includes receiving streaming information from a source of streaming information and forming data blocks wherein each data block includes a payload field capable of holding a portion of the streaming information and an identification field indicative of the source of the streaming information. At least one data block is written to the circular buffer to partially fill a partition and at least one padding block is generated having a field indicative of non-streaming information and having a size being a function of remaining space in the partition. The padding block is written to the circular buffer adjacent a boundary of the partition.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07146458",
	"publication_date": "2006-12-05",
	"application_number": "11096791",
	"application_date": "2005-04-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method, and computer program product for general environment mapping",
	"summary": "",
	"abstract": "A reflection image and an environment map are loaded into memory. During rendering of an object, an environment texture sample is retrieved from the environment map based on a reflection vector stored in a pixel of the reflection image. The retrieved environment texture sample is then applied to the object. The object thus rendered is stored in a frame buffer.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06999080",
	"publication_date": "2006-02-14",
	"application_number": "09998380",
	"application_date": "2001-11-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for managing interactions from multiple speech-enabled applications",
	"summary": "",
	"abstract": "Systems and methods are described for speech systems that utilize an interaction manager to manage interactionsu2014also known as dialoguesu2014from one or more applications. The interactions are managed properly even if multiple applications use different grammars. The interaction manager maintains an interaction list. An application wishing to utilize the speech system submits one or more interactions to the interaction manager. Interactions are normally processed in the order in which they are received. An exception to this rule is an interaction that is configured by an application to be processed immediately, which causes the interaction manager to place the interaction at the front of the interaction list of interactions. If an application has designated an interaction to interrupt a currently processing interaction, then the newly submitted application will interrupt any interaction currently being processed and, therefore, it will be processed immediately.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07139713",
	"publication_date": "2006-11-21",
	"application_number": "10067519",
	"application_date": "2002-02-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for providing a fine to coarse look ahead in connection with parametrization metrics in a graphics system",
	"summary": "",
	"abstract": "Systems and methods are provided for providing a fine-to-coarse look ahead in connection with parametrization in a graphics system. The use of a variety of parametrization metrics may be supplemented and improved by the fine-to-coarse look ahead techniques of the invention. First, the metric of a parametrization is minimized using a coarse-to-fine hierarchical solver, and then accelerated with a fine-to-coarse propagation. The resulting parametrizations have increased texture resolution in surface regions with greater signal detail at all levels of detail in the progressive mesh sequence.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06982714",
	"publication_date": "2006-01-03",
	"application_number": "10137931",
	"application_date": "2002-05-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for providing forward mapping with visibility for and resolution of accumulated samples",
	"summary": "",
	"abstract": "Forward mapping is provided, which accumulates and resolves over all samples forward mapped to each pixel bin. During accumulation and resolution of each of the samples, since a point sample from a forefront object and a point sample from an occluded object may be received by the same bin, wherein only the former should be accumulated and resolved according to the accumulation and resolution process, a Z-range, or Z-interval, is assigned to each sample instead of the conventional Z-value. The Z-range is a function of the Z-value. Analysis of the overlapping of these Z-ranges then determines which samples are to be accumulated and resolved together according to the accumulation and resolution process, and which are not.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07120311",
	"publication_date": "2006-10-10",
	"application_number": "10186990",
	"application_date": "2002-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for providing signal-specialized parametrization",
	"summary": "",
	"abstract": "Systems and methods are provided for optimizing a parametrization scheme in accordance with information about the surface signal. A surface parametrization is created to store a given surface signal into a texture image. The signal-specialized metric of the invention minimizes signal approximation error, i.e., the difference between the original surface signal and its reconstruction from the sampled texture. A signal-stretch parametrization metric is derived based on a Taylor expansion of signal error. For fast evaluation, the metric of the invention is pre-integrated over the surface as a metric tensor. The resulting parametrizations have increased texture resolution in surface regions with greater signal detail. Compared to traditional geometric parametrizations, the number of texture samples can often be reduced by a significant factor for a desired signal accuracy.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07071936",
	"publication_date": "2006-07-04",
	"application_number": "10138289",
	"application_date": "2002-05-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for uniquely and persistently identifying networks",
	"summary": "",
	"abstract": "A service is disclosed that discovers information about the logical networks to which a computer is connected and provides that information to applications. The information is keyed to names constructed by the service. There is a mapping between the names and the logical networks. Applications may rely on the names when selecting a configuration to use with a given logical network. The network name may be correlated with other information, such as physical network interface(s) on the computer through which the logical network is accessible, application programming interfaces of the transport protocols supported by the logical network, and the connectivity type of the logical network. Applications are notified when network information provided to them changes or when new information becomes available.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07043540",
	"publication_date": "2006-05-09",
	"application_number": "11115802",
	"application_date": "2005-04-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for uniquely identifying a network by correlating the network's name with the application programming interface of transport protocol and the connectivity type of the network",
	"summary": "",
	"abstract": "A service is disclosed that discovers information about the logical networks to which a computer is connected and provides that information to applications. The information is keyed to names constructed by the service. There is a mapping between the names and the logical networks. Applications may rely on the names when selecting a configuration to use with a given logical network. The network name may be correlated with other information, such as physical network interface(s) on the computer through which the logical network is accessible, application programming interfaces of the transport protocols supported by the logical network, and the connectivity type of the logical network. Applications are notified when network information provided to them changes or when new information becomes available.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07007079",
	"publication_date": "2006-02-28",
	"application_number": "11114718",
	"application_date": "2005-04-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for uniquely identifying networks by correlating each network name with the application programming interfaces of transport protocols supported by the network",
	"summary": "",
	"abstract": "A service is disclosed that discovers information about the logical networks to which a computer is connected and provides that information  to applications. The information is keyed to names constructed by the service. There is a mapping between the names and the logical networks. Applications may rely on the names when selecting a configuration to use with a given logical network. The network name may be correlated with other information, such as physical network interface(s) on the computer through which the logical network is accessible, application programming interfaces of the transport protocols supported by the logical network, and the connectivity type of the logical network. Applications are notified when network information provided to them changes or when new information becomes available.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07000012",
	"publication_date": "2006-02-14",
	"application_number": "09840569",
	"application_date": "2001-04-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Tester of cryptographic service providers",
	"summary": "",
	"abstract": "An implementation of a technology, described herein, for ensuring reliability, stability, and adherence to a given set of security conformance standards for cryptographic program modules. An implementation of the present claimed invention is a debugging and testing tool for customized cryptographic service providers (u201cCSPsu201d). A CSP has a cryptographic type and functionality level within that type. The CSPs are tested based various test classifications. The crypto sub-system of the OS has a set of application program interface (u201cAPIu201d) that manage cryptographic procedures called u201cCryptoAPI.u201d For a CSP to be considered reliable, stable, and in compliance with a given set of security conformance standards, it must successfully operate with the CryptoAPI in a reliable and stable manner and it must react appropriately for the given security conformance standards. The CSPs are tested in order of increasing complexity/sophistication in functionality from simplest to most complex. This abstract itself is not intended to limit the scope of this patent. The scope of the present invention is pointed out in the appending claims.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07079648",
	"publication_date": "2006-07-18",
	"application_number": "09876697",
	"application_date": "2001-06-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Theme aware management using fusion",
	"summary": "",
	"abstract": "A system and method are described that use theming functions of a theme manager to render graphical components in a themed fashion. The theme manager uses a theme file that has theme properties for graphical components of all types. When an application is started a system is provided that determines whether the application supports theming. If the application supports theming a dynamic link controls library that supports theming is linked to the application. If the application does not support theming, the non-theming controls library is linked. If an application supports themes, application user controls and shell common controls are rendered with themes by using the functions of the theming controls library that interact with functions of the theme manager. Non-client window components are rendered using themes by intercepting render messages to windows and sending the messages to the theme manager. Non-client window components are also measured and rendered using a theme property file when appropriate in response to certain application program interface calls.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06992681",
	"publication_date": "2006-01-31",
	"application_number": "10868086",
	"application_date": "2004-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Tools and techniques for instrumenting interfaces of units of a software program",
	"summary": "",
	"abstract": "An automatic distributed partitioning system (ADPS) determines which unit exposes an interface. The ADPS detects a reference to an interface. For the interface, the ADPS assures that the unit that exposes the interface is identified. In some embodiments, a data structure such as a hash table associates interfaces with identified units. An interface wrapper for the interface stores the identity of the unit that exposes the interface, as well as information about the interface and a reference to instrumentation. When a client unit calls a member function of an interface, the interface wrapper intercepts the call and invokes the instrumentation. The instrumentation performs an operation such as profiling the application or classifying a unit. The ADPS detects when an interface is undocumented, and handles undocumented interfaces without invoking the full instrumentation capabilities of the ADPS.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07039919",
	"publication_date": "2006-05-02",
	"application_number": "09196836",
	"application_date": "1998-11-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Translation of object queries involving inheritence",
	"summary": "",
	"abstract": "Join expressions, expressed in terms of objects, are translated into a relational database join statement by generating a parse tree based on the join expression. The parse tree is traversed to build the relational database join statement.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07082433",
	"publication_date": "2006-07-25",
	"application_number": "10199500",
	"application_date": "2002-07-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Translation of object queries involving inheritence",
	"summary": "",
	"abstract": "Join expressions, expressed in terms of objects, are translated into a relational database join statement by generating a parse tree based on the join expression. The parse tree is traversed to build the relational database join statement.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07149733",
	"publication_date": "2006-12-12",
	"application_number": "10199943",
	"application_date": "2002-07-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transmission control protocol",
	"summary": "",
	"abstract": "A communication protocol service in support of TCP based communication is modified to improve the operational efficiency of a server for a particular type of client-server application. The service is modified to support connection pools and connection groups within the connection pools, to enable connections with clients to be grouped and share a common file descriptor. The service is provided with an API to allow an application server to create the connection pools, connection groups and connections. The API also include receive and send services adapted to support the connection pool and connection group architecture, and to allow explicit acknowledgement of received transmissions under control of the application server. Further, in various embodiments, the buffering architecture of the service, as well as acknowledgement of request packets by the service are also modified.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07143131",
	"publication_date": "2006-11-28",
	"application_number": "09948476",
	"application_date": "2001-09-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Universal naming scheme for peer to peer resources",
	"summary": "",
	"abstract": "Peer devices register with a resource locator service so that the peer devices can be uniquely identified in a networking environment. An addressing scheme addresses a peer resource in the networking environment based on the unique identifier of a peer device that is a master publisher of the resource. Based on the addressing scheme, the resource locator service can track the location of the master publisher of the resource as well as additional locations of peer devices that have cached the resource and made it available. In various embodiments, the resource locator service can service requests for peer resources by providing a list of locations where the resource is expected to be available or, in the case of non-compatible requester, provide access to the resource itself.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07072982",
	"publication_date": "2006-07-04",
	"application_number": "09952808",
	"application_date": "2001-09-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Updating trusted root certificates on a client computer",
	"summary": "",
	"abstract": "An update process is used to update root certificates in a root certificate store of a client computer, maintaining the integrity of the existing root certificates as well as any new root certificates. In accordance with certain aspects, the integrity of a certificate trust list identifying one or more root certificates is verified. The root certificate store of the client computer is modified in accordance with the certificate trust list if the integrity of the certificate trust list is verified.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07143165",
	"publication_date": "2006-11-28",
	"application_number": "10967608",
	"application_date": "2004-10-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Using constrained optimization in curve editing",
	"summary": "",
	"abstract": "A curve may be reshaped by determining new locations for its control points that minimize some measure of the change in the curve (typically, the u201cenergyu201d of the change), while meeting the specified editing constraints. For example, a designer or other user may indicate an editing constraint by selecting a point anywhere on a curve and moving it to a new location. In response, the unconstrained control points may be moved automatically and simultaneously to optimal new locations. The resulting change in the curve may be aesthetically pleasing and satisfy the editing constraints. This curve editing technique may allow designers to be more productive by providing predictable and intuitive results while enabling curves to be directly manipulated.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07057616",
	"publication_date": "2006-06-06",
	"application_number": "10831264",
	"application_date": "2004-04-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Virtual method protection",
	"summary": "",
	"abstract": "Performing validation of a derived virtual method includes receiving program code where the derived virtual method is derived from a virtual method of the program language used to generate the program code, compiling the program code to an intermediate language expression, generating metadata descriptive of the compiled program code, validating the use of the derived virtual method by accessing the metadata, and permitting the use of the derived virtual method if the metadata grants override permissions concerning the virtual method of the programming language. The metadata indicating access and override permissions may be generated while compiling the program code in the common language infrastructure. Alternately, the flag may use pre-existing values indicative of the access and override permissions concerning the virtual method of the programming language.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07155703",
	"publication_date": "2006-12-26",
	"application_number": "10622413",
	"application_date": "2003-07-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Visual and scene graph interfaces",
	"summary": "",
	"abstract": "A method and system implemented in an application programming interface (API) and an object model allows program code developers to interface in a consistent manner with a scene graph data structure to output graphics. Via the interfaces, program code writes drawing primitives such as geometry data, image data, animation data and other data to visuals that represent a drawing surface, including validation visual objects, drawing visual objects and surface visual objects. The code can also specify transform, clipping and opacity properties on visuals, and add child visuals to other visuals to build up a hierarchical scene graph. A visual manager traverses the scene graph to provide rich graphics data to lower-level graphics components.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07126606",
	"publication_date": "2006-10-24",
	"application_number": "10402268",
	"application_date": "2003-03-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "VPN enrollment protocol gateway",
	"summary": "",
	"abstract": "A virtual private network (VPN) enrollment protocol gateway is described herein. The protocol gateway is implemented as a registration authority that operates as an intermediary between routers and a certificate authority, allowing routers operating in accordance with one protocol to obtain and maintain certificates for a VPN from a certificate authority operating in accordance with another protocol. In accordance with one aspect, the gateway protocol supports various requests from the router, including router enrollment requests, get certificate revocation list request, get certificate requests, get certificate authority certificate requests, and password requests.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07069441",
	"publication_date": "2006-06-27",
	"application_number": "10946280",
	"application_date": "2004-09-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "VPN enrollment protocol gateway",
	"summary": "",
	"abstract": "A virtual private network (VPN) enrollment protocol gateway is described herein. The protocol gateway is implemented as a registration authority that operates as an intermediary between routers and a certificate authority, allowing routers operating in accordance with one protocol to obtain and maintain certificates for a VPN from a certificate authority operating in accordance with another protocol. In accordance with one aspect, the gateway protocol supports various requests from the router, including router enrollment requests, get certificate revocation list request, get certificate requests, get certificate authority certificate requests, and password requests.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07100046",
	"publication_date": "2006-08-29",
	"application_number": "10801333",
	"application_date": "2004-03-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Workflow services architecture",
	"summary": "",
	"abstract": "An automated workflow services system can accommodate a wide variety of workflow scenarios. A composition service, a constraint service, and a tracking service can be provided to client programs. The composition service can support client-directed instantiation of actions for activity flows. Activity flows can be based on an activity model, constructed on an ad hoc basis, or a combination thereof. Actions can be added to an activity flow at execution time of the activity flow. The tracking service can track messages to and from the actions.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07062537",
	"publication_date": "2006-06-13",
	"application_number": "10742696",
	"application_date": "2003-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Worldwide television tuning system with country code based tuning",
	"summary": "",
	"abstract": "A worldwide television tuning system is configurable to the television standards and channel frequencies of multiple different countries based on a country's ITU long-distance country code. The tuning system maintains a country code table listing a plurality of countries according to their ITU codes. The tuning system also maintains multiple channel-to-frequency mapping tables that correlate channel numbers to corresponding frequencies for associated countries in the country table. The country table indexes the channel-to-frequency mapping tables. During configuration, a user or application selects a particular country by passing in the ITU code. The tuning system uses the ITU code to locate an entry for that country in the country code table. The table entry contains an index to an associated channel-to-frequency mapping table for the selected country. The tuning system loads and saves the channel-to-frequency mapping table for subsequent use. The channel-to-frequency table also identifies the appropriate television standard for the selected country. During tuning, the user or application enters a particular channel number. The tuning system uses the channel number to lookup a corresponding television frequency in the channel-to-frequency table. The tuning system then tunes to the television frequency. The tuning system stores a set of tuning frequencies for corresponding channels within a particular locale. If the tuning system is transported to another locale and then back to the original locale, the tuning frequencies may be retrieved from memory to restore operation within the original locale, rather than having to reconfigure the system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07042526",
	"publication_date": "2006-05-09",
	"application_number": "09057786",
	"application_date": "1998-04-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "XML storage solution and data interchange file format structure",
	"summary": "",
	"abstract": "A relational database management system having an XML storage implementation to reduce overhead associated with consuming data from multiple data providers, where each having proprietary database schemas. The XML storage solution allows data from any arbitrary relational database schema to be loaded, rearranged and retrieved. The system is adapted to receive and managing data from external content providers by exposing a predetermined provider content file formats. These formats use XPath as a schema reference, as a definition of legal combinations, and as a pattern to match other XPaths.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "06996571",
	"publication_date": "2006-02-07",
	"application_number": "10186029",
	"application_date": "2002-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "XML-based language description for controlled devices",
	"summary": "",
	"abstract": "A device control model provides an integrated set of addressing, naming, discovery and description processes that enables automatic, dynamic and ad-hoc self-setup by devices to interoperate with other devices on a network. This permits a computing device when introduced into a network to automatically configure so as to connect and interact with other computing devices available on the network, without a user installation experience and without downloading driver software or persisting a configuration setup for connecting and interacting with such other computing devices. Upon completing interaction with such other devices, the computing device automatically releases the setup for such other devices so as to avoid persistent device configurations that might create a configuration maintenance and management burden.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07130895",
	"publication_date": "2006-10-31",
	"application_number": "09811236",
	"application_date": "2001-03-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for denoising and deverberation using variational inference and strong speech models",
	"summary": "",
	"abstract": "A probability distribution for speech model parameters, such as auto-regression parameters, is used to identify a distribution of denoised values from a noisy signal. Under one embodiment, the probability distributions of the speech model parameters and the denoised values are adjusted to improve a variational inference so that the variational inference better approximates the joint probability of the speech model parameters and the denoised values given a noisy signal. In some embodiments, this improvement is performed during an expectation step in an expectation-maximization algorithm. The statistical model can also be used to identify an average spectrum for the clean signal and this average spectrum may be provided to a speech recognizer instead of the estimate of the clean signal.",
	"url": null,
	"owner": "Microsoft Corportion",
	"publication_number": "06990447",
	"publication_date": "2006-01-24",
	"application_number": "09999576",
	"application_date": "2001-11-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software modem architecture",
	"summary": "",
	"abstract": "A system is described comprising: a finite state machine having a plurality of states interconnected through a plurality of events, wherein certain states and events in said plurality are implemented in software and other states and events in said plurality are implemented in hardware; and a scheduler communicatively coupled to the finite state machine and being programmable with one or more parameters defining scheduled operations to be performed by the scheduler, wherein the finite state machine is configured to select one or more of said parameters to be used by said scheduler upon transition by said finite state machine from a first state to a second state.",
	"url": null,
	"owner": "Microtune (San Diego), Inc.",
	"publication_number": "07075914",
	"publication_date": "2006-07-11",
	"application_number": "09851734",
	"application_date": "2001-05-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for paying bills and other obligations including selective payor and payee controls",
	"summary": "",
	"abstract": "A system and method for paying bills without requiring interaction with the payors disclosed. The system includes a payor control interface, a communications interfacee, a bill generator, and a TCF message generator. The bill generator generates bill records from payor and payee information stored within the system for recurring bills. The bill generator may also generate bill records from the payor and payee information and from bill data messages received from payees. The generated bill records are used by the TCF message generator to generate the EFT messages for transferring funds electronically between payors and payees. Payors may alter the payment amount and date for a bill as well as reverse payment of a bill already paid. Payees are also able to alter recurring bill records or may present bill data so that bill records reflecting variable obligation amounts may be generated.",
	"url": null,
	"owner": "Midwest Payment Systems",
	"publication_number": "06996542",
	"publication_date": "2006-02-07",
	"application_number": "09332846",
	"application_date": "1999-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for executing computer programs on a limited-memory computing machine",
	"summary": "",
	"abstract": "A system for executing computer programs on a target platform having a limited amount of memory. Directives are suitably placed in the computer program source code at natural boundaries. The system uses the directives to extract structural information from the computer program and to produce a description of all program objects; to estimate typical object usage; and, to trigger transparent object paging to and from the limited platform memory during execution of the computer program. The system makes paging decisions prior to runtime by using relevant factors such as the typical usage of program objects and the size of each program object.",
	"url": null,
	"owner": "Mindspeed Technologies, Inc.",
	"publication_number": "07036118",
	"publication_date": "2006-04-25",
	"application_number": "10029516",
	"application_date": "2001-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for constructing an image having an extended depth of field",
	"summary": "",
	"abstract": "Systems and methods are provided for constructing a composite image having an extended depth of focus from a plurality of spatially congruent source images of lesser depth of focus. The systems and methods are relatively fast, preserve detail, provide robust results on a variety of unpredictable workpiece features and configurations, and tend to suppress or reduce out-of-focus artifacts. The composite image is constructed by edge and/or boundary analysis to identify well-focused edges or boundaries in the source images. Each particular edge or boundary in the composite image is determined based on the source image containing the best-focused instance of each particular edge or boundary. The composite image is constructed outside of the previously constructed portions by surface analysis to identify well-focused surfaces in the source images, Each particular surface portion in the composite image is determined based on the source image with the best-focused instance of each particular surface portion.",
	"url": null,
	"owner": "Mitutoyo Corporation",
	"publication_number": "07058233",
	"publication_date": "2006-06-06",
	"application_number": "09866817",
	"application_date": "2001-05-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for identifying a lens used in a vision system",
	"summary": "",
	"abstract": "Systems and methods for identifying an interchangeable lens in a vision system having a controllable light source, a camera, and the lens to be identified. Light provided by the light source is transferred to the camera by the lens to be identified. The amount of light transferred to the camera for a particular reference configuration of the vision system depends distinguishably on the characteristics of the lens to be identified. A camera output is measured for a desired light source setting and the desired light source setting and associated measured camera output are compared with stored lens identification calibration data. The stored lens identification calibration data is obtained by measuring the camera output for a plurality of lenses using a plurality of light source settings. In various exemplary embodiments, the light transferred from the light source to the camera is reflected and/or backscattered light from the lens to be identified.",
	"url": null,
	"owner": "Mitutoyo Corporation",
	"publication_number": "07110036",
	"publication_date": "2006-09-19",
	"application_number": "10284290",
	"application_date": "2002-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for rapidly automatically focusing a machine vision inspection system",
	"summary": "",
	"abstract": "Auto focus systems and methods for a machine vision metrology and inspection system provide high speed and high precision auto focusing, while using relatively low-cost and flexible hardware. One aspect of various embodiments of the invention is that the portion of an image frame that is output by a camera is minimized for auto focus images, based on a reduced readout pixel set determined in conjunction with a desired region of interest. The reduced readout pixel set allows a maximized image acquisition rate, which in turn allows faster motion between auto focus image acquisition positions to achieve a desired auto focus precision at a corresponding auto focus execution speed that is approximately optimized in relation to a particular region of interest. In various embodiments, strobe illumination is used to further improve auto focus speed and accuracy. A method is provided for adapting and programming the various associated auto focus control parameters.",
	"url": null,
	"owner": "Mitutoyo Corporation",
	"publication_number": "07030351",
	"publication_date": "2006-04-18",
	"application_number": "10719210",
	"application_date": "2003-11-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for two phase structured message to tagged message translation",
	"summary": "",
	"abstract": "An aspect of the present invention includes a method and device for translating a structured message into a context tagged, XML message. A two step translation is described, first including translation from structured message to structure tagged message, and then from structure tagged message to context tagged message. Standard tools may be used in the second step to apply validations or business logic. Particular aspects of the present invention are described in the claims, specification and drawings.",
	"url": null,
	"owner": "MKS Instruments, Inc.",
	"publication_number": "07072985",
	"publication_date": "2006-07-04",
	"application_number": "09847937",
	"application_date": "2001-05-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for managing the identity of mobile stations roaming between mobile radio networks",
	"summary": "",
	"abstract": "System for managing the identities of mobile stations roaming between mobile radio networks, operating within a private mobile radio network, constituted by one or more base transceiver stations (BTS; Node B) and by a reference base station controller (BSC; RNC), which realize a normal base station subsystem (BSS; RNS) within the public mobile radio network, characterised in that upon registration of the roaming mobile station (MS), authorized to access the private mobile radio network, the system (VIM) simulates, from the base station subsystem (BSS; RNS) towards the mobile switching center (MSC) of the competent network switching subsystem (NSS), the behaviour of the mobile station, whereto it has associated the identity profile selected from a group of identity profiles held by the operator of the visited network, and in wholly similar form, from the mobile switching center (MSC) towards the base station subsystem (BSS), the system (VIM) simulates the behaviour of the competent network switching subsystem (NSS) during the salient steps of the registration of the roaming mobile station, in such a way as to assure the correct execution of the procedure itself.",
	"url": null,
	"owner": "MMA-Marconi Mobile Access S.p.A.",
	"publication_number": "07031704",
	"publication_date": "2006-04-18",
	"application_number": "10504041",
	"application_date": "2003-01-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for breaking down computing tasks across a network of heterogeneous computer for parallel execution by utilizing autonomous mobile agents",
	"summary": "",
	"abstract": "A method and apparatus is provided for breaking down computing tasks within a larger application and distributing such tasks across a network of heterogeneous computers for simultaneous execution. The heterogeneous computers may be connected across a wide or local area network. The invention supports mobile agents that are self-migrating and can transport state information and stack trace information as they move from one host to another, continuing execution where the mobile agents may have left off. The invention includes a server component for providing an execution environment for the agents, in addition to sub-components which handle real-time collaboration between the mobile agents as well as facilities monitoring during execution. Additional components provide realistic thread migration for the mobile agents. Real-time stack trace information is stored as the computing tasks are executed, and if over-utilization of the computing host occurs, execution of the computing task can be halted and the computing task can be transferred to another computing hosts where execution can be seamlessly resumed using the stored, real-time state information and stack trace information.",
	"url": null,
	"owner": "Mobile Agent Technologies, Incorporated",
	"publication_number": "07082604",
	"publication_date": "2006-07-25",
	"application_number": "09838806",
	"application_date": "2001-04-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Technical support chain automation with guided self-help capability, escalation to live help, and active journaling",
	"summary": "",
	"abstract": "A method for automated technical support in a computer network having a client machine, and at least one server from which live help is available. The method begins initiates a guided self-help session in response to entry by a user of a problem area and description. During the self-help session, the user is provided with an option to escalate to live help. If the user exercises that option, the system automatically provides a support engineer at the server with a data stream summarizing the self-help session. During the live help, the support engineer may then repeat a portion of the user's self-help session, view information generated during that session, and/or execute certain actions with respect to the user's machine, all from the engineer's desktop. An active journal is maintained for each problem incident, and active journals may be used by other analysts to facilitate problem resolutions for new incidents.",
	"url": null,
	"owner": "Motive, Inc.",
	"publication_number": "06999990",
	"publication_date": "2006-02-14",
	"application_number": "09310795",
	"application_date": "1999-05-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Communication network with a collection gateway and method for providing surveillance services",
	"summary": "",
	"abstract": "A communication network () utilized for providing communications between a first party and a second party includes a surveillance server () within a core network () to provide communication surveillance capability. The core network () may be a packet data network, and the surveillance server () is operable responsive to trigger information to establish communications surveillance. Communication surveillance may be established by creating duplicate bearer packets of those data packets carrying the communicated data between the parties, creating duplicate control packets of those data packets carrying in-band or out-of-band call control information between the parties and within the packet data network, and/or various combinations thereof. The duplicate bearer packets and the duplicate control packets are routed to appropriate authorized law enforcement agencies for providing surveillance.",
	"url": null,
	"owner": "Motorola, Inc.",
	"publication_number": "07006508",
	"publication_date": "2006-02-28",
	"application_number": "09827224",
	"application_date": "2001-04-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interference estimation and scaling for efficient metric storage and interference immunity",
	"summary": "",
	"abstract": "A system, wireless device () and method receive a set of soft metrics () associated with a block of symbols during a predetermined time interval, use the set of soft metrics () to form an initial interference power estimate, form a moving-average estimate of interference power () corresponding to each predetermined time interval, and scale the set of soft metrics () according to the corresponding interference power estimate resulting in a set of scaled metrics (). Then they limit the dynamic range of the set of scaled metrics (), linearly quantize the limited metrics, and output the linearly quantized limited metrics () to a memory buffer. The size of the memory buffer containing the linearly quantized limited metrics () is smaller than the size of a memory buffer required to store the received soft metrics (). The linearly quantized limited metrics () are then used as input to a decoder.",
	"url": null,
	"owner": "Motorola, Inc.",
	"publication_number": "07050514",
	"publication_date": "2006-05-23",
	"application_number": "10640110",
	"application_date": "2003-08-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Component development with autonomous and compiled components to implement and consume services with components operate in edit and run mode",
	"summary": "",
	"abstract": "An architecture for developing a distributed information system comprises a service definition tool for generating service protocols as a service definition. Each service protocol includes a plurality of messages. The messages include incoming messages and outgoing messages. Each message carries a plurality of data fields. A component development tool generates a first and a second plurality of components that implement and consume services. Each component in the first plurality of components represents a physical entity in the distributed information system. Each component in the second plurality of components represents a logical entity in the distributed information system. A system development tool generates a plurality of component instances based on the first and the second plurality of components. An engine software program runs on each of a plurality of networked nodes. The engine software program provides a programmable run-time environment for hosting the plurality of component instances and supporting communication between component instances.",
	"url": null,
	"owner": "Nash Controlware, Inc.",
	"publication_number": "07150000",
	"publication_date": "2006-12-12",
	"application_number": "09638491",
	"application_date": "2000-08-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Debugging a program intended to execute on a reconfigurable device using a test feed-through configuration",
	"summary": "",
	"abstract": "A system and method for debugging a program which is intended to execute on a reconfigurable device. A computer system stores a program that specifies a function, and which is convertible into a hardware configuration program (HCP) and deployable onto a programmable hardware element comprised on the device. The HCP is generated based on the program, specifies a configuration for the programmable hardware element that implements the function, and further specifies usage of one or more fixed hardware resources by the programmable hardware element in performing the function. A test configuration is deployable on the programmable hardware element by a deployment program, where, after deployment, the programmable hardware element provides for communication between the fixed hardware resources and the program. The program is executable by a processor in the computer system, where during execution the program communicates with the one or more fixed hardware resources through the programmable hardware element.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07024660",
	"publication_date": "2006-04-04",
	"application_number": "10055691",
	"application_date": "2001-10-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Displaying operations in an application using a graphical programming representation",
	"summary": "",
	"abstract": "Operations in an application may be displayed using a graphical programming representation. A plurality of interconnected icons may be displayed, where each icon corresponds to an operation included in the application. The plurality of interconnected icons may visually indicate a function implemented by operations in the application. Each displayed icon may correspond to a node in a graphical programming development environment.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07139979",
	"publication_date": "2006-11-21",
	"application_number": "10166405",
	"application_date": "2002-06-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamically determining a route through one or more switch devices at program execution time",
	"summary": "",
	"abstract": "A system and method for dynamically determining a route through one or more switch devices at program execution time. A program operable to perform a programmatic request to dynamically determine a route may be created. For example, the request may specify a first endpoint (e.g., channel) of a first switch device and a second endpoint (e.g., channel) of a second switch device. In response to the request, the system may dynamically determine a route from the first endpoint to the second endpoint during execution of the program. Information indicating the determined route may be returned to the program.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07017138",
	"publication_date": "2006-03-21",
	"application_number": "10113873",
	"application_date": "2002-03-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Graphical program system having a single graphical user interface shared by a plurality of graphical programs",
	"summary": "",
	"abstract": "A system and method for executing multiple graphical programs, in which program output from each graphical program is displayed in a single graphical user interface. Program output from a first graphical program and program output from a second graphical program may be displayed in a single graphical user interface on a display. The single graphical user interface may also be used for specifying program input for the first and/or the second graphical program. Any number of graphical programs may share the single graphical user interface. In one embodiment different graphical program development environments may be used to create the separate graphical programs.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07043696",
	"publication_date": "2006-05-09",
	"application_number": "10047014",
	"application_date": "2002-01-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Graphically defining a route through one or more switch devices",
	"summary": "",
	"abstract": "One embodiment of the present invention comprises a system and method for graphically defining a route through one or more switch devices. the user may interact at a high level with a graphical user interface of a visual route editor to graphically create the route. For example, the visual route editor may display icons, diagrams, or other information that visually represents the route, e.g., by displaying information graphically representing the path that the route takes through the one or more switch devices.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07062719",
	"publication_date": "2006-06-13",
	"application_number": "10113911",
	"application_date": "2002-03-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Measurement system which uses a state model",
	"summary": "",
	"abstract": "System and method for using a task state model to perform measurement tasks. The system includes a computer system, one or more measurement resources, and a task state model. Attributes for performing the measurement task are specified. The task is transitioned from an Initial state to a Deployed state, thereby compiling the attributes to primitive settings and deploying the primitive settings into a run-time for the measurement task. The task is transitioned from the Deployed state to an Executing state, thereby acquiring the measurement resources to perform the task, configuring the measurement resources with the primitive settings to perform the task, and executing the run-time to perform the measurement task using the measurement resources. One or more methods may be invoked which result in explicit state transitions, and which may include one or more implicit state transitions which may be programmatically performed before, during, or after the measurement task.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07089141",
	"publication_date": "2006-08-08",
	"application_number": "10260793",
	"application_date": "2002-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Operator interface controls for creating a run-time operator interface application for a test executive sequence",
	"summary": "",
	"abstract": "A plurality of operator interface controls for use in a run-time operator interface application for executing one or more test executive sequences is described. Each operator interface control may have associated functionality for managing execution of a test executive sequence and/or functionality for displaying information regarding execution of a test executive sequence. One or more of the operator interface controls may be included in a run-time operator interface application, which may aid the user in easily creating the run-time operator interface application.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07143361",
	"publication_date": "2006-11-28",
	"application_number": "10320036",
	"application_date": "2002-12-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Reconfigurable measurement system utilizing a programmable hardware element and fixed hardware resources",
	"summary": "",
	"abstract": "A system and method for configuring a device to perform a function, where the device includes a programmable hardware element and one or more fixed hardware resources. A program is stored which represents the function. A hardware configuration program is generated based on the program, specifying a configuration for the programmable hardware element that implements the function, and usage of the fixed hardware resources by the programmable hardware element in performing the function. A deployment program deploys the hardware configuration program onto the programmable hardware element, where, after deployment, the device is operable to perform the function, where the programmable hardware element directly performs a first portion of the function, and the programmable hardware element invokes the fixed hardware resources to perform a second portion of the function. An optional measurement module couples to the device and performs signal conditioning and/or conversion logic on an acquired signal for the device.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07085670",
	"publication_date": "2006-08-01",
	"application_number": "10058150",
	"application_date": "2001-10-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method enabling execution stop and restart of a test executive sequence(s)",
	"summary": "",
	"abstract": "A system and method for enabling execution stop and re-start of a test executive sequence or hierarchy of test executive sequences. Execution progress of a test executive sequence or test executive sequence hierarchy may be periodically stored. This may comprise performing or taking u201csnapshotsu201d of the execution at various points during the execution. Performing a snapshot may comprise saving all data needed to restore and re-start the execution at the respective point. The criteria of when and where to perform the snapshots may be any of various criteria and may be specified in any of various ways.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07076692",
	"publication_date": "2006-07-11",
	"application_number": "09944546",
	"application_date": "2001-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for automatically configuring program data exchange",
	"summary": "",
	"abstract": "A system and method for enabling a program to subscribe to data and/or publish data, e.g., in order to receive and display data from a data source in a graphical user interface (GUI) element or in order to write data associated with a GUI element to a data target. In one embodiment, a developer of a program may specify a data source and/or data target during development of the program, e.g., via a URL. If a data source is specified, the method may operate to automatically determine a GUI element operable to display (or otherwise indicate) data received from the data source and may automatically include the GUI element in the program's graphical user interface (GUI) and automatically configure the GUI element to receive and display data from the specified data source during execution of the program. In the preferred embodiment, the developer is not required to specify any source code for the program in performing this configuration. Many programs require data to be exchanged with various types of data sources and targets, but this data exchange is often a difficult task for developers. Thus, various embodiments of the invention may greatly benefit users by enabling complicated exchange of data to be performed by simply specifying a data source and/or target to associate with a GUI element. Another embodiment of the invention enables the implementation of a data viewer program which, when executed, enables an end user to specify a data source, e.g., via a URL, and view data received from the data source, wherein the end user may specify any of various types of data sources, any of various types of data may be received from the data sources, and any of various types of GUI elements may be dynamically displayed to allow the end user to view the received data.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07134085",
	"publication_date": "2006-11-07",
	"application_number": "09737639",
	"application_date": "2000-12-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for automatically creating a prototype to perform a process",
	"summary": "",
	"abstract": "A system and method for enabling a prototyping environment application to automatically create a plurality of prototypes, wherein each of the plurality of prototypes is configured to perform a process to solve a particular problem. In response to receiving user input requesting the automatic creation of a prototype, the prototyping environment may display a list of items, wherein each item visually indicates a particular problem. In response to the user specifying an item, the prototyping environment is operable to create a prototype including a plurality of elements operable to interact in order to perform a process to solve the problem indicated by the specified item. The prototyping environment is preferably operable to receive and use solution information updates enabling the automatic creation of a new prototype, i.e., a prototype configured to perform a process to solve a new problem. For example, the vendor of the prototyping environment or third-party developers may periodically provide solution information updates which users can download or which the prototyping environment is operable to automatically retrieve. Users may also be able to request and receive solution information updates enabling the prototyping environment to automatically create a prototype to perform a process to solve a particular problem.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07146347",
	"publication_date": "2006-12-05",
	"application_number": "09631212",
	"application_date": "2000-08-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for configuring database result logging for a test executive sequence",
	"summary": "",
	"abstract": "A system and method for logging results for a test executive sequence to a database. The test executive software may be operable to receive user input to a graphical user interface (GUI) to specify desired database result logging criteria. In various embodiments, any of various result logging criteria may be specifiable. For example, the user input may specify a mapping of the results for the test executive sequence to the database tables. The user input may also specify criteria for limiting the amount of data logged to the database, e.g., by filtering the results that are logged in various ways. The test executive software may then log at least a portion of the execution results for the test executive sequence to a database, according to the specified result logging criteria.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07146572",
	"publication_date": "2006-12-05",
	"application_number": "09974267",
	"application_date": "2001-10-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for creating a graphical program based on a pre-defined program process",
	"summary": "",
	"abstract": "A system and method for creating a graphical program based on a pre-defined program process. Information indicating a plurality of program processes may be displayed. Each program process may have a corresponding graphical program template, wherein each graphical program template comprises a plurality of interconnected nodes for implementing the program process. The user may select the appropriate template, and the template may be programmatically included in the graphical program. In one embodiment, one or more of the nodes that were specified by the template and programmatically included in the graphical program may initially have no definite functionality or may have default functionality. A method for programmatically generating graphical source code for a node may be employed to specify desired functionality for such a node.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07058899",
	"publication_date": "2006-06-06",
	"application_number": "09886531",
	"application_date": "2001-06-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for enhancing the readability of a graphical program",
	"summary": "",
	"abstract": "A system and various methods for enhancing the readability of a graphical program. In one embodiment, user input specifying desired functionality for a node may be received, and input and/or output terminals for the node may be programmatically created and displayed, based on the user input received. The one or more input/output terminals that are displayed on the node may be a subset of the possible input/output terminals, i.e., a subset that facilitates configuration of the node to accomplish the desired functionality. In another embodiment, an alias may be specified for input/output terminals of a node. For each input terminal or output terminal for which an alias was specified, the aliases may be displayed in the graphical program.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07062716",
	"publication_date": "2006-06-13",
	"application_number": "09886238",
	"application_date": "2001-06-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for invoking execution of a sequence of operations that includes motion control, machine vision, and data acquisition (DAQ) functionality",
	"summary": "",
	"abstract": "A user may utilize a prototyping environment to create a sequence of motion control, machine vision, and/or data acquisition (DAQ) operations, e.g., without needing to write or construct code in any programming language. For example, the environment may provide a graphical user interface (GUI) enabling the user to develop/prototype the sequence at a high level, by selecting from and configuring a sequence of operations using the GUI. The prototyping environment may provide an application programming interface (API) which enables an external caller program to invoke execution of a particular sequence by the prototyping environment.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07076332",
	"publication_date": "2006-07-11",
	"application_number": "10051599",
	"application_date": "2002-01-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for performing a hardware-in-the-loop simulation using a plurality of graphical programs that share a single graphical user interface",
	"summary": "",
	"abstract": "A system and method for performing a hardware-in-the-loop simulation using a plurality of graphical programs that share a single graphical user interface. A first graphical program that models a physical system may be created. The first graphical program may be deployed on a first computer system for execution. A second graphical program that performs a measurement function may be created. A control unit may be coupled to the first computer system. The first graphical program may be executed on the first computer system to simulate operation of the physical system, wherein the control unit interacts with the first computer system. The second graphical program may be executed to measure characteristics of the operation of the control unit. A single graphical user interface comprising a first one or more graphical user interface elements for the first graphical program and a second one or more graphical user interface elements for the second graphical program may be displayed.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07076411",
	"publication_date": "2006-07-11",
	"application_number": "10046861",
	"application_date": "2002-01-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for performing rapid control prototyping using a plurality of graphical programs that share a single graphical user interface",
	"summary": "",
	"abstract": "A system and method for performing rapid control prototyping using a plurality of graphical programs that share a single graphical user interface. A first graphical program may be created that models a product being designed. The first graphical program may be deployed on a target device for execution. A second graphical program that performs a measurement function may be created. The target device may be coupled to a physical system. The first graphical program may be executed on the target device to simulate operation of the product. The second graphical program may be executed to measure characteristics of the operation of the physical system and/or characteristics of the operation of the product. A single graphical user interface comprising a first one or more graphical user interface elements for the first graphical program and a second one or more graphical user interface elements for the second graphical program may be displayed.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07076740",
	"publication_date": "2006-07-11",
	"application_number": "10046868",
	"application_date": "2002-01-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for programmatically creating graphical program code in a graphical program",
	"summary": "",
	"abstract": "A system and method for configuring a node in a graphical program by programmatically generating graphical source code associated with the node. The node may initially have no functionality or may have default functionality and may be able to take on different functionality in the graphical program, depending on configuration user input received. User input specifying desired functionality for the node may be received via a GUI. Graphical source code may then be programmatically generated for the node, such that the node is operable to implement the specified desired functionality when the graphical program is executed. Since the graphical source code associated with the node is generated programmatically, a u201cminimalu201d amount of graphical source code may be generated.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07069517",
	"publication_date": "2006-06-27",
	"application_number": "09886456",
	"application_date": "2001-06-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for programmatically generating a graphical program in response to user input",
	"summary": "",
	"abstract": "A system and method for programmatically generating a graphical program or a portion of a graphical program in response to receiving user input. The user input may specify functionality of the graphical program or graphical program portion to be generated. In response to the user input, a graphical program (or graphical program portion) that implements the specified functionality may be programmatically generated. Thus, different graphical programs may be generated, depending on the user input received.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07120876",
	"publication_date": "2006-10-10",
	"application_number": "09886455",
	"application_date": "2001-06-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for programmatically generating a second graphical program based on a first graphical program",
	"summary": "",
	"abstract": "System and method for programmatically generating a second graphical program associated with a second programming development environment based on a first graphical program associated with a first programming development environment. The second graphical program may be generated programmatically, without relying on user input, or may prompt for user input to determine various options to use in generating the second graphical program. The second graphical program may implement the functionality of, or a portion of the functionality of, the first graphical program. The method preferably generates the second graphical program such that the second programming development environment is operable to treat the second graphical program identically to a graphical program interactively developed by a user using the second programming development environment. Thus, once the second graphical program has been generated, the user may use the second programming development environment to edit the second graphical program, execute the second graphical program, etc.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07043693",
	"publication_date": "2006-05-09",
	"application_number": "09742510",
	"application_date": "2000-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for programmatically modifying a graphical program in response to program information",
	"summary": "",
	"abstract": "A system and method for programmatically generating and modifying graphical programs, in response to receiving program information. The program information may specify functionality of the graphical program or graphical program portion. During execution of a graphical program generation (GPG) program, the GPG program may be operable to receive the program information. In response to the program information, the GPG program may programmatically generate a graphical program (or graphical program portion) that implements the specified functionality. Thus, the GPG program may generate different graphical programs, depending on the program information received. The GPG program may have any of various purposes or applications. In some embodiments, the GPG program may be a program or application which a user utilizes to construct or characterize a computational process. In response to the specified computational process, the GPG program may programmatically generate a graphical program to implement the computational process. In other embodiments, the GPG program may be a program or application that directly aids the user in creating a graphical program. In addition to these examples, a GPG program may receive any other type of information and programmatically generate a graphical program based on the received information. After programmatically generating the graphical program, the GPG program may receive subsequent program information specifying a modification to the graphical program and may programmatically modify the graphical program based on the program information.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07000190",
	"publication_date": "2006-02-14",
	"application_number": "09745297",
	"application_date": "2000-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for satisfying move constraints when performing a motion control sequence",
	"summary": "",
	"abstract": "A system and method for specifying and satisfying move constraints when performing a motion control sequence. One or more motion control operations may be included in a sequence in response to user input. User input specifying one or more move constraints for a first motion control operation in the sequence may be received to a graphical user interface. When the motion control sequence is subsequently performed, the first motion control operation may be performed in such a way that the one or more specified move constraints are satisfied. The specified move constraints preferably do not cause the trajectory of the first motion control operation to be altered.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07076322",
	"publication_date": "2006-07-11",
	"application_number": "10113657",
	"application_date": "2002-03-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for synchronizing execution of a test sequence",
	"summary": "",
	"abstract": "A system and method for synchronizing execution of multiple processes or threads executing to perform tests of one or more units under test. One or more synchronization steps may be included in a test executive sequence, in response to user input requesting inclusion of the synchronization steps. Each synchronization step may be configured to perform a synchronization operation, in response to user input specifying the synchronization operation. The test executive sequence may then be executed multiple times concurrently, e.g., by multiple threads or processes, and the one or more synchronization steps in the test executive sequence may coordinate the execution of the multiple threads or processes to test the unit(s) under test.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07093249",
	"publication_date": "2006-08-15",
	"application_number": "09798459",
	"application_date": "2001-03-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for processing a deterministic data flow associated with a wireless communication signal",
	"summary": "",
	"abstract": "The invention is directed to an apparatus, method and system for providing reduced power consumption, fast processing of digitized communication signals and relatively easy reconfiguration for different applications, such as communication protocols/standards. The invention recognizes that the processing of signals associated with different types of communication standards can be recharacterized as deterministic data flows. Also, for each deterministic data flow, several of the same categories of computation are performed in substantially the same manner, albeit in a different order or somewhat differently, that is unique to a particular application. Based on this recharacterization, the invention divides the processing of the deterministic data flow for a communication signal among several Class processors that are separately configurable to optimize their particular category/class of computation in the processing of the signal.",
	"url": null,
	"owner": "National Semiconductor Corporation",
	"publication_number": "07016695",
	"publication_date": "2006-03-21",
	"application_number": "10318346",
	"application_date": "2002-12-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Object-oriented processor design and design methodologies",
	"summary": "",
	"abstract": "Also provided is a method for designing a distributed processing system for an application. The method includes steps of partitioning the application into functions and data messages; configuring a host processor having a host communication infrastructure (HCI) to pass data messages via the HCI to control the application; configuring a plurality of class processors to compute the functions into which the application is partitioned in response to the data messages; and interconnecting the class processors to the host processor via application program interface modules in a star configuration. Systems designed in accordance with this method embodiment are well-suited for integration on a single chip, and can be easily updated and modified as necessary, because changes made to a class processor have minimal effect on the remainder of the system.",
	"url": null,
	"owner": "National Semiconductor Corporation",
	"publication_number": "07062769",
	"publication_date": "2006-06-13",
	"application_number": "09348783",
	"application_date": "1999-07-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Case-based reasoning similarity metrics implementation using user defined functions",
	"summary": "",
	"abstract": "A database system and a method for case-based reasoning are disclosed. The database system includes an exemplar object within the database configured to accept and store a plurality of exemplar cases, a target object within the database configured to accept and store a target case, and a comparison object within the database for comparing the target case with the plurality of exemplar cases. The method includes comparing the target case with the plurality of exemplar cases within a database to produce similarity metrics and determining the similarity between the target and exemplar cases based on the similarity metrics.",
	"url": null,
	"owner": "NCR Corp.",
	"publication_number": "07136852",
	"publication_date": "2006-11-14",
	"application_number": "09994529",
	"application_date": "2001-11-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Optimizing an equi-join operation using a bitmap index structure",
	"summary": "",
	"abstract": "A method, computer program and database system are disclosed for joining a plurality of tables T through TN, where each of the tables has an associated Star Map, S through SN, respectively. Each Star Map includes bitmap entries having locations indexed by the hash of one or more values associated with one or more join key columns of its associated table. A bitmap entry in a Star Map, if set, indicates the presence of a row in its associated table that has entries in the one or more join key columns that together hash to the location of the bitmap entry. The method includes a) performing a Boolean operation using the bitmap entries of the Star Maps S through SN to produce a join Star Map SJ, b) using SJ to select rows from the tables T through TN, and c) joining the resulting rows to produce a join result.",
	"url": null,
	"owner": "NCR Corporation",
	"publication_number": "07092954",
	"publication_date": "2006-08-15",
	"application_number": "10038673",
	"application_date": "2001-12-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software development system having particular adaptability to financial payment switches",
	"summary": "",
	"abstract": "A software development system. An inventory of software modules is maintained. When a given system is to be assembled, modules from the inventory are selected for that system. In addition, modules not contained in the inventory are developed specifically for that system, and included in the system.",
	"url": null,
	"owner": "NCR Corporation",
	"publication_number": "07131108",
	"publication_date": "2006-10-31",
	"application_number": "09550192",
	"application_date": "2000-04-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "IP packet priority control system",
	"summary": "",
	"abstract": "An IP packet priority control system of the present invention transmits and receives an IP packet among a terminal on the Internet, a server, and a router operating under program control, and includes means for setting priority in an IP packet on a session-by-session basis in order to realize an IP packet priority control system which distributes load to hardware, performs priority control on a session-by-session basis, and causes no interference between images and control information. The session comprises a voice call, image data, and a JAVA applet of a browser. The IP packet priority is set such that the priority of control information of the voice call is high, the priority of the image data of the browser is low, and the priority of the JAVA applet is intermediate. The means for setting priority in an IP packet performs setting on a session-by-session basis in which a terminal or a server adds priority parameter passing to a standard API rather than setting on a port-by-port basis in which a router prioritizes control information with QoS control.",
	"url": null,
	"owner": "NEC Corporation",
	"publication_number": "07020142",
	"publication_date": "2006-03-28",
	"application_number": "09862470",
	"application_date": "2001-05-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multiple wireless remote interfaces to a single server",
	"summary": "",
	"abstract": "A system which enables a plurality of wireless interface devices to be interfaced with a server. The server is configured to communicate with a plurality of wireless interface devices over a radio link. The server may be connected to wither a wired or wireless local area network (LAN).",
	"url": null,
	"owner": "NEC Corporation",
	"publication_number": "07120433",
	"publication_date": "2006-10-10",
	"application_number": "10800334",
	"application_date": "2004-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network application decentralized execution system, terminal equipment and network application execution method therefor, and operation method for terminal equipment",
	"summary": "",
	"abstract": "A network application decentralized execution system which allows a network application developed for a centralized switched network to be applied to a decentralized switched network is disclosed. The network application decentralized execution system includes a network application server, a first terminal equipment and a second terminal equipment. Each of the first and second terminal equipments includes a detection section for detecting a variation of a connection state of the terminal equipment, a control section for controlling the connection state, and a plug-in section for plugging in an application execution script downloaded from a network application server.",
	"url": null,
	"owner": "NEC Corporation",
	"publication_number": "07100166",
	"publication_date": "2006-08-29",
	"application_number": "10078505",
	"application_date": "2002-02-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multimedia data transmission system",
	"summary": "",
	"abstract": "A distributed multimedia data system is provided connected to a wide area network, the confidentiality and security of which are not controlled from end to end. The system has at least one customer server located at each one of a plurality of service suppliers, each customer server being connected to the wide area network also connected to a shared voice resources and/or video resources host server receiving particular service requests from customers also connected to the wide area network and initially responding to each received particular service request to determine the particular service supplier concerned as to the received particular service request, and to then direct each particular received service request to the at least one customer server located at the concerned particular service supplier for execution of particular service logic associated with the services provided by that service supplier.",
	"url": null,
	"owner": "Netcentrex",
	"publication_number": "06985564",
	"publication_date": "2006-01-10",
	"application_number": "09441057",
	"application_date": "1999-11-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Optimized database appliance",
	"summary": "",
	"abstract": "A system from processing database queries allows for cost and locale based distribution for execution of database queries. The database queries are executed on execution engines that provide flexible configuration and overlapping functionality. The system reduces various costs, including elapsed time, required to perform database queries. The system provides processing of a database query using a database catalog comprising database table locality information, record locality information and execution engine information. A query optimizer receives the query and accesses the database catalog to create a query execution plan comprising locality-based database operations. A central database operation processor providing a first execution engine executes the query execution plan by performing at least a portion of the locality-based database operations and distributing at least a portion of the locality-based database operations as a subplan. A second database operation processor providing a second execution engine executes the subplan received from the central database operation processor. At least one of the database operations can be executed on either the first execution engine or the second execution engine. A storage unit stores at least a portion of database tables and records. A data communications network connects the central database processor to the second database processor.",
	"url": null,
	"owner": "Netezza Corporation",
	"publication_number": "07010521",
	"publication_date": "2006-03-07",
	"application_number": "10145571",
	"application_date": "2002-05-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interface for controlling and accessing information on an exercise device",
	"summary": "",
	"abstract": "A computer-implemented interface method for use with a display device associated with an exercise device includes connecting a network connection to the exercise device capable of accessing information stored over a network, partitioning a first portion of the display device associated with the exercise device to display content, partitioning a second portion of the display device associated with the exercise device to display one or more controls that control the exercise device, and providing a selectable element on the display device that upon selection removes the second portion of the display used to display the one or more controls.",
	"url": null,
	"owner": "Netpulse, LLC",
	"publication_number": "07022047",
	"publication_date": "2006-04-04",
	"application_number": "09866154",
	"application_date": "2001-05-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer system for performing reusable software application development from a set of declarative executable specifications",
	"summary": "",
	"abstract": "A computer system executing a method for performing reusable software application development comprises integrating a data processing system, providing a set of keywords and attributes, and declaring a set of executable specifications using the keywords and attributes, further comprising generating a program code, instantiating an object code, generating a testable functionality result, generating at least one unit test, generating an implementation documentation output, generating a performance statistics output, and generating a project metrics in the data processing system. The step of providing a set of keywords and attributes comprises generating a set of user interface forms, fields, and validation rules, generating a library of structured query language statements, generating a library of rules for generating dynamic structured query language statements, generating one of a web browser report, a file-based report, and a portable document format report, generating a library of security rules and permission statements, and generating database schemata.",
	"url": null,
	"owner": "Netspective Communications, LLC",
	"publication_number": "07039898",
	"publication_date": "2006-05-02",
	"application_number": "10194646",
	"application_date": "2002-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "File folding technique",
	"summary": "",
	"abstract": "A file folding technique reduces the number of duplicate data blocks of a file consumed on a storage device of a file server configured to generate a persistent image of its active file system at a point in time. According to the file folding technique, if u201coldu201d data blocks of the file are over-written with u201cnewu201d data and that new data is identical to the data of the persistent file image, the old data blocks are u201cfreedu201d and the file is directed to refer to the persistent image for its data. The invention reduces disk space consumption in a file server configured to generate persistent images of its active file system and, in particular, reduces overall persistent image disk usage.",
	"url": null,
	"owner": "Network Appliance, Inc.",
	"publication_number": "07072910",
	"publication_date": "2006-07-04",
	"application_number": "10104694",
	"application_date": "2002-03-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Location-independent RAID group virtual block management",
	"summary": "",
	"abstract": "A technique maps the capacity of storage devices, such as disks, into any RAID group of a volume of a storage system regardless of the location of the RAID group within a volume block number (VBN) space of the volume. The technique separates disks and mapped VBN ranges, allowing for flexibility in the description and extension of RAID group capacities, while providing disk addition policies that support location-independent disk insertion into RAID groups. The technique also provides a disk label structure that supports the provision of multiple VBN ranges within a RAID group and within individual disks. Moreover, the technique provides file system support for allocation and topology management of the multiple mapped VBN ranges within disks and RAID groups, as well as noncontiguous VBN ranges across the RAID groups in the volume.",
	"url": null,
	"owner": "Network Appliance, Inc.",
	"publication_number": "07111147",
	"publication_date": "2006-09-19",
	"application_number": "10394890",
	"application_date": "2003-03-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for reliability analysis of disk drive failures",
	"summary": "",
	"abstract": "A method and system for performing reliability analysis of disk drive failure mechanisms is provided. The information for performing the analysis is obtained in accordance with the invention from a database generated from identification information stored about individual drives, and drive families, that are deployed in the field. An error database stores error codes that are issued by a disk drive upon a particular event. These error codes are reported to a storage system administrator and recorded in the error database. The disk drive information and the error codes are mapped, and error codes are translated into failure mechanisms for a particular drive family. An analysis is performed whereby a hazard rate plot is provided for either all failure indicators or selected failure indicators or subpopulations for a particular drive family over a given time.",
	"url": null,
	"owner": "Network Appliance, Inc.",
	"publication_number": "07136768",
	"publication_date": "2006-11-14",
	"application_number": "11095249",
	"application_date": "2005-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mirror split brain avoidance",
	"summary": "",
	"abstract": "A technique includes a set of procedures utilized during the transfer of service of a failed storage system to a surviving storage system of a cluster failover (CFO) configuration during a system outage, such as a disaster scenario. The procedures are executed by a RAID subsystem of the surviving storage system during disaster takeover, storage healing and node restart operations. The procedures prevent the possibility that clients accessing the storage system will see out-of-date versions of the data either during transfer of service of the system during the disaster scenario or subsequently after the storage system is healed and service on the failed system has been restored.",
	"url": null,
	"owner": "Network Appliance, Inc.",
	"publication_number": "07111194",
	"publication_date": "2006-09-19",
	"application_number": "10394854",
	"application_date": "2003-03-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Proposed configuration management behaviors in a raid subsystem",
	"summary": "",
	"abstract": "A technique forecasts the behavior of a RAID subsystem when processing a proposed configuration management request that modifies a topology or attribute configuration, e.g., RAID groups and volume layout, of a storage array managed by the subsystem. In response to the proposed request, the RAID subsystem returns a set of projected result data instead of committing the request to the storage array configuration. An operator issues the proposed request in accordance with a novel view-only mode of a configuration management command. The view-only mode is manifested as an u201c-nu201d option that instructs a configuration thread of the RAID subsystem to return pre-committed results without actually committing the modification.",
	"url": null,
	"owner": "Network Appliance, Inc.",
	"publication_number": "07143235",
	"publication_date": "2006-11-28",
	"application_number": "10394855",
	"application_date": "2003-03-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Storage virtualization by layering virtual disk objects on a file system",
	"summary": "",
	"abstract": "A storage virtualization selection technique u201cautomatesu201d a virtualization selection process to create virtual disk (vdisk) storage objects over a volume of a file system implemented by a storage operating system of a multi-protocol storage appliance. The file system provides a virtualization system that aggregates physical storage of a set of disks or portions (e.g., extents) of disks into a pool of blocks that can be dynamically allocated to form a vdisk. The file system also provides reliability guarantees for the vdisks in accordance with its underlying architecture. That is, the file system organizes its storage within volumes created among the managed disks. The vdisk is thereafter created as a storage object within a volume and, thus, inherits the underlying reliability configuration associated with that volume. The portions are aggregated and allocated as a vdisk with reliability guarantees in response to a request to create the vdisk from a user of the storage appliance and without further user involvement.",
	"url": null,
	"owner": "Network Appliance, Inc.",
	"publication_number": "07107385",
	"publication_date": "2006-09-12",
	"application_number": "10216453",
	"application_date": "2002-08-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for tracking modified files in a file system",
	"summary": "",
	"abstract": "A technique keeps track of files that have been modified on a filer server by identifying full pathnames of files that have been modified and maintaining a listing of those pathnames for processing by the file server. The technique is illustratively-implemented by a plurality of processes executing in a file access protocol code layer of a file server embodied as a multi-protocol filer. The processes are configured to identify modified files, load the identified pathnames of the modified files onto a temporary storage element or data structure and maintain those pathnames on the data structure for a predetermined time. Thereafter, the files associated with those pathnames may be processed by a function of the filer.",
	"url": null,
	"owner": "Network Appliance, Inc.",
	"publication_number": "06983296",
	"publication_date": "2006-01-03",
	"application_number": "10217119",
	"application_date": "2002-08-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program product for providing an IP datalink multiplexer",
	"summary": "",
	"abstract": "A system, method and computer program product are disclosed for transmitting a datagram in a wireless multiplexing framework. A datagram destined to a destination in a network is received and a wireless connection is then selected from a set of wireless connections. The received datagram is then processed to associate an intermediary destination with the datagram. The datagram is subsequently transmitted to the associated intermediary destination via the selected wireless connection. From the associated intermediary destination, the datagram is then forwarded to the destination utilizing the network.",
	"url": null,
	"owner": "Network Resonance, Inc.",
	"publication_number": "07039034",
	"publication_date": "2006-05-02",
	"application_number": "09861116",
	"application_date": "2001-05-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Graphics system interface",
	"summary": "",
	"abstract": "An interface for a graphics system includes simple yet powerful constructs that are easy for an application programmer to use and learn. Features include a unique vertex representation allowing the graphics pipeline to retain vertex state information and to mix indexed and direct vertex values and attributes; a projection matrix value set command; a display list call object command; and an embedded frame buffer clear/set command.",
	"url": null,
	"owner": "Nintendo Co., Ltd.",
	"publication_number": "07071945",
	"publication_date": "2006-07-04",
	"application_number": "10716494",
	"application_date": "2003-11-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing logical combination of N alpha operations within a graphics system",
	"summary": "",
	"abstract": "A graphics system including a custom graphics and audio processor produces exciting 2D and 3D graphics and surround sound. The system includes a graphics and audio processor including a 3D graphics pipeline and an audio digital signal processor. Logical combination of N alpha compares can be used to provide a wide range of imaging effects including but not limited to cartoon outlining.",
	"url": null,
	"owner": "Nintendo Co., Ltd.",
	"publication_number": "07061502",
	"publication_date": "2006-06-13",
	"application_number": "09726212",
	"application_date": "2000-11-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Recirculating shade tree blender for a graphics system",
	"summary": "",
	"abstract": "A hardware-accelerated recirculating programmable texture blender/shader arrangement circulates computed color and alpha data over multiple texture blending/shading cycles (stages) to provide multi-texturing and other effects. Up to sixteen independently programmable consecutive stages, forming a chain of blending operations, are supported for applying multiple textures to a single object in a single rendering pass.",
	"url": null,
	"owner": "Nintendo Co., Ltd.",
	"publication_number": "07034828",
	"publication_date": "2006-04-25",
	"application_number": "09722367",
	"application_date": "2000-11-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Communication terminals",
	"summary": "",
	"abstract": "The invention is particularly suitable to the delivery of so-called thin terminal implementations by manufacturers to which users subsequently add their desired software.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07006964",
	"publication_date": "2006-02-28",
	"application_number": "10023733",
	"application_date": "2001-12-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Configuration of intelligent network service",
	"summary": "",
	"abstract": "A method of configuring an intelligent network service over a user interface of a mobile station. The mobile station (MS) comprises an extension layer (MEXE) to support routines to be installed. The mobile station is loaded (-) with a configuration routine of the intelligent network service in question. The extension layer (MEXE) receives an input (-) through the configuration routine in order to configure the intelligent network service. On the basis of the input, the mobile station (MS) transmits configuration information to a mobile services switching centre (MSC) in a configuration message (-). The mobile services switching centre (MSC) recognized the configuration message (-) and transmits at least the essential part thereof to a service control point (SCP). The service control point (SCP) interprets the configuration information included in the configuration message (-) and configures the intelligent network service.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "06999781",
	"publication_date": "2006-02-14",
	"application_number": "09439187",
	"application_date": "1999-11-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data communication method, system, and transmitter and receiver constituting the system",
	"summary": "",
	"abstract": "The present invention concerns a data communication method for communicating packetized data via an interface between a transmitter and a receiver, wherein communication relies on a layered communication protocol stack comprising at least two protocol layers of different hierarchy level, wherein at least data communication on a lower one of the layers adopts a retransmission scheme for data packets for which an acknowledgment of receipt was not received at the transmitter, the method comprising the steps of initializing the retransmission scheme of the lower one of the layers by setting a condition parameter, wherein fulfilling the condition defined by the condition parameter represents an indication as to how to control the retransmission scheme, wherein initializing comprises setting said condition parameter of the lower one of the layers according to information forwarded from the higher one of said layers to the lower one of said layers, transmitting packet data from the transmitter via the interface to the receiver according to the retransmission scheme of the lower one of the layers, detecting that the condition is fulfilled during transmitting, and controlling said retransmission scheme of the lower one of said layers in response to the detecting.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07028094",
	"publication_date": "2006-04-11",
	"application_number": "10212796",
	"application_date": "2002-08-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for efficiently encoding wireless data packet headers",
	"summary": "",
	"abstract": "A method for handling connections in the gateway of a wireless system, such as the WAP system, which gateway maintains certain information of each connection, which information comprises the first part and the second part. Furthermore, the said gateway comprises the gateway aplication and means for the implementation of a certain protocol layer. The method is characterized in that it involves the storing of a partial connection, specific to the gateway application, upon the initiation of the gateway application, in which partial connection the first part of the connection data is fixed. When the datagram arrives from the radio interface at the gateway, a new connection is stored on the basis of the information of the partial connection, in which new connection the said second part of the connection data is fixed, comprising the bearer employed. The invention also relates to the said gateway, a computer program related to the method and a memory in which the said computer program is located.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07068620",
	"publication_date": "2006-06-27",
	"application_number": "09979249",
	"application_date": "2000-05-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for reducing synchronization delay in packet-based voice terminals",
	"summary": "",
	"abstract": "Circuitry, embodied in a media subsystem, reproduces a speech or other type of audio signal, and is operable during a time that comfort noise is being generated for storing data from an arriving data packet that contains data representing a beginning of an interval of speech. The circuitry detects that data representing speech has been stored and synchronizes the circuitry to the beginning of the interval of speech by terminating the generation of comfort noise that precedes the interval of speech, and reproduces the speech by decoding the stored data from the data packet and converting the decoded data to an audio speech signal. The arriving data packet contains at least one frame of speech data having a duration of X milliseconds, and the circuitry includes an audio device, such as a DAC or a PCM connection, that requests decoded speech data at a rate given by X/Y milliseconds, where Y is greater than one. By example, the frame of speech data has a duration in the range of about 20 milliseconds to about 60 milliseconds, and an audio device requests decoded speech data at a rate of less than every 10 milliseconds (e.g., every 5 milliseconds). The circuitry may be contained within a wireless communications device, such as a cellular telephone or a personal communicator.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07110416",
	"publication_date": "2006-09-19",
	"application_number": "09946066",
	"application_date": "2001-09-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and business process to maintain privacy in distributed recommendation systems",
	"summary": "",
	"abstract": "A distributed recommendation system and method provides greater privacy for user's private data. Tasks of a recommendation system are distributed between wireless devices and network servers, to protect end users privacy. Greater privacy for context-sensitive, adaptive, user interfaces is provided for Internet service usage by wireless devices. The user's wireless device sends a current context-activity pair to a network server in response to either the user's selection of an activity or automatically, while protecting the user's privacy. The user's wireless device includes a service history log. The activities stored in the service history log include past recommendations made by the network server, past services used, prestored service preferences, and special requested service requirements. Context-activity pair information sent to the server protects user privacy and can include any combination of these activities. The server responds to an appropriate recommendation. New recommendations to users are made in response to context-activity pairs submitted by their wireless devices.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07072886",
	"publication_date": "2006-07-04",
	"application_number": "09950773",
	"application_date": "2001-09-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for selecting a bearer service for a service in a mobile telecommunications system",
	"summary": "",
	"abstract": "A method for selecting a bearer service for communication between a mobile terminal and a mobile network includes:nn",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07099687",
	"publication_date": "2006-08-29",
	"application_number": "09634488",
	"application_date": "2000-08-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and apparatus for constructing fully personalized and contextualized interaction environment for terminals in mobile use",
	"summary": "",
	"abstract": "A method, system and apparatus for creating personalized and contextualized interaction environment for terminals in mobile use. The method comprises receiving user instruction regarding information displayed on the interface, wherein the interface is represented in the contextualized interaction environment by a node map, updating the internal node map in accordance with the user instruction and displaying the interface in accordance with the updated internal node map. The node map is arranged to represent the user information in a particular context on the interface.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07058895",
	"publication_date": "2006-06-06",
	"application_number": "10028170",
	"application_date": "2001-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Service mobility and recovery in communication networks",
	"summary": "",
	"abstract": "A method improves mobility and service recovery for a user in a wireless communication network. Service information concerning the user is stored in a registrar. A subscription message is sent from a user terminal to the registrar. A header in the subscription message contains a unique indication. In response to the subscription message containing a unique indication in a header, the registrar returns a notification message to the user terminal. The payload of the notification message includes service information for the user to be used by the user terminal for communication services.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07149522",
	"publication_date": "2006-12-12",
	"application_number": "11005672",
	"application_date": "2004-12-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Skins for mobile communication devices",
	"summary": "",
	"abstract": "A skin is provided for the user interface of a mobile communication device. The skin is obtained by providing a data file including information defining characteristics of the skin, providing a markup language style sheet describing a manner in which data is to be represented on a display of the mobile communication device; transforming the data file into a markup language document according to the markup language style sheet, and providing the markup language document to an user interface application to represent the data on the display.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07093198",
	"publication_date": "2006-08-15",
	"application_number": "09930484",
	"application_date": "2001-08-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for authentication in a mobile communications system",
	"summary": "",
	"abstract": "The invention concerns authentication to be performed in a telecommunications network, especially in an IP network. To allow a simple and smooth authentication of users of IP networks in a geographically large area, the IP network's terminal (TE) uses a subscriber identity module (SIM) as used in a separate mobile communications system (MN), whereby a response may be determined from the challenge given to the identity module as input. The IP network also includes a special security server (SS), to which a message about a new user is transmitted when a subscriber attaches to the IP network. The subscriber's authentication information containing at least a challenge and a response is fetched from the said mobile communications system to the IP network and authentication is carried out based on the authentication information obtained from the mobile communications system by transmitting the said challenge through the IP network to the terminal, by generating a response from the challenge in the terminal's identity module and by comparing the response with the response received from the mobile communications system. Such a database (DB) may also be used in the system, wherein subscriber-specific authentication information is stored in advance, whereby the information in question need not be fetched from the mobile communications system when a subscriber attaches to the network.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07003282",
	"publication_date": "2006-02-21",
	"application_number": "09743302",
	"application_date": "1999-06-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of rebooting a multi-device cluster while maintaining cluster operation",
	"summary": "",
	"abstract": "The present invention is directed at rebooting a cluster while maintaining cluster operation. Cluster operation is automatically maintained during the reboot since at least one member of the cluster stays active during the process. An administrator triggers the reboot process and then does not have to perform any other steps during the reboot process. An algorithm executes which reboots members of the cluster at different times, while always maintaining operation of at least one member of the cluster.",
	"url": null,
	"owner": "Nokia Inc.",
	"publication_number": "07076645",
	"publication_date": "2006-07-11",
	"application_number": "10606645",
	"application_date": "2003-06-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing exploit protection for networks",
	"summary": "",
	"abstract": "A method and system for providing protection from exploits to devices connected to a network. The system and method include a component for determining whether an encapsulation has been applied to an attachment and unencapsulating such encapsulated attachments, a component that performs at least one decompression of the attachment when the attachment is compressed, a component that determines whether a header, body, and/or attachment of a message includes an exploit, and a component that holds and optionally cleans messages that include exploits. A device that receives messages that are directed to the network employs the components above to provide exploit protection for at least one of the messages.",
	"url": null,
	"owner": "Nokia Inc.",
	"publication_number": "07134142",
	"publication_date": "2006-11-07",
	"application_number": "10121959",
	"application_date": "2002-04-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Controlling quality of service in a mobile communications system",
	"summary": "",
	"abstract": "A method for transmitting data packets in multiple data flows to/from a mobile station in a mobile communications system. A data transmission path is formed for routing data packets. Multiple profiles are associated with the data transmission path, each profile comprising at least one quality of service parameter, or QoS parameter. Each flow or data packet is provided with a profile tag indicating one of the multiple profiles. Scheduling and policing the transmission of individual data packets is based on at least one QoS parameter of the profile indicated by the profile tag associated with the data flow in question.",
	"url": null,
	"owner": "Nokia Networks Oy",
	"publication_number": "07023825",
	"publication_date": "2006-04-04",
	"application_number": "09763001",
	"application_date": "1999-08-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for implementing IS-IS protocol redundancy",
	"summary": "",
	"abstract": "The present invention relates to a method and system for implementing link level protocol redundancy in a router. In particular, the invention relates to providing redundancy of the Intermediate System Intra-domain Routing Information Exchange Protocol (IS-IS) routing protocol. An active processor provides IS-IS operations. In the present invention, a standby processor is coupled to the active processor. During the initial synchronization, all protocol information from the active processor is forwarded to the standby processor. The protocol information can include IS-IS global protocol information, IS-IS configuration information, IS-IS adjacencies information, IS-IS interface information and link state packet information. Thereafter, any updates of protocol information are immediately forwarded to the standby processor in an orderly and controlled manner. Upon failure of the active processor, the router is switched to the standby processor and all IS-IS protocol operations are performed on what used to be the standby processor.",
	"url": null,
	"owner": "Nokia, Inc.",
	"publication_number": "07155632",
	"publication_date": "2006-12-26",
	"application_number": "10183272",
	"application_date": "2002-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Selective routing of data flows using a TCAM",
	"summary": "",
	"abstract": "The present invention relates to a method and system for supporting in a router a plurality of data flows using a ternary content addressable memory (TCAM) in which the number of accesses to write to the TCAM is optimized to improve efficiency of updating and subsequent look up. To accommodate the plurality of data flows, the TCAM is partitioned into at least two partitions in which a first portion includes indices having a higher priority and a second portion includes indices having a lower priority. For example, multiple protocol label switching (MPLS) flows and IP-Virtual Private Network (VPN) can be added to the first partition and policy based routing flows can be added to the second partition. During subsequent TCAM look-up of a prefix of an incoming packet the MPLS or IP-VPN flow will subsume any matching policy based routing flow, such as flows classified by an access control list or traffic manager flows.",
	"url": null,
	"owner": "Nokia, Inc.",
	"publication_number": "07028098",
	"publication_date": "2006-04-11",
	"application_number": "09909739",
	"application_date": "2001-07-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Controlling a destination terminal from an originating terminal",
	"summary": "",
	"abstract": "A caller associates computer software code with a signalling protocol messages such that when the messages are received at a destination processor the computer software code is executed. For example, the messages may be improved SIP protocol messages with incorporated Java code. By selecting different computer software code for association with the messages, the caller is able to control the destination terminal. For example, to display information about the identity of the caller at the destination terminal; to modify the behaviour of the destination terminal according to the priority of the call; to take into account the configuration of the destination terminal, and to allow users to adjust this configuration from a remote location.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "07050861",
	"publication_date": "2006-05-23",
	"application_number": "09606053",
	"application_date": "2000-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for providing remote access to previously transmitted enterprise messages",
	"summary": "",
	"abstract": "In one example of the invention, a notification system is coupled to a plurality of message services including a voice mail server, an email server and an information server in an office. Messages left for a user (e.g. voice mail, email, CRM event, etc.) are deposited in folders maintained by the messaging services. The notification system detects additions to the user's folders and when a new message arrives, the notification system sends an alert to a Wireless Access Protocol (WAP) enabled device (e.g. cell phone) configured for the user. The alert includes the total number of messages of each type received for the user, along with an indication of the most recently received message. Message information associated with the alerts are also archived by the notification system so that a user can remotely access the information so as to learn more about the messages received from the plurality of message services.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "07031437",
	"publication_date": "2006-04-18",
	"application_number": "09753345",
	"application_date": "2000-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Programmable command-line interface API for managing operation of a network device",
	"summary": "",
	"abstract": "A method of managing a network device, includes providing a command-line interface application programming interface (CLI-API) compatible with a command-line interface (CLI) of the network device, receiving instructions from an application that calls one or more routines in the CLI application programming interface, and generating at least one command in response to receiving instructions from the application wherein the at least one command is compatible with the CLI of the network device. An apparatus includes a remote serial command-line interface (RS-CLI) device having a storage device capable of storing instructions, a network port capable of being connected to the network and capable of processing a network protocol stack in addition to receiving the instructions, a serial port capable of processing a serial protocol and capable of being connected to the non-application enabled network device, and a processor capable of processing instructions stored in the storage area of the RS-CLI device.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "07039724",
	"publication_date": "2006-05-02",
	"application_number": "09753017",
	"application_date": "2000-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Providing access to a plurality of e-mail and voice message accounts from a single web-based interface",
	"summary": "",
	"abstract": "Consider a user who has three different types of email account. Previously, in order to access those different email accounts the user has had a terminal with three desktop applications, one for accessing each type of email account. The user has been unable to access all of his or her email accounts simultaneously. Instead, the user has had to connect, for example, using a RAS connection, to one of the email accounts and then terminate that RAS connection before initiating a new RAS connection to the next type of email account. This is time consuming and problematic for users, particularly those who travel frequently. Another problem is that the user must maintain software applications on his or her terminal, one for each of the different types of message account. This takes up valuable memory and processing capacity on the user terminal. The present invention removes these problems by providing a single web based interface that gives the user access to a plurality of different message accounts on different message servers. In addition, logon times and network bandwidth requirements are reduced by storing retrieved message information in a cookie on the user's terminal.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "07020687",
	"publication_date": "2006-03-28",
	"application_number": "09860419",
	"application_date": "2001-05-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Session initiation protocol enabled set-top device",
	"summary": "",
	"abstract": "A method and apparatus for handling subscriber services from different sources without requiring interaction with different devices. The present invention also provides a method and apparatus for receiving multimedia services using session initiation protocol (SIP) messages received from a source, such as a server on a network. In one embodiment, a set-top device is provided in which a SIP control is provided to register a subscriber with a server using SIP messages. A connection to a network, such as the Internet, is provided to communicate with the server. The set-top device is placed in line with the audio and video source to control audio and video streams presented to the subscriber. The set-top device is also configured to receive voice calls from a public switched telephone network (PSTN). Further, the set-top device includes a remote control mechanism, such as an infrared (IR) transmitter and receiver to receive input from the subscriber and to control other devices using IR signals. Also, subscriber services customized for a particular subscriber may be directed to the subscriber at a location when the subscriber registers with the server through a set-top device at that location using SIP. Services, such as, for example, call screening, channel guides, video on demand, and Web browsing are provided through the set-top device and messaging with a server using SIP messages.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "07024461",
	"publication_date": "2006-04-04",
	"application_number": "09561834",
	"application_date": "2000-04-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Telephony and data network services at a telephone",
	"summary": "",
	"abstract": "A packetised data network includes IP telephones (ITs) and a network intelligence (NI). All of the keys of each IT are u201csoftu201d keys (i.e., they have no fixed function). The NI associates a configuration data structure with the IT which correlates the keys with functions, and, based on this, may control the display of the IT to indicate the current function of certain of the soft keys. Some of the functions are requests for data services at the telephone (e.g., video or programmed audio over the internet). When a user requests such a service with a key press, the NI sets up the service between the data source and the telephone. This may require associating a new configuration data structure with the keys of the IT. The IT user may activate multiple data services through the NI.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "07068641",
	"publication_date": "2006-06-27",
	"application_number": "09307356",
	"application_date": "1999-05-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Item delivery and retrieval system",
	"summary": "",
	"abstract": "An item delivery and retrieval system including a storage subsystem and a computer subsystem. The storage subsystem includes a secure enclosure having an item storage carousel including internal controller apparatus. The computer subsystem is embodied in internet web page based customized application software for implementing an application interface of selectively configurable ActiveX controls for providing user access, such as an employee of a delivery service company and/or a customer of the delivery service company and customer access to one or more storage bins located behind a set of normally closed doors, for providing access control to the bins, and for managing the location of the items in the storage subsystem. The doors are opened when proper identification is provided by the customer so as to permit retrieval of items located in specifically designated bin(s) or to return items thereto.",
	"url": null,
	"owner": "Northrop Grumman Corporation",
	"publication_number": "07133743",
	"publication_date": "2006-11-07",
	"application_number": "10819990",
	"application_date": "2004-04-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enforcing security on an attribute of an object",
	"summary": "",
	"abstract": "Methods, systems, and schema are provided for enforcing security on an attribute of an object. An instance of an object is created or modified using the schema where a number of the attributes for the object include descriptors. The attributes of the created or modified object are checked to ensure that the modifier has access rights to the attributes. If the modifier does not have the access rights, then values are not assigned to the attributes requested by the modifier. When the modifier provides values for an attribute having the corresponding descriptor, the values are also checked to determine if they are references to a second object. In which case, a check is made to ensure the modifier has an access right to the second object. If no such access right exists, then the values are not assigned to the attribute as originally requested by the modifier.",
	"url": null,
	"owner": "Novell, Inc.",
	"publication_number": "07107538",
	"publication_date": "2006-09-12",
	"application_number": "10242007",
	"application_date": "2002-09-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Techniques for content filtering",
	"summary": "",
	"abstract": "Techniques are provided for content filtering. Logic expressions are evaluated to filter content in response to content ratings. The logic expressions include operators that are overloaded and associated with content operators for specific content providers or specific rating systems. By evaluating the logic expressions with the content operators, one or more actions can be automatically and dynamically performed.",
	"url": null,
	"owner": "Novell, Inc.",
	"publication_number": "07043555",
	"publication_date": "2006-05-09",
	"application_number": "10880760",
	"application_date": "2004-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Configurable reliable messaging system",
	"summary": "",
	"abstract": "In one aspect of the invention, a configurable reliable messaging system is provided. The configurable reliable messaging system comprises a communication subsystem capable of configurably transmitting and receiving a message across a network using at least one of a plurality of network links, a plurality of internet protocols and a plurality of transport protocols. The configurable reliable messaging system also comprises a reliability subsystem capable of configurably logging the message, detecting a plurality of failures, notifying a remote entity interconnected with the configurable reliable messaging system via the network of the plurality of failures, and recovering from the plurality of failures. In addition, the configurable reliable messaging system comprises a control module capable of configuring the communication subsystem and the reliability subsystem based on a set of input parameters.",
	"url": null,
	"owner": "NTT DoCoMo, Inc.",
	"publication_number": "07152180",
	"publication_date": "2006-12-19",
	"application_number": "10313265",
	"application_date": "2002-12-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for improving human-machine dialogs using language models learned automatically from personalized data",
	"summary": "",
	"abstract": "A speech-based processing system includes a database of PIM data of a user, a set of language models, a learning unit, a recognition server, and a speech application. The learning unit uses a language model learning algorithm to provide language models based on the PIM data. The recognition server recognizes an utterance of the user by using one of the language models. The speech application identifies and accesses a subset of the PIM data specified by the utterance by using the recognition result. The language model learning algorithm may use grammar induction and/or or may train statistical language models based on the PIM data. The language model learning algorithm may be applied to generate language models periodically or on-the-fly during a session with the user.",
	"url": null,
	"owner": "Nuance Communications, Inc.",
	"publication_number": "07072838",
	"publication_date": "2006-07-04",
	"application_number": "09813711",
	"application_date": "2001-03-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information storage and retrieval system for storing and retrieving the visual form of information from an application in a database",
	"summary": "",
	"abstract": "The visual form of data from a computer program is received and stored in a database. The visual form of the data may be received, for example, in response to a print operation by the computer program or by some other operation such as a cut and paste sequence of operations or by sending the data to another application. The visual form of the data may be stored as a vector image that permits scalability. The visual form of the data may be stored with other identifying information or tags in the database to facilitate searching of the database. The data in the database may be encoded in a manner that ensures data integrity and that permits detection of when data has been compromised. In one embodiment, a service layer application is provided to control access to the database by performing encoding and decoding of the data in the database. The service layer may have an application programming interface that permits many applications to have access to the database. Another application may be provided for accessing the visual form of the data from the database and for providing this data to another computer program. Such an application permits a user to create compound documents from data in the database using the other computer program.",
	"url": null,
	"owner": "Nugenesis Technologies Corporation",
	"publication_number": "07143109",
	"publication_date": "2006-11-28",
	"application_number": "09880393",
	"application_date": "2001-06-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic adjustment of floating point output images",
	"summary": "",
	"abstract": "A system adjusts floating-point-valued images prior to conversion to a display signal so that the dynamic range of the display device is effectively used. Images are adjusted using transfer functions to create an adjusted image within the dynamic range of the display device. The adjusted image also has a frequency distribution of pixel values to maximize the perception of visual detail. The system generates transfer functions from statistical attributes of one or more images. The transfer functions are applied to images on the fly as they are converted into a display signal. The statistical attributes of the image are computed on the fly as it is converted into a display signal. A first transfer function is applied to an image to produce an adjusted image in parallel with the generation of a second transfer function to be applied to a future image.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07071947",
	"publication_date": "2006-07-04",
	"application_number": "10627350",
	"application_date": "2003-07-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Coordinate wrapping for anisotropic filtering of non-power of two textures",
	"summary": "",
	"abstract": "An apparatus and method for using non-power of two texture maps with anisotropic filtering is described. An anisotropic perturbation is applied to a texture map coordinate to produce a perturbed texture coordinate. A wrapped texture map index for various wrap modes is computed using the perturbed texture coordinate and an LOD width. In addition to the anisotropic perturbation, the perturbed texture coordinate may also include a tap perturbation.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07091983",
	"publication_date": "2006-08-15",
	"application_number": "10854618",
	"application_date": "2004-05-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Depth bounds testing",
	"summary": "",
	"abstract": "Lights can be conservatively bounded within a depth range. When image pixels are outside of a light's depth range, an associated volume fragment does not have to be rendered. Depth bounds registers can be used to store minimum and maximum depth values for a light. As graphics hardware processes volume fragments overlapping the image, the image's depth values are compared with the values in the depth bounds register. If the image's depth is outside of the depth range for the light, stencil buffer and illumination operations for this volume fragment are bypassed. This optimization can be performed on a per-pixel basis, or simultaneously on a group of adjacent pixels. The depth bounds are calculated from the light, or from the intersection of the volume with one or more other features. A rendering application uses API functions to set the depth bounds for each light and to activate depth bounds checking.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07145565",
	"publication_date": "2006-12-05",
	"application_number": "10444655",
	"application_date": "2003-05-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hardware accelerator for an object-oriented programming language",
	"summary": "",
	"abstract": "A method and apparatus for accelerating an object-oriented programming language are provided at a hardware gate level. In a Java-compliant embodiment, a Java Application framework is implemented in hardware. The Java.AWT, Java.NET. and Java.IO application frameworks are supported in the preferred embodiment of the invention. Instances and methods of supported application framework classes that are executed by a Java program are offloaded to a hardware object management system. A software stub is provided as an interface between the hardware object management system and the central processing unit.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "06983357",
	"publication_date": "2006-01-03",
	"application_number": "09886167",
	"application_date": "2001-06-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integrated graphics processing unit with antialiasing",
	"summary": "",
	"abstract": "A graphics pipeline system and method are provided for graphics processing. Such system includes a transform module adapted for receiving graphics data. The transform module serves to transform the graphics data from a first space to a second space. Coupled to the transform module is a lighting module which is positioned on the single semiconductor platform for performing lighting operations on the graphics data received from the transform module. Also included is a rasterizer coupled to the lighting module and positioned on the single semiconductor platform for rendering the graphics data received from the lighting module. During use, an antialiasing feature is implemented on the single semiconductor platform to improve a quality of the graphics rendering.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "06992669",
	"publication_date": "2006-01-31",
	"application_number": "10198707",
	"application_date": "2002-07-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for multithreaded processing of data in a programmable graphics processor",
	"summary": "",
	"abstract": "A graphics processor and method for executing a graphics program as a plurality of threads where each sample to be processed by the program is assigned to a thread. Although threads share processing resources within the programmable graphics processor, the execution of each thread can proceed independent of any other threads. For example, instructions in a second thread are scheduled for execution while execution of instructions in a first thread are stalled waiting for source data. Consequently, a first received sample (assigned to the first thread) may be processed after a second received sample (assigned to the second thread). A benefit of independently executing each thread is improved performance because a stalled thread does not prevent the execution of other threads.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07015913",
	"publication_date": "2006-03-21",
	"application_number": "10608346",
	"application_date": "2003-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing an integrated file system",
	"summary": "",
	"abstract": "A novel network architecture that integrates the functions of an internet protocol (IP) router into a network processing unit (NPU) that resides in a host computer's chipset such that the host computer's resources are perceived as separate network appliances. In one embodiment, file handling functions are now integrated into a storage processing unit (SPU) that can also be deployed on the same chipset, where the SPU serves as an overall file and disk management processor.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07120653",
	"publication_date": "2006-10-10",
	"application_number": "10145578",
	"application_date": "2002-05-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for deferred evaluation of transforms in graphics processors",
	"summary": "",
	"abstract": "A method of deferring evaluation of a transform, in accordance with one embodiment of the present invention, includes buffering a plurality of vertex data. The method also includes receiving a draw command, accessing a given vertex data corresponding to the draw command and an associated transform indicator bit. The given vertex data is transformed if the associated indicator bit is cleared. After performing the transform, the vertex data is overwritten with the transformed vertex data and the associated transform indicator bit is set.",
	"url": null,
	"owner": "nVidia Corporation",
	"publication_number": "07106336",
	"publication_date": "2006-09-12",
	"application_number": "10846787",
	"application_date": "2004-05-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for implementing multiple high precision and low precision interpolators for a graphics pipeline",
	"summary": "",
	"abstract": "A rasterizer stage configured to implement multiple interpolators for graphics pipeline. The rasterizer stage includes a plurality of simultaneously operable low precision interpolators for computing a first set of pixel parameters for pixels of a geometric primitive and a plurality of simultaneously operable high precision interpolators for computing a second set of pixel parameters for pixels of the geometric primitive. The rasterizer stage also includes an output mechanism coupled to the interpolators for routing computed pixel parameters into a memory array. Parameters may be programmably assigned to the interpolators and the results thereof may be programmably assigned to portions of a pixel packet.",
	"url": null,
	"owner": "nVidia Corporation",
	"publication_number": "07079156",
	"publication_date": "2006-07-18",
	"application_number": "10845640",
	"application_date": "2004-05-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for implementing programmable texture lookups from texture coordinate sets",
	"summary": "",
	"abstract": "A method and system for implementing programmable texture lookups from texture coordinate sets. The method includes the step of generating a plurality of texture coordinates using a shader module. The shader module executes floating point calculations on received pixel data to generate the texture coordinates. A plurality of texture values are fetched using the texture coordinates. The fetching is performed by a texture unit coupled to receive the texture coordinates from the shader module. The fetching of the texture values is programmable with respect to the texture coordinates such that the number of texture coordinates are decoupled from the number of textures.",
	"url": null,
	"owner": "nVidia Corporation",
	"publication_number": "07109999",
	"publication_date": "2006-09-19",
	"application_number": "10449322",
	"application_date": "2003-05-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods of processing graphics data including reading and writing buffers",
	"summary": "",
	"abstract": "Apparatuses and methods for detecting position conflicts during fragment processing are described. Prior to executing a program on a fragment, a conflict detection unit, within a fragment processor checks if there is a position conflict indicating a RAW (read after write) hazard may exist. A RAW hazard exists when there is a pending write to a destination location that source data will be read from during execution of the program. When the fragment enters a processing pipeline, each destination location that may be written during the processing of the fragment is entered in conflict detection unit. During processing, the conflict detection unit is updated when a pending write to a destination location is completed.",
	"url": null,
	"owner": "Nvidia Corporation",
	"publication_number": "07139003",
	"publication_date": "2006-11-21",
	"application_number": "10736437",
	"application_date": "2003-12-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Pixel load instruction for a programmable graphics processor",
	"summary": "",
	"abstract": "A pixel load instruction for a programmable graphics processor. The pixel load instruction may be used during processing of graphics data to load graphics data from a writable output buffer into a local storage element. Using the pixel load instruction may ensure that the graphics data loaded is current, i.e., any pending writes to the location storing the graphics data are completed prior to loading the graphics data. Furthermore, the pixel load instruction may be enabled and disabled for one or more writable output buffers by setting or clearing bits in a pixel load enable register.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07091979",
	"publication_date": "2006-08-15",
	"application_number": "10652531",
	"application_date": "2003-08-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Position conflict detection and avoidance in a programmable graphics processor",
	"summary": "",
	"abstract": "Apparatuses and methods for detecting position conflicts during fragment processing are described. Prior to executing a program on a fragment, a conflict detection unit, within a fragment processor checks if there is a position conflict indicating a RAW (read after write) hazard may exist. A RAW hazard exists when there is a pending write to a destination location that source data will be read from during execution of the program. When the fragment enters a processing pipeline, each destination location that may be written during the processing of the fragment is entered in conflict detection unit. During processing, the conflict detection unit is updated when a pending write to a destination location is completed.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07053904",
	"publication_date": "2006-05-30",
	"application_number": "10736006",
	"application_date": "2003-12-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Position conflict detection and avoidance in a programmable graphics processor using tile coverage data",
	"summary": "",
	"abstract": "Prior to executing a program on a fragment, a conflict detection unit, within a fragment processor checks if there is a position conflict indicating a RAW (read after write) hazard may exist. A RAW hazard exists when there is a pending write to a destination location that source data will be read from during execution of the program. When the fragment enters a processing pipeline, each destination location that may be written during the processing of the fragment is entered in conflict detection unit. During processing, the conflict detection unit is updated when a pending write to a destination location is completed.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07053893",
	"publication_date": "2006-05-30",
	"application_number": "10737418",
	"application_date": "2003-12-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Programming multiple chips from a command buffer",
	"summary": "",
	"abstract": "A CPU selectively programs one or more graphics devices by writing a control command to the command buffer that designates a subset of graphics devices to execute subsequent commands. Graphics devices not designated by the control command will ignore the subsequent commands until re-enabled by the CPU. The non-designated graphics devices will continue to read from the command buffer to maintain synchronization. Subsequent control commands can designate different subsets of graphics devices to execute further subsequent commands. Graphics devices include graphics processing units and graphics coprocessors. A unique identifier is associated with each of the graphics devices. The control command designates a subset of graphics devices according to their respective unique identifiers. The control command includes a number of bits. Each bit is associated with one of the unique identifiers and designates the inclusion of one of the graphics devices in the first subset of graphics devices.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07015915",
	"publication_date": "2006-03-21",
	"application_number": "10639893",
	"application_date": "2003-08-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Shader cache using a coherency protocol",
	"summary": "",
	"abstract": "Methods and systems for caching graphics data using dedicated level one caches and a shared level two cache are described. Furthermore, each method includes a protocol for maintaining coherency between the level one caches and between the level one caches and the level two cache. The level one caches may store different versions of the graphics data, permitting simultaneous processing of execution threads, each thread accessing a different version of the graphics data.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07103720",
	"publication_date": "2006-09-05",
	"application_number": "10696714",
	"application_date": "2003-10-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program product for using an arbitrary quantity as texture address",
	"summary": "",
	"abstract": "A system, method and computer program product are provided for programmable pixel processing in a computer graphics pipeline. In one embodiment of the present invention, a computed arbitrary quantity is applied as texture address.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07136070",
	"publication_date": "2006-11-14",
	"application_number": "10444418",
	"application_date": "2003-05-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and computer program product for customized information management by allowing a first habitat to access other habitats to retrieve information from the other habitats",
	"summary": "",
	"abstract": "A system, method and computer program product are provided for network-based information management. A first habitat is initiated. The first habitat has markers that are utilized for identifying information selected by a user. The information associated with the markers is retrieved and displayed on an information screen of the first habitat utilizing a network. Multiple users are allowed to view the information screen of the first habitat. A second habitat is also allowed to access the first habitat for retrieving information from the first habitat.",
	"url": null,
	"owner": "NVIDIA International, Inc.",
	"publication_number": "07133892",
	"publication_date": "2006-11-07",
	"application_number": "09905678",
	"application_date": "2001-07-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Authenticating a caller before providing the caller with access to one or more secured resources",
	"summary": "",
	"abstract": "In one embodiment, a system authenticates a caller before providing the caller with access to one or more secured resources. Identification and verification data is stored during system enrollment of known persons. A processing system, in a current call initiated by a caller and prior to identification of the caller, receives voice-based information for the caller including a digital representation of a telephone number spoken by the caller in the current call, the received information including voice-based identification information and voice-based verification information for the caller. The processing system automatically compares the received identification information and the received verification information for the caller with the stored identification and verification data for known persons, respectively, to uniquely identify and verify the identity of the caller as a particular known person. The processing system authenticates the caller for access to the one or more secured resources in response.",
	"url": null,
	"owner": "Ochopee Big Cypress LLC",
	"publication_number": "07006605",
	"publication_date": "2006-02-28",
	"application_number": "10352848",
	"application_date": "2003-01-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for generating a decentralized model on a computer network",
	"summary": "",
	"abstract": "Generation of a decentralized model on a computer network comprises generating data objects and/or function objects, publishing references to the data objects and/or the function objects and subscribing to the data objects and/or the functions by creating relationships between the data objects and/or the function objects through referencing data objects within the function objects, thereby linking the data objects and/or the function objects, wherein networks of linked data objects and/or function objects emerge. The decentralized linked data objects and/or function objects are make available for further linking with other data objects and/or function objects and messages are sent to referencing data objects and/or function objects when referenced data objects and/or referenced function objects change. The functions are solved when the messages are received, thereby causing at least one of the referenced data to be changed. The data objects and/or the function objects are stored in a distributed manner across multiple computing devices on a computer network. The relationships between the data objects and/or function objects are created without using a single coordinating computing device, or are created using multiple coordinating computing devices on the computer network.",
	"url": null,
	"owner": "Oculus Technologies Corporation",
	"publication_number": "07062771",
	"publication_date": "2006-06-13",
	"application_number": "09898501",
	"application_date": "2001-07-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for generating an emergent model on a computer network",
	"summary": "",
	"abstract": "Generation of an emergent model on a computer network comprises generating data objects and/or function objects, publishing references to the data objects and/or the function objects and subscribing to the data objects and/or the functions by creating relationships between the data objects and/or the function objects through referencing data objects and/or function objects within the function objects, thereby linking the data objects and/or the function objects, wherein networks of linked data objects and/or function objects emerge. The emergent linked data objects and/or function objects are make available for further linking with other data objects and/or function objects and messages are sent to referencing data objects and/or function objects when referenced data objects and/or referenced function objects change. The functions are solved when the messages are received. The data objects and/or the function objects are stored in a distributed manner across multiple computing devices on a computer network. The emergent network of linked data objects and/or function objects are independently published to, and subscribed to, in a manner free of a globally predefined network of data objects and/or function objects, thereby generating the emergent model.",
	"url": null,
	"owner": "Oculus Technologies Corporation",
	"publication_number": "07043736",
	"publication_date": "2006-05-09",
	"application_number": "09898507",
	"application_date": "2001-07-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing a search engine for optimizing a decentralized or emergent model on a computer network",
	"summary": "",
	"abstract": "A search engine is provided for searching, evaluating and/or optimizing an emergent model on a computer network. The emergent model is created by independently generating, publishing references to, and subscribing to data objects and/or function objects in a manner free of a globally predefined data object and/or function object definition. Messages are sent to referencing data objects and/or function objects when referenced data objects and/or function objects change. Functions within the function objects are solved when the messages are received. The data objects and/or the function objects are stored in a distributed manner across multiple computing devices on a computer network. At least one of the data objects is defined as an input data object and at least one of the data objects is defined as an output data object to a search engine, the search engine generating changes to the input data object until the output data object satisfies a predefined criteria.",
	"url": null,
	"owner": "Oculus Technologies Corporation",
	"publication_number": "07039920",
	"publication_date": "2006-05-02",
	"application_number": "09898506",
	"application_date": "2001-07-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing access control for a decentralized or emergent model on a computer network",
	"summary": "",
	"abstract": "Access control for a model on a computer network comprises generating data objects and/or function objects, publishing references to the data objects and/or the function objects and subscribing to the data objects and/or the functions by creating relationships between the data objects and/or the function objects through referencing data objects within the function objects, thereby linking the data objects and/or the function objects, wherein networks of linked data objects and/or function objects emerge. The emergent linked data objects and/or function objects are make available for further linking with other data objects and/or function objects and messages are sent to referencing data objects and/or function objects when referenced data objects and/or referenced function objects change. The functions are solved when the messages are received, thereby causing at least one of the referenced data to be changed. The data objects and/or the function objects are stored in a distributed manner across multiple computing devices on a computer network. The emergent linked data objects and/or function objects are independently published to, and subscribed to, in a manner free of a globally predefined data object and/or function object definition, thereby generating the emergent model. Access control is provided by identifying a user of the emergent model and assigning appropriate read, write, execute and administrative permissions to the user on a per data objects and/or function objects basis, the permissions being used to limit access to a specific subset of the data objects and/or function objects.",
	"url": null,
	"owner": "Oculus Technologies Corporation",
	"publication_number": "07080384",
	"publication_date": "2006-07-18",
	"application_number": "10040161",
	"application_date": "2001-10-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for mapping business processes using an emergent model on a computer network",
	"summary": "",
	"abstract": "Mapping business and engineering processes is accomplished by giving users access to a system for generating an emergent model and publishing inputs and/or outputs of models generated by the users. Published inputs and/or outputs of models generated are subscribed to by the users, thereby creating a network of linked inputs and/or outputs. The network of linked inputs and/or outputs are analyzed and displayed, resulting in a map of the business and engineering processes. The models generated are used in business and engineering processes.",
	"url": null,
	"owner": "Oculus Technologies Corporation",
	"publication_number": "07131107",
	"publication_date": "2006-10-31",
	"application_number": "09898527",
	"application_date": "2001-07-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for retrieval of objects from object to relational mappings",
	"summary": "",
	"abstract": "A retrieval system generates a retrieval query for batch reading of related objects when a source object is read from the database. The related objects include nested objects and/or many-to-many relationship objects. It generates a single retrieval query for each type in each level of nested objects using its parent query. Also it generates a retrieval query to retrieve a collection of target objects having many-to-many relationships with a collection of source objects.",
	"url": null,
	"owner": "OIC Acquisition Corporation",
	"publication_number": "07054858",
	"publication_date": "2006-05-30",
	"application_number": "09920790",
	"application_date": "2001-08-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for mapping between markup language document and an object model",
	"summary": "",
	"abstract": "Mapping operations between a markup language document and an object model are executed in response to a request from a client application. The mapping operations include a read, write, update, or delete operation. To map the markup language document to the object model, mapping meta-data is used, which contains information as to how the markup language element maps to an attribute and/or a relationship of the object model.",
	"url": null,
	"owner": "OIC Acquisition I Corp",
	"publication_number": "07089533",
	"publication_date": "2006-08-08",
	"application_number": "09920786",
	"application_date": "2001-08-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for managing bi-directional relationships between objects",
	"summary": "",
	"abstract": "A bi-directional relationship manager is described for setting a new reference value for managing bi-directional relationships between objects in an object model. The bi-directional relationship manager receives bi-directional relationship information indicating interrelation between objects having one or more bi-directional relationships. It creates proxy objects based on the bi-directional relationship information for selected bi-directional relationship objects having bi-directional relationships. A created proxy object receives a new reference value to be set in a selected object relating to a bi-directional relationship. It determines, using one or more of the proxy objects, a new peer value to be set in a peer object which has the bi-directional relationship with the selected object, and sets the new peer value to a proxy object created for the peer object. It may also update reference values of other related objects that are related to the selected object through one or more bi-directional relationships to reflect the change in references.",
	"url": null,
	"owner": "OIC Acquistion I Corporation",
	"publication_number": "07020659",
	"publication_date": "2006-03-28",
	"application_number": "09930800",
	"application_date": "2001-08-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mobile branch exchange",
	"summary": "",
	"abstract": "A mobile branch exchange (MBX) allows a user of a mobile telephone to exploit the functionality of a private branch exchange (PBX) as if the user were using a PBX-connected wire line telephone in an office setting. A server is placed on corporate premises and the server is configured to communicate with corresponding client software programmed into a programmable mobile telephone. The server directly interfaces with the PBX to control call placement and connectivity and operates as an intermediary proxy for the mobile telephone. In a preferred embodiment, the server establishes a data pathway to the mobile telephone that is, from a network point of view, independent of a parallel voice pathway established between the PBX and mobile telephone.",
	"url": null,
	"owner": "Onrelay Inc.",
	"publication_number": "06993360",
	"publication_date": "2006-01-31",
	"application_number": "10000492",
	"application_date": "2001-12-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Server system and method for distributing and scheduling modules to be executed on different tiers of a network",
	"summary": "",
	"abstract": "A component distribution server (CDS) system connected to at least one network through at least one respective network interface includes: a package specification process that receives at least one package, the packages being subparts of at least one application program from at least one enterprise information system (EIS), the packages having at least one assets, each asset having an asset type and at least two asset layers, a first asset layer being a logic/data layer and a second asset layer being an extended environment layer, the logic/data layer having information that includes a function of the asset and the extended environment layer being a subset of the EIS and having portions of the EIS necessary to support the respective logic/data layer; a process adapter process that translates at least one of the assets layers so that the asset performs the asset function on at least one target base environment of at least one target computer; and a target process that changes the at least one of the layers of the asset in order to provide specific information for at least one of the specific target computers, whereby a transformed asset is an asset that is translated by the process adapter process and changed by the target process.",
	"url": null,
	"owner": "OP40, Inc.",
	"publication_number": "07136857",
	"publication_date": "2006-11-14",
	"application_number": "09946980",
	"application_date": "2002-07-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for controlling network connections based on destination locations",
	"summary": "",
	"abstract": "Techniques for controlling a network connection in accordance with connection information associated with a destination location on a network are disclosed. Controlling of the network connection in accordance with connection information associated with the destination location can be achieved in a variety of ways. One way is in the selection of a network transport (e.g., bearer selection). Another way is in the configuration of parameters associated with the connection (i.e., connection parameters). In either case, the connection information includes information with which the selection of the network transport and/or connection parameters can be made. The controlling of the network connection impacts quality of service provided to a requestor that is requesting use of the connection.",
	"url": null,
	"owner": "Openwave Systems Inc.",
	"publication_number": "07010603",
	"publication_date": "2006-03-07",
	"application_number": "09135230",
	"application_date": "1998-08-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for developing web services using standard logical interfaces to support multiple markup languages",
	"summary": "",
	"abstract": "The Web Services Development Kit (WSDK) comprises a set of build-time tools and run-time components designed to support the development of web services and the interface to those services. WSDK provides a framework for the development of web services that isolates developers from the implementation details of the markup and transport layers, by separating the logical aspects of the service development from the physical aspects. A u201ccallu201d generated by a client contains a batch of operations to be executed in the context of a single request/reply message exchange. A markup library translates logical structure to a specific markup language. Additional markup languages are supported by adding additional modules to the markup library.",
	"url": null,
	"owner": "Openwave Systems Inc.",
	"publication_number": "07127700",
	"publication_date": "2006-10-24",
	"application_number": "10251515",
	"application_date": "2002-09-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer-based pre-execution analysis and verification utility for shell scripts",
	"summary": "",
	"abstract": "A method and apparatus for verifying shell scripts is provided. According to one aspect of the invention, prior to executing a shell script, one or more syntactic verification checks are performed on the shell script that verify conformance of the shell script to a set of syntactic guidelines. In addition, still prior to executing the shell script, one or more semantic verification checks are performed on the shell script that verify conformance of the shell script to a set of semantic guidelines. Still further, the method and apparatus may also include steps for, prior to executing the shell script, performing one or more coding organizational guideline verification checks that verify conformance of the shell script to a set of one or more coding organizational guidelines.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07003765",
	"publication_date": "2006-02-21",
	"application_number": "10020088",
	"application_date": "2001-12-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Customizing content provided by a service",
	"summary": "",
	"abstract": "A method and apparatus for providing a network based operating system for mobile clients is disclosed. Services may be developed that can be used to support different client devices with different capabilities. The services provide output with multiple variations based on different devices, and an intermediary selects the variation best suited for the requesting device. An online software development system is provided to allow services to create, edit, test, and deploy applications at an intermediary using only a browser at the client end. Services may also be provided that can be accessed and referred to by other services, thereby facilitating the combining of different services. Services may also store and access data at an intermediary using variables and a mapping of the stored data to the variables. Data stored at the intermediary may be used to allow an end user to return to a previously accessed service.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07089295",
	"publication_date": "2006-08-08",
	"application_number": "09948057",
	"application_date": "2001-09-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Determining a user's groups",
	"summary": "",
	"abstract": "The present invention is directed to technology for determining the set of groups that a user is a member of. A user can be a static member, dynamic member or nested member of a group. A user is a nested member of a first group if that user is a member of a second group and the second group is a member of the first group. There can be multiple levels of nesting. For example, an entity can be a nested member of a first group if that entity is a member of a second group, which is a member of a third group, which is a member of a fourth group, which is a member of the first group. The present invention can determine the groups for which the user is a static member, dynamic member or nested member.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07085834",
	"publication_date": "2006-08-01",
	"application_number": "09999177",
	"application_date": "2001-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Developing applications online",
	"summary": "",
	"abstract": "A method and apparatus for providing a network based operating system for mobile clients is disclosed. Services may be developed that can be used to support different client devices with different capabilities. The services provide output with multiple variations based on different devices, and an intermediary selects the variation best suited for the requesting device. An online software development system is provided to allow services to create, edit, test, and deploy applications at an intermediary using only a browser at the client end. Services may also be provided that can be accessed and referred to by other services, thereby facilitating the combining of different services. Services may also store and access data at an intermediary using variables and a mapping of the stored data to the variables. Data stored at the intermediary may be used to allow an end user to return to a previously accessed service.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07127705",
	"publication_date": "2006-10-24",
	"application_number": "09948056",
	"application_date": "2001-09-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Handling callouts made by a multi-threaded virtual machine to a single threaded environment",
	"summary": "",
	"abstract": "Techniques are provided for making call outs from a multi-threaded virtual machine to a server running in a master native thread. When a virtual machine thread that is not running in the master native thread (a u201cnon-master VM threadu201d) encounters code that requires a call to be made to a server routine, the non-master VM thread transfers control to the master native thread for making the call. The master native thread is then used to make the call out to the specified server routine. If the call returns without an error, then the non-master VM thread switches back to using a non-master native thread.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "06996829",
	"publication_date": "2006-02-07",
	"application_number": "09730803",
	"application_date": "2000-12-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing speech recognition resolution on an application server",
	"summary": "",
	"abstract": "A method of providing speech recognition resolution on an application server in a communication network includes receiving an utterance from an end-user, for example, at a Voice Gateway in response to a prompt by an application prompt, capturing the utterance, and dispatching it via the application server to a speech recognition provider. The method further includes performing item-matching via a search algorithm, returning items matching the utterance to the application server, and returning relevant utterance matches to the application, for example, on the Voice Gateway, for communication to the user.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07016845",
	"publication_date": "2006-03-21",
	"application_number": "10449174",
	"application_date": "2003-05-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Persistent agents",
	"summary": "",
	"abstract": "Object persistence is facilitated by introducing persistent agents to act as bridges between the programming model and the database model. Persistent agents are instantiated on a per-class basis and are responsible for mapping their class to a suitable database related. Methods are defined for the persistent agent to specify database-specific properties and optimization hints.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07024656",
	"publication_date": "2006-04-04",
	"application_number": "09577967",
	"application_date": "2000-05-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Persistent key-value repository with a pluggable architecture to abstract physical storage",
	"summary": "",
	"abstract": "A system and techniques are described for managing key-value pairs using an architecture that does not restrict its users to any specific platform or storage subsystem. According to one aspect of the invention, the repository is portable in that the architecture need not change based on the environment and platform in which the repository is used. Rather, the portion of the architecture that is platform-specific is limited to plug-ins at a storage abstraction layer of the repository. The plug-ins expose the same storage abstraction interface to the other layers of the repository, but are implemented to interact with different platforms and storage subsystems. Consequently, in response to being ported from one platform to another, the repository may simply change the plug-in to invoke for persistent storage operations.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07096213",
	"publication_date": "2006-08-22",
	"application_number": "10253088",
	"application_date": "2002-09-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Platform-independent programmable batch processing engine",
	"summary": "",
	"abstract": "A data processing system includes a multitude of client computers and server computers, of various platform types, interconnected by a network. A batch processing engine permits an application resident on a client computer to specify processing to be performed by one or more of the computers connected to the network, regardless of the platform type of such computers. The batch processing engine is implemented in part by middleware.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07085803",
	"publication_date": "2006-08-01",
	"application_number": "10007547",
	"application_date": "2001-11-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for online analytical processing",
	"summary": "",
	"abstract": "A system and method for analyzing data is described, in which an application programming interface (API) is provided to permit an online analytical processing (OLAP) application to manipulate data and queries in a model close to the business model the OLAP application was designed to support. A data server is provided to translate between the object-oriented representation and the native database query format. In one embodiment, a multidimensional virtual cursor is implemented to further simplify the logic of the OLAP application.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07010523",
	"publication_date": "2006-03-07",
	"application_number": "10738789",
	"application_date": "2003-12-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Techniques for debugging computer programs involving multiple programming languages",
	"summary": "",
	"abstract": "Techniques for debugging a computer program that includes multiple modules written in multiple languages allow machines for the multiple languages to interface with a single debugger client using a standard interface. The techniques include storing a mapping that maps language constructs of a first language into language constructs of a second language. While a first machine is executing a first module that is written in the first language, the mapping is used to generate debugging information based on language constructs of the second language. The debugging information is sent to a debugger process designed for debugging programs written in the second language.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07107578",
	"publication_date": "2006-09-12",
	"application_number": "10144144",
	"application_date": "2002-05-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Techniques for navigating in mobile applications",
	"summary": "",
	"abstract": "Techniques for interacting with a client process on a mobile device connected to a network over a wireless link to navigate an application includes managing information at a mobile application server executing on a platform connected to the network. The information includes first data describing a graphical element for display on the mobile device. The first data also includes a first reference to the graphical element and a second reference to a page associated with requesting a service from a first application. Second data, based on the first data, is sent to the client process for rendering the graphical element on the mobile device. The second data includes the first reference. Third data is received indicating the first reference in response to a user of the mobile device selecting the graphical element. In response to receiving the third data, the page from the first application is requested based on the second reference. This page by page navigation leaves more room in the limited memory of the mobile device to present the user with more options than is often possible using either cookies or URLs with parameter information, as in the conventional approaches.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07051080",
	"publication_date": "2006-05-23",
	"application_number": "09872986",
	"application_date": "2001-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Techniques for programming event-driven transactions in mobile applications",
	"summary": "",
	"abstract": "Techniques for interacting with a client process on a mobile device connected to a network over a wireless link include receiving, at a mobile interactions server, a first message from the client process. The first message indicates a first action by a user of the mobile device. The first action is related to a first graphical element displayed on the device for requesting a service from an application. Based on the first message, it is determined whether the action is associated with an event type of a plurality of predetermined event types. If it is determined the action is not associated with the event type, then, without invoking any method of the application, first data is generated. The first data describes any change in the first graphical element. The first data is sent to the client process for changing the display of the first graphical element.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07013329",
	"publication_date": "2006-03-14",
	"application_number": "09872978",
	"application_date": "2001-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Techniques for rewriting XML queries directed to relational database constructs",
	"summary": "",
	"abstract": "Techniques for executing database commands include receiving a database command that includes an XML component operation that operates on an XML construct that is based on a first set of one or more relational database constructs. It is determined whether the XML component operation can be transformed to a relational database operation on a particular set of one or more relational database constructs of the first set, which does not involve the XML component operation. If it is determined that the XML component operation can be transformed, then the XML component operation is rewritten as a particular relational database operation that operates on the particular set and that does not involve the XML component operation. The particular relational database operation is evaluated. In another aspect, techniques include determining a primitive set of XML generation operations and replacing non-primitive XML generation operations with one or more operations from the primitive set.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07120645",
	"publication_date": "2006-10-10",
	"application_number": "10428878",
	"application_date": "2003-05-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Techniques for supporting application-specific access controls with a separate server",
	"summary": "",
	"abstract": "Techniques for supporting access controls on application-specific operations performed by an application include receiving first data at a server distinct from the application. The first data describes a first set of privileges for performing a first set of application-specific operations. Second data is also received at the server. The second data associates a first user of the application with a privilege in the first set of privileges. In response to receiving a request at the server from the application, it is determined whether a particular user may have the application perform a particular application-specific operation based on the first data and the second data. The request indicates the particular user and the particular application-specific operation. A response is sent to the application. The response indicates whether the particular user may have the application perform the particular application-specific operation.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07020653",
	"publication_date": "2006-03-28",
	"application_number": "10364610",
	"application_date": "2003-02-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automated processing of appropriateness determination of content for search listings in wide area network searches",
	"summary": "",
	"abstract": "A method and system for improving the efficiency of a database processing system for evaluating candidate data items representing search listings that are submitted for inclusion into a search engine database. Candidate search listings are automatically assessed for quality, style, and relevance to evaluate risk of unfavorable reception by a user and of potential exposure volume. Search listings which are higher-risk or higher-volume are routed through manual editorial review while lower-risk, lower-volume search listings are routed for immediate inclusion in the search database without manual editorial evaluation. Accordingly, human editorial efforts can be devoted to manual review of high-risk or high-volume search listings while efficiency is simultaneously improved in the processing system as a whole.",
	"url": null,
	"owner": "Overture Services Inc.",
	"publication_number": "06983280",
	"publication_date": "2006-01-03",
	"application_number": "10244051",
	"application_date": "2002-09-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Portable authorization device for authorizing use of protected information and associated method",
	"summary": "",
	"abstract": "An authorization system and associated method for selectively authorizing a host system to use one or more items of protected information associated with the host system. The authorization system includes a portable authorization device that is removably couplable to the host system. The portable authorization device is capable of receiving and storing multiple items of authorization information associated with a plurality of respective items of protected information from one or more information authorities. Preferably, the portable authorization device is capable of communicating with multiple types of information authorities. The portable authorization device selectively authorizes the host system to use the one or more respective items of protected information based upon the respective authorization information stored therein.",
	"url": null,
	"owner": "Pace Anti-Piracy, Inc.",
	"publication_number": "07032240",
	"publication_date": "2006-04-18",
	"application_number": "09503778",
	"application_date": "2000-02-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "N-way synchronization of computer databases",
	"summary": "",
	"abstract": "A method and system for N-way synchronization of computer databases. Synchronization of computer databases is structured into three rounds, namely an agenda round, a query round and a report round. In the agenda round, a synchronization agent software module inquires of a common synchronization engine for updates to the agent's database and provides information as to the level of information in the agent's database. During a query round, a common synchronization engine may request information from databases with new information and distribute that database information to databases needing the new information during a report round. Multiple agents, each representing an associated database may participate a synchronization. In addition, various special purpose agents may also receive, provide and otherwise operate on synchronization information.",
	"url": null,
	"owner": "Palmsource, Inc.",
	"publication_number": "07139748",
	"publication_date": "2006-11-21",
	"application_number": "10159688",
	"application_date": "2002-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application manager for monitoring and recovery of software based application processes",
	"summary": "",
	"abstract": "A constant monitoring and recovery system that enables the measurement of task usage/metrics and performance of software-based business applications. These metrics can then be evaluated by logic, in combination with each other and/or a timer, in a distributed environment. This is accomplished with the introduction of an extremely low overhead to the application host. The results of the logic evaluation can cause real-time and real-world responses such as application restart, interaction with load balancing equipment, or notification (via email, pager, etc.). Data can also be persisted to a database for later archival or evaluation, with the ability to reduce granularity over time. Specifically, an application manager monitors business application processes, notifies failure and automatically recovers software based business applications based on the logic of the underlying applications. The application manager comprises three main components that work together: Instrumentation API for setting up monitoring parameters; Event Notification and Automatic Recovery Evaluation Engine; Monitoring Console Server.",
	"url": null,
	"owner": "Path Communications, Inc.",
	"publication_number": "07028225",
	"publication_date": "2006-04-11",
	"application_number": "09964265",
	"application_date": "2001-09-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system to print via email",
	"summary": "",
	"abstract": "A system and method that enables users operating originating devices, such as PC's, laptop computers, PDA's, pocket PC's, cell phones, etc., to print documents, images, etc. by sending the content to be printed via an e-mail message. The e-mail message is sent to a virtual printer e-mail address hosted by an e-mail server. The e-mail message is retrieved by a u201cdriverlessu201d print server (DPS) system, separated into a main file and attachment files, and printed on a printer to which the virtual printer e-mail address corresponds. The DPS system utilizes a table driven mechanism to determine appropriate applications to laod and process and handle various printer events generated by various software applications pertaining to the documents desired to be printed by operators of the originating devices. The system and method enable documents and the like to be printed without requiring a printer device driver corresponding to the target printer to be loaded on the originating device.",
	"url": null,
	"owner": "Peerless Systems Corporation",
	"publication_number": "06993562",
	"publication_date": "2006-01-31",
	"application_number": "10104528",
	"application_date": "2002-03-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing lodging reservations data",
	"summary": "",
	"abstract": "A system for providing reservation data is presented. The system includes a reservation data system interface that receives reservation data, such as the availability of rooms and rates for such rooms, and update data, such as when rates change or rooms are reserved, from two or more reservation systems, such as central reservation systems for two or more different hotels. A master reservation system receives the reservation data from the reservation data interface and stores the reservation data in a database, and updates the database with the update data. A user interface system coupled to the master reservation system receives reservation request data and provides updated reservation data in response to the reservation request data.",
	"url": null,
	"owner": "Pegasus Solutions, Inc.",
	"publication_number": "07076451",
	"publication_date": "2006-07-11",
	"application_number": "09862865",
	"application_date": "2001-05-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic web page cache",
	"summary": "",
	"abstract": "A Web page cache that stores Web pages such that servers will be able to retrieve valid dynamic pages without going to a dynamic content server or origin Web server for the page every time a user requests that dynamic page. The dynamic content cache receives information that defines data upon which each dynamic page is dependent, such that when the value of any dependency data item changes, the associated dynamic page is marked as invalid or deleted. The dynamic page cache stores dependency data, receives change event information, and indicates when pages in the cache are invalidated or need to be refreshed.",
	"url": null,
	"owner": "Persistence Software, Inc.",
	"publication_number": "07096418",
	"publication_date": "2006-08-22",
	"application_number": "09591986",
	"application_date": "2000-06-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for digital document processing",
	"summary": "",
	"abstract": "Display technologies that separate the underlying functionality of an application program from the graphical display process, thereby eliminating or reducing the application's need to control the device display and to provide graphical user interface tools and controls for the display. Additionally, such systems reduce or eliminate the need for an application program to be present on a processing system when displaying data created by or for that application program, such as a document or video stream. Thus it will be understood that in one aspect, the systems and methods described herein can display content, including documents, video streams, or other content, and will provide the graphical user functions for viewing the displayed document, such as zoom, pan, or other such functions, without need for the underlying application to be present on the system that is displaying the content. The advantages over the prior art of the systems and methods described herein include the advantage of allowing different types of content from different application programs to be shown on the same display within the same work space.",
	"url": null,
	"owner": "Picsel Technologies Limited",
	"publication_number": "07036076",
	"publication_date": "2006-04-25",
	"application_number": "09835484",
	"application_date": "2001-04-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Registry monitoring system and method",
	"summary": "",
	"abstract": "A registry monitoring method particularly applicable to a system () in which protected data is transmitted to a recipient computer. The method comprises requesting a handle for a registry key to a calling process, requesting a registry key value for the handle, modifying and deleting keys and values of protected data locations, and obtaining security clearance to complete the requests by checking secured process lists and rejection lists. Also included are a registry monitoring system, a secured data transmission system including registry monitorings, a machine-readable medium comprising a program to monitor a registry (), and a computer configured to monitor a registry ().",
	"url": null,
	"owner": "Pinion Software, Inc.",
	"publication_number": "07096326",
	"publication_date": "2006-08-22",
	"application_number": "09701200",
	"application_date": "2000-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data exchange between computer aided design systems",
	"summary": "",
	"abstract": "A user emulation module is operable to emulate generating a feature by a user by issuing graphical user interface based commands in a computer aided design system associated with either a source technical system or a target technical system. An associated pattern recognition module is operable to analyze a parametric feature definition from the source technical system and identify one or more parametric feature definitions in the target technical system that achieve an equivalent result.",
	"url": null,
	"owner": "Proficiency Solutions Ltd.",
	"publication_number": "07099803",
	"publication_date": "2006-08-29",
	"application_number": "09655540",
	"application_date": "2000-09-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for edge correlation between design objects",
	"summary": "",
	"abstract": "Computer implemented techniques for edge correlation between design objects in computer-aided design systems are provided. According to one embodiment, a source edge is exported from a source CAD system into a data representation in a global scene. The global scene is imported into a target CAD system so that one or more candidate target edges can be identified. Once the candidate target edges are identified, they are exported into a data representation of a local scene. Through a series of techniques, which can include an edge overlap algorithm, a region containment algorithm, an edge containment algorithm, and an edge extension algorithm, non-overlapping candidate target edges are removed from the local scene until a correlated set of target edges is produced. Design features, such a round or chamfer operation, can then be performed in the target CAD system on the correlated set of edges, just as they are in the source CAD system.",
	"url": null,
	"owner": "Proficiency Solutions Ltd.",
	"publication_number": "06985835",
	"publication_date": "2006-01-10",
	"application_number": "09655547",
	"application_date": "2000-09-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Telephone call screening system and method and caller registration system and method for use therewith",
	"summary": "",
	"abstract": "A telephone call screening system screens telephone calls placed to a subscriber based upon a preferred caller database established by the subscriber from a networked caller registry database. A caller registration system allows callers to select a private identifier unique to the caller and registers the callers in a caller registry database. The subscriber establishes the preferred caller database by connecting to the caller registration system and selecting the preferred callers. The private identifiers associated with the selected preferred callers are then stored in the preferred caller database. When a caller calls the subscriber, the caller is asked to enter the caller's private identifier. A caller disposition process is initiated based on whether the private identifier is in the preferred caller database.",
	"url": null,
	"owner": "Prologue Communications, Inc.",
	"publication_number": "07027569",
	"publication_date": "2006-04-11",
	"application_number": "10073605",
	"application_date": "2002-02-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Safe application distribution and execution in a wireless environment",
	"summary": "",
	"abstract": "The present invention provides safe and secure application distribution and execution by providing systems and methods that test an application to ensure that it satisfies predetermined criteria associated with the environment in which it will execute. Furthermore, by using rules and permission lists, application removal, and a modification detection technique, such as digital signatures, the present invention provides mechanisms to safely distribute and execute tested, or untested, applications by determining whether the application has been modified, determining if it has permission to execute in a given wireless device environment, and removing the application should it be desirable to do so.",
	"url": null,
	"owner": "Qualcomm Inc.",
	"publication_number": "07099663",
	"publication_date": "2006-08-29",
	"application_number": "09872418",
	"application_date": "2001-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for handshaking between wireless devices and servers",
	"summary": "",
	"abstract": "A system, method, and computer program for data communication, or u201chandshaking,u201d between wireless devices and a server on a wireless network. Upon a wireless device communicating with the server, the server obtains data from the wireless device indicative of wireless device attributes, and the server determines access of the wireless device, based upon the wireless device attributes, to applications either resident on that server or on other computer devices on the wireless network.",
	"url": null,
	"owner": "Qualcomm Inc.",
	"publication_number": "07139559",
	"publication_date": "2006-11-21",
	"application_number": "10315800",
	"application_date": "2002-12-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for licensing applications on wireless devices over a wireless network",
	"summary": "",
	"abstract": "A system and method for controlling software applications on one or more wireless devices where each wireless device is in selective communication with one or more application managing servers over a wireless network. Each wireless device has one or more selectively executable resident software applications and at least one software application requires a valid license for each execution, and upon the attempted execution of a software application, the wireless device determines if a license is present. If a license is not present, the wireless device selectively prompts, either automatically or at the direction of the user of the wireless device, an application managing server for transmission of a license, receives the transmitted license, and installs the license on the wireless device such that the software application is again licensed and executable.",
	"url": null,
	"owner": "Qualcomm Inc.",
	"publication_number": "07120429",
	"publication_date": "2006-10-10",
	"application_number": "09929174",
	"application_date": "2001-08-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing an interactive screen on a wireless device interacting with a server",
	"summary": "",
	"abstract": "A system and method for displaying an interactive screen, such as an end-user license agreement or verification form, on the graphic display of a wireless device when the wireless device connects to a network server on a wireless network and attempts to access or download software applications and data. The user of the wireless device must then affirmatively interact with the interactive screen in order to access or download a software application or data from the network server. The interactive screen can be transmitted from the network server where the wireless device seeks to access or download an application or data, or can be transmitted from a separate server to the wireless device. The records of the wireless device-server interactions can be stored on a network server or other data stores on the wireless network.",
	"url": null,
	"owner": "Qualcomm Inc.",
	"publication_number": "07065388",
	"publication_date": "2006-06-20",
	"application_number": "10689969",
	"application_date": "2003-10-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Test enabled application execution",
	"summary": "",
	"abstract": "Systems and methods consistent with the present invention provides safe and secure application distribution and execution and controls the risk of providing a test environment associated with the testing of applications. Test enabled permissions are created and distributed to selected application test entities. A management function is used to aid in distributing the test-enabled permissions. The risk is controlled by providing closer scrutiny of the identity of the test entity prior to distributing a test enabled permission to the test entity, providing expiration times associated with the test enabled permissions, and limiting the number of test enabled permissions distributed. The management function tracks the distribution of the test-enabled permissions.",
	"url": null,
	"owner": "Qualcomm Inc.",
	"publication_number": "07096004",
	"publication_date": "2006-08-22",
	"application_number": "10222705",
	"application_date": "2002-08-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enhanced user privacy for mobile station location services",
	"summary": "",
	"abstract": "A method and apparatus for enhanced user control of location information for mobile devices. The method and apparatus provide user control within the mobile station of privacy policies that supervise responses to requests for location information. In an exemplary embodiment the mobile station includes a Privacy Engine, a Position Determination Module, and a User Interface. The Privacy Engine is a software module that controls the responses of the mobile station to location requests. The Privacy Engine preferably includes a Privacy Policy that may be modified by the mobile station user by means of wireless downloads, the User Interface, or by locally connected devices such as a personal computer, personal digital assistant, or laptop. Advantageously, the Privacy Engine or the Privacy Policy may be downloaded to the mobile station by means of a wireless data network or other data connection such as Bluetooth, infrared connection, Universal Serial Bus, etc.",
	"url": null,
	"owner": "Qualcomm Incorporated",
	"publication_number": "07088237",
	"publication_date": "2006-08-08",
	"application_number": "10779109",
	"application_date": "2004-02-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Server processing in providing messages for a wireless device connecting to a server",
	"summary": "",
	"abstract": "A system and method for providing a message on the graphic display of a wireless device while the wireless device is connecting to an application download server across a wireless network. When the wireless device attempts to communicate with an application download server or changes files while navigating an application download server, a message is transmitted across the wireless network to the computer platform of the wireless device and displayed to the user of the wireless device. The message can be transmitted to the wireless device from the same application download server that the wireless device is attempting to connect to or navigate, or alternately, the message can be transmitted from another server on the wireless network.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "06996394",
	"publication_date": "2006-02-07",
	"application_number": "10232910",
	"application_date": "2002-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Server processing of interactive screens for a wireless device",
	"summary": "",
	"abstract": "A system and method for displaying an interactive screen, such as an end-user license agreement or verification form, on the graphic display of a wireless device when the wireless device connects to a network server on a wireless network and attempts to access or download software applications and data. The user of the wireless device must then affirmatively interact with the interactive screen in order to access or download a software application or data from the network server. The interactive screen can be transmitted from the network server where the wireless device seeks to access or download an application or data, or can be transmitted from a separate server to the wireless device. The records of the wireless device-server interactions can be stored on a network server or other data stores on the wireless network.",
	"url": null,
	"owner": "Qualcomm Incorporated",
	"publication_number": "07039398",
	"publication_date": "2006-05-02",
	"application_number": "10232917",
	"application_date": "2002-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing subscribed applications on wireless devices over a wireless network",
	"summary": "",
	"abstract": "A system and method for the provision of downloadable subscription-based software applications to one or more wireless devices where the applications are downloadable from one or more application download servers across a wireless network. An accounting module receives subscription-based application download data from the one or more application download servers for each subscription-based application downloaded by a wireless device, and subscription-based application deletion data from each wireless device that has deleted a subscription-based application. The accounting module accounts for the use of the subscribed software applications based upon the subscription-based software application download data and subscription-based application deletion data.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "06996537",
	"publication_date": "2006-02-07",
	"application_number": "09929220",
	"application_date": "2001-08-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and program for an improved enterprise spatial system",
	"summary": "",
	"abstract": "Disclosed is a method, system, and program for providing access to spatial data. A request for data is received. Enterprise and third party data are integrated. The integrated data is processed. Spatially referenced results are generated using the processed data. The spatially referenced results are returned in response to the request.",
	"url": null,
	"owner": "Questerra Corporation",
	"publication_number": "07107285",
	"publication_date": "2006-09-12",
	"application_number": "10388666",
	"application_date": "2003-03-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing a codec engine for memory compression/decompression operations using a data movement engine",
	"summary": "",
	"abstract": "A system and method for managing a functional unit in a system using a data movement engine. An exemplary system may comprise a CPU coupled to a memory controller. The memory controller may include or couple to a data movement engine (DME). The memory controller may in turn couple to a system memory or other device which includes at least one functional unit. The DME may operate to transfer data to/from the system memory and/or the functional unit, as described herein. In one embodiment, the DME may also include multiple DME channels or multiple DME contexts. The DME may operate to direct the functional unit to perform operations on data in the system memory. For example, the DME may read source data from the system memory, the DME may then write the source data to the functional unit, the functional unit may operate on the data to produce modified data, the DME may then read the modified data from the functional unit, and the DME may then write the modified data to a destination in the system memory. Thus the DME may direct the functional unit to perform an operation on data in system memory using four data movement operations. The DME may also perform various other data movement operations in the computer system, e.g., data movement operations that are not involved with operation of the functional unit.",
	"url": null,
	"owner": "Quickshift, Inc.",
	"publication_number": "07089391",
	"publication_date": "2006-08-08",
	"application_number": "10227607",
	"application_date": "2002-08-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Fiber optic internet protocol network interface device and methods and systems for using the same",
	"summary": "",
	"abstract": "A network interface device located at a customer's premises includes an external interface that receives a plurality of telecommunication services via a fiber optic connection from a telecommunication service provider. The services are received using Internet Protocol. The network interface device also includes at least two distinct internal interfaces that distribute the plurality of telecommunication services to at least two distinct internal transport media. The network interface device also includes a processor that is programmed to receive combined signals comprising the telecommunication services from the external interface, process the combined signals into separate signals representative of distinct telecommunication services, and map each of the separate signals to separate ones of the at least two distinct internal interfaces for distribution at the customer's premises via the internal transport media.",
	"url": null,
	"owner": "Qwest Communications International Inc.",
	"publication_number": "07099443",
	"publication_date": "2006-08-29",
	"application_number": "10715879",
	"application_date": "2003-11-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for distributing access to group of objects based on round robin algorithm and only when the object is available",
	"summary": "",
	"abstract": "Object distribution systems and methods for controlling load distribution during access to objects resident on a plurality of computers attached to a communication network. Systems comprise client and server computers attached to a communication network. Client programs are resident on the client computer and objects are resident on the servers. Various objects are grouped together with other objects that perform similar functions into an object group. The methods involve receiving a request for a function performed by objects within the object group, using a distributor to select between the various objects within the object group, and providing a reference to the selected object to the client program.",
	"url": null,
	"owner": "Qwest Communications International, Inc.",
	"publication_number": "07043731",
	"publication_date": "2006-05-09",
	"application_number": "09905384",
	"application_date": "2001-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for controlling data transfer rates on a network",
	"summary": "",
	"abstract": "Data transfer rates on a network are controlled in conjunction with TCP/IP protocols by limiting the available space in a receive buffer located on the receiver. Limits are generated by either moderating the rate that data is removed from the receive buffer or changing the receive buffer's size. Transfer rates are reduced to decrease the impact large transfers have on other network traffic and to reduce the total number of lost data packets. Reduced rates and priorities can be managed by scheduling systems.",
	"url": null,
	"owner": "Radiance Technologies, Inc.",
	"publication_number": "07142508",
	"publication_date": "2006-11-28",
	"application_number": "09853816",
	"application_date": "2001-05-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing access to databases via directories and other hierarchical structures and interfaces",
	"summary": "",
	"abstract": "A hierarchical/relational translation system is provided for enabling information from unrelated heterogeneous relational computing systems to be accessed, navigated, searched, browsed, and shared over a hierarchical computing system. In one embodiment, the hierarchical/relational translation system includes a virtual directory server for capturing information in the nature of relational database schema and metadata. The captured schema and metadata are then translated into virtual directories that are universally compatible with standard communication protocols used with hierarchical computing systems. A virtual directory of information organizes an index of data records and a standard addressing schema is provided to enable customizable access to relevant views of relational computing systems. Several embodiments for presenting the virtual directory information tree are included. In one embodiment, the virtual directory is displayed using browser format. In another embodiment, the virtual directory is presented in electronic mail format. Still, in another embodiment the virtual directory is presented over a wireless medium and through portable devices.",
	"url": null,
	"owner": "Radiant Logic Inc.",
	"publication_number": "06985905",
	"publication_date": "2006-01-10",
	"application_number": "09798003",
	"application_date": "2001-03-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for atomic file look-up",
	"summary": "",
	"abstract": "Method and apparatus for atomic file look-up. An atomic look-up operation allows an application to find out whether a file is opened atomically based on whether or not the file path is present in a file system namespace cache. If not, the file open request can be redirected, avoiding or minimizing impacts to the scheduling of various operations involved in executing an application. The request can be redirected by the application to a process that includes blocking point handling. An operating system according to the present invention includes a file system including a file system namespace, and an operating system kernel is operatively connected to the file system. The operating system kernel includes the file system namespace cache and the atomic look-up operation.",
	"url": null,
	"owner": "Red Hat, Inc.",
	"publication_number": "07082424",
	"publication_date": "2006-07-25",
	"application_number": "11054461",
	"application_date": "2005-02-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Use of transaction agents to perform distributed transactions",
	"summary": "",
	"abstract": "Use of transaction agents to perform distributed transactions. According to one embodiment of the invention a coordinator transaction agent that includes an itinerary and a state machine is instantiated. The itinerary indicates a plurality of network elements and the plurality of network elements is in communication with the coordinator transaction agent. The coordinator transaction agent causes itself to be replicated onto the plurality of network elements according to the itinerary. Each of the replicated transaction agents causing an indication of their replication to be communicated back to the coordinator transaction agent. The coordinator transaction agent coordinating operations of the state machine in each of the replicated transaction agents to implement a distributed state machine.",
	"url": null,
	"owner": "Redback Networks Inc.",
	"publication_number": "07124415",
	"publication_date": "2006-10-17",
	"application_number": "09903911",
	"application_date": "2001-07-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for remote conferencing via launching a web-based presentation sharing application based on code associated with the presentation sharing control",
	"summary": "",
	"abstract": "A system may include a user device to transmit a Web page request a server to transmit a Web page to the user device in response to the request, and a remote video source to receive a request for video data from the user device, and to transmit the video data directly to the user device. The request may be transmitted by the user device using code of the Web page.",
	"url": null,
	"owner": "Remote Meeting Technologies, Inc.",
	"publication_number": "07035899",
	"publication_date": "2006-04-25",
	"application_number": "10894329",
	"application_date": "2004-07-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for an extendable mobile communications device user interface",
	"summary": "",
	"abstract": "A system and method for an extendable software interface includes a software architecture for use in a mobile device having a processor and a memory device. The software architecture comprises a plurality of application programs stored in the memory device and executed by the processor, and at least one controller module for interfacing the plurality of application program with a one of a plurality of data objects stored in the memory device in the form of a data model. Each controller module utilizes one or more generic interfaces with the plurality of application programs, and also utilizes a specific interface with the data model.",
	"url": null,
	"owner": "Research In Motion Limited",
	"publication_number": "06990672",
	"publication_date": "2006-01-24",
	"application_number": "09897207",
	"application_date": "2001-07-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program product for contract consistency in a supply chain management framework",
	"summary": "",
	"abstract": "A system, method and computer program product are disclosed for handling contracts in a supply chain management framework. One of a plurality of contracts is selected. The selected contract template is transmitted to a supply chain participant. Data is received from supply chain participants utilizing a network. This data relates to the sale of products by the supply chain participants. The contract templates are then enforced in accordance with the data.",
	"url": null,
	"owner": "Restaurant Services, Inc.",
	"publication_number": "07039606",
	"publication_date": "2006-05-02",
	"application_number": "09816896",
	"application_date": "2001-03-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program product for error checking in a supply chain management framework",
	"summary": "",
	"abstract": "A system, method and computer program product are disclosed for forecasting the sale of goods. Data is received utilizing a network from a plurality of point of sale outlets of a supply chain where the data relates to an amount of goods sold by the point of sale outlets. The data is checked for errors. Each detected error is identified as either a point of sale set-up error, a point of sale entry error, a back office error, a polling error, or a menu item mapping error so that the data can be corrected using the identification.",
	"url": null,
	"owner": "Restaurant Services, Inc.",
	"publication_number": "07072843",
	"publication_date": "2006-07-04",
	"application_number": "09816413",
	"application_date": "2001-03-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program product for landed cost reporting in a supply chain management framework",
	"summary": "",
	"abstract": "A system, method and computer program product are disclosed for cost reporting using a network-based supply chain management framework. Data is received utilizing a network. This data relates to goods required by a plurality of stores including a product identifier parameter, and a first cost parameter. A second cost parameter associated with a franchise mark-up is also received so that a total cost can be calculated based on the first cost parameter and the second cost parameter. The total cost is displayed utilizing the network with TCP/IP protocol.",
	"url": null,
	"owner": "Restaurant Services, Inc.",
	"publication_number": "07120596",
	"publication_date": "2006-10-10",
	"application_number": "09816491",
	"application_date": "2001-03-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program product for utilizing market demand information for generating revenue",
	"summary": "",
	"abstract": "A system, method and computer program product are disclosed for risk management in a supply chain management framework. A supply chain manager is appointed for at least one buying supply chain participant. The supply chain manager is given authority to negotiate supply agreements for at least one good on behalf of the at least one buying supply chain participant. One or more supply agreements are entered into for the at least one good, wherein provisions of the supply agreement include: (i) pricing for each one good shall be based upon factors including an actual market price of at least one commodity when the supply chain manager has not established a commodity position price; and (ii) pricing for each one good shall be based upon factors including a commodity position price of at least one commodity when the supply chain manager has established a commodity position price. Periodically, a commodity position price is established through the supply chain manager.",
	"url": null,
	"owner": "Restaurant Services, Inc.",
	"publication_number": "07054837",
	"publication_date": "2006-05-30",
	"application_number": "10855877",
	"application_date": "2004-05-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Advanced, adaptive video multiplexer system",
	"summary": "",
	"abstract": "An advanced multiplexer designed and optimized for next generation on-demand video distribution is described. Features and capabilities include auto-discovery, channel-staggering and compatibility with static Virtual Channel Tables (VCTs). The multiplexer system facilitates auto-discovery by inserting identifiers into MPTSs (Multi-Program Transport Streams). These identifiers are echoed back to the multiplexer by the client set-top thereby indicating correspondence between modulators, service groups, and clients. When modulating multiple channels, FEC frames (Forward Error Correction frames) are staggered across channels to reduce correlation and clipping in the IFFT processor.",
	"url": null,
	"owner": "RGB Networks, Inc.",
	"publication_number": "06996129",
	"publication_date": "2006-02-07",
	"application_number": "11123559",
	"application_date": "2005-05-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for remote diagnostic, control and information collection based on various communication modes for sending messages to users",
	"summary": "",
	"abstract": "A method, system, and program product for communicating with machines and end users connected to a network. Information sent to or from the machines is transmitted using electronic mail or a via a direct connection. The electronic mail may be transmitted over the Internet to a service center or from a service center to a resource administrator, but also may remain within a local or wide area network for transmission between a machine and an end user or a resource administrator. E-mail messages may be transmitted from a computer which is attached to a device which is being monitored or controlled and include information regarding the status, usage or capabilities of the attached device. The device may send status messages and usage information of the device by an end user to either a resource administrator or to a service center on the Internet through a firewall. The message may be sent directly to the resource administrator station if an urgent need of the end user is indicated, so that a communication may be sent either directly to the end user or to a device driver so that the device driver may communicate the message to the end user. For example, an end user may have exceeded a predetermined limit of resource usage, and needs to be informed. For routine information, the service center may manage all the resources on an intranet and may send predetermined types of information such as summary information regarding usage of network resources to the end user using e-mail.",
	"url": null,
	"owner": "Ricoh Co., Ltd.",
	"publication_number": "07043551",
	"publication_date": "2006-05-09",
	"application_number": "10784831",
	"application_date": "2004-02-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Document-database access device",
	"summary": "",
	"abstract": "A document-database access device enables a WWW client to access a URL-linked document correctly and efficiently when accessing a document with a URL link if the document with the URL link and the URL-linked document are uploaded onto a document database, and also enables the WWW client to access each document under a particular folder by supplying different URL formats to the document for specifying an individual document even if documents with a single name exist under the particular folder.",
	"url": null,
	"owner": "Ricoh Company, Ltd.",
	"publication_number": "06993525",
	"publication_date": "2006-01-31",
	"application_number": "09648544",
	"application_date": "2000-08-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for resolving a discrepancy in a clinical data management system",
	"summary": "",
	"abstract": "A method for electronically resolving a discrepancy arising in a clinical data management system is provided. The discrepancy is converted, using a conversion map, from a back-end format, used to store a clinical value corresponding to the discrepancy, into a front-end format that is compatible with a front-end study definition. The discrepancy is then transferred, while in the front-end format, to a front-end site where the clinical value associated with the discrepancy was first entered. A discrepancy response is received from the front-end site. When the discrepancy response resolves the discrepancy, the discrepancy response is stored in the clinical data management system, thereby resolving the discrepancy.",
	"url": null,
	"owner": "Roche Palo Alto LLC",
	"publication_number": "07089247",
	"publication_date": "2006-08-08",
	"application_number": "10161103",
	"application_date": "2002-05-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mechanical-electrical template based method and apparatus",
	"summary": "",
	"abstract": "A method for identifying at least a section of a first schematic associated with at least a section of a second schematic wherein each of the first and second schematics includes a set of components for configuring a system to perform a process and wherein the components of the first and second schematics are first and second different types, respectively, the method comprising the steps of identifying the components of the first type included in the first section of the first schematic, examining the second schematic to identify at least one instance of components of the second type that are associated with the identified components of the first type and when at least one instance of components of the second type is identified, rendering the at least one instance accessible.",
	"url": null,
	"owner": "Rockwell Automation Technologies, Inc.",
	"publication_number": "06993456",
	"publication_date": "2006-01-31",
	"application_number": "10674588",
	"application_date": "2003-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Virtual line replaceable unit for a passenger entertainment system, method and article of manufacture",
	"summary": "",
	"abstract": "A system server is used to manage communication over a network between the system server and a plurality of physical devices of a passenger entertainment system. The system is configured and operated using software to provide passenger entertainment. The system server comprises software for instantiating a dispatch object to open a framework network addressable unit objects, for instantiating one or more virtual line replaceable unit objects to manage communication between a network address unit and physical devices, and for communicating network messages through the dispatch object to the physical devices. The dispatch object tracks messages to the physical devices utilizing a queue and tracks messages from the physical devices utilizing a queue. The dispatch object maintains the status of related devices. The dispatch object also adds and removes one or more of the virtual line replaceable units. The network addressable unit objects move data from one storage location to another.",
	"url": null,
	"owner": "Rockwell Collins",
	"publication_number": "07028304",
	"publication_date": "2006-04-11",
	"application_number": "09085068",
	"application_date": "1998-05-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Neural network for controlling calls in a telephone switch",
	"summary": "",
	"abstract": "A method and apparatus are provided for processing calls in an automatic call distributor. The method includes the steps of learning a set of desired resource relationships for servicing a plurality of call processing load conditions in the automatic call distributor and, afterwards, distributing resources of the automatic call distributor based upon call processor loading and the learned desired set of resource relationships.",
	"url": null,
	"owner": "Rockwell Electronic Commerce Technologies, LLC",
	"publication_number": "07110526",
	"publication_date": "2006-09-19",
	"application_number": "09172362",
	"application_date": "1998-10-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Access control systems and methods for motion control",
	"summary": "",
	"abstract": "A method of generating control commands to be executed by a motion control system under control of a plurality of system users to move an object in a desired manner. At least one restricted program element associated with the motion control system is identified. An application program used by the system users when controlling the motion control system is provided. The application program employs the at least one restricted program element. A plurality of access levels are determined. Each restricted program element is associated with one of the access levels. Each of the plurality of system users is associated with one of the access levels. Motion control commands are generated based on the application program, the access level of each system user, and the access level of each restricted program element.",
	"url": null,
	"owner": "Roy-G-Biv Corporation",
	"publication_number": "07035697",
	"publication_date": "2006-04-25",
	"application_number": "11063696",
	"application_date": "2005-02-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Event driven motion systems",
	"summary": "",
	"abstract": "A motion system comprising a motion enabled device, an event source, a plurality of message transceivers, and a motion services system. The motion enabled device performs motion operations based on motion commands. The event source generates motion messages upon the occurrence of events, where the motion messages correspond to motion operations. The motion messages are transmitted among the plurality of message transceivers. The motion services system maps motion messages transmitted between the plurality of message transceivers to motion commands based on motion operations corresponding to mapped motion messages. The motion services system performs motion operations based on motion commands corresponding to mapped motion messages.",
	"url": null,
	"owner": "Roy-G-Biv Corporation",
	"publication_number": "07024255",
	"publication_date": "2006-04-04",
	"application_number": "10923149",
	"application_date": "2004-08-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Event management systems and methods for the distribution of motion control commands",
	"summary": "",
	"abstract": "A motion control system for controlling a target device to perform a desired motion operation. The motion control system comprises at least one motion event provider, a motion event manager, and a motion control component. The motion event provider is configured to generate at least one event token upon the occurrence of at least one predetermined event. The event token is associated with at least one motion command. The motion event manager receives the at least one event token. The motion control component is adapted to transmit to the target device a control command based on the at least one motion command associated with the event token received by the motion event manager.",
	"url": null,
	"owner": "Roy-G-Biv Corporation",
	"publication_number": "07031798",
	"publication_date": "2006-04-18",
	"application_number": "10074577",
	"application_date": "2002-02-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Motion control systems and methods",
	"summary": "",
	"abstract": "A motion control system comprising a source application program, a target device, a parser, an emitter, a program engine, and a parser interface. The source application program is defined by a source language specification. The target device creates motion under control of application programs defined by a target language specification. The parser component contains logic for converting application programs defined by the source language specification into a generic format. An emitter component containing logic for converting application programs in the generic format into application programs defined by the target language specification. The program engine component directs the parser component to convert the source application program into a generic application program. The program engine component further directs the emitter component to convert the generic application program into a target application program defined by the target language specification. The parser interface defines communications between the parser component and the program engine component.",
	"url": null,
	"owner": "Roy-G-Biv Corporation",
	"publication_number": "07024666",
	"publication_date": "2006-04-04",
	"application_number": "10353604",
	"application_date": "2003-01-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Motion control systems and methods",
	"summary": "",
	"abstract": "A motion event system for transmitting events between a motion program and a motion device. The motion event system comprises a driver component, a motion component, and a motion event component. The driver component is associated with the motion device. The motion component allows communication between the motion program and the at least one driver component. The motion event component configures at least one of the driver component and the motion component to recognize events to be transmitted between the motion program and the motion device.",
	"url": null,
	"owner": "Roy-G-Biv Corporation",
	"publication_number": "07137107",
	"publication_date": "2006-11-14",
	"application_number": "10836031",
	"application_date": "2004-04-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methods for generating and communicating motion data through a distributed network",
	"summary": "",
	"abstract": "A control software system for generating and distributing motion media for operating a target motion device. The control software system generates the motion media based on a motion program generated at a content server. The control software system distributes the motion media to a client browser associated with the target motion device.",
	"url": null,
	"owner": "Roy-G-Biv Corporation",
	"publication_number": "07139843",
	"publication_date": "2006-11-21",
	"application_number": "10020838",
	"application_date": "2001-12-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for avoiding base address collisions using alternate components",
	"summary": "",
	"abstract": "Processes are monitored as components are loaded into memory. Relocation of a component to an alternate base address instead of its preferred base address, causes an alternate component to be created corresponding to the relocated component. The alternate component is a copy of the relocated component, but the preferred base address of the alternate component is reset to be the alternate base address of the relocated component. Additional alternate components may be created for each relocated component, with each additional alternate component being optimized in a different manner. Alternate components may be implemented as alternate data stream of the corresponding relocated components. In response to subsequent requests to load a selected component into memory, it is determined whether the selected component has at least one corresponding alternate component. If so, one of the corresponding alternate components is loaded into memory instead of the selected component.",
	"url": null,
	"owner": "RTO Sortware, Inc",
	"publication_number": "07058775",
	"publication_date": "2006-06-06",
	"application_number": "10719781",
	"application_date": "2003-11-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, apparatus and system for processing compliance actions over a wide area network",
	"summary": "",
	"abstract": "The method, apparatus and system are provided for obtaining information regarding compliance with local laws via client computers to upload information to a centralized server preferably over a wide area network. The data is obtained through interaction with a client device and the data is stored on a server. The server has access to a database engine which provides triggering and alarming capabilities for the tracking of applicable dates and events. The server system is provided with software and/or hardware necessary to perform manipulation of the data provided by the client and enable reconfiguration of the data for investigative and reporting purposes.",
	"url": null,
	"owner": "S.J. Bashen, Inc.",
	"publication_number": "06985922",
	"publication_date": "2006-01-10",
	"application_number": "10028235",
	"application_date": "2001-12-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for automatically generating code templates for communication via a predefined communication interface",
	"summary": "",
	"abstract": "A system and method for providing seamless communication with threads executing on an embedded computer. Using a DAT system, a programmer can test the communication interfaces of a thread via either a scripting program, any COM-compliant program, or a graphical test utility. The DAT system automatically formats a block of data that is transmitted between the embedded computer and a host computer and accounts for machine specific enumeration sizes, machine specific pointer sizes, machine specific structure alignment boundaries, machine specific integer sizes, and machine specific byte ordering.",
	"url": null,
	"owner": "S2 Technologies, Inc.",
	"publication_number": "07020867",
	"publication_date": "2006-03-28",
	"application_number": "10104997",
	"application_date": "2002-03-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for formatting data for transmission between an embedded computer and a host computer having different machine characteristics",
	"summary": "",
	"abstract": "A system and method for providing seamless communication with threads executing on an embedded computer. Using a DAT system, a programmer can test the communication interfaces of a thread via either a scripting program, any COM-compliant program, or a graphical test utility. The DAT system automatically formats a block of data that is transmitted between the embedded computer and a host computer and accounts for machine specific enumeration sizes, machine specific pointer sizes, machine specific structure alignment boundaries, machine specific integer sizes, and machine specific byte ordering.",
	"url": null,
	"owner": "S2 Technologies, Inc.",
	"publication_number": "07111302",
	"publication_date": "2006-09-19",
	"application_number": "10105061",
	"application_date": "2002-03-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing an interface for scripting programs to communicate with embedded systems",
	"summary": "",
	"abstract": "A system and method for providing seamless communication with threads executing on an embedded computer. Using a DAT system, a programmer can test the communication interfaces of a thread via either a scripting program, any COM-compliant program, or a graphical test utility. The DAT system automatically formats a block of data that is transmitted between the embedded computer and a host computer and accounts for machine specific enumeration sizes, machine specific pointer sizes, machine specific structure alignment boundaries, machine specific integer sizes, and machine specific byte ordering.",
	"url": null,
	"owner": "S2 Technologies, Inc.",
	"publication_number": "07062772",
	"publication_date": "2006-06-13",
	"application_number": "10104985",
	"application_date": "2002-03-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for a business applications server",
	"summary": "",
	"abstract": "The present invention provides a solution to the needs described above through a system and method for a business applications server. The automated system of the present invention uses a persistence framework to provide a process for saving and restoring state of business objects and for performing operations thereon, and metadata driven processes to dynamically define class properties and behavior for each class of business object, in order to control the execution of the required tasks with minimum use of redundant data input to the several applications, thereby minimizing the use of hardware resources and user input and programming effort.",
	"url": null,
	"owner": "Saba Software, Inc.",
	"publication_number": "07089583",
	"publication_date": "2006-08-08",
	"application_number": "09759497",
	"application_date": "2001-01-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for a business applications server management system platform",
	"summary": "",
	"abstract": "The present invention provides a system and method for integrating disparate business applications, and managing the applications processes in a hardware resource and user effort efficient manner. The automated system of the present invention uses a business systems platform comprised of several unique servers to efficiently manage multiple applications which are themselves generally distributed across a network, and to control the execution of the required tasks with minimum use of redundant data input to the several applications, thereby minimizing the use of hardware resources and user input effort. Business objects are controlled through a persistence framework which is Java, XML and EJB based.",
	"url": null,
	"owner": "SABA Software, Inc.",
	"publication_number": "07072934",
	"publication_date": "2006-07-04",
	"application_number": "09760068",
	"application_date": "2001-01-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "License management system and method with multiple license servers",
	"summary": "",
	"abstract": "A system for managing licenses for protected software on a communication network is disclosed. The system comprises at least one client computer and a pool of license servers coupled to the communication network. The client computers request authorizations to use the protected software. The pool of license servers are programmed for managing a distribution of allocations to use the protected software. Within the pool of license servers is a current leader server programmed for managing the distribution of allocations for the license servers in the pool, and at least one follower server programmed for managing the distribution of allocations for that particular follower server. Each license server stores a status of the allocations for that particular license server, and each follower server communicates the status of the allocations for that particular follower server to the current leader server. Each follower server is capable of becoming a new leader server if the current leader server can no longer manage the distribution of allocations for the license servers.",
	"url": null,
	"owner": "Safenet Canada. Inc.",
	"publication_number": "07035918",
	"publication_date": "2006-04-25",
	"application_number": "09648697",
	"application_date": "2000-08-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Artificial neurons including weights that define maximal projections",
	"summary": "",
	"abstract": "An artificial neuron includes inputs and dendrites, a respective one of which is associated with a respective one of the inputs. A respective dendrite includes a respective power series of weights. The weights in a given power of the power series represent a maximal projection. A respective power also may include at least one switch, to identify holes in the projections. By providing maximal projections, linear scaling may be provided for the maximal projections, and quasi-linear scaling may be provided for the artificial neuron, while allowing a lossless compression of the associations. Accordingly, hetero-associative and/or auto-associative recall may be accommodated for large numbers of inputs, without requiring geometric scaling as a function of input.",
	"url": null,
	"owner": "Saffron Technology Inc.",
	"publication_number": "07016886",
	"publication_date": "2006-03-21",
	"application_number": "10216341",
	"application_date": "2002-08-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Accounting apparatus and method for mobile communication system",
	"summary": "",
	"abstract": "An accounting apparatus and method for a mobile communication system, where a packet service accounting method for a mobile communication terminal includes the steps of checking whether there is an error in a received PPP frame; if there is an erroneous PPP frame in the received PPP frame, generating a PPP control frame containing a size information of the erroneous PPP frame; transmitting the PPP control frame to a base station; and if an authorization response for the PPP control frame is received from the base station, updating a size of total received data, and displaying the updated data size on a display.",
	"url": null,
	"owner": "Samsung Electronics Co., Ltd.",
	"publication_number": "06986077",
	"publication_date": "2006-01-10",
	"application_number": "10270958",
	"application_date": "2002-10-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Recording medium for storing real time recording/reproduction information, method and apparatus for recording and reproducing in real time, and file operating method using the same",
	"summary": "",
	"abstract": "A recording medium for storing real time recording/reproduction information, a real time recording and reproducing method and apparatus, and a file operating method using the information. Real time recording/reproduction information for ensuring real time recording/reproduction is stored in a file control information area, in each real time file, or in a separate file, and real time recording/reproduction attributes are assigned to the file. Thus, real time recorded files can be continuously reproduced without interruption. Also, there are methods of creating a file to which real time recording/reproduction attributes are assigned, extending a data area, and recording and reproducing the file to which real time recording/reproduction attributes are assigned.",
	"url": null,
	"owner": "Samsung Electronics Co., Ltd.",
	"publication_number": "07068918",
	"publication_date": "2006-06-27",
	"application_number": "09577042",
	"application_date": "2000-05-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Slave device and data sharing method",
	"summary": "",
	"abstract": "A slave device, which is connected to the file system of a host device and shares a storage device with the host device, and a data sharing method between the host device and the slave device are provided. The slave device has a storage device and is connected to the host device through a predetermined coupling device. The slave device includes a media driver for performing connection to a file system of the host device according to a predetermined protocol such that at least part of the storage device operates as a storage device of the host device. Accordingly, the storage device within the slave device operates as the storage device of the host device in a universal application program of the host device, thereby allowing the host and slave devices to share at least part of the storage device of the slave device using a universal application.",
	"url": null,
	"owner": "Samsung Electronics Co., Ltd.",
	"publication_number": "07007282",
	"publication_date": "2006-02-28",
	"application_number": "09597702",
	"application_date": "2000-06-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Modified class loaders and methods of use",
	"summary": "",
	"abstract": "Methods and apparatus, including computer program products, implement a hierarchical arrangement of class loaders. Each class loader has a naming token, and each token driven class loader has one or more delegation tokens. A class definition request is received in a first, token driven class loader. If the first class loader has a parent class loader, the class definition is requested from the parent. If the parent is a token driven class loader, delegation tokens are used to delegate the class definition request to the parent. If the class definition is not obtained from a parent class loader, an attempt is made to obtain the class definition from the resources of the first class loader. If that also fails, the delegation tokens of the first class loader are used to find a matching child class loader and the class definition is requested from the matching child class loader.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "06985909",
	"publication_date": "2006-01-10",
	"application_number": "10331180",
	"application_date": "2002-12-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer-implemented method and system to support in developing a process specification for a collaborative process",
	"summary": "",
	"abstract": "A computer-implemented method or computer system develops a process specification for a collaborative process involving distributed computer-based participant systems exchanging messages through an asynchronous messaging network. In operation, a computer retrieves, from a first computer system, information on process states and process state transitions in relation to each participant system. Information on collaboration states and collaboration state transitions of the process are stored in a second computer system and used to generate information on dead-end collaboration states.",
	"url": null,
	"owner": "SAP Aktiengesellschaft",
	"publication_number": "07096230",
	"publication_date": "2006-08-22",
	"application_number": "10631324",
	"application_date": "2003-08-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integrated composite data base system",
	"summary": "",
	"abstract": "Companies and other organizations store extensive datasets having overlapping data contents in different data base systems whose data base structures are incompatible with one another. The invention is concerned with the integration of such structurally incompatible data base systems, in particular with the data interchange between such systems. Various procedures are proposed which serve the purpose of combining such data base systems together such that problem-free data interchange is possible in both directions. In particular, the invention allows data shared across the system to be entered and changed in the different systems.",
	"url": null,
	"owner": "SAP Aktiengesellschaft",
	"publication_number": "07143079",
	"publication_date": "2006-11-28",
	"application_number": "10749557",
	"application_date": "2004-01-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for implementing a speech interface for a GUI",
	"summary": "",
	"abstract": "A method and apparatus for providing speech control to a graphical user interface (GUI) divide a GUI into a plurality of screen areas; assign the screen areas priorities; receive a first audio input relating to the selection of one of the objects in the interface; determine the one of the screen areas having the highest priority and including a first object matching the first audio input; and select the first object in the determined screen area if the determined screen area only contains one object matching the first audio input. The method and apparatus also select one of the objects that matches the first audio input in the determined screen area if the determined screen area contains more than one object that matches the first audio input.",
	"url": null,
	"owner": "SAP Labs, Inc.",
	"publication_number": "07036080",
	"publication_date": "2006-04-25",
	"application_number": "09997704",
	"application_date": "2001-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer-implemented knowledge repository interface system and method",
	"summary": "",
	"abstract": "A computer-implemented knowledge repository data interface system and method for use by client applications to interact with a plurality of knowledge repositories. The knowledge repositories contain analytical models of interest to the client applications. A request handling module receives requests regarding the models from one of the client applications over a network. Knowledge repository application programming interfaces (APIs) are used to retrieve data about the models in the knowledge repositories based upon the received requests.",
	"url": null,
	"owner": "SAS Institute Inc.",
	"publication_number": "07039622",
	"publication_date": "2006-05-02",
	"application_number": "09954278",
	"application_date": "2001-09-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for integrating a computer application programming language runtime environment with an operating system kernel",
	"summary": "",
	"abstract": "An application programming language runtime environment is integrated with an operating system kernel. The resulting merged data structures, meta-data structures and access methods contain the consolidation of information needed by the application programming language runtime and the operating system, without duplication. Integrating resources of the application programming language runtime and the operating system reduces the overall memory needed to store the merges data structures and meta data structures. Additionally, overhead in maintaining multiple data structures in parallel is also reduced, thus reducing the processing required. The integrated application programming language runtime and operating system kernel environment can also sharing semantic behavior such that untrusted application program code is prevented from escaping the application programming language runtime environment.",
	"url": null,
	"owner": "SavaJe Technologies, Inc.",
	"publication_number": "07082600",
	"publication_date": "2006-07-25",
	"application_number": "10287856",
	"application_date": "2002-11-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Communication system between a programmable logic controller server and a client machine",
	"summary": "",
	"abstract": "This invention relates to a communication system between a programmable logic controller (PLC) equipped with an HTTP server and a client machine (C) via a network (B), characterized in that it comprises, in the central processing unit (CPU) of this controller, a means (API ) for adding u201cgroup sheetsu201d (M, M. . . ) in XML format, whereon elements or signals for watching or controlling the process automated by the application of the programmable logic controller are grouped, as well as a means (API ) for adding/deleting elements or signals on these sheets, by specifying the type thereof, a means (API , API ) for reading or writing these elements, and a means (API , API , API ) for reading these sheets and for writing on these sheets upon a query from the HTTP server.",
	"url": null,
	"owner": "Schneider Automation",
	"publication_number": "07080137",
	"publication_date": "2006-07-18",
	"application_number": "09789162",
	"application_date": "2001-02-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Programming station generating a program in single language and automation equipment using such a program",
	"summary": "",
	"abstract": "This invention relates to a programming station for an automation application that will be executed in an automation equipment. The programming station stores at least one file in an internal memory containing a description grammar for automation applications in text format, for at least one of the graphic automation languages (Ladder, SFC, FBD) using a single, hierarchised and object oriented language. It also contains a set of one or several description files, each description file describing part of the automation application and being expressed in this single language. The single, hierarchised and object oriented language is the XML (eXtended Markup Language) language.",
	"url": null,
	"owner": "Schneider Automation",
	"publication_number": "07013188",
	"publication_date": "2006-03-14",
	"application_number": "10073193",
	"application_date": "2002-02-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interface to a programmable logic controller",
	"summary": "",
	"abstract": "An apparatus is provided for accessing, controlling and monitoring a programable logic controller with a network client having a conventional web browser. The apparatus includes an archive, an interface, and a library. The archive provides for compiling an application written in code supported by the web browser. The interface is responsive to the application for establishing a connection between the controller and the network client. Further, the library is responsive to the application for supporting communication between the controller and the network client upon establishing a connection therebetween.",
	"url": null,
	"owner": "Schneider Automation Inc.",
	"publication_number": "07062335",
	"publication_date": "2006-06-13",
	"application_number": "10601143",
	"application_date": "2003-06-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Proactive reboot",
	"summary": "",
	"abstract": "A system is provided that can generally be described as a system for rebooting that detects an indication that is triggered in response to a condition that is predictive of a critical problem in a client device, wherein the processor is further configured with the logic to, responsive to detecting the indication, determine an opportune time to reboot the client device in a manner that reduces user intrusiveness.",
	"url": null,
	"owner": "Scientific-Atlanta, Inc.",
	"publication_number": "07149889",
	"publication_date": "2006-12-12",
	"application_number": "10317879",
	"application_date": "2002-12-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for expiration reminders of rentable media offerings",
	"summary": "",
	"abstract": "The invention can be viewed as a system for providing media information to a user via an interactive media services client device coupled to a programmable media services server device. A method of the preferred embodiment of the present invention includes adding a media title to a media title list in response to user input.",
	"url": null,
	"owner": "Scientific-Atlanta, Inc.",
	"publication_number": "07155733",
	"publication_date": "2006-12-26",
	"application_number": "10780448",
	"application_date": "2004-02-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for reminders of upcoming rentable media offerings",
	"summary": "",
	"abstract": "The invention can be viewed as a system for providing media information to a user via an interactive media services client device coupled to a programmable media services server device. A method of the preferred embodiment of the present invention includes adding a media title to a media title list in response to user input.",
	"url": null,
	"owner": "Scientific-Atlanta, Inc.",
	"publication_number": "07150031",
	"publication_date": "2006-12-12",
	"application_number": "09693784",
	"application_date": "2000-10-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Time-adaptive control of television viewing functionality",
	"summary": "",
	"abstract": "A method for providing television functionality includes defining a time period, associating a user preference with the time period, providing a first result in accordance with the user preference if a request for television functionality is received during the defined time period, and providing a second result if the request for the television functionality is received outside the defined time period.",
	"url": null,
	"owner": "Scientific-Atlanta, Inc.",
	"publication_number": "07120922",
	"publication_date": "2006-10-10",
	"application_number": "10015270",
	"application_date": "2001-12-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Video on demand system with parameter-controlled bandwidth deallocation",
	"summary": "",
	"abstract": "The present invention provides a method for an interactive media services system to provide media to a user through an interactive media services client device. The client device is coupled to a programmable media services server device. The method includes the step of implementing an interactive media guide. Additionally, the client device is implemented to present the interactive media guide to the user. A system operator is provided an interface to the programmable media services server. Control options are provided within the interface to allow the system operator to configure a plurality of rental options available to the user. Finally the interactive media service system is implemented such that the plurality of rental options can be executed by the user in a requested active media session.",
	"url": null,
	"owner": "Scientific-Atlanta, Inc.",
	"publication_number": "07010801",
	"publication_date": "2006-03-07",
	"application_number": "09590520",
	"application_date": "2000-06-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Messaging protocol for interactive delivery system",
	"summary": "",
	"abstract": "Efficient messaging techniques that facilitate interactive program guide (IPG) delivery and allow a terminal to specifically designate requested items of information from a server. The IPG can be provided via a number of IPG pages, with each page including a number of defined regions. In one method, selection for a particular region of a particular page is received at a terminal and a determination is made whether the selected region is currently received. If the answer is no, a request for the selected region is generated and sent to a server. The request can conform to a particular message format that includes a number of fields, e.g., a region ID field that identifies the selected region, a subtype field that identifies a particular type, a time slot field that identifies a specific time slot, and a page offset field that identifies a specific page from among many.",
	"url": null,
	"owner": "Sedna Patent Services, LLC",
	"publication_number": "07146628",
	"publication_date": "2006-12-05",
	"application_number": "09708809",
	"application_date": "2000-11-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing interactive program guide (IPG) and video-on-demand (VOD) user interfaces",
	"summary": "",
	"abstract": "User interfaces for a number of services offered by an information distribution system. In one method, first (e.g., interactive program guide) and second (e.g., video-on-demand) applications are provided to support a first and second user interfaces for first and second services, respectively. A control mechanism coordinates the passing of control between the applications. A root application supports communication between the first and second applications and a hardware layer. The control mechanism may be implemented with first and second message queues maintained for the first and second applications, respectively. Control may be passed to an application via a (launch) message provided to the associated message queue. Each application is operable in an active or inactive state. Only one application is typically active at any given moment, and this application processes key inputs at the terminal. The transition between the active and inactive states may be based on occurrence of events.",
	"url": null,
	"owner": "Sedna Patent Services, LLC",
	"publication_number": "07124424",
	"publication_date": "2006-10-17",
	"application_number": "09740735",
	"application_date": "2000-12-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Device environment configuration systems, device environment configuration methods, and data storage media therefor",
	"summary": "",
	"abstract": "Device environment configuration systems, methods, and data storage media are provided that are adapted to automatically replicate device environment configuration information in a developer system to one or more other client systems. The user settings in OPOS device environment configuration settings of the developer PC can be found. Control objects and service objects stored to a data storage medium can then be installed to a client PC based on these user settings, and the OPOS device environment configuration settings from the developer PC can then be added to the client PC registry. Specific information stored in the client PC registry can be obtained based on the hardware specifications, such as the devices connected to the client PC and the connection port, and terminal-specific settings can be compiled for overwriting to the OPOS device environment configuration settings. These terminal-specific settings can then be stored to the OPOS device environment configuration settings in the registry of the client PC.",
	"url": null,
	"owner": "Seiko Epson Corporation",
	"publication_number": "07028173",
	"publication_date": "2006-04-11",
	"application_number": "10047445",
	"application_date": "2002-01-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Printing apparatus and printing method",
	"summary": "",
	"abstract": "Since both an output setting value and an output subject identifier, which are contained by a setting program, are stored as one record into a drawing table, an output condition such as a layout of image data which is designated when a printing operation is carried out can be previously set before the printing operation is carried out. Since photograph numbers of image data stored in a memory card are defined in relation to output subject identifiers, such image data to be printed out can be designated.",
	"url": null,
	"owner": "Seiko Epson Corporation",
	"publication_number": "07066665",
	"publication_date": "2006-06-27",
	"application_number": "10805485",
	"application_date": "2004-03-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "E-mail system providing filtering methodology on a per-domain basis",
	"summary": "",
	"abstract": "An e-mail system is described that includes a flow control filter, which is particularly suited for filtering on a per-domain (host) basis. During processing of incoming e-mail, each child MTA process created to handle a particular new connection connects to a flow control filter service, so that it can interact with the service during arrival of a message. This interaction provides a complete description of the incoming client, including IP address and host name, as well as the complete SMTP interaction. Since the flow control filter service monitors all children processes, it attains a global view of traffic flowing through the system. By virtue of its global view, the flow control filter service can track information on a per domain basis, including total volume of e-mail received from a particular domain over a given period of time. Since the knowledge lost by the forking process is captured by the flow control filter service, the service is in a position to enforce policy-based rules, including placing restrictions on child processes, based on the per-domain tallies encountered.",
	"url": null,
	"owner": "Sendmail, Inc.",
	"publication_number": "07146402",
	"publication_date": "2006-12-05",
	"application_number": "09945130",
	"application_date": "2001-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and methods for texture mapping",
	"summary": "",
	"abstract": "The invention provides texture mapping techniques that facilitate interactive painting of a three-dimensional virtual surface by a user in object space, without requiring global parameterization. The texture mapping techniques feature rendering texture for a given virtual object using a plurality of composite textures, each formed by blending collapsible texture layers. Texture coordinates in texture space are derived using information determined at the time of surface mesh generation. The invention features dynamic texture allocation and deallocation, allowing a user to interactively modify the shape of a painted, three-dimensional model. Finally, the invention features an architecture for combined graphical rendering and haptic rendering of a virtual object, allowing a user to experience force feedback during the painting of the object in object space.",
	"url": null,
	"owner": "SensAble Technologies, Inc.",
	"publication_number": "07095418",
	"publication_date": "2006-08-22",
	"application_number": "10697548",
	"application_date": "2003-10-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for collecting and processing data using internetworked wireless integrated network sensors (WINS)",
	"summary": "",
	"abstract": "The Wireless Integrated Network Sensor Next Generation (WINS NG) nodes provide distributed network and Internet access to sensors, controls, and processors that are deeply embedded in equipment, facilities, and the environment. The WINS NG network is a new monitoring and control capability for applications in transportation, manufacturing, health care, environmental monitoring, and safety and security. The WINS NG nodes combine microsensor technology, low power distributed signal processing, low power computation, and low power, low cost wireless and/or wired networking capability in a compact system. The WINS NG networks provide sensing, local control, remote reconfigurability, and embedded intelligent systems in structures, materials, and environments.",
	"url": null,
	"owner": "Sensoria Corporation",
	"publication_number": "07020701",
	"publication_date": "2006-03-28",
	"application_number": "09684565",
	"application_date": "2000-10-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for asynchronous tracking and quantifying of printing events",
	"summary": "",
	"abstract": "A two-phase asynchronous print tracking system and method is described. The separation of detection of print activity and billing of print activity is accomplished by means of a quota-based message queue. Print jobs sent by a user are allowed to print without interruption until a quota number of print jobs for which no billing information has been entered are reached. When the quota is exceeded, the user may not continue until appropriate billing information is entered.",
	"url": null,
	"owner": "Sepialine Incorporated",
	"publication_number": "07130070",
	"publication_date": "2006-10-31",
	"application_number": "10052167",
	"application_date": "2002-01-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Intelligent communications point platform",
	"summary": "",
	"abstract": "A system and method for host signaling processing that allows multiple SS7 applications to have visibility to the SS7 network traffic and the ability to control the SS7 network traffic. The applications residing on the platform have visibility to the SS7 traffic flowing through the Intelligent Communications Point (ICP) Platform, ability to control and modify the traffic and the ability to inject new SS7 traffic onto the SS7 links. The ICP platform will provide basic services that applications can use including Logging Data, Process Events, Inter Process Communication Services, and an interface to the Intelligent Communications Manager which provides a graphical user interface to manage the ICP. In addition to these services, the ICP Platform will provide basic traffic metering and measurement, bookkeeping statistics, and a failsafe mechanism for the SS7 links.",
	"url": null,
	"owner": "Sevis Systems, Inc.",
	"publication_number": "07133519",
	"publication_date": "2006-11-07",
	"application_number": "10713827",
	"application_date": "2003-11-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for interpreting and executing user preferences of audiovisual information",
	"summary": "",
	"abstract": "An agent for audiovisual materials is disclosed.",
	"url": null,
	"owner": "Sharp Laboratories of America, Inc.",
	"publication_number": "07055168",
	"publication_date": "2006-05-30",
	"application_number": "09668777",
	"application_date": "2000-09-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for protecting information",
	"summary": "",
	"abstract": "System, methods and apparatus are applicable to enable owners and vendors of software to protect their intellectual property and other rights in that software. The system also enables vendors or distributors of software to charge per-use for an instance of software. The system produces a unique, unforgeable, tag for every vendor supplied instance (copy) of specific software. Each user device is equipped with a supervising program that ensures, by use of the tag and other information, that no software instance will be used on the device in a manner infringing on the vendor, distributor, or software owner's rights. When installing or using a vendor-supplied software instance, the supervising program verifies the associated tag and stores the tag. When installing or using untagged software, the supervising program fingerprints selected portions of the software and stores the fingerprints. Software is used on a user's device through the supervising program which ensures proper use of the software. A vendor can submit a copy of infringing software to a guardian center which fingerprints appropriate portions of the infringing software. A user device's () supervising program periodically calls up, or can be called up, by the guardian center. During call-up, the supervising program can securely sends to the guardian center information about the use of the software instances associated with tags and fingerprints. The guardian center detects unauthorized use of software by comparison of current call-up data with records of past call-ups involving the same tags, and/or by comparing call-up supplied fingerprints with fingerprints of infringing software stored by the guardian center. The guardian center completes the call-up by enabling continued use of properly used software instances and generating appropriate punitive actions upon detection of improperly used software instances on the calling user's device. The data supplied by a supervising program during call-up is also employed by the guardian center to prepare data on usage by a user's device of vendor or distributor supplied software instances, for pay-per-use or pay-per-view billing.",
	"url": null,
	"owner": "ShieldIP, Inc.",
	"publication_number": "07131144",
	"publication_date": "2006-10-31",
	"application_number": "10737077",
	"application_date": "2003-12-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for protecting information",
	"summary": "",
	"abstract": "System, methods and apparatus are applicable to enable owners and vendors of software to protect their intellectual property and other rights in that software. The system also enables vendors or distributors of software to charge per-use for an instance of software. The system produces a unique, unforgeable, tag for every vendor supplied instance (copy) of specific software. Each user device is equipped with a supervising program that ensures, by use of the tag and other information, that no software instance will be used on the device in a manner infringing on the vendor, distributor, or software owner's rights. When installing or using a vendor-supplied software instance, the supervising program verifies the associated tag and stores the tag. When installing or using untagged software, the supervising program fingerprints selected portions of the software and stores the fingerprints. Software is used on a user's device through the supervising program which ensures proper use of the software. A vendor can submit a copy of infringing software to a guardian center which fingerprints appropriate portions of the infringing software. A user device's () supervising program periodically calls up, or can be called up, by the guardian center. During call-up, the supervising program can securely sends to the guardian center information about the use of the software instances associated with tags and fingerprints. The guardian center detects unauthorized use of software by comparison of current call-up data with records of past call-ups involving the same tags, and/or by comparing call-up supplied fingerprints with fingerprints of infringing software stored by the guardian center. The guardian center completes the call-up by enabling continued use of properly used software instances and generating appropriate punitive actions upon detection of improperly used software instances on the calling user's device. The data supplied by a supervising program during call-up is also employed by the guardian center to prepare data on usage by a user's device of vendor or distributor supplied software instances, for pay-per-use or pay-per-view billing.",
	"url": null,
	"owner": "ShieldIP, Inc.",
	"publication_number": "07073197",
	"publication_date": "2006-07-04",
	"application_number": "10737079",
	"application_date": "2003-12-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for building/updating grammars in voice access systems",
	"summary": "",
	"abstract": "Method and System to update grammar information in a voice access system that provides access to a data system. A user interface (UI) is provided to enable an administrator to select UI object pertaining to a user interface provided by the data system to provide grammar update support for. The data system user interface corresponds to a UI that users would see if using computer client connection to the data system. XSLT style sheets are built based on the UI objects that are selected for grammar update. A grammar update request may then submitted that identifies a navigation context of the data system UI, a style sheet to apply, and an optional last update value. In response to receiving the request, the system retrieves data from the data system pertaining to the navigation context; and filters the data using the identified style sheet and the last update value and provides the filtered data back to the voice access system to update its grammar.",
	"url": null,
	"owner": "Siebel Systems, Inc.",
	"publication_number": "07149694",
	"publication_date": "2006-12-12",
	"application_number": "10131369",
	"application_date": "2002-04-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for enabling connectivity to a data system",
	"summary": "",
	"abstract": "A method and system that provides filtered data from a data system. In one embodiment the system includes an API (application programming interface) and associated software modules to enable third party applications to access an enterprise data system. Administrators are enabled to select specific user interface (UI) objects, such as screens, views, applets, columns and fields to voice or pass-through enable via a GUI that presents a tree depicting a hierarchy of the UI objects within a user interface of an application. An XSLT style sheet is then automatically generated to filter out data pertaining to UI objects that were not voice or pass-through enabled. In response to a request for data, unfiltered data are retrieved from the data system and a specified style sheet is applied to the unfiltered data to return filtered data pertaining to only those fields and columns that are voice or pass-through enabled.",
	"url": null,
	"owner": "Siebel Systems, Inc.",
	"publication_number": "07058890",
	"publication_date": "2006-06-06",
	"application_number": "10131368",
	"application_date": "2002-04-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for providing a version-independent interface to a computer resource",
	"summary": "",
	"abstract": "A method and system for exposing a version-independent interface to a computer resource. The interface system exposes a version-independent interface to a computer resource, such as a database or computer program. The interface system also provides a version-dependent interface to the computer resource that is typically not exposed. When the computer resource is modified, the version-dependent interface may be modified, but the version-independent interface might not be modified. When the version-dependent interface is modified, a mapping is generated (in some cases automatically) between the version-independent interface and the version-dependent interface. When an accessing computer program uses the version-independent interface to request services of the computer resource, the system uses the mapping to map the request to a request that is appropriate for the version-dependent interface.",
	"url": null,
	"owner": "Siebel Systems, Inc.",
	"publication_number": "07107594",
	"publication_date": "2006-09-12",
	"application_number": "10247258",
	"application_date": "2002-09-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, apparatus, and system for implementing view caching in a framework to support web-based applications",
	"summary": "",
	"abstract": "According to one aspect of the present invention, a system is provided for implementing view caching in a framework to support web-based applications. The system comprising a set of server-side objects managed by an object manager (OM) running on a server. The system further comprises a set of browser-side objects running on a browser running on a client. The system also comprises a remote procedure call (RPC) mechanism and a notification mechanism to facilitate communication and synchronization between the browser-side objects and the server-side objects. The system additionally comprises a cache on the client to store layouts of views, wherein each view is a display panel consisting of a particular arrangement of applets.",
	"url": null,
	"owner": "Siebel Systems, Inc.",
	"publication_number": "07146617",
	"publication_date": "2006-12-05",
	"application_number": "09969980",
	"application_date": "2001-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for multi-channel communication queuing using routing and escalation rules",
	"summary": "",
	"abstract": "A system, apparatus, and method for routing work items to agents, wherein the work items can be of one of two or more different communication media types from one of two or more different communication channels. A queuing engine includes a list of routes and each route is associated with one or more properties. The list of routes can further include information related to one or more escalation rules for each route; the type of communication media available along the route for handling one or more of the work items; whether the route is active; the priority of the route; whether work items can be handled real-time; the service level for work items handled on the route; and the number of work items that can be assigned to the route. The queuing engine determines various properties required to handle each work item, such as the communication media type, agent language and skill level, and the category and recipient of the work item, and to assign each work item to one of the one or more agents based on one or more of the properties. When the queuing engine determines that a work item has been waiting a predetermined amount of time to be assigned to an agent, and the queuing engine can escalate the search for an agent to handle the work item based on the escalation rules. The queuing engine can also substitute values for variables in the routing and escalation rules, thereby reducing the number of rules that must be entered to achieve the same routing capability.",
	"url": null,
	"owner": "Siebel Systems, Inc.",
	"publication_number": "07103171",
	"publication_date": "2006-09-05",
	"application_number": "09895456",
	"application_date": "2001-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Active resource control system method & apparatus",
	"summary": "",
	"abstract": "Active resource control of added functionality in a numerical control process having at least one resource is provided. It can occur during run-time of the numerical control process, that an added functionality that uses at least a portion of the resource. On-line checking of the added functionality detects during run time whether the added functionality causes the numerical control process to reach a resource limit. Error handling handles errors upon reaching a resource limit. Off-line checking detects off-line, before the run time of the numerical control process, whether the added functionality causes the numerical control process to reach a resource limit of the resource. Multiple layers are provided that check at multiple layers of the numerical control process whether the added functionality causes the numerical control process to reach a resource limit of the resource. A flexible response to resource limit errors based on a degree of importance of the added functionality is provided.",
	"url": null,
	"owner": "Siemens Aktiengesellschaft",
	"publication_number": "07016759",
	"publication_date": "2006-03-21",
	"application_number": "10227087",
	"application_date": "2002-08-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mapping control functions of a plurality of communication installations into a single logical interface",
	"summary": "",
	"abstract": "The present invention relates to a distributed communication system including server for executing communications applications and service features for communications installations. Preferably, the system is provided as a private communication system, wherein the communications installations are connected to one another via a network preferably an IP-oriented. The communications installations each have a local software interface which can be used by the server to control the functionality of the communications installation. A central software interface in the server maps the respective local software interfaces of the individual communications installations in a single superordinate logical software interface. The central software interface is used by the communications applications to access the resources of the individual communications installations.",
	"url": null,
	"owner": "Siemens Aktiengesellschaft",
	"publication_number": "07099945",
	"publication_date": "2006-08-29",
	"application_number": "09956619",
	"application_date": "2001-09-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for the electronic provision of services for machines via a data communication link",
	"summary": "",
	"abstract": "Expert knowledge from machine manufacturers is applied quickly at any time to a machine via the Internet, by providing a main computer (host) for the production and provision of machine-related data and/or services and a machine-side working computer (client). The machine-side working computer is connected to the main computer via a data communication link. Machine state data from the machine-side working computer can be acquired in real time and transmitted to the main Computer. Machine-related data and/or services generated by the main computer as a function of such machine state data can be received by an analysis and evaluation unit.",
	"url": null,
	"owner": "Siemens Aktiengesellschaft",
	"publication_number": "07127322",
	"publication_date": "2006-10-24",
	"application_number": "11205703",
	"application_date": "2005-08-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for call answering in a distributed communications system",
	"summary": "",
	"abstract": "A method for call answering in a distributed communications system having a plurality of communications devices, in which a subscriber can be registered on communications terminals associated with the communications devices in the distributed communications system. In this case, incoming calls are allocated to the communications terminals according to prescribable criteria. If a subscriber called by an incoming call is not available, an announcement function is performed which prompts activation of an announcement on a central communications device in the distributed communications system.",
	"url": null,
	"owner": "Siemens Aktiengesellschaft",
	"publication_number": "06990188",
	"publication_date": "2006-01-24",
	"application_number": "10189192",
	"application_date": "2002-07-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for controlling a multimedia messaging service between a telecommunication device and a telecommunication network, respective smart card and telecommunication device",
	"summary": "",
	"abstract": "For controlling a multimedia messaging service (MMS) between a telecommunication device (ME) and a telecommunication network (NET), the transport commands (SM) and/or the data transfer (DO) of each multimedia message to and from the telecommunication device (ME) are controlled by a smart card (SC) being coupled with the telecommunication device (ME).",
	"url": null,
	"owner": "Siemens Aktiengesellschaft",
	"publication_number": "07076273",
	"publication_date": "2006-07-11",
	"application_number": "10702795",
	"application_date": "2003-11-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, array and set of several arrays for protecting several programs and/or files from unauthorized access by a process",
	"summary": "",
	"abstract": "An area and a process file are assigned to each program to be protected. The process or processes that may run in the corresponding area is or are stored in a process file. When the program is running, a process attempting to access the program is checked to confirm whether the accessing process is included in the corresponding process file. The accessing process is executed only if it is included in the process file.",
	"url": null,
	"owner": "Siemens Aktiengesellschaft",
	"publication_number": "07120763",
	"publication_date": "2006-10-10",
	"application_number": "09763029",
	"application_date": "1999-07-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network architecture for communication networks or data networks",
	"summary": "",
	"abstract": "A layer of network elements is provided between already existing physical networks and service providers or users. The network elements communicate via interfaces not only with each other, but also with the physical networks which are connected to them. This layer, which is implemented by network elements distributed in the network, enables the network user to access the existing network resources available in the physical, subjacent networks. This enables all available basic and value-added services to be used. The required and generated data are collected separately according to users or service providers in the relevant physical networks, and are managed and made available for further processing.",
	"url": null,
	"owner": "Siemens Aktiengesellschaft",
	"publication_number": "07010618",
	"publication_date": "2006-03-07",
	"application_number": "09807889",
	"application_date": "1999-10-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for accessing different resources having the same identification code",
	"summary": "",
	"abstract": "A system having at least two communication systems which manage resources in each case, in which in each case an identification code is assigned to the resources for identification, and in which the resources managed by a single communication system can be differentiated on the basis of their identification codes, and having at least one application for controlling and/or monitoring the resources by transmitting messages comprising the identification code of the respective resource between the at least one application and the communication systems, characterized in that an extension of all identification codes is provided for differentiating the resources, which extension is performed at least by every communication system when sending messages and comprises an unambiguous identifier of the sending communication systems, at least whenever a plurality of resources have the same non-extended identification code in each case.",
	"url": null,
	"owner": "Siemens Aktiengesellschaft",
	"publication_number": "07006619",
	"publication_date": "2006-02-28",
	"application_number": "10309347",
	"application_date": "2002-12-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for extending a telephone's capabilities",
	"summary": "",
	"abstract": "An application programming interface (API) enables a telephone to utilize the hardware resources of a computer that is connected to the telephone in a master/slave relationship that causes the computer to function in the manner of a peripheral to the telephone. Specifically, the telephone attached to the computer can utilize the relatively large memory capacity of the attached computer to store excess telephone-specific data and can utilize the relatively high sophistication of the processing capability of the connected computer to perform intensive data processing operations. The API allows the functionality of the telephone to be extended without requiring a telephony-equipped computer.",
	"url": null,
	"owner": "Siemens Communications Inc.",
	"publication_number": "07042991",
	"publication_date": "2006-05-09",
	"application_number": "11045172",
	"application_date": "2005-01-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for enhanced multimedia conference collaboration",
	"summary": "",
	"abstract": "A telecommunications system includes a network () and a multimedia server () operably coupled to the network. The multimedia server () is adapted to manage a multimedia conference and includes a memory () for storing selectable portions of the multimedia conference, as well as action prompts. The system further includes one or more client devices () operably coupled to the network and adapted to set action cues for use during conferences. A voice recognition system may be used to detect instances of the action cues, which cause the launching of an associated action prompt.",
	"url": null,
	"owner": "Siemens Communications, Inc.",
	"publication_number": "07130403",
	"publication_date": "2006-10-31",
	"application_number": "10316409",
	"application_date": "2002-12-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods using secondary signal backchanneling",
	"summary": "",
	"abstract": "Within a network environment, redundant capabilities for exchanging call-processing signals enhance reliability of telephony support for telephony endpoint devices. A data network, such as a telephony-over-local area network, provides primary support for the telephony endpoint devices, which may be telephony-enabled computers or Internet Protocol telephones. A second network has a first mode in which it is inactive with respect to telephony traffic to the telephony endpoint devices, but has a second mode in which call-processing signals are routed through the second network in response to a determination that the data network is disabled. As a result, telephone features such as call deflection may be continued when the primary support is disabled. In some implementations, the second network includes a third mode in which the voice information is also carried as a response to determining that the data network is disabled and the currently available bandwidth of the second network exceeds a threshold bandwidth level.",
	"url": null,
	"owner": "Siemens Communications, Inc.",
	"publication_number": "07130409",
	"publication_date": "2006-10-31",
	"application_number": "10310468",
	"application_date": "2002-12-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Desk sharing with automatic device relocation",
	"summary": "",
	"abstract": "A system and method for integrating a desk sharing application with a PBX telephonic user identity and feature transfer function is described. The system and method of the invention utilizes the PBX's administrative interface to transfer attributes from a dedicated device to the shared telephone device within an ECP network.",
	"url": null,
	"owner": "Siemens Communications, Inc. - Boca Raton",
	"publication_number": "07151825",
	"publication_date": "2006-12-19",
	"application_number": "10607765",
	"application_date": "2003-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Moniker method, apparatus, system and article of manufacture",
	"summary": "",
	"abstract": "A moniker is provided that accesses already-running instances of objects that do not have a resistant state. In one aspect, the objects are associated with a programmable logic controller (PLC). The PLC may be a soft PLC that interfaces with a personal computer. A remote connection is provided for such that the moniker instantiates objects of PLCs remotely such as over the internet.",
	"url": null,
	"owner": "Siemens Energy & Automation, Inc.",
	"publication_number": "07111306",
	"publication_date": "2006-09-19",
	"application_number": "09506640",
	"application_date": "2000-02-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for scheduling a fabrication process",
	"summary": "",
	"abstract": "The present invention is a job scheduling system and method that provides enhanced on-time delivery (OTD) of a fabrication process. The present invention provides on-time delivery (OTD) of a fabrication process. A scheduling heuristic, referred to as Weighted Forward Algorithm (WFA), is applied to a set of fabrication jobs to reduce the weighted number of late delivery of a single machine with a setup. Certain exemplary embodiments can provide a system and method for scheduling a fabrication process, comprising the activities of: initializing a set of fabrication jobs to create a set of on time jobs, a set of late jobs and a set of jobs to be scheduled; normalizing job set by due date order and processing requirements; and determining if the set of on time jobs will meet scheduled due dates, and if not, then determining which job to move from the set of on time jobs and moving that job from the set of on time jobs to the set of late jobs.",
	"url": null,
	"owner": "Siemens Energy & Automation, Inc.",
	"publication_number": "07130706",
	"publication_date": "2006-10-31",
	"application_number": "10665180",
	"application_date": "2003-09-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data object generator and method of use",
	"summary": "",
	"abstract": "The present invention creates source code that can be used by an application program to manipulate a relational database management system. An executable procedure for use in accessing a database management system (DBMS) by other software, e.g. application software, is created by dynamically obtaining a set of data representative of and useful in manipulating the DBMS and a table within the DBMS from a preexisting DBMS system catalog; merging the set of data with pre-existing source code comprising a predetermined object source code template that comprises object methods and object properties useful in manipulating the table; and generating a source file containing the merged template object source code to create the executable procedure. It is emphasized that this abstract is provided to comply with the rules requiring an abstract which will allow a searcher or other reader to quickly ascertain the subject matter of the technical disclosure. It is submitted with the understanding that it will not be used to interpret or limit the scope of meaning of the claims.",
	"url": null,
	"owner": "Siemens Medical Solutions Health Services Corp.",
	"publication_number": "07020660",
	"publication_date": "2006-03-28",
	"application_number": "10167964",
	"application_date": "2002-06-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for creating, storing, and using customizable software test procedures",
	"summary": "",
	"abstract": "A system and method for software test is disclosed that allows user management and adaptation of test procedures and the resulting test data. In an embodiment, the system and method provide a cross-platform user interface which allows testing to be conducted on a plurality of platforms, i.e. it is not integrated with a single platform or language (e.g., C++, Visual Basic, Java, or the like). The method further allows a user to customize a predetermined set of system characteristics relating to the stored test procedure. It is emphasized that this abstract is provided to comply with the rules requiring an abstract which will allow a searcher or other reader to quickly ascertain the subject matter of the technical disclosure. It is submitted with the understanding that it will not be used to interpret or limit the scope of meaning of the claims.",
	"url": null,
	"owner": "Siemens Medical Solutions Health Services Corporation",
	"publication_number": "07055067",
	"publication_date": "2006-05-30",
	"application_number": "10254131",
	"application_date": "2002-09-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computing spatial derivatives for medical diagnostic imaging methods and systems",
	"summary": "",
	"abstract": "Spatial derivatives are computed. In one method, gradients are determined from data in an acoustic domain rather than a Cartesian or display coordinate domain. The gradients determined from data in the acoustic domain are then transformed to the Cartesian coordinate or display screen domain. For example, a matrix function representing the spatial relationship between the acoustic domain and the Cartesian coordinate domain transforms the coordinates. As a result, spatial gradients in the Cartesian system are provided where acoustic domain data is being processed. In another method for volume rendering or three-dimensional imaging, a gradient is calculated from data in the display or screen domain. Data from a reconstructed 3D Cartesian coordinate grid or data in an acoustic domain is resampled to ray lines. The ray lines correspond to the display domain as compared to an arbitrary Cartesian coordinate format. The gradients are calculated from the resampled data in the screen domain. When resampling on data in an acoustic domain, gradient computation prior to the resampling may require transformation as discussed above. To avoid the transformation, the gradients are determined after resampling. By calculating the gradients after resampling, interpolation of gradient information as part of the resampling is avoided or minimized. The gradient calculation is then performed using data in the display coordinate space (i.e., screen domain) without requiring further random memory accesses. In yet another method, the number of computation and interpolations for gradient calculation is reduced by performing shading prior to resampling along ray lines to the screen domain. The gradients are calculated and the voxel data in the acoustic or 3D grid Cartesian coordinate formats are altered or weighted as a function of the shading. The shaded data is then resampled to the ray lines. For example, the shading values are computed from data in an acoustic domain and applied to the data in the acoustic domain. The data is then ray cast or interpolated to ray lines without prior scan conversion.",
	"url": null,
	"owner": "Siemens Medical Solutions USA, Inc.",
	"publication_number": "07037263",
	"publication_date": "2006-05-02",
	"application_number": "10644363",
	"application_date": "2003-08-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Graphics processing unit for simulation or medical diagnostic imaging",
	"summary": "",
	"abstract": "Methods and systems provide simulation or medical diagnostic imaging with a graphics processing unit. Data to be processed by a graphics processing unit is transferred from a source to the graphics processing unit without copying by the central processing unit. For example, the central processing unit does not copy data to the cache. Instead, the source of data transfers the data directly to the graphics processing unit or directly to a graphics aperture region of a memory for transfer to the video memory of the GPU. The GPU is then used to generate a two-dimensional or three-dimensional image. The GPU is used to perform a medical imaging process, such as an ultrasound imaging process. The processed data is transferred to a different processor. Since the GPU provides various parallel processors, the GPU may more efficiently perform image processes different from rendering a two-dimensional or three-dimensional image.",
	"url": null,
	"owner": "Siemens Medical Solutions USA, Inc.",
	"publication_number": "07119810",
	"publication_date": "2006-10-10",
	"application_number": "10728666",
	"application_date": "2003-12-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for processing objects for storage in a document or other storage system",
	"summary": "",
	"abstract": "The invention is directed to a system for processing data to be stored in a document-imaging system that includes a posting processor programmed for receiving at least one object containing the data; a bursting processor programmed for bursting the object to create at least one bursted object; an index extraction processor programmed for extracting indexing information on the bursted object; and a communication processor programmed for transmitting the transformed bursted object and the indexing information to the document-imaging system. The invention may further include a transformation processor for transforming the bursted object and a user interface for configuring the system.",
	"url": null,
	"owner": "Siemens Medical Systems Health Services Inc.",
	"publication_number": "06999972",
	"publication_date": "2006-02-14",
	"application_number": "10236560",
	"application_date": "2002-09-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Compact flat panel color calibration system",
	"summary": "",
	"abstract": "A compact flat panel color calibration system includes a lens prism optic able to pass a narrow, perpendicular, and uniform cone angle of incoming light to a spectrally non-selective photodetector. The calibration system also includes a microprocessor operable to determine the luminance of the display based upon the information gathered by the photodetector. A software module included in the calibration system is then operable to process the luminance information in order to adjust the flat panel display.",
	"url": null,
	"owner": "Silicon Graphics, Inc.",
	"publication_number": "07068263",
	"publication_date": "2006-06-27",
	"application_number": "11053068",
	"application_date": "2005-02-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for implementing shadows using pre-computed textures",
	"summary": "",
	"abstract": "The present invention provides an improved system and method for rendering shadows in a computer graphics system. Textures representing the area of influence resulting from a combination of light sources and shadow casters are pre-computed. Scenes are then rendered using the pre-computed textures. A first step entails generating sets of directions and associated pre-computed textures for each light source and shadow caster pair in a simulation frame. Next, a first scene in the simulation is rendered. During this step one or more of the pre-computed textures are used to darken the area of influence or shadow portion of the scene.",
	"url": null,
	"owner": "Silicon Graphics, Inc.",
	"publication_number": "07064755",
	"publication_date": "2006-06-20",
	"application_number": "10153690",
	"application_date": "2002-05-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Texture roaming via dimension elevation",
	"summary": "",
	"abstract": "The present invention provides texture roaming via dimension elevation. A degree elevated texture is used to contain level of detail (LOD) levels (or tiles) of a clip-map across a degree elevated coordinate space. For example, a three-dimensional (3D) texture is used for two-dimensional (2D) clip-mapping, a four-dimensional (4D) texture is used for 3D clip-mapping, and a 2D texture is used for one-dimensional (1D) clip-mapping. Once the levels of a clip-map are placed in an extra dimension coordinate space, the extra dimension texture coordinate value can be computed based on clip-mapping rules.",
	"url": null,
	"owner": "Silicon Graphics, Inc.",
	"publication_number": "07012614",
	"publication_date": "2006-03-14",
	"application_number": "10690638",
	"application_date": "2003-10-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Display device having pagewidth printer",
	"summary": "",
	"abstract": "A display device for use as a computer monitor, the display device comprising:nn",
	"url": null,
	"owner": "Silverbrook Research Pty Ltd",
	"publication_number": "07125185",
	"publication_date": "2006-10-24",
	"application_number": "10922892",
	"application_date": "2004-08-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Printing and display device incorporating a data connection hub",
	"summary": "",
	"abstract": "A printing and display device comprising: a data connection for receiving print data from a computer; a flat panel display for displaying images received from a computer; a printer, the printer including a printhead for printing onto paper on the basis of the print data; and a data connection hub configured to allow connection of at least one data-receiving device to the printing and display device, enabling the data-receiving device to receive data from the computer.",
	"url": null,
	"owner": "Silverbrook Research Pty Ltd",
	"publication_number": "07040823",
	"publication_date": "2006-05-09",
	"application_number": "10803075",
	"application_date": "2004-03-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Controlling multiple nodes divided into groups",
	"summary": "",
	"abstract": "A broadcast satellite network transmits from a source to multiple router nodes digital real-time program information and best-effort data. The router nodes are specifically suited for extracting best-effort data streams from the multiplexed signal received via, e.g., a satellite. A number of management techniques are disclosed. According to one technique, a packet is formed having a network layer header, including a destination address for routing a packet to a destination, a second header identifying a syntax and semantic by which a payload of the packet may be parsed in a predefined fashion, and a payload containing a command to be executed by each of one or more to-be-managed nodes to which the packet is destined. The packet is transmitted a plural amount of times to a plurality of nodes, including the one or more to-be-managed nodes, but the command in the particular packet is executed only a single time. According to other techniques, the nodes are divided into groups. In one technique, a unique identifier is assigned to each group and the packet containing the command contains the identifier. The packet is transmitted once but received by all nodes, including the group of nodes to which the same identifier was assigned. Only those nodes of the group with the same identifier execute the command. According to anther embodiment, a manager node maintains a list of the addresses of all nodes in a group and automatically transmits the packet once to each address, thereby enabling automatic communication of the same packet to multiple nodes.",
	"url": null,
	"owner": "SkyStream Networks Inc.",
	"publication_number": "07054314",
	"publication_date": "2006-05-30",
	"application_number": "09933260",
	"application_date": "2001-08-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Controlling multiple nodes to execute messages only once",
	"summary": "",
	"abstract": "A broadcast satellite network transmits from a source to multiple router nodes digital real-time program information and best-effort data. The router nodes are specifically suited for extracting best-effort data streams from the multiplexed signal received via, e.g., a satellite. A number of management techniques are disclosed. According to one technique, a packet is formed having a network layer header, including a destination address for routing a packet to a destination, a second header identifying a syntax and semantic by which a payload of the packet may be parsed in a predefined fashion, and a payload containing a command to be executed by each of one or more to-be-managed nodes to which the packet is destined. The packet is transmitted a plural amount of times to a plurality of nodes, including the one or more to-be-managed nodes, but the command in the particular packet is executed only a single time. According to other techniques, the nodes are divided into groups. In one technique, a unique identifier is assigned to each group and the packet containing the command contains the identifier. The packet is transmitted once but received by all nodes, including the group of nodes to which the same identifier was assigned. Only those nodes of the group with the same identifier execute the command. According to anther embodiment, a manager node maintains a list of the addresses of all nodes in a group and automatically transmits the packet once to each address, thereby enabling automatic communication of the same packet to multiple nodes.",
	"url": null,
	"owner": "SkyStream Networks Inc.",
	"publication_number": "07058054",
	"publication_date": "2006-06-06",
	"application_number": "09933265",
	"application_date": "2001-08-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for connecting a cellular telephone to a universal serial bus",
	"summary": "",
	"abstract": "A mobile phone interface (MPI) is molded between the ends of a Universal Serial Bus (USB) cable. One end of the USB cable is plugged into a standard USB port on a personal computing device and the other end is plugged into a cellular telephone. The MPI comprises a USB serial interface engine (USB SIE), a digital translation block (DTB) and a cellular phone interface. The cellular phone interface provides electrical connections to the signals within the supported cellular telephone. The DTB performs synchronous and asynchronous data transfers and buffer functions in accordance with the implemented protocol. The USB serial interface engine performs serialization, de-serialization and USB set-up in accordance with USB standards. Software for controlling the MPI is installed on the computer system. The control software comprises a communication control stack, a hardware access driver and an external plug-in module.",
	"url": null,
	"owner": "Skyworks Solutions, Inc.",
	"publication_number": "07079865",
	"publication_date": "2006-07-18",
	"application_number": "10666617",
	"application_date": "2003-09-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for handling information and information transfers in a computer network",
	"summary": "",
	"abstract": "The present invention relates to relates to the efficient and secure transfer of information over a distributed computer network such as the Internet. The system provides parallel communication paths between the source and destination. Each path includes a dedicated route point to eliminate intermediate ISPs. Each source is associated with an archive and each route point is coupled to the archive. Upon receipt of the message at a route point the message is copied to the archive and then transmitted to the destination. Message archival and storage of transmission-related information enables data-mining features not presently available using email or a point-and-click browser. Since two messages are transmitted from the source to the common destination across separate and distinct communication paths, message latency is improved and the chance of lost messages is reduced or even eliminated. A network controller monitors transmission results and dynamically re-configures the network to balance loading across the route points and to avoid failures or other bottlenecks in the system.",
	"url": null,
	"owner": "Slam Dunk Networks, Inc.",
	"publication_number": "07032005",
	"publication_date": "2006-04-18",
	"application_number": "09740521",
	"application_date": "2000-12-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multi-service queuing method and apparatus that provides exhaustive arbitration, load balancing, and support for rapid port failover",
	"summary": "",
	"abstract": "The present invention provides a multi-service queuing method and apparatus that provides exhaustive arbitration, load balancing, and support for rapid port failover. Routers and switches according to the present invention can instantaneously direct the flow of traffic to another port should there be a failure on a link, efficiently handle multicast traffic and provide multiple service classes. The fabric interface interfaces the switch fabric with the ingress and egress functions provided at a network node and provides virtual input and output queuing with backpressure feedback, redundancy for high availability applications, and packet segmentation and reassembly into variable length cells. The user configures fixed and variable-length cells. Virtual input and output queues are coupled to a switch fabric. Statistics regarding the virtual input and output queues are collected and packet queuing for the virtual input and output queues is controlled using the collected statistic to provide congestion control for the virtual input and output queues and the switch fabric.",
	"url": null,
	"owner": "SLT Logic LLC",
	"publication_number": "07151744",
	"publication_date": "2006-12-19",
	"application_number": "09957751",
	"application_date": "2001-09-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Reciprocating engine cylinder contribution tester and method",
	"summary": "",
	"abstract": "Engine cylinder contribution analysis is provided. An engine cylinder contribution tester includes a displacement measurement device and a signal analyzer. The displacement measurement device detects engine block movements or displacement relative to a fixed position caused by a poorly contributing cylinder. The displacement measurement device provides a displacement signal to the signal analyzer. The signal analyzer includes a cylinder contribution module for evaluating the displacement signal. If a particular cylinder is contributing less than the average of the other cylinders, the displacement signal indicates engine block movement associated with a lack of contribution from that cylinder.",
	"url": null,
	"owner": "Snap-On Incorporated",
	"publication_number": "07010460",
	"publication_date": "2006-03-07",
	"application_number": "10695806",
	"application_date": "2003-10-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Universal voice browser framework",
	"summary": "",
	"abstract": "A system and method for providing voice communications over a network, including a media server having a voice rendering platform for supporting voice-based user interactions. The voice rendering platform provides prompting, information collection and validation, and audio recording and transcoding. A separate application server is responsible for performing call control actions. During a user dialog, control is passed to the media server for rendering and receiving data, and passed back to the application server for call control actions. The media server includes a script execution environment for rendering the voice components of the user dialogs. The application server is an execution platform for applications written in a procedural programming language. Voice communications over a network are provided without combining call control and voice rendering functionality into a single, script execution platform.",
	"url": null,
	"owner": "Snowshore Networks, Inc.",
	"publication_number": "07149287",
	"publication_date": "2006-12-12",
	"application_number": "10346549",
	"application_date": "2003-01-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Exchange server method and system",
	"summary": "",
	"abstract": "A method, system and computer program for a computer message storage system such as electronic mail. This involves instancing a software archiver to relocate messages according to age and instancing a software backup subsystem to backup storage groups, to maintain a patch file and to copy to a backup file.",
	"url": null,
	"owner": "Solid Data Systems, Inc.",
	"publication_number": "07155633",
	"publication_date": "2006-12-26",
	"application_number": "10731636",
	"application_date": "2003-12-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Telecommunication services",
	"summary": "",
	"abstract": "The present invention relates generally to telecommunications, and more specifically to a method and system of providing telecommunication services that is flexible and efficient. Existing Public Switched Telephone Network systems suffer from a number of problems including system complexity, access being proprietary and services being implemented on fixed hardware. As a result, new services are complex and costly to develop, so telcos only provide services that appeal very broadly. The invention provides an open and flexible system by describing communications in terms of graph packets which contain pointers to blocks of software code, rather than containing large blocks of executable code. In the preferred embodiment, these graphs identify software filters which are dedicated to particular tasks, and are based on a standard API. This allows third parties to create new filters and make them available, allowing new services to be provided quickly and easily.",
	"url": null,
	"owner": "Soma Networks, Inc.",
	"publication_number": "06985722",
	"publication_date": "2006-01-10",
	"application_number": "09787759",
	"application_date": "1999-09-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic apparatus and method and program of controlling the same",
	"summary": "",
	"abstract": "An electronic apparatus includes a keyboard unit fixed to the vicinity of the bottom of a display unit. The electronic apparatus also includes a detecting unit for detecting whether a portion of a display area of the display unit is covered by the keyboard unit and a display control unit for controlling a display mode for an uncovered portion, which is not covered by the keyboard unit, of the display area of the display unit while the detecting unit detects that a portion of the display area of the display unit is covered by the keyboard unit.",
	"url": null,
	"owner": "Sony Corporatiom",
	"publication_number": "07071917",
	"publication_date": "2006-07-04",
	"application_number": "10327941",
	"application_date": "2002-12-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Contents receiving system and contents receiving method",
	"summary": "",
	"abstract": "A user can select a style sheet applied to an XML document as broadcast program information on a screen. In addition, the user can select display mode/non-display mode of broadcast program information. When the user has selected the display mode, he or she can select link information include mode/link information non-include mode for a menu button. Since a style sheet described in an XSL language or a CSS language is text format data, the use can read it. Thus, the user can edit and update a style sheet through a console. As a result, data in a markup language format can be provided in a representation format corresponding to user's favorite. Thus, the efficiency and flexibility of data delivery are improved.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "07020839",
	"publication_date": "2006-03-28",
	"application_number": "09786223",
	"application_date": "2000-07-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic pet system, network system, robot, and storage medium",
	"summary": "",
	"abstract": "A virtual electronic pet and a pet-type robot that changes emotional state and instinct state according to surrounding information and internal information. The electronic pet behaves according to the emotional state and the instinct state. Transmission/reception of the internal state of the electronic pet (pet characteristic information) is made possible among the virtual electronic pet, the pet-type robot, and a personal computer. Thus, the action of the electronic pet is implemented by each device in accordance with the internal state of the electronic pet affected by other equipment.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "07089083",
	"publication_date": "2006-08-08",
	"application_number": "10411184",
	"application_date": "2003-04-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information processing apparatus and method and recording medium",
	"summary": "",
	"abstract": "There is provided an information processing apparatus for controlling another electronic apparatus through a network, comprising: retrieving means for retrieving information associated with control over another electronic apparatus; storage means for storing a plurality of pieces of the information retrieved by the retrieving means; selecting means for selecting a desired piece of information from among the plurality of pieces of information; registration means for registering the desired piece of information as only information that can control another electronic apparatus on the network; and control means for controlling another electronic apparatus on the basis of the desired piece of information registered by the registration means.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "07149785",
	"publication_date": "2006-12-12",
	"application_number": "09714016",
	"application_date": "2000-11-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information processing apparatus and method, and storage medium",
	"summary": "",
	"abstract": "An information processing apparatus is disclosed which is connected to a server along with other information processing apparatuses through a network and which is supplied with a shared virtual space. The apparatus comprises an inputting element for allowing a user to input strings of characters constituting a chat carried on via an avatar which is active in the shared virtual space as an incarnation of the user, a transmitting element for transmitting strings of characters input through the inputting element to the server as character data, a converting element for converting the character data coming from the server into audio data, and an outputting element for audibly outputting the audio data converted by the converting element.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "07007065",
	"publication_date": "2006-02-28",
	"application_number": "09837341",
	"application_date": "2001-04-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information processing method",
	"summary": "",
	"abstract": "An information processing apparatus, an information processing method and a computer-readable medium for use with a virtual reality environment are provided. The information processing apparatus includes a sensing-area setting means for setting an area used to sense information on objects, and a transmission-area setting means for setting an area used for transmitting information on an object. The transmission area may be set wider than the sensing area. Thus, according to the present invention, information on an object can be reported to another object located at a remote position with a higher degree of reliability.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "06982709",
	"publication_date": "2006-01-03",
	"application_number": "11104223",
	"application_date": "2005-04-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information processing terminal or control method therefor",
	"summary": "",
	"abstract": "Amount information stored in an IC chip installed in a portable terminal has been encoded, and no key is contained in the same terminal for protection against unauthorized use. On the other hand, in order to allow the information to be viewed even offline, a portion of the information can be displayed by a specific application. After a viewer application is downloaded from a service provider, followed by mutual authentication with the IC chip, the application is enabled on the terminal, and the extent viewed is registered. Therefore, the amount information stored in the IC card or IC chip can be displayed even in an offline environment.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "07066385",
	"publication_date": "2006-06-27",
	"application_number": "10433663",
	"application_date": "2002-10-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information processing unit, control method for information processing unit for performing operation according to user input operation, and computer program",
	"summary": "",
	"abstract": "A keyboard mode is switched according to the determination of a finger contact on a touch sensitive pad to assign mouse buttons to specific keys, such as the F and J keys, on the keyboard. The user can use the touch sensitive pad without separating the hands from the home positions. Keys other than the F and J keys can be substituted for the mouse buttons as desired. The touch sensitive pad can be used as a shift key, and the function thereof can be temporarily assigned to a key on the keyboard.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "07119795",
	"publication_date": "2006-10-10",
	"application_number": "10645100",
	"application_date": "2003-08-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for supporting image creating and storing of the same",
	"summary": "",
	"abstract": "At least a part of the three-dimensional community space is divided into regions and the right to use a region is sold at a particular price to a user who wants to obtain it. A user having the right to use a region is allowed to build an element such as a building or a signboard in the region via an avatar. If an attractive signboard with high originally is built, the region in which the signboard is built and also nearby regions become popular. As a result, the economic value of such a region becomes high. If desired, a user is allowed to resell his/her region via auction.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "07139796",
	"publication_date": "2006-11-21",
	"application_number": "09947502",
	"application_date": "2001-09-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Shared virtual space conversation support system using virtual telephones",
	"summary": "",
	"abstract": "A conversation support system and a conversation support method for providing a realtime communications environment in which a plurality of users simultaneously participate in a virtual world built and provided on a computer network for realtime talking. A shared virtual space accommodates remote communications infrastructures such as mobile telephone, PHS, and public telephone. Avatars can have a talk with each other by use of these infrastructures regardless of the locations of the communicating avatars, namely regardless of whether each avatar is inside or outside its aura. Namely, the avatars can communicate each other beyond a single shared virtual world. The PHS owned by each avatar can communicate with any PHS in another virtual world or even in the real world.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "07086005",
	"publication_date": "2006-08-01",
	"application_number": "09714637",
	"application_date": "2000-11-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic semantic control of a speech recognition system",
	"summary": "",
	"abstract": "A method and apparatus are provided for automatically recognizing words of spoken speech using a computer-based speech recognition system according to a dynamic semantic model. In an embodiment, the speech recognition system recognizes speech and generates one or more word strings, each of which is a hypothesis of the speech, and creates and stores a probability value or score for each of the word strings. The word strings are ordered by probability value. The speech recognition system also creates and stores, for each of the word strings, one or more keyword-value pairs that represent semantic elements and semantic values of the semantic elements for the speech that was spoken. One or more dynamic semantic rules are defined that specify how a probability value of a word string should be modified based on information about external conditions, facts, or the environment of the application in relation to the semantic values of that word string. A speech recognition application, upon receiving the keyword-value pairs, instructs the speech recognizer to modify one or more of the probability values, according to the dynamic semantic rules. The dynamic semantic rules are applied to the word strings and the keyword-value pairs. The speech recognizer modifies one or more of the probability values, re-orders the word strings, and returns control to the application. As a result, the speech recognizer may adjust dynamically to a changing likelihood that a speaker uttered a particular utterance, as the application executes, depending on the context of the application and the external factors.",
	"url": null,
	"owner": "Speech Works International, Inc.",
	"publication_number": "07127393",
	"publication_date": "2006-10-24",
	"application_number": "10364298",
	"application_date": "2003-02-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Autonomous multi-services card",
	"summary": "",
	"abstract": "An autonomous multi-services card provides internal control over communications, so that host computer control input is not required. Communications performance is improved, especially for real time communications such as telephone conversations, because the autonomous multi-services card does not wait on late or failed control input from the host computer. The autonomous multi-services card is comprised of a communications processing system connected to a network interface, telephone interface, video interface, and computer interface. The communications processing system controls: 1) the exchange of voice signals with a telephone connection, 2) the exchange of video signals with a video connection, 3) the exchange of data with a host computer connection, and 4) the exchange of the data, video signals, and voice signals with a network connection.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "07133392",
	"publication_date": "2006-11-07",
	"application_number": "10006406",
	"application_date": "2001-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Centralized monitoring and early warning operations console",
	"summary": "",
	"abstract": "An application monitoring system is provided. The application monitoring system includes a monitor component to monitor statistics related to an application in operation. A reporting component is in communication with the monitor component and is operable to capture the statistics of the application in operation monitored by the monitor component. A trigger component analyzes the statistics of the application monitored by the monitor component and compares the statistics of the application with a threshold and generates a trigger signal based on the relationship of the statistics of the threshold. A dashboard component is operable to identify the application to monitor and provide an application threshold. A method of monitoring an application using an application monitoring system is also provided.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "07069184",
	"publication_date": "2006-06-27",
	"application_number": "10681930",
	"application_date": "2003-10-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer framework and method for isolating a business component from specific implementations of a datastore",
	"summary": "",
	"abstract": "The present invention relates to a computer framework and method for a business component to retrieve data from a backend datastore using object technology. The invention discloses a method for isolating a business component from specific implementations of a datastore, including the steps of supplying a database wrapper; using the database wrapper to begin a database session; supplying a domain object factory; using the domain object factory to create a domain object; converting the domain object from a persistent state to a transient state; ending the database session; and returning the domain object to the business component. The invention further discloses a framework for isolating a business component from specific implementations of a datastore, comprising a database wrapper in communication with a business component; a domain object factory in communication with the database wrapper; a domain object in communication with the domain object factory; and a datastore in communication with the domain object.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "07031976",
	"publication_date": "2006-04-18",
	"application_number": "09579623",
	"application_date": "2000-05-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed extract, transfer, and load (ETL) computer method",
	"summary": "",
	"abstract": "The present invention is a distributed extract, transform and load (ETL) method for delivering information within a computing environment, comprising extracting information from an information source and transforming the extracted information. The transformed information is isolated by wrapping the transformed information into a message envelope having a standard format. The message envelope is routed to at least one information target, unwrapped to reveal the received information, preferably transformed again, and loaded into the information target. The extraction, transformation, and adaptation steps on the source side are isolated from the routing step such that the extraction, transformation, and adaptation steps on the source side may be executed simultaneously for a plurality of information sources distributed across the computing environment to produce a plurality of message envelopes. The routing, unwrapping, mapping, transformation, and loading steps on the target side are repeated for each of the plurality of message envelopes.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "07051334",
	"publication_date": "2006-05-23",
	"application_number": "09843682",
	"application_date": "2001-04-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for network-level monitoring of queue-based messaging systems",
	"summary": "",
	"abstract": "A distributed computing environment and associated method for monitoring a queue-based messaging system. The queue-based messaging system controls the exchange of messages between a server process and client process applications. A messaging application residing at the server computer platform and forming part of the queue-based messaging system manages a plurality of trigger-initiated local queues, each associated with one of the plurality of client process applications and having queue depth, trigger enable, get enable and put enable attributes. A monitoring tool residing on the server computer platform acquires a value for the queue depth, trigger enable, put enable and get enable attributes for a plurality of trigger-initiated local queues and generally simultaneously displays, on a user interface coupled to the server computer platform, the value for the queue depth, trigger enable, put enable and get enable attributes for each one of the plurality of trigger-initiated local queues.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "07127507",
	"publication_date": "2006-10-24",
	"application_number": "09965255",
	"application_date": "2001-09-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for accessing a universal message handler on a mobile device",
	"summary": "",
	"abstract": "A mobile information device may execute a Java MIDlet or a non-MIDlet application. The mobile information device may further include an object-oriented application program interface that allows one or more object-oriented object classes to allow input and output data to be communicated between Java MIDlets in different MIDlet Suites and between non-MIDlet applications. The application program interface may be used to allow applications to access a universal message handler executing on the mobile information device.",
	"url": null,
	"owner": "Sprint Spectrum L.P.",
	"publication_number": "07092703",
	"publication_date": "2006-08-15",
	"application_number": "10761706",
	"application_date": "2004-01-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for automatic testing of network elements",
	"summary": "",
	"abstract": "A method and system for the testing of multiple elements in a communications network. The method may include using a test host that has both control and data input/output capabilities. The test host may send a signal over the network via one communication device, such as a mobile station, that is connected to and controlled by the test host. A resulting signal may then be received at the communication device or at a second communication device, which may be another mobile station, that is connected to and controlled by the test host. A comparison of the signal sent into the network with the signal received from the network may be used to verify proper operation of any elements in the network.",
	"url": null,
	"owner": "Sprint Spectrum L.P.",
	"publication_number": "07010295",
	"publication_date": "2006-03-07",
	"application_number": "09842550",
	"application_date": "2001-04-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for managing location polling intervals",
	"summary": "",
	"abstract": "A method and system for managing location polling intervals is provided. A location determining element will determine a mobile station's current location and will compare the current location to a designated location. Based on the comparison between the current location and the designated location, the location determining element will compute a next time to determine the mobile station's current location. This process will repeat until the mobile station is located at or within a range of the designated location. Once the mobile station is located at or within the range of the designated location, the location determining element will notify a content server, which will provide specific content to the mobile station.",
	"url": null,
	"owner": "Sprint Spectrum L.P.",
	"publication_number": "07149504",
	"publication_date": "2006-12-12",
	"application_number": "10670872",
	"application_date": "2003-09-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for push launching applications with context on a mobile device",
	"summary": "",
	"abstract": "A mobile information device may execute a Java MIDlet or a non-MIDlet application. The mobile information device may further include an object-oriented application program interface that allows one or more object-oriented object classes to allow input and output data to be communicated between Java MIDlets in different MIDlet Suites and between non-MIDlet applications. The application program interface may be used to push launch applications with context on the mobile information device.",
	"url": null,
	"owner": "Sprint Spectrum L.P.",
	"publication_number": "07079839",
	"publication_date": "2006-07-18",
	"application_number": "10762052",
	"application_date": "2004-01-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application-layer anomaly and misuse detection",
	"summary": "",
	"abstract": "A method includes passing a request for data received by a first server process executing in a first server to a detection process that includes packing a subset of the data into an analysis format and passing the subset to an analysis process.",
	"url": null,
	"owner": "SRI International",
	"publication_number": "07143444",
	"publication_date": "2006-11-28",
	"application_number": "09996154",
	"application_date": "2001-11-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for expanding in friendly manner the functionality of a portable electronic device and corresponding portable electronic device",
	"summary": "",
	"abstract": "The invention relates to a method of expanding the functional capabilities of portable electronic devices with user friendly modes, wherein a host device is associated a quick-connect function-expanding module. In this method, at each installation of a given module, the functional expansion module and the host device recognize each other; on first installation of a given module in the host device, a series of checking operations are carried out automatically; the user can select to activate the available expansion; and once a given application is selected, the configuration and functions required for each application are stored.",
	"url": null,
	"owner": "STMicroelectronics S.r.l.",
	"publication_number": "07036130",
	"publication_date": "2006-04-25",
	"application_number": "10035542",
	"application_date": "2001-12-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for information life cycle management model for data migration and replication",
	"summary": "",
	"abstract": "The invention provides a system for information lifecycle management of storage data on a storage network architecture. The system provides for bi-directional data transfer between an information lifecycle management controller, a host file system storage area network and an information lifecycle management storage area network. The information lifecycle management controller helps manage the data storage file transfers between the subsystems of the host file system storage area network and information lifecycle management storage area network. The method provides an information lifecycle management shim program, which resides in the host computer of the host file system storage area network, for hostless information lifecycle management of the data storage files. The system further provides a user-defined information lifecycle management of the migration, replication, copying, and backing up of the storage data files.",
	"url": null,
	"owner": "Storage Technology Corporation",
	"publication_number": "07007048",
	"publication_date": "2006-02-28",
	"application_number": "10447553",
	"application_date": "2003-05-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Superposition of data over voice",
	"summary": "",
	"abstract": "Method and apparatus for transmitting messages between communication devices via a communication channel allowing at least voice messages to be transmitted, the messages including data subdivided in a sequence of basic data units, the method including: a) encoding the basic data units as unique signals (us) including a predetermined number of basic signals (b), each basic signal having a unique fixed frequency (f); b) transmitting a sequence of unique signals (us) during a sequence of fixed time periods (t, t t, . . . ); c) receiving and decoding the sequence of unique signals (us) into the sequence of basic data units; the data being transmitted in superposition over voice.",
	"url": null,
	"owner": "Sun Microsystem, Inc.",
	"publication_number": "07145991",
	"publication_date": "2006-12-05",
	"application_number": "10753394",
	"application_date": "2004-01-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generating standalone MIDlets from a testing harness",
	"summary": "",
	"abstract": "A testing harness for a design-under-test is modified to include a standalone implementation of an application programming interface used in developing the design-under-test. The standalone implementation is adapted to a target device, and is packaged with an executable application or MIDlet, together with any needed resource files. Either the package, or optionally a JAR and JAD file, is downloaded to a remote user for execution on the target device. Using the application programming interface and the other downloaded files, the remote user can test the target device, analyze the results, and even modify the test conditions without recourse to the testing harness. The arrangement provides a capability for a party who is not privileged to know details of the testing harness to practically evaluate and modify the design-under-test using a standalone testing application.",
	"url": null,
	"owner": "Sun Microsystems Inc.",
	"publication_number": "07143310",
	"publication_date": "2006-11-28",
	"application_number": "10347748",
	"application_date": "2003-01-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "HTTP transaction monitor with sequence replay capacity",
	"summary": "",
	"abstract": "A method for monitoring data flow in a web application hosted on a server includes obtaining a list of HTTP requests processed on the server while interacting with the web application, selecting a number of HTTP requests from the list, and sending a request to the server to re-process the selected number of HTTP requests in a predetermined sequence.",
	"url": null,
	"owner": "Sun Microsystems Inc.",
	"publication_number": "07099939",
	"publication_date": "2006-08-29",
	"application_number": "09874893",
	"application_date": "2001-06-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Abstract user interface manager with prioritization",
	"summary": "",
	"abstract": "An invention is provided for abstracting a user interface. A request is received from an application program to present data to a user. A determination is made as to which user interface devices are currently available, and a particular user interface device is selected to present the data. Abstract controls for the selected user interface device are provided to the application program, which are then used to present the data to the user using the selected user interface device.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07058898",
	"publication_date": "2006-06-06",
	"application_number": "10104245",
	"application_date": "2002-03-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Acceleration of graphics for remote display using redirection of rendering and compression",
	"summary": "",
	"abstract": "A system and method are disclosed for improving the remote display of graphics images by the redirection of rendering and the optional use of image data compression. Instead of sending graphics commands over a network and rendering on a remote computer system, graphics commands may be automatically redirected by modified OpenGL functions to local graphics devices without explicit involvement by the graphics application. The modifications to a set of the OpenGL functions on the local system are transparent in the normal mode of rendering and displaying locally. After an image is rendered locally, it may be read back and sent across the network. A standard X Server on the remote system may be sufficient to support this methodology. An X Extension for data decompression on the remote system, however, may allow for more efficient image transmission through the use of image data compression.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06989836",
	"publication_date": "2006-01-24",
	"application_number": "10117441",
	"application_date": "2002-04-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Access control for an e-commerce application",
	"summary": "",
	"abstract": "A system and method for selectively granting access to a target object. In one embodiment, the system includes an object data store, an access control instruction data store, an action data store, a context, and an access determination engine. The object data store includes a plurality of hierarchically structured target objects and a plurality of hierarchically structured actor objects. The access control instruction data store includes a plurality of hierarchically structured access control instructions. The action data store comprising a plurality action objects. The context includes an actor attribute, an action attribute, and a target attribute. The access determination engine configured to selectively grant access to the target object based on a first set of access control instructions having attributes that match the context and a second set of access control instructions having attributes that are hierarchically broader than the attributes of the context.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07120698",
	"publication_date": "2006-10-10",
	"application_number": "09956083",
	"application_date": "2001-09-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Active block write-back from SRAM cache to DRAM",
	"summary": "",
	"abstract": "An external cache management unit for use with 3D-RAM and suitable for use in a computer graphics system is described. The unit maintains and tracks the status of level one cache memory in the 3D-RAM. The unit identifies dirty blocks of cache memory and prioritizes block cleansing based on a least used algorithm. Periodic block cleansing during empty memory cycles is provided for, and may also be prompted on demand.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07027064",
	"publication_date": "2006-04-11",
	"application_number": "10086174",
	"application_date": "2002-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Applet permissions manager",
	"summary": "",
	"abstract": "Disclosed are novel methods and apparatus for providing a permissions manager capable of assisting an applet, for example, in determination and/or grant of the permissions required for an operation. In an embodiment, an apparatus for managing permissions is disclosed. The apparatus includes a software application, a permissions manager coupled to the software application and receiving a request sent by the software application, and a programming environment coupled to the permissions manager. The request may indicate a permission, which may be requested by the permissions manager. The permissions manager may access the programming environment to determine a required permission corresponding to the permission and to determine how to grant the required permission.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06993665",
	"publication_date": "2006-01-31",
	"application_number": "10138137",
	"application_date": "2002-05-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application programming interface for connecting a platform independent plug-in to a web browser",
	"summary": "",
	"abstract": "Embodiments of the present invention relate to the implementation of an Application Programming Interface (API) that enables platform independent plug-ins to work with browser applications. In one or more embodiments of the present invention, the API allows platform independent plug-ins to use XPCOM (Cross Platform Component Object Model), a technology that allows software components of different various programming languages to communicate. In one or more embodiments of the present invention, the API enables platform independent plug-ins to take advantage of existing BlackConnect and Scriptable Plug-In API technologies to integrate with the native plug-in API. Embodiments of the present invention ensures backward code compatibility by allowing the current platform independent plug-in API and browser API to remain unchanged. Furthermore, embodiments of the present invention enables platform independent plug-ins to communicate and use components created in native programming languages such as C++. This promotes component reuse and eases the development effort.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07069562",
	"publication_date": "2006-06-27",
	"application_number": "10021915",
	"application_date": "2001-12-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Architecture for building web applications",
	"summary": "",
	"abstract": "A method and apparatus for providing a Web application framework is provided. The framework includes four main components which are used in combination to create Web servers of varying complexity depending on the needs of the end use. The framework includes a Server object, a Handler object, a Properties object, and a Request object. A Server object is created with an initial set of properties and calls a Hander object. The Handler object defines how URL requests are processed by the Web server. When a request appears at the server, the Request object obtains and formats the request for subsequent processing. The Handler object works with the Properties object to process the request. Multiple Handler objects may be chained together to create a Web application that can perform many operations without being restricted to traditional server designs.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07089560",
	"publication_date": "2006-08-08",
	"application_number": "09624445",
	"application_date": "2000-07-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "assistant for creation of layouts or reports for databases",
	"summary": "",
	"abstract": "An assistant for the creation of layouts/reports for databases is disclosed. A layout for a database is the arrangement of information for the database such as for data entry or screen viewing, and a report (or report format) for a database is the arrangement of information from the database for presentation of the data in a printed document or with on-line viewing. The assistant serves to automate in the creation of the layout/reports after an interview sequence with a user.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07000182",
	"publication_date": "2006-02-14",
	"application_number": "09378526",
	"application_date": "1999-08-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatically deriving an application specification from a web-based application",
	"summary": "",
	"abstract": "A method for deriving an application specification from an enterprise application including mapping the enterprise application to obtain a plurality of states and a plurality of transitions, monitoring the enterprise application to obtain a list of variable usages for each of the plurality of states, parsing source code of the enterprise application to obtain process logic for each of the plurality of transitions, and deriving the application specification using each of the plurality of states, the plurality of transitions, the list of variable usages for each of the plurality of states, and the process logic for each of a plurality of transitions.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06996798",
	"publication_date": "2006-02-07",
	"application_number": "10157303",
	"application_date": "2002-05-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Blending the edges of multiple overlapping screen images",
	"summary": "",
	"abstract": "A graphics system comprises pixel calculation units and a sample buffer which stores a two-dimensional field of samples. Each pixel calculation unit selects positions in the two-dimensional field at which pixel values (e.g. red, green, blue) are computed. The pixel computation positions are selected to compensate for image distortions introduced by a display device and/or display surface. Non-uniformities in a viewer's perceived intensity distribution from a display surface (e.g. hot spots, overlap brightness) are corrected by appropriately scaling pixel values prior to transmission to display devices. Two or more sets of pixel calculation units driving two or more display devices adjust their respective pixel computation centers to align the edges of two or more displayed images. Physical barriers prevent light spillage at the interface between any two of the display images. Separate pixel computation positions may be used for distinct colors to compensate for color distortions.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07002589",
	"publication_date": "2006-02-21",
	"application_number": "09809825",
	"application_date": "2001-03-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Block-partitioned technique for solving a system of linear equations represented by a matrix with static and dynamic entries",
	"summary": "",
	"abstract": "One embodiment of the present invention provides a system that uses a block-partitioned technique to efficiently solve a system of linear equations. The system first receives a matrix that specifies the system of linear equations to be used in performing a time-based simulation. This matrix includes a static portion containing entries that remain fixed over multiple time steps in the time-based simulation, as well as a dynamic portion containing entries that change between time steps in the time-based simulation. Next, the system performs the time-based simulation, wherein performing the time-based simulation involves solving the system of linear equations for each time step in the time-based simulation. In solving the system of linear equations, the system factorizes the static portion of the matrix only once, and reuses the factorization of the static portion in performing an overall factorization of the matrix for each time step of the time-based simulation.",
	"url": null,
	"owner": "SUN Microsystems, Inc.",
	"publication_number": "07089275",
	"publication_date": "2006-08-08",
	"application_number": "10354330",
	"application_date": "2003-01-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Change sequence number generator",
	"summary": "",
	"abstract": "A directory server including a supplier server, a consumer server in communication with the supplier server, a plurality of pluggable services that manage replication of data contained within the directory server from the supplier server to the consumer server, and a change sequence number used to determine ordering of operations performed on the consumer server. Replication of data is managed using the change sequence number.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07096236",
	"publication_date": "2006-08-22",
	"application_number": "09993939",
	"application_date": "2001-11-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Cluster configuration repository",
	"summary": "",
	"abstract": "A system for providing real-time cluster configuration data within a clustered computer network including a plurality of clusters, including a primary node in each cluster wherein the primary node includes a primary repository manager, a secondary node in each cluster wherein the secondary node includes a secondary repository manager, and wherein the secondary repository manager cooperates with the primary repository manager to maintain information at the secondary node consistent with information maintained at the primary node.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07010617",
	"publication_date": "2006-03-07",
	"application_number": "09846250",
	"application_date": "2001-05-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Compliance testing communication protocols implemented on resource-constrained computing devices",
	"summary": "",
	"abstract": "One embodiment of the present invention provides a system that supports compatibility testing of functionality provided through an Application Programming Interface (API) on a computing device. During operation, the system loads a client testing module on the computing device. The system also loads a remote testing module on a server. Once the client testing module and the remote testing module have been loaded, the system identifies a communication protocol that is available between the computing device and the server, and configures a communication-protocol-specific portion of the client testing module to communicate with the remote testing module through the available communication protocol. The system then compatibility tests the functionality provided through the API on the computing device. During this compatibility testing, certain portions of the test execute within the client testing module while other portions of the test execute within the remote testing module. Hence, the client testing module and the remote testing module work together in a distributed manner to compatibility test the computing device.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07155639",
	"publication_date": "2006-12-26",
	"application_number": "10226522",
	"application_date": "2002-08-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer arrangement using non-refreshed DRAM",
	"summary": "",
	"abstract": "A computer arrangement with a processor () and at least one memory unit () connected to the processor () and including dynamic random access memory (), wherein the computer arrangment is arranged to use but not to refresh at least part of the dynamic random access memory () while running a program.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07020740",
	"publication_date": "2006-03-28",
	"application_number": "10148927",
	"application_date": "2000-12-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer-readable medium with microprocessor to control reading and computer arranged to communicate with such a medium",
	"summary": "",
	"abstract": "Computer-readable medium provided with a memory area () for storing data and a distinct microprocessor () having a communication interface (), a memory unit () and a processor unit () connected to both the communication interface () and the memory unit (). The data may include a first data portion which is arranged to be read and decrypted by a computer arrangement () provided at least one condition is met, and the microprocessor () being arranged to generate at least one cryptographic key once the condition is met that is necessary to decrypt the data. The invention is also directed to a computer arrangement arranged to communicate with such a medium.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07080261",
	"publication_date": "2006-07-18",
	"application_number": "10148916",
	"application_date": "1999-12-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data exchange system comprising portable data processing units",
	"summary": "",
	"abstract": "Data exchange system includes at least one portable data processing unit with data communication processing and memory units, the latter including an executive program and one or more application descriptors, each application description including at least one interaction context comprising commands, data elements, data references, procedures, access conditions, and external references; the structure of the data elements and the data references as well as other references is chosen in such a way that a very efficient use of the restricted memory space of e.g. smart cards is obtained.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "RE039269",
	"publication_date": "2006-09-05",
	"application_number": "10164597",
	"application_date": "2002-06-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data network with independent transmission channels",
	"summary": "",
	"abstract": "A data network provides independent transmission channels for transmitting high bandwidth and low latency information data packets between nodes. The data information packets are organized into at least two groups of data packets according to predetermined criteria. The predetermined criteria includes a latency budget of the data packets, the size of the data packets and the type of operation. The low latency channel is also coupled to transmit control information relating to network protocol.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07061929",
	"publication_date": "2006-06-13",
	"application_number": "09540779",
	"application_date": "2000-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Delta transfers in distributed file systems",
	"summary": "",
	"abstract": "Disclosed are novel methods and apparatus for delta transfers in distributed file systems. In an embodiment, a communication system for transferring a delta of a file is disclosed. The communication system includes a sender site, a file transfer system, and a receiver site. The sender site includes a database with a trove section and a transfer section. The file transfer system includes a trove reader and a transfer reader. The trove reader may communicate with the trove and transfer sections. The transfer reader may have access to the transfer section. The receiver site receives the file delta from the transfer reader. The receiver site includes a file installer, which patches a previously installed version of the file with the file delta.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07092972",
	"publication_date": "2006-08-15",
	"application_number": "10142413",
	"application_date": "2002-05-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Design and redesign of enterprise applications",
	"summary": "",
	"abstract": "An enterprise application may be constructed or reconstructed according to a system and method for designing or redesigning enterprise applications. The design or redesign process may include identification of the application type, in addition to representation of the application type as a decomposition of software components. The design or redesign may focus on reviewing code level component design and utilization. The code level design or redesign may include an analysis of each component within each use case within each tier based on patterns, frameworks, and/or refactoring. The application design or redesign may yield recommendations for code creation or code improvements. The recommendations may include specific application enhancements. The recommendations may include specific code design to be incorporated during construction or reconstruction. The recommendations may include results for guiding the design or redesign phase for an application.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07076762",
	"publication_date": "2006-07-11",
	"application_number": "10113134",
	"application_date": "2002-03-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Determining object graph and object graph projection",
	"summary": "",
	"abstract": "A method for generating a projected graph data structure, including generating a request for the projected graph data structure using a variable usage specification, retrieving a server graph data structure using the request, generating a projected graph data structure representation using the request, the server graph data-structure, and a schema associated with the server graph data-structure, and instantiating the projected graph data-structure using the projected graph data-structure representation.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07058655",
	"publication_date": "2006-06-06",
	"application_number": "10044927",
	"application_date": "2002-01-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Development of manifest for java embedded server bundle",
	"summary": "",
	"abstract": "An apparatus and method for facilitating development of Java Embedded Server bundles which includes a module containing a set of development tools used in the creation of Java Embedded Server bundles. The module may include a code template tool having sample code segments; a Java Embedded Server manifest generator tool that creates Java Embedded Server manifest files for Java Embedded Server bundles; a Java Embedded Server jar packager tool that packages Java Embedded Server bundles; and a web page link tool having links to Java Embedded Server-related web pages.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07131111",
	"publication_date": "2006-10-31",
	"application_number": "09766209",
	"application_date": "2001-01-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic downloading of keyboard keycode data to a networked client",
	"summary": "",
	"abstract": "The present invention is directed toward dynamic downloading of keyboard keycode data to a networked client. According to one or more embodiments of the present invention, a user logs into a networked client by presenting a smart card to a card reader attached to the client (or by some other authentication mechanism) and enters a PIN into the keyboard. The keycodes entered by the user logging into the client are obtained, translated into ASCII characters, and presented to the smart card. If the PIN is correct, the user is able to log in, otherwise the log in fails. In one embodiment, when the user enters the PIN, a translation table is downloaded from the server into the client. The client uses the translation table to convert the keycodes to ASCII text and presents the ASCII text to the smart card for authentication.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07010806",
	"publication_date": "2006-03-07",
	"application_number": "09861024",
	"application_date": "2001-05-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamically adjusting a sample-to-pixel filter to compensate for the effects of negative lobes",
	"summary": "",
	"abstract": "A graphics system comprises a graphics processor, a sample buffer, and a sample-to-pixel calculation unit. The graphics processor generates samples in response to received stream of graphics data. The sample buffer may be configured to store the samples. The sample-to-pixel calculation unit is programmable to generate a plurality of output pixels by filtering the rendered samples using a filter. A filter having negative lobes may be used. The graphics system computes a negativity value for a first frame. The negativity value measures an amount of pixel negativity in the first frame. In response to the negativity value being above a certain threshold, the graphics systems adjusts the filter function and/or filter support in order to reduce the negativity value for subsequent frames.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07106322",
	"publication_date": "2006-09-12",
	"application_number": "09751673",
	"application_date": "2000-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Efficient construction of message endpoints",
	"summary": "",
	"abstract": "In a distributed computing environment, a message gate may be the message endpoint for a client or service. A message gate may provide a secure message endpoint that sends and receives type-safe messages. Devices may have a gate factory (e.g. message endpoint constructor) that is trusted code on the device for generating gates based on XML message descriptions. In one embodiment, the gate factory may construct a gate from the XML schema of the service, a URI for the service, and an authentication credential. Access to some services may be unrestricted. For such services, a gate may be constructed without an authentication credential, saving the overhead of running an authentication service and incorporating an authentication credential. Gate construction may also be optimized for certain clients that do not desire to perform checking of messages against a service's XML schema. If verification is not desired, a client may avoid or may chose to avoid building (e.g. by a gate factory) some or all of the gate code that checks the messages against the XML schema. Also, the building of a gate may be made lightweight by appropriate reuse or sharing of pieces used to construct other gates. Devices may maintain a cache of gates to avoid constructing them each time the same service is run.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07072967",
	"publication_date": "2006-07-04",
	"application_number": "09660562",
	"application_date": "2000-09-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enhanced quality of identification in a data communications network",
	"summary": "",
	"abstract": "A method for enhanced quality of identification in a data communications network includes obtaining a user identifier that includes an identification server ID and an identification randomized ID. The identification server ID identifies an identification server peer group. The identification server peer group includes at least one server that maintains a mapping between an identification randomized ID and a user authentication peer group capable of authenticating a user associated with a particular randomized ID, and a mapping between the identification randomized ID and user information. The method also includes requesting authorization of the user by presenting the user identifier to a corresponding identification server peer group. Each server in the identification server peer group is configured to search for one or more matching entries including the randomized ID.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07085840",
	"publication_date": "2006-08-01",
	"application_number": "10014823",
	"application_date": "2001-10-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Entry distribution in a directory server",
	"summary": "",
	"abstract": "A method of entry distribution includes receiving requests by a chaining backend from an original client, forwarding requests from the chaining backend to a one of a plurality of remote servers, and returning results from the one of the plurality of remote servers to the original client. The chaining backend is a type of database plug-in that acts as a multiplexer including a directory information tree that provides the hierarchy of the plurality of remote servers.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07016945",
	"publication_date": "2006-03-21",
	"application_number": "09844020",
	"application_date": "2001-04-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enumerated roles in a directory system",
	"summary": "",
	"abstract": "An enumerated role is one that contains a list of target entries as members. By simply searching for the membership of the enumerated role, a client application will obtain a list of all members that possess that enumerated role.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07016907",
	"publication_date": "2006-03-21",
	"application_number": "09867508",
	"application_date": "2001-05-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Facilitating event notification through use of an inverse mapping structure for subset determination",
	"summary": "",
	"abstract": "One embodiment of the present invention provides a system that performs event notification in a distributed computing system. During operation, the system receives an event that was generated at a node in the distributed computing system, wherein the event includes a set of name/value pairs associated with the event. Next, the system compares the event against a set of client event registrations to determine a set of clients to be notified of the event, wherein each client event registration identifies a client and a target set of name/value pairs, wherein the client is to be notified of the event if the target set of name/value pairs matches a subset of the set of name/value pairs associated with the event. Finally, the system sends a notification of the event to the set of clients to be notified of the event.",
	"url": null,
	"owner": "SUN Microsystems, Inc.",
	"publication_number": "07111305",
	"publication_date": "2006-09-19",
	"application_number": "10304347",
	"application_date": "2002-11-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Filter-based attribute value access control",
	"summary": "",
	"abstract": "Various embodiments of systems and methods for implementing filter-based attribute value access control are disclosed. In one embodiment, a method involves designating a location in the directory server, providing attribute related data that includes a filter expression, and selectively controlling access to an entry situated at the designated location using the filter expression in the attribute related data. For example, access to an attribute of the entry may be denied if a criterion defined by the filter expression associated with the attribute is not met by a first value of the attribute.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07024693",
	"publication_date": "2006-04-04",
	"application_number": "10010748",
	"application_date": "2001-11-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Flexible video architecture for generating video streams",
	"summary": "",
	"abstract": "A graphics system comprising a series of calculation units. The calculation units comprise a first subset and a second subset of calculation units. A first calculation unit of the series generates a first digital video stream and a second digital video stream. Each calculation unit of the first subset: (a) passes the second digital video stream to a next calculation unit of the series unmodified; and (b) computes first pixel values, injects or mixes the first pixel values into the first digital video stream, and passes the modified first digital video stream to the next calculation unit. Similarly, each calculation unit of the second subset injects or mixes second pixel values into the second digital video stream, and passes the first digital video stream unmodified. A last calculation unit of the series drives one or more display devices in response to the first and second digital video streams.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06989835",
	"publication_date": "2006-01-24",
	"application_number": "09894617",
	"application_date": "2001-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Frame detector for use in graphics systems",
	"summary": "",
	"abstract": "One embodiment of a method of frame detection may involve storing data indicative of a pulse duration and a number of successive occurrences of pulses having that pulse duration for each of several different pulse durations detected within a first field of a composite synchronization signal. This process may be repeated for one or more other fields of the composite synchronization signal. The data stored for each of the fields may be compared, and a frame signal may be generated dependent on an outcome of said comparing.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07009604",
	"publication_date": "2006-03-07",
	"application_number": "10199474",
	"application_date": "2002-07-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generating results gates in a distributed computing environment",
	"summary": "",
	"abstract": "Embodiments of a mechanism for providing results gates to clients in the distributed computing environment to be used by the clients to access results generated by services on behalf of the clients. A client generates a request message for a service. The request message is generated by a client method gate. The service then generates results in response to the message. A results gate is generated for accessing the results. A gate on the client generates the results gate. The results are then accessed through the results gate. The results are structured as an object (e.g. Java object), and the results gate an object proxy for the results object. The results gate is returned to the process as results of the method call made by the process. In one embodiment, the results gate is a method gate and provides a method interface to the results.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07016966",
	"publication_date": "2006-03-21",
	"application_number": "09693681",
	"application_date": "2000-10-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Graphics system with an improved filtering adder tree",
	"summary": "",
	"abstract": "A sample-to-pixel calculation unit in a graphics system may comprise an adder tree. The adder tree includes a plurality of adder cells coupled in a tree configuration. Input values are presented to a first layer of adder cells. Each input value may have two associated control signals: a data valid signal and a winner-take-all signal. The final output of the adder tree equals (a) a sum of those input values whose data valid signals are asserted provided that none of the winner-take-all signals are asserted, or (b) a selected one of the input values if one of the winner-take-all bits is asserted. The selected input value is the one whose winner-take-all bit is set. The adder tree may be used to perform sums of weighted sample attributes and/or sums of coefficients values as part of pixel value computations.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06989843",
	"publication_date": "2006-01-24",
	"application_number": "09894663",
	"application_date": "2001-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Graphics system with just-in-time decompression of compressed graphics data",
	"summary": "",
	"abstract": "A graphics system and method for increasing efficiency of decompressing blocks of compressed geometry data and reducing redundant transformation and lighting calculations is disclosed. Multiple decompression pipelines are used to increases the decompression speed. A control unit receives blocks of compressed geometry data information and selectively routes them to a plurality of decompression pipelines. Each decompression pipeline is configured to decompress the blocks into a set of vertices. The reduction in redundant calculations is accomplished by delaying the formation of geometric primitives until after transformation and lighting has been performed on the vertices. Transformation and/or lighting are performed independently on a vertex-by-vertex basis without reference to which geometric primitives the vertices belong to. After transformation and or lighting, geometric primitives may be formed utilizing previously generated connectivity information. The connectivity information may include mesh buffer references, vertex tags, or other types of information.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07071935",
	"publication_date": "2006-07-04",
	"application_number": "09332919",
	"application_date": "1999-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Heuristic for generating opposite information for inclusion in focus events",
	"summary": "",
	"abstract": "A method for generating information for inclusion in focus events includes maintaining a list of components requesting focus in a selected application, determining whether a target of a first focus event matches a component at a head of the list, and if the target of the first focus event matches the component at the head of the list, marking the component at the head of the list for inclusion in an opposite field of a second focus event.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07007281",
	"publication_date": "2006-02-28",
	"application_number": "09863058",
	"application_date": "2001-05-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "HTTP transaction monitor",
	"summary": "",
	"abstract": "An apparatus for monitoring data flow in a web application includes a data collector which collects data about transactions on a server that hosts components of the web application. The transactions on the server are initiated through an HTTP request from a client. The apparatus further includes a graphical display which displays the collected data.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07016953",
	"publication_date": "2006-03-21",
	"application_number": "09730686",
	"application_date": "2000-12-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "HTTP transaction monitor with capacity to replay in debuggings session",
	"summary": "",
	"abstract": "A system for monitoring HTTP transactions between a server and a client, including a data collector which runs on the server and collects data from HTTP requests sent by the client to the server and data from HTTP responses sent by the server to the client, a debugging controller which controls an execution mode of the server, a graphical display which displays the collected data and through which replay requests are sent to the server, each replay request specifying a prior HTTP request to be interpreted by the server, a request player which runs on the server and modifies each replay request with a portion of the collected data associated with the prior HTTP request to be interpreted by the server.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07072951",
	"publication_date": "2006-07-04",
	"application_number": "09970114",
	"application_date": "2001-10-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Magnified texture-mapped pixel performance in a single-pixel pipeline",
	"summary": "",
	"abstract": "A system and a method for improving magnified texture-mapped pixel performance in a single-pixel pipeline. A plurality of textured pixel addresses corresponding to a plurality of pixels may be generated. A FIFO or other memory unit may be used to linearly order the plurality of textured pixel addresses. Two consecutive textured pixel addresses out of the plurality of textured pixel addresses may be examined if they map to a common set of texels in texture space. The two consecutive textured pixel addresses may be merged together and propagated down the pipeline if they map to the common set of texels. However, only a first of the two consecutive textured pixel addresses may be propagated down the pipeline if the two consecutive textured pixel addresses do not map to a common set of texels. Texel data may be generated in response to receiving either the combined texel structure or the first of the two textured pixel addresses. The texel data may be filtered using one or more texture filters in order to generate texture values. The next two textured pixel addresses that may be examined by the merge unit include the subsequent two consecutive textured pixel addresses, or a second of the two consecutive textured pixel addresses and a subsequent consecutive textured pixel address.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07145570",
	"publication_date": "2006-12-05",
	"application_number": "10317599",
	"application_date": "2002-12-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing scene graph memory using data staging",
	"summary": "",
	"abstract": "A system and method that manages scene graphs by data staging is contemplated. Data staging entails selectively loading only the portions of the scene graph that are currently needed or likely to be needed in the near future. Other objects in the scene graph that are not currently needed or likely to be needed may be replaced by pointers. The pointers may point to the location from which the objects may be accessed if necessary for a future frame. The replaced portions of the scene graph may be compressed and/or cached to a local memory device (e.g., a local array of read-write optical drives) capable of storing large amounts of data, with the pointers indicating where the objects are stored.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06983283",
	"publication_date": "2006-01-03",
	"application_number": "09970080",
	"application_date": "2001-10-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Matching the edges of multiple overlapping screen images",
	"summary": "",
	"abstract": "A graphics system comprises pixel calculation units and a sample buffer which stores a two-dimensional field of samples. Each pixel calculation unit selects positions in the two-dimensional field at which pixel values (e.g. red, green, blue) are computed. The pixel computation positions are selected to compensate for image distortions introduced by a display device and/or display surface. Non-uniformities in a viewer's perceived intensity distribution from a display surface (e.g. hot spots, overlap brightness) are corrected by appropriately scaling pixel values prior to transmission to display devices. Two or more sets of pixel calculation units driving two or more display devices adjust their respective pixel computation centers to align the edges of two or more displayed images. Physical barriers prevent light spillage at the interface between any two of the display images. Separate pixel computation positions may be used for distinct colors to compensate for color distortions.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07079157",
	"publication_date": "2006-07-18",
	"application_number": "09809891",
	"application_date": "2001-03-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mechanism and apparatus for URI-addressable repositories of service advertisements and other content in a distributed computing environment",
	"summary": "",
	"abstract": "A system and method for interaction and access to shared content among clients and services in a distributed computing environment. A client may access a space service. The space service may store one or more XML service advertisements and/or other XML content in a space, and each of the service advertisements may include information which is usable to access and execute a corresponding service. The space service may include an XML schema which specifies one or more messages usable to invoke functions of the space service. For example, the schema may specify methods for reading advertisements from the space and publishing advertisements in the space. In accessing the space service, the client may send information such as an XML message (as specified in the schema) to the space service at an Internet address. In accessing the space service, the client may search the one or more service advertisements stored in the space. The client may select one of the service advertisements from the space. The desired service may be executed on behalf of the client. Upon execution, the service may generate a set of results. In one embodiment, these results may be published in a new space which may be accessed by the client for whose benefit the service was executed.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07080078",
	"publication_date": "2006-07-18",
	"application_number": "09653614",
	"application_date": "2000-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mechanism for dynamically constructing customized implementations to enforce restrictions",
	"summary": "",
	"abstract": "A mechanism for dynamically constructing service implementations to enforce restrictions on services provided to an application is disclosed. When an application desires an implementation for a particular service, the application makes a request to a framework. The framework receives the request and, in response, determines what restrictions, if any, need to be imposed on the requested implementation. Once the restrictions are determined, the framework dynamically constructs the requested implementation. The requested implementation is constructed such that it incorporates a general implementation of the service, the restrictions, and enforcement logic for enforcing the restrictions on the general implementation. Once the requested implementation is constructed, it is provided to the application. Thereafter, the application invokes the requested implementation directly for services. Since the requested implementation incorporates the restrictions and enforcement logic for enforcing the restrictions, it is not necessary for the application to further interact with the framework. The requested implementation itself will provide the services, and will guarantee that the restrictions are enforced. By dynamically constructing requested implementations in this manner, the framework ensures that the necessary restrictions are enforced on the services provided to the application.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07131008",
	"publication_date": "2006-10-31",
	"application_number": "09483724",
	"application_date": "2000-01-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mechanism for enabling efficient testing of a set of computer code",
	"summary": "",
	"abstract": "A mechanism is disclosed for enabling efficient testing of a set of computer code. Untested code portions within a body of code are determined, and testing priorities are assigned to untested code portions according to how frequently the untested code portions are likely to be invoked during normal operation. More frequently invoked untested code portions are ranked higher than less frequently invoked untested code portions. The prioritized data may be used by a testing team to determine which additional tests should be created for effective and efficient testing of the body of code.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07039902",
	"publication_date": "2006-05-02",
	"application_number": "10164820",
	"application_date": "2002-06-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Message gates using a shared transport in a distributed computing environment",
	"summary": "",
	"abstract": "A message gate is the message endpoint for a client or service in a distributed computing environment. A message gate may provide a secure message endpoint that sends and receives type-safe messages. A gate may have a gate name that is a unique ID that refers only to the gate. A gate may be implemented as a layer above a device's transport layer (e.g. networking sockets). The gate name for each gate may be bound to a transport reference. Multiple gates may share the same message transport. The transport reference may be a transport URI or socket reference and may provide a mechanism for naming an underlying transport and sharing the transport with other gates. Multiple local gates may include a reference to the same transport, however, each local gate may behave independently of the other local gates sending and receiving messages to and from its paired remote gate.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07010573",
	"publication_date": "2006-03-07",
	"application_number": "09693673",
	"application_date": "2000-10-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Messaging system using pairs of message gates in a distributed computing environment",
	"summary": "",
	"abstract": "Various embodiments of message gate pairs are described. A message gate pair may provide a mechanism for communicating requests from clients to services and response from services to clients. A message gate pair may be used to create a secure atomic bi-directional message channel for request-response message passing. The distributed computing environment may employ a message transport in which a message gate exists on both the client and the service. The two gates may work together to provide a secure and reliable message channel. Client and service gates may perform the actual sending and receiving of the messages from the client to the service using a protocol specified in a service advertisement. The message gates may provide a level of abstraction between a client and a service. A client may reference a service through a message gate instead of referencing the service directly. Messages gates may allow clients and services to exchange messages in a secure and reliable fashion over any suitable message transport (e.g. HTTP). For a client, a message gate may represent the authority to use some or all of a service's capabilities. Each capability may be expressed in terms of a message that may be sent to the service. Each such message may be sent through a client message gate that may verify the correctness of the message. The message may be received by a service message gate that may authenticate the message and verify its correctness.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07065574",
	"publication_date": "2006-06-20",
	"application_number": "09658805",
	"application_date": "2000-09-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Metadata-aware enterprise application integration framework for application server environment",
	"summary": "",
	"abstract": "A metadata-aware Enterprise Application Integration (EAI) framework for an application server environment. The framework allows the connector writer to connect to a system using a low-level API. The framework provides a space in a connector in which to define high-level functions. Using the framework, the user can mine metadata for the functions and generate a description of each high-level function that can be dropped into the framework and appear as a high-level function invokable through the connector. This high-level function manifestation, when invoked, drives the low-level API provided by the connector. An adaptive layer may wrap a native Common Client Interface (CCI) exposed by a connector to provide an abstract connector that allows a higher-level abstraction of external Enterprise Information Systems (EIS). The adaptive layer may interpret metadata to model an external EIS as a logical data source. The adaptive layer may be referred to as a metadata-aware CCI adapter.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07152090",
	"publication_date": "2006-12-19",
	"application_number": "10051441",
	"application_date": "2002-01-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for a pipelined network",
	"summary": "",
	"abstract": "A computer system coupled with a pipelined network includes a plurality of initiator nodes coupled to send packets into the network. A plurality of target nodes receive packets sent into the network. The network uses a plurality of pipeline stages to transmit data across the network. Each pipeline stage consumes a known time period, which provides for a predetermined time period for transmission for each packet that is successfully sent from one of the initiator nodes to one of the target nodes. The pipelined network is synchronous in that boundaries of all the pipeline stages are aligned. The pipeline stages include at least an arbitration stage to obtain a path through the network, a transfer stage during which a data packet is transmitted, and an acknowledge stage during which successful transmission of a packet is indicated by the target. To simplify network design, all the pipeline stages are implemented to have equal length.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07065580",
	"publication_date": "2006-06-20",
	"application_number": "09540731",
	"application_date": "2000-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for accelerated post-silicon testing and random number generation",
	"summary": "",
	"abstract": "A method of providing accelerated post-silicon testing for a silicon hardware includes computing a simulation cumulative record of state using a plurality of test instructions and a cycle breakpoint, performing a simulation of an instrumented logic design using the plurality of test instructions and the cycle breakpoint, manufacturing the silicon hardware using the instrumented logic design, computing a silicon cumulative record of state by executing the plurality of instructions using the silicon hardware; and comparing the simulation cumulative record of state to the silicon cumulative record of state.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07133818",
	"publication_date": "2006-11-07",
	"application_number": "10417765",
	"application_date": "2003-04-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for associating metadata attributes with program elements",
	"summary": "",
	"abstract": "One embodiment of the present invention provides a system for associating metadata attributes with program elements. During operation, the system receives source code containing syntactic elements that specify metadata attributes for program elements, wherein the metadata attributes do not affect program execution. The system then parses the source code to obtain the metadata attributes. Next, the system associates the metadata attributes with corresponding program elements and determines values associated with the metadata attributes. Finally, the system incorporates the metadata attributes, including identifiers for the associated values and the associated program elements, into object code for the program, thereby allowing the metadata attributes to be accessed from the object code. Another embodiment of the present invention provides a system for accessing metadata attributes for program elements from object code through an application programming interface (API).",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07013458",
	"publication_date": "2006-03-14",
	"application_number": "10237886",
	"application_date": "2002-09-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for developing enterprise applications using design patterns",
	"summary": "",
	"abstract": "The present invention provides a method and apparatus for developing enterprise applications using design patterns. Over time, different types of enterprise applications have been developed and implemented by various software developers for different purposes. The present invention determines the purpose of the software that is needed by the developer and obtains a design pattern to solve the problem that is in accord with the best practices and patterns derived from these implementations. In turn a developer can rely on the present invention as a tool to develop and implement applications in a three-tier or multi-tier computer architecture.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06993743",
	"publication_date": "2006-01-31",
	"application_number": "09872362",
	"application_date": "2001-06-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for eliminating C recursion from a Java programming language bytecode interpreter",
	"summary": "",
	"abstract": "Methods and apparatus for eliminating C recursion from interpreter loops are disclosed. According to one aspect of the present invention, a computer-implemented method for substantially eliminating C recursion from the execution of static initializer methods in a virtual machine environment includes rewriting native C code associated with a static initializer as a Java programming language method, and using a transition frame in a Java programming language stack to execute the Java programming language method. The method also includes using a native method to manipulate the Java programming language stack, and using a first opcode in the transition frame. In one embodiment, using the first opcode in the transition frame includes using the first opcode to determine that the transition frame is associated with the static initializer. In another embodiment, the method further includes causing the static initializer to run, wherein the static initializer using a second opcode, and resuming execution at the second opcode after the static initializer has run.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07055133",
	"publication_date": "2006-05-30",
	"application_number": "10907698",
	"application_date": "2005-04-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for global image quantification verification",
	"summary": "",
	"abstract": "A method and apparatus are disclosed for testing the accuracy of digital test images generated by a computer graphics program executed on a computer graphics system. A test program is utilized to compare the test image with a reference image. The user defines regions of interest and a maximum error for each region. This allows the user to focus on a particular object or group of objects. Global image quantification verification generates one measurement of error or image difference for each region of the test image. Each region is divided into sub-regions and an average color value is calculated for each sub-region and the corresponding sub-region in the reference image. The differences between the averages for corresponding sub-regions in the test and reference images are calculated. A test image region may be unacceptably different from a reference image if a normalized sum of the absolute differences exceeds the maximum error.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07092572",
	"publication_date": "2006-08-15",
	"application_number": "10113810",
	"application_date": "2002-03-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for hardware acceleration of clipping and graphical fill in display systems",
	"summary": "",
	"abstract": "Embodiments of the present invention are directed to a method and apparatus for hardware acceleration of clipping and graphical fill in display systems. In one embodiment, all display data is presented to the display system. The display system uses its hardware to clip the undesired data, if necessary, and display the desired data. If a sufficient amount of display data has the same value, the display system uses its hardware to fill the appropriate areas using the shared value. In one embodiment, the display system has one or more accelerating registers. In one embodiment, one or more accelerating registers are fill registers. As display data is read from memory, some of the information's color data is classified by the fill registers. In another embodiment, one or more accelerating registers are clipping registers. As display data arrives from each source, the information's display location is classified by the clipping registers.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07002599",
	"publication_date": "2006-02-21",
	"application_number": "10205781",
	"application_date": "2002-07-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for local image quantification verification",
	"summary": "",
	"abstract": "A method and apparatus are disclosed for testing the accuracy of digital test images by comparing the value of each test image pixel with the average value of a corresponding reference image pixel array. The local image quantification verification test program accepts absolute differences between corresponding pixel and array values that are less than a specified difference maximum. The user may specify a difference maximum and a maximum array size, and may restrict the test image comparison to specified regions of the test image with specific difference tolerances for each region. This allows the user to focus the comparison on certain regions as more important than others and to focus a region on a particular object or group of objects.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07076101",
	"publication_date": "2006-07-11",
	"application_number": "10076118",
	"application_date": "2002-02-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for maintaining data integrity",
	"summary": "",
	"abstract": "Techniques are provided for controlling data access to maintain data integrity. A request is received to perform an action on a data element. The request is analyzed based on at least one data access rule associated with the data element. This analysis further utilizes a data structure model associated with the data element. The request is approved if the request satisfies the data access rule. The request is rejected if the request does not satisfy the data access rule.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07039649",
	"publication_date": "2006-05-02",
	"application_number": "10150773",
	"application_date": "2002-05-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for processing data using objects",
	"summary": "",
	"abstract": "One embodiment of the invention provides a method for processing actuator, sensor or radio frequency identification (RFID) tag data. The method includes receiving actuator, sensor or RFID tag data and generating a Java object associated with the actuator, sensor or RFID tag data. The Java object includes an assigned destination address. The method further includes forwarding the Java object to the assigned destination address.",
	"url": null,
	"owner": "SUN Microsystems, Inc.",
	"publication_number": "07130773",
	"publication_date": "2006-10-31",
	"application_number": "11000575",
	"application_date": "2004-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for regional image quantification verification",
	"summary": "",
	"abstract": "A method and apparatus are disclosed for testing the accuracy of digital test images generated by a computer graphics program executed on a computer graphics system. A test program is utilized to compare a test image with a reference image. Regional image quantification verification aims at an image comparison test that accepts minor color value differences and spatial shifts in rendered pixel values. The test image and reference image are divided into corresponding sub-regions. The average color value for each sub-region of the test image is compared to the average color value of the corresponding reference image sub-region and also to other nearby reference image sub-regions. A test image is unacceptably different from a reference image, if for any sub-region of the test image, no reference image sub-region is found with an average color value difference and spatial shift less than specified maximums.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07092571",
	"publication_date": "2006-08-15",
	"application_number": "10113811",
	"application_date": "2002-03-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for restricted run-time environment with dynamic user context",
	"summary": "",
	"abstract": "Embodiments of the present invention are directed to a method and apparatus for restricted run-time environment with dynamic user context. In one embodiment, a user interacts with the computer system through a restricted run-time environment. When the user begins using the computer system at a local machine (i.e., a client), a user context is dynamically created at the local machine. Then, a user interface is initiated in the run-time environment which is isolated from the local machine's system files. In one embodiment, the user interface and all actions resulting from interaction through the interface take place in the isolated run-time environment. In one embodiment, the isolated run-time environment contains its own set of system files that the user may need to access. In one embodiment, the local machine is running the Unixu2122 operating system. A user interacts with the system through an interface running from the chroot directory.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07069275",
	"publication_date": "2006-06-27",
	"application_number": "10223779",
	"application_date": "2002-08-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for selecting a desired application on a smart card",
	"summary": "",
	"abstract": "Where there are potentially two or more applications installed on a smart card, with each application having a stored application identifier (AID), a desired application may be selected by specifying a desired application in terms of multiple parameters, retrieving multiple parameters from a stored AID for an application on the smart card, and comparing the specified multiple parameters with the retrieved multiple parameters to determine whether there is a match.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07140549",
	"publication_date": "2006-11-28",
	"application_number": "10786895",
	"application_date": "2004-02-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for signing and sealing objects",
	"summary": "",
	"abstract": "Signed objects and sealed objects can be generated using embodiments of the invention. A signed object is an object that has an associated digital signature that can be used to authenticate the object. A sealed object is an object that is encrypted to limit access to only authorized entities. A signedObject class is used to create, maintain and authenticate a signed object. A sealed object is created, maintained, and authenticated using a sealedObject class. Nesting can be used to provide multiple levels of signing and/or sealing.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07093134",
	"publication_date": "2006-08-15",
	"application_number": "09607514",
	"application_date": "2000-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for testing embedded examples in GUI documentation",
	"summary": "",
	"abstract": "A method of testing an embedded example in a graphical user interface documentation includes creating an extractable embedded example by tagging the embedded example, extracting the extractable embedded example from the graphical user interface documentation to generate an extracted example, selecting a tagged entity from the extracted example, interpreting the tagged entity to generate an interpreted tagged entity, creating a test suite using the interpreted tagged entity, selecting a graphical tool against which to execute the test suite, executing the test suite against the graphical tool to generate an output response, and verifying the output response.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07100150",
	"publication_date": "2006-08-29",
	"application_number": "10166993",
	"application_date": "2002-06-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for verifying the legitimacy of an untrusted mechanism",
	"summary": "",
	"abstract": "The legitimacy of an untrusted mechanism is verified by submitting a first set of information and a second set of information to the untrusted mechanism in an unpredictable sequence. For each submission of either the first set or the second set of information, a response is received from the untrusted mechanism. Each response is tested to determine if the response is correct for the information set submitted. If any of the responses from the untrusted mechanism is incorrect, then it is determined that the untrusted mechanism is not legitimate. Because the submission sequence is unpredictable, it is highly difficult if not impossible for an illegitimate untrusted mechanism to u201cfakeu201d proper responses. As a result, this verification process provides an effective means for testing and verifying the legitimacy of the untrusted mechanism.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07103910",
	"publication_date": "2006-09-05",
	"application_number": "09483726",
	"application_date": "2000-01-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for determining a directory entry's class of service based on the value of a specifier in the entry",
	"summary": "",
	"abstract": "Class of Service (CoS) is a mechanism that allows a user to share attributes between directory entries in a way transparent to an application. A CoS scheme includes a CoS Definition entry and a CoS Template entry. These two entries interact to provide attribute values to target entries within their CoS u201cscopeu201d. In Classic CoS, an attribute-value pair is matched with a target entry based on the target entry's DN. The CoS Definition entry, which is stored as an LDAP subentry below the branch at which it is effective, identifies the type of CoS being used. The Template entry contains a list of attribute values that are shared. Any change made to the template entry's attribute values is automatically applied to all entries that share the attribute.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07020662",
	"publication_date": "2006-03-28",
	"application_number": "09867595",
	"application_date": "2001-05-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for grouping entries in a directory server by group memberships defined by roles",
	"summary": "",
	"abstract": "Role is a comprehensive grouping mechanism. In a client-server directory system, roles transfer some of the complexity to the directory server. A role is defined by its role definition entry. Assigning entries to roles enables applications to locate the roles of an entry, rather than select a group and browse the members list. Additionally, roles allow for support of generated attribute values, and directory server-performed membership verification for clients. By changing a role definition, a user can change an entire organization with ease. Any client with appropriate access privileges can discover, identify and examine any role definition.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07130839",
	"publication_date": "2006-10-31",
	"application_number": "09867790",
	"application_date": "2001-05-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for managing high-availability-aware components in a networked computer system",
	"summary": "",
	"abstract": "The present invention describes a method and system for managing high-availability-aware components in a networked computer system. In particular, the method includes registering components and dynamically allocating roles and assignments to one or more of the registered components to achieve a desired level of redundancy based on component type information. The method may include an additional step of performing administrative actions on the registered components in response to a request from an external management agent in order to increase the availability of services provided by the high-availability-aware components. Further, the method may additionally include responding to an error by changing roles and assignments of one or more of the registered components, providing information to registered components so that related components may communicate to achieve a desired redundancy level, and/or maintaining additional information relevant to managing high-availability-aware components. Such additional information may include information regarding software release domains, component relationships, and/or protection groups.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07143167",
	"publication_date": "2006-11-28",
	"application_number": "09846380",
	"application_date": "2001-05-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for sharing entry attributes in a directory server using class of service",
	"summary": "",
	"abstract": "A CoS includes a CoS Definition entry and a Template entry. These two entries interact to provide attribute values to target entries within their CoS u201cscopeu201d based on the target entry's DN, presence or absence of the target entry's CoS attribute, the attribute value stored in the target entry's CoS Template, and other factors. The CoS Definition entry, which is stored as an LDAP subentry below the branch at which it is effective, identifies the type of CoS being used. The Template entry contains a list of attribute values that are shared. Any change made to the template entry's attribute values is automatically applied to all entries that share the attribute.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07016893",
	"publication_date": "2006-03-21",
	"application_number": "09867791",
	"application_date": "2001-05-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program for determining version of storage devices and programs indicated in the resource information installed in the computer system",
	"summary": "",
	"abstract": "Provided are a method, system, and program for managing a configuration file including device parameters that define attributes of the device accessed by a device driver executing in a computer. The device driver uses the device parameters to control one or more devices in communication with the computer. A determination is made of device parameters provided with the device driver for a device, wherein the device parameters are maintained external to the configuration file. User selection of at least one of the determined device parameters is received and a parameter code for each selected device parameter is written to the configuration file.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07120652",
	"publication_date": "2006-10-10",
	"application_number": "10134181",
	"application_date": "2002-04-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and article of manufacture for agent processing",
	"summary": "",
	"abstract": "Disclosed is a system, method, and article of manufacture for agent processing. In particular, an agent may be executed within an address space of an invoking process that invoked the agent or may be executed in a separate address space. While the agent is processing, the execution of the agent within the address space of the invoking process may be switched to execution of the agent within the separate address space. Similarly, while the agent is processing, the execution of the agent in the separate address space may be switched to execution of the agent in the address space of the invoking process. Moreover, if the invoking process terminates before completing processing, when the invoking process restarts, the invoking process redetermines which agents should be executed in separate address spaces based on information stored before the invoking process terminated.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07103889",
	"publication_date": "2006-09-05",
	"application_number": "10202662",
	"application_date": "2002-07-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and program for accessing information from devices",
	"summary": "",
	"abstract": "Provided are a computer implemented method, system, and program for enabling access to information from a device. A device program is generated to access device property information from the device. Each device property indicates a state of the device and the device program includes device specific commands to query the device for information on the device properties and device independent statements common to device programs for other devices to buffer the queried property information to return to requesting clients. The device program is stored in a computer readable medium.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07111304",
	"publication_date": "2006-09-19",
	"application_number": "10153484",
	"application_date": "2002-05-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and program for maintaining a database of data objects",
	"summary": "",
	"abstract": "Provided is a method, system, and program for maintaining a database of data objects. A first data object implemented in a first programming language including attributes and attribute values for a class is received. The first data object is transformed to a second data object implemented in a second programming language, wherein the second data object includes the attributes and attribute values of the class included in the first data object. The second data object is added to the database, wherein the database is capable of storing multiple data objects implemented in the second programming language.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07020641",
	"publication_date": "2006-03-28",
	"application_number": "10038892",
	"application_date": "2001-10-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and program for using buffers to provide property value information for a device",
	"summary": "",
	"abstract": "Provided are a computer implemented method, system, and program for accessing information on a device. A first and second buffers are generated in a computer readable medium. The first buffer is indicated as a read buffer. Property values are returned from the buffer indicated as the read buffer in response to requests for property values for the device. The second buffer is indicated as a refresh buffer. Updates to the property values accessed from the device are written to the buffer indicated as the refresh buffer.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07032071",
	"publication_date": "2006-04-18",
	"application_number": "10153546",
	"application_date": "2002-05-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for accessing synchronized broadcast data",
	"summary": "",
	"abstract": "Improved methods and apparatus suitable for accessing synchronized data in a broadcast system are disclosed. A synchronized data accessing system providing an interface that can be used by a data requester to access synchronized data is disclosed. The data requester can initiate a request to access synchronized data using the interface, and data can be made available and accessed by the data requester through the interface.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07062779",
	"publication_date": "2006-06-13",
	"application_number": "09724732",
	"application_date": "2000-11-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods, systems, and articles of manufacture for implementing a runtime logging service storage infrastructure",
	"summary": "",
	"abstract": "Methods, systems and articles of manufacture consistent with the present invention configure a computing system with a logging service that interacts with implementation objects associated with particular types of storage devices through a storage interface. The implementation objects may include processes used to access the storage devices during logging operations. The logging service may also be configured to adjust which storage device is to be used for logging operations without restarting the computing system. This adjustment may be made through a property file that includes properties specific to individual types of storage devices. The property file may be modified to include new properties by a system administrator or by the logging service during runtime operations of the computing system. The new properties may designate new storage devices to be used by the logging service to perform subsequent logging operations.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07062516",
	"publication_date": "2006-06-13",
	"application_number": "09953899",
	"application_date": "2001-09-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mobile multimedia Java framework application program interface",
	"summary": "",
	"abstract": "A mobile multimedia framework API is provided that is capable of operation in mobile hardware devices. The mobile multimedia framework API includes a playback interface, controls, an event listener, an error list, exceptions, events, control types, and protocol handlers. Advantageously, a memory size of the mobile multimedia framework API is less than 100 kilobytes.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07096474",
	"publication_date": "2006-08-22",
	"application_number": "09930851",
	"application_date": "2001-08-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Module for developing wireless device applications using an integrated emulator",
	"summary": "",
	"abstract": "An apparatus for facilitating development of an application for a wireless-connected device including a module have a plurality of development tools for use in the creation of the application and an emulator of the wireless-connected device integrated with the module. An additional emulator for an additional wireless-connected device is also included. The module may be included in an Integrated Development Environment.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07155381",
	"publication_date": "2006-12-26",
	"application_number": "09803835",
	"application_date": "2001-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Object oriented mechanism for dynamically constructing customized implementations to enforce restrictions",
	"summary": "",
	"abstract": "An object oriented mechanism for dynamically constructing service implementations to enforce restrictions on services provided to an application is disclosed. When an application desires an implementation for a particular service, the application makes a request to a framework. The framework receives the request and, in response, determines what restrictions, if any, need to be imposed on the requested implementation. Once the restrictions are determined, the framework dynamically constructs the requested implementation. The requested implementation is constructed such that it incorporates a general implementation of the service, the restrictions, and enforcement logic for enforcing the restrictions on the general implementation. Once the requested implementation is constructed, it is provided to the application. Thereafter, the application invokes the requested implementation directly for services. Since the requested implementation incorporates the restrictions and enforcement logic for enforcing the restrictions, it is not necessary for the application to further interact with the framework. The requested implementation itself will provide the services, and will guarantee that the restrictions are enforced. By dynamically constructing requested implementations in this manner, the framework ensures that the necessary restrictions are enforced on the services provided to the application.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07051067",
	"publication_date": "2006-05-23",
	"application_number": "09483723",
	"application_date": "2000-01-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Overflow predictive arithmetic instruction optimization using chaining",
	"summary": "",
	"abstract": "A method for arithmetic expression optimization includes receiving an operator and at least one operand of a first instruction defined for a first processor having a first base. The method also includes converting the first instruction to a second instruction optimized for a second processor having a second base smaller than the first base when overflow is impossible based at least in part on the operator and the relationship between the operand type and the second base. The method also includes converting instructions in an instruction chain to a wider base larger than the second base and smaller or equal to the first base when the at least one operand carries potential overflow beyond the second base and when the operator is sensitive to overflow. The chain is bounded by the second instruction and a third instruction that has been previously optimized and is the source of the potential overflow.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07107581",
	"publication_date": "2006-09-12",
	"application_number": "10712919",
	"application_date": "2003-11-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Predictive arithmetic overflow detection",
	"summary": "",
	"abstract": "A method for arithmetic overflow detection includes receiving a first instruction defined for a first processor having a first base, where the instruction comprises an operator and at least one operand having an operand type. The method also includes indicating whether the at least one operand has potential overflow based at least in part on the operator and the relationship between the operand type and a result type associated with the operator.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07010786",
	"publication_date": "2006-03-07",
	"application_number": "10712475",
	"application_date": "2003-11-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Request queue management",
	"summary": "",
	"abstract": "Methods and apparatus providing, controlling and managing a dynamically sized, highly scalable and available server farm are disclosed. A Virtual Server Farm (VSF) is created out of a wide scale computing fabric (u201cComputing Gridu201d) which is physically constructed once and then logically divided up into VSFs for various organizations on demand. Each organization retains independent administrative control of a VSF. A VSF is dynamically firewalled within the Computing Grid. Allocation and control of the elements in the VSF is performed by a control plane connected to all computing, networking, and storage elements in the computing grid through special control ports. The internal topology of each VSF is under control of the control plane. A request queue architecture is also provided for processing work requests that allows selected requests to be blocked until required human intervention is satisfied.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07146233",
	"publication_date": "2006-12-05",
	"application_number": "10301497",
	"application_date": "2002-11-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure personal identification number entry in a distributed network",
	"summary": "",
	"abstract": "The present invention relates to secure PIN entry in a distributed network. According to one or more embodiments of the present invention, a client connected to a server contains logic that is used to keep the PIN within the network computer and not send it over the network. In one embodiment, the server sends an instruction to the networked computing device telling it to capture a PIN locally. This instruction causes the networked computer to enter a secure PIN entry mode which logically disconnects the keyboard from the server. Upon receipt of the instruction from the server, one embodiment of the present invention receives keyboard entries on the client computer and places them into a local buffer. The client continues buffering the keyboard entries until an indication that the process is complete. Upon completion of the keyboard entries, they are translated into ASCII characters by the client and sent from the local client buffer to the smart card where the PIN may be verified.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07003797",
	"publication_date": "2006-02-21",
	"application_number": "09861073",
	"application_date": "2001-05-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Smart bookmarks for small footprint device applications",
	"summary": "",
	"abstract": "Users of small footprint devices such as smart cellular phones, personal data assistants, etc. may create and store bookmarks referencing various types of objects and/or data sources. Each bookmark may comprise a Uniform Resource Locator (URL) which may be used to refer to the object/data source. The bookmark system may be open-ended, allowing virtually any type of object or data source to be bookmarked. The bookmarks may later be used by a user or application to reference the respective data source to perform some type of action on the data source, such as displaying or editing it. A lightweight application/service containment framework is described which enables services to run on small footprint devices. A bookmark service may cooperate with an activation framework capable of encapsulating various types of entities. In one embodiment, a bookmark service operates in conjunction together with the JavaBeansu2122 Activation Framework (JAF) to implement the bookmark functionality.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07017159",
	"publication_date": "2006-03-21",
	"application_number": "09333421",
	"application_date": "1999-06-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Stationary semantic zooming",
	"summary": "",
	"abstract": "A system and method for stationary semantic zooming. Stationary semantic zooming allows selected non-spatial rendering attributes, such as level of detail, to be varied according to other specified non-spatial rendering attributes. Stationary semantic zooming allows low importance objects to be rendered with a lower level of detail than higher importance objects. A system and method for displaying network status and realty information using stationary semantic zooming are also disclosed.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07109998",
	"publication_date": "2006-09-19",
	"application_number": "09970082",
	"application_date": "2001-10-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Strategic technology architecture roadmap",
	"summary": "",
	"abstract": "The preferred embodiments relate to a system and method for creating an end-to-end e-business system for an enterprise. In some embodiments, a strategic architecture roadmap includes: a) an upper infrastructure layer having a service-driven architecture, with a virtual application layer having a distributed component architecture, and with a an application infrastructure layer having an n-tiered architecture; and b) a lower infrastructure layer having a network-centric architecture, with a compute server infrastructure layer having an adaptive compute architecture, and with a data storage infrastructure layer having a storage network architecture.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07143420",
	"publication_date": "2006-11-28",
	"application_number": "10230591",
	"application_date": "2002-08-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Superposition of data over voice",
	"summary": "",
	"abstract": "Method and apparatus for transmitting messages between communication devices via a communication channel allowing at least voice messages to be transmitted, the messages including data subdivided in a sequence of basic data units, the method including; a) encoding the basic data units as unique signals (us) including a predetermined number of basic signals (b), each basic signal having a unique fixed frequency (f); b) transmitting a sequence of unique signals (us) during a sequence of fixed time periods (ttt); c) receiving and decoding the sequence of unique signals (us) into the sequence of basic data units; the data being transmitted in superposition over voice.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06996213",
	"publication_date": "2006-02-07",
	"application_number": "09806279",
	"application_date": "1998-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Synchronization of distributed simulation nodes by keeping timestep schedulers in lockstep",
	"summary": "",
	"abstract": "A distributed simulation system includes a plurality of nodes. Each node is configured to simulate a portion of a system under test. The simulation is performed as a series of timesteps. The transition between timesteps is synchronized in the plurality of nodes. In one implementation, the distributed simulation system includes a hub which is configured to synchronize the transition between timesteps in the plurality of nodes. For example, in one embodiment, the hub may receive commands from each of the plurality of nodes. If each command indicates that the corresponding node is capable of completing the timestep, the hub transmits a command to each node indicating that the timestep is complete. The nodes may begin processing the next timestep in response to the command. In other embodiments, a hub may not be included.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07020722",
	"publication_date": "2006-03-28",
	"application_number": "10008643",
	"application_date": "2001-11-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for application-transparent synchronization with a persistent data store",
	"summary": "",
	"abstract": "A system and method for application-transparent synchronization with a persistent data store. In one embodiment, the system may include a persistent data store configured to store a plurality of data items, such as a relational database, for example. The system may further include an application configured to modify a local data subset including a local copy of a given data item. The local data subset may be a disconnected rowset object, for example. Additionally, the system may include a first synchronization provider configured to synchronize the modified local data subset with the persistent data store, where synchronization of a given modified local copy with a corresponding data item occurs transparently to the application.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07146385",
	"publication_date": "2006-12-05",
	"application_number": "10793073",
	"application_date": "2004-03-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for coordinating access to data for a distributed application",
	"summary": "",
	"abstract": "A system and method for controlling access to data in a distributed computer system. Distributed Token Manager (DTM) is a system-level service that coordinates read/write access of data objects (tokens) in a multi-process and multi-threaded environment. The DTM ensures that at any given time either: 1) One or more client processes or threads currently have read access rights to the data object, and no client processes or threads currently have write access rights to the data object; or 2) One client process or thread currently has write access to the data object and no other client processes or threads currently have read or write access rights to the data object. DTM also ensures that such coordination works smoothly even in the case of process/machine/network failure.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07130905",
	"publication_date": "2006-10-31",
	"application_number": "10043809",
	"application_date": "2002-01-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for evaluating and executing hierarchies of rules",
	"summary": "",
	"abstract": "Embodiments of a system and method for hierarchically organizing rules and for evaluating and executing the hierarchy of rules. Each rule in the hierarchy of rules may include a precondition and an action to be executed if the precondition is met. When evaluating and executing the rules, if a precondition of a rule in the hierarchy is not met, then the action of the rule is not executed. Further, rules that descend from the rule in the hierarchy of rules are precluded from evaluation and execution. In one embodiment, modification of the hierarchy of rules may be performed without modification to an application using the hierarchy of rules.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07065745",
	"publication_date": "2006-06-20",
	"application_number": "10320035",
	"application_date": "2002-12-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for event subscriptions for CORBA gateway",
	"summary": "",
	"abstract": "A CORBA Gateway between CORBA-based applications and an enterprise manager may be configurable to manage various networked objects, such as printers, scanners, copiers, telephone systems, cell phones, phone systems, faxes, routers, switches, etc., which may be interconnected via networks. Various embodiments of the CORBA Gateway may include an Event Gateway which manages object events. The CORBA Event Gateway is designed to leverage existing Event Distribution Server (EDS) sinks to provide EDS filtering functionality and EDS object level access control functionality. The approach leverages existing EDS solutions by providing a common sink for all events/notifications and using a unique Event Port Registry to manage the subscriptions of various TMN clients that subscribe for such events/notifications. Generally, the approach described provides the capability to filter events according to criteria presented by client event subscriptions. In one embodiment, the events may be filtered to enforce policy-based access control on TMN events/notifications, determining which CORBA client applications have access to which events. The filtering of events at the sink based upon client subscriptions decreases unnecessary network traffic in that events may be u201cpushedu201d to the client, rather than delivered upon client request. In addition, the approach may provide easy-to-use IDL APIs that allow CORBA clients to directly subscribe/unsubscribe to events based on criteria such as object class, object instance, and event type.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07010586",
	"publication_date": "2006-03-07",
	"application_number": "09552984",
	"application_date": "2000-04-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for pushing personalized content to small footprint devices",
	"summary": "",
	"abstract": "A containment framework sufficiently compact and efficient to run on a wide variety of resource-constrained, small footprint devices, such as personal data assistants (PDAs), smart cellular phones, global positioning system (GPS) receivers, etc. The containment framework may support services which integrate with network-based services to deliver personalized content to small footprint device users.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "06993570",
	"publication_date": "2006-01-31",
	"application_number": "09333383",
	"application_date": "1999-06-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method of descriptively specifying memory placement in a computer system",
	"summary": "",
	"abstract": "In a computer system, a descriptive memory allocation system is described having a memory policy allocation module for setting memory allocation policies by an operating system in response to descriptive resource use requirements provided by an application requesting access to a specified address range in memory. The descriptive memory allocation system includes a descriptive resource allocator that uses descriptive memory use advice provided by an application to decide how to allocate memory to the application. The descriptive resource allocator includes memory allocation policies that may be set by the operating system after the operating system has determined the appropriate allocation scheme to implement based on an allocation advice provided by a requesting after the application. The application in providing its descriptive memory use information does not specify a specific allocation policy the operating system should use to allocate memory to it.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07149863",
	"publication_date": "2006-12-12",
	"application_number": "10682685",
	"application_date": "2003-10-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for controlling access to and generation of localized application values",
	"summary": "",
	"abstract": "A system and method for controlling generation of and access to localized application values to applications. The system includes an administrative interface linked to a running application and to a communications network that is configured for receiving requests for application data from the application. The interface responds by determining obtaining localized application values from a cache or if not cached, from a central database or repository of network localized application values that is also linked to the communications network. Code or mechanisms are provided for creating and populating data structures or objects for storage in the cache. Mechanisms or background threads are also provided for monitoring changes to localized application values in the repository and automatically updating element values in the cache as and when they change.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07007026",
	"publication_date": "2006-02-28",
	"application_number": "10023361",
	"application_date": "2001-12-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for identification of smart cards",
	"summary": "",
	"abstract": "The present invention relates to a system which allows third-party smart cards to be recognized by computing devices configured to receive smart cards. According to one or more embodiments of the present invention, a smart card is presented to a computing device. One or more token IDs are extracted from the smart card. Thereafter, a token type is obtained. In one embodiment, a probe order file is consulted first when the smart card is presented to the computing device. The probe order file is configured to direct a computing device to consult the correct configuration files in the correct order. Using the probe order file, the device inspects each configuration file specified in order. The probing is halted after a configuration file successfully returns a usable identification and card type. If the probing goes through every configuration file and there is no match then the smart card cannot be utilized.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07082614",
	"publication_date": "2006-07-25",
	"application_number": "09801410",
	"application_date": "2001-03-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "UniqueID-based addressing in a directory server",
	"summary": "",
	"abstract": "A method of addressing an entry in a directory server including generating a unique identifier for the entry, creating an encoded address by encoding the unique identifier into a distinguished name, and specifying the entry using the encoded address for a plurality of operations. A method of addressing an entry in a directory server, including generating a unique identifier for the entry, creating an encoded address by encoding the unique identifier into a control, and specifying the entry using the encoded address for a plurality of operations. A unique identifier-based addressing system for a directory server, including a unique identifier generated for an entry and an encoded address created by encoding the unique identifier into a distinguished name. The entry is specified using the encoded address for a plurality of operations.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07016976",
	"publication_date": "2006-03-21",
	"application_number": "09871457",
	"application_date": "2001-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Using messaging to manage scene-based rendering",
	"summary": "",
	"abstract": "A system and method for rapid processing of scene-graph-based data and/or programs is disclosed. In one embodiment, the system may be configured to utilize a scene graph directly. In another embodiment, the system may be configured to generate a plurality of structures and thread that manage the data originally received as part of the scene graph. The structures and threads may be configured to convey information about state changes through the use of messaging. The system may include support for messaging between threads, messaging with time and/or event stamps, epochs to ensure consistency, and ancillary structures such as render-bins, geometry structures, and rendering environment structures.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07061486",
	"publication_date": "2006-06-13",
	"application_number": "09760511",
	"application_date": "2001-01-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Using patterns to perform personal identification data substitution",
	"summary": "",
	"abstract": "The present invention is directed toward using patterns in APDU to perform identification data substitution. According to one or more embodiments of the present invention, a user inserts a smart card into a card reader connected to a client computing device. Then, the user enters a PIN. The PIN is embedded into an APDU which is sent to the card reader and is presented to the smart card. The APDU contains special patterns that specify to the card reader where and in what format the PIN should be embedded into a prototype APDU that is constructed in the card reader and presented to the card for verification.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07039952",
	"publication_date": "2006-05-02",
	"application_number": "09861062",
	"application_date": "2001-05-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web server in-kernel interface to data transport system and cache manager",
	"summary": "",
	"abstract": "A HTTP request is sent to a web server. A HTTP request including HTTP request data is received. A connection identifier is associated with the HTTP request. The receiving and associating steps are repeated for one or more HTTP requests. The connection identifier and the associated HTTP request data for the one or more HTTP requests are then sent in a single stream to the web server (e.g., HTTP process). When a HTTP request including HTTP request data are processed by a web server, the HTTP request data and an associated connection identifier are received. HTTP response data associated with the HTTP request data is obtained. The HTTP response data and the connection identifier are then sent.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07028091",
	"publication_date": "2006-04-11",
	"application_number": "09654103",
	"application_date": "2000-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Remote incremental program binary compatibility verification using API definitions",
	"summary": "",
	"abstract": "A method of operating a computer system includes providing a first version of a program in memory and verifying the program prior to program execution. Program verification includes indicating a verification error when a first version of a first program unit implementation is not internally consistent, indicating a verification error when the first version of the first program unit implementation is inconsistent with the version of the program unit API definition file associated with the first version of the first program unit implementation, receiving a second version of the first program unit implementation and a second version of the first program unit implementation is binary compatible with the first version of the first program unit implementation by comparing the first version of the first program unit API definition file and the second version of the first program unit API definition unit.",
	"url": null,
	"owner": "Sun Microsytems, Inc.",
	"publication_number": "06986132",
	"publication_date": "2006-01-10",
	"application_number": "09661684",
	"application_date": "2000-09-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Countering infections to communications modules",
	"summary": "",
	"abstract": "Methods, apparati and computer readable media for countering malicious code infections that spread from a first computer to a second computer. A searching module () searches for a communications module () within the first computer (()). An examining module () examines a function location directory () within the communications module (). A locating module () locates a send function within the function location directory (). A declaring module () declares the presence of malicious code when the function location directory () states that the send function is slated to start executing at a non-normal location.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07155742",
	"publication_date": "2006-12-26",
	"application_number": "10151598",
	"application_date": "2002-05-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Virtual partition for recording and restoring computer data files",
	"summary": "",
	"abstract": "Some computer operating systems do not permit application programs to perform certain tasks. If there is a desire to perform a forbidden task, a virtual partition () is created () in a storage device (), such as a hard disk drive, associated with the computer system (). The virtual partition () is stored as a file within the file system of the storage device (). Operating system files () are installed in the virtual partition (), and the storage device () is configured () to boot the computer system () using the operating system in the virtual partition. When the task is complete, the computer system () is configured to boot using the operating system other than the one in the virtual partition.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07032107",
	"publication_date": "2006-04-18",
	"application_number": "10284827",
	"application_date": "2002-10-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multi-tier wireless communications architecture, applications and methods",
	"summary": "",
	"abstract": "Multi-tier system for digital radio communication. The multi-tier system has a first-tier base station with relatively long-range radio and has a second-tier base station with relatively short-range, low power and cheaper radios. The system can be more versatilely configured to meet demands of various applications. The application may include data capture using bar code readers, radio frequency readers and other automatic data capture devices. The system may also be used to control hotel door locks, individual room temperature control, remote video monitoringu2014all without having to wire and with much flexibility given the two types of radios employed.",
	"url": null,
	"owner": "Symbol Technologies, Inc.",
	"publication_number": "07126926",
	"publication_date": "2006-10-24",
	"application_number": "09663774",
	"application_date": "2000-09-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software for installation and configuration management of network nodes",
	"summary": "",
	"abstract": "A software method and apparatus for installing and configuring network nodes in a wireless local area network by detecting noise levels on each of the available channels in the network. Each stationary access points listens on the available channels on the network. Each of the stationary access points determines a prioritized list of preferred frequencies or channels of operation based on the noise levels from the surrounding channels in use by other stationary access points. The listening stationary access point chooses a frequency and sets itself to the associated channel based on the strength of the other signals on that channel in the network.",
	"url": null,
	"owner": "Symbol Technologies, Inc.",
	"publication_number": "06985461",
	"publication_date": "2006-01-10",
	"application_number": "09814888",
	"application_date": "2001-03-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for enhancing object-oriented programming through extending metadata associated with class-body class-head by adding additional metadata to the database",
	"summary": "",
	"abstract": "The invention relates to a method for enhancing an object-oriented programming language. The method includes declaring one or more class structures in databases having metadata describing characteristics defining the class structures. The method also includes extending the metadata associated with the class structures by adding any number of additional metadata to the databases.",
	"url": null,
	"owner": "TableCode Software Corporation",
	"publication_number": "07130863",
	"publication_date": "2006-10-31",
	"application_number": "10870406",
	"application_date": "2004-06-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for upgrading software components without system shutdown",
	"summary": "",
	"abstract": "In an operating software system that provides one or more software components for use by a plurality of software programs, a method of providing an upgraded version of a software component for use by one or more of the software programs while at the same time allowing other programs of the plurality of programs to continue to operate with the older version. The method is particularly suitable for upgrading omponent bject odels (COM's) as used in the Windowsu00ae operating system.",
	"url": null,
	"owner": "Taiwan Semiconductor Manufacturing Company, Ltd.",
	"publication_number": "07146610",
	"publication_date": "2006-12-05",
	"application_number": "10400328",
	"application_date": "2003-03-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for enabling a compiler or interpreter to use identifiers found at run time in a map container object in a manner similar or identical to identifiers declared at compile time",
	"summary": "",
	"abstract": "A method for enabling a compiler or interpreter to use identifiers found at run time in a map container object in a manner similar or identical to identifiers declared at compile time is presented. More specifically, names defined in a map container object during the execution of a program are treated in a manner similar or identical to names defined in a programming namespace at compilation (or interpretation) time. The map container is applied to encapsulate a non-programming namespace application programming interface (API), so that names defined in a non-programming namespace can be treated in a manner similar or identical to names defined in a programming namespace at compilation (or interpretation) time.",
	"url": null,
	"owner": "Tajen Corporation",
	"publication_number": "06993744",
	"publication_date": "2006-01-31",
	"application_number": "09741201",
	"application_date": "2000-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing interactions between computer users' context models",
	"summary": "",
	"abstract": "Techniques are described for providing information about a current state that is represented with multiple attributes. In some situations, the providing includes a first computer receiving indications of multiple characterization modules, each characterization module executing on a computer to model an aspect of a current state related to that computer; receiving an indication of one of the multiple attributes of the represented current state; determining multiple of the characterization modules whose modeled aspects are related to the indicated one attribute; and gathering information about the modeled aspects related to the indicated one attribute from the determined characterization modules so that a value for the indicated one attribute can be generated based on the gathered information.",
	"url": null,
	"owner": "Tangis Corporation",
	"publication_number": "07058893",
	"publication_date": "2006-06-06",
	"application_number": "09894281",
	"application_date": "2001-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing interactions between computer users' context models",
	"summary": "",
	"abstract": "Techniques are described for providing information about a current state that is represented with multiple attributes. In some situations, the providing includes a first computer receiving indications of multiple characterization modules, each characterization module executing on a computer to model an aspect of a current state related to that computer; receiving an indication of one of the multiple attributes of the represented current state; determining multiple of the characterization modules whose modeled aspects are related to the indicated one attribute; and gathering information about the modeled aspects related to the indicated one attribute from the determined characterization modules so that a value for the indicated one attribute can be generated based on the gathered information.",
	"url": null,
	"owner": "Tangis Corporation",
	"publication_number": "07058894",
	"publication_date": "2006-06-06",
	"application_number": "09894615",
	"application_date": "2001-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing interactions between computer users' context models",
	"summary": "",
	"abstract": "Techniques are described for providing information about a current state that is represented with multiple attributes. In some situations, the providing includes a first computer receiving indications of multiple characterization modules, each characterization module executing on a computer to model an aspect of a current state related to that computer; receiving an indication of one of the multiple attributes of the represented current state; determining multiple of the characterization modules whose modeled aspects are related to the indicated one attribute; and gathering information about the modeled aspects related to the indicated one attribute from the determined characterization modules so that a value for the indicated one attribute can be generated based on the gathered information.",
	"url": null,
	"owner": "Tangis Corporation",
	"publication_number": "07089497",
	"publication_date": "2006-08-08",
	"application_number": "09894641",
	"application_date": "2001-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Supplying notifications related to supply and consumption of user context data",
	"summary": "",
	"abstract": "Techniques are described for providing information about a current state that is modeled with multiple state attributes. In some situations, the providing includes receiving from a module a request related to the modeling of the current state with the multiple state attributes. In such situations, the providing further includes, without further intervention related to the request by the module, determining that the request cannot currently be satisfied, and indicating to the module that the request cannot currently be satisfied, monitoring at later times after the indicating to determine whether the request can be satisfied, and indicating to the module that the request can be satisfied if it is determined at one of the later times that the request can currently be satisfied.",
	"url": null,
	"owner": "Tangis Corporation",
	"publication_number": "07062715",
	"publication_date": "2006-06-13",
	"application_number": "09878948",
	"application_date": "2001-06-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Communications system with interface for enabling communication of alerts to mobile wireless communications devices",
	"summary": "",
	"abstract": "An interface device, method and computer-readable program includes a proxy operative as an agent for communicating with a plurality of mobile wireless devices using different operating protocols. A device information module is operative with the proxy and determines functional features of a wireless mobile communications device and selects a configuration file for configuring the proxy to interface with the device and enable communications of any desired alerts.",
	"url": null,
	"owner": "Teamon Systems, Inc.",
	"publication_number": "07043240",
	"publication_date": "2006-05-09",
	"application_number": "10785657",
	"application_date": "2004-02-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Encryption process including a biometric unit",
	"summary": "",
	"abstract": "A method of encrypting an object includes generating a cryptographic key, using the cryptographic key to initialize a cryptographic algorithm, and applying the algorithm to the object. Accordingly, an encrypted object is formed. The key is generated by combining key splits derived from different sources. One of the key splits is a biometric value derived from and corresponding to a particular person.",
	"url": null,
	"owner": "Tecsec, Inc.",
	"publication_number": "07111173",
	"publication_date": "2006-09-19",
	"application_number": "09388195",
	"application_date": "1999-09-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for re-directing requests from browsers for communication over non-IP based networks",
	"summary": "",
	"abstract": "A method and system for deploying content to client applications is provided. Inbound messages are accepted from a client application running on a client device via a proxy IP/port. The inbound messages are packaged into an internal message format with an HTTP redirector. The packaged message is forwarded to a back-end server via a message router. A response is received form from a web server. The response is packaged into the internal message format with the back-end server. The response is then forwarded to the HTTP redirector via a message router. The response can then be transferred to the client application running on the client device, via the proxy IP/port.",
	"url": null,
	"owner": "TeleCommunication Systems Corporation of Maryland",
	"publication_number": "07003571",
	"publication_date": "2006-02-21",
	"application_number": "09698181",
	"application_date": "2000-10-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Inter-carrier messaging service providing phone number only experience",
	"summary": "",
	"abstract": "A phone number only messaging experience is provided in an Inter-Carrier Short Messaging System (IC-SMS) service. Subscriber to subscriber messages are routed between carrier's networks using an Inter-Carrier messaging module with appropriate MIN/carrier/carrier routing look-up capabilities. Short messages may be sent to a subscriber in another carrier's network addressed only with a phone number. If the recipient is outside of the sender's carrier network, the Inter-Carrier messaging module of the Inter-Carrier service provider (ICSP) determines the appropriate carrier for the recipient, appends the appropriate syntax to the short message to allow internet protocol (IP) or other standardized communication techniques between SMSCs of the two carriers, and routes the short message to the destination carrier. The recipient in the other carrier's network may reply back to the ICSP's sender using only the subscriber's directory number.",
	"url": null,
	"owner": "TeleCommunication Systems Inc.",
	"publication_number": "06985748",
	"publication_date": "2006-01-10",
	"application_number": "10720343",
	"application_date": "2003-11-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method to publish information from servers to remote monitor devices",
	"summary": "",
	"abstract": "To assist in monitoring the intelligent messaging network, a system and method for publishing logging and status information from the servers is provided. A list of available servers accessible for monitoring by persons, devices, and applications via a remote monitor device can be provided. The remote monitor device may forward selected servers from the list of available servers in which they are interested. Also, particular information about the selected servers can be requested. Access to certain servers and information may be restricted to those with authorization. Authorization can be verified by the use of digital certificates. The requested information can then be gathered and provided to authorized persons or devices. Typically, the information includes logging and status information from the servers. The information can be provided as an XML page and viewed using, for example, a standard web browser. Further, if the information is provided to the remote monitor device as an XML page, a standard XML parser may be used to extract particular information from the XML page.",
	"url": null,
	"owner": "TeleCommunication Systems, Inc.",
	"publication_number": "07024474",
	"publication_date": "2006-04-04",
	"application_number": "09767951",
	"application_date": "2001-01-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Adaption of services in a telephone network",
	"summary": "",
	"abstract": "The present invention relates to an arrangement for improving the service architecture for a compound network, comprising several types of access, as well as comprising parallel service nodes/networks for respective access technologies, and for the purpose of making customer specific adaptations to the service layer more flexible and allowing for a more cost-effective support of access specific protocols and service, it is according to the present invention suggested that said arrangement comprises an open service control protocol allowing support of access specific protocols and services while also allowing the respective access networks to share the same access nodes and service architectures.",
	"url": null,
	"owner": "Telefonaktiebolaget LM Ericsson (publ)",
	"publication_number": "07136372",
	"publication_date": "2006-11-14",
	"application_number": "09562867",
	"application_date": "2000-05-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Communications node architecture and method for providing control functions in a telecommunications network",
	"summary": "",
	"abstract": "An architecture for a communications node and a method of implementing control functions in a Session Initiation Protocol (SIP) telecommunications network. The node performs a plurality of call-control functions in a single physical node. A plurality of application-level logic blocks corresponding to the plurality of call-control functions are interfaced with a common engine module which is implemented on top of a common operating system and physical platform. The engine module includes SIP behavior functions and SIP stack functions, selected ones of which are operable to perform different call-control functions when interfaced with different application-level logic blocks. Mapping tables within the engine module identify groups of functions that, together with selected logic blocks, perform defined call-control functions. The open architecture allows additional functional logic blocks to be interfaced with the engine module to implement additional call-control functions.",
	"url": null,
	"owner": "Telefonaktiebolaget LM Ericsson (publ)",
	"publication_number": "07028311",
	"publication_date": "2006-04-11",
	"application_number": "10038978",
	"application_date": "2002-01-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus in a telecommunications system",
	"summary": "",
	"abstract": "The present invention relates to methods for providing access independent global roaming between heterogeneous networks. The invention solves this problem and provides policy enforcement and service transparency when terminals roam between different heterogeneous networks. By providing a policy enforcement point associated with the terminal, and by concerning the transport mechanism between terminals and servers as a packet pipe, adding no extra value except transport and Quality of Service classification thereof. The payment for access and services can be separated and access may be paid in real-time by an anonymous payment method. In accordance with the invention, the terminal becomes more like a personal profile manager, managing rights to services and access. The ability to purchase access opens the possibility for the terminal to act as an e-commerce platform, and the subscriber can access any network any time since access is paid for in real time.",
	"url": null,
	"owner": "Telefonaktiebolaget LM Ericsson (publ)",
	"publication_number": "07054843",
	"publication_date": "2006-05-30",
	"application_number": "11069069",
	"application_date": "2005-03-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Security access manager in middleware",
	"summary": "",
	"abstract": "Method and system for controlling access to a platform for a mobile terminal for a wireless telecommunications system or for another product. The system includes a platform having a software services component and an interface component having at least one interface for providing access to the software services component for enabling application domain software to be installed, loaded, and run in the platform. An access controller controls access to the software services component by the application domain software via the at least one interface. The access controller includes an interception module for receiving a request from the application domain software to access the software services component, and a security access manager for determining if the permission request should be granted. The application domain software is granted access to the software services component via the at least one interface if the permission request is granted by the security access manager.",
	"url": null,
	"owner": "Telefonaktiebolaget LM Ericsson (publ)",
	"publication_number": "07149510",
	"publication_date": "2006-12-12",
	"application_number": "10666673",
	"application_date": "2003-09-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Signaling quality of service class for use in multimedia communicatations",
	"summary": "",
	"abstract": "A signaling bearer quality of service profile is pre-established and configured in various nodes in an access network. This is a new quality of service class designed to meet the needs of signaling bearers in multimedia sessions. A message requesting a bearer to support a communication between a mobile terminal and an access point to a packet data network is generated. That message includes a signaling quality of service indicator, which when detected, causes a bearer to be established between the mobile terminal and the access point in accordance with the pre-established signaling quality of service profile. The pre-established signaling quality of service profile typically includes low delay and low bit error rates in addition to high priority and accommodation of bursty traffic patterns. A signaling usage indicator may also employed to implement a standard set of minimum signaling bearer capabilities.",
	"url": null,
	"owner": "Telefonaktiebolaget LM Ericsson (publ)",
	"publication_number": "07106718",
	"publication_date": "2006-09-12",
	"application_number": "10068002",
	"application_date": "2002-02-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for transporting different classes of data bits in a payload over a radio interface",
	"summary": "",
	"abstract": "Different bits in a payload of data to be transmitted from a sending application receive different classes of treatment. The payload data is divided into a first group of bits associated with a first treatment class and a second group of bits associated with a second treatment class. A first packet is created which includes the first group of bits and a first header that identifies the first packet with the first treatment class. A second packet is created that includes the second group of bits and second header that identifies the second packet with the second treatment class. Using the first header, the first packet is mapped to a first bearer that is configured to support the first treatment class. Using the second header, the second packet is mapped to a second bearer configured to support the second treatment class.",
	"url": null,
	"owner": "Telefonaktienbolaget LM Ericsson (publ)",
	"publication_number": "07145919",
	"publication_date": "2006-12-05",
	"application_number": "10092720",
	"application_date": "2002-03-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Bandwidth broker for cellular radio access networks",
	"summary": "",
	"abstract": "An architecture for resource management of an IP-based cellular radio access network is presented. A measurement-based admission control scheme is used to monitor the load for each path in the network and QoS (quality of service) class and resource decisions are made based upon that information. A bandwidth broker is introduced in the cellular radio access network (RAN). The bandwidth broker processes the on-demand admission requests for IP resources by using the results of load control measurements. Since the requests can be processed very quickly using a simple table look-up, response times are fast, and the architecture is thus suitable for the cellular environment.",
	"url": null,
	"owner": "Telefonktiebolaget LM Ericsson (publ)",
	"publication_number": "07068607",
	"publication_date": "2006-06-27",
	"application_number": "09941878",
	"application_date": "2001-08-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Functional enterprise bean",
	"summary": "",
	"abstract": "In a second embodiment, the Service Manager is implemented as a stateless session bean, and other functional beans are implemented as entity beans.",
	"url": null,
	"owner": "Telesector Resources Group, Inc.",
	"publication_number": "07086065",
	"publication_date": "2006-08-01",
	"application_number": "09620102",
	"application_date": "2000-07-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Architecture with digital signal processor plug-ins for general purpose processor media frameworks",
	"summary": "",
	"abstract": "A plug-and-play architecture including an extension of a general purpose processor media framework for adjoining DSP processing power.",
	"url": null,
	"owner": "Texas Instruments Incorporated",
	"publication_number": "07080386",
	"publication_date": "2006-07-18",
	"application_number": "09770039",
	"application_date": "2001-01-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for non-obtrusive power profiling",
	"summary": "",
	"abstract": "Systems and methods for improved power profiling of embedded applications are presented. These inventions provide the ability to unobtrusively measure the power consumption of an embedded application as the application is executing on its target hardware. The unobtrusiveness is achieved by using programmable emulation circuitry in the target system processor and available device debug terminals on the test port.",
	"url": null,
	"owner": "Texas Instruments Incorporated",
	"publication_number": "07149636",
	"publication_date": "2006-12-12",
	"application_number": "10324269",
	"application_date": "2002-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Simulation system and method",
	"summary": "",
	"abstract": "A simulation system and method enabled through the use of an XML-based Simulation Reference Markup Language (SRML) and a corresponding system runtime environment. The simulation system comprises a simulation reference simulator adapted to receive an SRML simulation model including a simulation item. The simulation reference simulator comprises an item manager for loading properties of each item of the simulation model, and an event manager for processing the simulation model. A method of conducting simulations comprises the steps of defining a simulation model with Simulation Reference Markup Language, communicating the model to a simulation reference simulator, executing the model with the simulation reference simulator, and providing an output of the modeled events.",
	"url": null,
	"owner": "The Boeing Company",
	"publication_number": "07058558",
	"publication_date": "2006-06-06",
	"application_number": "09865293",
	"application_date": "2001-05-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Business platform with networked, association-based business entity access management and active content website configuration",
	"summary": "",
	"abstract": "The invention provides a business platform, a business entity management system, and a software module that can be used in conjunction with the software service framework. The invention mimics actual business relationships between business entities, and uses a software service module to configure the business entities into a network that comprises at least three generations of business entities, wherein role dependent associations mimicking real life business relationships are established between the business entities. The invention provides management of active content in a website and allows modification of the content by different business entities. Control of the active content is determined by precedence of the business entities.",
	"url": null,
	"owner": "The Cobalt Group, Inc.",
	"publication_number": "07039704",
	"publication_date": "2006-05-02",
	"application_number": "10350796",
	"application_date": "2003-01-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for trading and originating financial products using a computer network",
	"summary": "",
	"abstract": "The invention relates to systems and methods for trading financial products over a computer network, such as the Internet. In one embodiment, the invention provides a method for trading financial products over a computer network. Seller information is received from a first client, the seller information relating to a financial product offered for sale on behalf of a seller, at least some of the seller information comprising due diligence information, the due diligence information capable of fulfilling at least a portion of a request for due diligence on the financial product. The seller information about the financial product is stored in a database. A second client is provided with an opportunity to obtain the due diligence information on behalf of a potential buyer of the financial product. A bid is stored for the financial product from the second client in the database, if it can be shown that second client has obtained the due diligence information.",
	"url": null,
	"owner": "The Debt Exchange, Inc.",
	"publication_number": "07035820",
	"publication_date": "2006-04-25",
	"application_number": "09928109",
	"application_date": "2001-08-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for streaming of data",
	"summary": "",
	"abstract": "A method and apparatus for providing streaming data to multiple clients involves the provision of intelligent gateway at the edge of a network. The gateway is designed so that if it receives a request from a second client within the network for a data stream already being supplied to a first client in the network, that data stream is duplicated by the gateway rather than making a second request for the same stream from a server. Multiple such gateways can be combined to form a large load balancing network. An important aspect of the invention is a software interface in the gateway that enables a data packet address type to be changed from unicast to multicast and vice versa.",
	"url": null,
	"owner": "The Hong Kong University of Science and Technology",
	"publication_number": "07133922",
	"publication_date": "2006-11-07",
	"application_number": "09634947",
	"application_date": "2000-08-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Common communication system for control instruments",
	"summary": "",
	"abstract": "A communication system for linking users to control instruments. A user may send a first creation command from a user interface and establish a communication channel linking the command interpreter and the control instrument independent of the interface bus standard or interface hardware driver type. The communication system also includes providing a common communication interface between the user and the control instrument in an array-based programming environment. Embodiments provide a concise and powerful communication system for communicating with control instruments independent of the various types of supported interface bus standards, communication protocols, and driver types.",
	"url": null,
	"owner": "The MathWorks, Inc.",
	"publication_number": "06993772",
	"publication_date": "2006-01-31",
	"application_number": "09954872",
	"application_date": "2001-09-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for extending a programming language to include multiple dissimilar object systems",
	"summary": "",
	"abstract": "The illustrative embodiment of the present invention provides a method for extending a programming language to interact with foreign object systems. Through the use of an opaque interface, a requesting unit may interact with multiple foreign object systems. The requesting unit is an executable piece of code such as a script, applet or application. A single set of procedures written into the opaque interface and accessible by the requesting unit enable the requesting unit to interact with the foreign object systems. The foreign object systems register with the opaque interface. The registration process for the object systems includes the creation and registration of a defined set of functions, the format for which is provided by the opaque interface. The defined set of functions are called by the procedures in the opaque interface and execute in the object system. The results of the function execution are returned to the requesting unit thereby extending the foreign object system capabilities to the requesting unit.",
	"url": null,
	"owner": "The MathWorks, Inc.",
	"publication_number": "07051333",
	"publication_date": "2006-05-23",
	"application_number": "09912937",
	"application_date": "2001-07-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Animal cage behavior system",
	"summary": "",
	"abstract": "A behavioral monitoring system useful for the analysis of complex behaviors in a number of animal species. The monitoring systems of this invention allow continuous monitoring of feeding, drinking and movement of animals with high temporal and spatial resolution. In certain embodiments, the system comprises an enclosure comprising: an animal position indicator; a food consumption indicator; and a fluid consumption indicator, where the system reports behavioral data at a temporal resolution of 20 seconds or lower.",
	"url": null,
	"owner": "The Regents of the University of California",
	"publication_number": "07086350",
	"publication_date": "2006-08-08",
	"application_number": "10627187",
	"application_date": "2003-07-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system of integrating information from multiple sources",
	"summary": "",
	"abstract": "A system and method of integrating information from multiple sources in a document centric application system. A plurality of application systems are connected through an object request broker to a central repository. The information may then be posted on a webpage. An example of an implementation of the method and system is an online procurement system.",
	"url": null,
	"owner": "The Regents of the University of California",
	"publication_number": "07092948",
	"publication_date": "2006-08-15",
	"application_number": "09656484",
	"application_date": "2000-09-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for volume processing and rendering",
	"summary": "",
	"abstract": "An apparatus and method for real-time volume processing and universal three-dimensional rendering. The apparatus includes a plurality of three-dimensional (3D) memory units; at least one pixel bus for providing global horizontal communication; a plurality of rendering pipelines; at least one geometry bus; and a control unit. The apparatus includes a block processor having a circular ray integration pipeline for processing voxel data and ray data. Rays are generally processed in image order thus permitting great flexibility (e.g., perspective projection, global illumination). The block processor includes a splatting unit and a scattering unit. A method for casting shadows and performing global illumination in relation to light sources includes sweeping a two dimensional array of rays through the volume can also be implemented with the apparatus. A method for approximating a perspective projection includes using parallel projection.",
	"url": null,
	"owner": "The Research Foundation of State University of New York",
	"publication_number": "07133041",
	"publication_date": "2006-11-07",
	"application_number": "10204685",
	"application_date": "2001-02-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Collaborative development network for widely dispersed users and methods therefor",
	"summary": "",
	"abstract": "A White Board system permitting a plurality of users to collaborate with one another irrespective of the respective user's hardware platform or operating system, includes a server computer, and a plurality of client computers coupled to the server computer. Preferably, each of the client computers logs into the server computer and is thereby assigned a unique identifier, each of the client computers includes a graphical user interface (GUI) which selectively displays any combination of objects having active content, active hyperlinks, and text, each of the client computers transmits user-generated objects to the server computer for selective retransmission to respective one of the client computers, the server selectively controls transmission of all user-generated objects to respective ones of the computers responsive to the respective assigned identifier, and the server commands one of the client computers to update a new client computer when the new client computer logs into the server. A method for operating a computer network to facilitate collaboration between users and software for implementing the method are also described.",
	"url": null,
	"owner": "The United States of America as represented by the Secretary of the Navy",
	"publication_number": "07043529",
	"publication_date": "2006-05-09",
	"application_number": "09551364",
	"application_date": "2000-04-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed object-oriented geospatial information distribution system and method thereof",
	"summary": "",
	"abstract": "A distributed object-oriented geospatial database system and method thereof over the Internet using Web-based technology to perform data-driven queries, such as retrieving, viewing and updating, geospatial data of the object oriented geospatial database, such as vector, raster, hypertext and multimedia data, including data types or formats of ESRI shape files, GSF, oceanographic ASCII text data by NAVOCEANO and geospatial data with temporal information and supporting 3D display of the geospatial data. The object-oriented geospatial database system is implemented in a heterogeneous object-oriented development and integration environment through the Common Object Request Broker Architecture (CORBA).",
	"url": null,
	"owner": "The United States of America as represented by the Secretary of the Navy",
	"publication_number": "06985929",
	"publication_date": "2006-01-10",
	"application_number": "09653413",
	"application_date": "2000-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for facilitating collaborative development efforts between widely dispersed users",
	"summary": "",
	"abstract": "A method permitting collaboration between a plurality of users of incompatible hardware and/or operating system, includes steps for selectively generating predetermined objects, text objects, active hyperlink objects, active track objects, and freehand drawing objects, which are displayable at user-selected locations on the White Board screen of one of the users, transmitting all generated ones of the predetermined, the active hyperlink, the text, the active track, and the freehand drawing objects for selective distributions to each of the other users, accumulating the predetermined, the active hyperlink, the text, the active track, and the freehand drawing objects, and filtering the predetermined, the active hyperlink, the text, the active track, and the freehand drawing objects to thereby permit selective transmission of the predetermined, the active hyperlink, the text, the active track, and the freehand drawing objects to respective ones the other users.",
	"url": null,
	"owner": "The United States of America as represented by the Secretary of the Navy",
	"publication_number": "07024456",
	"publication_date": "2006-04-04",
	"application_number": "09296757",
	"application_date": "1999-04-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Program control for resource management architecture and corresponding programs therefor",
	"summary": "",
	"abstract": "A program control device operating in a distributed environment comprised of hosts instantiating copies of a scalable application, the program control device controlling start up, shutdown or movement of a selected one of the copies based on signals generated in response to first information regarding performance of all copies of the scalable application and second infomation regarding performance of the hosts.",
	"url": null,
	"owner": "The United States of America as represented by the Secretary of the Navy",
	"publication_number": "07096248",
	"publication_date": "2006-08-22",
	"application_number": "09864821",
	"application_date": "2001-09-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Displaying graphical objects",
	"summary": "",
	"abstract": "Aspects of the present invention relate to a method of controlling the appearance of a graphical object in a graphical user interface. In an embodiment of an aspect of the invention, an object, such as a widget, in a graphical user interface comprises an instance of a widget class in which arr defined properties and/or methods which control operation of the object; and an associated instance of a look object class in which are defined properties and/or methods which control the look of the object.",
	"url": null,
	"owner": "Thomson Licensing S.A.",
	"publication_number": "07030890",
	"publication_date": "2006-04-18",
	"application_number": "10111928",
	"application_date": "2000-11-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Windowing systems",
	"summary": "",
	"abstract": "A method of displaying a window on a screen is described, in which the window has a background through which underlying objects are visible. Also described are methods of managing windows when drawing takes place in a window which lies under such a window.",
	"url": null,
	"owner": "Thomson Licensing S.A.",
	"publication_number": "07068266",
	"publication_date": "2006-06-27",
	"application_number": "10089218",
	"application_date": "2000-09-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Displayable presentation page and SQL searchable relational data source implementation of a system, method and software for creating or maintaining distributed transparent persistence of complex data objects and their data relationships",
	"summary": "",
	"abstract": "The invention provides systems, methods and software for creating or maintaining distributed transparent persistence of complex data objects and associated data stores. In one aspect, the invention also relates to an application programming object capable of creating or maintaining distributed transparent persistence of data objects or data object graphs without the necessity of inserting any byte codes or modification of the object graph. Virtually any java object or object praph can be transparently persisted. Further, copies of a data graph or of a portion of the data graph can be automatically reconciled and changes persisted without any persistence coding in the object model.",
	"url": null,
	"owner": "Thought Inc.",
	"publication_number": "07103600",
	"publication_date": "2006-09-05",
	"application_number": "10382302",
	"application_date": "2003-03-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and software for creating, maintaining, navigating or manipulating complex data objects and their data relationships",
	"summary": "",
	"abstract": "The invention provides systems, methods and software for creating, maintaining, accessing, navigating and persisting complex data objects and associated data stores. In one aspect, the invention also provides an application programming interface (u201cAPIu201d) useful for creating, maintaining, accessing, navigating and persisting complex data objects and associated data stores as a CDOG model.",
	"url": null,
	"owner": "Thought, Inc.",
	"publication_number": "07043481",
	"publication_date": "2006-05-09",
	"application_number": "10158672",
	"application_date": "2002-05-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and apparatus for creating and accessing a hierarchical database in a format optimally suited to real estate listings",
	"summary": "",
	"abstract": "A computer-implemented data management method, encryption system and interactive computer program for managing real estate information in a hierarchical database are disclosed. Also, a method, system and program for cross referencing a hierarchical database with a relational database are disclosed. A computer program accesses an XML definitional document on a handheld computer for inputting data related to real estate listings in a hierarchically controlled format for a database. Real estate agents provide input of data to the database using the handheld, portable computer. A menu or picklist driven display provides logical selection of data input and address fields, and a validation step for checking errors or omissions in the data entry procedure for a given record. A single, central database table is managed for input and distribution of real estate listing information to subscribers to the database management system.",
	"url": null,
	"owner": "Threewide.com, Inc.",
	"publication_number": "06985902",
	"publication_date": "2006-01-10",
	"application_number": "10067959",
	"application_date": "2002-02-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for the monitoring and control of a semiconductor manufacturing process",
	"summary": "",
	"abstract": "An Advanced Process Control (APC) system including Graphical User Interfaces (GUIs) is presented for monitoring and controlling a semiconductor manufacturing process that is performed by a semiconductor processing system. The semiconductor processing system includes a number of processing tools, a number of processing modules (chambers), and a number of sensors, and the APC system comprises an APC server, database, interface server, client workstation, and GUI component. The GUI is web-based and is viewable by a user using a web browser.",
	"url": null,
	"owner": "Tokyo Electron Limited",
	"publication_number": "07123980",
	"publication_date": "2006-10-17",
	"application_number": "11087071",
	"application_date": "2005-03-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for accessing digital imaging devices",
	"summary": "",
	"abstract": "There is provided asystem and architecture for accessing and communicating with digital image devices. The system is provided in the form of software components that are platform independent for the development of software for managing or controlling digital image devices. The software components are easily integrated with existing development tools, have native functionality, and can be implemented independently of Common Information Model or Simple Network Management Protocol architectures.",
	"url": null,
	"owner": "Toshiba Corporation",
	"publication_number": "06986108",
	"publication_date": "2006-01-10",
	"application_number": "10103268",
	"application_date": "2002-03-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Authentication method and system",
	"summary": "",
	"abstract": "The present invention provides a method and apparatus for the production and labeling of objects in a manner suitable for the prevention and detection of counterfeiting. Thus, the system incorporates a variety of features that make unauthorized reproduction difficult. In addition, the present invention provides an efficient means for the production of labels and verification of authenticity, whereby a recording apparatus which includes a recording medium, having anisotrophic optical domains, along with a means for transferring a portion of the recording medium to a carrier, wherein a bulk portion of the recording medium has macroscopically detectable anisotrophic optical properties and the detecting apparatus thereon.",
	"url": null,
	"owner": "Tracer Detection Technology Corp.",
	"publication_number": "07089420",
	"publication_date": "2006-08-08",
	"application_number": "09577961",
	"application_date": "2000-05-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "E-services translation portal system",
	"summary": "",
	"abstract": "A portal for translating data is provided wherein users upload text to be translated. The text may be in the form of Web pages, in the form of hypertext mark-up language (HTML) files, or other formats. The portal at least partially translates the data and facilitates the selection of a vendor or vendors to complete the translation process. The portal makes use of a database containing previously completed translations, which database is utilized to at least partially translate new requests for translations, and thereby reduces the workload of the vendors selected to complete the process.",
	"url": null,
	"owner": "Trados, Inc.",
	"publication_number": "07110938",
	"publication_date": "2006-09-19",
	"application_number": "09662758",
	"application_date": "2000-09-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Language translation system and method using specialized dictionaries",
	"summary": "",
	"abstract": "A system and method for translation of electronic communications automatically selects and deploys specialized dictionaries based upon context recognition and other factors. Software tools can be employed for continual dictionary enhancement. The invention can accept speech and text inputs and can be used to translate electronic mail, instant messages, chat, SMS messages, electronic text and word processing files, Internet web pages, Internet search results, and other textual communications for a variety of device types, including wireless devices. In one embodiment, language pairs are automatically determined in real-time.",
	"url": null,
	"owner": "Transclick, Inc.",
	"publication_number": "06996520",
	"publication_date": "2006-02-07",
	"application_number": "10714035",
	"application_date": "2003-11-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for transferring data using a USB host system with a dedicated processor",
	"summary": "",
	"abstract": "This invention is a USB host comprising a first processor implementing a function of a USB system and presenting a high-level pipe view of USB to a second processor. In one embodiment of this invention, first processor and the second processor communicate through a data communication memory (DCM) which can be accessed by both the first processor and the second processor, using a plural of predefined transfer record formats. From the second processor's point of view, a USB transfer becomes reading from and writing to the DCM with predefined record formats which can be done by filling templates.",
	"url": null,
	"owner": "Transdimension Inc.",
	"publication_number": "07003613",
	"publication_date": "2006-02-21",
	"application_number": "09490263",
	"application_date": "2000-01-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Clearinghouse server for internet telephony and multimedia communications",
	"summary": "",
	"abstract": "A clearinghouse server for routing multi-media communications, including telephony calls, between a source device and a destination device via a distributed computer network, such as the global Internet. The clearinghouse server can authorize the completion of a communication from a source device to a destination device and collect usage-related information for the completed communication. In response to an authorization request issued by an enrolled source device, the clearinghouse server can identify one or more available destination devices available to accept a communication from an authorized source device. The clearinghouse server can provide a list of the identified destination devices, typically organized in a rank order, by sending an authorization response to the source device. In turn, the source device can use this list to select a destination device and contact that selected device via the computer network to complete the communication.",
	"url": null,
	"owner": "TransNexus, Inc.",
	"publication_number": "07017050",
	"publication_date": "2006-03-21",
	"application_number": "09952938",
	"application_date": "2001-09-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Extensible GPS receiver system",
	"summary": "",
	"abstract": "An extensible Global Positioning System (GPS) receiver system is described. The receiver system isolates user application processing from time critical GPS acquisition and tracking processing in order to insure that GPS acquisition and tracking processing is timely performed. Thus user application processing can be developed without concern of conflict with GPS acquisition and tracking processing.",
	"url": null,
	"owner": "Trimble Navigation Limited",
	"publication_number": "07003112",
	"publication_date": "2006-02-21",
	"application_number": "09520378",
	"application_date": "2000-03-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Portable operating environment for information devices",
	"summary": "",
	"abstract": "A client software program for use on an embedded computing device includes an operating system layer including an abstraction layer, a programming environment, and an application framework including a package manager. The client is configured to interface with a client support server including a package repository, for receiving package data for running a software package on the embedded computing device.",
	"url": null,
	"owner": "Twin Communications of America, Inc.",
	"publication_number": "07032227",
	"publication_date": "2006-04-18",
	"application_number": "09931390",
	"application_date": "2001-08-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Portable operating environment for information devices",
	"summary": "",
	"abstract": "A graphics rendering software program for use on an embedded computing device includes an application layer, a graphics toolkit, and a graphics driver for rendering a plurality of drawing surfaces, including a first drawing surface and a second drawing surface, on a display of the embedded computing device. The graphics driver is configured to render the first drawing surface at least partially overlapping the second drawing surface on the display. When the first drawing surface is rendered as partially overlapping the second drawing surface, a visible portion of the second drawing surface is computed as a set of rectangular clip segments.",
	"url": null,
	"owner": "Twin Communications of America, Inc.",
	"publication_number": "07012622",
	"publication_date": "2006-03-14",
	"application_number": "09931576",
	"application_date": "2001-08-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "User interface rendering component environment",
	"summary": "",
	"abstract": "A client software program for use with an embedded device includes an application layer, a programming environment configured to render user interface component areas and query user interface component extensions from a shared delegation object, and an operating system layer. A drawing is preferably split up into a non-overridable system part and an overridable user part. The user interface component data and data used to factorize the way it is rendered are logically separated.",
	"url": null,
	"owner": "Twin Communications of America, Inc.",
	"publication_number": "07032180",
	"publication_date": "2006-04-18",
	"application_number": "09931391",
	"application_date": "2001-08-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Trade allocation",
	"summary": "",
	"abstract": "A trade allocation system includes a computer system having a network interface over which messages can be exchanged with an order management system. The computer system is also coupled to a first database that stores data associating portfolios with risk classes and target ratios. A second database stores instructions to configure the system to receive from order management systems messages describing trades of financial instruments. Each message can include a financial instrument identifier, a size of the trade, and a risk class identifier. The instructions also configure the processor to query the first database to determining a portfolios that are associated with a risk class identified by a risk class identifier in a message as well as to determine a target ratio for each of the portfolios. The processor then allocates the trade of the financial instrument among each of the portfolios based on the target ratios. Allocating a trade of a financial instruments among a group of portfolios include receiving a message descriptive of a trade of a financial instrument. The message can include a financial instrument identifier and a size of the trade. A collection of portfolios are then identified based on a match between a risk class of the portfolio and the risk class of the traded financial instrument. The trade is then allocated among each of the portfolios based on a target ratio associated with each portfolio.",
	"url": null,
	"owner": "UBS AG",
	"publication_number": "07089206",
	"publication_date": "2006-08-08",
	"application_number": "09891945",
	"application_date": "2001-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for dynamic bandwidth control in a broadcast optical communications network",
	"summary": "",
	"abstract": "A method and apparatus provide a network element and associated control system in a broadcast optical communications network, including an optical switch (switch fabric), to cross-connect selected wavelengths input to the switch to pre-determined output ports, under the control of a control (supervisory) channel for efficient upstream and downstream delivery of optical communications services. The network element includes an optical switch controller to monitor the communications traffic input to and output from the optical switch ports in order to dynamically change output port connections for the input wavelengths as controlled by the control channel.",
	"url": null,
	"owner": "Uhuru Networks",
	"publication_number": "07155126",
	"publication_date": "2006-12-26",
	"application_number": "10084997",
	"application_date": "2002-03-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Technique for implementing browser-initiated user-transparent network-distributed advertising and for interstitially displaying an advertisement, so distributed, through a web browser in response to a user click-stream",
	"summary": "",
	"abstract": "A technique for implementing in a networked client-server environment, e.g., the Internet, network-distributed advertising in which advertisements are downloaded, from an advertising server to a browser executing at a client computer, in a manner transparent to a user situated at the browser, and subsequently displayed, by that browser on an interstitial basis, in response to a click-stream generated by the user to move from one web page to the next. Specifically, an HTML advertising tag is embedded into a referring web page. This tag contains two components. One component effectively downloads, from an distribution web server and to an extent necessary, and then persistently instantiates an agent at the client browser. This agent u201cpolitelyu201d and transparently downloads advertising files (media and where necessary player files), originating from an ad management system residing on a third-party advertising web server, for a given advertisement into browser cache and subsequently plays those media files through the browser on an interstitial basis and in response to a user click-stream. The other component is a reference, in terms of a web address, of the advertising management system. This latter reference totally u201cdecouplesu201d advertising content from a web page such that a web page, rather than embedding actual advertising content within the page itself, merely includes an advertising tag that refers, via a URL, to a specific ad management system rather than to a particular advertisement or its content. The ad management system selects the given advertisement that is to be downloaded, rather than having that selection or its content being embedded in the web content page.",
	"url": null,
	"owner": "Unicast Communiations Corporation",
	"publication_number": "07149958",
	"publication_date": "2006-12-12",
	"application_number": "10162621",
	"application_date": "2002-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and accompanying methods for network distribution and interstitial rendering of information objects to client computers",
	"summary": "",
	"abstract": "A technique for implementing in a networked client-server environment, e.g., the Internet, network-distributed advertising in which advertisements are downloaded, from an advertising server to a browser executing at a client computer, in a manner transparent to a user situated at the browser, subsequently displayed, by that browser and on an interstitial basis, in response to a click-stream generated by the user to move from one web page to the next.",
	"url": null,
	"owner": "Unicast Communications Corporation",
	"publication_number": "07143337",
	"publication_date": "2006-11-28",
	"application_number": "09950941",
	"application_date": "2001-09-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "TECHNIQUE FOR IMPLEMENTING BROWSER-INITIATED USER-TRANSPARENT NETWORK-DISTRIBUTED ADVERTISING AND FOR INTERSTITIALLY DISPLAYING AN ADVERTISEMENT, SO DISTRIBUTED, THROUGH A WEB BROWSER IN RESPONSE TO A USER CLICK-STREAM",
	"summary": "",
	"abstract": "A technique for implementing in a networked client-server environment, e.g., the Internet, network-distributed advertising in which advertisements are downloaded, from an advertising server to a browser executing at a client computer, in a manner transparent to a user situated at the browser, and subsequently displayed, by that browser on an interstitial basis, in response to a click-stream generated by the user to move from one web page to the next. Specifically, an HTML advertising tag is embedded into a referring web page. This tag contains two components. One component effectively downloads, from an distribution web server and to an extent necessary, and then persistently instantiates an agent at the client browser. This agent u201cpolitelyu201d and transparently downloads advertising files (media and where necessary player files), originating from an ad management system residing on a third-party advertising web server, for a given advertisement into browser cache and subsequently plays those media files through the browser on an interstitial basis and in response to a user click-stream. The other component is a reference, in terms of a web address, of the advertising management system. This latter reference totally u201cdecouplesu201d advertising content from a web page such that a web page, rather than embedding actual advertising content within the page itself, merely includes an advertising tag that refers, via a URL, to a specific ad management system rather than to a particular advertisement or its content. The ad management system selects the given advertisement that is to be downloaded, rather than having that selection or its content being embedded in the web content page.",
	"url": null,
	"owner": "Unicast Communications Corporation",
	"publication_number": "06990630",
	"publication_date": "2006-01-24",
	"application_number": "10162622",
	"application_date": "2002-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Technique for implementing browser-initiated user-transparent network-distributed advertising and for interstitially displaying an advertisement, so distributed, through a web browser in response to a user click-stream",
	"summary": "",
	"abstract": "A technique for implementing in a networked client-server environment, e.g., the Internet, network-distributed advertising in which advertisements are downloaded, from an advertising server to a browser executing at a client computer, in a manner transparent to a user situated at the browser, and subsequently displayed, by that browser and on an interstitial basis, in response to a click-stream generated by the user to move from one web page to the next. Specifically, an HTML advertising tag is embedded into a referring web page. This tag contains two components. One component effectively downloads, from an distribution web server and to an extent necessary, and then persistently instantiates an agent at the client browser. This agent u201cpolitelyu201d and transparently downloads advertising files (media and where necessary player files), originating from an ad management system residing on a third-party advertising web server, for a given advertisement into browser cache and subsequently plays those media files through the browser on an interstitial basis and in response to a user click-stream. The other component is a reference, in terms of a web address, of the advertising management system. This latter reference totally u201cdecouplesu201d advertising content from a web page such that a web page, rather than embedding actual advertising content within the page itself, merely includes an advertising tag that refers, via a URL, to a specific ad management system rather than to a particular advertisement or its content. The ad management system selects the given advertisement that is to be downloaded, rather than having that selection or its content being embedded in the web content page.",
	"url": null,
	"owner": "Unicast Communications Corporation",
	"publication_number": "07155663",
	"publication_date": "2006-12-26",
	"application_number": "10162625",
	"application_date": "2002-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for collaborative ontology modeling",
	"summary": "",
	"abstract": "A distributed ontology system including a central computer comprising a global ontology directory, a plurality of ontology server computers, each including a repository of class and relation definitions, and a server for responding to queries relating to class and relation definitions in the repository, and a computer network connecting the central computer with the plurality of ontology server computers. A method is also described and claimed.",
	"url": null,
	"owner": "Unicorn Solutions",
	"publication_number": "07099885",
	"publication_date": "2006-08-29",
	"application_number": "09866101",
	"application_date": "2001-05-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dialogue flow interpreter development tool",
	"summary": "",
	"abstract": "A computer software product is used to create applications for enabling a dialogue between a human and a computer. The software product provides a programming tool that insulates software developers from time-consuming, technically-challenging programming tasks by enabling the developer to specify generalized instructions to a Dialogue Flow Interpreter, which invokes functions to implement a speech application, automatically populating a library with dialogue objects that are available to other applications. The speech applications created through the DFI may be implemented as COM (component object model) objects, and so the applications can be easily integrated into a variety of different platforms. In addition, u201ctranslatoru201d object classes are provided to handle specific types of data, such as currency, numeric data, dates, times, string variables, etc. These translator object classes have utility either as part of the DFI library or as a sub-library separate from dialogue implementation.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "07024348",
	"publication_date": "2006-04-04",
	"application_number": "09702224",
	"application_date": "2000-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for automatic execution of concatenated methods across multiple heterogeneous data sources",
	"summary": "",
	"abstract": "Heterogeneous data at a plurality of remote nodes is accessed automatically in parallel at high speed from a user site using a simple script request containing a data source object name wherein the heterogeneous data is treated as a single data source object, the script further containing at least one method to be performed on the data source object and at least a second method to be automatically performed on the results of executing the first method. A user site agent breaks the user-generated script into new scripts appropriate for execution at the remote nodes and determines whether the second method should be executed at the remote nodes or at the user site. A messenger process transmits the new scripts to the appropriate remote nodes where respective agent processes respond to automatically access the appropriate data and to automatically execute the specified methods.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "07007275",
	"publication_date": "2006-02-28",
	"application_number": "09422775",
	"application_date": "1999-10-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for accessing object linking-embedding database data via JAVA database connectivity",
	"summary": "",
	"abstract": "A method for enabling database access to an OLE DB compatible database by a client using a JAVA JDBC Application Program Interface. A JDBC Driver program provides a bridging functionality between the using JDBC client and the OLE DB database.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "07089566",
	"publication_date": "2006-08-08",
	"application_number": "10071815",
	"application_date": "2002-02-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and wireless device for providing real-time alerts in response to changes in business operational data",
	"summary": "",
	"abstract": "A system for providing in response to changes within current operational data of a business enterprise, alert information including an alert to a wireless device in real-time. The system architecture includes an enterprise application integration services component for accessing and conditioning the current operational data and other business intelligence information. An analytics services component monitors for changes within the current operational data from a predetermined target level and communicates an alert and alert information if a change occurs. The analytics services component also extracts contextually-related first and second sets of critical business information, and converts the operational data, alert and alert information, and the first and second sets of critical business information into a device-independent, web-enabled format, which is then recoded by a delivery services component in accordance with the data delivery requirements of the wireless device. The alert and alert information will be displayed in the context of the current operational data and first and second sets of critical business information.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "07151438",
	"publication_date": "2006-12-19",
	"application_number": "10913074",
	"application_date": "2004-08-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data sharing and file distribution method and associated distributed processing system",
	"summary": "",
	"abstract": "The present invention provides a method for providing data sharing and filed distribution in a distributed processing system. The distributed processing system identifies and utilizes the capabilities of distributed devices connected together through a wide variety of communication systems and networks and utilizes those capabilities to organize, manage and distribute project workloads to the distributed devices.",
	"url": null,
	"owner": "United Devices, Inc.",
	"publication_number": "07082474",
	"publication_date": "2006-07-25",
	"application_number": "09602803",
	"application_date": "2000-06-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed parallel processing system having capability-based incentives and associated method",
	"summary": "",
	"abstract": "A distributed parallel processing system having capability-based incentives and associated method are disclosed that identify the capabilities of distributed devices connected together through a wide variety of communication systems and networks and aggregate these distributed device capabilities to accomplish desired distributed workload objectives.",
	"url": null,
	"owner": "United Devices, Inc.",
	"publication_number": "07003547",
	"publication_date": "2006-02-21",
	"application_number": "09538543",
	"application_date": "2000-03-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Machine generated sweepstakes entry model and associated distributed processing system",
	"summary": "",
	"abstract": "A method for providing machine generated sweepstakes entries is disclosed for a distributed parallel processing system. The distributed processing system identifies and utilizes capabilities of distributed devices connected together through a wide variety of communication systems and networks and utilizes those capabilities to organize, manage and distribute project workloads to the distributed devices.",
	"url": null,
	"owner": "United Devices, Inc.",
	"publication_number": "07020678",
	"publication_date": "2006-03-28",
	"application_number": "09602789",
	"application_date": "2000-06-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Massively distributed processing system with modular client agent and associated method",
	"summary": "",
	"abstract": "A massively distributed processing system and associated methods are disclosed that provide a processing architecture for utilizing a multitude of widely distributed devices to process distributed project workloads. To provide the processing infrastructure, a modular client agent program, which may include a system component and a separate project component, operates on the distributed devices to process workloads. For different projects, different project components may be provided to run on the base system component. In addition, a device capabilities database and an incentive database can be used by the server system to facilitate operations and encourage participation by client systems. Other databases may also be utilized to enhance system operations and functionality. And a wide variety of applications are possible, including network site testing, network site indexing, distributed data back-up, file sharing, data caching, data conversion, and scientific research, as well as many other distributed projects.",
	"url": null,
	"owner": "United Devices, Inc.",
	"publication_number": "07039670",
	"publication_date": "2006-05-02",
	"application_number": "10167868",
	"application_date": "2002-06-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of managing workloads and associated distributed processing system",
	"summary": "",
	"abstract": "A method for managing workloads and associated distributed processing system are disclosed that identify the capabilities of distributed devices connected together through a wide variety of communication systems and networks and utilize those capabilities to organize, manage and distribute project workloads to the distributed devices.",
	"url": null,
	"owner": "United Devices, Inc.",
	"publication_number": "07092985",
	"publication_date": "2006-08-15",
	"application_number": "10885438",
	"application_date": "2004-07-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for monitoring and reporting performance of hosts and applications and selectively configuring applications in a resource managed system",
	"summary": "",
	"abstract": "A monitoring system for a distributed environment including a plurality of hosts capable of executing multiple copies of a scalable application includes a first device for generating first data corresponding to performance of all copies of the scalable application; a second device for generating second data corresponding to performance of all host in the distributed environment; and a third device for generating performance metrics based on the first and second data.",
	"url": null,
	"owner": "United States of America as represented by the Secretary of the Navy",
	"publication_number": "07051098",
	"publication_date": "2006-05-23",
	"application_number": "09864830",
	"application_date": "2001-05-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for electronic postmarking including ancillary data",
	"summary": "",
	"abstract": "An embodiment of the invention provides a method for performing electronic postmarking of data, including ancillary data is provided. The method includes receiving data from a sender. The method further includes selecting ancillary data. The method further includes generating an electronic postmark including the ancillary data. The method further includes forwarding the data with the electronic postmark including the ancillary data to a receiver.",
	"url": null,
	"owner": "United States Postal Service",
	"publication_number": "07121455",
	"publication_date": "2006-10-17",
	"application_number": "10474723",
	"application_date": "2002-04-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Monitoring and correction of geometric distortion in projected displays",
	"summary": "",
	"abstract": "A technique, and associated system and computer executable program code on a computer readable storage medium, for automatically correcting distortion of a front-projected display under observation by at least one camera. The technique may be employed in a myriad of front-projected display environments, e.g., single or multiple projectors and cameras are used. The technique includes: observing a first image, projected from at least one projector, comprising at least one target distribution of light intensities; for each conglomeration of white pixels of a difference image, compute a bounding box comprising a corresponding conglomeration of pixels in a framebuffer information of the camera, compute a bounding box comprising a corresponding conglomeration of pixels in a framebuffer information of the projector, compute an initial homography matrix, H, mapping pixels of the projector's bounding box to those of the camera's bounding box, optimize the initial homography matrix, compute a central location, (C, C), of the camera's bounding box using the initial homography matrix; and using a plurality of correspondence values comprising the correspondence, compute a corrective transform to aid in the automatic correcting of the display.",
	"url": null,
	"owner": "University of Kentucky Research Foundation",
	"publication_number": "07119833",
	"publication_date": "2006-10-10",
	"application_number": "10727953",
	"application_date": "2003-12-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Super-resolution overlay in multi-projector displays",
	"summary": "",
	"abstract": "A technique, associated system and computer executable program code, for projecting a superimposed image onto a target display surface under observation of one or more cameras. A projective relationship between each projector being used and the target display surface is determined using a suitable calibration technique. A component image for each projector is then estimated using the information from the calibration, and represented in the frequency domain. Each component image is estimated by: Using the projective relationship, determine a set of sub-sampled, regionally shifted images, represented in the frequency domain; each component image is then composed of a respective set of the sub-sampled, regionally shifted images. In an optimization step, the difference between a sum of the component images and a frequency domain representation of a target image is minimized to produce a second, or subsequent, component image for each projector.",
	"url": null,
	"owner": "University of Kentucky Research Foundation",
	"publication_number": "07097311",
	"publication_date": "2006-08-29",
	"application_number": "10827176",
	"application_date": "2004-04-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Global electronic trading system",
	"summary": "",
	"abstract": "Methods, systems, and computer readable media for facilitating trading two items (L,Q) from the group of items comprising commodities and financial instruments. At least two agents () want to trade the items (L,Q). There is a trading channel () between the two agents () allowing for the execution of trades. There are flow (trading) limits on the items being traded. A central computer () is coupled to the two agents (). Said computer () is adapted to convey to each agent () current tradable bid and offered prices and sizes subject to the agent's () trading limits.",
	"url": null,
	"owner": "Valaquenta Intellectual Properties Limited",
	"publication_number": "07130789",
	"publication_date": "2006-10-31",
	"application_number": "10741735",
	"application_date": "2003-12-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for emulating a check sorter",
	"summary": "",
	"abstract": "A method for communicating between a check processing system and a non-compatible check sorter is provided that includes accessing a MICR buffer for the check sorter. The MICR buffer comprises MICR data retrieved from a check. A process buffer is generated based on the MICR buffer. The process buffer is standardized for a plurality of disparate types of check sorters. A plurality of feature instructions are received for the check based on the process buffer. The feature instructions are communicated to the check sorter for processing of the check.",
	"url": null,
	"owner": "VECTORsgi, Inc.",
	"publication_number": "06985617",
	"publication_date": "2006-01-10",
	"application_number": "09558749",
	"application_date": "2000-04-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Broadband network system configured to transport audio or video at the transport layer, and associated method",
	"summary": "",
	"abstract": "A broadband network system configured to transfer user datagram protocol with value-added (UDPVA) packet from to a broadband interface unit (BIntU) transceiver. The broadband network system may comprise a data distribution center and the BIntU transceiver. The BIntU transceiver is configured to generate the UDPVA packet. The BIntU transceiver includes an encoder/decoder (codec) configured to alternatively code or decode UDP frame information and a digital signal processor (DSP) portion. The DSP portion is coupled to the codec. In one aspect, the DSP portion includes a stack that temporarily stores the UDPVA packet within the stack. In one aspect, the UDPVA packet is in a form to be transmitted directly to a network destination address device. In another aspect, the UDPVA packet is available to delivery to a network destination address or storage located on a local area network or a wide area network. In certain aspects, the BIntU transceiver is configured to transmit the UDPVA packet to the data distribution center.",
	"url": null,
	"owner": "Velcero Broadband Applications, LLC",
	"publication_number": "07124195",
	"publication_date": "2006-10-17",
	"application_number": "09981666",
	"application_date": "2001-10-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Process-linked data management system",
	"summary": "",
	"abstract": "A system for managing and reporting laboratory data wherein the data is obtained at remote data-taking stations, transferred instantaneously by wireless communication to a main data-storing/manipulating station for recording therein without being recorded at the remote data-taking stations, and reported only from the data-storing/manipulating.",
	"url": null,
	"owner": "VelQuest Corporation",
	"publication_number": "07092839",
	"publication_date": "2006-08-15",
	"application_number": "10202695",
	"application_date": "2002-07-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Adaptive transparent encryption",
	"summary": "",
	"abstract": "A technique for adaptive encryption of digital assets such as computer files. The system model monitors passage of files to uncontrollable removable storage media or through network connections and the like which may indicate possible abuse of access rights. In accordance with a preferred embodiment, an autonomous independent agent process running at a point of use, such a background process in a client operating system kernel, interrupts requests for access to resources. The agent process senses low level system events, filters, and aggregates them. A policy engine analyzes sequences of aggregate events to determine when to apply encryption.",
	"url": null,
	"owner": "Verdasys, Inc.",
	"publication_number": "07100047",
	"publication_date": "2006-08-29",
	"application_number": "10750321",
	"application_date": "2003-12-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Cluster failover for storage management services",
	"summary": "",
	"abstract": "A method, system, and computer program product to enable other nodes in a cluster to resume operations of a failed node. These operations include storage management services that allow configuration changes to be made dynamically to storage resources. Resource configuration data are synchronized on a set of nodes in a cluster immediately when a resource configuration change is made. If a node that has made a resource configuration change fails, the resource configuration change is available for use by other nodes in the set, each of which can resume operations of the failed node.",
	"url": null,
	"owner": "Veritas Operating Corporation",
	"publication_number": "07058846",
	"publication_date": "2006-06-06",
	"application_number": "10273213",
	"application_date": "2002-10-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Intermediate descriptions of intent for storage allocation",
	"summary": "",
	"abstract": "A method, system, and computer program product to enable a user to specify an intended use for a logical volume. The logical volume is configured using an application-specific template (also referred to as a user template) for an application, where the application-specific template satisfies the intended use. Rules from the application-specific template are stored with the logical volume in addition to or as part of the intent.",
	"url": null,
	"owner": "VERITAS Operating Corporation",
	"publication_number": "07143260",
	"publication_date": "2006-11-28",
	"application_number": "10327535",
	"application_date": "2002-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Preservation of intent of a volume creator with a logical volume",
	"summary": "",
	"abstract": "A method, system, and computer program product for preserving the intent of a logical volume creator with the logical volume. The creator of a logical volume defines certain characteristics of that logical volume. In response to the user's requirements, the system explores the possibilities for providing the characteristics in the existing storage environment. The system then implements the logical volume and stores the intent, along with a corresponding set of rules for configuring the logical volume, with the logical volume. As a result, volume management operations like resizing the volume and evacuating data from the volume use the rules to preserve the intent of the creator. By ensuring that the logical volume consistently conforms to rules fulfilling the original intent, a consistent level of availability of the logical volume can be achieved to fulfill contractual availability requirements for storage service level agreements.",
	"url": null,
	"owner": "Veritas Operating Corporation",
	"publication_number": "07143259",
	"publication_date": "2006-11-28",
	"application_number": "10324858",
	"application_date": "2002-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Storage area network (SAN) device logical relationships manager",
	"summary": "",
	"abstract": "A method and apparatus for managing one or more logical relationships between a plurality of devices in a storage area network (SAN). The method includes receiving a first identifier associated with a first SAN device, determining the logical relationships associated with the first SAN device, receiving a second identifier associated with a second SAN device, and associating the second identifier to the logical relationships associated with the first SAN device.",
	"url": null,
	"owner": "Veritas Operating Corporation",
	"publication_number": "07107328",
	"publication_date": "2006-09-12",
	"application_number": "11017985",
	"application_date": "2004-12-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for dynamically loadable storage device I/O policy modules",
	"summary": "",
	"abstract": "Systems, methods, apparatus and software can implement a multipathing driver using dynamically loadable device policy modules that provide device specific functionality for providing at least one of input/output (I/O) operation scheduling, path selection, and I/O operation error analysis. Because the device policy modules include device specific functionality, various different devices from different manufacturers can be more efficiently and robustly supported.",
	"url": null,
	"owner": "VERITAS Operating Corporation",
	"publication_number": "07127545",
	"publication_date": "2006-10-24",
	"application_number": "10717037",
	"application_date": "2003-11-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for validated indirect data backup using operating system I/O Operations",
	"summary": "",
	"abstract": "Methods and systems to backup data are provided. A first computing device identifies data to backup and stabilizes a frozen image of that data. Next, the frozen image is decomposed into physical storage addresses housing the data. The decomposed storage addresses are sent to a second computing device. The second computing device uses the storage addresses along with existing operating system I/O operations to backup the data to computer readable media.",
	"url": null,
	"owner": "VERITAS Operating Corporation",
	"publication_number": "07043507",
	"publication_date": "2006-05-09",
	"application_number": "10086597",
	"application_date": "2002-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Virtual resource ID mapping",
	"summary": "",
	"abstract": "The present invention provides virtual mapping of system resource identifiers in use by a software application for the purpose of making the running state of an application node independent. By adding a layer of indirection between the application and the resource, new system resources are reallocated and then can be mapped to the application's existing resource requirements while it is running, without the application detecting a failure or change in resource handles. This layer of indirection makes the application's system resource identifier (system RID) transparent to the application. RID's are usually numeric in form, but can also be alphanumeric. RID's are unique to a machine, and can be reused once all claims to a specific RID have been given up.",
	"url": null,
	"owner": "VERITAS Operating Corporation",
	"publication_number": "07103625",
	"publication_date": "2006-09-05",
	"application_number": "09680563",
	"application_date": "2000-10-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and computer program product for visibility culling of terrain",
	"summary": "",
	"abstract": "A method, system, and computer program product are provided for visibility culling of terrain. A height field is perspective modulated. An occlusion height field is generated based on an orthographic height propagation of the perspective modulated height field. Graphics data is culled based on the generated occlusion height field. Texturing and blending operations can be used to accelerate the perspective modulation. A perspective modulation disk is used to modulate the first height field along radial slices from a viewpoint. Texture from a one-dimensional texture with distance values is mapped to the radial slices to obtain the perspective modulated height field. Generating an occlusion height field can also be carried out using texturing and blending and can be hardware-accelerated. According to a further feature, a shift disk or shift texture is used.",
	"url": null,
	"owner": "Vicarious Visions, Inc.",
	"publication_number": "07027046",
	"publication_date": "2006-04-11",
	"application_number": "09923398",
	"application_date": "2001-08-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic driver substitution",
	"summary": "",
	"abstract": "An agent loaded in a computer's operating system (OS) simulates disconnection and reconnection of a device, with no need to actually disconnect the device logically from a computer. During simulated reconnection, when the OS requests the hardware ID of the device, the agent returns a substitute ID, which causes the OS to load a substitute driver. Substitution of the ID also allows driver substitution for a not yet logically connected device; in this cases, no simulated disconnection or reconnection is needed. Driver substitution is dynamic and reversible, with no need to restart the system or reboot the OS and substitution of a driver for one device of a type does not disturb other devices of the same type. The invention may be implemented entirely in software, with no need for hardware modifications or device customization.",
	"url": null,
	"owner": "VMWARE, Inc.",
	"publication_number": "07082598",
	"publication_date": "2006-07-25",
	"application_number": "10197979",
	"application_date": "2002-07-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer-implemented voice markup system and method",
	"summary": "",
	"abstract": "A computer-implemented method and system for processing a service request received from a telephone communication device. The telephony system and method utilizes a call management server and a voice interpreter server. The call management server receives an incoming call from a user, and the voice interpreter server processes the service request contained in the incoming call. Data communication encapsulation is used to communicate data between the call management server and the voice interpreter platform in order to process the service request.",
	"url": null,
	"owner": "VoiceGenie Technologies, Inc.",
	"publication_number": "07031444",
	"publication_date": "2006-04-18",
	"application_number": "10180894",
	"application_date": "2002-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for capturing, managing and disseminating manufacturing knowledge",
	"summary": "",
	"abstract": "An independent method for configuring and extracting detailed manufacturing knowledge for fabricating an object, tool or part and storing the data to a data file or data structure. The method includes extracting design criteria from a data file and parsing criteria into elemental manufacturing building modules independent of the data file and storing the captured criteria data file. Additional manufacturing knowledge is then inputted into the meta-data file not contained in the data file by extracting manufacturing knowledge from a database housing manufacturing knowledge and incorporating this knowledge into data file which is capable of being translated to Numerical Control machine language.",
	"url": null,
	"owner": "Vykor, Inc.",
	"publication_number": "07010544",
	"publication_date": "2006-03-07",
	"application_number": "10953809",
	"application_date": "2004-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for active reports with drill down capability using memory mapping of HTML files with embedded data",
	"summary": "",
	"abstract": "A system and method for obtaining information on a large number of files, and to view and take action on those files. The present invention compiles a report on a file system in HTML format that is displayed by a browser. The report allows users to manage their files, or portions of their files, directly from the report, relieving system administrators of this burden. The method comprises: requesting Active Reports to be run; generating a CSV formatted copy of the files in the storage mechanism; converting the CSV formatted copy of the files to an HTML formatted copy of the files; reading the HTML formatted copy of the files so that the user can view the files; loading the file data by mapping the HTML formatted copy of the files to memory into a spreadsheet-like grid; and managing the display of the report and user report requests.",
	"url": null,
	"owner": "W. Quinn, Inc.",
	"publication_number": "07127444",
	"publication_date": "2006-10-24",
	"application_number": "10133338",
	"application_date": "2002-04-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for monitoring telephone status",
	"summary": "",
	"abstract": "The monitor is for monitoring the status of a first client telephone, and for sending this status information via a central server to an authorized second client telephone. The central server stores a database of registered client telephones and corresponding client telephones that the client may monitor. A user of a registered client telephone monitors in real time the telephone status of registered friends, family, or co-workers that have agreed to be monitored by the user.",
	"url": null,
	"owner": "Walker Digital, LLC",
	"publication_number": "07010110",
	"publication_date": "2006-03-07",
	"application_number": "10090795",
	"application_date": "2002-03-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Developing a disk drive manufacturing program by executing the manufacturing program on an external test system",
	"summary": "",
	"abstract": "A method of manufacturing a disk drive is disclosed. The disk drive comprising a disk, a head actuated radially over the disk, a host interface for receiving disk commands from a host system, and a semiconductor memory for storing a drive operating program and a manufacturing program. The drive operating program comprising a disk access procedure for processing disk commands and a disk access vector for calling the disk access procedure. During a development stage, the manufacturing program is executed by an external test system that sends disk commands to a development drive. During a manufacturing stage, the manufacturing program is executed internally on each disk drive being manufactured by calling the disk access procedure of the drive operating program through the disk access vector.",
	"url": null,
	"owner": "Western Digital Technologies, Inc.",
	"publication_number": "07062398",
	"publication_date": "2006-06-13",
	"application_number": "11031617",
	"application_date": "2005-01-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Disk drive employing a configuration data structure comprising a plurality of configuration parameters to facilitate disk commands",
	"summary": "",
	"abstract": "A disk drive is disclosed comprising a microprocessor for executing a disk command. The microprocessor initializes a configuration data structure comprising a plurality of configuration parameters with default values. The microprocessor modifies at least one of the configuration parameters with a custom value to generate a custom configuration data structure, and the microprocessor executes the disk command using the custom configuration data structure.",
	"url": null,
	"owner": "Western Digital Technologies, Inc.",
	"publication_number": "07024614",
	"publication_date": "2006-04-04",
	"application_number": "10329155",
	"application_date": "2002-12-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Disk drive employing a disk command data structure for tracking a write verify status of a write command",
	"summary": "",
	"abstract": "A disk drive is disclosed including a disk having a plurality of tracks, wherein each track comprises a plurality of data sectors. A microprocessor executes a write command associated with a disk command data structure by inserting the disk command data structure into a dirty queue, and then executing the write command using the disk command data structure by writing data blocks to a plurality of target data sectors. The disk command data structure is then inserted into a write verify queue, and the disk command data structure is used to perform a write verify operation. The disk command data structure is inserted into an available queue if the target data sectors pass the write verify operation, and the disk command data structure is inserted back into the dirty queue if at least one of the target data sectors fails the write verify operation.",
	"url": null,
	"owner": "Western Digital Technologies, Inc.",
	"publication_number": "07120737",
	"publication_date": "2006-10-10",
	"application_number": "11336674",
	"application_date": "2006-01-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Disk drive employing a disk command data structure for tracking a write verify status of a write command",
	"summary": "",
	"abstract": "A disk drive is disclosed comprising a disk having a plurality of tracks each comprising a plurality of data sectors for storing a plurality of data blocks. A microprocessor initializes a write verify counter in a disk command data structure and executes a write command. The microprocessor executes a write verify operation to verify the recoverability of the data written to a plurality of target data sectors. If the write verify operation fails for a target data sector, the microprocessor updates the write verify counter in the disk command data structure and re-executes the write command and the write verify operation. If the write verify operation fails a number of times such that the write verify counter exceeds a threshold, the microprocessor relocates a data block from the failing target data sector to a spare data sector.",
	"url": null,
	"owner": "Western Digital Technologies, Inc.",
	"publication_number": "07076604",
	"publication_date": "2006-07-11",
	"application_number": "10329152",
	"application_date": "2002-12-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Disk drive executing a manufacturing program internally by executing disk commands through a vector",
	"summary": "",
	"abstract": "A disk drive is disclosed for executing a drive operating program and a manufacturing program during a manufacturing process. An external test system executes a test program comprising platform independent executable code segments and host interface executable code segments. The external test system for executing the host interface executable code segments to send disk commands to a development drive. The manufacturing program comprises the platform independent executable code segments of the test program and disk access executable code segments. The drive operating program comprises a disk access procedure for processing disk commands and a disk access vector for calling the disk access procedure. The disk access executable code segments of the manufacturing program execute disk commands by calling the disk access procedure of the drive operating program through the disk access vector.",
	"url": null,
	"owner": "Western Digital Technologies, Inc.",
	"publication_number": "06996501",
	"publication_date": "2006-02-07",
	"application_number": "10329161",
	"application_date": "2002-12-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Disk drive executing a preemptive multitasking operating system comprising tasks of varying priority",
	"summary": "",
	"abstract": "A disk drive is disclosed for executing a preemptive multitasking operating system comprising tasks of varying priority, including a disk task for processing disk commands by initiating seek operations and configuring parameters of a read/write channel, a host task for initiating disk commands in response to host commands received from a host computer, a background task for initiating disk commands to perform background operations including a defect scan of the disk, and an execution task for arbitrating the disk commands generated by the host task and the background task and for transmitting the arbitrated disk commands to the disk task.",
	"url": null,
	"owner": "Western Digital Technologies, Inc.",
	"publication_number": "07082494",
	"publication_date": "2006-07-25",
	"application_number": "10329167",
	"application_date": "2002-12-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for communicating information to portable computing devices",
	"summary": "",
	"abstract": "An information distributor comprises a processor, a network receiver connected to the processor, a transceiver system connected to the processor, and a memory connected to the processor. The memory includes network receiver communication stacks configured to direct the network receiver to wirelessly receive information from a system communication network and transceiver protocol stacks configured to direct the transceiver system to wirelessly transmit the information on demand to a portable computing device located within transmission range of the transceiver system. The transceiver protocol stacks include a first module configured to direct the transceiver system to generate a beacon, a second module configured to direct the transceiver system to detect an acknowledgement signal generated, in response to the beacon, by the portable computing device, and a third module configured to direct the transceiver system to generate, in response to the acknowledgement signal, a broadcast incorporating the information.",
	"url": null,
	"owner": "Wideray Corporation",
	"publication_number": "07072975",
	"publication_date": "2006-07-04",
	"application_number": "09842359",
	"application_date": "2001-04-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software development process",
	"summary": "",
	"abstract": "A flexible component-based software system is developed by generating a UML model () in a specification phase (). Components are generated in an implementation phase (). The UML model () is transformed to a meta model. A runtime architecture service (RAS, ) dynamically assembles a system in runtime according to the meta model. A modelling tool () modifies the meta model via an API () and a meta modeller (). This allows dynamic re-configuration of the system.",
	"url": null,
	"owner": "Wilde Technologies Limited",
	"publication_number": "07000219",
	"publication_date": "2006-02-14",
	"application_number": "09985501",
	"application_date": "2001-11-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for implementing a flexible data-driven target object model",
	"summary": "",
	"abstract": "A method and system are disclosed for a flexible data-driven target object model which allows a client to gather and present information about objects on a target system independently of the target's operating system and processor architecture. The object descriptions are implemented using XML in order to provide architecture-generic descriptions of objects. The architecture-generic descriptions define the object data to be returned from the target and also defines its presentation to the user.",
	"url": null,
	"owner": "Wind River Systems, Inc.",
	"publication_number": "07051015",
	"publication_date": "2006-05-23",
	"application_number": "09480844",
	"application_date": "2000-01-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Two-level operating system architecture",
	"summary": "",
	"abstract": "A computer system is provided comprising a core operating system and a system space having a number of memory locations. The core operating system creates a number of protection domains to partition the system space. Each of the partitions includes a partition operating system and a partition user application. Each partition operating system provides resource allocation services to the respective partition user application within the partition.",
	"url": null,
	"owner": "Wind River Systems, Inc.",
	"publication_number": "07103745",
	"publication_date": "2006-09-05",
	"application_number": "10273333",
	"application_date": "2002-10-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and methods for accessing a collection of content portions",
	"summary": "",
	"abstract": "Techniques for browsing through a large collection of content portions uses a scatter and gather approach where a collection of content portions is clustered into one or more clusters using multi-modal data modeling. Additionally, as part of the multi-modal data modeling, u201cproximal cuesu201d surrounding links or connections or surrounding u201cimage linksu201d in a content portion are used to quickly identify the user's information needs. Thus, taking into account proximal cues during multi-modal data modeling improves the scattering and the gathering process, as well as personalizes the scattering and the gathering process to most effectively cluster content portions of interest to the user.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07028053",
	"publication_date": "2006-04-11",
	"application_number": "10248408",
	"application_date": "2003-01-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Customizable remote order entry system and method",
	"summary": "",
	"abstract": "A system for generating a requisition comprises a client computer system and a server computer system connected via a network. The client computer is configured to allow a plurality of users to access the server computer system. The system further includes a server application comprising a user interface running on the server computer system and having a multi-tier architecture. The multi-tier architecture includes a first tier of client application code for initiating processing by the server application in response to input by a user of the client computer system, a middle tier of object-oriented server application code, and a third tier of shared access and data code. An application programming interface is configured to allow a user, such as a system administrator or the like, to customize the user interface. In a further aspect, a method of customizing a server application is also provided.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07127677",
	"publication_date": "2006-10-24",
	"application_number": "09768148",
	"application_date": "2001-01-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Document image decoding systems and methods using modified stack algorithm",
	"summary": "",
	"abstract": "Methods and systems for document image decoding incorporating a Stack algorithm improve document image decoding. The application of the Stack algorithm is iterated to improve decoding. A provisional weight is determined for a partial path to reduce template matching. In addition, semantically equivalent hypotheses are identified to reduce redundant hypotheses.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07039240",
	"publication_date": "2006-05-02",
	"application_number": "10215090",
	"application_date": "2002-08-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Sheet preparation module architecture and control methods",
	"summary": "",
	"abstract": "Sheets can be manipulated for punching, perforating and/or folding. The systems and methods according to this invention allow sheets to be punched and/or perforated in various configurations. The systems and methods according to this invention allow sheets to be folded in various forms and/or configurations. Sheets can be inverted to ensure proper orientation. The systems and methods according to this invention allow the number and/and or locations of punches and/or perforations and the type and/or length of folds to be controlled on a sheet-by-sheet basis. The systems and methods according to this invention allow the sheet preparation module to be optionally configured within the photocopying system depending on the needs and flexibility of the finishing requirements of the operator. The modularity of the sheet preparation module design as a u201cplug and playu201d unit enables greater functionality for the manipulation of sheets.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07137943",
	"publication_date": "2006-11-21",
	"application_number": "10248564",
	"application_date": "2003-01-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methods for compensating for streaks in images",
	"summary": "",
	"abstract": "Defects in an image forming system may give rise to visible streaks, or one-dimensional defects in an image that run parallel to the process direction. One known method for compensating for streaks introduces a separate tone reproduction curve for each pixel column in the process direction. A compensation pattern according to this invention has alignment marks before and after a halftone compensation region. The alignment marks provide alignment between the printer pixel grid and a scanning pixel grid. The line width of each alignment mark and the gray level in each pixel column of each gray level portion is measured and analyzed to produce a local tone reproduction curve for each pixel column and associated line width. The line widths of the alignment marks can be remeasured to adjust the local tone reproduction curves to compensate for the streak defect when printing.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07090324",
	"publication_date": "2006-08-15",
	"application_number": "10739177",
	"application_date": "2003-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and article of manufacture for cryptoserver-based auction",
	"summary": "",
	"abstract": "A system, method, and article of manufacture are provided for pricing a cryptographic service on a network utilizing one or more cryptoservers. A request for a cryptographic service is received from a user utilizing a network. The request is received by a cryptographic service provider. A contract is generated based on a variable pricing scheme in response to the request. The contract is sent from the cryptographic service provider to the user utilizing the network. A method is also provided for auditing a security provision on a network utilizing a cryptoserver. A cryptographic key is obtained such as by obtaining it from a trusted source or generating the key. A plurality of users are allowed to request that a cryptoserver use the cryptographic key to sign a message in violation of a security provision. It is determined whether the cryptoserver signed the message in response to the request. An indication of failed security integrity is provided upon determining that the cryptographic server has signed the message.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "06990468",
	"publication_date": "2006-01-24",
	"application_number": "09596857",
	"application_date": "2000-06-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and article of manufacture for providing cryptographic services utilizing a network",
	"summary": "",
	"abstract": "A system, method and article of manufacture are provided for affording a cryptographic service utilizing a server on a network. Initially, a client is identified utilizing the network. A first key is established, and a tunnel is generated on the network. Thereafter, information is received at the server from the client utilizing the tunnel. Such information is encrypted by the client using the first key. At the server, cryptographic work is performed using the first key.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07051199",
	"publication_date": "2006-05-23",
	"application_number": "09596652",
	"application_date": "2000-06-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and method for automatically choosing visual characteristics to highlight a target against a background",
	"summary": "",
	"abstract": "A method for choosing visual characteristics of a characteristic space within a region includes calculating a mean characteristic of the region, determining a covariance of the region, inverting the covariance to produce an inverse covariance, estimating a target characteristic, determining a difference between the mean characteristic and the target characteristic transposing the difference to produce a difference transpose, determining a saliency from a product of the difference transpose multiplied by the inverse covariance multiplied by the difference, comparing the saliency to an acceptance criterion to yield one of an acceptance if the saliency satisfies the acceptance criterion and a rejection otherwise, adjusting the target characteristic and repeating the determining a difference, transposing the difference, determining a saliency and comparing the saliency steps if the comparing yields the rejection, and outputting the target characteristic if the comparing yields the acceptance.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07130461",
	"publication_date": "2006-10-31",
	"application_number": "10321662",
	"application_date": "2002-12-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for compensating for streaks in images",
	"summary": "",
	"abstract": "Defects in an image forming system may give rise to visible streaks, or one-dimensional defects in an image that run parallel to the process direction. One known method for compensating for streaks introduces a separate tone reproduction curve for each pixel column in the process direction. A compensation pattern according to this invention has alignment marks before and after a halftone compensation region. The alignment marks provide alignment between the printer pixel grid and a scanning pixel grid. The line width of each alignment mark and the gray level in each pixel column of each gray level portion is measured and analyzed to produce a local tone reproduction curve for each pixel column and associated line width. The line widths of the alignment marks can be remeasured to adjust the local tone reproduction curves to compensate for the streak defect when printing.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07125094",
	"publication_date": "2006-10-24",
	"application_number": "10739204",
	"application_date": "2003-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for compensating for streaks in images",
	"summary": "",
	"abstract": "Defects in an image forming system may give rise to visible streaks, or one-dimensional defects in an image that run parallel to the process direction. One known method for compensating for streaks introduces a separate tone reproduction curve for each pixel column in the process direction. A compensation pattern according to this invention has a plurality of halftone regions that are lead by, trained by, and separated by rows of fiducial marks. The fiducial marks allow the printer pixel grid and a scanning pixel grid to be correlated. The gray level in each pixel column of each gray level portion is measured and analyzed to produce a local tone reproduction curve for each pixel column and associated line width. The local tone reproduction curves are then used to compensate for the streak defect when printing.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07095531",
	"publication_date": "2006-08-22",
	"application_number": "10701475",
	"application_date": "2003-11-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for detecting impending faults within closed-loop control systems",
	"summary": "",
	"abstract": "An impending fault of a component operated within a closed-loop control system can be detected. The close-loop control system is disabled. An actuator of the closed-loop control system is operated at one or more test values. A sensor reading of the actuator is taken while that actuator is operated at the one or more test values. A warning is generated if an impending fault condition is detected. An impending fault condition may be detected if the component operates at a value exceeding a maximum defined operating value, if the component operates at a value below a minimum defined operating value, or if an operating range that is narrower than a defined full operating range for the component is detected.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "06996442",
	"publication_date": "2006-02-07",
	"application_number": "10342266",
	"application_date": "2003-01-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for embedding messages in look-up tables",
	"summary": "",
	"abstract": "System and methods provide a message, generated based on a message authentication code (MAC), embedded in a look-up table associated with an image. The embedding of the message does not affect the image. The message may be used to authenticate the image.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "06992797",
	"publication_date": "2006-01-31",
	"application_number": "11110674",
	"application_date": "2005-04-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for improving calibration of a linear array sensor",
	"summary": "",
	"abstract": "Systems and methods provide calibration for a linear array sensor. A test pattern having a plurality of lines is used. Comparison between expected and measured spacing between a pair of neighboring lines is used to determine sensor position displacement.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07154110",
	"publication_date": "2006-12-26",
	"application_number": "10953321",
	"application_date": "2004-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for uniformly identifying e-mail attachments",
	"summary": "",
	"abstract": "A uniform identifier record for a digital file comprises a unique identifier field and a textual identifier field. The unique identifier field may comprise a uniform resource locator. Alternately, the unique identifier field may comprise an integer. In one embodiment, the unique identifier is created by adding a constant value to a last prior unique identifier. The textual information is a user-friendly string identifying the file. In applications where the file identified by the uniform identifier record is associated with a separate file, the uniform identifier record is appended to the associated file.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07107276",
	"publication_date": "2006-09-12",
	"application_number": "10270667",
	"application_date": "2002-10-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems, methods and graphical user interfaces for previewing image capture device output results",
	"summary": "",
	"abstract": "The user enters the desired image capture parameters to be used when capturing an electronic image of an original document into one or more portions of a preview graphical user interface. Then, either automatically, or upon selecting a preview function, a preview pane portion of the preview graphical user interface is generated. The preview pane portion graphically illustrates how the various image capture parameters selected by the user will be applied to the original document to generate the captured electronic image data. Each of the different types of image capture parameters has a different visual cue associated with it. The visual cues visually inform the user of the image capture parameters that the user has selected. Thus, without actually capturing a preview image and without filling the preview pane portion with an actual preview image, the user can accurately determine what the resulting image will look like after the original document is captured. Thus, most preview scans can be eliminated. The user can also easily determine whether a preview scan is required. For example, a preview scan may still be desirable if it is difficult for the user to determine if the selected image capture parameters will result in the desired captured electronic image data. However, even if the user determines that a preview scan is still desirable, the selected image capture parameters will generally be closer to the required image capture parameters before the actual preview scan is generated than without using the preview graphical user interface.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07065716",
	"publication_date": "2006-06-20",
	"application_number": "09487274",
	"application_date": "2000-01-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Core template package for creating run-time reconfigurable cores",
	"summary": "",
	"abstract": "A method and apparatus for creating run-time reconfigurable cores using a core template package. The core template package provides an object-oriented application programming interface for specifying run-time reconfigurable (RTR) electronic circuit designs in a RTR application program. A run-time parameterizable (RTP) core library includes a plurality of predefined RTP core classes that implement selected functions in an electronic circuit design when invoked from an RTR application program. An RTP core template package includes a plurality of template classes. Each template class has a predefined set of method interfaces and fields. The RTP core template package further includes an RTP core template class that includes methods for building, connecting and traversing a hierarchy of RTP core objects based on the template classes and the predefined RTP core classes.",
	"url": null,
	"owner": "Xilinx, Inc.",
	"publication_number": "07143418",
	"publication_date": "2006-11-28",
	"application_number": "10013764",
	"application_date": "2001-12-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integration of a run-time parameterizable core with a static circuit design",
	"summary": "",
	"abstract": "Method and apparatus for integrating a run-time parameterizable logic core with a static circuit design. A configuration bitstream is generated from a main circuit design that is specified in a hardware description language. The main circuit design includes a first sub-circuit design that specifies a selected subset of resources of the PLD needed by the RTP core and an interface between the RTP core and other parts of the main circuit design. Via execution of a run-time reconfiguration control program, the configuration data that correspond to the first sub-circuit design are replaced with configuration data that implement the RTP core. The run-time reconfiguration program then configures the PLD with the updated configuration bitstream.",
	"url": null,
	"owner": "Xilinx, Inc.",
	"publication_number": "07139995",
	"publication_date": "2006-11-21",
	"application_number": "10102585",
	"application_date": "2002-03-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for resource allocation in FPGA-based system-on-chip (SoC)",
	"summary": "",
	"abstract": "As system components which are used to customize an FPGA-based embedded processor SoC are selected and configured, the actual or estimated resources can be immediately provided. A GUI () can facilitate display of resources utilized by any or all selected system components, resources available for use by unselected system components and the customized device resources. Resource conflict and configuration checks can be used to identify and resolve system component problems and design and specification requirements. Notably, any associated resource problems can be immediately identified and rectified.",
	"url": null,
	"owner": "Xilinx, Inc.",
	"publication_number": "07058921",
	"publication_date": "2006-06-06",
	"application_number": "10082441",
	"application_date": "2002-02-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Processing structured data",
	"summary": "",
	"abstract": "The present invention provides a fast and efficient way of processing structured data by utilizing an intermediate file to store the structural information. The structured data may be processed into a Binary mask Format (BMF) file which may serve as a starting point for post-processing. A tree structure built on top of the BMF file may be constructed very quickly, and also takes up less space than a (DOM) tree. Additionally, BMF records may reside entirely in the memory and contain structural information, allowing (SAX)-like sequential data access.",
	"url": null,
	"owner": "Ximpleware, Inc.",
	"publication_number": "07133857",
	"publication_date": "2006-11-07",
	"application_number": "10272077",
	"application_date": "2002-10-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for maintaining secure data input and output",
	"summary": "",
	"abstract": "Methods and systems for enhancing the security of data during input and output on a client computer system are provided to prevent attempts by unauthorized code to access, intercept, and/or modify data. Example embodiments provide a plurality of obfuscation techniques and security enhanced drivers that use these obfuscation techniques to prohibit unauthorized viewing/receiving of valid data. When the drivers are used together with the various obfuscation techniques, the security enhanced drivers provide mechanisms for u201cschedulingu201d the content of the storage areas used to store the data so that valid data is not available to unauthorized recipients. When unauthorized recipients attempt to access the u201cdata,u201d they perceive or receive obfuscated data. The obfuscation techniques described include u201ccopy-in,u201d u201creplace and restore,u201d and u201cin-place replacementu201d de-obfuscation/re-obfuscation techniques. In one embodiment, a security enhanced display driver, a security enhanced mouse driver, a security enhanced keyboard driver, and a security enhanced audio driver are provided. To complement the security enhancements, the methods and systems also provide for a watchdog mechanism to ensure that the driver is functioning as it should be and various user interface techniques for denoting security on a display device.",
	"url": null,
	"owner": "xSides Corporation",
	"publication_number": "07007025",
	"publication_date": "2006-02-28",
	"application_number": "10167053",
	"application_date": "2002-06-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for recording telephonic communications",
	"summary": "",
	"abstract": "A system and method are disclosed for recording a telephone call upon demand by a party to the telephone call. The method includes the steps of receiving a request from a first party to record a telephone call between the first party and a second party, establishing a third-party connection with the first party and the second party, receiving the telephone call, and storing the content of the telephone call in memory for subsequent delivery or retrieval.",
	"url": null,
	"owner": "Xtend Communications Corp.",
	"publication_number": "07042987",
	"publication_date": "2006-05-09",
	"application_number": "10741846",
	"application_date": "2003-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for enabling a script on a first computer to communicate and exchange data with a script on a second computer over a network",
	"summary": "",
	"abstract": "A method and system for enabling a script on a first computer to communicate and exchange data with a script on a second computer so as to provide access by the script to data typically inaccessible by a script. The method and system enable a first computer to control the Internet navigation of a second computer, and also enable instant messaging between a first computer and a member of a synchronization group. The computers may be connectable with each other over any type of network (e.g., LAN, WAN, intranet, Internet, cellular, etc.).",
	"url": null,
	"owner": "Yahoo! Inc.",
	"publication_number": "07051119",
	"publication_date": "2006-05-23",
	"application_number": "09904300",
	"application_date": "2001-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of controlling an internet browser interface and a controllable browser interface",
	"summary": "",
	"abstract": "The present invention is directed to a method of dynamically controlling and displaying an Internet browser interface, and to a dynamically controllable Internet browser interface. In accordance with the present invention, a browser interface may be customized using a controlling software program that may be provided by an Internet content provider, an ISP, or that may reside on an Internet user's computer. The controlling software program enables the Internet user, the content provider, or the ISP to customize and control the information and/or functionality of a user's browser and browser interface.",
	"url": null,
	"owner": "Yahoo! Inc.",
	"publication_number": "07107548",
	"publication_date": "2006-09-12",
	"application_number": "09429585",
	"application_date": "1999-10-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Voice integrated VOIP system",
	"summary": "",
	"abstract": "An integrated VoIP unified message processing system includes a voice platform that processes data in native VoIP format. There is no use of hardware telephone interface cards (TICs) or software transcoding to transform data to PCM or other formats. Cost reductions are achieved by the elimination of expensive dedicated hardware and scalability is achieved by obviating the need for software transcoding.",
	"url": null,
	"owner": "Yahoo! Inc.",
	"publication_number": "07095733",
	"publication_date": "2006-08-22",
	"application_number": "09658771",
	"application_date": "2000-09-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus providing electronic messages that are linked and aggregated",
	"summary": "",
	"abstract": "A method for associating related electronic messages in computer storage. A first transportable application is created and stored. User input requesting creation of a link from the first transportable application to another transportable application is received. User input that selects a second transportable application from among a plurality of previously created transportable applications is received. A link from the first transportable application to the second transportable application is created and stored. As a result, transportable application may be inter-related in complex message webs. The message webs may also be inter-related in message web rings. Links may be generated manually or automatically, based on context, workflow processes, or other known relationships among applications. Recipient lists and data may propagate among fields of linked transportable applications, directly or according to abstract business rules. Further, multiple-part electronic messages are disclosed. A graphical user interface of an electronic messaging system displays a message in the form of one or more header portions and one or more body portions. Each of the body portions has a selection region. While one body portion is visible at a given time, all the selection regions are continuously visible in the user interface to facilitate selection of any of the body portions at a particular time. Selecting a selection region of a non-displayed body portion causes a server to generate a refreshed user interface that includes the entirety of the selected body portion, and that hides the previously viewed body portion. As a result, a large amount of associated information may be combined in a single message in a way that is clearly organized and easily accessible.",
	"url": null,
	"owner": "Zaplet, Inc.",
	"publication_number": "07130885",
	"publication_date": "2006-10-31",
	"application_number": "09948051",
	"application_date": "2001-09-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for automated testing of print drivers in a computer system",
	"summary": "",
	"abstract": "To test a print driver in a computer system, a driver-test data structure with associated applications and documents is automatically generated. The driver-test data structure is processed to open the associated applications and documents and thereby test the print driver. In one aspect of the invention, one or more print options associated with said driver are selected. The driver-test data structure is automatically generated with the associated applications, documents and print options. The driver-test data structure is processed to open the associated applications and documents, and to set the selected print options. In another aspect of the invention, the print options of a driver are automatically learned.",
	"url": null,
	"owner": "Zoran Corporation",
	"publication_number": "07102765",
	"publication_date": "2006-09-05",
	"application_number": "09495459",
	"application_date": "2000-02-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for automatically learning control sequences of application programs",
	"summary": "",
	"abstract": "The invention includes a technique to automatically learn control sequences of a set of computer application programs. The invention makes use of a data structure into which control sequences from a set of computer application programs can be loaded. The data structure may then be used by other applications to execute the learned control sequences.",
	"url": null,
	"owner": "Zoran Corporation",
	"publication_number": "07133141",
	"publication_date": "2006-11-07",
	"application_number": "09699324",
	"application_date": "2000-10-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
}]