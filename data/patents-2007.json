
[{
	"name": "3D stereo browser for the internet",
	"summary": "",
	"abstract": "A viewer for viewing stereo images either downloaded over a network, such as the Internet, or resident on a personal computer uses a graphical user interface (GUI) to facilitate the display of wireframes with or without texture applied in a variety of formats. In stereo mode, the GUI permits adjustment of the neutral plane and of camera offset. The file sizes utilized with the viewer are very small and permit rapid transmission over a network. The files contain wireframe information, texture map information and animation information.",
	"url": null,
	"owner": "",
	"publication_number": "07190371",
	"publication_date": "2007-03-13",
	"application_number": "10839314",
	"application_date": "2004-05-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Active path menu navigation system",
	"summary": "",
	"abstract": "A method for navigating within a multi-level hierarchical collapsing menu structure is disclosed. Each level in the menu structure contains plural items, each item being at least one of a function, a pointer to a location, and a pointer to another level. The method of the present invention includes a step of providing a graphical user menu system displaying the items of a given level and enabling selection thereof, wherein access of the given level requires sequential access of each of the levels preceding the given level in the hierarchy. An Active Path is dynamically constructed as a sequence of active links as items are selected using the graphical user menu system, with one active link corresponding to each of the items selected. The active links provide direct access to a function corresponding level or menu item without the need to navigate using the graphical user menu system.",
	"url": null,
	"owner": "",
	"publication_number": "07216301",
	"publication_date": "2007-05-08",
	"application_number": "10444359",
	"application_date": "2003-05-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Active path menu navigation system",
	"summary": "",
	"abstract": "A method for navigating within a multi-level hierarchical collapsing menu structure is disclosed. Each level in the menu structure contains plural items, each item being at least one of a function, a pointer to a location, and a pointer to another level. The method of the present invention includes a step of providing a graphical user menu system displaying the items of a given level and enabling selection thereof, wherein access of the given level requires sequential access of each of the levels preceding the given level in the hierarchy. An Active Path is dynamically constructed as a sequence of active links as items are selected using the graphical user menu system, with one active link correspond to each of the items selected. The active links provide direct access to a function corresponding level or menu item without the need to navigate using the graphical user menu system.",
	"url": null,
	"owner": "",
	"publication_number": "07191411",
	"publication_date": "2007-03-13",
	"application_number": "10164520",
	"application_date": "2002-06-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for increased security of wireless transactions",
	"summary": "",
	"abstract": "A mobile communication device with security mechanisms is provided for enabling wireless personal information transfer with increased security. In another embodiment of the invention, a mobile communication device is used to confirm a transaction.",
	"url": null,
	"owner": "",
	"publication_number": "07286818",
	"publication_date": "2007-10-23",
	"application_number": "11105366",
	"application_date": "2005-04-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for storing and distributing encrypted digital content",
	"summary": "",
	"abstract": "The present invention provides for a method and system for providing a type of Managed/Secured File Transfer between one or more computers arraigned in server-client or peer-to-peer configuration. This method and system takes digital content in the form of a file, shreds this file into separate pieces and encrypts each piece separately. Once encrypted, each piece is stored into a database. Client applications can then access these pieces of digital content over a network, decrypt and reassemble each piece to be played in the case of audio/video content, or viewed in the case of visual content. In some embodiments, the content requested by the client application is stored into a second database in a shredded and encrypted format, whereas in other embodiments the content is reassembled into the original non-encrypted and non-shredded file format. This method and system can reside on a computer system, hand held device, or other device.",
	"url": null,
	"owner": "",
	"publication_number": "07254837",
	"publication_date": "2007-08-07",
	"application_number": "11181621",
	"application_date": "2005-07-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for storing and distributing encrypted digital content and functionality suite associated therewith",
	"summary": "",
	"abstract": "The present invention provides for a method and system for providing a type of Managed/Secured File Transfer between one or more computers arraigned in server-client or peer-to-peer configuration. This method and system takes digital content in the form of a file, shreds this file into separate pieces and encrypts each piece separately. Once encrypted, each piece is stored into a database. Client applications can then access these pieces of digital content over a network, decrypt and reassemble each piece to be played in the case of audio/video content, or viewed in the case of visual content. In some embodiments, the content requested by the client application is stored into a second database in a shredded and encrypted format, whereas in other embodiments the content is reassembled into the original non-encrypted and non-shredded file format. This method and system can reside on a computer system, hand held device, or other device.",
	"url": null,
	"owner": "",
	"publication_number": "07237268",
	"publication_date": "2007-06-26",
	"application_number": "11181608",
	"application_date": "2005-07-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic perception method and device",
	"summary": "",
	"abstract": "The invention concerns a method and a device for the automatic perception of an event. Said device comprises a control unit, a data bus, a back-annotation bus and at least a histogram computing unit.",
	"url": null,
	"owner": "",
	"publication_number": "07212669",
	"publication_date": "2007-05-01",
	"application_number": "10204825",
	"application_date": "2001-02-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automating commerce on a broadcast programming distribution network",
	"summary": "",
	"abstract": "A broadcast programming network device includes a tuner capable of being tuned to any one of multiple broadcast video programming reception channels. When tuned to a particular channel, the broadcast video programming scheduled for that channel and icon related data indicative of the availability of commerce related information are received. A processor is provided to process the received icon related data to direct a simultaneous display of an icon with the scheduled broadcast video programming. A display screen then displays the scheduled broadcast video programming and, in accordance with the directive, simultaneously displays the icon.",
	"url": null,
	"owner": "",
	"publication_number": "07234155",
	"publication_date": "2007-06-19",
	"application_number": "09644656",
	"application_date": "2000-08-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data flow scheduling environment with formalized pin-base interface and input pin triggering by data collections",
	"summary": "",
	"abstract": "A system and method for implementing a data-flow based system includes three basic components: a data-flow based scheduling environment that balances the needs of data initiated program execution as a result of flows with other practical considerations such as user responsiveness, event driven invocation, user interface considerations, and the need to also support control-flow based paradigms where required; a visual programming language, based on the flow of strongly-typed run-time accessible data and data collections between small control-flow based locally and network distributed functional building-blocks, known as widgets; and a formalized pin-based interface to allow access to data-flow contents from the executing code within the widgets. The pins on the widgets include both pins used to control execution of a widget as well as pins used to receive data input from a data flow. The system and method further include a debugging environment that enables visual debugging of one or more widgets (or collections of widgets). Data control techniques include the concepts of u201cORu201d and u201cANDu201d consumption thereby permitting either consumption immediately or only after all widget inputs have received the token. Additional extensions to this framework will also be described that relate to the environment, the programming language and the interface.",
	"url": null,
	"owner": "",
	"publication_number": "07308674",
	"publication_date": "2007-12-11",
	"application_number": "10357285",
	"application_date": "2003-02-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Determining the geographic location of a network device",
	"summary": "",
	"abstract": "Provided are techniques and apparatuses for determining the geographic location of a node on a network. In a representative embodiment, a data packet is received over the network from a second node, the data packet including a network identifier for the second node and a Time-To-Live (TTL) field that has a value, with the value of the TTL field for the data packet indicating a maximum additional number of hops that could have been made by the data packet. A probe packet addressed to the network identifier for the second node is then sent, the probe packet also including a TTL field. The initial value for the TTL field of the probe packet is set based on the value for the TTL field of the data packet.",
	"url": null,
	"owner": "",
	"publication_number": "07200673",
	"publication_date": "2007-04-03",
	"application_number": "09590960",
	"application_date": "2000-06-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed computing system architecture",
	"summary": "",
	"abstract": "A computing system architecture is based upon a peer-to-peer, asynchronous model. The architecture specifies a set of infrastructure facilities that comprise an inter-prise operating system. The inter- prise operating system provides all the facilities that make application coding as easy in the peer-to-peer asynchronous model as it is in a hierarchical, synchronous model. Services, which reside in containers, are linked asynchronously by an inter-prise bus and use data from a virtual data store.",
	"url": null,
	"owner": "",
	"publication_number": "07174363",
	"publication_date": "2007-02-06",
	"application_number": "10032222",
	"application_date": "2001-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Efficient object storage for zone rendering",
	"summary": "",
	"abstract": "Similar, contiguous primitives are stored as a single primitive in zone rendering bins. A primitive packet used in the bin is allowed to vary in length and the currently open type of primitive is recorded on a per-bin basis. A special code is used to specify a variable number of subsequent indices. With this mechanism, the hardware is able to start outputting and replicating primitive commands into bin lists on the fly without requiring the buffering of the entire primitive. Given the variable nature of the primitive instruction, multiple similar/sequential primitives can be concatenated using a single primitive command header.",
	"url": null,
	"owner": "",
	"publication_number": "07298371",
	"publication_date": "2007-11-20",
	"application_number": "10848018",
	"application_date": "2004-05-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Email sender verification system",
	"summary": "",
	"abstract": "A method and system for email sender verification. A tag is included in an email that contains an identity datum for the sender that is associated with their email address in a server. The email is sent via a network, thus associating a sender address with the email. At least the identity datum, taken from the tag, is then provided to the server, to retrieve the email address. The email address and the sender address are then compared, verifying that the email came from the sender if these match.",
	"url": null,
	"owner": "",
	"publication_number": "07290035",
	"publication_date": "2007-10-30",
	"application_number": "10905346",
	"application_date": "2004-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Encryption of programs represented as polynomial mappings and their computations",
	"summary": "",
	"abstract": "Three variations of a method of representing (abstract) state machines as polynomial mappings, and three variations of a corresponding encryption program stored on a computer readable medium. The encryption program is based directly on symbolic functional composition of polynomial mappings with permutations expressed as polynomial mappings.",
	"url": null,
	"owner": "",
	"publication_number": "07162032",
	"publication_date": "2007-01-09",
	"application_number": "09737742",
	"application_date": "2000-12-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interactive game providing instruction in musical notation and in learning an instrument",
	"summary": "",
	"abstract": "A musical keyboard is connected to a computer. The computer implements a graphical user interface for teaching users to play the musical instrument. A computer readable music file, such as a MIDI file, is used to drive the creation of game objects that travel from a point of origination along a path toward a key of a virtual keyboard. In one form, when a user presses a key of the musical keyboard within a certain time window of arrival of the game object at the corresponding key of the virtual keyboard, the user is awarded with an audio presentation, a visual presentation and/or with game points. In a more structured learning mode, the game can be played with selectable, progressively more difficult challenges that the user masters on the road to proficiency.",
	"url": null,
	"owner": "",
	"publication_number": "07174510",
	"publication_date": "2007-02-06",
	"application_number": "10273353",
	"application_date": "2002-10-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Medical information system having interactive messaging interface",
	"summary": "",
	"abstract": "A system for providing medical information to a patient is provided. The system includes a medical information server, including a software engine, coupled to a memory location. The memory location stores a plurality of voice mailboxes. A voice mailbox includes at least two segments. A first segment for test results, or an upload-source note, and a second segment for account owner information, or a chart note. An upload-source, such as a testing facility or laboratory, is coupled to the server and provides test results to the mailbox. An interactive voice response (IVR) software interface is also coupled to the engine. The IVR provides the medical information in the mailbox responsive to a user input. The system may also include a patient database. Further, the engine generates alerts to the account owner based upon particular events. The system is also configured to prevent conflicting accesses by users. The system is convenient to use due to reporting features and an identifier function used to locate particular voice mailboxes.",
	"url": null,
	"owner": "",
	"publication_number": "07209550",
	"publication_date": "2007-04-24",
	"application_number": "09717915",
	"application_date": "2000-11-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Memory and force output management for a force feedback system",
	"summary": "",
	"abstract": "Methods and apparatus for efficient management of memory and force output in a force feedback system including a host computer and a force feedback device. A representation of device memory is maintained on the host computer to allow the host computer knowledge and control over storage and force effects in the device memory. A host cache for force effects is provided to allow almost unlimited numbers of force effects to be created for the device, where any force effects not able to fit in device memory are stored in the host cache. Other aspects of the invention include a playlist stored on the device of force effects being played by the device, and management of force output using relatively small, discrete time intervals.",
	"url": null,
	"owner": "",
	"publication_number": "07299321",
	"publication_date": "2007-11-20",
	"application_number": "10713595",
	"application_date": "2003-11-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for executing applications on a distributed computer system",
	"summary": "",
	"abstract": "The present invention provides a flexible and extensible execution control system for distributed computer systems including multiple nodes interconnected through a network. Distributed computer systems that include an execution control system consistent with the present invention can be used for more types of applications than systems using prior art. The applications running on a distributed computer system that includes an execution control system consistent with the present invention can achieve better protection from hardware and software failures than systems using prior art systems and methods.",
	"url": null,
	"owner": "",
	"publication_number": "07302609",
	"publication_date": "2007-11-27",
	"application_number": "10800307",
	"application_date": "2004-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for protecting software",
	"summary": "",
	"abstract": "Secure environments can be used to protect software application programs from piracy and to enforce licensing and operating conditions. To achieve these protections, a component should be selected and executed inside the secure environment. For maximum protection, the selected component should be one which performs a required or desirable part of the functionality of the application and not be easily emulated by patches as may be employed by software pirates.",
	"url": null,
	"owner": "",
	"publication_number": "07254719",
	"publication_date": "2007-08-07",
	"application_number": "10636039",
	"application_date": "2003-08-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, product, and apparatus for resource identifier registration and aftermarket services",
	"summary": "",
	"abstract": "When a network resource request having a domain name is received, it is determined whether the network resource can be accessed from the domain name. Rather than, or in addition to, displaying an error message or processing a search request in response to determining that a network resource can not be accessed, the domain name can instead be redirected to a registration service where the domain name can be automatically used to perform a registration request and determine domain name availability. When the domain name is not available for registration, domain name registrant information is provided. However, when the domain name is determined available, a registration form is provided. For example, such a domain name may be redirected from the autosearch feature of a web browser to a service, which determines that the domain name is available for registration enabling a potential registrant to register the available domain name by selecting a domain name registration provider from a list of domain name registration providers.",
	"url": null,
	"owner": "",
	"publication_number": "07188138",
	"publication_date": "2007-03-06",
	"application_number": "10604626",
	"application_date": "2003-08-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for caching a location index in a data storage system",
	"summary": "",
	"abstract": "One embodiment is a system for locating content on a storage system, in which the storage system provides a location hint to the host of where the data is physically stored, which the host can resubmit with future access requests. In another embodiment, an index that maps content addresses to physical storage locations is cached on the storage system. In yet another embodiment, intrinsic locations are used to select a storage location for newly written data based on an address of the data. In a further embodiment, units of data that are stored at approximately the same time having location index entries that are proximate in the index.",
	"url": null,
	"owner": "",
	"publication_number": "07159070",
	"publication_date": "2007-01-02",
	"application_number": "10731796",
	"application_date": "2003-12-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Model train control system",
	"summary": "",
	"abstract": "A system which operates a digitally controlled model railroad transmitting a first command from a first client program to a resident external controlling interface through a first communications transport. A second command is transmitted from a second client program to the resident external controlling interface through a second communications transport. The first command and the second command are received by the resident external controlling interface which queues the first and second commands. The resident external controlling interface sends third and fourth commands representative of the first and second commands, respectively, to a digital command station for execution on the digitally controlled model railroad.",
	"url": null,
	"owner": "",
	"publication_number": "07177733",
	"publication_date": "2007-02-13",
	"application_number": "10989815",
	"application_date": "2004-11-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Model train control system",
	"summary": "",
	"abstract": "A system which operates a digitally controlled model railroad transmitting a first command from a first client program to a resident external controlling interface through a first communications transport. A second command is transmitted from a second client program to the resident external controlling interface through a second communications transport. The first command and the second command are received by the resident external controlling interface which queues the first and second commands. The resident external controlling interface sends third and fourth commands representative of the first and second commands, respectively, to a digital command station for execution on the digitally controlled model railroad.",
	"url": null,
	"owner": "",
	"publication_number": "07209812",
	"publication_date": "2007-04-24",
	"application_number": "11375794",
	"application_date": "2006-03-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Model train control system",
	"summary": "",
	"abstract": "A system which operates a digitally controlled model railroad transmitting a first command from a first client program to a resident external controlling interface through a first communications transport. A second command is transmitted from a second client program to the resident external controlling interface through a second communications transport. The first command and the second command are received by the resident external controlling interface which queues the first and second commands. The resident external controlling interface sends third and fourth commands representative of the first and second commands, respectively, to a digital command station for execution on the digitally controlled model railroad.",
	"url": null,
	"owner": "",
	"publication_number": "07216836",
	"publication_date": "2007-05-15",
	"application_number": "10976227",
	"application_date": "2004-10-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Personal information security and exchange tool",
	"summary": "",
	"abstract": "Utilization of the E-Metro Community and Personal Information Agents assure an effective and comprehensive agent-rule based command and control of informational assets in a networked computer environment. The concerns of informational privacy and informational self-determination are addressed squarely by the invention affording persons and entities a trusted means to author, secure, search, process, and exchange personal and/or confidential information in a networked computer environment. The formation of trusted electronic communities wherein members command and control their digital persona, exchanging or brokering for value the trusted utility of their informational assets is made possible by the invention. The present invention provides for the trusted utilization of personal data in electronic markets, providing both communities and individuals aggregate and individual rule-based control of the processing of their personal data.",
	"url": null,
	"owner": "",
	"publication_number": "07289971",
	"publication_date": "2007-10-30",
	"application_number": "09354287",
	"application_date": "1999-07-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Process of and system for seamlessly embedding executable program code into media file formats such as MP3 and the like for execution by digital media player and viewing systems",
	"summary": "",
	"abstract": "A novel process and system for flexibly adding supplemental digital program content such as, for example, transactional advertising content, games, polls, contests, interactive music videos, and e-commerce content generally and the like, into pre-prepared digital media files, such as an MP3 audio file or the like, for playback by digital playback apparatus, wherein the pre--prepared media file is modified by embedding therein executable code representing such supplemental program content, and enabling the playback apparatus to decode and execute the presentation of the supplemental program material as an addition to the playback of the pre-prepared media file content.",
	"url": null,
	"owner": "",
	"publication_number": "07188186",
	"publication_date": "2007-03-06",
	"application_number": "09389942",
	"application_date": "1999-09-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Programming toolkit for use in the development of knowledge enhanced electronic logic programs",
	"summary": "",
	"abstract": "A graphical programming interface for use in developing computer programs providing computational decision-making capabilities. The interface uses a structure of graphically displayed positions, arguments and linkages to enable the development of computational decision making programs. The positions are primarily characterized by position values that may represent outputs although they may have a variety of other function features such as thresholds. The arguments are characterized by argument values that may represent inputs. The arguments are associated with particular positions and the values of the arguments associated with a given position are combined to determine the value of that position. The linkages extend between different positions and arguments and define different types of functional relationships between them. Programs are developed through the creation and manipulation of the graphical items of the interface using visually oriented processes such as drop down windows and drag and drop techniques.",
	"url": null,
	"owner": "",
	"publication_number": "07159208",
	"publication_date": "2007-01-02",
	"application_number": "10289477",
	"application_date": "2002-11-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Proximity triggered job scheduling system and method",
	"summary": "",
	"abstract": "A system and method combine mobile computing device (), wireless communication interface (), and an application program () to provide the mobile computing device user to schedule and execute jobs based on the proximity to peer wireless communication nodes or access points. The scheduler schedules jobs and chooses a proximity relation of presences of one or more identifiers of physical layer or MAC sublayer or data link layer of wireless communication protocol. Execute the job in response to the evaluation result of the proximity relation.",
	"url": null,
	"owner": "",
	"publication_number": "07233792",
	"publication_date": "2007-06-19",
	"application_number": "10507726",
	"application_date": "2003-03-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Reliable datagram transport service",
	"summary": "",
	"abstract": "A distributed computer system includes a source endnode including a source process which produces message data and a send work queue having work queue elements that describe the message data for sending. A destination endnode includes a destination process and a receive work queue having work queue elements that describe where to place incoming message data. A communication fabric provides communication between the source endnode and the destination endnode. An end-to-end context is provided at the source endnode and the destination endnode storing state information to ensure the reception and sequencing of message data sent from the source endnode to the destination endnode permitting reliable datagram service between the source endnode and the destination endnode.",
	"url": null,
	"owner": "",
	"publication_number": "07171484",
	"publication_date": "2007-01-30",
	"application_number": "09980759",
	"application_date": "2000-05-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Security system including a method and system for acquiring GPS satellite position",
	"summary": "",
	"abstract": "A security system and a method and apparatus utilize a transmitter and a receiver with a GPS sub-system in a GPS appliance. Ephemeris and almanac data are updated at preprogrammed times within coordinated windows of opportunity. Each GPS receiver is preferably kept in an inactive state to reduce power consumption except at the preprogrammed times and uses time-compressed formats of GPS ephemeris data. An additional receiver makes possible the use of a coordinated window of opportunity whereby the receiver is set to an active state to receive complete ephemeris data sets when transmitted. The security system monitors conditions. Security sensors may respond to a condition to u201cawakenu201d a transmitter that may then transmit a report providing the location of the appliance. The report may include manifest information such as the identity of a container to which the GPS system is affixed, the sensor reporting the breach and its location.",
	"url": null,
	"owner": "",
	"publication_number": "07196661",
	"publication_date": "2007-03-27",
	"application_number": "10867320",
	"application_date": "2004-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Session bean implementation of a system, method and software for creating or maintaining distributed transparent persistence of complex data objects and their data relationships",
	"summary": "",
	"abstract": "The invention provides systems, methods and software for creating or maintaining distributed transparent persistence of complex data objects and associated data stores. In one aspect, the invention also relates to an application programming object capable of creating or maintaining distributed transparent persistence of data objects or data object graphs without the necessity of inserting any byte codes or modification of the object graph. Virtually any java object or object graph can be transparently persisted. Further, copies of a data graph or of a portion of the data graph can be automatically reconciled and changes persisted without any persistence coding in the object model.",
	"url": null,
	"owner": "",
	"publication_number": "07167862",
	"publication_date": "2007-01-23",
	"application_number": "10386011",
	"application_date": "2003-03-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and device for integrating IP and analog telephone systems",
	"summary": "",
	"abstract": "A system and a call forwarding manager device for providing Internet telephony to a subscriber's premises via the subscriber's Internet connection, facilitated by the subscriber's analog telephone connection. Incoming analog telephone calls are received by the call forwarding manager connected to the subscriber's analog telephone line, which responds by generating a request for service from a voice gateway, which may be remotely located. The voice gateway then generates an Internet telephone connection from the voice gateway to an Internet protocol telephone owned by the subscriber, and then connects the analog telephone call via the voice gateway to the Internet protocol telephone via the subscriber's Internet connection.",
	"url": null,
	"owner": "",
	"publication_number": "07203186",
	"publication_date": "2007-04-10",
	"application_number": "09723099",
	"application_date": "2000-11-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for communicating information relating to a network resource",
	"summary": "",
	"abstract": "A system and method for communicating information relating to a network resource. A computer for displaying supplemental information about another document on a display screen for a user. Guiding individuals to places of interest on a network where information is stored, and/or displaying or otherwise presenting useful information to the user.",
	"url": null,
	"owner": "",
	"publication_number": "07257604",
	"publication_date": "2007-08-14",
	"application_number": "10634318",
	"application_date": "2003-08-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for fast, reliable byte stream transport",
	"summary": "",
	"abstract": "Reliable byte stream transfer protocols play an important role in modern networks. The present invention implements such a protocol using credits for flow control and negative acknowledgements for reliable delivery. The credit mechanism uses credit transfer in installments and is immune to the losses or corruptions of intermediate credit installments. Negative acknowledgements are used to solicit the retransmission of data stream component. The present invention provides full compatibility at the programming interface with reliable byte transfer protocols, such as TCP, and also allows full interoperability among hosts running the aforesaid standard protocol or the protocol of the present invention.",
	"url": null,
	"owner": "",
	"publication_number": "07305486",
	"publication_date": "2007-12-04",
	"application_number": "09894585",
	"application_date": "2001-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for managing collections of data on a network",
	"summary": "",
	"abstract": "The present invention enables the creation, management, retrieval, distribution and massively large collections of information that can be shared across a distributed network without building absolute references or even pre-existing knowledge of the data and data structures being stored in such an environment. The system includes the following components: (1) a u2018flatu2019 data model wherein arbitrarily complex structures can be instantiated within a single memory allocation (including both the aggregation arrangements and the data itself, as well as any cross references between them via u2018relativeu2019 references); (2) a run-time type system capable of defining and accessing binary strongly-typed data; (3) a set of u2018containersu2019 within which information encoded according to the system can be physically stored and preferably include a memory resident form, a file-based form, and a server-based form; (4) a client-server environment that is tied to the types system and capable of interpreting and executing all necessary collection manipulations remotely; (5) a basic aggregation structure providing as a minimum a u2018parentu2019, u2018nextChildu2019, u2018previousChildu2019, u2018firstChildu2019, and u2018lastChildu2019 links or equivalents; and (6) a data attachment structure (whose size may vary) to which strongly typed data can be attached and which is associated in some manner with (and possibly identical to) a containing aggregation node in the collection. Additional extensions and modifications to the system are also specified herein.",
	"url": null,
	"owner": "",
	"publication_number": "07308449",
	"publication_date": "2007-12-11",
	"application_number": "10357304",
	"application_date": "2003-02-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for parsing data",
	"summary": "",
	"abstract": "A dynamically extensible approach to parsing textual input consisting of a predictive parser and associated predictive parser generator is provided. The combination, together with a plug-in/resolver architecture, provides the ability to handle a set of languages that is vastly larger than that conventionally handled by predictive parsing techniques. The generator accepts extended BNF language specifications containing embedded reverse polish plug-in call specifications giving the plug-in number to be called as well as an arbitrary textual parameter to be passed to the plug-in. The parser supports the ability to register a u2018resolveru2019 function as well as one or more custom reverse-polish plug-in handlers which are passed the textual parameter(s) specified in the extended BNF as well as having full control over the parsing and evaluation stacks. The u2018resolveru2019 is with a u2018no actionu2019 parameter when the parser first encounters a token in the input stream and may modify the token as necessary. The resolver is also called when the parser must evaluate or assigu an entry on the evaluation stack at which time it can implement additional behaviors depending on the language or environment. Finally the u2018resolveru2019 is called when the parse terminates. The u2018resolveru2019 is the primary mechanism whereby more complex languages can be handled and is also a key part of connecting to external systems or storage when the parser is used in an interpreted context. The reverse polish plug-in functions are provided with an API to allow full control over and access to the parser stacks and can rapidly be configured to implement almost any language constructs.",
	"url": null,
	"owner": "",
	"publication_number": "07210130",
	"publication_date": "2007-04-24",
	"application_number": "10357324",
	"application_date": "2003-02-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for the management of distributed personalized information",
	"summary": "",
	"abstract": "The present invention comprises a system and method useful for organization of information adapted for use in a computer system. Information stored on a local or remote data store may be organized and, hence, retrieved, by providing access to raw data to a computer system user, providing a user interface on the computer being used by the computer system user, allowing a description of the raw data to be captured in a user searchable database accessible to the computer system user, and allowing the computer system user to use the user interface to selectively retrieve raw data using the description captured in the database. The raw data can be stored locally to the computer being used by the computer system user, remotely, e.g. via the Internet, or both.",
	"url": null,
	"owner": "",
	"publication_number": "07209922",
	"publication_date": "2007-04-24",
	"application_number": "11298963",
	"application_date": "2005-12-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methodology for developing, integrating and monitoring computer applications and programs",
	"summary": "",
	"abstract": "The present invention provides a system, method and computer program product for developing distributed applications, integrating component programs, integrating enterprise applications and managing change. The invention provides for an infrastructure where component programs that are the computational logic of the distributed application are installed over a network of computing units having controller programs running on each of these computing units. The invention provides for separating the concerns of computation, installation, execution and monitoring of the distributed application in terms of time, space and people involved. This is accomplished as the component programs simply perform the computation task and the communication between the component programs and their monitoring is handled by the controller programs.",
	"url": null,
	"owner": "",
	"publication_number": "07174370",
	"publication_date": "2007-02-06",
	"application_number": "10029735",
	"application_date": "2001-12-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and article of manufacture for an incremental explanatory object in a learning application assembly framework",
	"summary": "",
	"abstract": "A system, method and article of manufacture are provided for generating an incremental explanatory object in an educational application program, First, at least one interface is provided including a plurality of fields. Educational textual information is then entered via the interface for entry into the fields. During operation, the user is permitted to select an incremental explanatory icon on the interface. Upon the selection of the incremental explanatory icon, a plurality of sequential fields are shown. Thereafter, the user is prompted to enter educational textual information for entry into the sequential fields. The received textual information is subsequently compiled in an executable educational application program.",
	"url": null,
	"owner": "",
	"publication_number": "07176949",
	"publication_date": "2007-02-13",
	"application_number": "09441930",
	"application_date": "1999-11-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transaction management system",
	"summary": "",
	"abstract": "The systems and methods described herein relate to a system for documenting transactions. A filter is provided that captures content associated with transactions. The filter may be configured to start and stop the capture at predetermined times, and may be further configured to specify what content is to be captured during a transaction. The system may store any documents or data associated with a transaction, including dynamic content and user selections and inputs. A document repository may be provided for storing unstructured data representing data, text, forms, and so forth presented to a party during a transaction. A viewer may be provided for displaying data stored in the document repository.",
	"url": null,
	"owner": "",
	"publication_number": "07287071",
	"publication_date": "2007-10-23",
	"application_number": "09782477",
	"application_date": "2001-02-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Translation management system",
	"summary": "",
	"abstract": "A translation management system in a computer environment. A preferred embodiment of the invention automatically detects when a document, data stream, or non-text file in the master language has been updated and notifies the user which corresponding documents, data streams, or non-text files in the other languages require translation which are then staged and dynamically routed and sequenced to individual translation resources where the actual translation is performed. Management status, reporting, scheduling, and accounting information is sent to the user as the translation process ensues. The user is notified of the completion of translation and the invention coordinates the delivery of the translated documents, data streams, or non-text files back to the user's site for installation and optional review. The invention makes a variety of translation resources instantly available to the user which include both automated translation tools as well as human translators. The translation resources are connected to the invention using a flexible architecture that can be deployed on intranets as well as the Internet.",
	"url": null,
	"owner": "",
	"publication_number": "07207005",
	"publication_date": "2007-04-17",
	"application_number": "10313518",
	"application_date": "2002-12-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Virtual exercise system and method",
	"summary": "",
	"abstract": "A virtual racecourse is mapped by uniting digital pictures with GPS and inclinometer data, stored in a recorded course file, presented in distance increments of the racecourse, and accessed for individual and group competition over the internet.",
	"url": null,
	"owner": "",
	"publication_number": "07217224",
	"publication_date": "2007-05-15",
	"application_number": "10918773",
	"application_date": "2004-08-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Voice controlled business scheduling system and method",
	"summary": "",
	"abstract": "A fully automated, voice controlled business appointment/reservation system is provided. The system has a natural language voice user interface that emulates a live office administrator for appointment/reservation bookkeeping. It includes an efficient availability searching mechanism which enables a telephone user to quickly search and reserve available time slot based on his preference. Other described novel features and implementation improvements include method and system for voice controlled appointment/reservation cancellation, method and system for voice controlled appointment/reservation waiting list, method and system for new user service sign-up and account creation, method and system enabling sequential selective dialing of a telephone user list by voice command, and method and system for scheduling data administration by voice commands.",
	"url": null,
	"owner": "",
	"publication_number": "07200210",
	"publication_date": "2007-04-03",
	"application_number": "10443363",
	"application_date": "2003-05-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Wireless network computing",
	"summary": "",
	"abstract": "A method, apparatus and article of manufacture are provided for obtaining and displaying Internet content using a remote secondary display and a primary handheld computing device. The primary device includes a cellular or satellite modem to connect to the Internet and wireless data transport system to communicate with the secondary device. The primary device retrieves network data from the Internet and transmits it to the secondary device for display. The secondary device includes a graphical user interface which may be controlled from the primary device.",
	"url": null,
	"owner": "",
	"publication_number": "07292588",
	"publication_date": "2007-11-06",
	"application_number": "10135445",
	"application_date": "2002-05-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Workflow management software overview",
	"summary": "",
	"abstract": "A workflow management system and method for managing an operation on a population of entities, comprises the steps of storing a set of events expected to occur during the operation in a workflow rules table () and storing a set of dispositions in the same rules table (), wherein each of said dispositions represents a status corresponding to an entity. The method also includes the step of correlating by a dispositioner () each of said events with at least one disposition and determining disposition of each of said entities in response to occurrence of one of said expected events. In accordance with another embodiment of the invention, the method further comprises the step of setting at least one of the dispositions as a pause indicating that an entity is in a waiting status. The method also comprises the step of setting at least one of said dispositions as a task indicating that an entity requires a work to be performed. The values corresponding to most recent event and most recent dispositions for each one of said entities is stored in an event disposition storage unit ().",
	"url": null,
	"owner": "",
	"publication_number": "07275039",
	"publication_date": "2007-09-25",
	"application_number": "10381662",
	"application_date": "2001-10-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for sending, receiving and managing messaging data",
	"summary": "",
	"abstract": "A system and method of sending, receiving and managing messaging data through a shell interface is provided. The system includes a plurality of communication services, at least one messaging client and a host server. The plurality of communication services provides fax, voicemail and/or pager messaging services. The host server provides an interface between the messaging client and the plurality of communication services. The messaging client has a shell interface. A messaging component is installed into the shell interface. At least one messaging entry is displayed through the shell interface. The displayed messaging entry identifies received faxes, voicemails and/or pager messages. One of the received faxes, voicemails and pager messages is selected through the shell interface, and an appropriate communication service is invoked for accessing the selected message.",
	"url": null,
	"owner": "2Point Communications, Inc.",
	"publication_number": "07185058",
	"publication_date": "2007-02-27",
	"application_number": "09944699",
	"application_date": "2001-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Centralized management of replacement vehicle labels",
	"summary": "",
	"abstract": "A central labeling data (CLD) management system provides centralized management, assembly, and distribution of labeling data for use in generating replacement labels for damaged vehicles. For example, the CLD management system includes a database that stores label data for a plurality of vehicles produced by a plurality of different manufacturers. The CLD management system presents an interface to receive an electronic communication from a client computing device associated with a repair shop. The electronic communication includes a request for label data associated with an original vehicle label. The CLD management system retrieves the requested label data from the database and communicates the label data to an output device for printing a new vehicle label for use by the repair shop.",
	"url": null,
	"owner": "3M Innovative Properties Company",
	"publication_number": "07293706",
	"publication_date": "2007-11-13",
	"application_number": "11126539",
	"application_date": "2005-05-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for distributing, integrating, and hosting a software platform",
	"summary": "",
	"abstract": "Various methods for distributing, integrating, and hosting a software platform that may be used to extend an enterprise network to mobile devices are provided. A particular embodiment of the method includes distributing a software platform to a first enterprise and distributing the software platform to a second enterprise. The software platform is for use in connection with an enterprise computing system having a plurality of back-end software applications. The software platform includes a data modeling program allowing creation of a data model associated with at least one of the plurality of back-end applications. The software platform further includes a deployment feature allowing deployment of at least a portion of the data model to a plurality of mobile computing devices.",
	"url": null,
	"owner": "@Hand Corporation",
	"publication_number": "07313782",
	"publication_date": "2007-12-25",
	"application_number": "09848952",
	"application_date": "2001-05-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for detecting and recognizing an object based on 3D image data",
	"summary": "",
	"abstract": "Methods and systems are described herein for high-speed observation and recognition of an object which is within or passes through a designated area using 3D image data and tomography, stereo-photogrammetry, range finding and/or structured illumination. Such a security system may comprise multiple pairs of 3D sensors surrounding the designated area such as a portal or doorway. Alternatively, it may comprise a 3D sensor which is capable of acquiring 3D image data of an object that is situated in front of it. Using at least one 3D sensor and a 3D data collection technique such as structured illumination and/or stereo-photogrammetry, 3D image data of the object is acquired. 3D image data representing the object's surface may be determined based on the acquired data and may be compared to data representing known objects to identify the object. Methods for fast processing of 3D data and recognition of objects are also described.",
	"url": null,
	"owner": "A4Vision",
	"publication_number": "07174033",
	"publication_date": "2007-02-06",
	"application_number": "10405412",
	"application_date": "2003-04-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for detecting and recognizing objects in a controlled wide area",
	"summary": "",
	"abstract": "Methods and systems are described herein for high-speed observation and recognition of objects or persons within a controlled area using 3D image data and tomography, stereo-photogrammetry, range finding and/or structured illumination. A wide area security system may comprise multiple pairs of 3D sensors surrounding a controlled area. Using at least two pairs of 3D sensors and a first 3D data collection technique such as tomography, a zone of interest within the controlled area is detected. Using at least one pair of 3D sensors and a second 3D data collection technique such as structured illumination, more 3D image data related to an object of interest is collected. The 3D image data may be compared to data representing known objects and used to identify an object of interest. Methods for fast processing of 3D data and recognition of objects of interest are also described.",
	"url": null,
	"owner": "A4Vision",
	"publication_number": "07257236",
	"publication_date": "2007-08-14",
	"application_number": "10404407",
	"application_date": "2003-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Conducting activities in a collaborative work tool architecture",
	"summary": "",
	"abstract": "The present disclosure provides for conducting activities between users in a collaborative work tool architecture. A client user interface including at least one activity data field is afforded. Then, a selection of a particular activity data field from a user is received. Additional information on the selected activity field is then presented using the client user interface. The user is then allowed to input meeting data concerning the selected activity data field. The received meeting data is stored on a server via a network. Finally, a plurality of participant users are allowed access to the stored meeting data via the network.",
	"url": null,
	"owner": "Accenture ANS",
	"publication_number": "07171448",
	"publication_date": "2007-01-30",
	"application_number": "09551037",
	"application_date": "2000-04-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer enabled training of a user to validate assumptions",
	"summary": "",
	"abstract": "A system, method and article of manufacture are disclosed which implement a training session for training a user to validate assumptions. First, a plurality of stimuli are presented to a user in the context of a simulation. The user is then prompted to enter responses to the stimuli which are subsequently recorded The user is then allowed to enter assumptions that form a basis of the responses. Next, the user is prompted to enter information on how to validate the assumptions which is subsequently received. Feedback is then outputted based on the stimuli and responses. Such feedback relates to appropriate assumptions and information on how to validate the appropriate assumptions. As an option, the feedback may be further based on a number of assumptions entered.",
	"url": null,
	"owner": "Accenture Global Services GmbH",
	"publication_number": "07226292",
	"publication_date": "2007-06-05",
	"application_number": "11258746",
	"application_date": "2005-10-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mobile provisioning tool system",
	"summary": "",
	"abstract": "A mobile provisioning tool system including a software provisioning tool application. The mobile provisioning tool system includes mobile devices capable of conducting wireless communication with wireless access points. A carrier network is connected with the wireless access points and a customer network that includes at least one business application. A provisioning tool application is located on a provisioning server. The provisioning tool application includes a CRM Rep component and an IT Admin component. A software provisioning tool application allows the provisioning workstation to automatically install mobile business services and configure network configuration settings on the mobile device.",
	"url": null,
	"owner": "Accenture Global Services GmbH",
	"publication_number": "07239877",
	"publication_date": "2007-07-03",
	"application_number": "10680593",
	"application_date": "2003-10-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "XML-based multi-format business services design pattern",
	"summary": "",
	"abstract": "A design pattern for a software architecture includes a business services layer comprising ApiService class, BusinessService class, Message class and Field class. ApiService class accepts a request that includes request parameters and utilizes corresponding instances of Message class and Field class to translate the request to an input message. The instances of Message and Field class contain the request parameters in self-describing form, namely, field names and associated values. The input message is forwarded to the appropriate subclass of BusinessService class by ApiService class. The subclass of BusinessService class uses the input message to retrieve data and generate an output message containing the data. The output message is generated in self-describing form utilizing Message class and Field class. ApiService class translates the output message to a presentation format identified by the request.",
	"url": null,
	"owner": "Accenture GmbH",
	"publication_number": "07296226",
	"publication_date": "2007-11-13",
	"application_number": "09981453",
	"application_date": "2001-10-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Customizing an electronic interface to the government",
	"summary": "",
	"abstract": "A system, method and article of manufacture are provided for customizing a graphical user interface to a government system. A classification is determined of a user accessing a graphical user interface to a government system utilizing a network. Based on the classification, content available for display to the user is limited. Regional content is selected for display on the graphical user interface based on the classification of the user. The user is then allowed to customize a portion of the content available for display.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "07194426",
	"publication_date": "2007-03-20",
	"application_number": "09540095",
	"application_date": "2000-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic menu document creator in a virtual financial environment",
	"summary": "",
	"abstract": "The disclosure provides for creating a finalized document relating to a transaction. A buyer selects documents associated with a proposed transaction and indicates trade terms of an agreement relating to the documents selected. The trade terms are presented to a seller on an electronic form via an electronic document platform. The electronic form includes a combined purchase order proforma invoice, a transportation document, and a shipping document. The seller can amend the trade terms on the form, and each amendment creates a new version of the form. Negotiations of the trade terms between the buyer and the seller are conducted electronically and the negotiated fonn detailing the negotiation of the trade terms is generated and displayed electronically, also. A compliance check is performed and is triggered in response to a digital signature of the form. Payment is initiated to the seller after a verification of credit of the buyer.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "07167844",
	"publication_date": "2007-01-23",
	"application_number": "09470042",
	"application_date": "1999-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Financial manager user interface as filed",
	"summary": "",
	"abstract": "The present invention provides for a user interface of changeable images of selected goals from a plurality of goals, each image changing in appearance based upon preferences selected for each selected goal. First, a plurality of images are displayed in a frame. Each of the images represent a goal of a user. In operation, the user is permitted to select from the images in the frame. Further, a user is permitted to adjust preferences related to the goal represented by the selected image in the frame. The appearance of one or more of images in the frame is then altered based on the adjusted preferences of the goal represented by the selected image.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "07231608",
	"publication_date": "2007-06-12",
	"application_number": "09520580",
	"application_date": "2000-03-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information portal in a contract manufacturing framework",
	"summary": "",
	"abstract": "The present disclosure provides for affording an information portal in a contract manufacturing framework. First, a database including a plurality of service provider data structures is provided, wherein each service provider data structure includes a description of a particular service provider, and wherein the database further includes a plurality of links to information. Then, a particular service provider data structure is identified based on request data from a user. A particular link is identified based on the request data. The user is then sent the identified service provider data structure and the identified link. Finally, the user is allowed to obtain additional information utilizing the identified link.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "07277865",
	"publication_date": "2007-10-02",
	"application_number": "09550583",
	"application_date": "2000-04-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network-based tax framework database",
	"summary": "",
	"abstract": "The present disclosure provides for affording a network-based tax service database interface. First, tax-related forms are first retrieved in a database. Next, the retrieved tax-related forms are formatted, and the formatted tax-related forms are sent to a governmental entity. Such formatting is based on rules associated with the governmental entity.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "07234103",
	"publication_date": "2007-06-19",
	"application_number": "09559204",
	"application_date": "2000-04-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for transaction services patterns in a netcentric environment",
	"summary": "",
	"abstract": "The present disclosure provides for implementing transaction services patterns. Logical requests are batched for reducing network traffic. A batched request is allowed to indicate that it depends on the response to another request. A single message is sent to all objects in a logical unit of work. Requests that are being unbatched from a batched message are sorted. Independent copies of business data are assigned to concurrent logical units of work for helping prevent the logical units of work from interfering with each other.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "07289964",
	"publication_date": "2007-10-30",
	"application_number": "09387654",
	"application_date": "1999-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Goal based educational system with support for dynamic tailored feedback",
	"summary": "",
	"abstract": "A system is disclosed that provides a goal based learning system utilizing a rule based expert training system to provide a cognitive educational experience. The system provides the user with a simulated environment that presents a business opportunity to understand and solve optimally. Mistakes are noted and remedial educational material presented dynamically to build the necessary skills that a user requires for success in the business endeavor. The system utilizes an artificial intelligence engine driving individualized and dynamic feedback with synchronized video and graphics used to simulate real-world environment and interactions. Multiple u201ccorrectu201d answers are integrated into the learning system to allow individualized learning experiences in which navigation through the system is at a pace controlled by the learner. A robust business model provides support for realistic activities and allows a student to experience real world consequences for their actions and decisions and entails realtime decision-making and synthesis of the educational material optimized for the student's unique personality.",
	"url": null,
	"owner": "Accenture, LLP",
	"publication_number": "07156665",
	"publication_date": "2007-01-02",
	"application_number": "09868686",
	"application_date": "1999-02-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web-based architecture sales tool",
	"summary": "",
	"abstract": "A system, method and article of manufacture are provided for selling products and services. First, an existing network framework is determined after which a plan is defined. Such plan includes improvements to the existing network framework. A pictorial representation is then presented of the existing network framework and a plurality of components of such existing network framework. The components of the existing network framework are then indicia coded in order to sell the products and services relating to the components of the existing network framework. It should be noted that such products and services are necessary to implement the improvements.",
	"url": null,
	"owner": "Accenture, LLP",
	"publication_number": "07165041",
	"publication_date": "2007-01-16",
	"application_number": "09322073",
	"application_date": "1999-05-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Wireless communication device with markup language based man-machine interface",
	"summary": "",
	"abstract": "A wireless communications device with a markup language based man-machine interface provides a user interface for telecommunications functionality, including dialing telephone numbers, answering telephone calls, creating messages, sending messages, receiving messages, establishing configuration settings defined in markup language such as HTML, and accessed through a browser program executed by the wireless communication device. This feature enables direct access to Internet and World Wide Web content, such as Web pages, to be directly integrated with telecommunication functions of the device, and allows Web content to be seamlessly integrated with other data types, since all data presented to the user via the user interface is presented via markup language-based pages. The browser processes an extended form of HTML that provides new tags and attributes that enhance the navigational, logical, and display capabilities of conventional HTML, and particularly adapt HTML to be displayed and used on wireless communication devices with small screen displays.",
	"url": null,
	"owner": "Access Co., Ltd",
	"publication_number": "07228340",
	"publication_date": "2007-06-05",
	"application_number": "10688514",
	"application_date": "2003-10-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Security system and method for PnP device coupled to network client",
	"summary": "",
	"abstract": "A security system and method for a plug-and-play (PnP). The security system includes a server, a network system and a client. The server distributes a monitor program on the client via a remote control agent in advance, and transmits a lock or unlock message to the client through the network system. The client receives the message from the server, and locks or unlocks the PnP device by the monitor program via a disk I/O API.",
	"url": null,
	"owner": "Acer Inc.",
	"publication_number": "07281264",
	"publication_date": "2007-10-09",
	"application_number": "10429124",
	"application_date": "2003-05-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mobile computing and communication",
	"summary": "",
	"abstract": "An application development platform enables applications to be created easily for, e.g., mobile devices that have short-range wireless communication capability. The development platform exposes a carefully chosen core set of services through an API. Each of the applications can broadcast its services to local and remote devices. Message delivery between devices is guaranteed even for messages that cannot be delivered directly by local short-range wireless transmission. Message delivery through other channels, including the Internet, can occur transparently to the user. Each device can be associated with an u201cowneru201d, which can be a person or a entity. Services can be customized to the owner based on stored information that maps owners to devices. Information associated with each of the owners of devices can be stored centrally and used in connection with providing the services at each of the mobile devices. Virtual GPS capabilities can be provided for mobile devices that do not have GPS chips.",
	"url": null,
	"owner": "ACK Venture Holdings, LLC",
	"publication_number": "07299007",
	"publication_date": "2007-11-20",
	"application_number": "09775194",
	"application_date": "2001-02-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Ontology-driven information system",
	"summary": "",
	"abstract": "An ontology-driven information system includes a plurality of models, each of which expresses an aspect of a business domain using concepts and relationships between concepts. An ontology, which is in communication with each of the plurality of models, provides uniform definitions for the concepts and relationships between concepts used in the plurality of models. A method for executing an interaction flow model includes receiving an event and categorizing the received event. Once the event is categorized, a situation that matches the categorized received event is identified. One or more tasks are then executed for the situation. The execution of the one or more tasks can include either an interpretation of a model or the execution of a method of an object. The information system also includes a user and application interface and a reasoning engine that is in communication with the user and application interface. A knowledge manager is in communication with the user and application interface and is interfaced with the reasoning engine. A distributed information service also is in communication with the reasoning engine, the knowledge manager, and the user and application interface.",
	"url": null,
	"owner": "ACL International Inc.",
	"publication_number": "07200563",
	"publication_date": "2007-04-03",
	"application_number": "09642200",
	"application_date": "2000-08-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for scripting commands and data for use by a personal security device",
	"summary": "",
	"abstract": "System and method for optimizing communications using a communications pipe over a network. This invention provides means to locally execute an APDU script and collect APDU responses locally for batch transfer to a remote server.",
	"url": null,
	"owner": "Activcard",
	"publication_number": "07162631",
	"publication_date": "2007-01-09",
	"application_number": "09985344",
	"application_date": "2001-11-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods for forming an array of MEMS optical elements",
	"summary": "",
	"abstract": "An embodiment of the invention comprises an optical element capable of motion in at least one degree of freedom wherein the motion in at least one degree of freedom is enabled by serpentine hinges configured to enable the optical element to move in at least one degree of freedom. The embodiment further includes driving elements configured to deflect the optical element in said at least one degree of freedom to controllably induce deflection in the optical element and a damping element to reduce magnitude of resonances. Another embodiment includes a MEMS optical apparatus comprising an optical element capable of motion in two degrees of freedom. The two degrees of freedom are enabled by two pairs of serpentine hinges. A first pair of serpentine hinges is configured to enable the optical element to move in one degree of freedom and a second pair of serpentine hinges is configured to enable the optical element to move in a second degree of freedom. The apparatus further includes driving elements configured to deflect the optical element in said two degrees of freedom and a damping element to reduce magnitude of resonances. The invention includes method embodiments for forming arrays of MEMS optical elements including reflector arrays.",
	"url": null,
	"owner": "Active Optical Networks, Inc.",
	"publication_number": "07190854",
	"publication_date": "2007-03-13",
	"application_number": "11176711",
	"application_date": "2005-07-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for creating an adaptive application",
	"summary": "",
	"abstract": "An Adaptive Software Application consists of several types of modules, called Adaptive Units, which are highly parameterized such that they can adapt to varying business requirements by virtue of externally provided parameters. An Adaptive Application is assembled through repeated use of various combinations of different types of Adaptive Units. Large and complex business systems can be rapidly implemented through this approach. An Adaptive Unit includes an interface component that can present information to and accept information from the outside world (such as a web page or a system interface), a processing logic component that can manipulate and evaluate information based on received parameters received (such as comparisons and decisions as in the case of data dependency decisions), and a data persistence logic component that retrieves, adds, updates, and deletes data targeting one or more Occurrence Databases. All three components of an Adaptive Unit are parameter driven. These parameters are not specific to any particular business. One embodiment for providing parameters to these components includes a Definition Database. There may be one or more Occurrence Databases depending on the number of business processes supported by the business application for which the Adaptive Application is being adapted. The Occurrence Database includes generic (also referred to as meta model driven) tables that are not specific to any particular business.",
	"url": null,
	"owner": "Adaptik Corporation",
	"publication_number": "07191188",
	"publication_date": "2007-03-13",
	"application_number": "10835640",
	"application_date": "2004-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Customizable web site access system and method therefore",
	"summary": "",
	"abstract": "A customizable web site access system is comprised of a software program incorporating both a composing portion and a performing portion. The composing portion of the software program is used to create a presentation. The presentation includes a list of URLs for display, a desired sequence of display of the URLs, and a duration of display of the URLs. The performing portion of the software program operates to load and display the presentation to a user of the web in an automatic slide show presentation.",
	"url": null,
	"owner": "Adaptive Avenue Associates, Inc.",
	"publication_number": "07171629",
	"publication_date": "2007-01-30",
	"application_number": "10014929",
	"application_date": "2001-10-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Creating traps with asymmetric widths",
	"summary": "",
	"abstract": "Methods and apparatus, including computer program apparatus, implementing techniques for preparing a region of an electronic document for printing on a printing device having asymmetric misregistration behavior. The techniques include trapping the region asymmetrically to compensate for asymmetric misregistration behavior of a printing device. The region can be an entire page or a portion of a page represented in a page description language or a raster representation. The techniques can include defining an asymmetric transformation; applying the asymmetric transformation to the region to generate a transformed region; processing the transformed region to generate transformed traps; and applying an inverse transformation to the transformed traps to generate traps for the region, the inverse transformation being an inverse of the asymmetric transformation. Defining the asymmetric transformation can be done by obtaining a first trap width magnitude and direction, the first trap width being a minimum trap width for the device; obtaining a second trap width magnitude and direction, the second trap width being a maximum trap width for the device; defining a rotational component of the asymmetric transformation by determining an angle by which a first axis of a device space has to be rotated to be aligned with the first trap width direction; and defining a scaling component of the asymmetric transformation according to a ratio of the first trap width magnitude and the second trap width magnitude.",
	"url": null,
	"owner": "Adobe Systems Incorporated",
	"publication_number": "07187471",
	"publication_date": "2007-03-06",
	"application_number": "09458565",
	"application_date": "1999-12-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for cross-platform form creation and deployment",
	"summary": "",
	"abstract": "The present invention is directed to systems and methods of creating and deploying electronic forms for collecting information from a user using a browser, where the browser may be one of a plurality of browser platforms. Characteristics of forms are entered by a human designer using a form designer by using drag-and-drop operations, and stored in XML template files. The form may be previewed by the designer. When a user on the Internet (or an intranet) requests a form by a browser, the characteristics of the browser are sensed and a form appropriate for the browser is deployed to the browser by a form server. Information is then captured from the user. The form may also be saved or printed.",
	"url": null,
	"owner": "Adobe Systems Incorporated",
	"publication_number": "07313757",
	"publication_date": "2007-12-25",
	"application_number": "10121697",
	"application_date": "2002-04-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for facilitating comunications between an interactive multimedia client and an interactive multimedia communication server",
	"summary": "",
	"abstract": "Representative embodiments are disclosed of a system and method for linearly exposing client-server interaction comprising interpreting a function command representing a first group of sequential action requests to an integrated multimedia communication server (iMCS), sequentially transmitting the first group of sequential action requests from an interactive multimedia runtime (iMR) client to the iMCS, wherein a next sequential action request of the first group is transmitted to the iMCS prior to receiving a response message from the iMCS associated with a previous sequential action request of the first group, queuing response messages received from the iMCS, and handling the queued response messages.",
	"url": null,
	"owner": "Adobe Systems Incorporated",
	"publication_number": "07246356",
	"publication_date": "2007-07-17",
	"application_number": "10353782",
	"application_date": "2003-01-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Shared persistent objects",
	"summary": "",
	"abstract": "A system and method are disclosed for an interactive multimedia file (iMF), running on an interactive multimedia runtime (iMR), to store an object onto a computer, the method comprising creating a local instance of the object, storing the local instance into a memory location on the computer, monitoring changes to one or more data slots of the local instance, assigning a version identifier to the local instance, synchronizing the local instance with a main instance of the object, and interfacing the one or more data slots of the local instance with said iMF during execution.",
	"url": null,
	"owner": "Adobe Systems Incorporated",
	"publication_number": "07287256",
	"publication_date": "2007-10-23",
	"application_number": "10402357",
	"application_date": "2003-03-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Tagging data assets",
	"summary": "",
	"abstract": "Computer-implemented methods, program products and data structures for tagging data assets are disclosed. An interface which can receive location information to identify a storage location identifier for a data asset to be saved is presented to a user. The location information for the data asset to be saved and a selection identifying a concept and a relation between the concept and the data asset to be saved are received from the user through the interface. The asset reference for the data asset to be saved is stored in a tag database and an association is created in the tag database representing the relation between the data asset to be saved and the identified concept.",
	"url": null,
	"owner": "Adobe Systems Incorporated",
	"publication_number": "07287029",
	"publication_date": "2007-10-23",
	"application_number": "10672252",
	"application_date": "2003-09-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enhanced security and manageability using secure storage in a personal computer system",
	"summary": "",
	"abstract": "A method and system for enhanced security and manageability using secure storage. The system may include a crypto-processor and a memory coupled to receive memory transactions through the crypto-processor. The memory transactions are passed to the memory by the crypto-processor. The system may include a first processor, a second processor coupled to the first processor, and a storage device operably coupled to the first processor through the second processor. The second processor is configured to control access to the storage device. The method includes transmitting a request for a memory transaction for a storage location in the storage device and receiving the request for the memory transaction at the crypto-processor. The method also includes determining if the memory transaction is authorized for the storage location, and passing the request for the memory transaction to the storage device if the memory transaction is authorized for the storage location.",
	"url": null,
	"owner": "Advanced Micro Devices, Inc.",
	"publication_number": "07216362",
	"publication_date": "2007-05-08",
	"application_number": "09853395",
	"application_date": "2001-05-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for metrology recipe generation and review and analysis of design, simulation and metrology results",
	"summary": "",
	"abstract": "A method of generating a metrology recipe includes identifying regions of interest within a device layout. A coordinate list, which corresponds to the identified regions of interest, can be provided and used to create a clipped layout, which can be represented by a clipped layout data file. The clipped layout data file and corresponding coordinate list can be provided and converted into a metrology recipe for guiding one or more metrology instruments in testing a processed wafer and/or reticle. The experimental metrology results received in response to the metrology request can be linked to corresponding design data and simulation data and stored in a queriable database system.",
	"url": null,
	"owner": "Advanced Micro Devices, Inc.",
	"publication_number": "07207017",
	"publication_date": "2007-04-17",
	"application_number": "10865047",
	"application_date": "2004-06-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for state-based profiling of multiprocessor systems",
	"summary": "",
	"abstract": "The present application describes a system and method of profiling a computer system based on a profiling state machine. The profiling state machine defines various states in which the system data can be collected for a particular application. The state machine allows system data collection regardless of timing intervals or event counters. When a state is identified for system data collection, the profiler application collects system data for the user. A profiling application driver monitors the state machine and manages the data collection based on the state machine. The profiling application driver controls the profiling configurations thus allowing a correlated data collection for timing intervals and event counter.",
	"url": null,
	"owner": "Advanced Micro Devices, Inc.",
	"publication_number": "07305663",
	"publication_date": "2007-12-04",
	"application_number": "10323987",
	"application_date": "2002-12-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods for monitoring structural health conditions",
	"summary": "",
	"abstract": "Methods and recordable media for monitoring structural health conditions. The present invention provides a method for interrogating a damage of a host structure using a diagnostic network patch (DNP) system having patches. An interrogation module partitions the plurality of patched in subgroups and measures the sensor signals generated and received by actuator and sensor patches, respectively. Then, a process module loads sensor signal data to identify Lamb wave modes, determine the time of arrival of the modes and generate a tomographic image. It also determines distribution of other structural condition indices to generate tomographic images of the host structure. A set of tomographic images can be stacked to generate a hyperspectral tomography cube. A classification module generates codebook based on K-mean/Learning Vector Quantization algorithm and uses a neural-fuzzy-inference system to determine the type of damages of the host structure.",
	"url": null,
	"owner": "Advanced Structure Monitoring, Inc.",
	"publication_number": "07286964",
	"publication_date": "2007-10-23",
	"application_number": "10942714",
	"application_date": "2004-09-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and structure to develop a test program for semiconductor integrated circuits",
	"summary": "",
	"abstract": "A method for developing a test program for a semiconductor test system is disclosed. The method includes describing a test plan file in a test program language (TPL), where the test plan file describes at least one test of the test program, describing a test class file in a system program language (SPL) and a corresponding pre-header file of the test class file in the TPL, where the test class file describes an implementation of the at least one test of the test program, and generating the test program using the test plan file, the test class file, and the pre-header file.",
	"url": null,
	"owner": "Advantest America R&D Center, Inc.",
	"publication_number": "07197417",
	"publication_date": "2007-03-27",
	"application_number": "10918714",
	"application_date": "2004-08-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and structure to develop a test program for semiconductor integrated circuits",
	"summary": "",
	"abstract": "A method for managing a pattern object file in a modular test system is disclosed. The method includes providing a modular test system, where the modular test system comprises a system controller for controlling at least one site controller, and where the at least one site controller controls at least one test module and its corresponding device under test (DUT). The method further includes creating an object file management framework for establishing a standard interface between vendor-supplied pattern compilers and the modular test system, receiving a pattern source file, creating a pattern object metafile based on the pattern source file using the object file management framework, and testing the device under test through the test module using the pattern object metafile.",
	"url": null,
	"owner": "Advantest America R&D Center, Inc.",
	"publication_number": "07209851",
	"publication_date": "2007-04-24",
	"application_number": "10918513",
	"application_date": "2004-08-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for controlling interchangeable components in a modular test system",
	"summary": "",
	"abstract": "A method for integrating test modules in a modular test system is disclosed. The method includes controlling at least one test module and its corresponding device under test (DUT) with a controller, establishing a standard module control interface between a vendor-supplied test module and the modular test system with a module control framework, installing the vendor-supplied test module and a corresponding vendor-supplied control software module, where the vendor-supplied control software module is organized into a plurality of vendor-supplied module control components, configuring the modular test system based on the module control framework and the plurality of vendor-supplied module control components, and accessing the vendor-supplied test module in accordance with the plurality of vendor-supplied module control components using the module control framework.",
	"url": null,
	"owner": "Advantest America R&D Center, Inc.",
	"publication_number": "07184917",
	"publication_date": "2007-02-27",
	"application_number": "10917916",
	"application_date": "2004-08-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for simulating a modular test system",
	"summary": "",
	"abstract": "A method for simulating a modular test system is disclosed. The method includes providing a controller, where the controller controls at least one vendor module and its corresponding device under test (DUT) model, creating a simulation framework for establishing standard interfaces between the at least one vendor module and its corresponding DUT model, configuring the simulation framework, and simulating the modular test system using the simulation framework.",
	"url": null,
	"owner": "Advantest America R&D Center, Inc.",
	"publication_number": "07210087",
	"publication_date": "2007-04-24",
	"application_number": "10917711",
	"application_date": "2004-08-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Supporting calibration and diagnostics in an open architecture test system",
	"summary": "",
	"abstract": "A method for integrating test modules in a modular test system includes creating component categories for integrating vendor-supplied test modules and creating a calibration and diagnostics (C&D) framework for establishing a standard interface between the vendor-supplied test modules and the modular test system, where the C&D framework comprises interface classes communicating vendor-supplied module integration information. The method further includes receiving a vendor-supplied test module, retrieving module integration information from the vendor-supplied test module in accordance with the component categories, and integrating the vendor-supplied test module into the modular test system based on the module integration information using the C&D framework.",
	"url": null,
	"owner": "Advantest America R&D Center, Inc.",
	"publication_number": "07197416",
	"publication_date": "2007-03-27",
	"application_number": "10917724",
	"application_date": "2004-08-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method providing variable complexity in a physics simulation",
	"summary": "",
	"abstract": "A system and method of providing physics data generated by a physics simulation and consumed by main application are provided. The main application may incorporate different scene versions or varying physics-based complexity while running on systems having different hardware and software resources.",
	"url": null,
	"owner": "Ageia Technologies, Inc.",
	"publication_number": "07289941",
	"publication_date": "2007-10-30",
	"application_number": "11213338",
	"application_date": "2005-08-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Print driver system having a user interface and a method for processing raster data",
	"summary": "",
	"abstract": "A system and method for processing raster data including at least one input computer terminal for creating postscript data, at least one raster image processor (RIP), for processing the postscript data into raster data, and a PrintDrive system for managing and controlling the workflow of image files containing raster image data to a plurality of user selectable output devices.",
	"url": null,
	"owner": "Agfa Corporation",
	"publication_number": "07242487",
	"publication_date": "2007-07-10",
	"application_number": "08869244",
	"application_date": "1997-06-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Building packets of data for testing a communication network",
	"summary": "",
	"abstract": "A system for building a packet of test data for testing a communications network comprises a characterizing component which describes one or more protocols by providing one or more rules which are used to build the packet of test data. The system also includes a packet building component for building the packet of test data in accordance with the one or more protocol descriptions, and a storage component for storing one or more packets which are built by the packet building component.",
	"url": null,
	"owner": "Agilent Technologies, Inc.",
	"publication_number": "07278061",
	"publication_date": "2007-10-02",
	"application_number": "10266507",
	"application_date": "2002-10-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Intelligent power cycling of a wireless modem",
	"summary": "",
	"abstract": "A system for initiating a connection to a wireless network using a wireless modem, where the system maintains the connection to the wireless network when the wireless modem becomes idle. The system determines that there is a problem using the wireless modem by monitoring the status of the wireless modem. In response to a determination that there is a problem using the wireless modem, the system automatically cycles power to the wireless modem and again initiates a connection to the wireless network using the wireless modem. The system may be implemented by an apparatus having a power control device with a power outlet coupled to a wireless modem. The control device controls power to the power outlet according to received power control commands that are based on the status of the wireless modem.",
	"url": null,
	"owner": "Agilent Technologies, Inc.",
	"publication_number": "07308611",
	"publication_date": "2007-12-11",
	"application_number": "10268674",
	"application_date": "2002-10-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for managing workplace real estate and other resources",
	"summary": "",
	"abstract": "Organizations can proactively manage and reserve shared resources, such as workspaces, equipment and services, as well as report on the utilization of those resources across departments and facilities using the system of the present invention. Work-place management tools as provided by the present invention can be used to manipulate resources in real-time, automate inefficient processes, and track and analyze usage patterns, in order to make wise short-and long-term space and resource decisions.",
	"url": null,
	"owner": "Agilquest Corporation",
	"publication_number": "07289619",
	"publication_date": "2007-10-30",
	"application_number": "10489160",
	"application_date": "2003-01-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing web tier session state objects in a content delivery network (CDN)",
	"summary": "",
	"abstract": "Business applications running on a content delivery network (CDN) having a distributed application framework can create, access and modify state for each client. Over time, a single client may desire to access a given application on different CDN edge servers within the same region and even across different regions. Each time, the application may need to access the latest u201cstateu201d of the client even if the state was last modified by an application on a different server. A difficulty arises when a process or a machine that last modified the state dies or is temporarily or permanently unavailable. The present invention provides techniques for migrating session state data across CDN servers in a manner transparent to the user. A distributed application thus can access a latest u201cstateu201d of a client even if the state was last modified by an application instance executing on a different CDN server, including a nearby (in-region) or a remote (out-of-region) server.",
	"url": null,
	"owner": "Akamai Technologies, Inc.",
	"publication_number": "07254634",
	"publication_date": "2007-08-07",
	"application_number": "10384824",
	"application_date": "2003-03-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for fault tolerant media streaming over the internet",
	"summary": "",
	"abstract": "A replication process to provide fault tolerance for a streaming signal in a computer network. In one embodiment, the original or source signal is sent to several splitters which, in turn, each make copies of the signal and send the copies into a second layer of devices, which are referred to as u201cconcentrators.u201d A given concentrator receives as input one or more copies of the source signal. In a preferred embodiment, a given concentrator receives two copies of the source signal from at least two different splitters. The concentrators process the incoming streaming signal copies, for example, by merging them into a single or composite copy of the original source signal according to a given processing algorithm. The output of a given concentrator may then be fed into a splitter, with the process then being repeated if desired to make an arbitrary large number of copies of the signal. At the end of the replication process, the output of a splitter or a concentrator is fed directly or indirectly to an end user. The replication process is fault-tolerant, and thus the end user's signal is not interrupted regardless of signal or equipment problems within the distribution mechanism.",
	"url": null,
	"owner": "Akamai Technologies, Inc.",
	"publication_number": "07296082",
	"publication_date": "2007-11-13",
	"application_number": "10457266",
	"application_date": "2003-06-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data processing system providing secure communication between software components",
	"summary": "",
	"abstract": "A virtual security server enabling a set of applications to access a plurality of security services. In response to a service request from a software application, the virtual security server receive service determines which of the security servers is able to provide the requested service. The virtual security server sends to a selected security server data enabling the selected security server to provide the security service corresponding to the service request. Accordingly, communication between the applications and the security servers is simplified because the application are not required to manage negotiation protocols associated with the security servers and choose the security server(s) appropriate for the required service.",
	"url": null,
	"owner": "Alcatel",
	"publication_number": "07171684",
	"publication_date": "2007-01-30",
	"application_number": "09564695",
	"application_date": "2000-05-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interface means between a network switch and a CTI server means and apparatus for providing a service to a customer including such an interface means",
	"summary": "",
	"abstract": "A method for providing a telephony service, the method including coupling an interface device directly between a network switch of a public intelligent network and a computer telephony integration server, the network switch being coupled to a service switching function device having service switching functionality; at the interface device, handling call handling messages between the service switching function device and the computer telephony integration server.",
	"url": null,
	"owner": "Alcatel",
	"publication_number": "07218725",
	"publication_date": "2007-05-15",
	"application_number": "11442539",
	"application_date": "2006-05-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for localizing a mobile terminal in an area under radio coverage of a cellular communication network and of a localization point, corresponding mobile terminal, server and localization point",
	"summary": "",
	"abstract": "A method for localizing a mobile terminal () in an area under radio coverage of a cellular communication network () and of a localization point (). The method includes the steps of: transferring to the mobile terminal () a localization point identifier (LP-ID) of the localization point (), the mobile terminal () being under radio coverage of the localization point (); and transferring the localization point identifier (LP-IDs) via the cellular communication network () from the mobile terminal () to a server () connected to the cellular communication network ().",
	"url": null,
	"owner": "Alcatel",
	"publication_number": "07295846",
	"publication_date": "2007-11-13",
	"application_number": "10443889",
	"application_date": "2003-05-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for dynamically changing the communication means used for communication between two software agents",
	"summary": "",
	"abstract": "A system and a method for changing the communication means used for communication between two software agents. Each software agent has a communication module, which gives the software agents access to the communication means. In addition, the software agents have means for receiving a new communication module from the communication server.",
	"url": null,
	"owner": "Alcatel",
	"publication_number": "07191227",
	"publication_date": "2007-03-13",
	"application_number": "09740823",
	"application_date": "2000-12-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Database system and methods",
	"summary": "",
	"abstract": "In general, in one aspect, the invention relates to a method for transaction processing. The method includes specifying metadata and storing the metadata. An index is created in response to the stored metadata. The method also includes receiving a transaction, generating an index log of changes to the index in response to the received transaction, and modifying the first index in response to the generated index log.",
	"url": null,
	"owner": "Aleri, Inc.",
	"publication_number": "07249118",
	"publication_date": "2007-07-24",
	"application_number": "10150763",
	"application_date": "2002-05-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hybrid machine/human computing arrangement",
	"summary": "",
	"abstract": "A hybrid machine/human computing arrangement which advantageously involves humans to assist a computer to solve particular tasks, allowing the computer to solve the tasks more efficiently. In one embodiment, a computer system decomposes a task, such as, for example, image or speech comparison, into subtasks for human performance, and requests the performances. The computer system programmatically conveys the request to a central coordinating server of the hybrid machine/human computing arrangement, which in turn dispatches the subtasks to personal computers operated by the humans. The humans perform the subtasks and provide the results back to the server, which receives the responses, and generates a result for the task based at least in part on the results of the human performances.",
	"url": null,
	"owner": "Amazon Technologies, Inc.",
	"publication_number": "07197459",
	"publication_date": "2007-03-27",
	"application_number": "09976717",
	"application_date": "2001-10-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data interoperability between open standard directory service and proprietary database",
	"summary": "",
	"abstract": "A method of providing interoperability between an open standard directory service and a proprietary database. The directory is represented as a mapping tree, consistent with directory service protocols such as X.500 or LDAP. The mapping tree node associated with the proprietary database is configured as a null suffix mapping tree entry, so that database mapping tree node replaces root of the mapping tree and the proprietary database the default backend of the directory service. The core server of the directory service is configured to recognize the null suffix mapping tree entry. All directory service operations are routed to a pre-operation plug-in that handles operations in the proprietary database, and remaining operations are redirected to the core server, preserving default functionality of the directory service. Normal data constraints are suspended for operations performed in the proprietary database.",
	"url": null,
	"owner": "America Online Inc.",
	"publication_number": "07184995",
	"publication_date": "2007-02-27",
	"application_number": "10375803",
	"application_date": "2003-02-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multi-layered online calendaring and purchasing",
	"summary": "",
	"abstract": "A computer-implemented method and system for generating and displaying a calendar containing user-selected events from user-selected categories. A plurality of categories of events are provided. The user can select which categories are of interest, and then select individual events within those categories. Events are overlaid on a calendar unique to the user. Calendars may also be shared among a number of selected users, if desired. Online purchasing and related actions can be associated with each event.",
	"url": null,
	"owner": "America Online, Inc.",
	"publication_number": "07174517",
	"publication_date": "2007-02-06",
	"application_number": "10116301",
	"application_date": "2002-04-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Restricting access to requested resources",
	"summary": "",
	"abstract": "Access to network information may be restricted based on a classification of the network information. When a request for network information is received, a classification of the network information is determined. The network information may be classified as static or dynamic. If the network information is classified as static, a rating of the content that corresponds to the network information is determined. If the network information is dynamic, the network information is accessed, and a rating of the content associated with the network information is generated. After determining a content rating, the content rating is compared to the user access information of user making the request for the network information. Based on the comparison, it is determined if access to network information is approved. If approved, the content is retrieved and/or access is granted; otherwise, the access to the network information is restricted or blocked.",
	"url": null,
	"owner": "America Online, Inc.",
	"publication_number": "07181513",
	"publication_date": "2007-02-20",
	"application_number": "10158199",
	"application_date": "2002-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and process for searching a network",
	"summary": "",
	"abstract": "A system for searching a network for network based content related to a search query, such as multimedia and streaming media, includes an adapter for formatting the search query, a first database containing previous search results and a second database for storing currently returnable metadata, a search processor, and at least one search engine kernel comprising a search engine inherent database. The search engine coordinates searching of the first database and the second database, and and provides the formatted search query to the search engine kernel. The search processor also provides and receives search results to and from the first database and the second database, and provides search results to the adapter. The system stores a predetermined amount of previous search results in the first database, such that search results for a current search are retrieved from the database, avoiding a search through search engine kernel, comprising searchable metadata.",
	"url": null,
	"owner": "America Online, Inc.",
	"publication_number": "07181444",
	"publication_date": "2007-02-20",
	"application_number": "10432306",
	"application_date": "2001-11-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer architecture and process of patient generation, evolution, and simulation using knowledge base scripting",
	"summary": "",
	"abstract": "A method and system for patient generation and evolution for a computer-based testing system and/or expert system. One or more belief networks, which describe parallel health state networks are accessed by a user or a computer. A knowledge base, at least in part, is scripted from the one or more belief networks by the computer. A model patient at least in part, is instantiated by the computer from the scripted knowledge base. Optionally, the model patient is evolved by the computer in accordance with the parallel health state networks and responsive to a received course of action.",
	"url": null,
	"owner": "American Board of Family Medicine, Inc.",
	"publication_number": "07277874",
	"publication_date": "2007-10-02",
	"application_number": "11203230",
	"application_date": "2005-08-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for locating a communication device using local area network switch information",
	"summary": "",
	"abstract": "The present invention includes a system and method for using Local Area Network (LAN) switch information of an internet protocol phone to determine the location of the internet protocol phone. The internet protocol phone communicates with a server and receives a dynamic internet protocol address. The internet protocol phone further communicates with a second server to receive LAN switch information for the internet protocol phone. The internet protocol phone transmits the dynamic internet protocol address and LAN switch information to a phone management module. The phone management module queries a LAN switch in order to gather further LAN switch information for the internet protocol phone. The phone management module transmits the dynamic internet protocol address and LAN switch information to a third party in order to more accurately determine the location of a user using the internet protocol phone.",
	"url": null,
	"owner": "American Express Travel Related Services Company, Inc.",
	"publication_number": "07167470",
	"publication_date": "2007-01-23",
	"application_number": "10099509",
	"application_date": "2002-03-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for remotely initializing a RF transaction",
	"summary": "",
	"abstract": "The present invention relates to a process for providing a RF module configured to convert a nontraditional transaction device for traditional transaction completion. The RF module is placed in physical and logical communication with a microprocessor of a nontraditional transaction device for receiving a personalization file to enable the RF module to complete RF transactions. In an exemplary embodiment, the microprocessor is configured to receive the personalization file from a mobile device account provider subsequent to an end user establishing communication with the device account provider and notifying the provider that a RF module is to be personalized. The mobile device account provider may receive the personalization file from a RF module account issuer and provide the personalization file to the RF module via the mobile device microprocessor. In another exemplary embodiment, the mobile device may include a USB interface for use in providing the personalization file to the RF module by establishing communications between the USB interface and the mobile device account provider or the RF module account provider as required.",
	"url": null,
	"owner": "American Express Travel Related Services Company, Inc.",
	"publication_number": "07228155",
	"publication_date": "2007-06-05",
	"application_number": "10711970",
	"application_date": "2004-10-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "User authentication system and methods thereof",
	"summary": "",
	"abstract": "A computer system to authenticate users of vendors supplying services and/or products to the users, the system having programmed processors providing authentication rules, authenticating users according to the authentication rules responsive to user authentication requests, configuring the authentication rules in real-time, thereby allowing real-time customization of the system, providing multi-factor user authentication processes, using any data sources providing information about and/or known to the users to authenticate the users, thereby providing a data agnostic system, and authentication strategies correspond to the authentication rules, thereby allowing the system to support authentication strategy experimentation.",
	"url": null,
	"owner": "American Management Systems, Inc.",
	"publication_number": "07231657",
	"publication_date": "2007-06-12",
	"application_number": "10224564",
	"application_date": "2002-08-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and apparatus for determining the physical memory address of an allocated and locked memory buffer",
	"summary": "",
	"abstract": "Methods and systems are provided for determining the physical address of an allocated and locked memory buffer. An application program may request the allocation of a memory buffer. A virtual memory address for the memory buffer is then returned. The virtual memory address is adjusted to correspond to a page boundary within a physical memory address space. The memory buffer is then locked to the physical memory. A predetermined bit pattern is then written to the memory buffer. A search may then be made of the physical memory for the bit pattern to determine the location within the physical memory address space of the allocated memory buffer. Once the physical address of the memory buffer has been determined, it may be utilized to reference the memory buffer by a program that would not otherwise have access to the virtual address space.",
	"url": null,
	"owner": "American Megatrends, Inc.",
	"publication_number": "07234039",
	"publication_date": "2007-06-19",
	"application_number": "10988959",
	"application_date": "2004-11-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Internet control system and method",
	"summary": "",
	"abstract": "A control system of the present invention includes at least one device, a network interconnecting the at least one device, a control network portal coupled between the network and the Internet, and a master controller coupled to the network and operable to control the operations of the Internet and the at least one device, the Internet is controllable as a device coupled to the network.",
	"url": null,
	"owner": "AMX LLC",
	"publication_number": "07213061",
	"publication_date": "2007-05-01",
	"application_number": "09561105",
	"application_date": "2000-04-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Browser environment using multiple browser instantiations",
	"summary": "",
	"abstract": "Systems and techniques for transferring electronic data to a user of a communications system by establishing a connection between a client and a host; receiving electronic data from the host in response to a data request transmitted from the client; and at the client, simultaneously executing multiple instantiations of the browser application in response to the electronic data received from the host. The client includes a browser application configured to render data encapsulated in a standard Internet content format. Each instantiation of the browser application is configured to exchange messages with at least one other instantiation of the browser application.",
	"url": null,
	"owner": "AOL LLC",
	"publication_number": "07277912",
	"publication_date": "2007-10-02",
	"application_number": "09842796",
	"application_date": "2001-04-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Filtering search results",
	"summary": "",
	"abstract": "Searching different data stores based on a classification of a search term may include receiving at least one search term and classifying the search term among at least first and second categories. When the search term is classified within the first category, the search term is compared to first electronic information within a first electronic information store to determine whether matches exist. When the search term is classified within the second category, the search term is compared to at least second electronic information within at least a second electronic information store that differs from the first electronic information store to determine whether matches exist. A result is displayed based on the matches that are determined to exist.",
	"url": null,
	"owner": "AOL LLC",
	"publication_number": "07225180",
	"publication_date": "2007-05-29",
	"application_number": "09749798",
	"application_date": "2000-12-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Localization of clients and servers",
	"summary": "",
	"abstract": "A data transfer method includes receiving terminal server identification data at a host system from a terminal server, querying a database to obtain localized information service data associated with the terminal server identification data, and sending the localized information service data from the host system to the terminal server. A host system providing localized information system data includes a database system, a network interface, and a processor. The database system includes records to associate terminal server identification data with information service data. The interface couples the host system to a communications link over which the host system can exchange data with a terminal server. The processor is coupled to the interface and to the database and is configured to receive terminal server identification data from the data interface, to query the database for localized information service data associated with the terminal server identification data, and to send the localized information service data obtained by the query to the data interface for transmission to the terminal server.",
	"url": null,
	"owner": "AOL LLC",
	"publication_number": "07260094",
	"publication_date": "2007-08-21",
	"application_number": "09582261",
	"application_date": "1998-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for preventing capture of electronic digital content",
	"summary": "",
	"abstract": "A computer-implemented method of protecting content includes receiving a request from a user to access the content. The user is enabled to perceive the content based on the request received from the user. The user is prevented from capturing the content when perception of the content is enabled. The method may be performed by a Java applet running in a network environment.",
	"url": null,
	"owner": "AOL LLC",
	"publication_number": "07305713",
	"publication_date": "2007-12-04",
	"application_number": "09688142",
	"application_date": "2000-10-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for notifying an online client of a mobile vendor",
	"summary": "",
	"abstract": "Systems and techniques for notifying a potential customer of a vendor that is in geographic proximity to the potential customer. The vendor is associated with a vendor and may include available good and/or services. The potential customer may be notified of several vendors associated with different vendors. Each vendor may be assigned at least one primary service and at least one secondary service.",
	"url": null,
	"owner": "AOL LLC",
	"publication_number": "07305350",
	"publication_date": "2007-12-04",
	"application_number": "10134440",
	"application_date": "2002-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Extensible, replaceable network component system",
	"summary": "",
	"abstract": "An extensible and replaceable network-oriented component system provides a platform for developing networking navigation components that operate on a variety of hardware and software computer systems. These navigation components include key integrating components along with components configured to deliver conventional services directed to computer networks, such as Gopher-specific and Web-specific components. Communication among these components is achieved through novel application programming interfaces (APIs) to facilitate integration with an underlying software component architecture. Such a high-modular cooperating layered-arrangement between the network component system and the component architecture allows any existing component to be replaced, and allows new components to be added, without affecting operation of the network component system.",
	"url": null,
	"owner": "Apple Computer, Inc.",
	"publication_number": "RE039486",
	"publication_date": "2007-02-06",
	"application_number": "10408789",
	"application_date": "2003-04-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for u201cjust-in-timeu201d dynamic loading and unloading of computer software libraries",
	"summary": "",
	"abstract": "A method and system for providing u201cjust-in-timeu201d dynamic loading and unloading of libraries. Library code is loaded into memory just prior to the actual execution of a routine in that library and is unloaded from memory after the execution of the library routine is completed. According to the present invention, a library structure having a library loader and a library implementation module. The library loader provides the same entry points as the library itself and contains code to drive the loading and unloading of the library implementation module which actually contains the code to implement the library call. At the beginning of the execution of an application or other software module, the library loaders for libraries needed by that application or other software module, are loaded into memory and unloaded upon completion of that application or other software module. The library loaders control the loading and unloading of the library implementation modules, which contain the actual code which implements the library call, so that the library code itself is only in memory while in use during execution of the library call. A sequence of library calls to the same library is preferably detected and managed so as to avoid unnecessary unloading/reloading of the same library.",
	"url": null,
	"owner": "Apple Computer, Inc.",
	"publication_number": "07171674",
	"publication_date": "2007-01-30",
	"application_number": "09943900",
	"application_date": "2001-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for automated remote volume mounting using a plug-in installed on a client",
	"summary": "",
	"abstract": "A method and apparatus for remotely and automatically mounting volumes over a network. The invention uses an interface, such as a web browser, to authenticate a client on a server. The server supplies volume mounting parameters specific to the authenticated client via a plug-in installed on the client. The plug-in then interacts, in one embodiment of the invention, with file system software on the client and automatically mounts the volume(s) in accordance with the supplied parameters.",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07249168",
	"publication_date": "2007-07-24",
	"application_number": "09751903",
	"application_date": "2000-12-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer integrated manufacturing techniques",
	"summary": "",
	"abstract": "The present invention provides a novel distributed factory system framework including a novel factory automation lifecycle () having lifecycle activities for SW developing and integrating (), installing and administrating (), factory modeling (), manufacturing planning (), manufacturing controlling, monitoring and tracking () and analyzing of manufacturing results (). The factory lifecycle comprises framework components. The distributed factory system framework also includes application components and building blocks. The framework components are adapted to for managing the application components, while the application components are utilized to provide instructions for managing a process such as a wafer fab. The building blocks are adapted for forming or modifying framework and application components. The distributed factory system framework provides computer implemented methods for integrating processing systems and facilitates process and equipment changes.",
	"url": null,
	"owner": "Applied Materials, Inc.",
	"publication_number": "07174230",
	"publication_date": "2007-02-06",
	"application_number": "10084092",
	"application_date": "2002-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Voice-activated interactive multimedia information processing system",
	"summary": "",
	"abstract": "Embodiments of the invention are directed to automated reception systems that may receive voice information indicating action to be taken by the system. The automated reception system may receive a call and transmit a speech message to the caller identifying actions that the caller may ask the system to take. The caller may verbally select an action for the system to execute. Possible actions may depend upon the system context and information about possible actions may be provided to the caller through dynamically generated messages. The caller may also access voicemail or electronic mail messages using embodiments of the invention. Furthermore, in some embodiments, a caller may be able to control a separate communication session using voice or other commands input during a telephone session.",
	"url": null,
	"owner": "Applied Voice & Speech Technologies, Inc.",
	"publication_number": "07177402",
	"publication_date": "2007-02-13",
	"application_number": "09796946",
	"application_date": "2001-03-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Fixed content distributed data storage using permutation ring encoding",
	"summary": "",
	"abstract": "A file protection scheme for fixed content in a distributed data archive uses computations that leverage permutation operators of a cyclic code. In an illustrative embodiment, an N+K coding technique is described for use to protect data that is being distributed in a redundant array of independent nodes (RAIN). The data itself may be of any type, and it may also include system metadata. According to the invention, the data to be distributed is encoded by a dispersal operation that uses a group of permutation ring operators. In a preferred embodiment, the dispersal operation is carried out using a matrix of the form [IC] where Iis an nu00d7n identity sub-matrix and C is a ku00d7n sub-matrix of code blocks. The identity sub-matrix is used to preserve the data blocks intact. The sub-matrix C preferably comprises a set of permutation ring operators that are used to generate the code blocks. The operators are preferably superpositions that are selected from a group ring of a permutation group with base ring Z.",
	"url": null,
	"owner": "Archivas, Inc.",
	"publication_number": "07240236",
	"publication_date": "2007-07-03",
	"application_number": "10806488",
	"application_date": "2004-03-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Content-based graphical user interface",
	"summary": "",
	"abstract": "A computer program, computer-readable media and data signal for providing a content-specific graphic user interface each includes a plurality of code segments for rendering a user interface having at least one graphic manipulation icon, said at least one graphic manipulation icon being operatively associated with at least one attribute of the graphic image for manipulation of said at least one attribute by a user. A method and system for using core functions from a host application to provide a content-specific graphical image manipulation interface is also disclosed.",
	"url": null,
	"owner": "ArchVision, Inc.",
	"publication_number": "07213229",
	"publication_date": "2007-05-01",
	"application_number": "10376175",
	"application_date": "2003-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Browser-enabled remote user interface for telecommunications power system",
	"summary": "",
	"abstract": "The modular master control unit of the telecommunications power system communicates via a data bus with the associated modular rectifier units, distribution unit(s) and battery connection unit(s) to collect operating state information from the neuron processors of those units and store that information in a database. The master control unit also controls the operation of the associated modular units by supplying operating state information, based on values stored in the database. The user interface manager module provides local user interface control over the system by allowing the user through a local display screen and touch pad to read from and write to the database. By downloading an applet to a remote computer running a web browser, the user interface manager allows users at remote locations to perform the same control and monitor functions as a user at the local site. The applet runs within the standard browser and communicates with the user interface manager using TCP/IP protocol.",
	"url": null,
	"owner": "Astec International Limited",
	"publication_number": "07181517",
	"publication_date": "2007-02-20",
	"application_number": "09587097",
	"application_date": "2000-06-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for providing visibility to SS7 integrated on-line networks",
	"summary": "",
	"abstract": "A system and method capture data from an SS7 network and pair each invoke message with its corresponding response message. Each message is stored in a daily file as well as in a table dedicated for that particular message type. A separate file is also maintained on each MIN and holds the most current registration information for each MIN. The system and method support four different types of queries: a MIN/ESN query, an active roamer query, a switch-to-switch query, and a transaction statistics query. The MIN/ESN query provides roaming activity on a specific MIN or ESN while the active roamer query provides information on all roamers in a serving market. The switch-to-switch query reveals messaging at one switch or between two switches. The statistics query provides data to a provider on all of its subscribers roaming in foreign networks or on all phones within its own network. The system has a Graphical User Interface (GUI) for displaying information on each message in an easy and convenient manner. The details of a record are displayed in a tabular format with each tab holding data for a group of parameters.",
	"url": null,
	"owner": "AT&T BLS Intellectual Property, Inc.",
	"publication_number": "07269410",
	"publication_date": "2007-09-11",
	"application_number": "11294833",
	"application_date": "2005-12-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enhanced call feature service",
	"summary": "",
	"abstract": "The present invention provides a system and method for managing calls for a subscriber, including accessing a calling plan while the subscriber is in an existing active call with at least one other party. The call is placed or received by the subscriber at a first device. At least one service feature of the calling plan is invoked during the active call. This service feature includes an add callers feature for adding at least one additional party to the existing active call between the subscriber and the other party. The service feature additionally includes a transfer devices feature for transferring the existing active call to at least one additional device of the subscriber and hanging up on the first device by the subscriber to confirm the transfer of the call to the additional device.",
	"url": null,
	"owner": "AT&T Corp.",
	"publication_number": "07164762",
	"publication_date": "2007-01-16",
	"application_number": "10951351",
	"application_date": "2004-09-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for billing IP broadband subscribers",
	"summary": "",
	"abstract": "A method of billing a variable bit rate communication between a first terminal and a distant terminal to a broadband subscriber permits changing billing parameters during a call in real time in response to user inputs including user requested changes in quality of service, changes in data rate and changes in preferred service provider. A variable bit rate communication to be billed has a variable quality of service related to the degree of utilization of a plurality of different networks. The billing method comprises the steps of i.) receiving user identification data at a first terminal and data representing a required bit rate and a default quality of service selected by the user, ii.) verifying the user identification data to be associated with the broadband service subscriber, iii.) determining least cost alternative network resources available for achieving the communication at the user selected default quality of service and the required bit rate, iv.) determining cost data associated with the network resources, v.) outputting to the user a least cost for the communication according to their selected default quality of service and alternative least cost network resources, vi.) coupling the first terminal and the distant terminal via the least cost determined network resources at the default quality of service and the required bit rate responsive to user authorization and vii.) billing for the communication at the default quality of service and according to the required bit rate after the termination of the communication.",
	"url": null,
	"owner": "AT&T Corp.",
	"publication_number": "07289489",
	"publication_date": "2007-10-30",
	"application_number": "10840007",
	"application_date": "2004-05-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Packet-switched network topology tracking method and system",
	"summary": "",
	"abstract": "The present invention permits a network operator to maintain a timely view of changes to an operational packet-switched network.",
	"url": null,
	"owner": "AT&T Corp.",
	"publication_number": "07200120",
	"publication_date": "2007-04-03",
	"application_number": "10063867",
	"application_date": "2002-05-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Personal control of address assignment and greeting options for multiple BRG ports",
	"summary": "",
	"abstract": "A method and apparatus for providing multiple telephone lines using a single directory number. A method and apparatus for associating multiple directory numbers with multiple telephone lines. A broadband residential gateway (BRG) is a user interface to a broadband communication system providing packetized telephone service and other media services. The BRG has multiple ports, and each port is connected to one or more telephones. The multiple ports may be mapped to a single directory number, or the multiple ports may be mapped to multiple directory numbers. The BRG can provide greeting and message features. A greeting may instruct a caller to select a port which is associated with a party the caller is attempting to reach. Also, a message, played after the greeting, may further instruct the caller.",
	"url": null,
	"owner": "AT&T Corp.",
	"publication_number": "07180889",
	"publication_date": "2007-02-20",
	"application_number": "09475206",
	"application_date": "1999-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for playing, browsing and interacting with MPEG-4 coded audio-visual objects",
	"summary": "",
	"abstract": "A number of novel configurations for MPEG-4 playback, browsing and user interaction are disclosed. MPEG-4 playback systems are not simple extensions of MPEG-2 playback systems, but, due to object based nature of MPEG-4, present new opportunities and challenges in synchronized management of independent coded objects as well as scene composition and presentation. Therefore, these configurations allow significantly new and enhanced multimedia services and systems. In addition, MPEG-4 aims for an advanced functionality, called Adaptive Audio Visual Session (AAVS) or MPEG-J. Adaptive Audio Visual Session (AAVS) (i.e., MPEG-AAVS, MPEG-Java or MPEG-J) requires, in addition to the definition of configurations, a definition of an application programming interface (API) and its organization into Java packages. Also disclosed are concepts leading to definition of such a framework.",
	"url": null,
	"owner": "AT&T Corp.",
	"publication_number": "07281200",
	"publication_date": "2007-10-09",
	"application_number": "10662831",
	"application_date": "2003-09-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for regularly approximating context-free grammars through transformation",
	"summary": "",
	"abstract": "Context-free grammars generally comprise a large number of rules, where each rule defines how a sting of symbols is generated from a different series of symbols. While techniques for creating finite-state automata from the rules of context-free grammars exist, these techniques require an input grammar to be strongly regular. Systems and methods that convert the rules of a context-free grammar into a strongly regular grammar include transforming each input rule into a set of output rules that approximate the input rule. The output rules are all right- or left-linear and are strongly regular. In various exemplary embodiments, the output rules are output in a specific format that specifies, for each rule, the left-hand non-terminal symbol, a single right-hand non-terminal symbol, and zero, one or more terminal symbols. If the input context-free grammar rule is weighted, the weight of that rule is distributed and assigned to the output rules.",
	"url": null,
	"owner": "AT&T Corp.",
	"publication_number": "07289948",
	"publication_date": "2007-10-30",
	"application_number": "10199227",
	"application_date": "2002-07-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic vulnerability and reliability assessment",
	"summary": "",
	"abstract": "Systems for providing information on system vulnerabilities include a database populated with descriptive system information and a database structure configured as a hierarchical plurality of database pages configured to include element vulnerability information and links to related database pages. A rule processor module is configured to provide rules for cycling through the database structure to match keywords, such as keywords provided by user input, and descriptive system information from the database with element vulnerability information from the database structure. Other systems and methods are also provided.",
	"url": null,
	"owner": "AT&T Intellectual Property, Inc.",
	"publication_number": "07237266",
	"publication_date": "2007-06-26",
	"application_number": "10611637",
	"application_date": "2003-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Heap memory management",
	"summary": "",
	"abstract": "A method, apparatus, and article of manufacture provide the ability to efficiently and effectively manage memory. A file is broken into multiple memory blocks that are managed as nodes in a heap tree. A request to access memory at a linear file address is received. The linear file address is then translated to the appropriate heap block reference to complete the memory access. Additionally, a tri-linked list/tree of deallocated memory units available for use by the heap may be used. A first link points to units smaller than a current block size, a second link points to units equal to the current block size, and a third link points to units larger than the current block size. When a request for memory is received, the tree is traversed to find a unit that satisfies the request and the appropriate unit in the free list is allocated.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "07272698",
	"publication_date": "2007-09-18",
	"application_number": "10800268",
	"application_date": "2004-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interprocess application programming interface for computer applications",
	"summary": "",
	"abstract": "One or more embodiments of the invention provide a method, apparatus, and article of manufacture for collaborating application programs executing on a client such as a personal digital assistant (PDA). A shared database on the client is obtained and used as a common launch parameter stack. One or more program entry records are stored in the database and the last program entry record stored is identified as the top of the stack. Each program entry record may include information regarding an application launched on the client. When the last program identified on the stack has completed execution, the last program entry record is popped off of the stack. Thereafter, control is returned to an application that corresponds to the new program entry record on the top of the stack.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "07277921",
	"publication_date": "2007-10-02",
	"application_number": "09795719",
	"application_date": "2001-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing access to maps on a thin client",
	"summary": "",
	"abstract": "A method, system, and article of manufacture provide for an interactive geographic information system on a thin client. Geographic information may be viewed and interacted with on the thin client. The information is available while the thin client is connected or disconnected to/from a network. The thin client has functionality commonly available in a standard client including raster maps for multiple zoom levels of multiple tiles, raster zooms, selectable vector geometry, geo-referencing information for map navigation, metadata in the form of layer definitions, links to object attributes in databases, links to object reports generated by corporate web servers, uploadable, sharable redlining data, offline access, and a compact database.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "07236173",
	"publication_date": "2007-06-26",
	"application_number": "10770869",
	"application_date": "2004-02-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Optimizing graphical data synchronization between a graphical client and a stateless server",
	"summary": "",
	"abstract": "A method for synchronizing data between a graphical client and a stateless server. Descriptions of one or more root object nodes of a scene is downloaded from the server to the graphical client, wherein the descriptions may include references to other object nodes in the form of unique persistent identifiers for the referenced object nodes with their associated bounding volumes. The bounding volumes for the object nodes are intersected with a view frustum in the graphical client to determine a set of visible and undefined object nodes. Descriptions of the object nodes in the set of visible and undefined object nodes are then downloaded from the server to the graphical client, wherein the descriptions include unique persistent identifiers for the object nodes with their associated bounding volumes. A determination is made whether the downloaded object nodes reference other object nodes, and if so, the steps are repeated for the other object nodes. Moreover, these steps are repeated until the set of visible and undefined object nodes is empty. At that point, the scene can be rendered by the graphical client. However, the steps are repeated when a user-controlled camera changes the scene in the graphical client.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "07197714",
	"publication_date": "2007-03-27",
	"application_number": "09780817",
	"application_date": "2001-02-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for managing the navigational usability of an interactive map",
	"summary": "",
	"abstract": "A graphical user interface for graphically managing the navigational usability of an interactive map is described. In one embodiment, the graphical user interface includes a layer hierarchy having a first layer and a second layer. The graphical user interface also includes a first display range bar associated with the first layer and configured to show a range of map scales at which the first layer is displayed in the digitized map. In addition, the graphical user interface includes a second display range bar associated with the second layer and configured to show a range of map scales at which the second layer is displayed in the digitized map.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "07269801",
	"publication_date": "2007-09-11",
	"application_number": "10814946",
	"application_date": "2004-03-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Wireless communication for diagnostic instrument",
	"summary": "",
	"abstract": "A wireless interface for a diagnostic instrument is provided. The diagnostic instrument includes a communications interface having an external data port. A wireless adapter coupled to the external data port communicates diagnostic data with one or more computing devices. In a single user mode, a computing device can control several diagnostic instruments wirelessly. In broadcast mode, a diagnostic instrument can send a data stream wirelessly to many listening computing devices. Further features, such as safety warning messages, are provided.",
	"url": null,
	"owner": "Autologic, L.L.C.",
	"publication_number": "07225064",
	"publication_date": "2007-05-29",
	"application_number": "10697160",
	"application_date": "2003-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus to link to a related document",
	"summary": "",
	"abstract": "A method, apparatus, and system exist to generate a ranked list of one or more related documents and a link to each of the one or more related documents. The one or more related documents are ranked based upon relevance to the first representation of content associated with one or more specified fields of the reference extensible markup language document.",
	"url": null,
	"owner": "Autonomy Corporation Ltd.",
	"publication_number": "07272594",
	"publication_date": "2007-09-18",
	"application_number": "09872938",
	"application_date": "2001-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Wireless device to manage cross-network telecommunication services",
	"summary": "",
	"abstract": "A communication remote control system allows a user to remotely configure call management functions across various phone networks using a client device. The communication remote control system centrally handles call management for the user's telephones. The communication remote control system may provide a centralized address book, call log, and voicemail. The user can specify various parameters including modes, filters, schedules, and the like, which are stored in the communication remote control system. The communication remote control system routes incoming calls made to the phone networks to the user's delivery device, which may be part of the client device. Incoming calls are routed to a specified telephone number, sent to voicemail, or otherwise disposed of or users can change modes manually or can specify automatic mode selection based on time of date, day of week, location, and/or other factors.",
	"url": null,
	"owner": "Avaya Integrated Cabinet Solutions, Inc.",
	"publication_number": "07298833",
	"publication_date": "2007-11-20",
	"application_number": "11238525",
	"application_date": "2005-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Call center telephone and data flow connection system",
	"summary": "",
	"abstract": "A method and system for transferring telephone calls and data between computer programs in a call center. Flow connection modules associated with call center application programs allow data and telephone calls to be transferred from one computer program to another in the call center. The flow connection modules may be combined with a locator program such that the combination replaces the automatic call distributor (u201cACDu201d) in a call center. The flow connection modules enable development of modular call centers, allowing call center agent workstations to be easily increased or decreased. In operation, an application notifies its flow connection module that a call on a telephone in the workstation should be transferred to another application. The flow connection module establishes a data connection with a flow connection module associated with the other application. The flow connection module sends call-related data to the other flow connection module which then returns the telephone extension associated with the other application. The flow connection module requests a computer telephony interface (u201cCTIu201d) link associated with a phone switch to transfer the call to the other application's telephone. The CTI link directs the phone switch to transfer the telephone call from the original application's workstation to the telephone of the other workstation. Having received notification of the transferred call, the other flow connection module informs the original flow connection module that the call has been successfully transferred, and the original flow connection module then disconnects the data connection.",
	"url": null,
	"owner": "Avaya Technology Corp.",
	"publication_number": "07295669",
	"publication_date": "2007-11-13",
	"application_number": "09235065",
	"application_date": "1999-01-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "License file serial number tracking",
	"summary": "",
	"abstract": "A system for monitoring licensing eligibility of a computational component, the computational component being associated with a unique identifier, is provided. The system comprises (i) an input and/or interface  operable to receive a request to authorize operation of at least part of the computational component; (ii) a memory, such as licensing database , comprising licensing database information associated with the identifier, the information comprising a licensing state indicator; and (iii) an activator, such as remote feature activator , operable to (a) authorize operation of the at least part of the computational component when the licensing state indicator has a first state and (b) not authorize operation of the at least part of the computational component when the licensing state indicator has a second state other than the first state.",
	"url": null,
	"owner": "Avaya Technology Corp.",
	"publication_number": "07228567",
	"publication_date": "2007-06-05",
	"application_number": "10232507",
	"application_date": "2002-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for embedding chat functions in a web page",
	"summary": "",
	"abstract": "A real time chat server () not only maintains the chat session but also synchronizes the browse and chat functions by dynamically linking the browser and chat applications to allow the contents of the browser window and the chat window to change in a coordinated manner. The chat server is built from a number of core software objects, namely user objects (), connection objects, and room objects (). In this way, multiple users' browsers may be connected into one powerful distributed chat/HTTP server and all such users are able to fully interact with one another in a coordinated manner via type-written messages, HTML web documents, and file transfers. The usefulness of chat is enhanced by embedding the chat functions into the browser window.",
	"url": null,
	"owner": "Avaya Technology Corp.",
	"publication_number": "07263526",
	"publication_date": "2007-08-28",
	"application_number": "08768606",
	"application_date": "1996-12-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for creating a display card",
	"summary": "",
	"abstract": "A system and method enables a user such as a visitor to a facility to create a photographic identification card for himself. The user terminal prompts a user to enter identifying information including his name, and takes a photograph of the user. An identification badge is printed for the user upon predefined media. The identification card may be provided with a barcode and unique identification number. The user may be presented with a preview of the identification as the identification card is to be printed. Upon exiting the location, the user may scan the barcode or enter the unique identification number to sign out of the system and exit the location. A user activity log may be maintained at a server such that each time an identification card is created, printed or signed out, the log is updated with information regarding the user information, date, time, location or other information.",
	"url": null,
	"owner": "Avery Dennison Corporation",
	"publication_number": "07172113",
	"publication_date": "2007-02-06",
	"application_number": "10662758",
	"application_date": "2003-09-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Visual programming interface for a three-dimensional animation system for defining real time shaders using a real-time rendering engine application programming interface",
	"summary": "",
	"abstract": "A visual programming interface allows an artist to create real time shaders using a tree of shader nodes. Each shader node represents an operation that can be performed in real time through the real time rendering engine. The visual interface allows the arbitrary combinations of these shader nodes to be made and allows the parameters of the shaders to be manipulated or animated. The visual programming interface may be activated in an interactive animation environment through a designation that a real time shader is to be applied to a surface. By integrating the visual programming interface with an interactive animation environment, an artist can experiment readily with different custom real time shaders. An artist also has the flexibility to create arbitrary real time shader trees and to view them interactively without requiring a programmer to develop or modify a custom shader. Basic operations represented by such shader nodes include drawing to a frame buffer (which may include a blending operation with the contents of the frame buffer), a transform operation and lighting operations. A tree of shader nodes may be processed in multiple passes. Each drawing operation in the tree defines a separate pass. The result of each pass is blended with the results of prior passes according to parameters defined for the drawing operation.",
	"url": null,
	"owner": "Avid Technology, Inc.",
	"publication_number": "07176917",
	"publication_date": "2007-02-13",
	"application_number": "10216563",
	"application_date": "2002-08-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for streaming of dynamic weather content to the desktop",
	"summary": "",
	"abstract": "A method, system and program product for streaming of dynamic information content over an interactive media such as the Internet. The dynamic content, such as dynamic weather data, is collected from a plurality of collection sources such as geographically distributed local weather reporting stations. The data information can be relatively static or dynamic, constantly changing data. The dynamic content is stored in databases maintained on a direct access storage device at the dynamic content server. The selection of dynamic content to be transmitted to the end user client is based on a demographic profile that is completed at the time of end user client registration and which precedes delivery of any selected content in response to end user client requests. An application resident on the dynamic content server streams selected content simultaneously to a plurality of end user client devices for each end user client request. An application resident on each end user client device generates a plurality of processing threads for a series of independent commands, each of which is transmitted to the dynamic content server at specified preset intervals and generates a server-selected response. In a weather content collection and delivery embodiment, local, real-time weather data can be received continuously from thousands of weather reporting stations, and transmitted simultaneously by the weather content server to millions of end user desktop clients, with each user receiving current weather data that is generated from a nearby weather collection station.",
	"url": null,
	"owner": "AWS Convergence Technologies, Inc.",
	"publication_number": "07275089",
	"publication_date": "2007-09-25",
	"application_number": "09814154",
	"application_date": "2001-03-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Retrieving data from a server",
	"summary": "",
	"abstract": "A system includes a server and a controller embedded in a device. Both the server and the embedded controller are capable of communicating over a computer network. The embedded controller sends a command to the server over the computer network that identifies an instance of the device. In response, the server identifies the instance of the device based on the command, retrieves data that is specific to the instance of the device, and sends the data to the embedded controller over the computer network.",
	"url": null,
	"owner": "Axeda Corporation",
	"publication_number": "07185014",
	"publication_date": "2007-02-27",
	"application_number": "09667737",
	"application_date": "2000-09-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "XML scripting of soap commands",
	"summary": "",
	"abstract": "A computer-implemented method processes a simple object access protocol (SOAP) command. The method includes interpreting an XML script to perform a function contained in the XML script, the XML script containing the SOAP command, parsing the SOAP command from the XML script, and passing the SOAP command to a SOAP interpreter for execution.",
	"url": null,
	"owner": "Axeda Corporation",
	"publication_number": "07178149",
	"publication_date": "2007-02-13",
	"application_number": "10123960",
	"application_date": "2002-04-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Robotic follow system and method",
	"summary": "",
	"abstract": "Robot platforms, methods, and computer media are disclosed. The robot platform includes perceptors, locomotors, and a system controller, which executes instructions for a robot to follow a target in its environment. The method includes receiving a target bearing and sensing whether the robot is blocked front. If the robot is blocked in front, then the robot's motion is adjusted to avoid the nearest obstacle in front. If the robot is not blocked in front, then the method senses whether the robot is blocked toward the target bearing and if so, sets the rotational direction opposite from the target bearing, and adjusts the rotational velocity and translational velocity. If the robot is not blocked toward the target bearing, then the rotational velocity is adjusted proportional to an angle of the target bearing and the translational velocity is adjusted proportional to a distance to the nearest obstacle in front.",
	"url": null,
	"owner": "Battelle Energy Alliance, LLC",
	"publication_number": "07211980",
	"publication_date": "2007-05-01",
	"application_number": "11428743",
	"application_date": "2006-07-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Personal area network with automatic attachment and detachment",
	"summary": "",
	"abstract": "A network () includes a hub device () and at least one unattached peripheral device (). The unattached peripheral device () transmits an attach request to the hub device () with a selected address, receives a new address from the hub device to identify the unattached peripheral device (), and communicates with the hub device () using the new address.",
	"url": null,
	"owner": "BBN Technologies Corporation",
	"publication_number": "07218633",
	"publication_date": "2007-05-15",
	"application_number": "10894406",
	"application_date": "2004-07-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for and methods of administration of access control to numerous resources and objects",
	"summary": "",
	"abstract": "Described are systems and methods used for the administration of access control to numerous resources and objects. An administrator may control access to resources and objects in accordance with defined rules using an u201cobject-centricu201d view. A template may be used for creating and managing access policies to large numbers of resources. The template may use parameters to define instances of a template. Parameters may be used to define variations of the template. Access privileges of a resources may be inherited in accordance with a hierarchy.",
	"url": null,
	"owner": "Bea Systems Inc.",
	"publication_number": "07197764",
	"publication_date": "2007-03-27",
	"application_number": "10186570",
	"application_date": "2002-07-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for information lifecycle workflow integration",
	"summary": "",
	"abstract": "In embodiments, a system and method for submitting information to a lifecycle in a virtual content repository (VCR) is provided that includes defining the lifecycle wherein the definition includes a plurality states and one or more transitions to interconnect and impose an order on the plurality of states, providing to a first process access to the lifecycle wherein the first process can cause the information to transition from a first state of the plurality of states to a second state of the plurality of states according to a first transition of the one or more transitions, wherein the information is accessible through a logical namespace that encompasses the VCR, and wherein the information can include at least one of: content and schema information.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07236990",
	"publication_date": "2007-06-26",
	"application_number": "10915506",
	"application_date": "2004-08-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for and method of storing and elaborating user preferences",
	"summary": "",
	"abstract": "The invention provides a method, system, and computer program product for storing and elaborating user preferences for objects in response to a user's name. The invention associates a user's name with an entitlement expression that includes a reference to at least one membership map having preference information regarding the preference objects and associates with the preference objects a unique identifier that acts as an index into each membership map. The entitlement expression is evaluated for the user's name to determine a list of preferred objects for that user. The evaluation includes looking up the preference object's membership information in at least one membership map of preference using the preference object's unique identifier. The invention may further include at least one preferred group having a name, zero or more objects that are members of the preferred group, and a membership map for determining whether a particular object is a member of the group. The entitlement expression then refers to at least one membership map by including at least one group name in the entitlement expression.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07263516",
	"publication_date": "2007-08-28",
	"application_number": "10078914",
	"application_date": "2002-02-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application server and method to perform hierarchical configurable data manipulation",
	"summary": "",
	"abstract": "Clients using standard software protocols may access a manipulation application server for manipulation service on data via a number of methods including Internet applications, a Java RMI server, a CORBA gateway server and graphical screen interphase applications. The manipulation server provides manipulation service on the data based on dynamically maintained, centrally stored manipulation functions.",
	"url": null,
	"owner": "BellSouth Intellectual Property Corp.",
	"publication_number": "07191209",
	"publication_date": "2007-03-13",
	"application_number": "09916288",
	"application_date": "2001-07-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application services gateway",
	"summary": "",
	"abstract": "Application services gateways that execute electronic application programs/services allows the application programs/services to be managed and administered out of a network rather than locally. The application services gateways are elements in a services delivery system that execute application programs/services that control or otherwise interact with systems and devices of a home or business such as a heating and cooling system or a security system. The application services gateways have a LAN connection to a communication gateway that in turn communicates over a WAN to a remote services gateway. The remote services gateway channels data from a remote service platform to provide application programs/services and management services over the WAN to the communications gateway where it is then channeled to the application services gateways. The installation and management of the application programs/services residing and/or being executed at the local site on the application services gateways relieves the consumer of such responsibilities.",
	"url": null,
	"owner": "BellSouth Intellectual Property Corporation",
	"publication_number": "07209945",
	"publication_date": "2007-04-24",
	"application_number": "10317419",
	"application_date": "2002-12-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Reusable online survey engine",
	"summary": "",
	"abstract": "A computer system, method, and computer-readable medium for conducting an online survey including one or more questions are provided. A survey database contains the survey questions and data identifying the type of input field that should be provided for responding to each question. When a request is received for a network resource referencing the online survey, the contents of the survey database are utilized to generate the online survey. The survey questions are maintained in the survey database separately from the application code for displaying the survey questions. Only the questions in the survey database need to be modified to provide a new survey. The application code for generating the survey is generic to all surveys and does not need to be modified.",
	"url": null,
	"owner": "BellSouth Intellectual Property Corporation",
	"publication_number": "07158988",
	"publication_date": "2007-01-02",
	"application_number": "10045436",
	"application_date": "2001-11-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for storing large data files",
	"summary": "",
	"abstract": "An enhanced file format to store large quantities of variable-sized data records on a storage medium and to permit efficient access and control over data stored in the enhanced file format. A file format is the structure of a file that defines the way it is stored and laid out on a disk. In a preferred embodiment of the present invention, a file format includes a model directory containing models. Models include element lists comprising element chunks. The element chunks include elements, where elements are variable-sized data records.",
	"url": null,
	"owner": "Bentley Systens, Incorporated",
	"publication_number": "07162479",
	"publication_date": "2007-01-09",
	"application_number": "09929277",
	"application_date": "2001-08-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program product for a dynamically configurable voice portal",
	"summary": "",
	"abstract": "A system, method and computer program product are disclosed for dynamically configuring a speech recognition portal. A session with a user is conducted utilizing a speech recognition portal which provides access to a network during the session. Utterances are received from the user during the session via the speech recognition portal. A speech recognition process is performed on the utterances to interpret the utterances. During the session, one or more aspects of the speech recognition portal are dynamically configured.",
	"url": null,
	"owner": "BeVocal, Inc.",
	"publication_number": "07174297",
	"publication_date": "2007-02-06",
	"application_number": "09802662",
	"application_date": "2001-03-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for on-line financial services using distributed objects",
	"summary": "",
	"abstract": "A system is disclosed for accessing recent financial information from various financial services providers. The system is based on a client/server architecture so that services are accessible from a variety of presentation tools. Communications between clients and servers are accomplished using u201cInterfacesu201d that group operations and attributes for various services. The system uses the TCP/IP protocol suite so financial services are available at any time and from any location.",
	"url": null,
	"owner": "Block Financial Corporation",
	"publication_number": "07296065",
	"publication_date": "2007-11-13",
	"application_number": "11306170",
	"application_date": "2005-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Location-aware fitness training device, methods, and program products that support real-time interactive communication and automated route generation",
	"summary": "",
	"abstract": "A portable fitness device includes a global positioning system (GPS) receiver that receives GPS signals, a wireless wide-area network transmitter supporting communication over-the-air to a wireless communication network, and a processing unit coupled to the GPS receiver and the wireless wide-area network transmitter. The processing unit receives the time-stamped waypoints from the GPS receiver and determines athletic performance information and route information from the time-stamped waypoints. The processing unit further outputs at least one of the athletic performance information and the route information to the wireless communication network during a human fitness activity via the wireless wide-area network transmitter.",
	"url": null,
	"owner": "Bones In Motion, Inc.",
	"publication_number": "07292867",
	"publication_date": "2007-11-06",
	"application_number": "10759289",
	"application_date": "2004-01-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for providing services and virtual programming interface",
	"summary": "",
	"abstract": "data representing results of the selection of tests may be accessed by the customer via a communication network and/or transmitted to the customer.",
	"url": null,
	"owner": "Bridicum A/S",
	"publication_number": "07290145",
	"publication_date": "2007-10-30",
	"application_number": "10470460",
	"application_date": "2001-01-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data entry for personal computing devices",
	"summary": "",
	"abstract": "In one aspect of the invention, the user can rapidly enter and search for text through a combination of entering one or more characters (a partial text entry) on a digitally displayed keyboard with a pointing device and using a search list to display a list of selectable completion candidates based on the partial text entry. The user can select one of the completion candidates in the search list to replace the partial text entry which the user is currently entering. Alternatively, the user can select a completion candidate to be the basis of a search for a refined list of completion candidates. The user can also deactivate the interactive search list, and immediately continue adding to or modifying the current partial text entry, and may re-invoke the search list to further search for completion candidates based on the modified partial text entry.",
	"url": null,
	"owner": "British Columbia Ltd.",
	"publication_number": "07293231",
	"publication_date": "2007-11-06",
	"application_number": "09631101",
	"application_date": "2000-08-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for assigning an identification code",
	"summary": "",
	"abstract": "An identification code is assigned to a user by making a selection from a closed set of possible tokens. The selection is determined algorithmically by user identity data. The format of the identification code may comprise a sequence of natural language words chosen from closed sets and a separator character having a fixed value or a small range of possible values. The closed sets may be programmed in the recognition grammar of a speech interface to secure services such as banking.",
	"url": null,
	"owner": "British Telecommunications plc",
	"publication_number": "07225132",
	"publication_date": "2007-05-29",
	"application_number": "10203788",
	"application_date": "2001-03-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Service provision support system",
	"summary": "",
	"abstract": "A communications service provision support system supports multiple different types of services during a service session. The system when in use comprises a session manager which performs functions generic to each of the multiple different types of services during service sessions. For each of the multiple types of services, the session manager is arranged during a service session to generate event messages indicating at least one discrete change which has just occurred in the session-related status of individual users of the system without any historical data, and to transmit the event messages to an event handler for processing.",
	"url": null,
	"owner": "British Telecommunications plc",
	"publication_number": "07222165",
	"publication_date": "2007-05-22",
	"application_number": "09674073",
	"application_date": "1999-05-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Announced session description",
	"summary": "",
	"abstract": "A method of announcing a description of a media session, for example a multimedia conference, that is to take place over multicast capable links is provided in networks configured for Internet Protocol operation. A modular method of announcing media sessions includes: (a) generating a first base module having a first data structure having user oriented data relevant to the media session; (b) generating at least one media module having a second data structure with media oriented data necessary for a user to receive a respective media stream of the media session; (c) providing a link between the first base module and the at least one media module; and, (d) announcing the media session by making at least the first base module available to potential recipients of the media session.",
	"url": null,
	"owner": "British Telecommunications public limited company",
	"publication_number": "07181526",
	"publication_date": "2007-02-20",
	"application_number": "09830461",
	"application_date": "1999-11-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Reconfigurable service provision via a communication network",
	"summary": "",
	"abstract": "A services provision system provides information services over one or more communications networks and has a software infrastructure divided into domains. Each domain has an intelligent software agent and this community of agents sits in a computing environment represented in each domain by a DPE kernel. The community of agents co-operates to provide service and service management functionality to user. At least one of the agents is reconfigurable to change the functionality the system makes available. Reconfigurability is based on the use of a plurality of reusable software modules, the agent reconfiguring by selecting a new combination of modules. The software modules themselves incorporate rules, or policies, which determine process steps offered by the modules at run-time. These policies are external to the modules and may be loaded at run-time, allowing dynamic modification to functionality of the system. The system as a whole offers functionality associated with using services, providing them and managing them and the reconfigurability allows it to offer the different types of functionality in an efficient way. It also allows access control to functionality at different levels with particularly good security against fraudulent use.",
	"url": null,
	"owner": "British Telecommunications public limited company",
	"publication_number": "RE039717",
	"publication_date": "2007-07-03",
	"application_number": "10732886",
	"application_date": "1996-02-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Adaptive gain control based on echo canceller performance information",
	"summary": "",
	"abstract": "A system and method for provide a stable gain from an adaptive gain control device in a signal path. An echo canceller is also located in the signal path, and is used to provide performance information regarding losses in the signal. This performance information is fed to the automatic gain control device via a connection. The automatic gain control device thereafter uses the performance information to determine a maximum gain that might be provided based upon losses cause by echo conditions. The gain however is limited in order to provide for a stable system. The performance information includes a loss rate that includes a combination of the echo return loss and the echo return loss enhancement.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07164659",
	"publication_date": "2007-01-16",
	"application_number": "10077133",
	"application_date": "2002-02-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Late frame recovery method",
	"summary": "",
	"abstract": "Method of processing a transmitted encoded media data stream is received. If a data element arrives prior to, or at, a predetermined playout deadline, the data element is decoded, the media represented by the decoded data element is played, and the data element is provided to a decoder state machine to update a decoder state. If a data element arrives after the predetermined playout deadline, the data element is provided to the decoder state machine to update the decoder state. In one embodiment, if the specified data element fails to arrive by the playout deadline, a subsequently received data element is saved in memory. Then, if the specified data element arrives after the predetermined playout deadline, the specified data element and the saved, subsequently received, data element are provided to the decoder state machine to update the decoder state.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07177278",
	"publication_date": "2007-02-13",
	"application_number": "10082749",
	"application_date": "2002-02-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for an adaptive multimode media queue",
	"summary": "",
	"abstract": "Embodiments of the invention may provide a method for implementing an adaptive multimode media queue. A mode of operation may be determined for a received media stream based on a sampling rate of the media stream. The mode of operation may be a wideband mode and/or a narrowband mode. Depending on the determined mode, the adaptive multimode media queue may be partitioned into a low band media queue and a high band media queue. A wideband media stream split into a high band and a low band is buffered into the adaptive multimode media queue wherein the high band is stored in the high band media queue, and the low band is stored in the low band media queue. The high band media queue and low band media queue may be a contiguous memory block within the adaptive multimode media queue. The received media stream, which may have different sampled data rates may be buffered within the partitioned adaptive multimode media queue.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07165130",
	"publication_date": "2007-01-16",
	"application_number": "10827771",
	"application_date": "2004-04-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for an integrated VSB/QAM/NTSC/OOB plug-and-play DTV receiver",
	"summary": "",
	"abstract": "Certain embodiments of the invention may be found in a method and system for a vestigial side band (VSB), quadrature amplitude modulation (QAM), NTSC, out-of-band (OOB) receiver that is integrated in a single chip. The single chip integrated digital television (DTV) receiver provides plug and play DTV receiver capability for handling both North American digital cable television and digital terrestrial broadcast television compatible systems. The integrated DTV receiver may receive all standard-definition and high-definition digital formats (SDTV/HDTV) and an on-chip NTSC demodulator handles NTSC video. An output of the NTSC demodulator may be directed to an external broadcast television system committee (BTSC) or Zweiton M decoder, or it may be sent to an on-chip audio BTSC compliant decoder. The single chip integrated DTV receiver may also comprise an integrated out-of-band QPSK receiver, which may be adapted to, for example, handle a CableCard compliant with the CableCard Specification.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07250987",
	"publication_date": "2007-07-31",
	"application_number": "10774037",
	"application_date": "2004-02-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Voice activity detection based on far-end and near-end statistics",
	"summary": "",
	"abstract": "Methods and apparatus of managing a communication system, wherein a decision regarding a level of activity at a first end is made based at least in part on the level of activity at the second end. In one embodiment, the energy level of a first-end audio signal is measured. The first end is declared voice-active if the first-end energy level is greater than or equal to a first threshold value. The first end is declared voice-inactive if the first-end energy level is less than the first threshold value. To determine the value of the first threshold value, the energy level of a second-end audio signal is measured. If the second-end energy level is greater than or equal to a second threshold value, the second end is declared voice-active, in which case the first threshold is maintained at a relatively high level. If the second-end energy level is less than the second threshold value, the second end is declared voice-inactive, in which case the first threshold is maintained at a relatively lower level.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07263074",
	"publication_date": "2007-08-28",
	"application_number": "10076991",
	"application_date": "2002-02-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Voice and data exchange over a packet based network",
	"summary": "",
	"abstract": "A signal processing system which discriminates between voice signals and data signals modulated by a voiceband carrier. The signal processing system includes a voice exchange, a data exchange and a call discriminator. The voice exchange is capable of exchanging voice signals between a switched circuit network and a packet based network. The signal processing system also includes a data exchange capable of exchanging data signals modulated by a voiceband carrier on the switched circuit network with unmodulated data signal packets on the packet based network. The data exchange is performed by demodulating data signals from the switched circuit network for transmission on the packet based network, and modulating data signal packets from the packet based network for transmission on the switched circuit network. The call discriminator is used to selectively enable the voice exchange and data exchange.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07161931",
	"publication_date": "2007-01-09",
	"application_number": "09522184",
	"application_date": "2000-03-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Voice and data exchange over a packet based network with voice detection",
	"summary": "",
	"abstract": "A signal processing system which discriminates between voice signals and data signals modulated by a voiceband carrier. The signal processing system includes a voice exchange, a data exchange and a call discriminator. The voice exchange is capable of exchanging voice signals between a switched circuit network and a packet based network. The signal processing system also includes a data exchange capable of exchanging data signals modulated by a voiceband carrier on the switched circuit network with unmodulated data signal packets on the packet based network. The data exchange is performed by demodulating data signals from the switched circuit network for transmission on the packet based network, and modulating data signal packets from the packet based network for transmission on the switched circuit network. The call discriminator is used to selectively enable the voice exchange and data exchange.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07180892",
	"publication_date": "2007-02-20",
	"application_number": "09654376",
	"application_date": "2000-09-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Voice over internet call center integration",
	"summary": "",
	"abstract": "A telephony server, comprising an application program executing under an operating system, communicating directly with telephony hardware to implement telephony system control, having an application programming interface including a call to an external program also executing under the operating system, the application program supporting a plurality of instances of the external programs simultaneously, each external program implementing call handling logic for at least one voice communications channel. The application program may communicate with a Web server, wherein said server proactively communicates with the user in dependence on an automated analysis of a status of a user's shopping cart, representing items of interest having an unconcluded transaction status, requesting establishment of an interactive voice communication session.",
	"url": null,
	"owner": "Buffalo International, Inc.",
	"publication_number": "07269160",
	"publication_date": "2007-09-11",
	"application_number": "09579370",
	"application_date": "2000-05-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Management system for multimodule multiprocessor machines",
	"summary": "",
	"abstract": "The present invention relates to a global management system for a multimodule, multiprocessor machine (PK). The system is characterized in that it comprises an independent module (SM) dedicated to the global management of a plurality of first modules (M through Mn), the independent module (SM) being connected to a management tool (BUMP) for each of the first modules (M through Mn) by a first specific link supporting a given communication protocol that makes it possible to manage each of the first modules at the startup of the machine, during the running of the machine, and after the machine stops running, the independent module (SM) being connected to each of the first modules via a second link, and the independent module also being globally connected to the multimodule machine (PK) via a physical link of a local area network (LAN) linked to at least two of the first modules (M and M).",
	"url": null,
	"owner": "Bull, SA",
	"publication_number": "07231464",
	"publication_date": "2007-06-12",
	"application_number": "09662893",
	"application_date": "2000-09-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for maximizing and managing test coverage",
	"summary": "",
	"abstract": "A method and system for managing test generation and examination of test coverage so as to most efficiently obtain maximum coverage during test generation. Therefore, in addition to achieving coverage maximization, the present invention also preferably manages test generation in order to increase the efficiency of testing to obtain such coverage maximization. The present invention also preferably provides tactics and/or strategies for generation as part of such management. Thus, coverage providing by test generation and execution is not only measured, but is also preferably obtained in a more efficient manner by enabling the coverage maximization functions to provide feedback and management to the test generation process.",
	"url": null,
	"owner": "Cadence Design (Israel) II Ltd.",
	"publication_number": "07281185",
	"publication_date": "2007-10-09",
	"application_number": "10851134",
	"application_date": "2004-05-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Browsing electronically-accessible resources",
	"summary": "",
	"abstract": "A method of browsing electronically-accessible resources using descriptions of the resources. These descriptions have descriptor components, which have attributes representative of at least two axes of access to the resources. These descriptions also have links to the corresponding resources. The method first reads the descriptions and displays a number of items (). Each one of these items are associated with a corresponding descriptor component of the read description that has an attribute. The method allows the browsing () of the descriptions and their corresponding electronically-accessible resources via the links using the displayed items.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07287018",
	"publication_date": "2007-10-23",
	"application_number": "09493220",
	"application_date": "2000-01-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Directory server tracking tool",
	"summary": "",
	"abstract": "Tracking changes made in a directory server by establishing plural multicast groups for a respective plurality of change categories. Change information is submitted for multicast responsive to a change in the directory server, the change information being submitted to a selected one of the plural multicast groups, for multicast by the selected group, in correspondence to the category of the change. The change information may be submitted to the multicast group utilizing a connectionless protocol. Clients register with at least one of the plural multicast groups in order to obtain the change information.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07197555",
	"publication_date": "2007-03-27",
	"application_number": "09660931",
	"application_date": "2000-09-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generating one or more linear blends",
	"summary": "",
	"abstract": "A method () generates one or more linear blends. Initially, the method has a list of already received one or more fill-paths defining a current linear blend, and a newly received fill-path, where the fill-paths each comprise a single colored parallelogram (eg. ). The method adds () the new fill-path to the list to become the last fill-path in the list, if the difference () in color between the new fill-path and the last fill-path in the list is no greater, in each color channel, than a predetermined threshold value multiplied by the difference in color between the last and second-last fill-paths in the list. The predetermined threshold value is preset to such a value so that the new fill-path will not be added to the list if the new fill-path does not visually form part of the current linear blend. The method repeats this step for each new fill-path received until the aforementioned condition is not satisfied. Then, the method generates () one or more linear blends from the first fill-path in the list to the last fill-path in the list.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07304648",
	"publication_date": "2007-12-04",
	"application_number": "10458329",
	"application_date": "2003-06-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Graphical object group management system",
	"summary": "",
	"abstract": "A graphics rendering system () and method () are disclosed for forming object groups from input objects ( through ). The graphics rendering system () comprises an number of detection schemes ( to ), a managing module () and a rendering module (). Each detection scheme ( to ) has a priority and an associated object group type, and is operative to detect whether an object forms part of an object group of the associated object group type. The managing module () passes data describing a received input object to at least one of the detection schemes ( to ), and receives notification from the detection scheme(s) whether the object forms part of the object group(s). The managing module () then determines whether one or more of the object groups are completely formed, where at least partly formed object groups form a list. A completely formed object group is passed by the managing module () to the rendering module () for rendering based on the priorities of the detection schemes associated with the object group types of the object groups in the set. The above avoids the need for complex inter-detection scheme communication through the management of graphic objects, detection schemes and their priorities.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07274379",
	"publication_date": "2007-09-25",
	"application_number": "10807101",
	"application_date": "2004-03-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hash compact XML parser",
	"summary": "",
	"abstract": "A method of parsing a markup language document comprising syntactic elements is disclosed, said method comprising, for one of said syntactic elements, the steps of identifying () a type of the element, processing () the element by determining a hash representation thereof if said type is a first type, and augmenting () an at least partial structural representation of the document using the hash representation if said type is said first type.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07281205",
	"publication_date": "2007-10-09",
	"application_number": "09893645",
	"application_date": "2001-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Image processing apparatus, control method of image processing apparatus, and storage medium storing therein control program for image processing apparatus",
	"summary": "",
	"abstract": "An image processing apparatus which can execute an image process which is desired by a client while minimizing a connection time and an interactive communication between the client and the image processing apparatus is provided. To accomplish the above object, according to the invention, there is provided an image processing apparatus for receiving an agent including an operation train via a network and allowing an image processing unit to execute image processes. This apparatus is constructed to include: a control unit for controlling the image processing unit; an interpreting unit for interpreting the operation train of the agent and a message output unit for outputting a message to the control unit in response to the operation train interpreted by the interpreting unit.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07259883",
	"publication_date": "2007-08-21",
	"application_number": "10727621",
	"application_date": "2003-12-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for generating a print command capable of generating improved stable throughput",
	"summary": "",
	"abstract": "The present invention is directed to providing, in an apparatus and method for generating print commands suited to a particular printing apparatus, both high-speed printing of simple pages that are relatively easily processed as well as improved continuous throughput of complex pages that are relatively difficult to process. The apparatus obtains and integrates data size and command numbers from the generated print commands and switches the print command generation from page units to band units when it appears likely that the page memory will be exceeded, thus mixing page unit print commands and band unit print commands in the same page to achieve improved throughput.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07161702",
	"publication_date": "2007-01-09",
	"application_number": "10370765",
	"application_date": "2003-02-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for processing information",
	"summary": "",
	"abstract": "A printer driver generates output data adapted to the processing power of a printer. When the printer driver receives a draw command from an operating system, a complexity value of the draw command is calculated depending on the type of the command and/or the number of contour points of a clipping area included as a parameter of the command. A processing mode is selected depending on the complexity relative to first and second threshold values. In a first processing mode, a draw command to draw image data and a clip command are simply output. In a second processing mode, a draw command to draw image elements generated in accordance with a clip command is output. In a third processing mode, mask data is generated from a clip command, and a command to calculate the logical AND between image data and the mask data is output.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07259770",
	"publication_date": "2007-08-21",
	"application_number": "10977287",
	"application_date": "2004-10-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of rendering graphical objects",
	"summary": "",
	"abstract": "A method of rendering a plurality of graphical objects, each having a predetermined object outline, a predetermined z-order, and an associated fill, the object outline for a particular object defining an area in which the particular object is filled, includes the steps of (a) combining each of the objects to form a grouped object, the grouped object having a grouped object outline and an associated compound fill, the compound fill comprising a plurality of fill data structures describing the fills associated with the graphical objects, and (b) rendering the grouped object according to the grouped object outline, wherein one or more fills used to render the grouped object are determined according to the compound fill. The rendering includes the steps of, at a current pixel, (b)(i) calculating a position of the current pixel relative to a tracking point defined for the compound fill, (b)(ii) determining a current one of the fills using the calculated relative position, and (b)(iii) generating a color for the pixel using the determined current fill.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07277095",
	"publication_date": "2007-10-02",
	"application_number": "11071152",
	"application_date": "2005-03-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Print control apparatus and method, and print system",
	"summary": "",
	"abstract": "In this invention, a combined job obtained by combining a plurality of jobs is authenticated as a single job. According to the arrangement of this invention, when print jobs are to be spooled, these jobs are transferred from a dispatcher to a spooler where the jobs are combined. Upon reception of a print instruction, the print job is read out from a spool file, transferred from a despooler to a graphic engine again, and transferred from the dispatcher to a printer driver. At this time, the printer driver issues an authentication request in printing to a job accounting client. Thus, only one authentication request suffices for one combined job.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07286250",
	"publication_date": "2007-10-23",
	"application_number": "09840894",
	"application_date": "2001-04-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Print data processing apparatus, print control method, and print control program",
	"summary": "",
	"abstract": "A print control method performs print processing in an optical operation mode that is automatically determined in response to a print request from an application program. The print control method queries a user about evaluation of print speed or the result of printing obtained in the print processing, and obtains a response to the query. When performing print processing in response to a later print request, the operation mode is determined based on the response. The print control method generates print data in intermediate condition which is not dependent on a particular page description language, and performs print processing based on the result of analyzing the print data.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07253914",
	"publication_date": "2007-08-07",
	"application_number": "09986254",
	"application_date": "2001-11-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Print processing and method for banding areas and pages of each physical color",
	"summary": "",
	"abstract": "To reduce a calculation load upon banding reproduction, a printer driver transfers draw information sent from a GDI to a draw discriminating unit. The draw discriminating unit confirms that a filtering process which needs various background colors such as ROM process or u03b1 blending process is not included for the drawing images constructing an intermediate language. The printer driver transfers the draw information included in an area of one page to a drawing unit. The drawing unit issues a physical color converting request of color information included in the drawing image to a color converting unit. In response to the physical color converting request of the color information included in the drawing image issued from the drawing unit, the color converting unit transfers information of only a physical color component which is at present being processed from the color information included in the drawing image to the drawing unit.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07170616",
	"publication_date": "2007-01-30",
	"application_number": "10322745",
	"application_date": "2002-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Printer maintenance scheme for a network centric printing system",
	"summary": "",
	"abstract": "Supporting printer maintenance in a network environment having a server, at least one network device and a printer, the server containing a plurality of printer configuration files, wherein the printer maintenance is supported by accessing one of the printer configuration files which corresponds to the printer, the configuration file including a plurality of printer maintenance function names and a plurality of printer maintenance commands corresponding to the printer maintenance function names, generating an HTML-based page corresponding to the printer, the HTML-based page containing each of the printer maintenance function names from the accessed printer configuration file, and sending the HTML-based page to the network device, wherein, upon selection in the network device of one of the printer maintenance function names in the HTML-based page, the server sends to the printer the printer maintenance command which corresponds to the selected printer maintenance function name.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07171442",
	"publication_date": "2007-01-30",
	"application_number": "09664550",
	"application_date": "2000-09-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Printing control apparatus and printing control method",
	"summary": "",
	"abstract": "Even when printing cannot be executed by only the common setting included in a printing designation document, in order to generate the printing setting information native in a printer in accordance with the common general designation information included in a printing designation document and to execute the processing of a printing document in accordance with the information, a printing control method inputs a printing document and a printing designation document for specifying the processing content of the printing document, specifies a printer for processing the printing document in accordance with the input printing designation document, and obtains the native printing setting information which can be set to a control program in the printing control apparatus for controlling the specified printer, and controls the processing of transmitting a printing designation according to native printing setting information obtained by the obtainment step to the printer through the printing control program.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07161693",
	"publication_date": "2007-01-09",
	"application_number": "10242626",
	"application_date": "2002-09-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Printing system and printing apparatus",
	"summary": "",
	"abstract": "To provide a printing system and a printing apparatus which can ensure high-speed, normal printing with small memory requirements even when lots of print commands are sent to a printer. The printing apparatus includes a print mode determination unit which judges whether intermediate-language data can fit in a page memory when print command data is converted in normal print mode and selects the normal print mode if the data can fit in, but selects compressed print mode if the data cannot fit in. Furthermore, the print mode determination unit includes a data reprocessing unit which, when the compressed print mode is selected, reduces any compressible part of intermediate-language data which corresponds to fine-gradation image data in normal print mode using a compression/decompression process, output gradation conversion process, clipping process, or reversible compression process whichever is applicable before storing it again in the page memory.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07229224",
	"publication_date": "2007-06-12",
	"application_number": "10793911",
	"application_date": "2004-03-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure printing with authenticated printer key",
	"summary": "",
	"abstract": "Securely storing a public key for encryption of data in a computing device by using a user-specific key pair which is securely stored in the computing device, including receiving a target public key corresponding to a target device, obtaining a user-specific key pair from a secure registry, using a user-specific private key from the user-specific key pair to create a target key verifier based on the target public key, storing the target key verifier and the target public key in a storage area, retrieving the target key verifier and the target public key from the storage area, applying a user-specific public key from the user-specific key pair to the target key verifier for verifying the authenticity of the target public key, and encrypting data with the target public key, if authenticity of the target public key is verified, thereby creating encrypted data for transmission to the target device.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07305556",
	"publication_date": "2007-12-04",
	"application_number": "10010974",
	"application_date": "2001-12-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for detecting unauthorized access using a voice signature",
	"summary": "",
	"abstract": "A method for detecting unauthorized access is provided. The method includes receiving a voice input associated with a request to access an account. A request voice signature corresponding to the voice input associated with the request is generated. An authorized voice signature corresponding to the account is retrieved. The request voice signature corresponding to the voice input is compared with the authorized voice signature corresponding to the account. Unauthorized access is detected in response to the comparison.",
	"url": null,
	"owner": "Capital One Financial Corporation",
	"publication_number": "07224786",
	"publication_date": "2007-05-29",
	"application_number": "10659899",
	"application_date": "2003-09-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for RFID system integration",
	"summary": "",
	"abstract": "A robust system, method and environment for the programming, collection, manipulation, and propagation of RFID data enhances the integration of RFID elements into new and existing enterprise systems.",
	"url": null,
	"owner": "Captech Ventures, Inc.",
	"publication_number": "07267275",
	"publication_date": "2007-09-11",
	"application_number": "10981168",
	"application_date": "2004-11-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer-aided modeling and manufacture of products",
	"summary": "",
	"abstract": "Disclosed are modeling and process control techniques for manufacturing products. More specifically, computer-aided modeling techniques are described that allow the manufacturer to predict a profile for a multivariate output that is necessary to achieve a target performance property for a manufactured product.",
	"url": null,
	"owner": "Cargill, Inc.",
	"publication_number": "07233834",
	"publication_date": "2007-06-19",
	"application_number": "10884622",
	"application_date": "2004-07-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of securing programmable logic configuration data",
	"summary": "",
	"abstract": "The present invention relates to a secure method of distributing configuration data for a programmable logic device (PLD). The configuration data is encrypted to generate encrypted configuration data. A decryption key is encrypted using a silicon key. The encrypted configuration data and the encrypted decryption key are transferred to a PLD. Within the PLD, the encrypted decryption key is decrypted using the silicon key. Then, also within the PLD, the encrypted configuration data is decrypted using the decryption key to recover the configuration data. The PLD is then configured using the configuration data. The silicon key may be communicated to the PLD by tying predetermined input pins to an active high voltage level or signal ground, to form a binary code.",
	"url": null,
	"owner": "Carnegie Mellon University",
	"publication_number": "07197647",
	"publication_date": "2007-03-27",
	"application_number": "10260171",
	"application_date": "2002-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for prioritizing network services",
	"summary": "",
	"abstract": "A method, system and computer program product of prioritizing network services is provided. Such prioritization may comprise a better level of service, more timely system response and/or preferential treatment of traffic. In an embodiment, prioritization is controlled by defining modes and levels of prioritization typically based on criteria, such as the value of a transaction, the standing of a user, or the type of transaction. Prioritization can also be established, for example, for a preset length of time or for one or more given transactions. The modes of prioritization may comprise remapping TCP ports to which a communication is directed, remapping (including redirecting) uniform resource locators (URLs) and/or Internet Protocol (IP) addresses to which a communication is directed and/or tagging communications with quality of service (QoS) information. The levels of prioritization define the type(s) of priority service offered to a user, such as timeliness of system response and preference of traffic treatment, and may be arbitrarily defined.",
	"url": null,
	"owner": "Catchfire Systems, Inc.",
	"publication_number": "07162540",
	"publication_date": "2007-01-09",
	"application_number": "09855021",
	"application_date": "2001-05-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software, systems and methods for managing a distributed network",
	"summary": "",
	"abstract": "A system and method for managing network bandwidth consumption. The system may include an agent module loadable on a networked computer and configured to aid in managing bandwidth consumption within a network. The agent module is configured to obtain an allocation of network bandwidth usable by the networked Computer, and is further configured to sub-allocate such allocation among multiple bandwidth-consuming components associated with the networked computer. The system may further include multiple such agent modules loadable on plural networked computers, and a control module configured to interact with each of the agent modules to dynamically manage bandwidth usage by the networked computers.",
	"url": null,
	"owner": "Centrisoft Corporation",
	"publication_number": "07260635",
	"publication_date": "2007-08-21",
	"application_number": "10369259",
	"application_date": "2003-02-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Fault injection methods and apparatus",
	"summary": "",
	"abstract": "A method of testing a target in a network by fault injection, includes: defining a transaction baseline; modifying at least one of an order and a structure of the transaction baseline to obtain a modified transaction with malformed grammar; and transmitting the modified transaction to a target. The method may further include, receiving a feedback from the target to determine fault occurrence. An apparatus for testing a target in a network by fault injection, includes: a driver configured to generate patterns, where a pattern can generate a plurality of packets for transmission to the target, the pattern being represented by an expression with a literal string and a wild character class; and a network interface coupled to the driver and configured to transmit and receive network traffic.",
	"url": null,
	"owner": "Cenzic, Inc.",
	"publication_number": "07185232",
	"publication_date": "2007-02-27",
	"application_number": "10087000",
	"application_date": "2002-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Reliance manager for electronic transaction system",
	"summary": "",
	"abstract": "An electronic transaction system includes an authority issuing electronic signals representing subscriber assurance of an attribute of a subscriber to the system; and a reliance server obtaining electronic signals representing information regarding the subscriber assurance issued by the issuing authority, the reliance server issuing electronic signals representing a signed warranty offer to a relying party, the signed warranty offer being based at least on the subscriber attribute assurance, wherein the reliance server only provides the signed warranty offer if the relying party is authorized to make a request for said warranty.",
	"url": null,
	"owner": "Certco, Inc.",
	"publication_number": "07177839",
	"publication_date": "2007-02-13",
	"application_number": "09492459",
	"application_date": "2000-01-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data handling in IPSec enabled network stack",
	"summary": "",
	"abstract": "A method for providing cryptographic functions to data packets at the PPP layer of a network stack is presented. The method includes the steps of intercepting PPP datagrams having at least one encapsulated IP packet en route along the protocol stack; decapsulating the PPP datagrams to retrieve the encapsulated IP packet, determining whether to process the IP packet by modifying the IP packet to provide the cryptographic functions, and encapsulating the IP packet for transmission to a next layer of the network stack.",
	"url": null,
	"owner": "Certicom Corp.",
	"publication_number": "07243225",
	"publication_date": "2007-07-10",
	"application_number": "09903612",
	"application_date": "2001-07-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Disabling header compression over point-to-point protocol (PPP)",
	"summary": "",
	"abstract": "A method and system for manipulating packet header compression parameters, by substituting at least one instruction set associated with a PPP negotiation packet at the PPP layer of a protocol stack, the at least one instruction set for use in establishing a communication protocol and channel between a pair of correspondents. The method includes the steps of a software module coupled to a first correspondent examining all PPP negotiation packets from a second correspondent; the software module determining whether a first instruction set is present in the PPP negotiation packet; the software module discarding said first instruction set and replacing the first instruction set with a second instruction set; and at the second correspondent receiving the second instruction set associated with a communication protocol information.",
	"url": null,
	"owner": "Certicom Corp.",
	"publication_number": "07257116",
	"publication_date": "2007-08-14",
	"application_number": "09918646",
	"application_date": "2001-08-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for managing contacts in an instant messaging environment",
	"summary": "",
	"abstract": "A computer-implemented method is described for instant messaging comprising: categorizing two or more instant messaging contact names into a single meta contact; receiving a request to transmit an instant message directed to the meta contact; selecting one of the two or more instant messaging contact names within the meta contact to which to transmit the instant message based on a specified prioritization scheme.",
	"url": null,
	"owner": "Cerulean Studios, LLC",
	"publication_number": "07275215",
	"publication_date": "2007-09-25",
	"application_number": "10209586",
	"application_date": "2002-07-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Accessing network device data through user profiles",
	"summary": "",
	"abstract": "The present invention provides a method and apparatus for accessing network device data through user profiles. User profiles may be created by network administrators, and the corresponding user profile data may be stored in a central network management system (NMS) database. When a user requests data from a particular network device, the NMS utilizes the user profile data in the central database to access the network device and retrieve the required network device data. Since the user profile data is stored in a central database, the user may log into the NMS from any location and connect to any network device in the network. Further, the user profile data may be used to limit which network devices and which network device configured resources the user may access as well as the user's access level.",
	"url": null,
	"owner": "CIENA Corporation",
	"publication_number": "07266595",
	"publication_date": "2007-09-04",
	"application_number": "09703856",
	"application_date": "2000-11-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Common command interface",
	"summary": "",
	"abstract": "A common command interface (CCI) provides an interface abstraction allowing network device applications to maintain one set of code for each command regardless of which command interface (e.g., web, CLI, NMS, etc.) initiates the command. That is, the command code in each application may be shared across multiple command interfaces. The interface abstraction allows new applications including additional commands to be added to a network device and existing applications to be dynamically upgraded to include new and/or modified commands without having to modify the CCI. Thus, the network device may provide the increased flexibility of having multiple command interfaces while minimizing the complexity required to maintain commands across those interfaces. In addition, a community command interface may be used to connect the common command interfaces of multiple network devices.",
	"url": null,
	"owner": "Ciena Corporation",
	"publication_number": "07225244",
	"publication_date": "2007-05-29",
	"application_number": "09832436",
	"application_date": "2001-04-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Decoupling processes from hardware with logical identifiers",
	"summary": "",
	"abstract": "The present invention provides methods and apparatus for decoupling functional processes, such as network protocol applications and device drivers, from hardware resources through the use of logical resources. Logical resources are created to represent the hardware resources within a computer system and a map is created which associates each logical resource with each hardware resource. Functional processes are associated with the logical resources instead of with the hardware resources such that a functional process may be moved to a different hardware resource simply by changing the map to associate the logical resource associated with the functional process with a different hardware resource.",
	"url": null,
	"owner": "Ciena Corporation",
	"publication_number": "07225240",
	"publication_date": "2007-05-29",
	"application_number": "09574437",
	"application_date": "2000-05-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network device identity authentication",
	"summary": "",
	"abstract": "The present invention provides a method and apparatus for authenticating the identities of network devices within a telecommunications network. In particular, multiple identifiers associated with a network device are retrieved from and used to identify the network device. Use of multiple identifiers provides fault tolerance and supports full modularity of hardware within a network device. Authenticating the identity of a network device through multiple identifiers allows for the possibility that hardware associated with one or more of the identifiers may be removed from the network device. For example, a network device may still be automatically authenticated even if more than one card within the device are removed as long as at least one card corresponding to an identifier being used for authentication is within the device during authentication. In addition, the present invention allows for dynamic authentication, that is, the NMS is able to update its records, including the identifiers, over time as cards (or other hardware) within network devices are removed and replaced.",
	"url": null,
	"owner": "Ciena Corporation",
	"publication_number": "07240364",
	"publication_date": "2007-07-03",
	"application_number": "09711054",
	"application_date": "2000-11-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network device including dedicated resources control plane",
	"summary": "",
	"abstract": "The present invention provides a method and apparatus for improving transmission of control information within a network device and between multiple connected network devices. Specifically, a control path is included within a network device that is independent of the data path and dedicates control path resources to each distributed processor within the network device. Dedicating resources insures that each processor has sufficient bandwidth on the control plane to transmit control information at high frequencies. This may prevent starvation of data transmissions during periods of high control information transfers and may also reduce the likelihood or further spreading of control information storms when one or more network devices in a network experiences a failure.",
	"url": null,
	"owner": "CIENA Corporation",
	"publication_number": "07263597",
	"publication_date": "2007-08-28",
	"application_number": "09838320",
	"application_date": "2001-04-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Processing network management data in accordance with metadata files",
	"summary": "",
	"abstract": "The present invention provides a management system internal to a network device that sends various management data files and corresponding metadata files to a management system external to the network device. The external management system then uses the metadata files to process the management data files. As a result, the external management system dynamically learns how to manage a network device through the metadata files. Moreover, new types of management data filesu2014perhaps corresponding to new hardware within the network deviceu2014may be sent from the internal management system to the external management system along with corresponding new metadata files and the external management system will be able to process the new management files without having to be re-booted or restarted. In addition, multiple network devices coupled with the external management system may send various different types of management data to the external management system and using the metadata files from each network device, the external management system will be able to process the various management data types. In one embodiment, the metadata files are JAVA class files.",
	"url": null,
	"owner": "CIENA Corporation",
	"publication_number": "07222147",
	"publication_date": "2007-05-22",
	"application_number": "09637800",
	"application_date": "2000-08-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Providing network management access through user profiles",
	"summary": "",
	"abstract": "The present invention provides a method for managing telecommunications networks through user profiles that establish management capabilities and lists of network devices capable of being managed through each user profile. Through profiles, users may be given controlled access to configure network devices, provision services or simply view the network devices, services or portions thereof. For example, customers may be enabled to view services dedicated to their particular networks while being simultaneously prevented from viewing services particular to other customer's networks. This provides security while enabling controlled customer network management. In addition, profiles may be used to limit the management capabilities of network managers to only those network devices and capabilities for which each network manager is responsible and authorized. This controlled access again provides security and may prevent network outages due to inexperienced network management errors as well as simplify network management for each level of network manager. The user profiles may also be used to customize the user interface each user accesses to improve efficiency and ease of network management. Profiles may also be used to establish local network connections and set up appropriate network communication channels to improve the efficiency of user access.",
	"url": null,
	"owner": "CIENA Corporation",
	"publication_number": "07280529",
	"publication_date": "2007-10-09",
	"application_number": "09632954",
	"application_date": "2000-08-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Aircraft data communications services for users",
	"summary": "",
	"abstract": "A method and system provide efficient, flexible, and convenient data communication services for users over public wireless systems. The system includes a data communication server, having a plurality of interface units, for facilitating data communication between a moving object and one or more ground terminals via a radio communication path. The data communication server establishes the radio communication path over one of a plurality of wireless data networks including packet data networks and satellite data networks and preferably includes a pre-determined software architecture.",
	"url": null,
	"owner": "Cingular Wireless II, LLC",
	"publication_number": "07177939",
	"publication_date": "2007-02-13",
	"application_number": "09884724",
	"application_date": "2001-06-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and systems for providing location-based services within a wireless network",
	"summary": "",
	"abstract": "A system for providing wireless telecommunications services to mobile devices includes structure and functionality for location-based services, and includes both server and client/mobile device apparatuses. One apparatus includes a data store storing at least a first record associated with a first wireless device or a second record associated with a second wireless device. A computer is coupled to the data store and is configured to receive a request from the first wireless device to obtain location information associated with the second wireless device. The computer is configured to receive a change location privileges request, and to update the first or second records in the data store based on the received change request. Other apparatuses provide additional structures and functions.",
	"url": null,
	"owner": "Cingular Wireless II, LLC",
	"publication_number": "07236799",
	"publication_date": "2007-06-26",
	"application_number": "10325270",
	"application_date": "2002-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data structures and methods for location-based services within a wireless network",
	"summary": "",
	"abstract": "A system for providing wireless telecommunications services to mobile or wireless devices includes data structures and related functionality. One data structure includes at least one location-based services data structure for a wireless device or a user of the wireless device. The location-based services data structure includes first and second data structures representing tables of friends. The first data structure represents a table of friends who may receive a location of the user's wireless device, while the second data structure represents a table of friends who have permitted the user to receive a location of wireless devices associated with them. Various other data structures, functionality and systems are disclosed.",
	"url": null,
	"owner": "Cingular Wireless II, LLC",
	"publication_number": "07181227",
	"publication_date": "2007-02-20",
	"application_number": "10325032",
	"application_date": "2002-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Efficient synchronous and asynchronous database replication",
	"summary": "",
	"abstract": "A put transaction is intercepted and communicated from an application to a database driver. The transaction is committed to a target database of the transaction and a backup database of the target database when both the target database and the backup database are available. When one of the target database and the backup database is an unavailable database, the transaction is recorded in a file. When the unavailable database becomes an available database, the transaction is committed to the available database.",
	"url": null,
	"owner": "Cingular Wireless II, LLC",
	"publication_number": "07158998",
	"publication_date": "2007-01-02",
	"application_number": "10209754",
	"application_date": "2002-07-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for formatting information for a communication",
	"summary": "",
	"abstract": "The invention provides an apparatus and method for formatting information for a communication. The apparatus has an interface to receive an identifier that identifies at least one physical property or capability of a communication device or an identifier that identifies at least one service to be provided to the user of the communication device, and further includes a controller that formats information to be sent to the communication device based on the identified physical property or capability of a communication device or based on the identified service to be provided to the user of the communication device.",
	"url": null,
	"owner": "Cingular Wireless II, LLC",
	"publication_number": "07277718",
	"publication_date": "2007-10-02",
	"application_number": "10199100",
	"application_date": "2002-07-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for providing location-based services in a wireless network, such as locating individuals and coordinating meetings",
	"summary": "",
	"abstract": "A system for providing wireless telecommunications services to mobile devices includes structure and functionality to obtain a request from a first mobile device for a meeting with a person associated with a second mobile device. The system automatically determines locations of the first and second mobile devices, and automatically provides information to at least the first or second mobile device regarding a meeting location based at least in part on the determined location of the first or second mobile device. The system can determine a local time, or time zone, of the first or second mobile devices. Further, with one or a minimum number of menu choices, a user of a mobile device may readily receive a location of a user or another mobile device.",
	"url": null,
	"owner": "Cingular Wireless II, LLC",
	"publication_number": "07203502",
	"publication_date": "2007-04-10",
	"application_number": "10324984",
	"application_date": "2002-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for providing location-based services in a wireless network, such as modifying locating privileges among individuals and managing lists of individuals associated with such privileges",
	"summary": "",
	"abstract": "A system for providing wireless telecommunication services to mobile devices includes structure and functionality to manage permissions for location-based services. One method includes receiving a stop request with respect to one mobile device to stop other mobile devices from receiving location information with respect to the one mobile device. The method updates a central database based on the received stop request, and prohibits other mobile devices from receiving location information with respect to the one mobile device until a request to remove the stop is received. Other methods and systems are disclosed.",
	"url": null,
	"owner": "Cingular Wireless II, LLC",
	"publication_number": "07190960",
	"publication_date": "2007-03-13",
	"application_number": "10325566",
	"application_date": "2002-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for providing a user-customized electronic book",
	"summary": "",
	"abstract": "One embodiment of the present invention enables an individual to selectively choose an area(s) of interest and automatically scan a database to intelligently retrieve the relevant information and filter out the irrelevant information. Next, the relevant information may then be collated and made available in an electronic u201cbooku201d format for ease of distribution. For example, a network administrator may go to his/her company's web page and utilize the present embodiment to download an electronic u201cbooku201d pertaining to troubleshooting his/her particular network configuration. It is appreciated that the present embodiment may be utilized in a broad number of different areas since it covers any application where there may be a huge database of information and only a part of which may be of interest to selected parties. For example, the present embodiment may be quite useful in areas such as, but not limited to, pharmaceutical, manufacturing, medical, defense, and computer networking.",
	"url": null,
	"owner": "Cisco Technology",
	"publication_number": "07236966",
	"publication_date": "2007-06-26",
	"application_number": "10095371",
	"application_date": "2002-03-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Access control by a real-time stateful reference monitor with a state collection training mode and a lockdown mode for detecting predetermined patterns of events indicative of requests for operating system resources resulting in a decision to allow or block activity identified in a sequence of events based on a rule set defining a processing policy",
	"summary": "",
	"abstract": "A Stateful Reference Monitor can be loaded into an existing commercial operating system, and then can regulate access to many different types of resources. The reference monitor maintains an updateable storage area whose contents can be used to affect access decisions, and access decisions can be based on arbitrary properties of the request.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07290266",
	"publication_date": "2007-10-30",
	"application_number": "10071328",
	"application_date": "2002-02-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and methods for providing an audibly controlled user interface for audio-based communication devices",
	"summary": "",
	"abstract": "The invention is directed to techniques for providing an audibly controlled interface for a user of a limited audio-based communication device, for example, a telephony device such as a desktop telephone or a cellular telephone. The communication device has an interface connection with a proxy browser. The user initially accesses the device, such as by picking up the handset, and the proxy browser provides a communication path over a network to a call services application on an application server. The application server provides a response to the initial access signal. The proxy browser receives the response from the application server and plays back an audio output based on the response to the communication device for the user. The user can then respond with a request to the call services application to place an outbound call or to initiate another service provided by the application server via the proxy browser.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07308484",
	"publication_date": "2007-12-11",
	"application_number": "09608232",
	"application_date": "2000-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Arrangement for accessing an IP-based messaging server by telephone for management of stored messages",
	"summary": "",
	"abstract": "A method in an application server for accessing a messaging server includes receiving, from a browser configured for dynamic control of audio operations, an HTTP request having an audio file that stores received voice signals specifying a messaging operation; identifying the messaging operation in the application server by interpreting the audio file; outputting a function call specifying the messaging operation to the messaging server according to IP protocol; receiving from the messaging server a response to the function call that specifies a stored message; and sending an HTML page to the browser for playback of a second audio file representing the stored message. The step of receiving from the messaging server a response includes receiving the stored message as one of an e-mail message and a voice mail message.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07233982",
	"publication_date": "2007-06-19",
	"application_number": "11034757",
	"application_date": "2005-01-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatically generating software tests based on metadata",
	"summary": "",
	"abstract": "A method of automatically generating tests for a software program based on metadata that is used to control the operational behavior of a software product is disclosed. A definition is received of a page hierarchy and security characteristics associated with the software program and representing output pages that are generated by the program in operation. The definition is parsed to identify information associated with one or more pages of the program. Automatically, instructions in a test language are generated. The instructions, when executed by a testing system, cause the testing system to perform the steps of: navigating through the page hierarchy and displaying each of the pages; determining whether each of the pages is properly displayed by the program; and generating output indicating whether each of the pages is properly displayed.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07272822",
	"publication_date": "2007-09-18",
	"application_number": "10246340",
	"application_date": "2002-09-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Browser-based arrangement for developing voice enabled web applications using extensible markup language documents",
	"summary": "",
	"abstract": "A unified web-based voice messaging system provides voice application control between a web browser and an application server via an hypertext transport protocol (HTTP) connection on an Internet Protocol (IP) network. The application server executes the voice-enabled web application by runtime execution of a first set of extensible markup language (XML) documents that define the voice-enabled web application to be executed. The application server generates an HTML form specifying selected application parameters from an XML document executable by the voice application. The HTML form is supplied to a browser, enabling a user of the browser to input or modify application parameters for the corresponding XML document into the form. The application server inserts the received input application parameters into the XML document, and stores the document.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07233902",
	"publication_date": "2007-06-19",
	"application_number": "10422916",
	"application_date": "2003-04-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic configuration and up-dating of integrated distributed applications",
	"summary": "",
	"abstract": "An interactive reporting and modifying system and method for notifying clients of changes within a computer network, while allowing the clients to dynamically alter selected configuration, control, diagnostic, status and other network parameters. Applications and processes within the computer network first register with a process manager. A persistent, continuous connection allows a client to receive and display notifications from the process manager following the registration of new applications and processes. A topology server similarly notifies the client of the addition or removal of new devices. Thereafter, the client may request a configuration, control, diagnostic or debug object from a selected application or process or device. The requested object or a representation thereof is displayed and may be manipulated by the client, thereby modifying its variables. These modifications are then dynamically implemented at the respective application or process or device.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07200651",
	"publication_date": "2007-04-03",
	"application_number": "09346789",
	"application_date": "1999-07-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Evolving entries within persistent stores in a scalable infrastructure environment",
	"summary": "",
	"abstract": "A method of providing evolvable entries in a persistent store is described. The method includes receiving an entry from an agent destined for the persistent store. The entry is converted to a versioned entry inserted into the persistent store. If a read or take operation is instituted, the versioned entry is read from the persistent store and converted to an entry.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07185027",
	"publication_date": "2007-02-27",
	"application_number": "10194870",
	"application_date": "2002-07-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Fully distributed, scalable infrastructure, communication system",
	"summary": "",
	"abstract": "A fully distributed, scalable infrastructure, communication system. The system comprises at least on Space, at least one double agent and at least one non-space specific double agent. Devices and applications that wish to communicate with other members of the Community or outside of the Community insert objects into the Space. The Space then publishes the presence of that object to subscribed members of the community. The double agents are capable of communicating with any desired protocols on one side and the Space protocol on the other. Non-space specific agents handle routing, administrative and other tasks, such as communication between Spaces and Communities.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07246145",
	"publication_date": "2007-07-17",
	"application_number": "09676147",
	"application_date": "2000-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Memory leak detection system and method using contingency analysis",
	"summary": "",
	"abstract": "Systems, methods, apparatus and software can be implemented to detect memory leaks with relatively high confidence. By analyzing memory blocks stored in a memory, implicit and/or explicit contingency chains can be obtained. Analysis of these contingency chains identifies potential memory leaks, and subsequent verification confirms whether the potential memory leaks are memory leaks.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07293142",
	"publication_date": "2007-11-06",
	"application_number": "10827048",
	"application_date": "2004-04-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for determining authentication capabilities",
	"summary": "",
	"abstract": "A method is disclosed for determining the authentication capabilities of a supplicant before initiating an authentication conversation with a client, for example, using Extensible Authentication Protocol (EAP). In one aspect, the method provides for sending, to a supplicant that is requesting access to a computer network subject to authentication of a user of the supplicant, a list of first authentication methods that are supported by an authentication server; receiving, from the supplicant, a counter-list of second authentication methods that are supported by the supplicant; determining how many second authentication methods in the counter-list match the first authentication methods; and performing an authentication policy action based on how many of the second authentication methods match the first authentication methods. Policy actions can include blocking access, re-directing to sources of acceptable authentication methods, granting one of several levels of network access, etc.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07194763",
	"publication_date": "2007-03-20",
	"application_number": "10910006",
	"application_date": "2004-08-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for generating pairwise cryptographic transforms based on group keys",
	"summary": "",
	"abstract": "Group key management techniques are applied to generating pair-wise keys for point-to-point secure communication applications. Nodes participating in a secure communication group each receive a group key and associated policy information. When a first node wishes to establish a secure point-to-point connection to a second node, the first node derives a pairwise key from the group key and policy information, for example, by hashing the group key and information identifying the two nodes. As a result, a pairwise key is generated without exchanging negotiation messages among the two nodes and without expensive asymmetric cryptographic computation approaches.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07234058",
	"publication_date": "2007-06-19",
	"application_number": "10262814",
	"application_date": "2002-10-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for generating pairwise cryptographic transforms based on group keys",
	"summary": "",
	"abstract": "Group key management techniques are applied to generating pair-wise keys for point-to-point secure communication applications. Nodes participating in a secure communication group each receive a group key and associated policy information. When a first node wishes to establish a secure point-to-point connection to a second node, the first node derives a pairwise key from the group key and policy information, for example, by hashing the group key and information identifying the two nodes. As a result, a pairwise key is generated without exchanging negotiation messages among the two nodes and without expensive asymmetric cryptographic computation approaches.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07234063",
	"publication_date": "2007-06-19",
	"application_number": "10229347",
	"application_date": "2002-08-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for selecting and managing wireless network services using a directory",
	"summary": "",
	"abstract": "A method and apparatus are disclosed for modifying a subscription of a subscriber to a telecommunications service based on subscriber information and service information that are stored in a directory repository. A directory-enabled service selection framework is coupled to the directory repository for receiving stored information therefrom. The directory-enabled service selection framework receives a request to identify one or more services to which a subscriber is subscribed, based on a prior request to modify the subscription of the subscriber to the telecommunications service. A list is generated of the one or more services to which the subscriber is currently subscribed, based on group membership of the subscriber, one or more roles occupied by the subscriber, and authorization information associated with the subscriber that is stored in the directory repository. Individual service information is generated for each of the one or more services in the list, based on subscriber information and service information that is stored in the directory repository, for use in automatically subscribing the subscriber to a service that is represented by the individual service information. Accordingly, using user information and service information in a directory, a user is automatically subscribed to network services and logged into services.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07197125",
	"publication_date": "2007-03-27",
	"application_number": "09800646",
	"application_date": "2001-03-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus providing a supply chain management system useful in outsourced manufacturing",
	"summary": "",
	"abstract": "A method is disclosed for automatically identifying and resolving one or more discrepancies in an outsourced manufacturing supply chain in which a plurality of supply chain partners participate. According to this aspect, information representing one or more supply chain events is received from each of the supply chain partners in a database with which each of the supply chain partners may communicate over a public network. One or more rules are applied periodically to the supply chain event information, resulting in generating one or more alerts pertaining to one or more discrepancies that are found in the supply chain event information. The alerts are communicated to the supply chain partners who are participating in a transaction to which the discrepancies relate. Each alert remains active until second information is received that represents a second supply chain event that resolves the alert. According to one feature, the alerts are periodically escalated until they are resolved. A hub-and-spoke supply chain management system that facilitates the foregoing method, and other features, is also disclosed. In other aspects, the invention encompasses a computer apparatus, a computer readable medium, and a carrier wave configured to carry out the foregoing steps.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07216086",
	"publication_date": "2007-05-08",
	"application_number": "09846134",
	"application_date": "2001-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus providing multi-service connections within a data communications device",
	"summary": "",
	"abstract": "A method and apparatus provide a data communication device that can process a number of streams of data according to a plurality of services. A host device such as a network access server which may include a router and a number of carrier cards hosts a number of modules. The host and modules are equipped with a messaging application programming interface (API). The API allows the host to discover what services are offered by the modules, and allows the host and modules to form an optimal interface configuration that most effectively handles data connections of different service types, such as voice, data, facsimile, video and so forth. In operation, each module is presented with a stream of data containing multiplexed calls. Each call contains data that is best operated on by one of the particular services. The messaging API allows the host to setup and control the module and sessions of the services offered by the modules depending upon the data types of the connections. Since the modules each offer a variety of services, a stream containing data one or more connections such as voice data, video data, modem data, facsimile data and so forth can be processed by a single module under control of the host.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07310338",
	"publication_date": "2007-12-18",
	"application_number": "10713388",
	"application_date": "2003-11-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus providing secure initialization of network devices using a cryptographic key distribution approach",
	"summary": "",
	"abstract": "Registration of non-configured network devices in a distributed network is facilitated by a method of distributing cryptographic keys. A non-configured first device seeking to communicate securely with a second device acquires knowledge of a trusted registration service. The first device registers with the registration service and obtains a longer-lived symmetric key. Using the longer-lived key, the first device authenticates itself to a key management service, and receives a shorter-lived symmetric key encapsulated in a ticket that includes policy information. A second device carries out the same preparatory process. Using its ticket containing the shorter-lived key, the first device requests the second device to obtain a session key on behalf of both. The second device presents its own ticket and that of the first device to the key management service to authenticate the shorter-lived key, and then obtains a session key for use in communications among the first and second devices. The first device and second device then communicate by encrypting communications with the session key, and without further contact with the key management or registration services or any other online authoritative server or key database. Thus newly deployed network devices may be positively identified, registered in the network, and subjected to key schedule or other key management policies.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07181620",
	"publication_date": "2007-02-20",
	"application_number": "10008053",
	"application_date": "2001-11-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for overcoming the single point of failure of the central group controller in a binary tree group key exchange approach",
	"summary": "",
	"abstract": "An approach for managing addition or deletion of nodes in a multicast or broadcast group, which avoids introducing a single point of failure at a group controller, certificate authority, or key distribution center, is disclosed. A central group controller utilizes a binary tree structure to generate and distribute session keys for the establishment of a secure multicast group among multiple user nodes. The central group controller is replicated in a plurality of other group controllers, interconnected in a network having a secure communication channel and connected to a load balancer. The secure communication channel is established using a public key exchange protocol. The load balancer distributes incoming join/leave requests to a master group controller. The master group controller processes the join or leave, generates a new group session key, and distributes the new group session key to all other group controller replicas. Each group controller is successively designated as master group controller in real time when a former master group controller crashes or relinquishes its master authority.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07260716",
	"publication_date": "2007-08-21",
	"application_number": "09408420",
	"application_date": "1999-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for obtaining a state of a browser",
	"summary": "",
	"abstract": "Mechanisms and techniques provide the system that allows the server computer system to capture the complete state of the browser process performing on a client computer system in a remote manner. The capture of such state information by a server computer system is useful, for example, to allow participants to a shared collaborative communications session to join such a session prior to initiation of such a session, or at any point in time during the lifetime of the collaboration session. In operation, the system of the invention can be initiated by browser process performing to the client computer system which obtains the capture process, for instance, as an applet. The capture process can extract from the browser process state information associated with the browser containing document contained within the browser. The capture process can store such state information in a content object on the client computer system and can format and transmit the content object from the capture process on the client computer system to a server computer system in order to maintain a state of the browser in the server computer system. By capturing the state of the browser on the client computer system via the capture process on the client computer system, the complete image of the state information of the browser, including any user supplied information, can be obtained and returns to the server computer system, thus allowing the server computer system, for example, to have participants to a collaboration session join the collaboration session prior to its existence or at any point during the lifetime of the collaboration session without having to navigate through the entire collaboration session.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07299403",
	"publication_date": "2007-11-20",
	"application_number": "09685716",
	"application_date": "2000-10-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for processing order related messages",
	"summary": "",
	"abstract": "The invention is directed to techniques for processing order messages exchanged between a client and an order server. The order messages can be for products and services that the customer orders from a vendor. The client provides the input order messages, which contain order commands in a predefined document format, to an order message manager of the order server, which also provides an order message sorter and message processing modules. The order message sorter reads the input document in the input order message to determine a type for the message and then directs the message to a message processing module capable of processing that type of order message. The message processing module processes the input document, obtains data if needed from an order database, and prepares an output document to include in an output order message to be returned to the client.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07203658",
	"publication_date": "2007-04-10",
	"application_number": "09811971",
	"application_date": "2001-03-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Process and system providing internet protocol security without secure domain resolution",
	"summary": "",
	"abstract": "A system and method providing Internet protocol security without secure domain name resolution are disclosed. A processor that periodically needs to resolve domain names into network addresses has a local DNS server that includes a secure IPSEC cache, a resolver function, a security policy database, and an IPSEC layer. The cache is readable only by the IPSEC layer. Resolved domain names are cached with process and transaction identifiers that uniquely associate the resolved names with an application process and time. When resolution is needed, the cache is used to ensure that IP addresses are resolved from names that came from the application. As a result, IPSEC connections may be established without use of DNSSEC to provide secure domain name resolution.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07296155",
	"publication_date": "2007-11-13",
	"application_number": "10023622",
	"application_date": "2001-12-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Recording trace messages of processes of a network component",
	"summary": "",
	"abstract": "A method for tracking a process is disclosed. Requests are received from process threads according to a time order. A request requests a buffer entry operable to record a trace message from a process thread of a process. A first buffer entry is assigned to a first process thread associated with a trace message according to the time order. A second buffer entry is assigned to a second process thread according to the time order subsequent to the assignment of the first buffer entry. The trace message associated with the first process thread is written to the first buffer entry in response to the assignment of the first buffer entry.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07185061",
	"publication_date": "2007-02-27",
	"application_number": "09948316",
	"application_date": "2001-09-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Remote monitoring of computer programs",
	"summary": "",
	"abstract": "Computer software and hardware provide for remotely monitoring the execution of computer programs. Monitoring instructions are added to the computer program so that during execution of the program, data is collected regarding the program execution. The collected data may be automatically sent to a remote system or site for analysis. The monitoring instructions create little or no performance impact on the client yet provide valuable information to the developer of the program. Additionally, the monitoring instructions may be changed during computer program development.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07299455",
	"publication_date": "2007-11-20",
	"application_number": "10642387",
	"application_date": "2003-08-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Selective process restart based on API changes",
	"summary": "",
	"abstract": "Techniques for selectively restarting processes based on API changes are provided. Information is stored that can be accessed to identify processes that are affected by an API change. The stored information can be modified to reflect the API change and the processes that are affected can be restarted. Thus, processes that are not affected by the API change need not be restarted.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07275251",
	"publication_date": "2007-09-25",
	"application_number": "10430944",
	"application_date": "2003-05-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for end-to-end communications tracing",
	"summary": "",
	"abstract": "A method for tracing communications includes receiving trace criteria from a first remote element and determining whether a call signaling message matches the trace criteria. The method includes attaching a trace tag to the call signaling message, if the call signaling message matches the trace criteria. The method further includes transmitting the call signaling message to a second remote element.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07206385",
	"publication_date": "2007-04-17",
	"application_number": "10888158",
	"application_date": "2004-07-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for end-to-end communications tracing",
	"summary": "",
	"abstract": "A method for tracing communications includes receiving trace criteria from a first remote element and determining whether a call signaling message matches the trace criteria. The method includes attaching a trace tag to the call signaling message, if the call signaling message matches the trace criteria. The method further includes transmitting the call signaling message to a second remote element.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07209548",
	"publication_date": "2007-04-24",
	"application_number": "10888905",
	"application_date": "2004-07-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for recognizing application-specific flows and assigning them to queues",
	"summary": "",
	"abstract": "A system assigns network traffic flows to appropriate queues and/or queue servicing algorithms based upon one or more flow parameters contained in reservation requests associated with the traffic flows. The system may be disposed at an intermediate network device within a computer network. The intermediate network device includes a reservation engine, a packet classification engine, an admission control entity, a traffic scheduler, and a flow analyzer. The flow analyzer includes or has access to a memory that is preprogrammed with one or more heuristic sets for use in evaluating the flow parameters of reservation requests. When a reservation request that includes one or more flow parameters characterizing the bandwidth and/or forwarding requirements of the anticipated traffic flow is received, the flow analyzer applies the heuristic sets. Depending on which set of heuristics, if any, the parameters satisfy, the flow analyzer selects the appropriate queue and/or queue servicing algorithm for the flow.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07225271",
	"publication_date": "2007-05-29",
	"application_number": "09896276",
	"application_date": "2001-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for sharing resources among RSVP sessions",
	"summary": "",
	"abstract": "A system associates multiple discrete traffic flows within a computer network into a group, and allows the traffic flows corresponding to a given group to share a single set of resources. A sourcing entity preferably generates a locally unique resource identifier (ID) for use in requesting a reservation of network resources for a first traffic flow or session. Intermediate network devices within the computer network reserve a set of resources and associate the reservation with the specified resource ID. The sourcing entity may then re-use this same resource ID in a subsequent request to reserve resources for a second traffic flow or session. The intermediate network devices determine that a reservation made by the sourcing entity and associated with this resource ID already exists and, rather than reserve additional or further resources for the second traffic flow or session, share the previously reserved resources between the two traffic flows or sessions.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07281043",
	"publication_date": "2007-10-09",
	"application_number": "09871108",
	"application_date": "2001-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Techniques for generating software application build scripts based on tags in comments",
	"summary": "",
	"abstract": "Techniques for forming an application from a particular file that has source code in a particular language include receiving, from the particular file, comment data. The comment data is ignored according to the particular language. The comment data includes build data indicating how to use the source code in a build process. The build process packages compiled code to form the application. Based on the build data in the comment data, build-input data is generated. The build-input data indicates input for the build process. These techniques automatically provide, for the application build process, build information known to the application developer who produced the source code.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07222333",
	"publication_date": "2007-05-22",
	"application_number": "09978966",
	"application_date": "2001-10-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Two phase reservations for packet networks",
	"summary": "",
	"abstract": "A two phase reservation mechanism for use with computer networks carrying voice or other time or bandwidth sensitive traffic. During the first or u201cresource allocationu201d phase, network resources sufficient to support the anticipated voice traffic are set aside within the computer network along the route between the sourcing entity and receiving entity. Although the network resources have been set aside, they are specifically not made available to the voice traffic, until the second phase of the reservation mechanism, called the u201cresource availableu201d phase. During the resource available phase, the network resources that were previously set aside are now made available to the voice traffic.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07277944",
	"publication_date": "2007-10-02",
	"application_number": "09871119",
	"application_date": "2001-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Unified messaging system configured for management of short message service-type messages",
	"summary": "",
	"abstract": "A unified communications system is configured for receiving, storing, and/or sending SMS messages based on management of the SMS messages according to a prescribed open standards-based protocol. The unified communications system includes an SMS module configured for receiving SMS messages according to SMPP protocol. The SMS module obtains source and destination information from the received SMS message, and accesses a subscriber profile directory for subscriber profile information based on at least one of the source and destination information. The SMS module generates a common format message that includes the SMS message, and selectively supplies the common format message to selected destinations based on the accessed subscriber profile information. The common format message may be stored in a prescribed message store, for example an IMAP directory, or output as an e-mail message to a prescribed destination. The SMS module also is configured for selectively supplying stored messages to a unified messaging subscriber as an SMS message based on the profile information on the unified messaging subscriber. Hence, the unified communications system enables SMS messaging users to send SMS messages to non SMS-type devices (e.g., telephones, e-mail clients, etc.) and retrieve stored common format messages (e.g., fax, e-mail, voice messages) using the SMS message system.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07269432",
	"publication_date": "2007-09-11",
	"application_number": "11350811",
	"application_date": "2006-02-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Unified messaging system configured for transport of encrypted messages",
	"summary": "",
	"abstract": "A unified messaging system is configured for encrypting messages. The calling party is prompted to encrypt the unified message, for example as part of an extended options menu. The unified messaging system encrypts the unified message based on an encryption key input by the user into an encrypted message, and generates an open-network destination header for identifying a destination location for the encrypted message according to an open-network protocol. The unified messaging system then outputs the open-network destination header and the encrypted message as an open-network encrypted message to an open-network message store. During retrieval of the message, the unified messaging system identifies the encrypted message and prompts the destination subscriber for a decryption key; the unified messaging system performs a decryption operation to recover a decrypted file, and outputs the decrypted file for playback to the user.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07308477",
	"publication_date": "2007-12-11",
	"application_number": "09756697",
	"application_date": "2001-01-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Virtual loop carrier system with gateway protocol mediation",
	"summary": "",
	"abstract": "A loop carrier system includes a home local area network having plural telephone modules and a hub coupled to in-home telephone wiring. The telephone modules and the hub communicate voice signals over the in-home wiring in a dedicated frequency band above baseband POTS. The hub converts between voice signals and voice packets and is connected to a network access device for transferring the voice packets from the home local area network to a telecommunications network which routes the voice packets to a gateway. The gateway converts between the voice packets and a circuit format compatible with a local digital voice switch. The gateway includes an ATM switch and a call processing adjunct coupled to the ATM switch. The call processing adjunct controls the conversion between voice packets and the circuit format at the ATM switch. The call processing adjunct communicates with the home local area network using a first signaling protocol such as Media Gateway Control Protocol, Session Initiation Protocol or H.323, and with the local digital switch using a second signaling protocol such as GR-303 for controlling call processing in the communication system.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07164694",
	"publication_date": "2007-01-16",
	"application_number": "10378587",
	"application_date": "2003-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program product for presenting information to a user utilizing historical information about the user",
	"summary": "",
	"abstract": "A system, method and computer program product are disclosed for presenting information to a user. At a client, information about a user is collected. Via a network, the collected information is transmitted from the client to a location so that a user profile for the user can be generated based on the collected information. Based on the generated user profile, content is selected for the user. At the client, the content is received via the network and then subsequently presented to the user.",
	"url": null,
	"owner": "Claria Corporation",
	"publication_number": "07181488",
	"publication_date": "2007-02-20",
	"application_number": "10057413",
	"application_date": "2002-01-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computerized medical diagnostic and treatment advice system",
	"summary": "",
	"abstract": "A system and method for providing computerized, knowledge-based medical diagnostic and treatment advice. The medical advice is provided to the general public over a telephone network. Two new authoring languages, interactive voice response and speech recognition are used to enable expert and general practitioner knowledge to be encoded for access by the public. u201cMetau201d functions for time-density analysis of a number of factors regarding the number of medical complaints per unit of time are an integral part of the system. A semantic discrepancy evaluator routine along with a mental status examination are used to detect the consciousness level of a user of the system. A re-enter feature monitors the user's changing condition over time. A symptom severity analysis helps to respond to the changing conditions. System sensitivity factors may be changed at a global level or other levels to adjust the system advice as necessary.",
	"url": null,
	"owner": "Clinical Decision Support, LLC",
	"publication_number": "07297111",
	"publication_date": "2007-11-20",
	"application_number": "11077467",
	"application_date": "2005-03-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computerized medical diagnostic and treatment advice system",
	"summary": "",
	"abstract": "A system and method for providing computerized, knowledge-based medical diagnostic and treatment advice. The medical advice is provided to the general public over a telephone network. Two new authoring languages, interactive voice response and speech recognition are used to enable expert and general practitioner knowledge to be encoded for access by the public. u201cMetau201d functions for time-density analysis of a number of factors regarding the number of medical complaints per unit of time are an integral part of the system. A semantic discrepancy evaluator routine along with a mental status examination are used to detect the consciousness level of a user of the system. A re-enter feature monitors the user's changing condition over time. A symptom severity analysis helps to respond to the changing conditions. System sensitivity factors may be changed at a global level or other levels to adjust the system advice as necessary.",
	"url": null,
	"owner": "Clinical Decision Support, LLC",
	"publication_number": "07300402",
	"publication_date": "2007-11-27",
	"application_number": "10371873",
	"application_date": "2003-02-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computerized medical diagnostic and treatment advice system including network access",
	"summary": "",
	"abstract": "A system and method for providing computerized, knowledge-based medical diagnostic and treatment advice. The medical advice is provided to the general public over networks, such as a telephone network or a computer network. The invention also includes a stand-alone embodiment that may utilize occasional connectivity to a central computer by use of a network, such as the Internet. New authoring languages, interactive voice response and speech recognition are used to enable expert and general practitioner knowledge to be encoded for access by the public. u201cMetau201d functions for time-density analysis of a number of factors regarding the number of medical complaints per unit of time are an integral part of the system. A re-enter feature monitors the user's changing condition over time. A symptom severity analysis helps to respond to the changing conditions. System sensitivity factors may be changed at a global level or other levels to adjust the system advice as necessary.",
	"url": null,
	"owner": "Clinical Decision Support, LLC",
	"publication_number": "07306560",
	"publication_date": "2007-12-11",
	"application_number": "11045676",
	"application_date": "2005-01-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Server and multiple sensor system for monitoring activity in a shared radio frequency band",
	"summary": "",
	"abstract": "An intelligent spectrum management (ISM) system and method are provided that includes sophisticated features to detect, classify, and locate sources of RF activity. The system comprises one or more sensors positioned at various locations in a region where activity in a shared radio frequency band is occurring and a server coupled to the sensors. Each sensor monitors communication traffic, such as IEEE WLAN traffic, as well as classifies non-WLAN signals occurring in the frequency band. The server receives data from each of the plurality of sensors and that executes functions to process the data supplied by the plurality of sensors. In particular, the server aggregates the data generated by the sensors and generates event reports and other configurable information derived from the sensors that is interfaced to a client application, e.g., a network management station.",
	"url": null,
	"owner": "Cognio, Inc.",
	"publication_number": "07184777",
	"publication_date": "2007-02-27",
	"application_number": "10717852",
	"application_date": "2003-11-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for classifying signals using timing templates, power templates and other techniques",
	"summary": "",
	"abstract": "A system and method for classifying signals occurring in a frequency band. One or more characteristics of one or more signals in the frequency band are detected using any suitable technology, such as a device that can generate characteristics of signal pulses detected in the frequency band. Data pertaining to the signal pulses is accumulated over time. The accumulated signal data is compared against reference data associated with known signals to classify the one or more signals in the frequency band based on the comparison. The accumulated data may include one or more characteristics selected from the group consisting of: pulse center frequency, pulse bandwidth, pulse duration, time between pulses and number of different active pulses, and wherein the reference data associated with each of a plurality of known signals comprises one or more characteristics selected from the group consisting of: pulse center frequency, pulse bandwidth, pulse duration and time between pulses. The accumulated signal data is compared against the reference data, and depending on the degree of match with reference data, a signal can be classified. Additional levels of signal classification processing may be performed.",
	"url": null,
	"owner": "Cognio, Inc.",
	"publication_number": "07171161",
	"publication_date": "2007-01-30",
	"application_number": "10628603",
	"application_date": "2003-07-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for real-time spectrum analysis in a radio device",
	"summary": "",
	"abstract": "A real-time spectrum analysis engine (SAGE) that comprises a spectrum analyzer component, a signal detector component, a universal signal synchronizer component and a snapshot buffer component. The spectrum analyzer component generates data representing a real-time spectrogram of a bandwidth of radio frequency (RF) spectrum. The signal detector detects signal pulses in the frequency band and outputs pulse event information entries output, which include the start time, duration, power, center frequency and bandwidth of each detected pulse. The signal detector also provides pulse trigger outputs which may be used to enable/disable the collection of information by the spectrum analyzer and the snapshot buffer components. The snapshot buffer collects a set of raw digital signal samples useful for signal classification and other purposes. The universal signal synchronizer synchronizes to periodic signal sources, useful for instituting schemes to avoid interference with those signals.",
	"url": null,
	"owner": "Cognio, Inc.",
	"publication_number": "07254191",
	"publication_date": "2007-08-07",
	"application_number": "10420511",
	"application_date": "2003-04-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for spectrum management of a shared frequency band",
	"summary": "",
	"abstract": "A system and method for managing the spectrum utilization of a frequency band that is shared, both in frequency and time, by multiple devices. At one or more devices operating in the frequency band, pulses associated with signals occurring in the frequency band are detected by sampling part or all the frequency band for a time interval. From the detected signal pulses, the signals can be classified. In addition, overall spectrum activity can be measured. Using classification information for signals detected in the frequency band, policies can be executed so that a device may take certain actions in order to avoid interfering with other signals, or to optimize simultaneous use of the frequency band with the other signals. Signal detection occurs at one or more devices operating in a frequency band. Signal classification and measurement, as well as policy execution may occur within a processor of the same device where signal detection occurs, or in another device (located remotely or within the operating region of the frequency band).",
	"url": null,
	"owner": "Cognio, Inc.",
	"publication_number": "07269151",
	"publication_date": "2007-09-11",
	"application_number": "10246363",
	"application_date": "2002-09-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Inline compression of a network communication within an enterprise planning environment",
	"summary": "",
	"abstract": "An enterprise business planning system includes a server to execute an enterprise planning session for a set of enterprise contributors in accordance with an enterprise model, wherein the enterprise model defines hierarchically arranged nodes and associates the enterprise contributors with the nodes. The system further comprises a web browser executing on a remote computing device of one of the enterprise contributors to communicate contribution data between the remote computing device and the server, and an inline compression module executing on the remote computing device. The inline compression module automatically compresses outbound communications from the web browser to the server, and automatically decompresses inbound communication received from the server and forwards the decompressed inbound communications to the web browser.",
	"url": null,
	"owner": "Cognos Incorporated",
	"publication_number": "07257612",
	"publication_date": "2007-08-14",
	"application_number": "10262606",
	"application_date": "2002-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Structure and method for sharing large databases",
	"summary": "",
	"abstract": "The invention provides an application programming mechanism and technique that makes referencing data look as if the data is dynamically allocated by the process. The invention also provides a mechanism whereby persisted data is shared across all processes on the same computer that access it. Small, process specific structures are created on demand as the program accesses the persisted data and makes use of the underlying memory mapping and linking technologies inherent in modern operation systems. The technique is especially useful in large data repositories where it simplifies the sharing of data between instances of an application, and also permits sharing of data between different applications. It allows for the data to be highly referenced internally while not requiring the extra memory used by pointer swizzling at runtime.",
	"url": null,
	"owner": "Cognos Incorporated",
	"publication_number": "07171425",
	"publication_date": "2007-01-30",
	"application_number": "10401056",
	"application_date": "2003-03-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for controlling a lighting system in response to an audio input",
	"summary": "",
	"abstract": "Methods and apparatus for executing a lighting program to control a plurality of light emitting diodes (LEDs) in response to at least one characteristic of an audio input. In one embodiment, the audio input is digitally processed to determine the at least one characteristic. In other embodiments, control signals for the LEDs are generated in response to a timer and/or input from a user interface, as well as in response to the at least one characteristic of the audio input. In another embodiment, the control signals for the LEDs are generated by a same computer that processes the audio input to transmit signals to speakers to audibly play the audio input. In a further embodiment, a GUI is provided to assist in authoring the lighting program. In another embodiment, the audio signal is processed before being played back. In a further embodiment, the lighting program anticipates changes in the audio input.",
	"url": null,
	"owner": "Color Kinetics Incorporated",
	"publication_number": "07228190",
	"publication_date": "2007-06-05",
	"application_number": "09886958",
	"application_date": "2001-06-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Rights expression system",
	"summary": "",
	"abstract": "A rights expression system and method for facilitating creation and/or modification of rights expressions in a rights expression language based on one or more schemas are provided. In one embodiment, the rights expression system comprises selectable layouts corresponding to a rights granting paradigm and comprises type selection components. Each type selection component is adapted to present REL terms and input components. The input components allow input of parameters required by the selected REL term. The rights expression system also includes a data engine that generates rights expressions in proper REL semantics defined by the one or more schemas based on the selected layout and parameter inputted. The type selection components and input components may be type selectors and input forms, respectively, that are implemented in a graphical user interface.",
	"url": null,
	"owner": "ContentGuard Holdings, Inc.",
	"publication_number": "07177843",
	"publication_date": "2007-02-13",
	"application_number": "10298222",
	"application_date": "2002-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for resizing and moving an object on a computer screen",
	"summary": "",
	"abstract": "A method for defining the size of an object displayed on a computer screen, the computer screen having a matrix of sensor points, said method comprising the steps of displaying an object on a computer screen, defining at least one screen area having a reference point associated therewith, reading an input from a sensor point in a screen area, calculating a vector between the read input and the reference point of that screen area, and defining the size of the object based on the vector.",
	"url": null,
	"owner": "Contex A/S",
	"publication_number": "07190379",
	"publication_date": "2007-03-13",
	"application_number": "10184070",
	"application_date": "2002-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods for generating voice prompts using grammatical rules in a system proving TDM voice communications and VOIP communications",
	"summary": "",
	"abstract": "Systems and methods by which voice/data communications may occur in multiple modes/protocols are disclosed. In particular, systems and methods are provided for multiple native mode/protocol voice and data transmissions and receptions with a computing system having a multi-bus structure, including, for example, a TDM bus and a packet bus, and multi-protocol framing engines. Such systems preferably include subsystem functions such as PBX, voice mail and other telephony functions, LAN hub and data router. In preferred embodiments, a TDM bus and a packet bus are intelligently bridged and managed, thereby enabling such multiple mode/protocol voice and data transmissions to be intelligently managed and controlled with a single, integrated system. A computer or other processor includes a local area network controller, which provides routing and hub(s) for one or more packet networks. The computer also is coupled to a buffer/framer, which serves to frame/deframe data to/from the computer from TDM bus. The buffer/framer includes a plurality of framer/deframer engines, supporting, for example, ATM and HDLC framing/deframing. The buffer/framer is coupled to the TDM bus by way of a switch/multiplexer, which includes the capability to intelligently map data traffic between the buffer/framer and the TDM bus to various slots of the TDM frames. Preferably, a DSP pool is coupled to buffer/framer in a manner to provide various signal processing and telecommunications support, such as dial tone generation, DTMF detection and the like. The TDM bus is coupled to a various line/station cards, serving to interface the TDM bus with telephone, facsimiles and other telecommunication devices, and also with a various digital and/or analog WAN network services. Language support for such systems is accomplished by way of a program/data structure so that additional language support may be readily implemented, for example, by a non-software programmer using grammar and voice prompt files, which are preferably located in a predetermined directory in the system.",
	"url": null,
	"owner": "Converged Data Solutions LLC",
	"publication_number": "07181401",
	"publication_date": "2007-02-20",
	"application_number": "10683857",
	"application_date": "2003-10-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for creating, distributing and executing multimedia telecommunications applications over circuit and packet switched networks",
	"summary": "",
	"abstract": "A service creation switch () supports both tightly coupled and loosely distributed application server (AS) () functions, with the tightly coupled AS () functions residing in the switch (), and the loosely coupled AS () functions carried out in a service level executable environment (SLEE) (). The SLEE () utilizes DLLs to facilitate the distribution of services over a packet network.",
	"url": null,
	"owner": "Convergent Networks, Inc.",
	"publication_number": "07304984",
	"publication_date": "2007-12-04",
	"application_number": "10181748",
	"application_date": "2001-02-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for creating application programming interfaces for internal applications",
	"summary": "",
	"abstract": "This application discloses a engine for creating intermediate application programming interfaces by utilizing an target application's closed application programming interface through a macro coded in a specially designed macro language.",
	"url": null,
	"owner": "Convergys CMG Utah",
	"publication_number": "07191452",
	"publication_date": "2007-03-13",
	"application_number": "10184381",
	"application_date": "2002-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for managing data output",
	"summary": "",
	"abstract": "A method and system are described in which an application is modified to produce a trigger file wherein the trigger file includes a data media indicator. A mediator accepts the trigger file and selects a target module which interfaces with a target media device to process a data file on the target media device.",
	"url": null,
	"owner": "Convergys CMG Utah",
	"publication_number": "07231639",
	"publication_date": "2007-06-12",
	"application_number": "10345003",
	"application_date": "2003-01-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Limited-use browser and security system",
	"summary": "",
	"abstract": "A limited-use browser and related security system control access to content stored on a server computer linked to a network. The security system secures the content on the server and only permits it to be downloaded to a client computer running the limited-user browser or a general purpose browser executing an add-in security module providing the same functions as the limited-user browser. The limited-use browser or module secures the downloaded content on the client computer and displays it in a u201cview-onlyu201d mode. While the secured content is being displayed, menu selections, key combination, or pointing device commands initiated on the client computer that would modify the content or create a copy on another medium are either disabled as a default or monitored to determine if the action is permitted.",
	"url": null,
	"owner": "Copyright Clearance Center, Inc.",
	"publication_number": "07225157",
	"publication_date": "2007-05-29",
	"application_number": "09745395",
	"application_date": "2000-12-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for secure delivery and rights management of digital content at an unsecure site",
	"summary": "",
	"abstract": "At a publisher location, multiple encrypted documents are assembled into a distribution archive that is also encrypted. The distribution archive is then downloaded into a content server at an unsecure site. When the content server receives the distribution archive, it decrypts the archive file and unpacks the encrypted documents, which are then stored, in encrypted form, in a local document database. When a user logs into the local content server, a secure content viewer is downloaded to the user's browser. The content viewer requests a selected document from the local server, which then forwards the encrypted document to the viewer. The viewer then computes a document identifier from the encrypted document content and requests a key from the server with the identifier. The server then returns the requested key and the viewer decrypts that document and presents it in a display area controlled by the viewer.",
	"url": null,
	"owner": "Copyright Clearance Center, Inc.",
	"publication_number": "07299500",
	"publication_date": "2007-11-20",
	"application_number": "10621705",
	"application_date": "2003-07-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Firewall-tolerant voice-over-internet-protocol (VoIP) emulating SSL or HTTP sessions embedding voice data in cookies",
	"summary": "",
	"abstract": "A voice-over-Internet-Protocol (VoIP) client codes audio data as printable ASCII characters, then embeds the ASCII audio data inside a cookie that is sent over the Internet within an HTTP GET message. The GET message is sent to a server acting as a call proxy or external manager that forwards the audio data to a remote client. Return audio data is sent back to the client in the normal data field of an HTTP response message from the server. When the client receives the HTTP response, it sends another GET message without audio data, allowing the server to send another response. This empty GET allows VoIP to pass through strict firewalls that pair each HTTP response with a GET. For secure-sockets layer (SSL), client and server exchange pseudo-keys in hello and finished messages that establish the SSL session. Audio data is streamed in SSL messages instead of encrypted data.",
	"url": null,
	"owner": "CrystalVoice Communications",
	"publication_number": "07206932",
	"publication_date": "2007-04-17",
	"application_number": "10248762",
	"application_date": "2003-02-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure network access control",
	"summary": "",
	"abstract": "A method and system of network access security utilizes identifying the router devices in the network path or other such router devices as may be encountered in protecting a particular portion of the inter-networked system to determine the variation in ACL format and content with each ACL format being then analyzed to determine a paradigm set of packet fields common to all identified ACL formats in which each ACL is then re-written entry by entry to form a paradigm ACL corresponding as nearly as possible to the original ACL. The paradigm ACL for each non-homogenous network device is then merged with each other paradigm ACL to create a common paradigm ACL which can be distributed to each non-homogenous router device to provide common filtering across all of the routers.",
	"url": null,
	"owner": "Cyber Operations, LLC",
	"publication_number": "07188164",
	"publication_date": "2007-03-06",
	"application_number": "10364791",
	"application_date": "2003-02-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Modular entertainment and gaming systems configured to consume and provide network services",
	"summary": "",
	"abstract": "A secure and modular architecture for monitoring and controlling clusters of pay entertainment and gaming devices. The architecture allows flexible and secure use of state-of-the-art multimedia and Internet technologies to attract the younger player generation used to flashy and networked games. Cash or cash-less entertainment and gaming devices are supported.",
	"url": null,
	"owner": "Cyberview Technology, Inc.",
	"publication_number": "07297062",
	"publication_date": "2007-11-20",
	"application_number": "10120635",
	"application_date": "2002-04-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Common database system for sales and marketing process",
	"summary": "",
	"abstract": "A marketing system with a centralized database for compiling and distributing marketing data. The system compiles marketing data from a plurality of internal and external data sources into a centralized database. Internal and external sources include legacy systems. Data in the centralized database is distributed to a plurality of client venues by using an extract engine to extract a subset of data from the centralized database and creating a venue specific database. Access to the venue specific database is facilitated by use of a application programmers interface for allowing the development of applications for venue specific use of the venue specific database. Both the compilation and distribution process is performed on a periodic basis to provide timely, accurate, and consistent marketing data across the plurality of client venues.",
	"url": null,
	"owner": "DaimlerChrysler Corporation",
	"publication_number": "07177822",
	"publication_date": "2007-02-13",
	"application_number": "09923646",
	"application_date": "2001-08-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hierarchical floating car data network",
	"summary": "",
	"abstract": "A hierarchical floating car data network comprises a central server, an egress point network, and a participating vehicle network. The egress point network is in communication with the central server. The egress point network comprises a plurality of egress points. The participating vehicle network comprises a plurality of participating vehicles. At least some of the plurality of participating vehicles are in direct communication with each other. At least some of the plurality of participating vehicles are in communication with at least some of the plurality of egress points. Furthermore, at least some of the plurality of participating vehicles may be in communication with the central server. A geographic database is formed from content communicated between the elements of the hierarchical floating car data network.",
	"url": null,
	"owner": "Dash Navigation, Inc.",
	"publication_number": "07188026",
	"publication_date": "2007-03-06",
	"application_number": "10436967",
	"application_date": "2003-05-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for managing a plurality of enterprise business systems",
	"summary": "",
	"abstract": "An enterprise business process management system and method for definition and execution of business processes formed from portions of one or more business applications present in an enterprise. The enterprise business process management system includes a server, a router, and an interface for defining and executing such business processes. A data quality business process detects, corrects, analyzes, and reports quantitative and qualitative characteristics of application data and transactional data present in the enterprise. An interface module is provided by which a user may select and define function definition information for a business process.",
	"url": null,
	"owner": "Data Quality Solutions",
	"publication_number": "07246144",
	"publication_date": "2007-07-17",
	"application_number": "10922162",
	"application_date": "2004-08-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Failover system and method for cluster environment",
	"summary": "",
	"abstract": "A failover method and system is provided for a computer system having at least three nodes operating as a cluster. One method includes the steps of detecting failure of one node, determining the weight of at least two surviving nodes, and assigning a failover node based on the determined weights of the surviving nodes. Another method includes the steps detecting failure of one node and determining the time of failure, and assigning a failover node based in part on the determined time of failure. This method may also include the steps of determining a time period during which nodes in the cluster are heavily utilized, and assigning a failover node that is not heavily utilized during that time period.",
	"url": null,
	"owner": "Dell Products L.P.",
	"publication_number": "07281154",
	"publication_date": "2007-10-09",
	"application_number": "11188327",
	"application_date": "2005-07-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "XML server pages language",
	"summary": "",
	"abstract": "A method and computer program product is provided for generating XML documents using a script language that extends the capabilities of XML. The script language includes control statements for including data content and style information from a plurality of sources. One or more scripts may be developed that includes script language control statements. A script processor processes the scripts and generates a content document and a style document. The content document specifies the content to be included in the XML document, and the style document specifies the style for displaying the content in the XML document. One set of program instructions transforms the content document and the style document into an XML document. Another set of program instructions converts the XML document to an output document for a selected type of display. The script language and script processor provide facilities for gathering content and style information from a plurality of sources. Numerous scripts may be generated to override and/or extend information in one or more of the other scripts, thereby allowing a developer to customize selected portions of the output document while using shared content and style for the remaining portions of the output document.",
	"url": null,
	"owner": "Dell Products L.P.",
	"publication_number": "07191397",
	"publication_date": "2007-03-13",
	"application_number": "10807057",
	"application_date": "2004-03-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automated banking machine component authentication system and method",
	"summary": "",
	"abstract": "An automated banking machine is provided which includes a first component and a second component. The first component is operative generate a first hash of a first identity data and a public key associated with the second component. The first component is operative to encrypt a randomly generated secret key using the public key associated with the second component. The second component is operative to receive at least one message from the first component which includes the encrypted secret key and the first hash. The second component is operative to decrypt the secret key with a private key that corresponds to the public key. The second component is operative to permit information associated with a transaction function to be communicated between the first and second components which is encrypted with the secret key when the first hash is determined by the second component to correspond to the first component.",
	"url": null,
	"owner": "Diebold Self-Service Systems, division of Diebold, Incorporated",
	"publication_number": "07229009",
	"publication_date": "2007-06-12",
	"application_number": "11359912",
	"application_date": "2006-02-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Cash dispensing automated banking machine firmware authentication system and method",
	"summary": "",
	"abstract": "An automated banking machine which is operative to authenticate firmware in at least one hardware device of the machine. The hardware device is operative to generate through operation of at least one processor in the at least one hardware device a firmware certificate responsive to the at least one measurement request message and the firmware content. The automated banking machine is operative to send a message from the automated banking machine to a host banking system responsive to the firmware certificate. The host banking machine may authenticate the message and send the automated banking machine an authorization message for performing a transaction function with the automated banking machine. Such a transaction function may include dispensing cash with a cash dispenser of the automated banking machine.",
	"url": null,
	"owner": "Diebold Self-Service Systems, division of Diebold, Incorporated",
	"publication_number": "07309004",
	"publication_date": "2007-12-18",
	"application_number": "10746865",
	"application_date": "2003-12-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Financial transaction processing system and method",
	"summary": "",
	"abstract": "A financial transaction processing system () enables processing transactions from various types of card activated terminal devices () which communicate using a variety of electronic message formats. The transaction processing system may operate to authorize transactions internally using information stored in a relational database () or may communicate with external authorization systems (). The transaction processing system includes among its software components message gateway routers (MGRs) () which operate using information stored in the relational database to convert messages from a variety of external message formats used by the external devices and authorization systems, to a common internal message format used within the system. The system further uses database information to internally route messages to message processing programs (MPPs) () which process messages and generate messages to the external devices and authorization systems. The MGR also converts the outgoing messages from the internal message format to the external message formats which can be interpreted by the external devices and systems to which the messages are directed.",
	"url": null,
	"owner": "Diebold, Incorporated",
	"publication_number": "07167924",
	"publication_date": "2007-01-23",
	"application_number": "09867183",
	"application_date": "2001-05-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for processing subpicture data",
	"summary": "",
	"abstract": "A method is described for rendering subpicture images comprising: reading a subpicture image from a digital versatile disk (u201cDVDu201d); identifying regions within the subpicture image for which u03b1 is below a specified threshold value; and rendering on a video screen only those regions of the subpicture image for which u03b1 is above the specified threshold value.",
	"url": null,
	"owner": "Digeo, Inc.",
	"publication_number": "07197234",
	"publication_date": "2007-03-27",
	"application_number": "10155720",
	"application_date": "2002-05-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for recognition of individuals using multiple biometric searches",
	"summary": "",
	"abstract": "The invention provides a computer-implemented method for determining whether a database contains any images that substantially match at least one image provided of an individual. A probe data set is received, the comprising first and second biometric templates associated with the individual, the first biometric template associated with a different type of biometric than the second type of biometric template. A database of biometric templates is searched using the first biometric template to retrieve a first results set. A first predetermined portion of the first results set is selected. The first predetermined portion of the first results set is searched using the second biometric template to retrieve a second results set. A second predetermined portion of the second results set is selected. The second predetermined portion of the second results is provided for comparison with the image provided of the individual.",
	"url": null,
	"owner": "Digimarc Corporation",
	"publication_number": "07277891",
	"publication_date": "2007-10-02",
	"application_number": "10686005",
	"application_date": "2003-10-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for reliably communicating the content of a live data stream",
	"summary": "",
	"abstract": "A method for communicating the content of a live data stream to a receiver using a plurality of channels comprising two encoder channels used to encode the live data content prior to transmission. Initially a plurality of segments of a live data stream are received, wherein each segment contains segment data. A forward error correction algorithm is applied to each segment's data, thereby producing FEC-encoded segment data. The FEC-encoded segment data is contained within an FEC-encoded block, resulting in a corresponding plurality of FEC-encoded blocks being generated. Each FEC-encoded block is copied to a sub-channel on both a first encoder channel and a second encoder channel, resulting in a plurality of FEC-encoder blocks residing on the first and second encoder channels. The first and second encoder channels differ in the number of sub-channels they contain (interleaving depth), and accordingly the arrangement of the FEC-encoded blocks in the first and second encoder channels are different. A first cross-section of the FEC-encoded segment data contained within the FEC-encoded blocks resident in the first encoder channel is added to a first transmit block T. Similarly, A first cross-section of the FEC-encoded segment data contained within the FEC-encoded blocks resident in the second encoder channel is added to a second transmit block T. The first and second transmit blocks are then communicated to the receiver.",
	"url": null,
	"owner": "Digital Fountain, Inc.",
	"publication_number": "07249291",
	"publication_date": "2007-07-24",
	"application_number": "10367573",
	"application_date": "2003-02-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for risk management",
	"summary": "",
	"abstract": "An integrated risk management tool includes a persistent object database to store information about actors (individuals and/or groups), physical surroundings, historical events and other information. The risk management tool also includes a decision support system that uses data objects from the database and advanced decision theory techniques, such as Bayesian Networks, to infer the relative risk of an undesirable event. As part of the relative risk calculation, the tool uses a simulation and gaming environment in which artificially intelligent actors interact with the environment to determine susceptibility to the undesired event. Preferred embodiments of the tool also include an open u201cplug-inu201d architecture that allows the tool to interface with existing consequence calculators. The tool also provides facilities for presenting data in a user-friendly manner as well as report generation facilities.",
	"url": null,
	"owner": "Digital Sandbox",
	"publication_number": "07231327",
	"publication_date": "2007-06-12",
	"application_number": "09453509",
	"application_date": "1999-12-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for risk management",
	"summary": "",
	"abstract": "An integrated risk management tool includes a persistent object database to store information about actors (individuals and/or groups), physical surroundings, historical events and other information. The risk management tool also includes a decision support system that uses data objects from the database and advanced decision theory techniques, such as Bayesian Networks, to infer the relative risk of an undesirable event. As part of the relative risk calculation, the tool uses a simulation and gaming environment in which artificially intelligent actors interact with the environment to determine susceptibility to the undesired event. Preferred embodiments of the tool also include an open u201cplug-inu201d architecture that allows the tool to interface with existing consequence calculators. The tool also provides facilities for presenting data in a user-friendly manner as well as report generation facilities.",
	"url": null,
	"owner": "Digital Sandbox, Inc.",
	"publication_number": "07308388",
	"publication_date": "2007-12-11",
	"application_number": "09853690",
	"application_date": "2001-05-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for preventing automated programs in a network",
	"summary": "",
	"abstract": "A system and method are diminish the use of an automated program in a networked environment. A server can provide access to a service. In addition, a software module provides a client computer with a visual test upon a request transmitted through a network by the client computer for the service. The visual test requires the client computer to perform a predetermined action on a shaped object displayed on a video display in order to gain access to the service. A validation software module receives a request from the software module for the shaped object to be displayed on the video display. Further, the validation software module randomly selects a shaped object to be transmitted to the software module. The validation software module provides the software module with the shaped object. An access software module receives an access instruction from the validation software module if the client computer passes the visual test. The client computer can access the service if the client computer passes the visual test.",
	"url": null,
	"owner": "Disney Enterprises, Inc.",
	"publication_number": "07197646",
	"publication_date": "2007-03-27",
	"application_number": "10741838",
	"application_date": "2003-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for deterministically performing active-active failover of redundant servers in response to a heartbeat link failure",
	"summary": "",
	"abstract": "An apparatus is disclosed for deterministically performing active-active failover of redundant servers in response to a failure of a link on which each server provides a heartbeat to the other server. Each of the servers is configured to take over the identity of the other server on a common network in response to detecting a failure of the other server's link heartbeat. Each server provides a status indicator to a storage controller indicating whether the other server's link heartbeat stopped. The storage controller determines the link has failed if both of the status indicators indicate the other server's heartbeat stopped, and responsively kills one of the servers. The storage controller also receives a heartbeat directly from each server. If only one direct heartbeat stops when the status indicators indicate the link heartbeats stopped, then the storage controller detects one server has failed and inactivates the failed server.",
	"url": null,
	"owner": "Dot Hill Systems Corporation",
	"publication_number": "07278054",
	"publication_date": "2007-10-02",
	"application_number": "10830875",
	"application_date": "2004-04-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Host certification method and system",
	"summary": "",
	"abstract": "A system and method is provided for authenticating a device. A method includes receiving a certificate from the device, the certificate including a plurality of fields, including a field holding a digital signature from a certifying authority, verifying the digital signatures in the certificate, the verifying including at least one of verifying the certifying authority digital signature using the certifying authority public key; and verifying a device digital signature using a device public key, and receiving validation data from a source, the validation data identifying one or more data in the certificate as valid or invalid according to predetermined criteria, and if the digital signatures are verified and validated, transmitting a session key to the device to establish a secure communication channel.",
	"url": null,
	"owner": "DPHI Acquisitions, Inc.",
	"publication_number": "07310821",
	"publication_date": "2007-12-18",
	"application_number": "09940026",
	"application_date": "2001-08-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Delivering electronic content",
	"summary": "",
	"abstract": "Delivering electronic content includes providing instructions that cause a computer to collect information including an e-mail address and transmitting the collected information to a receiving computer. The computer that receives the transmitted information selects electronic content based on the received information and sends the selected electronic content to the e-mail address included in the received information.",
	"url": null,
	"owner": "DRM Technologies, LLC",
	"publication_number": "07272655",
	"publication_date": "2007-09-18",
	"application_number": "11412827",
	"application_date": "2006-04-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for in situ, real-time, supply chain, interoperability verification",
	"summary": "",
	"abstract": "The present invention discloses a system and method for performing interoperability testing. The method comprises sending a command from a server module to a client module, receiving the command at an application under test module via a shared directory module between the client module and the application under test module, executing a test at the application under test module based on the received command, and sending results of the test from the application under test module to the server module via the shared directory module and the client module, wherein the test is executed, and the results of the interoperability of the application between the client module and server module are sent, in a real-time, low-intrusive, supply chain setting.",
	"url": null,
	"owner": "Drummond Group",
	"publication_number": "07237014",
	"publication_date": "2007-06-26",
	"application_number": "10386609",
	"application_date": "2003-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Versatile network operations center and network for transaction processing",
	"summary": "",
	"abstract": "A terminal adapter, along with a value added network, is disclosed that interworks a plurality of terminals with a processing host to accomplish transaction processing. The terminals can use different protocols and typically incorporate card readers for completing financial or other types of transactions typically involving credit, debit, ATM or similar cards. The terminal adapter provides reliable and secure communication using a network based in part on the Internet as a primary form of communication. The terminal adapter also provides a secondary communication path in the event of a failure of the primary communication path, as well as automatic recognition of different terminal protocols, various security functions, error detection, and other network administration functions to ensure a flexible system and efficient transaction processing system.",
	"url": null,
	"owner": "DW Holdings, Inc.",
	"publication_number": "07225253",
	"publication_date": "2007-05-29",
	"application_number": "10613129",
	"application_date": "2003-07-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for multi-path routing of electronic orders for securities",
	"summary": "",
	"abstract": "Methods and systems for selecting, in a broker-dealer system for automated trading of securities, a path for sending an order for securities to a terminus market, in which the broker-dealer system includes at least one port, the port being coupled through at least one path to at least one terminus market, wherein each path includes at least one direct link between a port and a market system and optionally one or more additional links between the said market system and other market systems, each path having a first terminus at a port and a second terminus at a terminus market, terminus markets being markets to which orders for securities are sent by the broker-dealer system.",
	"url": null,
	"owner": "E*Trade Financial Corporation",
	"publication_number": "07242669",
	"publication_date": "2007-07-10",
	"application_number": "09729527",
	"application_date": "2000-12-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Programmable virtual book system",
	"summary": "",
	"abstract": "An electronic information browsing system that provides a book-like interfaceu2014a virtual booku2014for presenting electronic contents. Specifically, an electronic information browsing system that allows users to configure its behavior via data and program specification encapsulated in a dynamic file format. Configurable behavior includes but not limited to the kind of contents to be displayed in the virtual book, the sources of the contents to be displayed, the static aspects of the virtual book such as the book dimensions and the dynamic aspects of the virtual book such as when a page is to be flipped, how the flipping of pages is contingent upon the execution of certain pre-specified events, etc.",
	"url": null,
	"owner": "E-Book Systems Pte Ltd",
	"publication_number": "07304635",
	"publication_date": "2007-12-04",
	"application_number": "11319699",
	"application_date": "2005-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for adding value to a stored-value account",
	"summary": "",
	"abstract": "A system and method for adding value into a customer's stored-value account is provided. A stored-value card is distributed to a merchant for distribution to a customer who has an account with an associated account number with a specific provider of goods and/or services. The card has an associated identifier used to associate a value with the card. Associated value is redeemable with one or more providers, including the specific provider. During a card purchase, a central processor receives a request to activate the card from a merchant terminal. The central processor receives a redemption request comprising the identifier from the customer. The central processor identifies the provider and account number, and inserts the associated value into the account. The central processor receives a subsequent request to activate the card from a merchant terminal, recognizes the card, identifies the provider and account number, and inserts the value into the account.",
	"url": null,
	"owner": "e2interactive, Inc.",
	"publication_number": "07292998",
	"publication_date": "2007-11-06",
	"application_number": "11672689",
	"application_date": "2007-02-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Stereo display for position sensing systems",
	"summary": "",
	"abstract": "A method for display of radar data includes performing a first radar scan to obtain, for at least one object (), a first range reading, a first azimuth reading, and a first altitude reading. A second radar scan is then performed to obtain, for the at least one object (), a second range reading, a second azimuth reading, and a second altitude reading. Position and travel direction of the at least one object () are computed within a predetermined cylindrical volume (), according to readings from the first and second radar scans. An icon () is assigned to the at least one object (). A reference point (R) is determined for the predetermined cylindrical volume. The icon () is then displayed within the predetermined cylindrical volume () in stereoscopic form.",
	"url": null,
	"owner": "Eastman Kodak Company",
	"publication_number": "07301497",
	"publication_date": "2007-11-27",
	"application_number": "11099348",
	"application_date": "2005-04-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Prioritization of third party access to an online commerce site",
	"summary": "",
	"abstract": "Providing prioritization of user online access to an online commerce site. Third party applications using API function calls to access an online commerce site are restricted to specific services by an access rule. An access rule defines which API server on the online commerce site a specific third party application may access when using a specific API function call. In this way, the operator of the online commerce site may prioritize server access per service level agreements based on a specific third party application and API function call.",
	"url": null,
	"owner": "eBay Inc.",
	"publication_number": "07305469",
	"publication_date": "2007-12-04",
	"application_number": "10025267",
	"application_date": "2001-12-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for ordering goods, services, and content over an internetwork using a virtual payment account",
	"summary": "",
	"abstract": "A virtual payment system for ordering and paying for goods, services and content over an internetwork is disclosed. The virtual payment system comprises a commerce gateway component () and a credit processing server component (). The virtual payment system is a secure, closed system comprising registered sellers and buyers. A buyer becomes a registered participant by applying for a virtual payment account. Likewise, a seller becomes registered by applying for a seller account. A buyer can instantly open an account on-line. That is, the credit processing component () immediately evaluates the buyer's virtual payment card application and assigns a credit limit to the account. Once an account is established, a digital certificate is stored on the registered participant's computer. The buyer can then order a product, i.e., goods, services or content from a seller and charge it to the virtual payment account. When the product is shipped, the seller notifies the commerce gateway component (), which in turn notifies the credit processing server that applies the charges to the buyer's virtual payment account. The buyer can settle the charges using a prepaid account, a credit account, or by using reward points earned through use of the virtual payment card. A buyer may create sub-accounts that have additional limitations imposed on the owners of the sub-accounts.",
	"url": null,
	"owner": "eCharge Corporation",
	"publication_number": "07249097",
	"publication_date": "2007-07-24",
	"application_number": "10663443",
	"application_date": "2003-09-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automated trading system in an electronic trading exchange",
	"summary": "",
	"abstract": "An electronic exchange system network includes a trader site having an automated trading system capable of submitting orders and/or quotes to an exchange site. The automated trading system determines whether an order or quote should be submitted based on, for example, the current market price of an option and theoretical buy and sell prices. The theoretical buy and sell prices are derived from, among other things, the current market price of the security underlying the option. The theoretical buy and sell prices are calculated when underlying factors that contribute to the theoretical prices change. Computation times of the theoretical prices may be reduced by using precalculated values and/or using interpolation and extrapolation. Other techniques may be used in addition or in the alternative to speed automatic decision-making. In addition, a system of checks may be conducted to ensure accurate and safe automated trading. The automated trading system may be capable of automatically submitting orders in connection with the underlying security in order to hedge part of the delta risk associated with the automated option trades.",
	"url": null,
	"owner": "Edge Capture, LLC",
	"publication_number": "07177833",
	"publication_date": "2007-02-13",
	"application_number": "09618222",
	"application_date": "2000-07-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for monitoring and managing an enterprise network",
	"summary": "",
	"abstract": "A system for providing access to a network is provided. The system includes a management interface system that receives management data from one or more management systems, where each management system provides a type of management data for the network, such as device status data, event data, device performance monitoring data, or other suitable data. A portal system connected to the management interface system receives the management data and presents the management data in a predetermined format, such as in one or more view windows, such that management data from incompatible management systems can be presented in a single user-viewable display.",
	"url": null,
	"owner": "Edge Technologies, Inc.",
	"publication_number": "07269625",
	"publication_date": "2007-09-11",
	"application_number": "09812136",
	"application_date": "2001-03-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Efficient rendering of similar objects in a three-dimensional graphics engine",
	"summary": "",
	"abstract": "Multiple instances of a single object are aggregated and submitted collectively to a graphics API for rendering. Vertices of the object are replicated into a large buffer and are modified so as to be bound to different transformation matrices in a matrix palette. An index buffer of the object is similarly replicated. Each replicated index buffer is modified to refer to vertices of a different, respective set of replicated vertices. Thus, the large vertex and index buffers are initialized to contain multiple, distinct, and independent copies of the object. Instancing logic aggregates matrix palettes of individual instances of the same object into an aggregated matrix palette and sends the aggregated vertex and index buffers of the object along with the accumulated aggregated matrix palette to the graphics API for rendering. The graphics API resolves the aggregated vertex and index buffers and matrix palette to a collection of triangles in display coordinates to be rasterized, not knowing or caring that the collection of triangles represent not one object but many objects.",
	"url": null,
	"owner": "Electronic Arts",
	"publication_number": "07209139",
	"publication_date": "2007-04-24",
	"application_number": "11031962",
	"application_date": "2005-01-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Non-forgeable objects in an object system",
	"summary": "",
	"abstract": "A method, system, and computer program product for defining a non-forgeable object is provided. In one embodiment, a non-forgeable object class is defined to include an attribute slot that can be set by an approved factory. The non-forgeable object class is further defined to include a predicate method that is satisfied only if the attribute slot has been set by an approved factory.",
	"url": null,
	"owner": "Electronic Data Systems Corporation",
	"publication_number": "07249346",
	"publication_date": "2007-07-24",
	"application_number": "10427190",
	"application_date": "2003-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Structure and method of modeling integrated business and information technology frameworks and architecture in support of a business",
	"summary": "",
	"abstract": "An enterprise architecture () for a business is divided into a business architecture (), an information technology architecture (), and an enterprise management framework (). The business architecture () is the main driver for the information technology architecture () but the information technology architecture () can also have an impact on the construction of the business architecture (). The enterprise management framework () allows for the management of the two architectures. A framework tower () is built around essential and mandatory components of the enterprise architecture (). The framework tower () is made up of a plurality of planes representing mandatory components of the enterprise architecture (). The components of the framework tower () include a strategic plan (), a business architecture (), an information architecture (), an application architecture (), a technology infrastructure architecture (), and an enterprise information technology management framework (). Each component in the framework tower () addresses the people, processes, and technology of the enterprise architecture () so that strategic information technology planning, enterprise architecture definition, and repeatable and effective information technology enabling solutions can be performed and delivered to the business.",
	"url": null,
	"owner": "Electronic Data Systems Corporation",
	"publication_number": "07162427",
	"publication_date": "2007-01-09",
	"application_number": "09378514",
	"application_date": "1999-08-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Using shared files in a game console or computer for cross-game state sharing",
	"summary": "",
	"abstract": "A method for enabling interaction with a shared game data file in a game device is provided. The method comprises: providing logic to perform one or more actions associated with the shared game data file; and providing logic to cause the game device to perform an action in the one or more actions with the shared game data file, the shared game data file allowing data associated with a first game in the shared game data file to affect actions in a second game.",
	"url": null,
	"owner": "Electronics Arts Inc.",
	"publication_number": "07156733",
	"publication_date": "2007-01-02",
	"application_number": "10437259",
	"application_date": "2003-05-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Central processing unit",
	"summary": "",
	"abstract": "A central processing unit having: (A) a microprocessor; (B) a main memory; (C) a microprocessor interface. The interface includes: a semiconductor integrated circuit having formed therein: (i) a data rebuffering section disposed in the chip and adapted to couple data from a one of a plurality of data ports to a data port of the microprocessor selectively in accordance with a control signal; and (ii) a main memory interface adapted for coupling to a main memory for the microprocessor, such main memory interface being adapted for coupling to the microprocessor and being coupled to the data rebuffering section for providing control signals to the main memory section for enabling data transfer between the main memory and the microprocessor through the data rebuffering section.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07302532",
	"publication_date": "2007-11-27",
	"application_number": "10984091",
	"application_date": "2004-11-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Chassis cover with air flow control flaps",
	"summary": "",
	"abstract": "A chassis having a cover, comprising: planar surface portions; a pair of spaced U-shaped hinges perpendicular to the planar surface portions of the cover and having arms of such hinges terminating at the planar surface portions; and a flap having handles at ends thereof, the handles being pivotally disposed in the U-shaped hinges, surfaces of the U-shaped hinges providing a camming surface to pivot the flap between a horizontal position parallel to the planar surface portions of the cover and a vertical position perpendicular to the planar surface portions of the cover.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07307832",
	"publication_date": "2007-12-11",
	"application_number": "11238352",
	"application_date": "2005-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Checkpoint and consistency markers",
	"summary": "",
	"abstract": "Described are a method, computer program product, and system for obtaining a copy of source data in a consistent state. One or more file operations having a corresponding time sequence which modify said source data are recorded. A request for a copy of the source data in a consistent state is received. It is determined at which point in the corresponding time sequence said source data is in a consistent state as a result of applying a portion of the file operations. The point in the corresponding time sequence at which the source data is in a consistent state is marked. The portion of file operations determined to place the source data in a consistent state is applied to the copy of the source data.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07177994",
	"publication_date": "2007-02-13",
	"application_number": "11072612",
	"application_date": "2005-03-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic RDF groups",
	"summary": "",
	"abstract": "Described are techniques used in dynamically modifying RDF groups. A system call is issued by a host computer system to execute a remote system call on a first data storage system to create, remove, or modify an RDF group between the first data storage system and another data storage system that is remotely connected to the first data storage system in an RDF switched environment. As part of executing the remote system call, data is pushed from the first to the second data storage systems without having an established link between the data storage systems. Each data storage system performs processing to make the necessary modifications in all directors in accordance with the dynamic RDF group. A status indicating success or failure of the remote system call is returned to the host computer system.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07240116",
	"publication_date": "2007-07-03",
	"application_number": "11129023",
	"application_date": "2005-05-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for maintaining inventory of logical volumes stored on storage elements",
	"summary": "",
	"abstract": "Method and apparatus for keeping and maintaining inventory of logical entities stored in a computer storage system are disclosed. Identifying information for each user of a logical volume is maintained. As a part of the inventory process, this system may verify that the logical volume is still in use, for example by determining when it was last accessed and if a certain time threshold has been exceeded, verifying with the users of the logical entity that logical entity is no longer needed to be stored at its current location.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07243188",
	"publication_date": "2007-07-10",
	"application_number": "10747385",
	"application_date": "2003-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for managing migration of data in a computer system",
	"summary": "",
	"abstract": "Methods and apparatus for migrating a data set. In one embodiment, a migration is paused. In another embodiment, for a migration of data between multiple source/target groups, the migration is initiated by beginning transfer for some groups and queuing others for later processing. In a further embodiment, different transfer vehicles are used for different source/target groups. In a still further embodiment, a transfer vehicle is automatically selected for at least one source/target group.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07281108",
	"publication_date": "2007-10-09",
	"application_number": "11438975",
	"application_date": "2006-05-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for migrating data in a computer system",
	"summary": "",
	"abstract": "Methods and apparatus for migrating a logical object. In one embodiment, a migration is performed by automatically determining the source location(s) of the logical object, moving the data stored therein to a target location while maintaining the availability of the data at the source location to an application program, and automatically servicing access requests from the application program at the target location after moving the data. In another embodiment, a migration is performed by automatically provisioning target location(s) to store a logical object, moving the data in the logical object to the target location(s) while maintaining its availability to an application program, and automatically servicing access requests from the application program at the target location after moving the data. In a further embodiment, a migration is performed by moving the data within a logical object from a source logical volume to a target logical volume, automatically servicing access requests from an application program at the target logical volume after moving the data, and retiring the source logical volume.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07263590",
	"publication_date": "2007-08-28",
	"application_number": "10421478",
	"application_date": "2003-04-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for storage and retrieval of very large databases using a direct pipe",
	"summary": "",
	"abstract": "A method and apparatus for directly connecting very large data streams from an archive command into a backup data system using an u201cintelligent process.u201d An output stream is piped into an intelligent pipe-reading process and distributed over a set of temporary data stores built from raw storage resources. A pipe interface process supervises backup of each filled data store, while the remaining output stream continues to be piped into another available data store. The backup system completes archiving of the datastream, keeping a catalog of the datastream storage locations. To retrieve the data, the intelligent process is run in reverse as a pipe-writing process, requesting data from the backup system. Retrieved data traverses the data stores from the backup system and are pumped into the pipe-writing process for delivery to the pipe output file identified by the retrieve or import command.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07254595",
	"publication_date": "2007-08-07",
	"application_number": "10463649",
	"application_date": "2003-06-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for verifying storage access requests in a computer storage system with multiple storage elements",
	"summary": "",
	"abstract": "Method and apparatus for verifying access to logical volume stored on at least one of the plurality of storage elements. The access can involve verification that the appropriate logical volume is being accessed and may also or instead include checking of authorization of a user to access that logical volume or logical entity. A database may be maintained to track users or host computers that are permitted to access the logical volume.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07225191",
	"publication_date": "2007-05-29",
	"application_number": "09605553",
	"application_date": "2000-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for administering software modules in a storage area network management application",
	"summary": "",
	"abstract": "System, methods and apparatus operate a module server to service a plurality of different storage area network management modules that each provides a respective type of management functionality for elements operating within a storage area network. The system operates an administration module in conjunction with a module sever. The administration module provides a plurality of module administration interfaces that are software interfaces that can be remotely invoked to administer the plurality of different storage area network management modules. The system receives a remote invocation of at least one of the plurality of module administration interfaces and applies module administration functionality associated with the at least one remotely invoked module administration interface to remotely administer at least one of the storage area network management modules serviced by the module server. By decoupling the administration from the module server, the module server does not need to be shut down to perform module administration and is a less complicated and smaller software process.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07275098",
	"publication_date": "2007-09-25",
	"application_number": "10608608",
	"application_date": "2003-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for controlling access to a resource",
	"summary": "",
	"abstract": "An input/output interface receives an access request from a requester. A processor associated with the input/output interface applies a filter operation to select a subset of rules from a master set of rules maintained within an authorization database. Rules can be selected in this manner using filter operations so that all rules in the rule set need not be processed. A rule may include a disregard instruction. The processor further performs at least one rule operation based on the subset of rules to produce an access control decision in the memory system until either a rule operation including a disregard instruction is performed to limit performance of rule operations in the selected set of rules or until all rule operations in the selected set of rules that are applicable to the access control decision are performed.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07185192",
	"publication_date": "2007-02-27",
	"application_number": "09611913",
	"application_date": "2000-07-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for facilitating access to content in a data storage system",
	"summary": "",
	"abstract": "One embodiment is a system for locating content on a storage system, in which the storage system provides a location hint to the host of where the data is physically stored, which the host can resubmit with future access requests. In another embodiment, an index that maps content addresses to physical storage locations is cached on the storage system. In yet another embodiment, intrinsic locations are used to select a storage location for newly written data based on an address of the data. In a further embodiment, units of data that are stored at approximately the same time having location index entries that are proximate in the index.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07263576",
	"publication_date": "2007-08-28",
	"application_number": "10731613",
	"application_date": "2003-12-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for managing plug-in services",
	"summary": "",
	"abstract": "Methods and apparatus operate in a computer system to manage initiation and operation of plug-in modules providing plug-in services. The plug-in manager obtains identities of a plurality of plug-in modules and retrieves a dependency list indicating respective plug-in services provided by, and required by, each plug-in module identified in the identities of the plug-in modules. The plug-in manager then calculates a plug-in initiation order based upon the dependency list indicating respective plug-in services provided by, and required by, each plug-in module. The plug-in manager then initiates service operation of plug-in modules according to the plug-in initiation order, such that if a first plug-in module provides a service required by a second plug-in module, the first plug-in module is initiated such that the service provided by the first plug-in module is available to the second plug-in module when required by the second plug-in module. In addition, the plug-in manager can operate a wait state operation within plug-in modules that provide services that depend upon each other in order to avoid service deadlocked situations.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07254814",
	"publication_date": "2007-08-07",
	"application_number": "09967111",
	"application_date": "2001-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for parsing a content address to facilitate selection of a physical storage location in a data storage system",
	"summary": "",
	"abstract": "One embodiment is a system for locating content on a storage system, in which the storage system provides a location hint to the host of where the data is physically stored, which the host can resubmit with future access requests. In another embodiment, an index that maps content addresses to physical storage locations is cached on the storage system. In yet another embodiment, intrinsic locations are used to select a storage location for newly written data based on an address of the data. In a further embodiment, units of data that are stored at approximately the same time having location index entries that are proximate in the index.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07162571",
	"publication_date": "2007-01-09",
	"application_number": "10731603",
	"application_date": "2003-12-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for processing access requests in a content addressable computer system",
	"summary": "",
	"abstract": "Embodiments of the present invention are directed to a method and apparatus for receiving an input/output (I/O) request from a host computer that specifies an operation to be performed on a content addressable storage (CAS) system and determining which operation is specified by the request before receipt of the I/O request by a content addressable storage system. In another embodiment, an I/O request from a host computer is received by a first CAS which determines if the request is to be processed by another CAS system. When it is determined that the request is to be processed by another CAS system, the first CAS system may forward the request to the other CAS system. In another embodiment, an appliance receives an I/O request from a host computer to perform an operation that accesses a unit of content. The appliance may set up a communication session between the host and a CAS system so that the unit of content may be transmitted between the host and the CAS system without passing through the appliance.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07240150",
	"publication_date": "2007-07-03",
	"application_number": "10836415",
	"application_date": "2004-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for transferring data in a content addressable computer system",
	"summary": "",
	"abstract": "Embodiments of the present invention are directed to a method and apparatus for receiving an input/output (I/O) request from a host computer that specifies an operation to be performed on a content addressable storage (CAS) system and determining which operation is specified by the request before receipt of the I/O request by a content addressable storage system. In another embodiment, an I/O request from a host computer is received by a first CAS which determines if the request is to be processed by another CAS system. When it is determined that the request is to be processed by another CAS system, the first CAS system may forward the request to the other CAS system. In another embodiment, an appliance receives an I/O request from a host computer to perform an operation that accesses a unit of content. The appliance may set up a communication session between the host and a CAS system so that the unit of content may be transmitted between the host and the CAS system without passing through the appliance.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07240151",
	"publication_date": "2007-07-03",
	"application_number": "10836502",
	"application_date": "2004-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Protecting database records against a failed write operation",
	"summary": "",
	"abstract": "Described are techniques for processing data requests in connection with an I/O operation. A write data request is sent from a host to a target data storage system. The host performs a data validation, such as a checksum calculation, using the data of the data request. The data request is sent to the target data storage system. The target data storage system may be enabled to perform data validation processing on a per device basis by setting one or more device flag bits for a device. The target data storage system performs data validation processing in accordance with the flag bit settings of a device associated with a data request. A target checksum value using the data received on the target data storage system is determined and compared to the host checksum value in order to determined data validity. Data recovery processing is performed if data corruption is determined. A partial write of the data requested may be performed for those data portions occurring prior to the corrupted data that have been successfully validated.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07254752",
	"publication_date": "2007-08-07",
	"application_number": "10396033",
	"application_date": "2003-03-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methods for implementing an adaptive object model",
	"summary": "",
	"abstract": "In a managed information environment, such as a storage area network, a management application typically monitors and controls a plurality of manageable entities such as storage array devices. The manageable entities may emanate from multiple providers, or vendors, each having dissimilar interfaces and parameters. A common object model operable to normalize and represent device specific parameters that define a plurality of dissimilar manageable entities such as storage array devices enables interrogation and manipulation of the dissimilar storage devices for performing management and control via the management application. The management application selects, based on the device type, a representation in the common object model enumerating the device specific parameters of the storage device. Enumeration may involve identifying corresponding attributes between the device specific parameters and the attributes of the common object model, and copying, translating, or converting the corresponding fields. In this manner, the management application normalizes and performs manipulations of the dissimilar storage devices using the common object model.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07254575",
	"publication_date": "2007-08-07",
	"application_number": "10814663",
	"application_date": "2004-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Techniques for producing a consistent copy of source data at a target location",
	"summary": "",
	"abstract": "Described area system and computer program product for producing a point in time copy of source data. A set of records corresponding to a time ordered series of recorded file operations as applied to said source data is received. The set of records includes one or more consistency point markers, each consistency point marker indicating a point in time at which said source data is in a consistent state when a portion of said recorded file operations occurring up to said point in time is applied to said source data. The recorded file operations corresponding to said set of records are applied to said copy of the source data until a marker record corresponding to a consistency point marker is determined. Also described is a target system for producing a point in time copy of source data including a data storage device including said copy of source data and a replication service.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07310716",
	"publication_date": "2007-12-18",
	"application_number": "11072128",
	"application_date": "2005-03-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Telecommunications systems",
	"summary": "",
	"abstract": "A telecommunications system comprising one or more cross-connects and a plurality of telephone exchanges wherein two or more of the telephone exchanges are arranged to communicate with each other via the one or more routers and an adapter for providing the telephone exchanges with a means of inter-communication via the one or more routers wherein the adapter converts traffic between packetised and non-packetised form.",
	"url": null,
	"owner": "Ericsson AB",
	"publication_number": "07180897",
	"publication_date": "2007-02-20",
	"application_number": "09432319",
	"application_date": "1999-11-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Extension of address resolution protocol (ARP) for internet protocol (IP) virtual networks",
	"summary": "",
	"abstract": "A system for supporting translation of virtual IP addresses to Ethernet/MAC addresses in a multi-Virtual Network environment, in which address resolution tables are generated and maintained by Virtual Networking Devices. Virtual Networking Device (VND) sends and/or receives Virtual Network-specific ARP traffic. The Virtual Network-specific ARP traffic includes ARP requests or responses that map a MAC address to an IP address in the private IP address space of an associated Virtual Private Network. The disclosed Virtual Networking Devices can therefore operate in configurations in which multiple independent entities operate on separate Virtual Networks, and where servers may be accessible via virtual IP addresses within the private IP address spaces of associated Virtual Networks.",
	"url": null,
	"owner": "Ericsson, Inc.",
	"publication_number": "07260648",
	"publication_date": "2007-08-21",
	"application_number": "10054522",
	"application_date": "2002-01-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Preprocessing of interfaces to allow fast call through",
	"summary": "",
	"abstract": "A solution to avoid performance degradation associated with load-object independence by arranging interface source code, particurlarly JNI source code, in a stylized form, and then preprocessing the stylized interface source code into a Virtual Machine (u201cVMu201d) specific form. The stylized source code allows a preprocessor to identify and track field and method identifiers, and to match up the field and method uses with the specification of the field or method. The source code is stylized by substituting stylized variable names, each with a native element identifier, for non-stylized variables.",
	"url": null,
	"owner": "Esmertec AG",
	"publication_number": "07207036",
	"publication_date": "2007-04-17",
	"application_number": "10203151",
	"application_date": "2001-02-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Control system and method therefor",
	"summary": "",
	"abstract": "A flexible control system and method of controlling a processing operation. The control system and method may be employed to control a high speed manufacturing system for processing articles of manufacture requiring processes to be performed on the articles at a pre-selected processing rate includes a trunk for simultaneously conveying a plurality of the articles of manufacture at the pre-selected processing rate in a first mode of motion from the beginning of the manufacturing system to the end of the system. At least one branch processing station is positioned intermediate the beginning and the end of the trunk wherein the branch processing station during its operation performs at least one process on articles of manufacture conveyed on the branch processing station and where the articles are conveyed in a second mode of motion. At least one transfer device is positioned intermediate the trunk and the branch processing station to continuously extract articles of manufacture from the trunk and transition the movement of the extracted articles of manufacture from the first mode of motion to the second mode of motion for transfer to the branch processing station. The transfer device also extracts each of the processed articles of manufacture from the branch processing station and transitions the movement of the articles from the second mode of motion to the first mode of motion for transfer to the trunk.",
	"url": null,
	"owner": "Eveready Battery Company, Inc.",
	"publication_number": "07171281",
	"publication_date": "2007-01-30",
	"application_number": "10365207",
	"application_date": "2003-02-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Unified, configurable, adaptive, network architecture",
	"summary": "",
	"abstract": "A network switch having a unified, adaptive management paradigm for wireless network devices is disclosed. The switch includes configurable ports for connecting devices. A software application running on the switch allows a network administrator to selectively configure each port to support either a wired device or wireless device. Configuration information and software images that are needed for operation of the wireless device are associated with the port. When a wireless device is first plugged into the switch port, it downloads its configuration directly from the switch port. By storing the configuration information and images at the switch and automatically downloading them to the wireless devices, the task of configuring the devices is greatly simplified for the network administrator. This is particularly advantageous in heterogeneous network environments that support both wired and wireless devices, and where wireless device are readily moved to different ports.",
	"url": null,
	"owner": "Extreme Networks",
	"publication_number": "07310664",
	"publication_date": "2007-12-18",
	"application_number": "10773487",
	"application_date": "2004-02-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Identification and management of fraudulent credit/debit card purchases at merchant ecommerce sites",
	"summary": "",
	"abstract": "Transaction processing of online transactions at merchant sites determines the likelihood that such transactions are fraudulent, accounting for unreliable fields of a transaction order, which fields do not reliably identify a purchaser. A scoring server using statistical model uses multiple profiles associated with key fields, along with weights to indicate the degree to which the profiles identify the purchaser of the transaction.",
	"url": null,
	"owner": "Fair Isaac Corporation",
	"publication_number": "07263506",
	"publication_date": "2007-08-28",
	"application_number": "09782681",
	"application_date": "2001-02-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic document validation",
	"summary": "",
	"abstract": "Electronic documents are validated through application of a set of validation rules. One example of an electronic document to be validated has main data and view portions, wherein the main data portion can be parsed separately from the view portion, and the view portion includes presentation formatting for providing a display corresponding to the main data portion. There, the validation rules include comparison rules for determining whether a display provided by the view portion substantially matches the main data portion. Linking elements in the electronic document that point to corresponding information field in the view and main data portions can accommodate the matching comparison. Other types of validation rules include membership rules and reference identifier rules, and various document views corresponding to a given transaction can be separately validated.",
	"url": null,
	"owner": "Fannie Mae",
	"publication_number": "07299408",
	"publication_date": "2007-11-20",
	"application_number": "10339775",
	"application_date": "2003-01-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Graphical automated machine control and metrology",
	"summary": "",
	"abstract": "A graphical programming system allows a user to place geometric shapes onto a scaled image, the shape having associated behavior that operates on the image or on the object of which the image is formed. In a preferred embodiment, the shapes are objects in the Visio program by Microsoft Corporation. The shapes are dragged from a stencil onto an image provided by ion beam or electron microscope image. The shape invokes software or hardware to locate and measure features on the image or to perform operations, such as ion beam milling, on the object that is imaged.",
	"url": null,
	"owner": "FEI Company",
	"publication_number": "07308334",
	"publication_date": "2007-12-11",
	"application_number": "11115751",
	"application_date": "2005-04-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for facilitating financial transactions between consumers over the internet",
	"summary": "",
	"abstract": "A method for enabling two individual consumers to complete a transaction that includes payment from one consumer (the payor, or buyer) to another consumer (the payee, or seller). An intermediary typically operates the service over a computer network of nodes, such as the Internet. The buyer has the convenience of paying through a variety of different payment instruments. Likewise, the seller has the convenience of receiving payment through a variety of different disbursement instruments. For a fee, the intermediary collects the payment from the buyer and pays the seller. Although the intermediary may receive payment from the buyer before the intermediary transfers the payment to the seller, the intermediary may choose to pay the seller before receiving payment from the buyer. In this case, the intermediary assumes the risk of nonpayment by the buyer. Alternatively, the intermediary may pay a third party that specializes in processing transactions for the payment instrument chosen by the buyer to assume the risk of nonpayment by the buyer. In this case, the intermediary receives a promise of payment from the third party before the intermediary pays the seller. Such a promise of payment from the third party is referred to as an authorization.",
	"url": null,
	"owner": "First Data Corporation",
	"publication_number": "07177836",
	"publication_date": "2007-02-13",
	"application_number": "09476386",
	"application_date": "1999-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and arrangements for providing efficient information transfer over a limited-speed communications link",
	"summary": "",
	"abstract": "Methods and arrangements are disclosed for transferring digital data over a limited speed communications link between a client side subarrangement () and a server side subarrangement (). Within the client side subarrangement (), a client application () receives and transmits digital data using a first communications protocol stack () and, within the server side subarrangement (), a server application () receives and transmits digital data using the first communications protocol stack (). Digital data is transferred between the client application () and the server application () through a client proxy () within the client side subarrangement () and an access gateway () within the server side subarrangement (). Said client proxy () performs protocol conversations between the first communications protocol stack () and a second communications protocol stack () that provides a bandwidth efficiency that is better than a bandwidth efficiency to which the first communications protocol corresponds.",
	"url": null,
	"owner": "First Hop Oy",
	"publication_number": "07162535",
	"publication_date": "2007-01-09",
	"application_number": "10099296",
	"application_date": "2002-03-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for tracking installed equipment and deploying spare parts",
	"summary": "",
	"abstract": "There is disclosed a system and method of tracking installed equipment and deploying spare parts. In an embodiment, each piece of equipment may includes a unique electronic identifier configured to be accessible over a data network, and accessible locally via a RFID (Radio Frequency IDentification) network. The unique identifier may be read utilizing a RFID reader of known geographic location. Any installed equipment and spare parts deployed in the vicinity of the RFID reader may be identified by their respective unique identifiers, and their geographic location may be tracked and collected at a networked data collection server. Status information for each unit of installed equipment may also be tracked and correlated with the geographic location at the data collection server. Spare parts may be deployed, or redeployed, based on the collected status information for each unit, and the geographic location as identified by the RFID reader.",
	"url": null,
	"owner": "Footprint Systems Inc.",
	"publication_number": "07219834",
	"publication_date": "2007-05-22",
	"application_number": "10980324",
	"application_date": "2004-11-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for routing traffic through a virtual router-based network switch",
	"summary": "",
	"abstract": "A method for routing packets in a router includes establishing a flow data structure identifying a packet flow through a virtual router in the router. Next, a system executing the method receives a packet, said packet having at least one packet header. The method then compares a subset of the at least one packet header to a subset of the flow data structure. If the subset of the at least one packet header matches the subset of the flow data structure, then the packet can be hardware accelerated to a network interface. Otherwise, the packet can be either dropped, or forwarded to a general purpose processor for processing.",
	"url": null,
	"owner": "Fortinet, Inc.",
	"publication_number": "07177311",
	"publication_date": "2007-02-13",
	"application_number": "10163079",
	"application_date": "2002-06-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Digital media organization and access",
	"summary": "",
	"abstract": "Methods and apparatus, including computer program products, implementing and using techniques for accessing and organizing data items, including items of digital media, such as digital images, video stream, audio stream, text documents and the like. An object model defines a plurality of data object classes, including a media object class for representing items of digital media and a tag object class for representing categories of digital media. A request for one or more data items specifies a search condition. A collection of one or more data objects instantiated from the data object classes is generated, whereby the data objects in the collection represent data items satisfying the search condition. An iterator configured to sequentially access the data items represented by the data objects in the collection of data objects is generated and used to sequentially access the data items.",
	"url": null,
	"owner": "Fotiva, Inc.",
	"publication_number": "07296032",
	"publication_date": "2007-11-13",
	"application_number": "10151651",
	"application_date": "2002-05-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for compensating for parallax in multiple camera systems",
	"summary": "",
	"abstract": "A camera array captures plural component images which are combined into a single scene. In one embodiment, each camera of the array is a fixed digital camera. The images from each camera are warped to a common coordinate system and the disparity between overlapping images is reduced using disparity estimation techniques.",
	"url": null,
	"owner": "Fuji Xerox Co., Ltd.",
	"publication_number": "07277118",
	"publication_date": "2007-10-02",
	"application_number": "09989638",
	"application_date": "2001-11-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for an automatic fluid ejector alignment and performance system",
	"summary": "",
	"abstract": "Methods and apparatus provide for automatic fluid ejector alignment and performance evaluation and modification in one or multiple planes. A fluid ejector fires a drop through a drop detection module. A signal indicating drop presence or absence is sent to a computer. The computer analyzes the data, and makes a compensation determination of a preferred method of using the fluid ejector. The compensation determination may include electronically modifying the image data to be printed, physically manipulating the fluid ejector, completely skipping the fluid ejector during printing operations, or in some other way modifying the fluid ejector or image data such that apparent printed image error due to fluid ejector alignment or performance error is reduced.",
	"url": null,
	"owner": "Fuji Xerox Co., Ltd.",
	"publication_number": "07163275",
	"publication_date": "2007-01-16",
	"application_number": "10752717",
	"application_date": "2004-01-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for editing and aligning captured events and data to a common time base to create customer service engagement multimedia document",
	"summary": "",
	"abstract": "When a hardware or software problem reoccurs, a customer is rarely able to remember and repeat the process that was performed by a customer service representative to correct the problem the first time. By capturing desktop events and/or one or more other available data streams during the first customer service engagement, and making a document containing that data available to the customer, the customer can solve a reoccurrence of the problem without having to contact the customer service center. The captured data is integrated into a single multimedia document, which has an indexing capability, highlights critical information, and includes annotations and/or comments. The integrated multimedia document can be distributed to the customer by the customer service representative during an engagement, over a customer accessible network site visited by the customer, or in a CD-ROM provided with the product.",
	"url": null,
	"owner": "Fuji Xerox Co., Ltd.",
	"publication_number": "07287223",
	"publication_date": "2007-10-23",
	"application_number": "10455616",
	"application_date": "2003-06-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for filtering and/or viewing collaborative indexes of recorded media",
	"summary": "",
	"abstract": "Systems and methods for filtering and viewing collaborative indexes of annotations of multimedia or video streams can include obtaining a multimedia or video stream, obtaining user indexes of annotations of the multimedia or video stream, merging the indexes, associating portions of the multimedia or video stream with the annotations, determining high-value annotations and displaying the high value annotations. Systems and methods for providing useful visualizations of the indexes of annotations and high value annotations are also provided.",
	"url": null,
	"owner": "Fuji Xerox Co., Ltd.",
	"publication_number": "07257774",
	"publication_date": "2007-08-14",
	"application_number": "10207108",
	"application_date": "2002-07-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for generating video summary image layouts",
	"summary": "",
	"abstract": "Systems and methods for creating aesthetically pleasing visual image summaries from a collection of input images. The systems and methods determine a visual image summary by creating candidate partial layouts, assigning penalty scores to the candidate partial layouts based on a number of evaluation criteria, evaluating the penalty scores for the candidate partial layouts, and building upon the candidate partial layouts, beginning with the lowest scoring candidate partial layout first, to form complete layouts. The resultant visual image summary fits within a user defined area, maintains the order of the input images, and contains a relative small amount of aesthetically undesirable qualities.",
	"url": null,
	"owner": "Fuji Xerox Co., Ltd.",
	"publication_number": "07275210",
	"publication_date": "2007-09-25",
	"application_number": "10392822",
	"application_date": "2003-03-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Devices for interpreting and retrieving XML documents, methods of interpreting and retrieving XML documents, and computer product",
	"summary": "",
	"abstract": "A device includes a section to input retrieval conditions, a section that judges whether documents-structure data arranged according to a tree structure in an order of appearance of elements in XML documents matches with corresponding one of the retrieval conditions input, a section that extracts character string in character-string data associated with documents-structure data, which matches with the retrieval conditions, and a section that judges whether the character string extracted matches with the retrieval conditions.",
	"url": null,
	"owner": "Fujitsu Limited",
	"publication_number": "07228296",
	"publication_date": "2007-06-05",
	"application_number": "10780404",
	"application_date": "2004-02-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for modeling and advertising asymmetric topology of a node in a transport network",
	"summary": "",
	"abstract": "A method and system for providing an internal topology of a node within a network includes determining asymmetric connections between traffic bearing components in a network node. An intranode connectivity is determined between the traffic bearing components based on the asymmetric connections. A model of the node indicative of the intranode connectivity is distributed to a disparate node in a network with a node. The model is used at a disparate node in determining a routing path through the network.",
	"url": null,
	"owner": "Fujitsu Limited",
	"publication_number": "07173912",
	"publication_date": "2007-02-06",
	"application_number": "09848871",
	"application_date": "2001-05-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems to interface navigation operations",
	"summary": "",
	"abstract": "Methods and Systems are provided for interfacing to navigation operations. An application programming interface (API) library is provided having navigation modules, guidance modules, routing modules, and mapping modules. The API is accessible to customized modules operating on a portable electronic device. The customized modules are operable to selectively access and process a number of the modules using the API library while the customized modules are processing on the portable electronic device.",
	"url": null,
	"owner": "Garmin Ltd.",
	"publication_number": "07228225",
	"publication_date": "2007-06-05",
	"application_number": "11456491",
	"application_date": "2006-07-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Convergence events notification system",
	"summary": "",
	"abstract": "A method and apparatus for furnishing a user with notification of events occurring within an computer-based information handling system, convergence system, or the like is disclosed. Multiple software applications executing within the system are monitored for the occurrence of selected events, whereupon a notification of the event may be generated and displayed to the user via a single integrated user interface. The user may take action on the event by selecting the displayed notification whereupon the system communicates the desired action to the application for execution.",
	"url": null,
	"owner": "Gateway Inc.",
	"publication_number": "07260610",
	"publication_date": "2007-08-21",
	"application_number": "10715289",
	"application_date": "2003-11-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for monitoring program flow to verify execution of proper instructions by a processor",
	"summary": "",
	"abstract": "In a method for monitoring the flow of execution of a series of instructions of a computer program, a sequence of instructions are transmitted to the processor to execute the monitored program. These instructions are analyzed, and the result of the analysis are verified by referring to reference data recorded with the program. The reference data can include a value predetermined in such a way as to correspond to the result of the analysis produced during the monitoring process only if all the instructions have been actually analyzed during the program flow. The invention also concerns a device for monitoring the program execution, a program device, and a programming device operating according to the monitoring principles.",
	"url": null,
	"owner": "Gemplus",
	"publication_number": "07168065",
	"publication_date": "2007-01-23",
	"application_number": "09936174",
	"application_date": "2000-01-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for device addressing using SNMP community string-based routing",
	"summary": "",
	"abstract": "A method of addressing a data packet includes receiving the data packet and creating a packet header for the data packet. The method also includes providing routing information in a community string format in the packet header and communicating the packet header and data packet to a gateway, wherein the gateway is operable to forward the data packet to a destination uniquely defined by the routing information.",
	"url": null,
	"owner": "GenBand Inc.",
	"publication_number": "07167473",
	"publication_date": "2007-01-23",
	"application_number": "10112347",
	"application_date": "2002-03-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Analysis engine and work space manager for use with gene expression data",
	"summary": "",
	"abstract": "A platform is for managing, integrating, and analyzing gene expression data. The platform includes a Run Time Engine(RTE) which provides more direct, quicker, and more efficient access to gene expression data through the use of memory mapped files. The platform also includes a workspace that is implemented in directories with data objects comprising XML descriptors coupled with binary data objects for storing gene and sample identifiers and input parameters for saved analysis sessions. The platform provides various Application Programming Interfaces (APIs) to a data warehouse, including a low-level C++ API, a high-level C++ API, a Perl API, R API, and CORBA API to access gene expression data from RTE memory mapped files. These APIs offer quicker and more direct access to the memory, thus improving the speed of overall operations.",
	"url": null,
	"owner": "Gene Logic Inc.",
	"publication_number": "07251642",
	"publication_date": "2007-07-31",
	"application_number": "10213881",
	"application_date": "2002-08-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and apparatus for processing radiographic images of scanned objects",
	"summary": "",
	"abstract": "A method, system and apparatus for processing a radiographic image of a scanned object is disclosed. A pixel offset correction is performed in integer format on the radiographic image using saturation arithmetic to produce an image in integer format with any negative corrected values clipped to a value of zero. The resulting pixels are converted to floating point format and the converted pixels are multiplied by a gain factor. Optionally the resulting pixels are recursively averaged with previous results. The resulting pixels are converted to integer format and the converted pixel values are clamped to a maximum value using saturation arithmetic. Non-functional pixel correction is performed in integer format and the resulting pixel values are clamped to a maximum value using saturation arithmetic. An optional processing path replaces the recursive average by a linear average. The resulting pixel values are optionally filtered to enhance features of interest. The resulting pixel value is mapped in integer format to a palette index to establish an output pixel intensity having one of many intensity levels. The optional processing is controlled through the hardware interface of a real-time image controller as images are acquired.",
	"url": null,
	"owner": "General Electric Company",
	"publication_number": "07215801",
	"publication_date": "2007-05-08",
	"application_number": "10456280",
	"application_date": "2003-06-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for modem protocol discrimination",
	"summary": "",
	"abstract": "The invention provides a method of selecting a modem carrier type for data transmission over a wireless communication system. An incoming call is received from a mobile vehicle and then an initial carrier tone is sent to a mobile vehicle in response to the incoming call. A modem response signal is received from a vehicle modem in response to the initial carrier tone. The modem response signal is determined to be either an analog modem response signal or a digital modem response signal, and then the call is connected to either the analog modem or digital modem based on the modem response signal determination.",
	"url": null,
	"owner": "General Motors Corporation",
	"publication_number": "07224998",
	"publication_date": "2007-05-29",
	"application_number": "10061406",
	"application_date": "2002-01-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Message durability and retrieval in a geographically distributed voice messaging system",
	"summary": "",
	"abstract": "A message retrieval subsystem comprises a voice extensible mark-up language browser, a message server, and a message library. The VXML browser is configured with an application programming interface that enables a subscriber of a distributed voice messaging service to request a stored message. The message server receives a request to open a connection from a client process operative on the voice extensible mark-up language browser, spawns a thread to enable the connection, uses the thread to queue one or more subscriber requests for respective blocks of audio information, removes and processes the one or more subscriber requests, and uses the thread to forward a retrieved block of audio information to a subscriber. The message library is coupled to the message server and interposed between the message server and a common message store. The upper library isolates the VXML browser from a streaming protocol used to access the stored message.",
	"url": null,
	"owner": "Glenayre Electronics, Inc.",
	"publication_number": "07308083",
	"publication_date": "2007-12-11",
	"application_number": "11170459",
	"application_date": "2005-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method, and logic for processing raw data comprising tag identifiers",
	"summary": "",
	"abstract": "Processing raw data includes receiving raw data. The raw data includes tag identifiers associated with one or more tags detected during a number of detection events. The tag identifiers are filtered to yield one or more unique tag identifiers. A unique tag identifier corresponds to a tag of the tags. The unique tag identifiers are converted to at least one business object. At least one business rule is applied to the business object to generate a response, and the response is performed.",
	"url": null,
	"owner": "GlobeRanger Corporation",
	"publication_number": "07161487",
	"publication_date": "2007-01-09",
	"application_number": "10871654",
	"application_date": "2004-06-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for associating a keyword with a user interface area",
	"summary": "",
	"abstract": "Systems and methods for associating a keyword with a window are described. In one described system, a computer program, such as an indexer, captures processor, or query system, associates a keyword with a first user interface area. The query system or other computer program receives a signal that the first user interface is inactive and that a second user interface area is active and, in response, generates an implicit search query that includes the keyword associated with the first user interface area.",
	"url": null,
	"owner": "Google Inc.",
	"publication_number": "07272601",
	"publication_date": "2007-09-18",
	"application_number": "10814053",
	"application_date": "2004-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for constructing a query result set",
	"summary": "",
	"abstract": "Systems and methods for constructing a query result set are described. In one described method, a display processor or query system refreshes a first result set comprising a first plurality of article identifiers. The display processor or query system receives or creates a second result set comprising a second plurality of article identifiers. The display processor then creates a third result set based at least in part on the first result set and the second result set. The display processor may create the third result set by modifying the first result set based at least in part on the second plurality of article identifiers or by modifying the second result set based at least in part on the first plurality of article identifiers.",
	"url": null,
	"owner": "Google Inc.",
	"publication_number": "07281008",
	"publication_date": "2007-10-09",
	"application_number": "10750109",
	"application_date": "2003-12-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Finding database match for file based on file characteristics",
	"summary": "",
	"abstract": "A signature array of digitally sampled audio is formed from segment(s) of the digitally sampled audio by counting the number of occurrences within the segment(s) in each of a plurality of value bands or slots, such as amplitude bands. The signature array undergoes a fuzzy comparison with signatures arrays in the database. If more than one potential match is found, a more precise comparison is made. In the case of compact discs (CDs), five second sample segments may taken from the beginning, middle and end of each track to detect, e.g., the amplitude of the digitally sampled audio on the CD. A CD signature array may be formed of approximately 2000 value bands or slots by accumulating the occurrence of signals within each slot for all of the sample segments of the CD.",
	"url": null,
	"owner": "Gracenote, Inc.",
	"publication_number": "07228280",
	"publication_date": "2007-06-05",
	"application_number": "09621619",
	"application_date": "2000-07-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for accessing web pages based on playback of recordings",
	"summary": "",
	"abstract": "Entertainment content complementary to a musical recording is delivered to a user's computer by means of a computer network link. The user employs a browser to access the computer network. A plug-in for the browser is able to control an audio CD or other device for playing the musical recording. A script stored on the remote computer accessed over the network is downloaded. The script synchronizes the delivery of the complementary entertainment content with the play of the musical recording.",
	"url": null,
	"owner": "Gracenote, Inc.",
	"publication_number": "07308485",
	"publication_date": "2007-12-11",
	"application_number": "09820722",
	"application_date": "2001-03-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for finding approximate matches in database",
	"summary": "",
	"abstract": "Entertainment content complementary to a musical recording is delivered to a user's computer by means of a computer network link. The user employs a browser to access the computer network. A plug-in for the browser is able to control an audio CD or other device for playing the musical recording. A script stored on the remote computer accessed over the network is downloaded. The script synchronizes the delivery of the complementary entertainment content with the play of the musical recording.",
	"url": null,
	"owner": "Gracenote, Inc.",
	"publication_number": "07167857",
	"publication_date": "2007-01-23",
	"application_number": "10281948",
	"application_date": "2002-10-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for providing a secure application environment using derived user accounts",
	"summary": "",
	"abstract": "A secure application environment (u201cSAEu201d) may be created by using derivation transformations (u201cDTsu201d) to create a derived user account (u201cDUAu201d) based on the original user account (u201cOUAu201d). An SAE may be created by selecting for each resource whose access is controlled by the OUA a DT that provides security for that resource without, whenever possible, reducing the functionality of the system as a whole, and creating a means for accessing a version of each resource based on the selected DT that may be accessed by an insecure actor.",
	"url": null,
	"owner": "Green Border Technologies",
	"publication_number": "07191469",
	"publication_date": "2007-03-13",
	"application_number": "10170591",
	"application_date": "2002-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for managing distributed database resources",
	"summary": "",
	"abstract": "A system and method are described for implementing a distributed database caching system with the capability to support and accelerate read and update transactions to and from one or more central Database Management System (DBMS) servers for multiple concurrent users. The system and method include a resource abstraction layer in a database client driver in communication with remote server units (RSUs) having a cache database. RSUs respond to user requests using the cache database if possible. If the cache database does not have the needed data, the RSU sends the request to a database subscription manager (DSM) in communication with the DBMS server. The DSM responds to the request and sends predicate data based on queries processed by the DBMS server for use in updating the cache databases.",
	"url": null,
	"owner": "Greenplum, Inc.",
	"publication_number": "07162467",
	"publication_date": "2007-01-09",
	"application_number": "10078447",
	"application_date": "2002-02-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and process for automatic storage, enforcement and override of consumer do-not-call requests",
	"summary": "",
	"abstract": "A method of implementing call compliance at a central facility, the method involving: receiving a call from a caller on an incoming connection; enabling the caller on the incoming connection to initiate an outgoing call on an outgoing connection; receiving over the incoming connection an identifier of a destination to which a call is to be initiated over the outgoing connection; checking a do-not-call database for an indication of whether the destination is a do-not-call destination; if it is determined that the destination is a do-not-call destination, blocking the outgoing call from taking place over the outgoing connection; and if it is determined that the destination is not a do-not-call destination, allowing the outgoing call to take place over the outgoing connection.",
	"url": null,
	"owner": "Gryphon Networks, Inc.",
	"publication_number": "07194075",
	"publication_date": "2007-03-20",
	"application_number": "10877050",
	"application_date": "2004-06-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transfer of images to a mobile computing tool",
	"summary": "",
	"abstract": "When a document generated from an application is printed, each page of the document is treated as a separate image Then, one or more templates are generated for a document, with each template containing common elements for a set of images in the document. For each set of images, sets of changes are identified. The templates and corresponding sets of changes to each image in a set of images may be reduced from one color space to another color space. The reduced templates and corresponding sets of changes are then compressed and formatted into a native file transfer format understood by a mobile computing tool, for transfer to a mobile computing tool, where the data is decompressed and images are rebuilt from the templates and corresponding sets of changes.",
	"url": null,
	"owner": "Harman International Industries, Incorporated",
	"publication_number": "07197711",
	"publication_date": "2007-03-27",
	"application_number": "10066402",
	"application_date": "2002-01-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Efficient file interface and method for providing access to files using a JTRS SCA core framework",
	"summary": "",
	"abstract": "A system and method for accomplishing improved file access within a Joint Tactical Radio System (JTRS) Software Component Architecture (SCA) system environment is described. A file access class may be added to an existing JTRS SCA system, the added file access class being an instance of a JTRS SCA file access class. Using this system and method, clients requesting access to a file may be allowed to use more direct file access methods, bypassing a JTRS SCA service, if the file of interest is local to the requesting client's environment, e.g. local to the same processor. It is emphasized that this abstract is provided to comply with the rules requiring an abstract which will allow a searcher or other reader to quickly ascertain the subject matter of the technical disclosure. It is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims.",
	"url": null,
	"owner": "Harris Corporation",
	"publication_number": "07167872",
	"publication_date": "2007-01-23",
	"application_number": "10337997",
	"application_date": "2003-01-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, computer program product and system for providing a switch user functionality in an information technological network",
	"summary": "",
	"abstract": "The invention is directed to a method for providing a switch user functionality in a server-agent environment in an information technological (IT) network in which at least one agent runs on a node of the IT network, comprising: generating a switch user (SU) certificate using public-key cryptography upon receiving a request to switch from a user account presently used on the node to another user account; sending the SU certificate to the agent; checking the correctness of the SU certificate; performing the requested switch to the other user account provided that the SU certificate is correct. The invention is also directed to a corresponding computer program product and a computer system.",
	"url": null,
	"owner": "Hewlett-Packard Company",
	"publication_number": "07171554",
	"publication_date": "2007-01-30",
	"application_number": "09928859",
	"application_date": "2001-08-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application-driven method and apparatus for limiting power consumption in a processor-controlled hardware platform",
	"summary": "",
	"abstract": "An improvement in a real time operating system for supporting at least one application, a processor and at least one hardware resource. The operating system includes a power manager layer. Such power manager layer is arranged to exchange information with an application, the processor and at least one hardware resource to provide real time power management responsive to the information.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07272730",
	"publication_date": "2007-09-18",
	"application_number": "10632412",
	"application_date": "2003-07-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Architecture for printing via the internet",
	"summary": "",
	"abstract": "A system including a client computer, a printer, and a translation server provides for printing from the client computer using Internet-based translation services. The system effectively transfers printer driver functions and associated resource requirements off of client computers. Advantages of the disclosed system and methods include reduced costs associated with the development of printer drivers for new printers and new versions of operating systems.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07184159",
	"publication_date": "2007-02-27",
	"application_number": "10205187",
	"application_date": "2002-07-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Branch locking of job tickets to control concurrency",
	"summary": "",
	"abstract": "To control concurrent access problems, the job ticket service may employ branch locking features, that is, the capability to lock a job ticket at the branch level. The branch locking may be accomplished by one of several methods. The work flow controller may assign one or more specific processors to perform the tasks identified with the branch to be locked. Where more than one processor is authorized access to the same branch, the job ticket service may lock the branch when one of the authorized processors actually acquire the branch. The job ticket service may lock the branches by setting a lock/unlock flag for each branch. Processors accessing the job ticket may then review the lock/unlock flag status to determine if the branch may be accessed. In some circumstances, the job ticket service may allow access only to those branches that are unlocked. A processor that has completed a task defined by the branch may need to have the branch unlocked in order to modify the branch.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07207069",
	"publication_date": "2007-04-17",
	"application_number": "09873195",
	"application_date": "2001-06-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Class loading in a virtual machine for a platform having minimal resources",
	"summary": "",
	"abstract": "A virtual machine with mechanisms for class loading and class structure management in a device having limited file system and/or memory resources. The virtual machine includes a class loader that obtains one or more of a set of predefined classes from a network server, thereby reducing or eliminating the need for a local file system in the device. The class loader stores the predefined classes into a class structure in memory in the device. The virtual machine further includes a memory manager that purges selected ones of the predefined classes from the class structure so as to optimize the use of the memory consumed by the predefined classes in the class structure.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07296265",
	"publication_date": "2007-11-13",
	"application_number": "09264756",
	"application_date": "1999-03-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Communications between modules of a computing apparatus",
	"summary": "",
	"abstract": "A computing apparatus comprises a plurality of hardware modules () and a shared communication infrastructure () by which the modules can communicate with each other in the usual way. In order to increase the level of trust and security in the apparatus, a trusted hardware module () is also provided and is connected to the other modules by respective communication paths (), distinct from the communication infrastructure, by which each of those modules can communicate directly with the trusted module but cannot communicate directly with any other of the modules. The trusted module can therefore have secure communications, for example of u201cunsafeu201d data, with each of the other modules without any of the remaining modules eavesdropping, and the trusted module can route unsafe data between any pair of the other modules, or decline to provide such routing, for example in dependence on policy stored in the trusted module.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07236455",
	"publication_date": "2007-06-26",
	"application_number": "09913453",
	"application_date": "2000-02-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data event logging in computing platform",
	"summary": "",
	"abstract": "There is disclosed a computer entity having a trusted component which compiles an event log for events occurring on a computer platform. The event log contains event data of types which are pre-specified by a user by inputting details through a dialogue display generated by the trusted component. Items which can be monitored include data files, applications drivers and the like. The trusted component operates through a monitoring agent which may be launched onto the computer platform. The monitoring agent may be periodically interrogated to make sure that it is operating correctly and responding to interrogations by the trusted component.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07194623",
	"publication_date": "2007-03-20",
	"application_number": "09979902",
	"application_date": "2000-05-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed voice and wireless interface modules for exposing messaging/collaboration data to voice and wireless devices",
	"summary": "",
	"abstract": "In one aspect, a system for providing remote electronic services to a device includes an access module and a voice interface module. The access module is configured to expose messaging/collaboration data stored on a messaging/collaboration server. The voice interface module is configured to translate messaging/collaboration service requests from a voice device for presentation to the access module and to translate a requested messaging/collaboration service deliverable from the access module for presentation to the voice device. In another aspect, a wireless interface module is configured to translate messaging/collaboration service requests from a wireless device for presentation to the access module and to translate a requested messaging/collaboration service deliverable from the access module for presentation to the wireless device. The access module also integrates fax functionality with the messaging/collaboration services provided by the messaging/collaboration server.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07260536",
	"publication_date": "2007-08-21",
	"application_number": "09684065",
	"application_date": "2000-10-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "E-service management through distributed correlation",
	"summary": "",
	"abstract": "The management of end-to-end cooperation among multiple e-service providers is enabled in a distributed correlation manner by locally appending a tag to each outgoing document, with each tag uniquely identifying the transaction to which it is related and identifying management information. The tags are management information structures that are updated at each participating e-service provider. Consequently, in a succession of e-service providers, the parent e-service is furnished with management information for each of the participating e-services and is able to discern the contributions of each such e-service. The different providers maintain separate management information libraries which are used in registration and correlation processes.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07272626",
	"publication_date": "2007-09-18",
	"application_number": "09885658",
	"application_date": "2001-06-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Instrumenting a software application that includes distributed object technology",
	"summary": "",
	"abstract": "A method for instrumenting a compiled software application that includes distributed object technology. The method includes deriving an interface and class of an object of the compiled software application. Additionally, the interface is reconstructed to enable a client to communicate with the object once the object includes an instrumented function to measure the performance of the object. Furthermore, the object is implemented with the instrumented function. The compiled software application is enabled to utilize the object that includes the instrumented function.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07287247",
	"publication_date": "2007-10-23",
	"application_number": "10293626",
	"application_date": "2002-11-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Internet usage data recording system and method employing distributed data processing and data storage",
	"summary": "",
	"abstract": "A network usage data recording system and method employing distributed data processing and data storage is described. In one embodiment, the present invention provides a network usage recording system having a multiple level distributed data storage system. The system includes a first network data collector including a first data storage system. A second network data collector is provided including a second data storage system. A data correlator collector is provided including a correlated data storage system. The data correlator collector is in communication with the first data storage system and the second data storage system.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07293083",
	"publication_date": "2007-11-06",
	"application_number": "09559693",
	"application_date": "2000-04-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing system power based on utilization statistics",
	"summary": "",
	"abstract": "The present invention, in various embodiments, provides techniques for managing system power. In one embodiment, system compute loads and/or system resources invoked by services running on the system consume power. To better manage power consumption, the spare capacity of a system resource is periodically measured, and if this spare capacity is outside a predefined range, then the resource operation is adjusted, e.g., the CPU speed is increased or decreased, so that the spare capacity is within the range. Further, the spare capacity is kept as close to zero as practical, and this spare capacity is determined based on the statistical distribution of a number of utilization values of the resources, which is also taken periodically. The spare capacity is also calculated based on considerations of the probability that the system resources are saturated. In one embodiment, to maintain the services required by a Service Level Agreement (SLA), a correlation between an SLA parameter and a resource utilization is determined. In addition to other factors and the correlation of the parameters, the spare capacity of the resource utilization is adjusted based on the spare capacity of the SLA parameter. Various embodiments include optimizing system performance before calculating system spare capacity, saving power for system groups or clusters, saving power for special conditions such as brown-out, high temperature, etc.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07222245",
	"publication_date": "2007-05-22",
	"application_number": "10132931",
	"application_date": "2002-04-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Memory image verification system and method",
	"summary": "",
	"abstract": "A system and method of verifying a dumped memory image following a crash of a computer system that includes physical memory, a system kernel, and a virtual memory system. At least a portion of the system memory, e.g., a page, is locked by pre-allocating the page to the system kernel during initialization of the computer system. The pre-allocated page is then withheld from the virtual memory system so that the pre-allocated page is not classified as swappable memory. The locked page of the memory is then seeded with a signature. Upon detecting the system crash, the seeded page of the memory, including an image of the seeded signature, is dumped to the dump disk. The content and the location of the memory image are then verified by comparing the image of the seeded signature with the signature that was seeded in the locked page of the memory prior to the system crash.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07178068",
	"publication_date": "2007-02-13",
	"application_number": "10113083",
	"application_date": "2002-04-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for controlling execution of a computer operation",
	"summary": "",
	"abstract": "Computer operations whose execution would increase usage costs may require use of authorization and notification plug-ins to prevent unauthorized execution. The command may be designed to only execute properly if the authorization and notification plug-ins are properly registered. The computer system customer designs the authorization and notification plug-ins based on standard application programming interfaces to suit the customer's business practices and links them to the computer operation. The computer operation executes the authorization plug-in to determine if the proper authorization plug-in parameters have been specified and verify that the command is authorized. If authorization is granted, the computer operation checks to see that the notification plug-in is given the correct parameters, executes the computer operation, and then executes the notification module to notify the necessary personnel. Both authorization and notification plug-ins return errors that are passed to the user through the computer operation.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07287277",
	"publication_date": "2007-10-23",
	"application_number": "10023811",
	"application_date": "2001-12-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for adapting memory-resident database in flexible service logic execution environment",
	"summary": "",
	"abstract": "A method and corresponding system for adapting memory-resident database in flexible service logic execution environment (FSLEE) provides certain features to be incorporated with FSLEE. FSLEE is a framework that supports services, such as processing logic services and telephony services. The method implements FSLEE support for memory based database environments (MBEs), and stores data in a resident memory for the services to improve database access speed.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07206786",
	"publication_date": "2007-04-17",
	"application_number": "10698413",
	"application_date": "2003-11-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for exploiting service level objectives to enable resource sharing in a communication network having a plurality of application environments",
	"summary": "",
	"abstract": "A method and system for resource sharing in a communication network supporting a plurality of application environments. Specifically, one embodiment of the present invention discloses a method ensuring only sufficient computational resources are used by a multi-component system as needed to meet system, subsystem, and/or component-level service level objectives. Demand values are calculated for a plurality of components in an application environment. The demand values are calculated from throughput and utilization metrics collected at each of the plurality of components. Response time metrics are predicted from the demand values. The application environment is modeled in response to the response time metrics to determine the optimum number of computational resources needed for each of the components in satisfying a functional objective. A dynamic resource manager communicates with a plurality of component managers, one for each of the plurality of components, to allocate computational resources throughout the application environment.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07310672",
	"publication_date": "2007-12-18",
	"application_number": "09991339",
	"application_date": "2001-11-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for network fault monitoring with linux",
	"summary": "",
	"abstract": "A method and system for monitoring faults in network interface cards on networked computer systems or devices. The system includes a means for establishing an electrical connection to a computer network; a means for controlling data sent across the establishing means; a means for directly querying the status of the establishing means; and a means for tracking the status of the establishing means. The method includes steps for initializing data structures for tracking the status of one or more network interface cards to be monitored; initiating monitoring of the one or more network interface cards; ascertaining a configurable polling interval; determining if a shutdown condition has occurred; monitoring the status of the one or more network interface cards when a shutdown condition has not occurred; and clearing all resources when a shutdown condition has occurred.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07296069",
	"publication_date": "2007-11-13",
	"application_number": "10140214",
	"application_date": "2002-05-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, computer readable medium, and node for a three-layered intrusion prevention system for detecting network exploits",
	"summary": "",
	"abstract": "A method of preventing intrusions on a node of a network comprising monitoring, by a first layer of an intrusion prevention system, application data of applications running at on the node, monitoring, by a second layer of the intrusion prevention system, transport layer data of the node, and monitoring, by a third layer of the intrusion prevention system, network layer data of the node is provided. A computer-readable medium having stored thereon a set of instructions to be executed, the set of instructions, when executed by a processor, cause the processor to perform a computer method of monitoring application layer data, by a first layer of an intrusion prevention system comprised of the instructions, of a node of a network, the node comprising the processor, monitoring transport layer data, by a second layer of the intrusion prevention system, of the node of the network; and monitoring network layer data, by a third layer of an intrusion prevention system, of the node of the network is provided. A node of a network, comprising a central processing unit, a memory module for storing data in machine readable format for retrieval and execution by the central processing unit, and an operating system comprising a network stack comprising a protocol driver, a media access control driver, the memory module storing an instance of an intrusion protection system application operable to monitor application layer data and an intrusion prevention system transport service provider layer, and the operating system having an intrusion prevention system network filter service provider bound to the media access control driver and the protocol driver is provided.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07197762",
	"publication_date": "2007-03-27",
	"application_number": "10003747",
	"application_date": "2001-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for black and white conversion of imaging data",
	"summary": "",
	"abstract": "Methods and systems for converting imaging data so that grayscale representations are eliminated are described. In accordance with one embodiment, imaging data is represented in a print format. The print format is a format that can be understood and used by a printer that is to print the imaging data. The print format is processed in a manner such that any representations within the print format that would result in a grayscale other than pure black or pure white being printed are modified. Modification of the print format can ensure that only black or white appear on a printed page, without any grayscale values therebetween. In one embodiment, a document conversion service for converting grayscale to either pure black or pure white is provided in a network environment and can be accessed and utilized by users via a network such as the Internet.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07184176",
	"publication_date": "2007-02-27",
	"application_number": "09953760",
	"application_date": "2001-09-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Non-interfering status inquiry for user threads",
	"summary": "",
	"abstract": "One embodiment disclosed relates to a method of obtaining status information from user threads of a target process. A system call is performed from a querying process. The system call creates a kernel debug thread in a kernel entity of the target process. The kernel debug thread further creates a user status thread in a user entity of the target process. The method may be used to obtain the status information without stopping the target process. Another embodiment disclosed relates to an operating system with capability to obtain status information from user threads of a target process. The operating system includes at least the following first and second system calls. The first system call is configured to create a kernel debug thread in a kernel entity of the target process. The second system call is configured to awake the kernel debug thread and pass information to the kernel debug thread.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07249348",
	"publication_date": "2007-07-24",
	"application_number": "10689900",
	"application_date": "2003-10-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Operation of trusted state in computing platform",
	"summary": "",
	"abstract": "A computing entity comprises a trusted monitoring component having a first processing means and a first memory means, the trusted monitoring component being a self-contained autonomous data processing unit, and a computer platform having a main processing means and a main memory area, along with a plurality of associated physical and logical resources such as peripheral devices including printers, modems, application programs, operating systems and the like. The computer platform is capable of entering a plurality of different states of operation, each state of operation having a different level of security and trustworthiness. Selected ones of the states comprise trusted states in which a user can enter sensitive confidential information with a high degree of certainty that the computer platform has not been compromised by external influences such as viruses, hackers or hostile attacks. To enter a trusted state, references made automatically to the trusted component, and to exit a trusted state reference must be made to the trusted component. On exiting the trusted state, all references to the trusted state are deleted from the computer platform. On entering the trusted state, the state is entered in a reproducible and known manner, having a reproducible and known configuration which is confirmed by the trusted component.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07302698",
	"publication_date": "2007-11-27",
	"application_number": "09728827",
	"application_date": "2000-11-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Performing secure and insecure computing operations in a compartmented operating system",
	"summary": "",
	"abstract": "A process  runs directly on a host operating system , until the process  attempts an operation which can affect security of the host operating system  (such as loading a kernel module or using system privileges). A guest operating system  is then provided running as a virtual machine session within a compartment  of the host operating system  and running of the process  continues using the guest operating system. Operations of the process  which can affect security of the host operating system  are instead performed on the guest operating system , giving greater security. The guest operating system  is only invoked selectively, leading to greater overall efficiency.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07159210",
	"publication_date": "2007-01-02",
	"application_number": "10175553",
	"application_date": "2002-06-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Print option configurations specific to a service or device for printing in a distributed environment",
	"summary": "",
	"abstract": "A user can select one or more print options corresponding to a particular printer and associate the set of selected options with a particular name. The user can then identify the set of selected options, by name, when printing to that particular printer, even though no printer driver for the printer is installed on the user's computing device. Additionally, one or more print options to be used in printing a document identified in a print request can be automatically selected based on one or more characteristics of the print request.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07190467",
	"publication_date": "2007-03-13",
	"application_number": "09905238",
	"application_date": "2001-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Printing device with embedded database connector",
	"summary": "",
	"abstract": "Data is input to a printing device such as a multifunction printer. The data is converted to text data if required. An embedded database driver in the printing device converts the data to a format that is compatible with the database.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07298512",
	"publication_date": "2007-11-20",
	"application_number": "10397458",
	"application_date": "2003-03-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Providing requested file mapping information for a file on a storage device",
	"summary": "",
	"abstract": "A resolve agent for providing requested file mapping information for a file on a storage device. The agent comprises an application programming interface through which file identifying information is provided to the resolve agent and the requested file mapping information provided by the resolve agent; and file system logic configured to ascertain the requested file mapping information from file data structures on the storage device according to a file system that created the file data structure on the storage device.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07308463",
	"publication_date": "2007-12-11",
	"application_number": "10180284",
	"application_date": "2002-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Remote mirrored disk pair resynchronization monitor",
	"summary": "",
	"abstract": "A system, apparatus and method permit automatic monitoring of mirroring conditions of a pair of storage units, such as a pair of disk arrays for example. Monitoring information may be initially stored; for the storage unit pair. A request is made to associated mirroring software, to obtain status information relating to the storage unit pair, based upon the stored monitoring information for example. Based upon the status information obtained, mirroring conditions of the storage unit pair can then be automatically monitored to determine the status of the mirroring process between the storage unit pair. In one embodiment, it can be determined whether or not the mirroring process between storage units of the pair has been suspended and if so, the mirroring process between units of the storage unit pair can be automatically resynchronized, in conjunction with the mirroring software. As such, a more automated monitoring of the storage unit pair can take place, and automatic resynchronization of any suspension of the mirroring process between storage units of the storage unit pair can occur.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07162596",
	"publication_date": "2007-01-09",
	"application_number": "10043562",
	"application_date": "2002-01-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Retrieving performance data from devices in a storage area network",
	"summary": "",
	"abstract": "A system and method for retrieving performance data from different devices in a storage area network (SAN) use a performance interface to communicate with different types of SAN devices in a heterogeneous SAN environment. The performance interface instructs a device plug-in (DPI) associated with each SAN device to retrieve performance metrics data from the corresponding SAN device. The performance interface determines a minimum polling interval and a maximum polling interval for polling each SAN device for the performance metrics data. The performance interface further provides each DPI with an address of the corresponding SAN device.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07286967",
	"publication_date": "2007-10-23",
	"application_number": "10687595",
	"application_date": "2003-10-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Search network for searching services on the internet",
	"summary": "",
	"abstract": "A service search network system includes a plurality of file search nodes. Each file search node has a file repository that stores files searchable by a file search request. A first and a second service search node is provided, each having a service repository for storing services that can be searched. When the first service search node receives a service search request for a particular service stored in the second service search node, the first service search node formats the service search request into a format recognized by the file search nodes such that the service request can be propagated to the second service search node via some of the file search nodes. The structure of each service search node is also described. A method of searching a specific service in a search network having file search nodes and service search nodes is also described.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07243091",
	"publication_date": "2007-07-10",
	"application_number": "10135906",
	"application_date": "2002-04-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Steaming media quality assessment system",
	"summary": "",
	"abstract": "A streaming media assessment system comprises assessment servers, media clients, data collection points, helper agents, and report servers. An assessment tool is downloaded or otherwise installed on an end-user client machine and associated with its media player. An assessment server is in communication with the assessment tool over the network and can send control messages to conduct tests and gather information from the assessment tool. The client machine media player is controlled to stop and start by the assessment tool and it will provide measurements that can be forwarded to the assessment servers. Analyses are then produced by the assessment servers of the actual media streams that were received by many such client machine media players. The report servers issue various formatted reports for the system's sponsors and subscribers.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07216165",
	"publication_date": "2007-05-08",
	"application_number": "10358878",
	"application_date": "2003-02-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for determining the time required to complete a print job",
	"summary": "",
	"abstract": "This invention relates to a Web-based imaging system that provides print job time estimates. Such systems of this type, generally, tell the user, prior to printing, how long it will take the target printer to print the print job, as expected.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07158247",
	"publication_date": "2007-01-02",
	"application_number": "09816699",
	"application_date": "2001-03-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for facilitating profiling an application",
	"summary": "",
	"abstract": "The present disclosure relates to systems and methods for facilitating profiling of applications. In one arrangement, the systems and methods pertain to intercepting application instructions; determining if an application instruction is a frequently used instruction according to a pre-established policy; and only if the application instruction is a frequently used instruction, instrumenting the application instruction so as to facilitate collection of information about execution of the application instruction.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07194732",
	"publication_date": "2007-03-20",
	"application_number": "10606867",
	"application_date": "2003-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for intercepting, instrumenting and characterizing usage of an application programming interface",
	"summary": "",
	"abstract": "A system and method for generically intercepting any type of application programming interface (API) events. The API event interception system includes an intercept library and an API. The application program calls the API to process the client event generated. The API receives the request for service from the application program and determines if intercepting of events is enabled. If intercepting is enabled, the API sends the event to the intercept library. The intercept library determines that the intercept library is enabled to support the event. If the intercept library is enabled to support the event, the intercept library invokes the required event program. If the intercept library is not enabled to support the event, the intercept library returns a message instructing the API to process the event.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07203946",
	"publication_date": "2007-04-10",
	"application_number": "09417201",
	"application_date": "1999-10-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for optimizing a program",
	"summary": "",
	"abstract": "The present disclosure relates to whole program analysis and, more particularly, short data optimization obtained through whole program analysis. In one embodiment, short data optimization is achieved by analyzing the program to estimate the size of existing short data and the size of any linkage tables, providing the size estimates to a compiler that is to compile the program, and compiling the program with the compiler in view of the size estimates such that a relatively large amount of data is allocated to a short data area.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07275242",
	"publication_date": "2007-09-25",
	"application_number": "10264681",
	"application_date": "2002-10-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for printing to a printer without the use of a print driver",
	"summary": "",
	"abstract": "System and method for printing to a printer without the use of a print drive.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07196803",
	"publication_date": "2007-03-27",
	"application_number": "09712337",
	"application_date": "2000-11-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for preserving logical object integrity within a remote mirror cache",
	"summary": "",
	"abstract": "A database system is capable of executing a database application that transfers a logical object in multiple fragments. The database system comprises a main storage site, a remote storage site, a main protocol executable on the main storage site, and a remote protocol executable on the remote storage site. The remote storage site is capable of linking to the main storage site and mirroring information stored in the main storage site. The remote storage site includes a storage and a cache sidefile divided into a plurality of array sidefile recordsets. The main protocol is capable of including information indicative of logical object fragment commencement and completion in the multiple fragment database application transfer. The remote protocol is capable of controlling the cache sidefile to cache the multiple fragments as received and to enable destaging of the logical object to the storage on receipt of all fragments.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07293048",
	"publication_date": "2007-11-06",
	"application_number": "10697820",
	"application_date": "2003-10-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for providing a trustworthy user interface",
	"summary": "",
	"abstract": "The preferred embodiment of the invention comprises a computer system which employs a trusted display processor (), which has a trusted processor () and trusted memory () physically and functionally distinct from the processor and memory of the computer system. The trusted display processor () is immune to unauthorised modification or inspection of internal data. It is physical to prevent forgery, tamper-resistant to prevent counterfeiting, and has crypto functions () to securely communicate at a distance. The trusted display processor () interacts with a user's smartcard () in order to extract and display a trusted image, or seal (), generate a digital signature of the bitmap of a document image and control the video memory () so that other processes of the computer system cannot subvert the image during the signing process. The user interacts with the trusted display processor via a trusted switch ().",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07302585",
	"publication_date": "2007-11-27",
	"application_number": "09979905",
	"application_date": "2000-05-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems-events core for monitorings system events for a cellular computer system within a parent computer system, system-event manager for monitoring system events for more than one cellular computer system, and related system and method",
	"summary": "",
	"abstract": "A system-event core for monitoring system events in a cellular computer system within a parent computer system is provided. The system-event core comprises: a control register block for each cell computer system configured to mask one or more system events and configurable to be masked by a system-event manager, an input/output block operable to communicate with a computer bus, a register block operable to store data about system events, and interrupt generation logic operable to control interrupts for the cellular computer system.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07197587",
	"publication_date": "2007-03-27",
	"application_number": "10176211",
	"application_date": "2002-06-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Tape mirror interface",
	"summary": "",
	"abstract": "A tape mirror interface comprises an input terminal coupled to at least one input node and capable of receiving data transfer requests, a plurality of output terminals coupled to a plurality of tape storage devices, and a control element coupled to the input terminal and plurality of output terminals. The control element presents the plurality of tape storage devices as separate media devices and selectively controls data transfer in a synchronous mode and a split mode. In the synchronous mode, writes to a target tape storage media are mirrored to a mirrored tape storage media. In the split mode, writes are written to tape storage devices independently.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07237056",
	"publication_date": "2007-06-26",
	"application_number": "10715167",
	"application_date": "2003-11-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Trusted system",
	"summary": "",
	"abstract": "A method for allowing a financial transaction to be performed using a electronic system, the method comprising interrogating an electronic transaction terminal with an electronic security device to obtain an integrity metric for the electronic financial transaction terminal; determining if the transaction terminal is a trusted terminal based upon the integrity metric; allowing financial transaction data to be input into the transaction terminal if the transaction terminal is identified as a trusted terminal.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07275160",
	"publication_date": "2007-09-25",
	"application_number": "09932476",
	"application_date": "2001-08-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web based imaging page redirector system for accessing a redirector reference that directs a browser to a redirector software",
	"summary": "",
	"abstract": "A client configurable web based imaging page redirector method, system and program product, comprising the steps of: storing a redirector reference to redirector software; obtaining content to be processed and accessing the redirector reference and directing a browser to the redirector software; and determining via redirector software at least one destination reference to a desired web page destination or web based imaging service.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07191448",
	"publication_date": "2007-03-13",
	"application_number": "09923969",
	"application_date": "2001-08-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web-based imaging service providing reservation",
	"summary": "",
	"abstract": "In a web-based imaging environment, a user accesses a destination service representing a production device, which retrieves user's imaging data and configures available processing job options. The user selects production options, after which the destination service estimates the time required to process user's job. The user is provided an option of reserving a deferred start time for the processing job. If the user opts to reserve, then a deferred start time is selected, avoiding periods when the production device is unavailable, for example when previously reserved, and user's job is stored until the deferred start time. Advantageously, resources for the job are estimated, reserved, and monitored, displaying until deferred start time. Other jobs cannot consume these resources, which are reported with a warning message as if already consumed, whenever a reserved resource is depleted to a quantity insufficient for the deferred processing.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07305449",
	"publication_date": "2007-12-04",
	"application_number": "10001721",
	"application_date": "2001-10-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for identification of devices associated with input/output paths",
	"summary": "",
	"abstract": "The present invention is directed to a system and method which discovers or identifies a type of device associated with an input/output (I/O path). Preferred embodiments define a type of device by a property file. The property file is utilized to identify executable code that determines whether the device associated with a particular I/O path is the type of device defined by said property file.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, LP.",
	"publication_number": "07216184",
	"publication_date": "2007-05-08",
	"application_number": "09846645",
	"application_date": "2001-05-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System in which a first program written in one programming language can interact and access a second program written in a different programming language",
	"summary": "",
	"abstract": "A system accesses, from a first computer program written in a first computer language, functionality available through a second computer program written in a second computer language. The system has an interface intermediate the first and second programs for enabling access between the first program and the second program. The interface includes (a) a first handler in the second computer language for receiving messages from the functionality and (b) a second handler for retrieving messages, via the interface, that the first handler receives. The second handler is part of the first program.",
	"url": null,
	"owner": "Hewlett-Packard Development, L.P.",
	"publication_number": "07296272",
	"publication_date": "2007-11-13",
	"application_number": "10444096",
	"application_date": "2003-05-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Human communication system",
	"summary": "",
	"abstract": "A client terminal  comprises a presence provider  which sends information on a user's location to a presence server  a space modeling means  which calculates the user's location in a virtual space, an audio renderer  which controls sound effects based on the user's location in the virtual space, a graphics renderer  which generates image data based on the user's location in the virtual space, and a policy session control unit  which controls a communication session, to realize conversations between a plurality of users utilizing the virtual space.",
	"url": null,
	"owner": "Hitachi, Ltd.",
	"publication_number": "07197126",
	"publication_date": "2007-03-27",
	"application_number": "10697553",
	"application_date": "2003-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Vehicle travel control apparatus",
	"summary": "",
	"abstract": "An object of the present invention is to provide a vehicle control apparatus which makes it possible to share information by a plurality of devices and which can improve controllability. An OS switching means (OS-CH) switches a plurality of operating system (OS, OS). A shared object (CO) has a memory resource which can be referred to from the plurality of operating systems. The shared object (CO) shares at least road information, and the road information registered by the application of one of the operating systems can be referred to from the application of the other operating system.",
	"url": null,
	"owner": "Hitachi, Ltd.",
	"publication_number": "07206685",
	"publication_date": "2007-04-17",
	"application_number": "11368464",
	"application_date": "2006-03-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic objects with property slot definition and runtime mechanisms",
	"summary": "",
	"abstract": "A component based software program, where each component is based on a component-type. Component-types are created from base classes comprising slot definitions. The slot definitions are identified and stored in a component-type object. One or more components of the component-type are created, each comprising a reference, to a component-type object and a slotmap having storage locations for values associated with property slots definitions, in the component-type object. Values for property slots are entered into components by being placed in the storage locations. Also disclosed is a method for automatically designating unique names to components. One root component is created. Further non-root components are placed within the root component or within other components, so that all components form a tree structure. A component is assigned a unique identification string, comprising a sequential list of all of the component's ancestors and the component's name.",
	"url": null,
	"owner": "Honeywell International Inc.",
	"publication_number": "07225426",
	"publication_date": "2007-05-29",
	"application_number": "10368084",
	"application_date": "2003-02-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Precise, no-contact, position sensing using imaging",
	"summary": "",
	"abstract": "A contact free optical motion sensor for an inertial reference system. One or more image acquisition systems are adapted to produce a series of overlapping images of a gas bearing supported spherical inertial sensor assembly. A controller coupled to receive the series of overlapping images applies a delta detection algorithm to the series of overlapping images to determine the distance, the direction of movement of the inertial sensor assembly and the resulting relative position of the gas bearing supported spherical inertial sensor assembly. The controller further calculates the rotational velocity of the inertial sensor assembly based on a time sequence between the received series of image signals and the distance moved.",
	"url": null,
	"owner": "Honeywell International Inc.",
	"publication_number": "07274439",
	"publication_date": "2007-09-25",
	"application_number": "11004743",
	"application_date": "2004-12-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Logical data modeling and integrated application framework",
	"summary": "",
	"abstract": "A logical data model is defined using a data-modeling framework. The data-modeling framework enables a user to define the logical data model using a series of graphical user interfaces (GUI) or an application-programming interface (API). The data-modeling framework dynamically translates the logical data model into a corresponding physical data model. The logical data model can be changed using the GUI or API and the physical data model is automatically adjusted to accommodate the changes to the logical data model. The logical data model extends capabilities of the physical data model and automatically allows these capabilities to be available to software developers using an application framework integrated with the data-modeling framework. The application framework enables the developer to configure various application features and data management operations using GUI or API. The application framework is tightly coupled with the data-modeling framework such that changes in the logical data model is automatically reflected in the applications.",
	"url": null,
	"owner": "Hubbard & Wells",
	"publication_number": "07185317",
	"publication_date": "2007-02-27",
	"application_number": "10126286",
	"application_date": "2002-04-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing a two-way satellite system",
	"summary": "",
	"abstract": "A two-way satellite communication system is disclosed. A transceiver transmit signals over a return channel to a satellite and receives signals over a downlink channel from the satellite. A hub communicates with the transceiver over the return channel, wherein the hub provides connectivity between the transceiver and a packet switched network.",
	"url": null,
	"owner": "Hughes Networks Systems, LLC",
	"publication_number": "07164661",
	"publication_date": "2007-01-16",
	"application_number": "09785755",
	"application_date": "2001-02-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Database security",
	"summary": "",
	"abstract": "Disclosed is a system, method, and apparatus for calculating metrics by using hierarchical level metadata to describe the various structures within the database. The hierarchical level metadata permit calculation of complex metrics by an analytical server which would otherwise be difficult or impossible. As a result of the way that the analytical server calculates the metrics, slicing and drilling are supported. Additionally, dimension and fact level security are also supported.",
	"url": null,
	"owner": "Hyperion Solutions Corporation",
	"publication_number": "07167859",
	"publication_date": "2007-01-23",
	"application_number": "09844717",
	"application_date": "2001-04-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "File transfer system",
	"summary": "",
	"abstract": "A file transfer system includes peer devices, including an index creating device and at least one requesting peer device. The index creating device creates an index of stored files that can be requested by peer devices. The index creating device evaluates communications requests from the peer devices and accepts communications requests in accordance with user defined criteria. The index creating device communicates with a requesting peer device when the communications request from the requesting peer device has been accepted, and also stores the index, which is linked to an identification. The requesting peer device requests files that are listed in the index linked to the identification. The requesting peer device also creates the file request, which includes a list of the selected files and the identification, transmits the file request to the index creating device, and receives the requested files listed in the index.",
	"url": null,
	"owner": "Hyperspace Communications, Inc.",
	"publication_number": "07263528",
	"publication_date": "2007-08-28",
	"application_number": "10167697",
	"application_date": "2002-06-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for user activated automated searching",
	"summary": "",
	"abstract": "The present invention provides systems and methods for automating a search over a network such as the Internet. A user selects data such as text from within an application. The selected data is activated and a search is performed without the user having to leave the application. The search is performed while the user is continuing within the application. When the search is complete, the search results are made available to the user within the application from which the search was initiated. In one embodiment, the data is pre-searched and the results are cached such that the results are already available should the user desire. The present invention is particularly suited to integration with an operating system such that the methods of the present invention are thereby available to all applications. Alternatively, the present invention can be specific to a particular application.",
	"url": null,
	"owner": "Hyperthink LLC",
	"publication_number": "07308439",
	"publication_date": "2007-12-11",
	"application_number": "09875444",
	"application_date": "2001-06-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for automated structuring of textual documents",
	"summary": "",
	"abstract": "Disclosed is a method for customizable schema-guided conversion of plain-text documents, rich-text documents and textual data records to an XML-compatible structured form. The method makes substantial use of element content model definitions from a chosen target XML schema/DTD to optimize, closely guide, and disambiguate element pattern matching and recognition. Highly granular structure can be inferred, in best possible conformance with the schema. One embodiment operates based on a finite state machine derived via recursive aggregation of the schema element content models. Additionally disclosed is a method for automated document structuring within the environment of an XML-enabled wordprocessor application. The method entails using the host's API to perform element pattern search and matching and to apply markup to the document in accordance with the inferred XML structure. A GUI framework integrated in the wordprocessor workspace can be provided for developing and executing document conversion/structuring definitions.",
	"url": null,
	"owner": "HyperVision, Ltd.",
	"publication_number": "07251777",
	"publication_date": "2007-07-31",
	"application_number": "10826892",
	"application_date": "2004-04-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for adding a user selectable function to a hyperlink",
	"summary": "",
	"abstract": "An enhanced hyperlink and method for providing an enhanced hyperlinked are provided. This invention permits the user to interact with a hyperlink in a variety of ways without necessarily having to open and/or follow the hyperlink. This is accomplished by detecting the presence of a cursor near a hyperlink. When the cursor has remained near the hyperlink for a predetermined time period, a toolbar is displayed containing one or more link enhancements that the user may select. In response to the users' selection of a particular link enhancement, then that link enhancement function would be performed without requiring the any further action. Examples of link enhancement include, but are not limited to, opening the selected link in a new window; opening the selected link in a new window with that window minimized; creating a clickable graphic/text string, and/or icon that would enable the user to return to the selected link at a later time; or anchor the current page by creating an icon or other clickable item that would return the user to the current page; or view off-line which would, in the background download the files associated with the selected link to a memory device for viewing later off-line.",
	"url": null,
	"owner": "I-LOR, LLC",
	"publication_number": "07206839",
	"publication_date": "2007-04-17",
	"application_number": "11056161",
	"application_date": "2005-02-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Translation of secure communications for handshake protocols",
	"summary": "",
	"abstract": "Systems and methods of the invention provide translation of secure communications for handshake protocols. A system is provided that includes a first client application, a server application, and a translation component. The first client application is configured to transmit and receive communications via a network. The server application configured to receive queries from at least one client application via the network and to transmit responses to at least one client application via the network. The translation component is configured to receive communications from the first client application and translate the received communications into queries that are understandable to the server application.",
	"url": null,
	"owner": "i-net Software GmbH",
	"publication_number": "07302564",
	"publication_date": "2007-11-27",
	"application_number": "10743772",
	"application_date": "2003-12-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Fulfillment management system for managing ATP data in a distributed supply chain environment",
	"summary": "",
	"abstract": "A fulfillment management system includes a database operable to store product availability information associated with at least one product. The fulfillment management system also includes one or more processors collectively operable to receive at least one component available-to-promise (ATP) request. Each component ATP request corresponds to a particular ATP request line-item for a desired product. The one or more processors are also operable to retrieve at least a portion of the product availability information associated with the desired product from the database for each component ATP request, determine an ATP response for each component ATP request using the retrieved product availability information, generate a component quotation for each component ATP request according to the corresponding ATP response, and communicate the component quotation for consolidation with other component quotations.",
	"url": null,
	"owner": "i2 Technologies US, Inc.",
	"publication_number": "07249044",
	"publication_date": "2007-07-24",
	"application_number": "09972383",
	"application_date": "2001-10-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method, and computer program product for customizing channels, content, and data for mobile devices",
	"summary": "",
	"abstract": "Described herein are systems, methods, computer program products, and combinations and sub-combinations thereof, for enabling web content (as well as other objects) to be loaded on mobile devices (as well as other types of devices), and for users of mobile devices to operate with such web content on their mobile devices in an interactive manner while in an off-line mode.",
	"url": null,
	"owner": "iAnywhere Solutions, Inc.",
	"publication_number": "07263547",
	"publication_date": "2007-08-28",
	"application_number": "09892482",
	"application_date": "2001-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for facilitating signing by buyers in electronic commerce",
	"summary": "",
	"abstract": "A signing interface is disclosed for facilitating digital signing of electronic messages by a buyer or other subscribing party in an e-commerce or other context. The signing interface provides a mechanism by which a seller's Web applications may invoke a buyer's smartcard subsystem or other signing module to execute a digital signature. The signing interface preferably comprises a signing interface library and a signing plug-in resident on the buyer's computer. The signing interface library is preferably implemented as a Java package and associated libraries that are installed locally on the buyer's computer and made accessible to signed Java applets provided by the seller's Web server. The signing plug-in is preferably implemented as a plug-in, ActiveX control, or similar code that is installed locally on the buyer's computer and made accessible through the buyer's Web browser using an embedded browser object on a seller's Web page. In a preferred embodiment, the signing interface may be adapted to facilitate access to system services such as a warranty service provided via a four-corner trust model.",
	"url": null,
	"owner": "Identrus LLC",
	"publication_number": "07165178",
	"publication_date": "2007-01-16",
	"application_number": "09929035",
	"application_date": "2001-08-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing warranties in electronic commerce",
	"summary": "",
	"abstract": "A system and method for providing warranties that financially guarantee one or more facts associated with an electronic transaction. In a preferred embodiment, warranties issued to the present system comprise a contract between a first party and a second party in which the first party: (1) warrants one or more warranted facts (2) for damages up to a warranted amount (3) if claimed by a relying customer within a claim period. The warranty is preferably issued by a participant in response to a request received from a customer that specifies a desired warranted amount and claim period. The participant and root entity evaluate the request in light of a plurality of factors and determine whether or not the warranty should be issued. In a preferred embodiment, the warranty comprises a contract between the buyer and its issuing participant. The seller is preferably a third-party beneficiary of this contract.",
	"url": null,
	"owner": "IdenTrust, Inc.",
	"publication_number": "07200573",
	"publication_date": "2007-04-03",
	"application_number": "10693724",
	"application_date": "2003-10-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Gaming apparatus with portrait-mode display",
	"summary": "",
	"abstract": "Improved electronic gaming apparatus, including a cabinet for housing video and sound generating electronics, coin-handling and pay-out mechanism and a video display screen. The display screen is substantially taller than it is wide and may have a touch screen associated therewith. Although the displayed video presentation may take any form, the display may include graphics replicating the standard play board at top, game board in middle, and principal user input interface below.",
	"url": null,
	"owner": "IGT",
	"publication_number": "07267612",
	"publication_date": "2007-09-11",
	"application_number": "10292154",
	"application_date": "2002-11-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Pass-through live validation device and method",
	"summary": "",
	"abstract": "Hardware, systems, devices, architecture and methods for a wagering game-specific platform features secure storage and verification of game code and/or other data. An external connection securely communicates with a computerized wagering gaming system. Some embodiments of the invention provide the ability to identify game program code as certified or approved. This is provided by use of various electronic devices and elements for encryption, including at least a device that is internally embedded in the gaming device that access digital signatures, encrypted files, encrypted compiled files and hash functions as well as other encryption methods. Such functions are able to be effected, and security and validation is advantageously applied to data loaded into storage media even while the gaming machine is in operation.",
	"url": null,
	"owner": "IGT",
	"publication_number": "07179170",
	"publication_date": "2007-02-20",
	"application_number": "10306842",
	"application_date": "2002-11-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Directional inertial tactile feedback using rotating masses",
	"summary": "",
	"abstract": "Directional haptic feedback for a haptic feedback interface device. A haptic feedback interface device, in communication with a host computer, includes a housing physically contacted by a user operating the interface device, and a plurality of actuators producing inertial forces when the actuators are driven by control signals. Each of the actuators includes a rotatable eccentric mass positioned offset on a rotating shaft of the actuator, where the actuators are rotated simultaneously such that centrifugal forces from the rotation of masses combine to output the inertial forces substantially only along a single axis having a desired direction approximately in a plane of rotation of the masses.",
	"url": null,
	"owner": "Immersion Corporation",
	"publication_number": "07182691",
	"publication_date": "2007-02-27",
	"application_number": "09968725",
	"application_date": "2001-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Force effects for object types in a graphical user interface",
	"summary": "",
	"abstract": "Force effects for a graphical user interface of a computer are provided based on user preference information, which indicates the types of graphical objects in the graphical user interface which are to have force effects associated with them, and at least one particular force effect assigned to each of those types of graphical objects. An output of a force sensation by a haptic feedback device to the user is based on those assigned force effects and occurs when a displayed cursor controlled by a user interacts with a graphical object having one of the types. An architecture for a host computer allowing multi-tasking application programs to interface with a feedback device is also disclosed.",
	"url": null,
	"owner": "Immersion Corporation",
	"publication_number": "07168042",
	"publication_date": "2007-01-23",
	"application_number": "09974197",
	"application_date": "2001-10-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Increasing force transmissibility for tactile feedback interface devices",
	"summary": "",
	"abstract": "Method and apparatus for increasing the transmissibility of inertial forces produced by an inertial actuator on the housing of a tactile feedback interface device. A tactile interface device, coupled to a host computer, outputs tactile sensations to a user based on interactions and events occurring in a displayed graphical environment. An actuator produces periodic inertial forces, such as vibrations, and a compliant suspension couples the actuator to the device housing. A compliance of the suspension is selected such that the suspension magnifies the periodic inertial forces for a particular frequency range of the inertial forces. The magnified inertial forces are transmitted to the housing to be felt by the user.",
	"url": null,
	"owner": "Immersion Corporation",
	"publication_number": "07209118",
	"publication_date": "2007-04-24",
	"application_number": "10759028",
	"application_date": "2004-01-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method & system for enhanced web page delivery",
	"summary": "",
	"abstract": "A system for and method of enhancing web page delivery. The invention provides the ability to control redirection of Web traffic of humans and search engine spiders. It can differentiate between these types of visitors to a Web page, track their movements, log critical information, and analyze the Web traffic in order to judge the success in driving quality traffic to some known goal on a Web site, such as a sale. The system may generate dynamically optimized web pages targeted to specific search engines, in order to optimize the search engine ranking and visibility of a Web site, such as an online marketer's Web site.",
	"url": null,
	"owner": "Inceptor, Inc.",
	"publication_number": "07260774",
	"publication_date": "2007-08-21",
	"application_number": "09845575",
	"application_date": "2001-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Fast path for performing data operations",
	"summary": "",
	"abstract": "Described are techniques used in a computer system for handling data operations to storage devices. A switching fabric includes one or more fast paths for handling lightweight, common data operations and at least one control path for handling other data operations. A control path manages one or more fast paths. The fast path and the control path are utilized in mapping virtual to physical addresses using mapping tables. The mapping tables include an extent table of one or more entries corresponding to varying address ranges. The size of an extent may be changed dynamically in accordance with a corresponding state change of physical storage. The fast path may cache only portions of the extent table as needed in accordance with a caching technique. The fast path may cache a subset of the extent table stored within the control path. A set of primitives may be used in performing data operations. A locking mechanism is described for controlling access to data shared by the control paths.",
	"url": null,
	"owner": "Incipient, Inc.",
	"publication_number": "07173929",
	"publication_date": "2007-02-06",
	"application_number": "10218098",
	"application_date": "2002-08-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Fast path for performing data operations",
	"summary": "",
	"abstract": "Described are techniques used in a computer system for handling data operations to storage devices. A switching fabric includes one or more fast paths for handling lightweight, common data operations and at least one control path for handling other data operations. A control path manages one or more fast paths. The fast path and the control path are utilized in mapping virtual to physical addresses using mapping tables. The mapping tables include an extent table of one or more entries corresponding to varying address ranges. The size of an extent may be changed dynamically in accordance with a corresponding state change of physical storage. The fast path may cache only portions of the extent table as needed in accordance with a caching technique. The fast path may cache a subset of the extent table stored within the control path. A set of primitives may be used in performing data operations. A locking mechanism is described for controlling access to data shared by the control paths.",
	"url": null,
	"owner": "Incipient, Inc.",
	"publication_number": "07280536",
	"publication_date": "2007-10-09",
	"application_number": "11522260",
	"application_date": "2006-09-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Creating collaborative simulations for creating collaborative simulations with multiple roles for a single student",
	"summary": "",
	"abstract": "A system is disclosed that provides a goal based learning system utilizing a rule based expert training system to provide a cognitive educational experience. The system provides the user with a simulated environment that presents a training opportunity to understand and solve optimally. Mistakes are noted and remedial educational material presented dynamically to build the necessary skills that a user requires for success in the business endeavor. The system utilizes an artificial intelligence engine driving individualized and dynamic feedback with synchronized audio, video, graphics and animation used to simulate real-world environment and interactions. Multiple u201ccorrectu201d answers are integrated into the learning system to allow individualized learning experiences in which navigation through the system is at a pace controlled by the learner. Multiple u201crolesu201d are also available for the student to learn from each simulated environment from multiple viewpoints. A robust business model provides support for realistic activities and allows a user to experience real world consequences for their actions and decisions and entails realtime decision-making and synthesis of the educational material. A dynamic feedback system is utilized that narrowly tailors feedback and focuses it based on the performance and characteristics of the student to assist the student in reaching a predefined goal.",
	"url": null,
	"owner": "Indeliq, Inc.",
	"publication_number": "07280991",
	"publication_date": "2007-10-09",
	"application_number": "10018062",
	"application_date": "2000-05-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Goal based flow of a control presentation system",
	"summary": "",
	"abstract": "A system is disclosed that provides a goal based learning system utilizing a rule based expert training system to provide a cognitive educational experience. The system provides the user with a simulated environment that presents a business opportunity to understand and solve optimally. Mistakes are noted and remedial educational material presented dynamically to build the necessary skills that a user requires for success in the business endeavor. The system utilizes an artificial intelligence engine driving individualized and dynamic feedback with synchronized video and graphics used to simulate real-world environment and interactions. Multiple u201ccorrectu201d answers are integrated into the learning system to allow individualized learning experiences in which navigation through the system is at a pace controlled by the learner. A robust business model provides support for realistic activities and allows a user to experience real world consequences for their actions and decisions and entails realtime decision-making and synthesis of the educational material. The system provides student controls that guide a student through a presentation in a manner designed to optimize the learning experience.",
	"url": null,
	"owner": "Indeliq, Inc.",
	"publication_number": "07194444",
	"publication_date": "2007-03-20",
	"application_number": "09868752",
	"application_date": "1999-02-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for employing an orthogonal corpus for document indexing",
	"summary": "",
	"abstract": "The invention provides for indexing and cataloging of content on the Internet, as well as from other stores of information, may be performed by applying a process that employs an orthogonal corpus, or corpora, of information, such as an Encyclopedia. To this end, the processes described herein identify the topics discussed within the corpus. The process also identifies within the corpus a set of keywords that are relevant to the topics presented in the corpus. The keywords associated with a topic may be employed to identify documents stored in another database that are related to the topic. A graphical representation of the index of topics found in the corpus may then be generated, with individual topics operating as links to these related documents. Thus, a user interested in reviewing content in the corpus related to a certain topic, may also activate a link in the graphical representation of the index to access other documents that have been identified as related to the topic of interest to the user.",
	"url": null,
	"owner": "Indraweb.com, Inc.",
	"publication_number": "07275061",
	"publication_date": "2007-09-25",
	"application_number": "09548796",
	"application_date": "2000-04-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and computer program product for monitoring an industrial network",
	"summary": "",
	"abstract": "Described are techniques used in monitoring the performance, security and health of a system used in an industrial application. Agents included in the industrial network report data to an appliance or server. The appliance stores the data and determines when an alarm condition has occurred. Notifications are sent upon detecting an alarm condition. The alarm thresholds may be user defined. A threat thermostat controller determines a threat level used to control the connectivity of a network used in the industrial application.",
	"url": null,
	"owner": "Industrial Defender, Inc.",
	"publication_number": "07246156",
	"publication_date": "2007-07-17",
	"application_number": "10815222",
	"application_date": "2004-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Wireless spread spectrum communication platform using dynamically reconfigurable logic",
	"summary": "",
	"abstract": "A wireless spread spectrum communication platform for processing a communication signal is disclosed herein. The wireless communication platform includes a first computing element, a second computing element, and a reconfigurable interconnect. The first computing element is coupled to the second computing element via the reconfigurable interconnect. A design configuration of the first computing element is heterogeneous with respect to a design configuration of the second computing element. The reconfigurable interconnect has an uncommitted architecture, thereby allowing it to be configured by an outside source to couple portions of the first reconfigurable interconnect with portions of the second reconfigurable interconnect in a variety of combinations. The first computing element, the second computing element, and the reconfigurable interconnect operable to perform discrete functions suitable for processing of the communication signal.",
	"url": null,
	"owner": "Infineon Technologies AG",
	"publication_number": "07254649",
	"publication_date": "2007-08-07",
	"application_number": "11198692",
	"application_date": "2005-08-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for dynamically caching dynamic multi-sourced persisted EJBs",
	"summary": "",
	"abstract": "Dynamic Multi-sourced Persisted Enterprise Java Bean (EJB) instances are dynamically created on aJ2EE compliant Application Server to access data contained in multiple data source systems. This Dynamic Multi-sourced Persisted EJB is a general class responsible for dynamically aggregating source system information and caching it based on a Context definition. Individual EJB attributes that include mapping, caching and security definitions are mapped to individual pieces of data in source systems by the Context definition. A caching definition can be reloaded during execution as desired. Applications can access the Dynamic Multi-sourced Persisted EJB directly, or use a Session EJB to create a static interface to the dynamically mapped, cached and secured data. Bi-directional synchronization of the cache between client and source system data and modifications of data attributes are achieved without recoding, recompiling and redeploying of custom coded solutions.",
	"url": null,
	"owner": "Initiate Systems, Inc.",
	"publication_number": "07249131",
	"publication_date": "2007-07-24",
	"application_number": "10064974",
	"application_date": "2002-09-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "JAVA compile-on-demand service system for accelerating processing speed of JAVA program in data processing system and method thereof",
	"summary": "",
	"abstract": "A JAVA program language compile-on-demand service system and method for accelerating a processing speed of a JAVA program in a data processing system having a relatively low performance is provided. The JAVA COD service system compiles a JAVA class file to be executed in a data processing system into a pattern which can be executed more speedily on the data processing system, and then transmits the compiled result, upon a request of the data processing system connected via a network in order to execute the JAVA program at a relatively faster speed. The system includes JAVA program providing servers, data processing systems, and a compile-on-demand server for receiving a service request, downloading a requested JAVA class file, compiling the downloaded JAVA class file, and transmitting the compiled result.",
	"url": null,
	"owner": "Institute of Information Technology Assessment",
	"publication_number": "07174544",
	"publication_date": "2007-02-06",
	"application_number": "10096934",
	"application_date": "2002-03-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Aggressive content pre-fetching during pre-boot runtime to support speedy OS booting",
	"summary": "",
	"abstract": "A method and system for content pre-fetching during a processing system pre-boot runtime. First, it is determined when a processor of a processing system is in one of a busy wait state and an idle state during a pre-boot runtime of the processing system. Then, content is pre-fetched from a data storage unit of the processing system. The content is pre-fetched based upon a pre-fetch profile. The content is loaded into system memory of the processing system.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07206931",
	"publication_date": "2007-04-17",
	"application_number": "11499336",
	"application_date": "2006-08-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Aggressive content pre-fetching during pre-boot runtime to support speedy OS booting",
	"summary": "",
	"abstract": "A method and system for content pre-fetching during a processing system pre-boot runtime. First, it is determined when a processor of a processing system is in one of a busy wait state and an idle state during a pre-boot runtime of the processing system. Then, content is pre-fetched from a data storage unit of the processing system. The content is pre-fetched based upon a pre-fetch profile. The content is loaded into system memory of the processing system.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07185188",
	"publication_date": "2007-02-27",
	"application_number": "11499001",
	"application_date": "2006-08-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for wireless device set-up and authentication using audio authenticationinformation",
	"summary": "",
	"abstract": "An apparatus and method for wireless device set-up and authentication using voice stream identification information are described. The method includes the detection of a wireless device within communication range of a host device. Once detected, the device is authenticated according to requested device identification information. However, when authentication of the detected device fails, audio authentication initialization information is requested from the detected device. As a result, the detected device is authenticated based on the requested audio authentication initialization information. In one embodiment, the audio authentication initialization information refers to a voice stream device identification code assigned to the detected device during authentication set-up by a user of the detected device.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07254708",
	"publication_date": "2007-08-07",
	"application_number": "10092401",
	"application_date": "2002-03-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automating tuning of speech recognition systems",
	"summary": "",
	"abstract": "Embodiments of a speech recognition system are disclosed. The system includes at least one recognizer to produce output signals from audio input signals and a feedback module to collect feedback data generated from conversion of the audio input signals to output signals. The system stores the feedback data and may also be adapted to use the feedback data as part of a training set for recognizers in the system, as part of a predictive mechanism, or both.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07203644",
	"publication_date": "2007-04-10",
	"application_number": "10036577",
	"application_date": "2001-12-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Discovery and integration of Jini services in non-Java clients",
	"summary": "",
	"abstract": "A system of forming a bridge between non Java services and a Jini (u2122) interface. A non Java service is encapsulated using special code which makes it look like a Java service. Other aspects are also automatically formed. The Java service is automatically published with a broker such as a Jini (u2122) broker.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07191453",
	"publication_date": "2007-03-13",
	"application_number": "09734333",
	"application_date": "2000-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Embedded transport acceleration architecture",
	"summary": "",
	"abstract": "An apparatus and a system may include an adaptation module, a plurality of Direct Transport Interfaces (DTIs), a DTI accelerator, and a Transport Control Protocol/Internet Protocol (TCP/IP) accelerator. The adaptation module may provide a translated sockets call from an application program to one of the DTIs, where an included set of memory structures may couple the translated sockets call to the DTI accelerator, which may in turn couple the set of memory structures to the TCP/IP accelerator. An article may include data causing a machine to perform a method including: receiving an application program sockets call at the adaptation module, deriving a translated sockets call from the application program sockets call, receiving the translated sockets call at a DTI, coupling the translated sockets call to a DTI accelerator using a set of memory structures in the DTI, and coupling the set of memory structures to a TCP/IP accelerator.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07305493",
	"publication_date": "2007-12-04",
	"application_number": "10305738",
	"application_date": "2002-11-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enabling a PC-DTV receiver to share the resource cache with multiple clients",
	"summary": "",
	"abstract": "A digital broadcast signal is received to a digital television receiver in a computer. The digital broadcast signal is processed to extract enhanced content data. The enhanced content data is stored in a web browser cache. The web browser cache is interrogated with an application programming interface. Responsive to the application programming interface interrogating the web browser cache, the enhanced content data is provided to a personal web server. The enhanced content data in the personal web server is stored and providing to at least one client device.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07263712",
	"publication_date": "2007-08-28",
	"application_number": "09870100",
	"application_date": "2001-05-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generic external proxy",
	"summary": "",
	"abstract": "A first machine communicates with a second machine, using a protocol that sends the first machine's network configuration data in application data sent to the second machine, through a translating access point which translates network traffic from the first machine so as to originate from the access point. A network configuration server provides to the first machine network configuration data not subject to translation by the access point, which is sent to the second machine in the application data. The second machine communicates with the provided network configuration, and this communication is in turn made available to the first machine.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07293108",
	"publication_date": "2007-11-06",
	"application_number": "09811011",
	"application_date": "2001-03-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integrated network intrusion detection",
	"summary": "",
	"abstract": "Intrusion preludes may be detected (including detection using fabricated responses to blocked network requests), and particular sources of network communications may be singled out for greater scrutiny, by performing intrusion analysis on packets blocked by a firewall. An integrated intrusion detection system uses an end-node firewall that is dynamically controlled using invoked-application information and a network policy. The system may use various alert levels to trigger heightened monitoring states, alerts sent to a security operation center, and/or logging of network activity for later forensic analysis. The system may monitor network traffic to block traffic that violates the network policy, monitor blocked traffic to detect an intrusion prelude, and monitor traffic from a potential intruder when an intrusion prelude is detected. The system also may track behavior of applications using the network policy to identify abnormal application behavior, and monitor traffic from an abnormally behaving application to identify an intrusion.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07174566",
	"publication_date": "2007-02-06",
	"application_number": "10066140",
	"application_date": "2002-02-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Intelligent forwarded telephone call handling with a call answering system",
	"summary": "",
	"abstract": "The present invention allows calls that have previously been handled by an answering system to be identified when they are forwarded from a switch back to the answering system. In one embodiment, the invention includes receiving an incoming call at an automated attendant port or answering system port, receiving a call handle associated with the incoming call, applying the call handle to retrieve caller information associated with the call handle, and using the retrieved caller information to handle the call if caller information associated with the call handle is found.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07184536",
	"publication_date": "2007-02-27",
	"application_number": "09967108",
	"application_date": "2001-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for booting from a selection of multiple boot images",
	"summary": "",
	"abstract": "A method and apparatus for booting from a selection of multiple boot images. Control logic is coupled with a plurality of memory devices containing a plurality of boot images. The control logic employs a device select value to map device requests to memory devices. An event agent monitors the apparatus for various events including a corrupted primary boot image. The event agent notifies the control logic when an event occurs and the control logic changes the device select value responsive to the event. The mapping from device requests to memory devices changes when the device select value changes.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07234051",
	"publication_date": "2007-06-19",
	"application_number": "10215605",
	"application_date": "2002-08-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for distributing large payload file to a plurality of storage devices in a network",
	"summary": "",
	"abstract": "Large payload files are selectively partitioned in blocks and the blocks distributed to a plurality of distribution stations at the edge of the network qualified to have the data. Each qualified station decides how much and what portion of the content to save locally, based on information such as network location and environment, usage, popularity, and other distribution criteria defined by the content provider. Different pieces of a large payload file may be available from different nodes, however, when a user requests access to the large payload file, for example, through an application server, a virtual file control system creates an illusion that the entire file is present at the connected node. However, since only selective portions of the large payload file may actually be resident at that node's storage at the time of request, a cluster of distribution servers at the distribution station may download the non-resident portions of the file as the application server is servicing the user. The download may be in parallel and usually from the least congested nodes. New nodes added to the network learn from other nodes in the network what content they should have and download the required content, in a desired amount, onto their local storage devices from the nearest and least congested nodes without interrupting network operation. Each node manages its local storage and decides what content to prune based on information such as usage patterns.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07165095",
	"publication_date": "2007-01-16",
	"application_number": "09681665",
	"application_date": "2001-05-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for managing a plurality of servers in a content delivery network",
	"summary": "",
	"abstract": "Large payload files are selectively partitioned in blocks and the blocks distributed to a plurality of distribution stations at the edge of the network qualified to have the data. Each qualified station decides how much and what portion of the content to save locally, based on information such as network location and environment, usage, popularity, and other distribution criteria defined by the content provider. Different pieces of a large payload file may be available from different nodes, however, when a user requests access to the large payload file, for example, through an application server, a virtual file control system creates an illusion that the entire file is present at the connected node. However, since only selective portions of the large payload file may actually be resident at that node's storage at the time of request, a cluster of distribution servers at the distribution station may download the non-resident portions of the file as the application server is servicing the user. The download may be in parallel and usually from the least congested nodes. New nodes added to the network learn from other nodes in the network what content they should have and download the required content, in a desired amount, onto their local storage devices from the nearest and least congested nodes without interrupting network operation. Each node manages its local storage and decides what content to prune based on information such as usage patterns.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07181523",
	"publication_date": "2007-02-20",
	"application_number": "09681669",
	"application_date": "2001-05-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for minimizing network congestion during large payload delivery",
	"summary": "",
	"abstract": "Large payload files are selectively partitioned in blocks and the blocks distributed to a plurality of distribution stations at the edge of the network qualified to have the data. Each qualified station decides how much and what portion of the content to save locally, based on information such as network location and environment, usage, popularity, and other distribution criteria defined by the content provider. Different pieces of a large payload file may be available from different nodes, however, when a user requests access to the large payload file, for example, through an application server, a virtual file control system creates an illusion that the entire file is present at the connected node. However, since only selective portions of the large payload file may actually be resident at that node's storage at the time of request, a cluster of distribution servers at the distribution station may download the non-resident portions of the file as the application server is servicing the user. The download may be in parallel and usually from the least congested nodes. New nodes added to the network learn from other nodes in the network what content they should have and download the required content, in a desired amount, onto their local storage devices from the nearest and least congested nodes without interrupting network operation. Each node manages its local storage and decides what content to prune based on information such as usage patterns.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07177270",
	"publication_date": "2007-02-13",
	"application_number": "09681668",
	"application_date": "2001-05-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system to encapsulate a driver written for an operating system (OS) runtime environment in an OS independent environment firmware extension",
	"summary": "",
	"abstract": "A system and method is described that takes an existing operating system (OS) level driver and transforms it into a firmware extension, in one embodiment, for the extensible firmware interface (EFI). In one embodiment, an existing driver is stored in flash memory, without modification. When initializing the system, a mapping driver examines this image. Based on a determined image format and subtype, it is known whether the existing driver is compatible with Linux, Windows, fcode, or another type. Based on the type, the mapping driver either fills in the blanks and maps directly to the EFI services, or rewrites some of the flash with binary (in memory). The driver is typically compressed when in flash memory. Once the OS is booted, the OS uses its own driver.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07181610",
	"publication_date": "2007-02-20",
	"application_number": "10681505",
	"application_date": "2003-10-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and apparatus for booting with remote configuration data",
	"summary": "",
	"abstract": "Method, apparatus and computer software provide for the loading of configuration data from a remote source to set the initial configuration of a computing system during a boot process. One or more software components are operable on the computing system to determine if configuration data is to be retrieved from a remote source, configure a network interface and determining if the network is active, establish a route to a server storing the configuration data, download the configuration data from the server to the computing system, verify that the configuration data was received correctly, and use the downloaded configuration data to at least in part set the initial configuration of the computing system. When remote data is unavailable, configuration data from a local source is used to set the initial configuration of the computing system. A determination of whether to retrieve configuration data from a remote source is done by checking a setting in local configuration data stored in a local nonvolatile storage device. According to various embodiments, large networks of servers are managed in a dynamic manner using the remote loading of configuration data.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07269721",
	"publication_date": "2007-09-11",
	"application_number": "10217599",
	"application_date": "2002-08-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for dispatching Javau2122 software as an application managed by an operating system control manager",
	"summary": "",
	"abstract": "Methods and apparatus for controlling operating system independent applications are disclosed. For example, a low-level service application is provided for use in a computer having a processor executing an operating system. The example universal interface is adapted to launch a virtual machine and an application controller executed by the virtual machine. The application controller is adapted to monitor a configuration file and spawn a virtual machine thread in response to data contained in the configuration file to launch multiple operating system independent application programs within the same virtual machine.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07213241",
	"publication_date": "2007-05-01",
	"application_number": "10187921",
	"application_date": "2002-07-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus to enable code-based bus performance analysis",
	"summary": "",
	"abstract": "Methods and apparatus to enable code-based bus performance analysis are disclosed. In one example, a method identifies a bus transaction request with a virtual machine monitor and stores a record associated with the bus transaction request in a virtual machine.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07290178",
	"publication_date": "2007-10-30",
	"application_number": "10817173",
	"application_date": "2004-04-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network abstraction of input/output devices",
	"summary": "",
	"abstract": "A topology of storage nodes coupled to a network to provide storage resources to clients coupled to the network is described. A common transport agent (CTA) comprises a common communication interface with each of the storage nodes. The common communication interface with each storage node may be independent of any particular input/output format to be used in storing data in or retrieving data from a storage medium associated with the storage node. The CTA may also comprise a communication interface with the network which is independent of any particular network protocol to transmit data over the network.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07159010",
	"publication_date": "2007-01-02",
	"application_number": "10071312",
	"application_date": "2002-02-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network routing using a driver that is registered with both operating system and network processor",
	"summary": "",
	"abstract": "A method for employing a driver in a router to communicate between the router's operating system and network processor. The driver appears to the operating system as a device driver for a conventional network interface. The driver also registers with the network processor and appears itself as a forwarding interface. Control information received the network processor is forwarded to the operating system by way of the driver using the network processor's existing forwarding mechanisms, and control information from the operating system is sent to the network processor by way of the driver.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07249199",
	"publication_date": "2007-07-24",
	"application_number": "10931307",
	"application_date": "2004-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Platform and method for remote attestation of a platform",
	"summary": "",
	"abstract": "In one embodiment, a method of attestation involves a special mode of operation. The method comprises storing an audit log within protected memory of a platform. The audit log is a listing of data representing one or more software modules loaded into the platform. The audit log is retrieved from the protected memory in response to receiving an attestation request. Then, the retrieved audit log is digitally signed to produce a digital signature in response to the attestation request.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07254707",
	"publication_date": "2007-08-07",
	"application_number": "11203538",
	"application_date": "2005-08-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Pre-notification of potential connection loss in wireless local area network",
	"summary": "",
	"abstract": "Notification is provided to a user within a wireless local area network when there is an elevated likelihood of losing a wireless network connection.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07203487",
	"publication_date": "2007-04-10",
	"application_number": "10128770",
	"application_date": "2002-04-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Preboot execution bootloading",
	"summary": "",
	"abstract": "A method and apparatus are described for preboot execution bootloading. Under and embodiment of the invention, a method comprises requesting a memory address region and boot image data from a server; receiving the boot image data and a designated memory region from the server; and storing the boot image data at the designated memory region.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07243224",
	"publication_date": "2007-07-10",
	"application_number": "10749999",
	"application_date": "2003-12-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Property management system protocol auto-detection",
	"summary": "",
	"abstract": "The present invention allows a messaging system such as a voice mail system to determine if it is connected to a property management system or some other device. If it is coupled to a property management system, the present invention allows the messaging system to determine which, if any, of several known protocols to use for communication all without the intervention of a user or administrator. In one embodiment, the invention includes determining whether a device is connected to a communications port of a messaging system, receiving a data packet at the communications port, determining a communications protocol for the received packet, and analyzing the received packet data structure. The invention further includes comparing the received packet data structure with a data structure for a known device, and if the data structure of the packet matches that for the known device determining the device coupled to the communications port to be a known device.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07272211",
	"publication_date": "2007-09-18",
	"application_number": "10038917",
	"application_date": "2002-01-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Real-time digital three dimensional engraving",
	"summary": "",
	"abstract": "A real-time digital engraving technique gives the appearance of traditional copperplate engraving. The present system accepts a 3D mesh comprising vertex data and applies a novel algorithm to generate a digital engraving image based on the mesh. The present method works on any 3D model, generates the resulting image in real-time, allows the user to dynamically change views, and does not require user intervention.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07274372",
	"publication_date": "2007-09-25",
	"application_number": "09707344",
	"application_date": "2000-11-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Remote control inputs to Java applications",
	"summary": "",
	"abstract": "A method of delivering input from a device's remote control to a Javau2122 application uses asynchronous method invocation in a processing device. The input from the remote control is captured in system-specific (native) code and delivered to a Javau2122 application asynchronously. This is achieved by calling an event method in the Javau2122 application in response to the received input signals. The event method is then executed to transfer the input signals from the remote control.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07302693",
	"publication_date": "2007-11-27",
	"application_number": "10392177",
	"application_date": "2003-03-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Remote diagnostics system",
	"summary": "",
	"abstract": "Disclosed are a system and method of remotely providing diagnostic procedures to a processing system. Upon being launched on a processing system, an agent process may receive data to provide one or more diagnostic procedures from a data network coupled to the processing system. One or more of the diagnostic procedures may then be executed to provide diagnostic results.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07225245",
	"publication_date": "2007-05-29",
	"application_number": "09927224",
	"application_date": "2001-08-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure booting and provisioning",
	"summary": "",
	"abstract": "Provided are techniques for booting and provisioning a platform connected to a boot and provisioning server including a server boot and provisioning system. The server boot and provisioning system receives a platform identifier, selects a platform specific boot image based on the platform identifier in response to determining that the platform identifier is valid, and selects a platform specific configuration profile based on the platform identifier in response to determining that the platform identifier is valid. Also provided are techniques for booting and provisioning a platform connected to a boot and provisioning server, wherein the platform includes a platform boot and provisioning system.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07207039",
	"publication_date": "2007-04-17",
	"application_number": "10746975",
	"application_date": "2003-12-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "State record processing",
	"summary": "",
	"abstract": "The invention provides apparatuses and methods for quickly modifying state information. Preprocessing prepares the state information to be modified. A logic unit modifies the state information. Postprocessing then puts the modified state information in proper form for output.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07307986",
	"publication_date": "2007-12-11",
	"application_number": "10358982",
	"application_date": "2003-02-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for firmware to export pre-boot data into the operating system runtime environment",
	"summary": "",
	"abstract": "An embodiment of the present invention bridges event data from the pre-boot environment to the operating system runtime environment. Event logs are stored in a memory buffer during pre-boot. Prior to launching the operating system (OS), the event log is registered to a known memory location accessible to the OS. A preferred embodiment uses the extensible firmware interface (EFI) configuration table to store the event log. A globally unique identifier (GUID) may be used to identify the memory buffer location. Once accessible to the OS, the event data may be displayed using standard extensible Markup Language (XML) forms, or via any other desired method.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07165170",
	"publication_date": "2007-01-16",
	"application_number": "10662110",
	"application_date": "2003-09-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for managing distributed objects as a single representation",
	"summary": "",
	"abstract": "An architecture and method for managing at least two distinct machines (or objects) in which resources are shared as a single entity (or object) in an agent-based system. The agent-based system comprising a controller, a local agent coupled to the controller, and at least one clustered machine. The at least one clustered machine includes at least two individual agents, the at least two individual agents sharing at least one shared resource/service. The system also includes a virtual non-persistent connection for coupling the at least two individual agents to the local agent. The at least one shared resource/service is accessed by the local agent through the virtual non-persistent connection using a virtual IP address to enable the at least two individual agents of the at least one clustered machine to be represented as a single object.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07313619",
	"publication_date": "2007-12-25",
	"application_number": "10393622",
	"application_date": "2003-03-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for VLSI CAD design",
	"summary": "",
	"abstract": "A VLSI CAD system includes formulaic representations of grid lines to form grid boxes in a manner that enhances expressivity and reduces the amount of required processing resources.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07185304",
	"publication_date": "2007-02-27",
	"application_number": "10965644",
	"application_date": "2004-10-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method to enable seamless diffusion of platform-based optimized routines via a network",
	"summary": "",
	"abstract": "A system and method to diffuse optimized libraries via a network. An optimized library including at least one optimized routine is received by a processing system via a network. The optimized routine is provided for use by an application executing on the processing system to interact with a hardware entity of the processing system.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07281243",
	"publication_date": "2007-10-09",
	"application_number": "10748030",
	"application_date": "2003-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System processing data packets received from remote host to control system operation according to adjustable timer interrupts based on data flow rate",
	"summary": "",
	"abstract": "A technique for providing communication between two computers through a network in a way to allow one computer to control the other.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07203767",
	"publication_date": "2007-04-10",
	"application_number": "11351991",
	"application_date": "2006-02-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transfer of runtime-based application code",
	"summary": "",
	"abstract": "A transfer of runtime-based application code is described. According to one embodiment of the invention, the application code includes an application code segment. An application code segment tag identifies the application code segment. The application code segment is sent via a messaging protocol to a first server that processes the application code and returns the results.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07305677",
	"publication_date": "2007-12-04",
	"application_number": "10402176",
	"application_date": "2003-03-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Invariant memory page pool and implementation thereof",
	"summary": "",
	"abstract": "A distributed memory computing environment is structured with an invariant memory page pool. The environment includes a device, a memory, a hard disk, and an operating system running on the device. A device ID lookup table and a Memory Block ID Lookup Table are stored in memory. Copies of memory pages and their look up tables are stored on the hard disk. If the operating system is shut down, at subsequent system start-up, memory is divided according to the same divisions seen on the memory page copies saved in configuration files.",
	"url": null,
	"owner": "Intelitrac, Inc.",
	"publication_number": "07185165",
	"publication_date": "2007-02-27",
	"application_number": "11167769",
	"application_date": "2005-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for modeling a network device's configuration",
	"summary": "",
	"abstract": "A system and method for modeling the configuration of a network device is described. Such a system could include, for example, a CLI-to-XML converter connected to a schema storage device or a CLI-to-XML converter in combination with document object model (DOM) generator. Other embodiments could include a CLI-to-XML converter, a schema hash system, and a DOM generator.",
	"url": null,
	"owner": "Intelliden",
	"publication_number": "07200548",
	"publication_date": "2007-04-03",
	"application_number": "09942833",
	"application_date": "2001-08-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enterprise privacy manager",
	"summary": "",
	"abstract": "A method for privacy management includes providing a linked collection of interactive resources through which a user is able to exchange information with an enterprise that provides the resources, and assigning respective, non-uniform privacy policies to at least some of the resources regarding use of the information that is exchanged through the resources. The user, accessing a given one of the resources, is provided with the respective privacy policy for that resource. At least a portion of the information that is associated with the given one of the resources is exchanged with the user subject to the provided privacy policy.",
	"url": null,
	"owner": "International Business Machine Corporation",
	"publication_number": "07225460",
	"publication_date": "2007-05-29",
	"application_number": "09728661",
	"application_date": "2000-12-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Accessing information using an instant messaging system",
	"summary": "",
	"abstract": "A system and method for transmitting messages from a client messaging application to a third party application is shown. The method includes registering with a set of client messaging applications for sending and receiving messages. A message includes an information request. A message is received from the one of the client messaging applications and the destination of the message is determined. The third party application determined to be the destination of the message is then selected and the message is transmitted to the third party application. In the event that the message included an information request, a return message is received from the third party application. The return message includes the requested information. The destination of the return message is determined. The client messaging application determined to be the destination of the return message is selected and the return message is transmitted to the client messaging application.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07287057",
	"publication_date": "2007-10-23",
	"application_number": "10002685",
	"application_date": "2001-11-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Admission control in networked services",
	"summary": "",
	"abstract": "Prediction-based online admission control for incoming jobs has an explicit objective of optimizing a utility function. The input to an algorithmic procedure is a set of requests made in respect of a network service. Each request has information about the length of the request. An output of the algorithmic procedure is a selected subset of requests that can be served within the capacity constraints of the network service, such that the utility function is approximately optimized (for example, minimized or maximized) depending on the context of the particular application.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07289527",
	"publication_date": "2007-10-30",
	"application_number": "10317358",
	"application_date": "2002-12-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for using a directory service for a user registry",
	"summary": "",
	"abstract": "An apparatus and method provide an architected way for a web server to access a user registry in a directory service such as LDAP. In the preferred embodiments, the logic for presenting and processing a web page is encapsulated from the logic that interacts with the directory service, making it easy for a programmer to make changes to the a user registration form without having to have a detailed knowledge of the directory service and its interfaces.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07240125",
	"publication_date": "2007-07-03",
	"application_number": "09799902",
	"application_date": "2001-03-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus, system, and method for passing data between an extensible markup language document and a hierarchical database",
	"summary": "",
	"abstract": "An apparatus, system, and method are provided for passing data between an XML document and a hierarchical database. The apparatus, system, and method include a hierarchical database, a metadata schema, and a mapping module. The hierarchical database comprises a conventional hierarchical database, such as IMS. The metadata schema is derived from the hierarchical database. The metadata schema includes a first representation representative of the hierarchical structure of the hierarchical database, a second representation representative of the hierarchical structure of XML documents valid for passing into and out of the hierarchical database, one or more database field names, and one or more XML element names that map to the one or more database field names. The mapping module passes data between the XML document and the hierarchical database using the metadata schema.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07290012",
	"publication_date": "2007-10-30",
	"application_number": "10759601",
	"application_date": "2004-01-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application integration model for dynamic software component assembly within an application at runtime",
	"summary": "",
	"abstract": "A technique is presented for integrating software components. The technique includes providing an application integration model capable of adapting to different environments by dynamically using different software components at application runtime. The software components are categorized into different stages, with the stages being indicative of when the software components are to be loaded and executed within an application by the application integration model. The technique further includes employing the application integration model to assemble software components into the application within a runtime environment. The application integration model includes an application runtime driver (ARD), which drives work flows of the application integration model through multiple predefined application stages, and a component runtime integration box (CRIB), which includes multiple common data structures employed by the software components during integration into the application.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07234132",
	"publication_date": "2007-06-19",
	"application_number": "10230509",
	"application_date": "2002-08-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Architecture and implementation of a dynamic RMI server configuration hierarchy to support federated search and update across heterogeneous datastores",
	"summary": "",
	"abstract": "An architecture and implementation of a dynamic RMI server configuration hierarchy to support federated search and update across heterogeneous datastores. The RMI server configuration hierarchy supports searching for data in one or more heterogeneous data sources within a computer system. A request for data is received at a federated data source. Then, a server is selected to process the request based on a load of the server and based on whether the server can satisfy the request for data.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07197491",
	"publication_date": "2007-03-27",
	"application_number": "09399696",
	"application_date": "1999-09-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automated hang detection in Java thread dumps",
	"summary": "",
	"abstract": "A system and method for analyzing Java thread deadlocks. A snapshot of threads in a Java Virtual Machine is generated, producing a thread dump file which can be analyzed offline. The thread dump file is optimistically parsed to identify threads which are deadlocked. A user is provided with an interface to select filtering rules for the threads, resulting in a set of filtered threads which are candidates for being in infinite wait conditions.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07278057",
	"publication_date": "2007-10-02",
	"application_number": "10632062",
	"application_date": "2003-07-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Autonomic method and apparatus for counting branch instructions to generate branch statistics meant to improve branch predictions",
	"summary": "",
	"abstract": "A method, apparatus, and computer instructions for autonomically counting selected branch instructions executed in a processor to improve branch predictions. Counters are provided to count branch instructions that are executed in a processor to collect branch statistics. A set of branch statistics fields is allocated to associate with a branch instruction. When a program is executed, the stored statistics allows the program to look at the branch statistics in the counter to perform branch prediction. Hence, a user may use branch statistics values from the hardware counter to perform analysis on application code.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07293164",
	"publication_date": "2007-11-06",
	"application_number": "10757237",
	"application_date": "2004-01-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Bypassing disk I/O operations when porting a computer application from one operating system to a different operating system",
	"summary": "",
	"abstract": "Systems, methods, and computer products that improve the performance of computer-implemented I/O operations for complex applications, such as a database, that are ported to target computer systems that are not tailored to support the high-performance services that may benefit applications. Complex applications, such as a database, often manage I/O access operations by a caching mechanism that is tailored to the needs of the application. When porting an application to a target computer system that does not support certain I/O access features, I/O performance of the application may be limited. The present invention may be implemented by introducing specialized I/O access features that are tailored to enhance I/O access performance for complex applications, such as a database.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07310689",
	"publication_date": "2007-12-18",
	"application_number": "10824902",
	"application_date": "2004-04-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer storage subsystem, method, software program and data carrier",
	"summary": "",
	"abstract": "A software program and an object definitions database are provided for a storage subsystem of a computer system. The subsystem has at least one physical storage medium (P), The program is arranged to generate logical resources (L, R, D, LR, FC, FW) from a database containing logical resource definitions and user object definitions. The logical resources are arranged as sets of object definitions, and the selection is performed in dependence upon the at least one physical storage medium (P); User objects () are generated from the database in dependence upon the generated logical resources(L, R, D, LR, FC, FW). In this way the generated user objects () enable the computer system to utilize the physical storage media (P) via the generated logical resources (L, R, D, LR, FC, FW). This provides a storage subsystem which is feature rich, which has far simpler source code, and which is relatively straightforward for a user.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07174538",
	"publication_date": "2007-02-06",
	"application_number": "10187863",
	"application_date": "2002-07-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Configuration model for configuring an adapter software component to selectively access software objects and object editor using instance of same",
	"summary": "",
	"abstract": "An object editor capable of displaying a set of application software objects, which may include objects with a dynamic reflection capability (u201creflective objectsu201d), includes an object oriented configuration model instance (CMI), a generic adapter, and a UI framework. The CMI is particular to the set of application objects to be edited and defines a particular view of these objects to be provided by the editor. The CMI is external to the generic adapter and includes settings that control which application objects will be accessed and the manner of access. The generic adapter reads the de-serialized CMI's current settings, selectively accesses the set of application objects to be edited and their attributes as dictated by the CMI settings, and passes the accessed information to the UI framework for display.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07272819",
	"publication_date": "2007-09-18",
	"application_number": "10314806",
	"application_date": "2002-12-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Consolidation of computer documentation",
	"summary": "",
	"abstract": "An apparatus, program product and method effectively merge computer documentation for multiple API sets together to facilitate user access to such computer documentation. Such merging of computer documentation may include, in part, the incorporation, into a navigation file, of a plurality of API set links associated with a plurality of API sets, as well as the incorporation, into an index file, of a plurality of index links to documentation files for at least two of the plurality of API sets. Furthermore, computer documentation may be displayed to a user by displaying selected information in a plurality of display regions of a computer display. In a first display region, at least a portion of a first navigation file may be displayed, with the first navigation file including a plurality of API set links associated with a plurality of API sets. In a second display region, at least a portion of a second navigation file associated with a selected API set among the plurality of API sets may be displayed, with the second navigation file including a plurality of program entity links associated with a plurality of program entities in the selected API set. In a third display region, at least a portion of an index file may be displayed, with the index file including a plurality of index links associated with documentation files for at least two API sets from the plurality of API sets.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07305629",
	"publication_date": "2007-12-04",
	"application_number": "10255917",
	"application_date": "2002-09-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Content management system and method of employing extensible workflow entities with user-defined attributes in an object-oriented framework",
	"summary": "",
	"abstract": "An object-oriented framework is provided for managing the definition of user-defined attributes for workflow entities and storing and retrieving the values of those attributes. A set of APIs are introduced to manage the creation, deletion, and retrieval of user specified attribute definitions. In addition, extension objects are introduced to accommodate the storing and retrieving of values of user-defined attributes. This mechanism for allowing a user to extend the attributes of workflow entities enables customization of a workflow system to particular applications.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07171664",
	"publication_date": "2007-01-30",
	"application_number": "10319575",
	"application_date": "2002-12-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Context-sensitive attributes",
	"summary": "",
	"abstract": "A mechanism to enable context-sensitive attributes which comprise an attribute value and a context value defining the applicability of the attribute value in a computer application. The mechanism is adapted to manipulate the context-sensitive attributes, for example to facilitate creation of attribute values with associated context values, retrieve attribute values associated with a specific context value and search based on attribute values within a context value.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07299448",
	"publication_date": "2007-11-20",
	"application_number": "10403905",
	"application_date": "2003-03-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Coupler interface for facilitating distributed simulation of a partitioned logic design",
	"summary": "",
	"abstract": "A technique for distributed processing a partitioned model is provided based on tight functional coupling of multiple submodels of the model. The technique includes, in one embodiment, providing each submodel with a generic coupler to enable processing of the submodel on any simulator instance of any simulator. Submodels coupled with the generic couplers can be processed on the same or different computing units. The generic couplers facilitate communication between submodels through a common communication directory (CCD) by using functions of a generic coupler shared library. The generic couplers further use functions of the shared library to ensure integrity of data transmitted between submodels.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07231334",
	"publication_date": "2007-06-12",
	"application_number": "10125198",
	"application_date": "2002-04-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Creating user metric patterns including user notification",
	"summary": "",
	"abstract": "Exemplary embodiments of the present invention include a method for creating a user metric pattern. Such embodiments typically include receiving, within the network, a plurality of disparate user metrics, determining that the plurality of disparate user metrics received within the network do not match a predetermined metric pattern, and saving the plurality of disparate user metrics as a new metric pattern. In many embodiments, determining that the plurality of disparate user metrics received within the network do not match a predetermined metric pattern includes comparing the plurality of disparate user metrics with a plurality of metrics associated with the predetermined metric pattern.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07263511",
	"publication_date": "2007-08-28",
	"application_number": "10692417",
	"application_date": "2003-10-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data propagation in an activity service",
	"summary": "",
	"abstract": "The present invention provides a framework, such as an extension to the CORBA Activity Service, on which a service can propagate data with remote flows between processes. The service registers, with the framework, a requirement to be given the opportunity to propagate data with any outbound flow. As part of the registration the service specifies a name by which it is to be known. During processing of any outbound remote flow the framework creates a context, obtains data to propagate from the registered service, and adds the data and name of the service to the context for inclusion with the remote flow. In the receiving process the framework finds the name and data in the context and passes the data to a service registered with the same name. The framework may support a plurality of registered services in any given process.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07185345",
	"publication_date": "2007-02-27",
	"application_number": "10175617",
	"application_date": "2002-06-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data-driven application integration adapters",
	"summary": "",
	"abstract": "Software application integration, including constructing an application integration adapter where the constructing is carried out in dependence upon a profile. The profile includes data describing the adapter. Embodiments include communicating integration messages among applications through the adapter. Profiles include identifications of at least two communications transports, including configuration parameters for the data communications transports. In typical embodiments, constructing an application integration adapter includes creating the transports identified in the adapter profile, and configuring the transports in accordance with the configuration parameters.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07191450",
	"publication_date": "2007-03-13",
	"application_number": "10361202",
	"application_date": "2003-02-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Digital content distribution using web broadcasting services",
	"summary": "",
	"abstract": "A method, a system and computer readable medium of securely receiving data on a user's system from a web broadcast infrastructure with a plurality of channels. The method includes encrypting the data using a first encrypting key, wherein the first encrypting key is self-contained with all the information necessary to decrypt the data encrypted with the first encrypting key and encrypting the first decrypting key, using a second encrypting key. Next promotional metadata related to at least part of the encrypted data on a first web broadcast channel for reception by at least one user's system is broadcasted. Broadcasting at least part of the encrypted data over a second broadcast channel and transferring the encrypted first decrypting key, which has been encrypted with the second encrypting key, to the user's system via a computer readable medium.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07213005",
	"publication_date": "2007-05-01",
	"application_number": "09487417",
	"application_date": "2000-01-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Digital content distribution using web broadcasting services",
	"summary": "",
	"abstract": "A method of securely receiving data on a user's system from a web broadcast infrastructure with a plurality of channels. The method comprising receiving promotional metadata from a first web broadcast channel, the promotional metadata related to data available for reception; assembling at least part of the promotional metadata into a promotional offering for review by a user; selecting by a user, data to be received related to the promotional metadata; receiving data from a second web broadcast channel, the data selected from the promotional metadata, and wherein the data has been previously encrypted using a first encrypting key; and receiving the first decrypting key via a computer readable medium, the first decrypting key for decrypting at least some of the data received via the second web broadcast channel. In another embodiment, a method and system to transmit data securely from a web broadcast center is disclosed.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07277870",
	"publication_date": "2007-10-02",
	"application_number": "11251060",
	"application_date": "2005-10-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Duplicate network address detection",
	"summary": "",
	"abstract": "A plurality of data packets encoded according to a first protocol are received which encapsulate data encoded according to a second protocol. A first source address is extracted from the packets according to the first protocol, it is determined whether or not the first source address is a substantial duplicate of a known assigned address. If it is a duplicate, a second source address is extracted from the encapsulated data according to the second protocol, and the first source address and said second source address are provided in an enhanced error log so that a system administrator may correct the duplicate assigned address. Enhanced embodiments of the invention included analysis of data encapsulated by a third, fourth and subsequent protocols, and automatic determination of each protocol encoding format.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07246272",
	"publication_date": "2007-07-17",
	"application_number": "10758859",
	"application_date": "2004-01-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic database access via standard query language and abstraction technology",
	"summary": "",
	"abstract": "Methods, systems, and articles of manufacture that allow saved abstract queries to be referenced from within query statements constructed using standard query languages, such as Structured Query Language (SQL), are provided.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07310637",
	"publication_date": "2007-12-18",
	"application_number": "10839486",
	"application_date": "2004-05-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic ringback services",
	"summary": "",
	"abstract": "A method for providing dynamic ringback services can include receiving a connection signal from an originating device and determining a receiving device specified by the connection signal. The method can access receiving device specific information and can dynamically generate a ringback transmission responsive to at least a portion of the receiving device specific information. The method can send this ringback transmission to the originating device before a connection is established between the originating device and the receiving device.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07184532",
	"publication_date": "2007-02-27",
	"application_number": "10324970",
	"application_date": "2002-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enabling high availability and load balancing for JMX Mbeans",
	"summary": "",
	"abstract": "Provided is a method for programming module load balancing and failover in a distributed computing environment. The Java Management extensions (JMX) specification is enhanced to support load balancing and provide a high-availability of JMX management beans (Mbeans). Also provided are enhancements to the programming model and infrastructure to support the enhanced programming model. Two exemplary approaches for load balancing and failover are provided, one based both upon clustered Mbeans and one based upon unclustered Mbeans. In the unclustered approach, client affinity is supported in that a request from a particular client can be routed to a particular Mbean. In the clustered approach, a specific Mbean can be invoked by providing a special parameter in the Mbean invocation or by adding a special property to the specific Mbean's ObjectName to indicate that during runtime automatic routing should not be employed.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07295952",
	"publication_date": "2007-11-13",
	"application_number": "11420019",
	"application_date": "2006-05-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Exposing J2C interface properties",
	"summary": "",
	"abstract": "The invention relates to Web Services Invocation Framework (WSIF) operations. u201cinteractionSpecu201d and u201cconnectionSpecu201d are Java 2 Enterprise Edition Java Connector Architecture interfaces. Their properties are exposed as data in WSIF operations. Thus WSIF support for the Java 2 Enterprise Edition Java Connector Architecture is made functionally more complete.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07290265",
	"publication_date": "2007-10-30",
	"application_number": "10696063",
	"application_date": "2003-10-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Federated query management",
	"summary": "",
	"abstract": "Embodiments of the present invention generally provide a system, method and article of manufacture for managing federated queries. In general, the availability of one or more databases targeted by a federated query may be determined prior to running the federated query against the targeted databases. In response to determining one or more of the targeted databases are unavailable, a user may be notified. The user may also be presented with options for running the federated query. The options may include being notified when all of the targeted databases are available, automatically running the federated query (in the background) when all of the targeted databases are available, and modifying the query to run against currently available databases.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07243093",
	"publication_date": "2007-07-10",
	"application_number": "10305557",
	"application_date": "2002-11-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Guaranteeing hypertext link integrity",
	"summary": "",
	"abstract": "There is described a method, system and computer program product for processing a link embedded in a link document in a client computer, said link comprises a URL reference for a URL document in the client computer or another computer, there being stored a record containing a link reference and an intended fingerprint, said intended fingerprint representing the content of the URL document associated with the URL of the link at the time of or after the link was created, said method comprising the steps of: fetching the intended fingerprint for the link; fetching the URL document; creating a current fingerprint of the fetched URL document; comparing the intended fingerprint and the current fingerprint; and identifying that the intended fingerprint and the current fingerprint are different in a material way. There is further described, on identifying that the intended fingerprint and current fingerprint are different in a material way and there being provided a database of current fingerprints and corresponding URLs, searching the current fingerprint database and locating current fingerprints that are similar to the intended fingerprint; choosing a current fingerprint that matches the intended fingerprint; and changing the URL of the link in link document to match the URL of the matched current fingerprint.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07290131",
	"publication_date": "2007-10-30",
	"application_number": "10682391",
	"application_date": "2003-10-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Installation of data-driven business integration adapters",
	"summary": "",
	"abstract": "Software application integration including providing a multiplicity of predefined data communications receivers, each receiver specific to a software application and a communications protocol; providing a multiplicity of predefined data communications senders, each sender specific to a software application and a communications protocol; providing one or more transports, each transport having the capability of configuring itself, in dependence upon configuration parameters from a profile, with a receiver and a sender; providing a multiplicity of predefined transfer managers; providing an adapter profile identifying communications transports, including receivers and senders, and, optionally, one or more transfer managers, wherein the adapter profile includes configuration parameters for the data communications transports and the transfer managers; and constructing an application integration adapter in dependence upon the profile, wherein the adapter comprises the transports, receivers, senders, and the transfer managers identified in the profile.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07188345",
	"publication_date": "2007-03-06",
	"application_number": "10392765",
	"application_date": "2003-03-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interfacing objects and markup language messages",
	"summary": "",
	"abstract": "A method of automatically generating a markup language message from an application specific interface object, as well as generating an application specific interface object from a markup language message is provided. The method can include receiving an application specific interface object and identifying an object table specified therein. Objects listed in the object table can be automatically identified. The objects can be serialized by representing the objects in the markup language message. The resulting markup language message can be a representation of the application specific interface object.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07305455",
	"publication_date": "2007-12-04",
	"application_number": "10103001",
	"application_date": "2002-03-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interminable peer relationships in transient communities",
	"summary": "",
	"abstract": "Methods, systems, and computer program products are disclosed for persisting identifiers and relationships in a transient peer-to-peer networking environment where communities have ad hoc participants. Persistent identifiers are defined for nodes, allowing nodes to be identified across sessions and invocations, even though they re-enter the network with a different network address. Paths taken by content resources as they traverse the network (e.g. which nodes forwarded the content) are persisted, along with reputation information about nodes (e.g. indicating how successful they are at answering queries from peers). Trust relationships can be derived using the persisted information. A tiered broadcast strategy is defined for reducing the number of messages exchanged. Preferred embodiments leverage a web services implementation model.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07181536",
	"publication_date": "2007-02-20",
	"application_number": "10109373",
	"application_date": "2002-03-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Link management of document structures",
	"summary": "",
	"abstract": "Links are managed and units of information are linked based on a list having identifiers placed in a hierarchical order relative to other identifiers, the identifiers for identifying the units of information. Lists are stored and examined to determine the hierarchical order of the identifiers relative to the other identifiers, and a unit of information is linked to at least one other unit of information based on a relative hierarchical order between an identifier identifying the unit of information and another identifier identifying at least one other unit of information.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07275066",
	"publication_date": "2007-09-25",
	"application_number": "09927103",
	"application_date": "2001-08-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Locally providing globally consistent information to communications layers",
	"summary": "",
	"abstract": "Globally consistent information is locally provided to communications layers. Globally consistent information is stored in a Network Availability Matrix, which is locally accessible by a communications layer. If an event is detected, the communications layer is automatically notified by the Network Availability Matrix, and is able to use the information in the Network Availability Matrix to quickly take action.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07302692",
	"publication_date": "2007-11-27",
	"application_number": "10159759",
	"application_date": "2002-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Lock caching for compound atomic operations on shared memory",
	"summary": "",
	"abstract": "A system and method for lock caching for compound atomic operations (i.e. a read or write operation to more than one 4-byte word) on shared memory is provided. In a computer system including a memory shared among a plurality of processing entities, for example, multiple threads, a method of performing compound atomic operations comprises providing a pool of locks for synchronizing access to the memory; assigning the locks among the plurality of entities to minimize lock contention; and performing the compound atomic operations using the assigned locks. Each lock may be assigned in accordance with an address of the shared memory from the processing entity's compound atomic operations. Assigning locks may be performed in a manner to minimize concurrent atomic updates to the same or overlapping portions of the shared memory. For example, the addresses of the memory from the compound atomic operations may be aliased in accordance with a known upper bound on the amount of the shared memory that may be affected by any atomic operation.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07228391",
	"publication_date": "2007-06-05",
	"application_number": "10864777",
	"application_date": "2004-06-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing storage resources in decentralized networks",
	"summary": "",
	"abstract": "Methods, systems, and computer program products are disclosed for managing storage resources in decentralized networks. Persistent identifiers are defined for nodes, allowing nodes to be identified across sessions and invocations, even though they re-enter the network with a different network address. Paths taken by content resources as they traverse the network (e.g. which nodes forwarded the content) are persisted, along with reputation information about nodes (e.g. indicating how successful they are at answering queries from peers). Trust relationships can be derived using the persisted information. A tiered broadcast strategy is defined for reducing the number of messages exchanged. Preferred embodiments leverage a web services implementation model.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07251689",
	"publication_date": "2007-07-31",
	"application_number": "10107960",
	"application_date": "2002-03-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Memory management offload for RDMA enabled network adapters",
	"summary": "",
	"abstract": "A method, computer program product, and distributed data processing system for memory management. Memory regions are registered and have access rights and Protection domains associated with them in response to receiving a request for a memory operation including a virtual address, which is used to address into a data structure. A second data structure is then used to translate the virtual address into physical addresses for the operation. A third data structure is used to allow an incoming request responsive to a remote operation being initiated.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07299266",
	"publication_date": "2007-11-20",
	"application_number": "10235679",
	"application_date": "2002-09-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Memory sharing in a distributed data processing system using modified address space to create extended address space for copying data",
	"summary": "",
	"abstract": "A method is provided for sharing and/or transporting data within a single node of a multi-node data processing. The method avoids the necessity of making more than one copy of the data to be shared or transported. The method is tunable based on the size of the data segment involved. A shared memory area between tasks running in different address spaces on the node is used to coordinate the process and for task to task communication. The increase in efficiency provided by the intranodal process described herein also provides advantages to the internodal communication process since more CPU cycles are available for that aspect of system operation.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07231638",
	"publication_date": "2007-06-12",
	"application_number": "10308734",
	"application_date": "2002-12-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Message digest instructions",
	"summary": "",
	"abstract": "A method, system and computer program product for digesting data in storage of a computing environment. The digesting computes a condensed representation of a message or data stored in the computer storage. A COMPUTE INTERMEDIATE MESSAGE DIGEST (KIMD) and a COMPUTE LAST MESSAGE DIGEST (KLMD) instruction are disclosed which specify a unit of storage to be digested by a secure hashing algorithm.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07159122",
	"publication_date": "2007-01-02",
	"application_number": "10436230",
	"application_date": "2003-05-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Message queuing method, system, and program product with reusable pooling component",
	"summary": "",
	"abstract": "A pooling mechanism to limit repeated connections in message queuing systems and to prevent excessive making and breaking of connections and associated overhead. The invention does this by providing a layer between a client and the message queuing system where connections are pooled. The pooling mechanism of the invention prevents a system from losing too many resources through the repeated making and breaking of excessive message queuing system connections.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07240089",
	"publication_date": "2007-07-03",
	"application_number": "10013757",
	"application_date": "2001-12-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Messaging service in a federated content management system",
	"summary": "",
	"abstract": "A technique for communication between a first computer and a second computer, each of which is connected to a server computer. Under control of a first application at the first computer, a message is created, wherein the message comprises zero or more text and zero or more content identifiers, and the message is put into a message queue. Under control of a second application at the second computer, the message is retrieved from the message queue.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07272833",
	"publication_date": "2007-09-18",
	"application_number": "09750489",
	"application_date": "2000-12-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Metadirectory agents having extensible functions",
	"summary": "",
	"abstract": "A bidirectional metadirectory agent a data source converter layer; a filters and rules layer for blocking disallowed changes; a mapping layer for translating attributes in change commands from a local set of attribute names to a set of metadirectory attribute names, and vice versa, and for converting change commands between said agent-internal common format and a directory change protocol; an extensible user customization layer for implementing custom metadirectory agent functions; and a metadirectory interface for sending and receiving said change commands in said directory change protocol.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07191192",
	"publication_date": "2007-03-13",
	"application_number": "10262033",
	"application_date": "2002-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for autonomic detection of cache u201cchase tailu201d conditions and storage of instructions/data in u201cchase tailu201d data structure",
	"summary": "",
	"abstract": "A method, apparatus, and computer instructions in a data processing system for processing instructions are provided. Instructions are received at a processor in the system. If a selected indicator is associated with the instruction, counting of each event associated with the execution of the instruction is enabled. The performance indicators and counter values may be used as a mechanism for identifying cache hits and cache misses. Performance counters are incremented each time the instructions of routines of interest are executed and each time the instructions must be reloaded into the cache. From the values of these counters the cache hit-miss ratio may be determined. When the cache hit-miss ratio becomes less than a predetermined threshold, i.e. a greater number of cache misses than cache hits, the present invention may determine that a problem condition has occurred and initiate u201cchase tailu201d operations for avoiding overwriting of entries in the cache.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07181599",
	"publication_date": "2007-02-20",
	"application_number": "10757256",
	"application_date": "2004-01-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for autonomic policy-based thermal management in a data processing system",
	"summary": "",
	"abstract": "A method, apparatus and computer instructions are provided to autonomically monitor and adjust system characteristics based on a customer optimization goal specified in a policy or profile. An autonomic management component is implemented in firmware comprising a set of control algorithms. Response to reading system characteristics from a plurality of sensors, the autononmic management component selects at least one control algorithm from the set and the control algorithm adjusts the parameters of the system characteristic to optimize performance according to the optimization goal specified by the customer.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07194645",
	"publication_date": "2007-03-20",
	"application_number": "11054261",
	"application_date": "2005-02-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for bridging service for standard object identifier based protocols",
	"summary": "",
	"abstract": "A method and apparatus is presented for maintaining a logical composite repository of Object Identifier (OID) tree structures on a server in a distributed data processing system. Each OID subtree repository has been programmed to interface with an application programming interface (API) associated with an OID abstraction layer for the logical composite repository. An OID subtree structure can be added to the logical composite repository resulting in registration with the OID abstraction layer. Any query from a requester in the distributed data processing system about an object contained in the logical composite repository associated with the server is processed by the OID abstraction layer. The query must be in a protocol, such as SNMP, LDAP, and CIM/XML, recognized by the OID abstraction layer. The repository associated with the object of the query is determined from the OID abstraction layer registry. The query is formatted to be consistent with the API associated with the OID abstraction layer and sent to the repository associated with the object. When a reply is received from the repository, it is formatted in the protocol of the original query and sent to the requester in the distributed data processing system.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07272836",
	"publication_date": "2007-09-18",
	"application_number": "09583411",
	"application_date": "2000-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for counting instruction execution and data accesses for specific types of instructions",
	"summary": "",
	"abstract": "A method, apparatus, and computer instructions for processing instructions. Responsive to receiving an instruction for execution in an instruction cache in a processor in the data processing system, a determination is made as to whether an indicator is associated with the instruction and whether the instruction is of a certain type within a range of instructions. An interrupt is generated if the indicator is associated with the instruction and the instruction is of the certain type within the range of instructions.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07257657",
	"publication_date": "2007-08-14",
	"application_number": "10704117",
	"application_date": "2003-11-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for encoding binary data as a zero terminated string",
	"summary": "",
	"abstract": "Passing input strings through an application programming interface between functions that take null byte terminated strings as arguments, where at least some of said input strings contain null bytes internally. This is accomplished by storing the positions of the null bytes relative to the start of the block and storing the non-null bytes in their relative order to prevent said internal null strings from being treated as terminal null strings.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07280055",
	"publication_date": "2007-10-09",
	"application_number": "11112776",
	"application_date": "2005-04-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for enhancing online searching",
	"summary": "",
	"abstract": "A method and apparatus are provided for processing search results obtained in response to a user query. This may include examining document pointers returned by a search engine to identify a source from which the documents are available and generating at least two visual abstracts of each of the documents. Each of the visual abstracts may be of a different size. The method and system may also include formatting a stream of data such that when the data is displayed, a smaller one of the visual abstracts appears adjacent to a corresponding search result.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07177948",
	"publication_date": "2007-02-13",
	"application_number": "09442150",
	"application_date": "1999-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for generating query and response statements at runtime from generic requests",
	"summary": "",
	"abstract": "A method, apparatus, and computer instructions of generating SQL statements at run time from generic and abstract XML request and response messages is provided. A set of generic and abstract XML schemas are provided for a client to send request XML messages for performing actions on information of objects in a data store. An adaptor processes the request XML messages and generates the SQL statements to submit to the data store. Upon receiving results, the adaptor sends response XML messages that adhere to the generic and abstract XML schemas to the client, which then obtains values of results from response XML message.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07225202",
	"publication_date": "2007-05-29",
	"application_number": "10803658",
	"application_date": "2004-03-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for generating service oriented state data mapping between extensible meta-data model and state data including logical abstraction",
	"summary": "",
	"abstract": "A method and apparatus for generating service state data and extensible meta-data information with a service oriented state data generator (SSDG) comprising: establishing a platform independent, extensible meta-data model for the meta-data information; obtaining state data schema based on a service state data description; defining an extensible set of meta-data attributes and templates corresponding to the meta data based on requirements of a service; and utilizing the meta-data model and based on the state data schema and the attributes, generating service state data based on the service state data schema; and The service state data including at least one of: state data, state data logical mapping, state data physical mapping, meta-data associated with the service state data and meta-data model correlations associated with the meta-data.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07287037",
	"publication_date": "2007-10-23",
	"application_number": "10652753",
	"application_date": "2003-08-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for handling requests for files in a data processing system",
	"summary": "",
	"abstract": "A method, apparatus, and computer instructions for use in an operating system for managing requests for files. A request for a switch file from an application is received. The application points to the switch file. Many files may point to the same switch file. Location information for the switch file points to a set of files. A file from the set of files based on system information to form an identified file is identified. The identified file passes to the application. The system information may be already present within the system or passed to the system by a user or process.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07302452",
	"publication_date": "2007-11-27",
	"application_number": "10455179",
	"application_date": "2003-06-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for implementing distributed event management in an embedded support processor computer system",
	"summary": "",
	"abstract": "Distributed event management in an embedded support processor computer system includes an embedded support processor having an event distribution agent used to communicate with local processes internal to the embedded support processor. A process communicates with the event distribution agent of the embedded support processor and registers for one or more events. Another process signals an event to the event distribution agent of the embedded support processor. The event distribution agent of the embedded support processor notifies each registered process of the signaled event. The event distribution agent of the embedded support processor is used to communicate with a peer event distribution agent included in a main processor of the embedded support processor computer system, and to communicate over a network with a peer event distribution agent included in an attached device, such as a personal computer.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07254815",
	"publication_date": "2007-08-07",
	"application_number": "10422659",
	"application_date": "2003-04-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for performing input/output floor planning on an integrated circuit design",
	"summary": "",
	"abstract": "A method for performing input/output (I/O) floor planning on an integrated circuit design is disclosed. User design data related to I/O circuit associated with each package pin is initially collected. The collected user design data is then sorted according to operating conditions. Next, an I/O behavioral model and a package model are chosen based on the sorted data. A simulation deck is dynamically built with appropriate operating conditions. Finally, a simulation is performed through a circuit simulator using the chosen I/O behavioral model and the operating conditions.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07231335",
	"publication_date": "2007-06-12",
	"application_number": "10604107",
	"application_date": "2003-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for persistent real-time collaboration",
	"summary": "",
	"abstract": "A collaboration server is described that enables both real-time conferencing and content management. Thus, client applications can connect to the server to share data and collaborate in real-time. The server allows fine grained sharing of any type of content using generic shared objects (GSO). Each GSO holds one or more pieces of persistent information and defines a list of people who are allowed to access the information. Each GSO also represents a persistent conferencing session., i.e., if clients modify GSOs, modifications are broadcast to all the other clients on the list of the shared object if they are connected. The server also manages relationships between shared objects; i.e., shared objects could be contained in other shared objects or reference other shared objects.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07296023",
	"publication_date": "2007-11-13",
	"application_number": "10757756",
	"application_date": "2004-01-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing full duplex and multipoint IP audio streaming",
	"summary": "",
	"abstract": "A conference server enables collaborative communications among a variety of client processes of varying configurations all operatively coupled over a computer network to each other and to the server. The server receives audio streams from participating client processes in a conference, selects which audio streams are active, and broadcasts one or more of the active audio streams to the client processes participating in the conference depending on the clients receiving capabilities and the conference parameters. The client processes receiving multiple active audio streams perform mixing locally at the client node. Without having to perform mixing at the server, resources are saved and the number of simultaneous participating client processes to the conference may be increased accordingly. The server is further capable of simultaneously accommodating multipoint clients and non-multipoint H.323 clients, as well as operating in multiway and u201cpush to talku201d modes.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07313593",
	"publication_date": "2007-12-25",
	"application_number": "09695193",
	"application_date": "2000-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing hardware assistance for code coverage",
	"summary": "",
	"abstract": "A method, apparatus, and computer instructions for generating coverage data during execution of code in the data processing system. During execution of the code, a determination is made as to whether an access indicator is associated with an instruction in response to executing the instruction in the code by a processor in the data processing system. If the access indicator is associated with the instruction, a state of the access indicator is changed, by the processor, when the instruction is executed. In this manner, coverage data for executed instructions is generated by the processor during execution of the code.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07299319",
	"publication_date": "2007-11-20",
	"application_number": "10807094",
	"application_date": "2004-03-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing hardware assistance for data access coverage on dynamically allocated data",
	"summary": "",
	"abstract": "A method, apparatus, and computer instructions for generating coverage data for accesses to dynamically allocated data during execution of code in a data processing system. In response to a request to dynamically allocate a memory area for dynamically allocated data, the memory area is dynamically allocated during execution of the code. The memory area is associated with a data access indicator in response to dynamically allocating this memory area. A determination is made as to whether an access to a memory location associated with the data access indicator has occurred, in response to executing an instruction in the code at a processor in the data processing system. If the data access indicator is associated with the memory area, a state of the data access indicator by the processor is changed when the instruction is executed. The coverage data for the dynamically allocated data is generated during execution of the code by the processor.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07296130",
	"publication_date": "2007-11-13",
	"application_number": "10806633",
	"application_date": "2004-03-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for splitting and merging request and response data at runtime",
	"summary": "",
	"abstract": "A method in a data processing system for generating return data responsive to a database request is provided. A response from a data store is detected. A merge reference section in a singleton in-memory object is located. A merge reference of the merge reference section is identified. A reference column from the merge reference is determined and data is merged with the reference column to form a merged value according to an order. The merged value is then placed in the response.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07266561",
	"publication_date": "2007-09-04",
	"application_number": "10803630",
	"application_date": "2004-03-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus to indicate an encoding status for digital content",
	"summary": "",
	"abstract": "A method of determining an encoding rate for digital content. According to the method, the a sample of the content data is encoded for a predetermined period of time. The encoding rate is calculated by knowing the size of the sample of content encoded and the length of time necessary for encoding. In another embodiment, the encoding rate calculated for a specific encoding algorithm and encoding bit rate is averaged with any previously stored encoding rate for this encoding algorithm and encoding bit rate. In accordance with another aspect of the invention, an apparatus is described to carry out the above method.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07269564",
	"publication_date": "2007-09-11",
	"application_number": "09201475",
	"application_date": "1998-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and computer program product for providing a meta-data programming language level interface",
	"summary": "",
	"abstract": "A method for providing a meta-data programming language level interface is disclosed. The method includes receiving an object name from a client program via a meta-data retrieval API, where the object name corresponds to an object located in a runtime environment that includes one or more methods. Meta-data associated with the object is requested from the runtime environment. Meta-data is received for each method included in the object. The meta-data for each method is transmitted to the client program via the meta-data retrieval API.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07308679",
	"publication_date": "2007-12-11",
	"application_number": "10672096",
	"application_date": "2003-09-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for administering devices including an action log",
	"summary": "",
	"abstract": "Method for administering devices, including creating a user metric vector including a plurality of disparate user metrics, creating a user metric space including a plurality of metric ranges, determining whether the user metric vector is outside the user metric space, identifying an action in dependence upon the user metric vector, if the user metric vector is outside a user metric space, and creating an action log.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07197366",
	"publication_date": "2007-03-27",
	"application_number": "10439036",
	"application_date": "2003-05-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for application installation and management using an application-based naming system including aliases",
	"summary": "",
	"abstract": "A method is presented for managing applications using application-based names. A naming service registers an alias name; the alias name represents a first compound name that includes an application name that is associated with an application and a deployment name that is associated with a deployment attribute that characterizes a deployment of an instance of the application. The naming service is also able to generate an application-based name associated with an application; the application-based name represents a context within a naming system, and the application-based name is a second compound name that includes the alias name. Applications are managed within a data processing system using application-based names. The first compound name can be associated with a first topology-based name that represents a first context for organizing files that are related to the instance of the application.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07210125",
	"publication_date": "2007-04-24",
	"application_number": "10621885",
	"application_date": "2003-07-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for autonomic performance improvements in an application via memory relocation",
	"summary": "",
	"abstract": "A method, an apparatus, and a computer program product in a data processing system are presented for using hardware assistance for gathering performance information that significantly reduces the overhead in gathering such information. Performance indicators are associated with instructions or memory locations, and processing of the performance indicators enables counting of events associated with execution of those instructions or events associated with accesses to those memory locations. The performance information that has been dynamically gathered from the assisting hardware is available to the software application during runtime in order to autonomically affect the behavior of the software application, particularly to enhance its performance. For example, the counted events may be used to autonomically improve the performance of the execution of an application by relocating code segments and data areas.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07225309",
	"publication_date": "2007-05-29",
	"application_number": "10682436",
	"application_date": "2003-10-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for delivering encrypted content with associated geographical-based advertisements",
	"summary": "",
	"abstract": "A method, a system and computer readable medium at an electronic digital content store, such as a web site, for associating advertisement with digital content. The geographic location of the end user device receiving the encrypted digital content is determined using an address verification system. Advertisement is selected to be associated with the delivery of encrypted digital content if the address verification system returns an address in a predetermined geographic region. The address verification system includes the IP address of the end user device, the country codes found in the trace routes to the IP address, and the billing address.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07188085",
	"publication_date": "2007-03-06",
	"application_number": "09909564",
	"application_date": "2001-07-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for efficient file transfer to/from a local traffic system with a DMD system",
	"summary": "",
	"abstract": "Aspects for achieving efficient file transfer and traffic management in a digital media distributor system are presented. The aspects include a central site server, at least one local traffic system, and an Internet file server (IFS) coupled between the central site server and the at least one local traffic system. The IFS acts as an intermediary between the central site and the at least one local traffic system, wherein the IFS supports file transfer in both directions between the central site and the at least one local traffic system.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07209943",
	"publication_date": "2007-04-24",
	"application_number": "09523832",
	"application_date": "2000-03-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for finding evolving regions in graphs without persistent node identity",
	"summary": "",
	"abstract": "A system, method, and computer program for identifying evolving regions in a graph of interrelated nodes representing a computer system environment. The method includes generating a series of samples () of the environment. Each sample includes a plurality of interrelated nodes () and at least one edge () classified into a plurality of at least one of node type and edge type, respectively. A summary () of the plurality of at least one of node type () and edge type () is created for the series of samples (). A summary instance () of the summary () is created for each sample. At least one summary instance () is compared to at least one subsequent summary instance () and at least one result () is stored in memory (). A successive behavior is characterized for one or more of the at least one of the node type and the edge type.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07233733",
	"publication_date": "2007-06-19",
	"application_number": "11180445",
	"application_date": "2005-07-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for network management with per-endpoint adaptive data communication based on application life cycle",
	"summary": "",
	"abstract": "A method, system, apparatus, and computer program product is presented for management of a distributed data processing system. The present invention uses an improved iterator methodology to dynamically adapt the administrative communication operations of the network management system so as to minimize the potential impact on system performance, including customer applications, that might be caused by system management operations. In particular, the adjustments to the operations occur in accordance with a phase or life cycle state of system management applications.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07305485",
	"publication_date": "2007-12-04",
	"application_number": "09737727",
	"application_date": "2000-12-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for object retransmission without a continuous network connection in a digital media distribution system",
	"summary": "",
	"abstract": "The present invention provides a method and system for object retransmission in an asynchronous environment without a continuous network connection in a digital media distributor (DMD) system. The method and system include receiving objects in a receiver from a central site, generating a response document in the receiver, and sending the response document asynchronously to the central site. The received response documents are then utilized in the central site to determine which object to retransmit to the receiver. In another aspect of the present invention, the central site manages the inventory of objects in the receiver by instructing the receiver to delete objects not needed.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07260785",
	"publication_date": "2007-08-21",
	"application_number": "09773047",
	"application_date": "2001-01-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for obtaining memory usage information for a heap when a peak live count is updated",
	"summary": "",
	"abstract": "A method and system for determining the memory utilization of a heap are provided. With the method and system, object allocations and optionally, possible memory freeing events are used to initiate a mark-and-count operation. The mark-and-count operation marks the live objects and maintains a running count of their memory bytes allocated to the live objects, referred to as a live count. The execution of the mark-and-count operation may be dependent upon various criteria including thresholds, functions of the live count, peak live counts, number of memory bytes allocated since a previous mark-and-count operation was performed, and the like. In addition to the live count, a peak live count may be obtained and updated as new peak live counts are identified. When the peak live count is updated, additional information may be obtained via a heap dump, arcflow tree, or the like.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07162605",
	"publication_date": "2007-01-09",
	"application_number": "10875931",
	"application_date": "2004-06-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for ordering requests at a bus interface",
	"summary": "",
	"abstract": "A bus bridge for coupling between a first bus and a second bus includes: multiple ticket registers; a ticket dispenser counter; and a ticket call counter. The ticket dispenser counter dispenses a ticket value to a request received at the bridge from the first bus for access to the second bus. This ticket value is held in one ticket register of the multiple ticket registers. The ticket call counter provides ticket call values, and the request is granted access to the second bus when a current ticket call value equals the ticket value dispensed to the request. While the request waits for access to the second bus, the bus bridge can perform work on the request. When request coherency is maintained employing snooping, ticket values assigned to a plurality of requests maintain a snoop response ordering of the requests for access to the second bus.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07194567",
	"publication_date": "2007-03-20",
	"application_number": "11064728",
	"application_date": "2005-02-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for playback of dynamic HTTP transactions",
	"summary": "",
	"abstract": "A method, system, apparatus, and computer program product are presented for recordation and playback of transactions within a web browser or similar client application. A transaction recordation and playback utility captures dynamic information upon recordation and/or playback of a web-browser-based transaction. The dynamic information is derived from the DOM-related (Document Object Model) information that is maintained within the web browser application. Using information from a previously recorded transaction, the transaction recordation and playback utility searches the current DOM-related information for current values of dynamic parameters, thereby allowing generation of a complete and appropriate HTTP request on every subsequent playback of a recorded transaction.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07269633",
	"publication_date": "2007-09-11",
	"application_number": "10314466",
	"application_date": "2002-12-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for securing local database file of local content stored on end-user system",
	"summary": "",
	"abstract": "A method and system for forming a data table in memory on an end user system. The data table forming a library index of storage locations to electronic digital content in memory. The method consists of retrieving an encrypted file from storage. The file has a beginning, an end and a trailer section located just prior to the end. The file is read from the end a predetermined distance to verify if an identifier is present. Reading and decrypting the trailer section from the file read. Determining if there are any updates in the trailer section. In the case there are no updates in the trailer section then decrypting the reference table containing one or more data table location indicators for data items with the first decrypting key. Next, decrypting one or data items with the first decrypting key. Populating the data table with data items at locations specified in the reference table.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07228437",
	"publication_date": "2007-06-05",
	"application_number": "09884618",
	"application_date": "2001-06-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for tracing missing network devices using hardware fingerprints",
	"summary": "",
	"abstract": "When a piece of network equipment is determined to be stolen or missing, a hardware tracing tool mounted within the network detects the distinctive hardware fingerprints of the missing hardware within Internet traffic and extracts the device's IP address to trace the location of the missing equipment. As Internet messages or data packets cross through servers containing the tracing tool, the data packets are decompiled to retrieve unique identifier indicia (hardware fingerprints), such as a computer's MAC address, for example. The extracted fingerprints are then compared with fingerprints stored in a database of missing hardware using a hashing or mapping function, and the server system is alerted to a match. The IP address of the device transmitting the matching indicia is then extracted to determine the location of the missing or stolen network hardware. In this way, a method of tracing missing network hardware is provided that does not increase the cost of network equipment or unnecessarily effect network bandwidth.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07181195",
	"publication_date": "2007-02-20",
	"application_number": "10076335",
	"application_date": "2002-02-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for adding external security to file system resources through symbolic link references",
	"summary": "",
	"abstract": "The method of the invention assumes there is a security manager and mechanism present for defining, attaching, and evaluating external authorization policy to file resources based on the file's path name. In this invention, protected symbolic links and the resources that the link points to are stored in a protected object database. When a system access attempt occurs, the file attribute is extracted from the file used in the access. The file attribute is then used to search the protected object database. If a matching system resource is found, and that resource is protected but does not have independent security policy on it, then the resource will have the security policy of a symbolic link that points to it. In this case, the security of each protected symbolic link pointing to the system resource has to grant access in order for allowance of the access attempt. This approach insures that the most restrictive outcome prevails.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07260718",
	"publication_date": "2007-08-21",
	"application_number": "09843072",
	"application_date": "2001-04-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for constructing and caching a chain of file identifiers and enabling inheritance of resource properties in file systems",
	"summary": "",
	"abstract": "The techniques of the present invention involve constructing and caching a chain of FIDs that represent the directory path to a system resource. Typically a lookupname( ) service returns a handle to the object and a handle to the object's owning directory. The owning directory handle can then be used to obtain a file identifier (FID) for the owning directory. This FID constitutes the first FID in the chain and will also act as the lookup key in the cache. The process next finds the directory's parent. A FID is obtained with the parent handle. This FID is added to the chain. The process repeats until the root of the system's file tree is reached. This result is a chain or array of FIDs representing the full path name of the directory containing the accessed object. The chain begins with the directory FID closest to the accessed object and ends with the FID representing the root of the file tree. Once constructed, the FID chain which forms a binary representation of a directory path name is placed in a cache. The cached chain remains valid unless a rename operation occurs on any FID components in the chain. On an object access, the process obtains a FID for the object's owning directory. This FID which represents the first FID in a FID chain is then used to search the FID chain cache. If a match is found, then the cached FID represents the path name for the access object. With this found chain, the expense of constructing the additional component FIDs for the object's owning oath is avoided.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07185013",
	"publication_date": "2007-02-27",
	"application_number": "09833346",
	"application_date": "2001-04-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for continuous I/O request processing in an asynchronous environment",
	"summary": "",
	"abstract": "Method, apparatus and article of manufacture for continuous modes for both asynchronous accepts and asynchronous receives. A single asynchronous accept is performed on a listening socket and a single asynchronous receive is performed on each connected socket. The continuous mode inputs result in queuing data structures on a pending queue. The contents of the pending data structures on the pending queue are copied to completion queues, while the pending data structures remain on the pending queue.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07272834",
	"publication_date": "2007-09-18",
	"application_number": "10037553",
	"application_date": "2002-01-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for correlating data from external databases",
	"summary": "",
	"abstract": "The present invention provides methods and systems by for identifying, from within a host operating environment, related data from two or more data sources, one or more of which data sources being an external data source to a host operating environment, and for assembling a result data group derived from the related data. The result data group may be assembled as a virtual native document within the host operating environment, such that data from the data group may be accessed and manipulated as a first class participant through the host operating environment by client computers, without requiring nonvolatile storage of external data as native data to the host operating environment.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07177856",
	"publication_date": "2007-02-13",
	"application_number": "09969956",
	"application_date": "2001-10-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for deferred deletion of entries for a directory service backing store",
	"summary": "",
	"abstract": "A method for deleting entries from a directory in which directory information is stored in a set of database tables begins upon a request to delete a directory entry. In response, the directory entry is tagged, preferably by setting the entry's creation time to a null value. If a search query is received thereafter, the routine excludes tagged entries from search results that would otherwise satisfy the search query. Periodically, the routine searches for tagged entries, and references to the tagged entries are then deleted throughout the set of database tables. Thus, the inventive method defers entry deletions to enable directory queries to be processed even if deleted entries have not yet been fully expunged from the directory.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07313581",
	"publication_date": "2007-12-25",
	"application_number": "09303356",
	"application_date": "1999-04-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for detecting the quick restart of liveness daemons in a distributed multinode data processing system",
	"summary": "",
	"abstract": "In distributed multinode data processing systems, mechanisms are employed to insure that the nodes are properly informed about the liveness of the other nodes in node groups in the network. In particular, the present invention employs group membership indicia as part of a mechanism for detecting that a node and/or its adapter have failed and have been recently restarted. Having detected this situation, group membership inconsistencies which it can engender are avoided.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07203748",
	"publication_date": "2007-04-10",
	"application_number": "10078076",
	"application_date": "2002-02-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for developing a custom tagbean",
	"summary": "",
	"abstract": "A method for simplifying the development, testing and maintenance of code objects that may be used, for example, to generate custom web page content. According to the invention, a developer isolates a given task, generates code for the task, and then provides a means by which a page-generating Java servlet can access that code at request time. The code may be generated at any time, and the servlet preferably is generated at translation time, i.e. when a request for the page is first made at a server. In a preferred embodiment, the code for the task is supported within a given method of a Java tagbean.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07266766",
	"publication_date": "2007-09-04",
	"application_number": "09409376",
	"application_date": "1999-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for telecommunications service-to-service asynchronous communications using a context cache",
	"summary": "",
	"abstract": "A method of communication among telephony services using an event context cache can include, in a messaging telephony service, receiving a telephony event from a node in the public switched telephony network specifying a called directory number, a calling directory number, and service context data. The service context data can be stored as an entry within the event context cache. The event context cache can be accessible by at least one other telephony service. The entry can be associated with a key for the event context cache. The key can be specified by the called directory number and the calling directory number.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07212623",
	"publication_date": "2007-05-01",
	"application_number": "10246255",
	"application_date": "2002-09-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for user-specified error correction in an instant messaging system",
	"summary": "",
	"abstract": "A method and system enter a correction for a previously sent message, determine whether to send a complete corrected message or a message correction specification, and send the selected message to a messaging server. The messaging server receives the message correction specification and a message identifier (ID), and sends the message correction specification and the message ID to a recipient client system if a message with a corresponding message ID has previously been sent to the recipient client system. Then, the recipient client system receives the message correction specification and message ID, retrieves the message with a corresponding message ID from its conversation log, corrects the message, updates the conversation log, and activates an alert to notify a user of an update. If the message has not previously been sent, the messaging server corrects the message and sends the corrected message and the message ID to the recipient client system.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07296057",
	"publication_date": "2007-11-13",
	"application_number": "10042668",
	"application_date": "2002-01-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, compiler and platform independent framework for parsing and generating data structures",
	"summary": "",
	"abstract": "A method, compiler and platform independent framework are provided for parsing and generating data structures. Size of and offsetof functions are utilized for defining a length and a location of each parameter of a data structure. The length and location of each parameter of the data structure are stored within an identifier object in a data structure definition. The identifier structure is based on the definition of the data structure itself so that the problem of duplicating the data structure definition is eliminated. The sizeof and offsetof functions automatically account for compiler and platform differences which otherwise would lead to alignment problems so that compiler and platform independence from data structure realignment is provided.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07243343",
	"publication_date": "2007-07-10",
	"application_number": "09829834",
	"application_date": "2001-04-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program product for configuring a simulation model of a digital design",
	"summary": "",
	"abstract": "A configuration database associated with a digital design stores at least one data structure defining a Dial instance and a mapping between each possible input value of the Dial instance and a respective output value. The output value controls which of a number of different possible latch values is placed in a configuration latch to configure a functional portion of a simulation model of the digital design. The configuration database further indicates an association between the Dial instance and the configuration latch. In response to a request specifying an input value for the Dial instance, the data structure in the configuration database is accessed to determine an output value for the Dial instance based upon the mapping. In addition, a latch value for the configuration latch is obtained based upon the output value and the association indicated by the configuration database. The latch value is then utilized to set the configuration latch in the simulation model.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07162404",
	"publication_date": "2007-01-09",
	"application_number": "10425041",
	"application_date": "2003-04-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program product for determining a configuration of a digital design by reference to an invertible configuration database",
	"summary": "",
	"abstract": "A method for determining the configuration of a digital design first obtains a set of latch values of a plurality of latches within the digital design. A setting of a Dial instance is then determined based upon the set of latch values by reference to a configuration database that specifies a mapping table uniquely associating each a plurality of different settings of the Dial with a respective one of a plurality of different sets of latch values. The setting of the Dial instance is then output. In one embodiment, the setting of the Dial is contained in a simulation setup file utilized to configure a simulation model to a state approximating the state of the digital design represented by the set of latch values.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07266489",
	"publication_date": "2007-09-04",
	"application_number": "10425053",
	"application_date": "2003-04-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program product for specifying and using register entities to configure a simulated or physical digital system",
	"summary": "",
	"abstract": "In at least one hardware definition language (HDL) file, at least one design entity containing a functional portion of a digital system is specified. The design entity logically contains first and second latches each having a respective plurality of different possible latch values. With one or more statements, a first Dial instance is associated with the first latch and a second Dial instance is associated with the second latch. A setting of the first Dial instance thus controls which of the plurality of different possible values is loaded in the first latch, and a setting of the second Dial instance controls which of the plurality of different possible values is loaded in the second latch. With a statement, a Register instance is concurrently associated with both the first and the second latches, such that a setting of the Register instance controls the latch values loaded in both the first and second latches.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07213225",
	"publication_date": "2007-05-01",
	"application_number": "10857461",
	"application_date": "2004-05-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program product providing a configuration specification language having split latch support",
	"summary": "",
	"abstract": "Methods, data processing systems, and program products supporting multi-cycle simulation are disclosed. According to one method, a configuration database including at least one data structure representing an instance of a Dial entity is received. The instance of the Dial entity has at least an input, an output, and at least one associated latch within a digital design. A value of the output of the instance of the Dial entity controls a value stored within the associated latch. A control file is also received. The control file indicates that at least one associated latch data structure is to be inserted within the configuration database to represent the latch during multi-cycle simulation. In response to receipt of the configuration database and the control file, the configuration database is processed with reference to the control file to insert within the configuration database at least one latch data structure and to associate, within the configuration database, the at least one latch data structure with the instance of the Dial entity.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07249330",
	"publication_date": "2007-07-24",
	"application_number": "10749581",
	"application_date": "2003-12-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program product that automatically generate coverage instrumentation for configuration constructs within a digital system",
	"summary": "",
	"abstract": "A method, data processing system, and program product for building an instrumented simulation model of a digital design are disclosed. According to the method, a model build tool locates, within design data collectively defining a simulation model of the digital design, a definition of a configuration construct specifying a relationship between values of one or more configuration latches within the digital design and settings of the configuration construct. In response to locating the definition of the configuration construct, the model build tool automatically creates an instrumentation entity within the design data. The instrumentation entity has one or more inputs logically coupled to the one or more configuration latches and one or more outputs for providing signals indicating characteristics of the configuration construct during simulation.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07239993",
	"publication_date": "2007-07-03",
	"application_number": "10651156",
	"application_date": "2003-08-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program products for sharing state information across domains",
	"summary": "",
	"abstract": "State information is shared across domains. The state information is placed in one or more cookies that are shared across disjoint domains. An intermediary application is used, as one example, to enable the sharing of the state information (e.g., the cookies) across the different domains. The intermediary application is used to add state information to requests received from a client and to responses going to the client. Further, an intermediary application is used to cause a client to save state information for any range of Uniform Resource Locators (URLs), and to cause the client to send any previously stored state information to the intermediary application. Additionally, the intermediary application is used to cause state information previously saved by the client for one range of URLs to be subsequently saved by the client for one or more other range of URLs.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07302402",
	"publication_date": "2007-11-27",
	"application_number": "09050841",
	"application_date": "1998-03-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and article of manufacture for parallel processing and serial loading of hierarchical data",
	"summary": "",
	"abstract": "A technique is provided for loading input data in one or more hierarchical format input files into a data store. Parallel processing of one or more input files is performed to output data. The data is serially loaded into the data store while enforcing the order of the data in the one or more input files. Each input file may be a physical file or a logical file.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07209925",
	"publication_date": "2007-04-24",
	"application_number": "10647997",
	"application_date": "2003-08-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and program for querying adaptors in a system to determine information on the adaptor connections",
	"summary": "",
	"abstract": "Provided are a method, system, and program for querying a plurality of adaptors in a system. A request is received to determine connection information for the adaptors in the system. A master task spawns a plurality of tasks to query the adaptors. Each spawned task updates adaptor information with information gathered from querying the adaptor. If no tasks are available to query at least one adaptor that has not been queried, then the master task queries one adaptor and updates the adaptor information with information gathered by querying the adaptor.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07296099",
	"publication_date": "2007-11-13",
	"application_number": "10752808",
	"application_date": "2004-01-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and program for use of metadata to create multidimensional cubes in a relational database",
	"summary": "",
	"abstract": "Also disclosed is a computer-readable medium for storing data for access by a program. A data structure stored in the computer-readable medium includes data for use by the program. The data includes a cube model metadata object that includes a facts metadata object, one or more dimension metadata objects, and one or more join metadata objects that describe how one or more tables in the facts metadata object and one or more tables in the one or more dimension metadata objects are joined. The data also includes a cube metadata object that represents a subset of the cube model metadata object and comprises a view with columns for one or more measures of one of the facts metadata objects and one or more attributes of one or more of the dimension metadata objects and a document that describes roles of columns in the facts metadata object and the one or more dimension metadata objects.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07181450",
	"publication_date": "2007-02-20",
	"application_number": "10323131",
	"application_date": "2002-12-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for topology discovery and representation of distributed applications and services",
	"summary": "",
	"abstract": "A technique for generating a topology associated with a computing environment comprises the following steps/operations. First, components in the computing environment and their dependencies are identified. Identification comprises computing and traversing at least a portion of a model representative of an existence of one or more relationships associated with at least a portion of the components of the computing environment and which is capable of accounting for a full lifecycle (e.g., including deployment, installation and runtime) associated with at least one component of the computing environment. Then, the one or more identified components are presented in a topological representation based on the one or more relationships associated with the one or more identified components. The topological representation comprises a functional plane, a structural plane and an operational plane respectively corresponding to at least a portion of a functional categorization, a structural categorization and an operational categorization of the model. By way of example, the inventive techniques may be applied to a distributed computing environment. The computing environment may also be an autonomic computing environment.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07240325",
	"publication_date": "2007-07-03",
	"application_number": "10241189",
	"application_date": "2002-09-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods, systems and computer program products for restartable multiplexed file transfers",
	"summary": "",
	"abstract": "Methods, systems and computer program products are provided for concurrently transferring a plurality of files between a first data processing system and a second data processing system by multiplexing chunks of the plurality of files onto a connection between the first data processing system and the second data processing system and dynamically determining a chunk size for each multiplexed chunk. A u201cchunku201d is an amount of data from a file to be transferred wherein the amount of data in the chunk is dynamically defined such that differing amounts of data are transferred in each chunk. Furthermore, the transfer of each multiplexed file is tracked so as to allow restarting of an interrupted file transfer from a point of interruption of the transfer.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07159005",
	"publication_date": "2007-01-02",
	"application_number": "09173778",
	"application_date": "1998-10-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods, systems, and computer program products for deferred computer program tracing",
	"summary": "",
	"abstract": "An application (e.g., a computer program) prints data by invoking a print function with a format argument and, optionally, at least one data argument. The format argument and any data arguments are saved in a deferred trace data buffer. The print function returns to the application then, sometime after the print function has returned, the deferred trace data buffer is processed and the format argument and/or any data arguments are printed. By saving the format argument and any data argument(s) to a memory buffer instead of parsing and formatting the arguments in real-time, program efficiency may be improved and the impact of the print function on a software test scenario may be reduced.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07240334",
	"publication_date": "2007-07-03",
	"application_number": "09607074",
	"application_date": "2000-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Monitoring storage resources used by computer applications distributed across a network",
	"summary": "",
	"abstract": "Computing devices storing and executing applications across a network each include agent software to communicate with the application at the computing device to retrieve storage utilization information. At a server on the network, data representative of storage utilization by the applications executing at the several computing devices across the network is collected from the agents for processing.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07167915",
	"publication_date": "2007-01-23",
	"application_number": "10273583",
	"application_date": "2002-10-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multimedia player toolkit for electronic content delivery",
	"summary": "",
	"abstract": "A method provides a collection of data structures and subroutines in a software toolkit, for developing an application for playing digital content data. The method comprises steps of receiving previously encrypted content data encrypted with an encrypted key from an external source; storing the previously encrypted content data in a library; selecting one or more encrypted content data from the library to play; and decrypting each content data selected to be played with its unique encryption key, wherein the decrypting is performed in a tamper-resistant subroutine for deterring unauthorized access to the instructions for decrypting the content data and for deterring unauthorized access to the encryption key.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07206748",
	"publication_date": "2007-04-17",
	"application_number": "09209440",
	"application_date": "1998-12-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Navigating a UAV with telemetry through a socket",
	"summary": "",
	"abstract": "Navigating a UAV, including receiving in a remote control device a user's selection of a GUI map pixel that represents a waypoint for UAV navigation, the pixel having a location on the GUI; mapping the pixel's location on the GUI to Earth coordinates of the waypoint; receiving downlink telemetry, including a starting position from a GPS receiver on the UAV, from the UAV through a socket on the remote control device; calculating a heading in dependence upon the starting position, the coordinates of the waypoint, and a navigation algorithm; identifying flight control instructions for flying the UAV on the heading; and transmitting uplink telemetry, including the flight control instructions, through the socket to the UAV. In some embodiments the UAV is piloted, under control of a navigation computer on the UAV, from the starting position to the waypoint in accordance with a navigation algorithm.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07286913",
	"publication_date": "2007-10-23",
	"application_number": "10692129",
	"application_date": "2003-10-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Navigating an index to access a subject multi-dimensional database",
	"summary": "",
	"abstract": "A technique for navigating an index to access a subject multi-dimensional database stored on a data store connected to the computer. Initially, a deviations spreadsheet comprising cells is displayed. Then, upon user selection of a cell in the deviations spreadsheet, the selected cell is displayed in the subject multi-dimensional database.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07269786",
	"publication_date": "2007-09-11",
	"application_number": "09565132",
	"application_date": "2000-05-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Object in, object out technique",
	"summary": "",
	"abstract": "The present invention discloses a technique for processing input objects to generate output objects. Initially, an input object is received. The received input object contains input data and one input function. A type of the received input object is determined. Based on the determined type, it is ascertained whether the received input object satisfies one or more predefined requirements. When it is ascertained that the input object satisfies each predefined requirement, the input function is executed.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07234146",
	"publication_date": "2007-06-19",
	"application_number": "09364370",
	"application_date": "1999-07-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Persisting node reputations in transient network communities",
	"summary": "",
	"abstract": "Methods, systems, and computer program products are disclosed for persisting node reputations in a transient peer-to-peer networking environment where communities have ad hoc participants. Persistent identifiers are defined for nodes, allowing nodes to be identified across sessions and invocations, even though they re-enter the network with a different network address. Paths taken by content resources as they traverse the network (e.g. which nodes forwarded the content) are persisted, along with reputation information about nodes (e.g. indicating how successful they are at answering queries from peers). Trust relationships can be derived using the persisted information. A tiered broadcast strategy is defined for reducing the number of messages exchanged. Preferred embodiments leverage a web services implementation model.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07177929",
	"publication_date": "2007-02-13",
	"application_number": "10108088",
	"application_date": "2002-03-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Personal video recording with further compression of recorded shows",
	"summary": "",
	"abstract": "Automated personal video recording on a personal video recorder, including recording shows, each show having an original compression level; further compressing a recorded show to a new compression level, the new compression level being higher than the recorded show's original compression level, thereby making available free space; and recording at least part of a new show in free space made available by further compressing the recorded show. Embodiments include recording a show having a compression level and increasing the show's compression level while recording.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07295753",
	"publication_date": "2007-11-13",
	"application_number": "10180144",
	"application_date": "2002-06-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Personal video recording with recovery of displayed storage space",
	"summary": "",
	"abstract": "Automated personal video recording on a multi-user personal video recorder, including recording a first show, displaying at least a portion of the first show, creating displayed space, freeing displayed space, making available free space, and recording at least part of a second show in free space made available by freeing displayed space.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07248776",
	"publication_date": "2007-07-24",
	"application_number": "10180362",
	"application_date": "2002-06-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Pipelined architecture for global analysis and index building",
	"summary": "",
	"abstract": "Disclosed is a technique for building an index in which global analysis computations and index creation are pipelined, wherein the global analysis computations share intermediate results.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07293005",
	"publication_date": "2007-11-06",
	"application_number": "10764772",
	"application_date": "2004-01-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Policy-driven kernel-based security implementation",
	"summary": "",
	"abstract": "Improvements in security processing are disclosed which enable security processing to be transparent to the application. Security processing (such as Secure Sockets Layer, or u201cSSLu201d, or Transport Layer Security, or u201cTLSu201d) is performed in (or controlled by) the stack. A decision to enable security processing on a connection can be based on configuration data or security policy, and can also be controlled using explicit enablement directives. Directives may also be provided for allowing applications to communicate with the security processing in the stack for other purposes. Functions within the protocol stack that need access to clear text can now be supported without loss of security processing capability. No modifications to application code, or in some cases only minor modifications (such as inclusion of code to invoke directives), are required to provide this security processing. Improved offloading of security processing is also disclosed, which provides processing efficiencies over prior art offloading techniques.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07246233",
	"publication_date": "2007-07-17",
	"application_number": "10007446",
	"application_date": "2001-12-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Portlet template based on a state design pattern",
	"summary": "",
	"abstract": "A method for designing object-oriented software for implementing portlets, and an associated computer system and computer program product. The portlets are available to a user of the software who clicks on a link of a first page to identify an action object of an Action class and a state object of a State class. The software includes the State class, the Action class, and program code. The State class includes a method for displaying a view of a page. The Action class includes an actionPerformed method for performing an action and a setState method for setting the state object into the session. The program code is adapted to execute: the actionPerformed method of the action object to perform the action; the setState method of the second page.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07266806",
	"publication_date": "2007-09-04",
	"application_number": "10790913",
	"application_date": "2004-03-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Programmatic application installation diagnosis and cleaning",
	"summary": "",
	"abstract": "A plugable framework for use in the installation and uninstallation of a suite of applications. An application installer configured according to the plugable framework can include installation logic configured to copy application files to a target computing system. The installation logic also can configure the target for operation with the application. Installation diagnostic and cleanup logic can be coupled to the installation logic. The installation diagnostic logic can detect an installation failure, while the cleanup logic can remove the copied files and can reverse the configuration in response to the installation diagnostic logic detecting an installation failure. Uninstallation logic can be configured both to remove copied files from the target, and also to reverse the configuration of the target according to the terms of a specified uninstallation configuration file. In response to the detection of an uninstallation failure, cleanup logic can remove the copied files and can reverse the configuration without regard to the uninstallation configuration file.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07185335",
	"publication_date": "2007-02-27",
	"application_number": "10247202",
	"application_date": "2002-09-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Providing services with respect to a building according to the condition of the building",
	"summary": "",
	"abstract": "Providing services with respect to a building, including depicting a building in a data model, the data model including a three-dimensional representation of the building and a current condition of the building, receiving in a gateway computer, from sensors within the building, data describing the current condition of the building, storing in the data model the data describing the current condition of the building, and tailoring services with respect to the building in dependence upon the current condition of the building.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07209034",
	"publication_date": "2007-04-24",
	"application_number": "10418610",
	"application_date": "2003-04-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Quality of service improvements for network transactions",
	"summary": "",
	"abstract": "Methods, systems, computer program products, and methods of doing business by improving quality of service (u201cQoSu201d) in network exchanges comprising a plurality of related request and response messages. A TQoS (u201ctransactional QoSu201d) cookie is defined, which is used to store information needed when controlling response time (and perhaps other QoS factors as well) for messages exchanged with a particular client. In preferred embodiments, this QoS information comprises a relative priority for these related messages and an available bandwidth for transmitting messages to the client. The disclosed techniques enable applying consistent QoS requirements for delivery of all the related Web objects comprising a transaction. No changes are required on client devices or in client software, and there is no dependency on a client to support cookies.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07213071",
	"publication_date": "2007-05-01",
	"application_number": "09825078",
	"application_date": "2001-04-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Query workload statistics collection in a database management system",
	"summary": "",
	"abstract": "In various embodiments, a method, apparatus, and article of manufacture collect statistics in a database management system. A workload comprising a plurality of database queries is received. Query statistics for the database queries are identified. The query statistics for the database queries are consolidated to provide consolidated statistics. One or more statistics collection requests are generated based on the consolidated statistics.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07302422",
	"publication_date": "2007-11-27",
	"application_number": "10824856",
	"application_date": "2004-04-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Rapid restoration of file system usage in very large file systems",
	"summary": "",
	"abstract": "File system restoration is made more flexible through the use of indicators of individual file restoration status throughout the restoration process. Such indicators are particularly useful in the restoration of large file systems where, for example, the number of files may range upwards of several hundred million. Since file system restoration for large systems takes such a relatively long time, the present invention provides various degrees of individual file access even as the restoration process is being carried out. During file system restoration times, file access may be full or limited to a file's attributes. Most advantageously, the present invention is capable of providing full, dynamically driven (on-demand) file access even during file system restoration operations.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07234077",
	"publication_date": "2007-06-19",
	"application_number": "10602157",
	"application_date": "2003-06-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Representing and managing dynamic data content for web documents",
	"summary": "",
	"abstract": "Methods, systems, and computer program products for improving the authoring of dynamic data content for Web documents (such as Web pages) by applying a content management paradigm to the representation, storage, and retrieval of the content. A transformation flow container is defined, which contains one or more transformations. A particular transformation preferably specifies either (1) a generation or retrieval of content or (2) styling for content. In the former case, executable code such as a JavaBeanu2122 may be referenced for invocation. In the latter case, one or more style sheets may be referenced. Upon evaluating the flows in the flow container, an authored document containing dynamic data content results.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07194683",
	"publication_date": "2007-03-20",
	"application_number": "09798430",
	"application_date": "2001-03-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Routing telecommunications to a user in dependence upon location",
	"summary": "",
	"abstract": "Routing telecommunications to a user including receiving a call, determining that the call is intended for the user, receiving an RFID signal from a user's RFID tag, determining the location of the user in dependence upon the RFID signal, and forwarding the call to a telephony device in dependence upon the user's location. In typical embodiments, determining that the call is intended for the user also include prompting the caller for the name of the user, receiving from the caller as speech the name of the user, converting the speech to a text, and retrieving a user record in dependence upon the text.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07296740",
	"publication_date": "2007-11-20",
	"application_number": "10981256",
	"application_date": "2004-11-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Seamless user interactions for portable storage devices",
	"summary": "",
	"abstract": "A portable storage device  includes a body , an actuator , and an indicator . When coupled to a host device , a user depressing the actuator  causes an interrupt message to be sent to the host device, which initiates shutdown of the portable device by removing it from a host device list of available storage media, and de-powers the portable device. The indicator then changes to signify that it is safe to remove the portable device from the host. The indicator may be visual, aural, or tactile. Preferably, the indicator uniquely identifies four states regarding the status of computer instruction exchange between the portable and host devices, including normal and inactive, normal and active, error, and ready-to-be-removed states. The latter is available only after actuating the actuator. Removal of the portable device is thereby effected by a single user action at the portable device: depressing the actuator.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07234014",
	"publication_date": "2007-06-19",
	"application_number": "10757884",
	"application_date": "2004-01-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Serialization and preservation of objects",
	"summary": "",
	"abstract": "Techniques are disclosed for serializing objects (such as Javau2122 objects), and deserializing those objects, in a manner that enables contents of the objects to be preserved following changes to definitions of the object structures. Objects are serialized using documents encoded in a markup language (such as Extensible Markup Language, or u201cXMLu201d). The serialized objects thereby capture class definition information for the class definition which was in effect when the object was serialized. Subsequently, if the class definition is changed, techniques disclosed herein enable deserializing the information from the markup language document to an object that uses the new class definition, without requiring access to a programming language specification of the now-obsolete class definition.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07207002",
	"publication_date": "2007-04-17",
	"application_number": "10712238",
	"application_date": "2003-11-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Speech recognition by automated context creation",
	"summary": "",
	"abstract": "A method for speech recognition can include generating a context-enhanced database from a system input. A voice-generated output can be generated from a speech signal by performing a speech recognition task to convert the speech signal into computer-processable segments. During the speech recognition task, the context-enhanced database can be accessed to improve the speech recognition rate. Accordingly, the speech signal can be interpreted with respect to words included within the context-enhanced database. Additionally, a user can edit or correct an output in order to generate the final voice-generated output which can be made available.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07243069",
	"publication_date": "2007-07-10",
	"application_number": "09910657",
	"application_date": "2001-07-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Statically detecting externally referenced interfaces of a program",
	"summary": "",
	"abstract": "Externally referenced interfaces of a program are statically detected. The static detection of the externally referenced interfaces is performed prior to runtime and without the source code of the program. Input to the static detection is the compiled output of the program, and the output is a list of the externally referenced interfaces of the program.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07272827",
	"publication_date": "2007-09-18",
	"application_number": "10115508",
	"application_date": "2002-04-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for evaluating character sets to determine a best match encoding a message",
	"summary": "",
	"abstract": "An evaluator system accepts input textual messages in unknown languages and assesses which character sets, corresponding to languages, matches that message. Textual messages whose individual characters are encoded in 16 bit Unicode or other universal format are parsed, and character sets which can express each character and the accumulated correspondence is logged. When the character sets against which the message is being tested only provide partial matches, the invention can determine which offers the best fit, including by means of a weighting function. The evaluation technology of the invention can be applied to multipart documents, and to search engines and indices.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07191114",
	"publication_date": "2007-03-13",
	"application_number": "09384371",
	"application_date": "1999-08-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for front end business logic and validation",
	"summary": "",
	"abstract": "A hybird Notes/DB2 environment provides a requisition catalog on the Web. Client browsers are connected to a GWA infrastructure including a first network dispatcher and a virtual cluster of Domino.Go servers. The network dispatcher sprays out browser requests among configured .nsf servers in virtual server cluster. Communications from this virtual server cluster are, in turn, dispatched by a second network dispatcher servers in a Domino cluster. External objects, primarily for a GUI, are served in a .dfs and include graphic files, Java files, HTML images and net.data macros. The catalog is built from supplier provided flat files. A front end is provided for business logic and validation, as also is a relation database backend. HTML forms are populated using relational database agents. A role table is used for controlling access both to Notes code and DB2 data. Large amounts of data is quickly transferred using an intermediate agent and window.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07197480",
	"publication_date": "2007-03-27",
	"application_number": "09657216",
	"application_date": "2000-09-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for managing and securing meta data",
	"summary": "",
	"abstract": "A method and system for managing meta data for a computing device are disclosed. The method includes collecting meta data resulting from use of the computing device, the meta data including application data usable in an application and context data for identifying context in which the application data are used. The method further includes determining statistical information associated with the collected meta data, wherein the statistical information indicates relationships between the collected meta data, storing the collected meta data and the statistical information in a storage of the computing device, and retrieving, from the storage, application data that would be most appropriate for a current context of using the application based on the context data and the statistical information.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07206791",
	"publication_date": "2007-04-17",
	"application_number": "10051558",
	"application_date": "2002-01-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for managing translatable strings displayed on console interfaces",
	"summary": "",
	"abstract": "NLS translations can be provided by extracting translatable strings from the management definition object, such as a CIM MOF file, and writing the strings into one or more translation files. A unique identifier is assigned to each translatable string. The identifier is included in the management definition object as well as the various translation files. By creating unique identifiers, a particular translated string can be found in one of the translation files. In this manner, different users can specify different languages. Display text is retrieved by retrieving the identifier located in the management definition object. The translation file corresponding to the user's preferred language is then searched for the translated string. Translated strings can be gathered for display panels when the product is packaged. Translated strings can also be gathered at runtime when called for by a particular display panel or other display object.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07177793",
	"publication_date": "2007-02-13",
	"application_number": "10047793",
	"application_date": "2002-01-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for manipulating a registry",
	"summary": "",
	"abstract": "A system, method and facility for manipulating registries on a computer system. The system includes a generic registry facility, which features functions classified according to the breadth of their applicability to varying types of registries. The registries may be classified as file-based and proprietary. The file-based registries may be binary or text-based. The generic registry facility provides a library of generic registry facility functions that may be included in a specific registry manipulation module through which a computer program can manipulate a specific registry. The generic registry facility functions may be customized by the developer of the registry manipulation module for a specific registry. The functions may include an action verification function that includes a commit sequence for ensuring that requested changes to a registry are made successfully. The functions may also include a trigger function for triggering events upon the occurrence of a change to a registry.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07251662",
	"publication_date": "2007-07-31",
	"application_number": "10424201",
	"application_date": "2003-04-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for mapping management objects to console neutral user interface",
	"summary": "",
	"abstract": "A generic management definition object, described using a CIM MOF file or an Extensible Markup Language document, can be used to format display panels that are independent of a management console. A generic integration layer is created between the management data and the display and behavior of such data. A transformation engine is used to convert data definitions included in management data to a formatted structure that is stored in a repository. A translation engine renders the formatted structure into graphical user interface constructs that are independent of any particular management console architecture. The transformation and translation engines coordinate a set of processes that facilitate the display and manipulation of the management data object's data model. GUI display panels that support the management model are generated in a console neutral manner so that the same panels are displayed from a variety of management consoles.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07191404",
	"publication_date": "2007-03-13",
	"application_number": "10046940",
	"application_date": "2002-01-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for obtaining display names from management models",
	"summary": "",
	"abstract": "CIM elements are retrieved from the management definition object and a determination is made as to whether the element is a non-instance element or an instance element. If the element is a non-instance element and a qualifier is found in the management object, then the corresponding name is used. If the qualifier is not found, then the CIM element name is used. If the element is an instance element and a qualifier is found then the name corresponding to the qualifier is used. If there is no qualifier then a determination is made as to the number of non-propagated key properties. If there is one non-propagated key property then the value of the property is used. If there are more than one non-propagated key properties, then a display name is constructed from each non-propagated key property and its corresponding value.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07240326",
	"publication_date": "2007-07-03",
	"application_number": "10047784",
	"application_date": "2002-01-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for RDBMS to protect records in accordance with non-RDBMS access control rules",
	"summary": "",
	"abstract": "A system and method are provided for an information management system (IMS) having an underlying relational database management system (RDBMS) that allows applications to access the RDBMS directly for improved performance without going through the IMS, while maintaining access control. An access control list (ACL) is generated, with tables in the RDBMS being bound using codes in the ACL. At run time or, more preferably, pre-run time, user-defined functions (UDF) evaluate access control attributes and generate an access authorization table, which is joined with the appropriate information table(s) in response to a query against a view on the table. The view is presented to the querying user. Thus, access control rules are encapsulated in the view that is presented to the user.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07216126",
	"publication_date": "2007-05-08",
	"application_number": "10407387",
	"application_date": "2003-04-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for sharing, searching, and retrieving web-based educational resources",
	"summary": "",
	"abstract": "A system and method that enables sharing of resources and materials on a worldwide basis is disclosed. This system and method creates a secure extranet, with member sites communicating through a shared mediator service. The extranet protects private information at each site, yet allows searching and sharing of resources by authorized users of any extranet site. A preferred embodiment is an extranet of Lotus Notes/Domino servers, where information can be shared via the extranet without requiring cross-certification or replication among the servers.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07188150",
	"publication_date": "2007-03-06",
	"application_number": "09933646",
	"application_date": "2001-08-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for supporting digital rights management in an enhanced Javau2122 2 runtime environment",
	"summary": "",
	"abstract": "A digital rights management (DRM) system and methodology for a Java client implementing a Java Runtime Environment (JRE). The JRE comprises a Java Virtual Machine (JVM) and Java runtime libraries components and is capable of executing a player application for presenting content that can be presented through a Java program (e.g., a Java application, applet, servlet, bean, etc.) and downloaded from a content server to the client. The DRM system includes an acquisition component for receiving downloaded protected contents; and a dynamic rights management layer located between the JRE and player application for receiving requests to view or play downloaded protected contents from the player, and, in response to each request, determining the rights associated with protected content and enabling viewing or playing of the protected contents via the player application if permitted according to the rights. By providing a Ad DRM-enabled Java runtime, which does not affect the way non-DRM-related programs work, DRM content providers will not require the installation of customized players. By securing the runtime, every Javau2122 player automatically and transparently becomes a DRM-enabled player.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07308717",
	"publication_date": "2007-12-11",
	"application_number": "09792154",
	"application_date": "2001-02-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for the configuration of software products",
	"summary": "",
	"abstract": "A common extensible software configuration markup language (XSCML) is provided which is suitable to define a project related to the development or update of a software product. The common XSCML may be based on the Extensible Markup Language (XML). In accordance with the XSCML, a software project definition and a system independent software configuration framework are generated. An XSCML processor is provided to access the project definition and to describe product elements and processes and define their access parameters and their relations among each other.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07194730",
	"publication_date": "2007-03-20",
	"application_number": "09871502",
	"application_date": "2001-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for using a buffer to facilitate log catchup for online operations",
	"summary": "",
	"abstract": "A memory buffer facilitates log catchup for online operations. Certain designated areas of memory are allocated for one or more buffers for use during online operations (e.g., reorganization, create index, etc.). Concurrent update activities to the target object write informational records into the one or more buffers. If the buffers become full, the informational records may be written to logs for persistent storage. After online operations finish building all or a suitable portion of the shadow object, log catchup is performed by first applying activities in the informational records from the buffer and thereafter applying activities from logs, if necessary. The invention helps solve the drawbacks of log catchup since the buffer contains only the information related to the target shadow object. Also it does not involve physical I/Os, as these records are all in memory.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07203802",
	"publication_date": "2007-04-10",
	"application_number": "10425163",
	"application_date": "2003-04-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Technique for controlling selection of a peek adapter or a read adapter from multiple adapters connected to a high speed switch",
	"summary": "",
	"abstract": "A technique is provided for facilitating peeking and reading of messages from multiple adapters connected, for example, to a high speed switch in a distributed computing environment. The technique employs a first, relatively quick filter to initially test whether a previously used adapter of the multiple adapters should be used to peek or read a new message. If the first filter fails to select the previously used adapter, then the technique includes employing a second, more complicated filter to determine which adapter of the multiple adapters should be used to peek or read the next message. The first filter includes a first set of tests, and the second filter includes a second set of tests.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07177322",
	"publication_date": "2007-02-13",
	"application_number": "10156377",
	"application_date": "2002-05-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Technique for controlling selection of a peek adapter or a read adapter from multiple adapters connected to a high speed switch",
	"summary": "",
	"abstract": "A technique is provided for facilitating peeking and reading of messages from multiple adapters connected, for example, to a high speed switch in a distributed computing environment. The technique employs a first, relatively quick filter to initially test whether a previously used adapter of the multiple adapters should be used to peek or read a new message. If the first filter fails to select the previously used adapter, then the technique includes employing a second, more complicated filter to determine which adapter of the multiple adapters should be used to peek or read the next message. The first filter includes a first set of tests, and the second filter includes a second set of tests.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07286559",
	"publication_date": "2007-10-23",
	"application_number": "11457583",
	"application_date": "2006-07-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Technique for controlling selection of a write adapter from multiple adapters connected to a high speed switch",
	"summary": "",
	"abstract": "A technique is provided for facilitating writing of messages to multiple adapters connected to a high speed switch in a distributed computing environment. The technique employs a first, relatively quick filter to initially test whether a previously used adapter of the multiple adapters should be used to send a new message. If the first filter fails to select the previously used adapter, then the technique includes employing a second, more complicated filter to determine which adapter of the multiple adapters should be used to send the message. The first filter includes a first set of tests, and the second filter includes a second set of tests.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07301962",
	"publication_date": "2007-11-27",
	"application_number": "11457612",
	"application_date": "2006-07-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Technique for controlling selection of a write adapter from multiple adapters connected to a high speed switch",
	"summary": "",
	"abstract": "A technique is provided for facilitating writing of messages to multiple adapters connected to a high speed switch in a distributed computing environment. The technique employs a first, relatively quick filter to initially test whether a previously used adapter of the multiple adapters should be used to send a new message. If the first filter fails to select the previously used adapter, then the technique includes employing a second, more complicated filter to determine which adapter of the multiple adapters should be used to send the message. The first filter includes a first set of tests, and the second filter includes a second set of tests.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07161954",
	"publication_date": "2007-01-09",
	"application_number": "10156554",
	"application_date": "2002-05-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Technique for enabling applications to use languages other than their built-in macro-languages without changing the applications",
	"summary": "",
	"abstract": "A technique for improving the usage of built-in macro languages of applications by end users is provided. This technique enables the user to program in the programming language of his choice more easily. The source code of to user-selected language is stored in objects of the existing application and, if the language is a compiler language, the compiled code and the compiler itself are stored. A Bytecode Processing Server (BPS) is stored in an object of the existing application. This permits the use of the new macro language anywhere without additional installation efforts. The BPS and the existing application communicate via a stub program, which is written in the built-in macro language. This comprises parameter passing and data transfer.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07269822",
	"publication_date": "2007-09-11",
	"application_number": "09792653",
	"application_date": "2001-02-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Techniques for view control of imaging units",
	"summary": "",
	"abstract": "Techniques are presented for controlling views of plurality of imaging units, where each imaging unit outputs a feed comprising video. A set of parameters are determined, and the set of parameters defines a given selected view of a region able to be visually covered by the plurality of imaging units. The given selected view is one of a plurality of predetermined selected views of the region. Each of the plurality of selected views corresponds to a portion of the region and to one or more of the imaging units able to visually cover the portion of the region. Further, each selected view is defined by a corresponding set of parameters. It is determined which of the one or more feeds correspond to the given selected view, and the one or more feeds that correspond to the given selected view are output.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07215359",
	"publication_date": "2007-05-08",
	"application_number": "10933660",
	"application_date": "2004-09-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Telephony signals containing an IVR decision tree",
	"summary": "",
	"abstract": "A method for receiving and presenting interactive voice response data can include sending a telephony connectivity request for establishing a voice channel connection between an originating device and a interactive voice response system. Prior to establishing the voice channel connection, an interactive voice response menu associated with said interactive voice response system can be received via a ringback channel. At least a portion the interactive voice response menu can be presented to a user of the originating device.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07215743",
	"publication_date": "2007-05-08",
	"application_number": "10324917",
	"application_date": "2002-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Using a telephony application server for call control with a voice server",
	"summary": "",
	"abstract": "A method of linking call control functions of a telephony server with voice processing functions of a voice server using a common server side program can include receiving a call in the voice server, invoking the server side program to generate a voice processing script, executing the voice processing script in the voice server to process the call, and sending the call to the telephony server to perform a call control function on the call. The call control function can be indicated by the server side program.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07184534",
	"publication_date": "2007-02-27",
	"application_number": "10325996",
	"application_date": "2002-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Visual tool for developing service components for use in advanced intelligent networks",
	"summary": "",
	"abstract": "A method for visually generating a service component can include specifying at least one service building block, wherein the specification includes visually selecting a plurality of event handlers for inclusion in the at least one service building block. The method can also include exporting the at least one service building block. The exporting step can produce a deployment descriptor which describes events for which the at least one service building block has been configured to handle. The at least one service block can be visually arranged, wherein the arrangement can form the service component. Finally, the service component produced by the visual arrangement can be configured for insertion in a SLEE in an advanced intelligent network. Notably, in one aspect of the method, the method can further include the step of encapsulating the service component in a service application container.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07167917",
	"publication_date": "2007-01-23",
	"application_number": "10038590",
	"application_date": "2002-01-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program product for implementing a read-only dial in a configuration database of a digital design",
	"summary": "",
	"abstract": "In at least one hardware definition language (HDL) file, a design entity containing a functional portion of a digital system is specified. The design entity logically contains a plurality of configuration latches each having multiple different possible latch values. The latch values of the plurality of configuration latches collectively define at least a portion of a configuration of the functional portion of the digital system. With a statement in the at least one HDL file, a read-only Dial entity is associated with the plurality of configuration latches. The read-only Dial has at least one output and a mapping table indicating a mapping between each of a plurality of possible output values that can be present at the output and a respective corresponding setting of the read-only Dial. The setting of the read-only Dial indicates which of a plurality of different possible configurations is represented by the latch values of the plurality of configuration latches.",
	"url": null,
	"owner": "International Business Machines of Corporation",
	"publication_number": "07168061",
	"publication_date": "2007-01-23",
	"application_number": "10425080",
	"application_date": "2003-04-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for reducing write barrier overhead",
	"summary": "",
	"abstract": "A computer system and method for compiling a program, where the program executes pointer assignments from a source object to a destination object, each source object being addressable through a first pointer and each destination object being addressable through a second pointer. The system and method eliminate write barrier code from association with compiled program code when the first pointer points to a source object whose type is prolific, eliminate write barrier code from association with compiled program code when the second pointer points to a destination object whose type is non-prolific, and associate write barrier code with compiled program code when the source object is non-prolific and the destination object is prolific. Additionally, the system and method can determine not to associate write barrier code with a compiled program code if the second pointer points to a destination object whose type is non-prolific and if the first pointer points to a source object whose type is prolific.",
	"url": null,
	"owner": "International Business Machines, Corporation",
	"publication_number": "07210122",
	"publication_date": "2007-04-24",
	"application_number": "10094019",
	"application_date": "2002-03-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for heterogeneous distributed transaction management in database systems",
	"summary": "",
	"abstract": "Disclosed is a mechanism that can be implemented in database systems to support distributed transactions in heterogeneous systems. Once the transaction manager of a database system implements this mechanism, application developers and vendors can integrate new datasources into the transaction manager of the database system. This would simplify the application design and ensure the integrity of data and interactions. The interface and interactions between the transaction manager and external datasources (both structured and non-structured) conform to X/Open XA standards. Also disclosed is a technique to design the system catalogs for organizing the datasources and instances of the new datasources.",
	"url": null,
	"owner": "International Busniess Machines Corporation",
	"publication_number": "07257605",
	"publication_date": "2007-08-14",
	"application_number": "10775739",
	"application_date": "2004-02-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Vulnerability assessment and authentication of a computer by a local scanner",
	"summary": "",
	"abstract": "Providing a user with assurance that a computer is secure based on a vulnerability assessment completed by a browser-compatible scanner operating on the computer. If the scanner finds a vulnerability, the scanner can inform the user that the machine is or may be compromised, or repair the vulnerability. For example, the scanner may be able to repair the vulnerability of the workstation. In the alternative, the scanner can provide the scan results to a network server. If the vulnerability assessment shows that the workstation is compromised, or if the possibility of remote compromise is high, the network server can decline to provide network services to the workstation.",
	"url": null,
	"owner": "Internet Security Systems, Inc.",
	"publication_number": "07178166",
	"publication_date": "2007-02-13",
	"application_number": "09665018",
	"application_date": "2000-09-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Trusted and secure techniques, systems and methods for item delivery and execution",
	"summary": "",
	"abstract": "Documents and other items can be delivered electronically from sender to recipient with a level of trustedness approaching or exceeding that provided by a personal document courier. A trusted electronic go-between can validate, witness and/or archive transactions while, in some cases, actively participating in or directing the transaction. Printed or imaged documents can be marked using handwritten signature images, seal images, electronic fingerprinting, watermarking, and/or steganography. Electronic commercial transactions and transmissions take place in a reliable, u201ctrustedu201d virtual distribution environment that provides significant efficiency and cost savings benefits to users in addition to providing an extremely high degree of confidence and trustedness. The systems and techniques have many uses including but not limited to secure document delivery, execution of legal documents, and electronic data interchange (EDI).",
	"url": null,
	"owner": "Intertrust Technologies Corp.",
	"publication_number": "07281133",
	"publication_date": "2007-10-09",
	"application_number": "11102514",
	"application_date": "2005-04-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Trusted infrastructure support systems, methods and techniques for secure electronic commerce transaction and rights management",
	"summary": "",
	"abstract": "Different support functions can be collected together in hierarchical and/or in networked relationships to suit various business models and/or other objectives. Modular support functions can combined in different arrays to form different Commerce Utility Systems for different design implementations and purposes. These Commerce Utility Systems can be distributed across a large number of electronic appliances with varying degrees of distribution.",
	"url": null,
	"owner": "Intertrust Technologies Corp.",
	"publication_number": "07165174",
	"publication_date": "2007-01-16",
	"application_number": "09466171",
	"application_date": "1999-12-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integrated programmable system for controlling the operation of electrical and/or electronic appliances of a premises",
	"summary": "",
	"abstract": "There is disclosed an integrated programmable system for controlling the operation of a number of electrical and/or electronic appliances of a premises, the application being controllable electrically, electronically, wirelessly, by infrared and/or by radio frequency, the system including a central data processing apparatus, e.g. a home server, or a central controller, connected with a common digital communication backbone, and the central data processing apparatus is connectable with the appliances via the digital communication backbone.",
	"url": null,
	"owner": "Intexact Technologies Limited",
	"publication_number": "07161483",
	"publication_date": "2007-01-09",
	"application_number": "10515220",
	"application_date": "2003-12-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Security system and a method of operating",
	"summary": "",
	"abstract": "A method of operating a security system is disclosed as including sensors for detecting occurrence of at least one security related event, e.g. motion, and alarm devices, in which the sensors and alarm devices are operatively associated with each other, e g. by being connected with each other via a digital communication backbone (), including the steps of assigning a threat level to each security-related event; determining the current threat level of the system; comparing the current threat level of the system with a predetermined threshold threat level; causing the alarm devices to produce alarm signals when the current threat level reaches or exceeds the threshold threat level.",
	"url": null,
	"owner": "Intexact Technologies Limited",
	"publication_number": "07187279",
	"publication_date": "2007-03-06",
	"application_number": "10515011",
	"application_date": "2003-12-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for control configuration with versioning, security, composite blocks, edit selection, object swapping, formulaic values and other aspects",
	"summary": "",
	"abstract": "Methods and apparatus for configuring process, environmental, industrial and other control systems generate and/or utilize models representing configurations of control systems and/or the systems controlled by them. Records of changes to the models or the configurations represented by them are maintained, thereby, for example, providing bases for determining current states, prior states and histories of changes. Objects in the model have characteristics, such as an object type characteristic and an area characteristic. Users can have corresponding permissions. A security mechanism apparatus controls access by users to the objects. Composite objects are defined by definition objects and are displayed in encapsulated or expanded formats. Objects can include an edit control type identifier that determines how they are presented for editing. Functionality responds to user commands by transferring characteristics of a first object depicted by the graphical user interface to a second object. Configuration-time formulas contained objects are evaluated to constants prior to downloading to the control system.",
	"url": null,
	"owner": "Invensys Systems, Inc.",
	"publication_number": "07272815",
	"publication_date": "2007-09-18",
	"application_number": "09572343",
	"application_date": "2000-05-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Meta-content analysis and annotation of email and other electronic documents",
	"summary": "",
	"abstract": "Meta-content analysis and annotation upon the body of email documents, and other electronic documents, and to create a displayable index of these instances of meta-content, which is sorted and annotated by type are provided. In addition, the electronic document is enhanced by providing links for the semantic foci to external documents containing related information. An electronic document adapted for delivery to one or more recipients, the electronic document including a header and a body, is processed by:nn",
	"url": null,
	"owner": "Inxight Software, Inc.",
	"publication_number": "07178099",
	"publication_date": "2007-02-13",
	"application_number": "09767810",
	"application_date": "2001-01-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for keying protected electronic data to particular media to prevent unauthorized copying using a compound key",
	"summary": "",
	"abstract": "A system an method for distribution of electronic data over a network infrastructure that includes a client device for operation by a user desiring to receive the electronic data and server that contains the electronic data and offering the electronic data for downloading to the client device via the network infrastructure. The client device communicates a compound data key that includes a unique serial number associated with a particular piece of media to which the electronic data is to be stored to the server, vendor information and user information. The server encrypts the electronic data using the compound key, and downloads the encrypted electronic data to the client computer, where the client computer writes the encrypted electronic data to the particular piece of media such that the encrypted electronic data may only be accessed from the particular piece of media. The electronic data is decrypted for use by the apparatus or another device attached to the apparatus using the compound key as a data key, and the data is accessible from only the one piece of media having the unique serial number and is not accessible from any other media having a different or no identifier. In an alternate embodiment, the apparatus for reading the encrypted electronic data is connected to a general purpose computer having a media drive which reads the unique serial number and the electronic data from the one piece of media. The apparatus comprises an application specific integrated circuit which controls and executes instructions to accept the electronic data and the unique serial number from the general purpose computer.",
	"url": null,
	"owner": "Iomega Corporation",
	"publication_number": "07246246",
	"publication_date": "2007-07-17",
	"application_number": "10359864",
	"application_date": "2003-02-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network security and fraud detection system and method",
	"summary": "",
	"abstract": "A system and method to detect and prevent fraud in a system is provided. The system may uniquely identify physical devices connecting to a network, register unique devices, track end-user logins, associate end-user accounts with specific devices, and share information with multiple network service providers is described.",
	"url": null,
	"owner": "Iovation, Inc.",
	"publication_number": "07272728",
	"publication_date": "2007-09-18",
	"application_number": "10867871",
	"application_date": "2004-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system to customize and update a network connection application for distribution to multiple end-users",
	"summary": "",
	"abstract": "A method to manage a customized network connection application includes generating plurality of input interfaces to receive customization information pertaining to the customized network connection application. The customization information pertaining to the customized network connection application is received via the plurality of input interfaces. The customization information is then stored as a profile associated with the customized network connection application. The customized network connection application is automatically generated utilizing the profile, and distributed to at least one recipient.",
	"url": null,
	"owner": "iPass Inc.",
	"publication_number": "07191239",
	"publication_date": "2007-03-13",
	"application_number": "09921959",
	"application_date": "2001-08-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for defining a simulated interactive web page",
	"summary": "",
	"abstract": "The system includes a novel software application interactive representation modeling language, a software application () operative to use the modeling language to create, read and modify interactive representation models of the proposed applications, a memory () to store requirement data and interactive representation model data, a software application () operative to read and update the interactive representation model data across a computer network, a software application () operative to maintain a record of the requirements and to administer operation of the system, a software application () operative to render interactive representations of the proposed applications in browser readable format, a software application () operative to allow multiple instances of other applications to access interactive representation data and requirement data residing in the memory and a software application () operative to allow an individual user's interactions with the system to be broadcast across a networked system to other users.",
	"url": null,
	"owner": "iRise",
	"publication_number": "07174286",
	"publication_date": "2007-02-06",
	"application_number": "10763080",
	"application_date": "2004-01-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Adjustable database runtime kernel",
	"summary": "",
	"abstract": "The present invention relates generally to a computer system for providing access to a database upon a request from an application computer program . The computer system includes a data model  represented in a data dictionary , an application program interface, a data storage , and a database kernel  providing access from the application program interface to the data storage . The database kernel  comprises a runtime module  for providing access from the application program interface to the database kernel and a storage engine module  for providing access from the runtime module  to the data storage . The runtime module  is dynamically changeable, dependent on the data model  represented in the data dictionary , while the storage engine module  is invariable and independent of the data model. An automatic code generator  is arranged to generate an executable program code for the runtime module , based upon the data model  represented in the data dictionary ",
	"url": null,
	"owner": "IT Liberator AS",
	"publication_number": "07251641",
	"publication_date": "2007-07-31",
	"application_number": "10209917",
	"application_date": "2002-08-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for establishing a voice call to a PSTN extension for a networked client computer",
	"summary": "",
	"abstract": "A method and apparatus for establishing a voice call to a PSTN extension for a networked client computer, and routing the voice call off of the network, is provided. In a first embodiment, the apparatus comprises a storage medium having stored therein a plurality of programming instructions for implementing a set of communication services for facilitating establishment of the voice call to the PSTN extension, and an execution unit, coupled to the storage medium, for executing the plurality of programming instructions. The set of communication services include services for receiving a Push-To-Talku2122 request from the networked client computer, requesting the voice call, and in response, determining the PSTN extension. The Push-To-Talku2122 request includes identification information of an originating web server of the Push-To-Talku2122 option, and the determination of the PSTN extension is made in accordance with the originating web server's identification information.",
	"url": null,
	"owner": "ITXC IP Holdings S.a.r.l.",
	"publication_number": "07248675",
	"publication_date": "2007-07-24",
	"application_number": "10428349",
	"application_date": "2003-05-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automated provisioning system",
	"summary": "",
	"abstract": "A computer system comprising a number of components which make up an infrastructure with the system having a Directory  and an APS which is adapted to centralize and automate information management for online service systems.",
	"url": null,
	"owner": "Jacob Rimmell Limited",
	"publication_number": "07313611",
	"publication_date": "2007-12-25",
	"application_number": "09602024",
	"application_date": "2000-06-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Diagnosis of network fault conditions",
	"summary": "",
	"abstract": "In general, the invention facilitates diagnosing fault conditions, such as flapping, by permitting users to request information for specific components in a network device such as a router. The invention also facilitates the diagnosis of other fault conditions, including, but not limited to, excessive numbers of dropped packets, hard drive crashes, high temperature readings, and inactive interface cards. A user may obtain a targeted log containing information relating to selected fault conditions or other network device events, rather than a system log containing information relating to all network device events, some of which may not be of interest to the user. The targeted log may be parsed and analyzed with greater ease than the system log.",
	"url": null,
	"owner": "Juniper Networks, Inc.",
	"publication_number": "07302618",
	"publication_date": "2007-11-27",
	"application_number": "11511015",
	"application_date": "2006-08-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Routing instances for network system management and control",
	"summary": "",
	"abstract": "A network system uses a management routing instance to route management information between elements involved in management of the system. The system registers each element in the management routing instance when the element comes on line. Based on the management routing instance, the system creates management forwarding tables. The system then uses the management forwarding tables to route management information between the elements. Multiple systems, for example systems connected by a network, may exchange management routing instance information to allow elements in different systems to communicate management information with each other.",
	"url": null,
	"owner": "Juniper Networks, Inc.",
	"publication_number": "07206856",
	"publication_date": "2007-04-17",
	"application_number": "10063358",
	"application_date": "2002-04-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Scalable route resolution",
	"summary": "",
	"abstract": "A router comprises a route resolution module to maintain routing information in accordance with a topology of a network, and an indirect next hop manager to maintain indirect next hop data that associates protocol next hops with forwarding next hops. The route resolution module invokes an application programming interface (API) of the indirect next hop manager for associating and disassociating protocol next hops and forwarding next hops. In response to a network event, the route resolution module can modify the indirect next hop data to reduce the time and resources necessary to perform route resolution.",
	"url": null,
	"owner": "Juniper Networks, Inc.",
	"publication_number": "07184437",
	"publication_date": "2007-02-27",
	"application_number": "10197922",
	"application_date": "2002-07-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "User name and profile information management",
	"summary": "",
	"abstract": "A server properly manages user names which users use in services. Based upon communication with a user terminal, a handle name and a character are selected. The information of the selected character is stored in association with the selected user name. The character profile of the character is stored as information of each associated character. Information relating to the user is also stored, and the information relating to the user is blurred when sent to a user terminal used by another user to maintain privacy.",
	"url": null,
	"owner": "Kabushiki Kaisha Square Enix",
	"publication_number": "07246155",
	"publication_date": "2007-07-17",
	"application_number": "10187371",
	"application_date": "2002-07-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer system and method for controlling output of reproduced video data",
	"summary": "",
	"abstract": "A computer system with a monitor display, comprises a decoder unit configured to decode video data containing digital watermark information to derive decoded data, and configured to determine, based on information included in the video data, whether or not first certification for certifying that the video data is legitimately reproduced data succeeds, and a graphics controller which determines, using the digital watermark information, whether or not second certification for certifying that the video data is to be protected from being copied succeeds, the graphics controller converting the decoded data into a protected decoded data from being copied and outputting the protected decoded data to the monitor display if the first certification and the second certification succeed, and the graphics controller inhibiting the decoded data from being output to the monitor display if the first certification fails and the second certification succeeds.",
	"url": null,
	"owner": "Kabushiki Kaisha Toshiba",
	"publication_number": "07302573",
	"publication_date": "2007-11-27",
	"application_number": "10755235",
	"application_date": "2004-01-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Document editing method, document editing system, server apparatus, and document editing program",
	"summary": "",
	"abstract": "A partial document defined in advance as an operating unit composed of at least one element, which is coincident with or is contained in a structural document, includes at least information representing that the partial document is an operating unit. Based on this information, at least the partial document and parts data by parts data containing position information on the partial document are created. Structured documents are stored in storage means as a set of parts data. The stored structured document is edited by updating parts data corresponding to the partial document targeted for operation, according to the contents of operation for the partial document selected as an operating target.",
	"url": null,
	"owner": "Kabushiki Kaisha Toshiba",
	"publication_number": "07228496",
	"publication_date": "2007-06-05",
	"application_number": "10614315",
	"application_date": "2003-07-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for managing employee absences",
	"summary": "",
	"abstract": "A method for managing the absence of an employee is disclosed. The method includes generating an incident case related to the absence, defining portions of the incident case, and integrating the portions such that the incident case is accessible by one or more entities involved with managing the absence.",
	"url": null,
	"owner": "KCRS, Inc.",
	"publication_number": "07184962",
	"publication_date": "2007-02-27",
	"application_number": "10365814",
	"application_date": "2003-02-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, apparatus and article for microfluidic control via electrowetting, for chemical, biochemical and biological assays and the like",
	"summary": "",
	"abstract": "An active matrix microfluidic platform employs thin film transistor active (u201cTFTu201d) matrix liquid crystal display technology to manipulate small samples of fluid for chemical, biochemical, or biological assays without moving parts, for example, using a two-dimensional matrix array of drive electrodes. The active matrix microfluidic platform may employ existing active matrix addressing schemes and/or commercial u201coff-the-shelfu201d animation software to program assay protocols. A feedback subsystem may determine an actual location of a fluid in the microfluidic structure, and provides location information to for display, for example, on an active matrix display, and/or to control movement of one or more fluid bodies in the microfluidic structure.",
	"url": null,
	"owner": "Keck Graduate Institute",
	"publication_number": "07163612",
	"publication_date": "2007-01-16",
	"application_number": "10305429",
	"application_date": "2002-11-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for structured streaming of an XML document",
	"summary": "",
	"abstract": "A method and apparatus are disclosed for streaming an XML document/content in a structured manner that allows the receiver to decode prioritized portions of an XML document. Document models, such as XML Schemas, are utilized in converting XML documents into prioritized portions that are transmitted according to a predefined scheme. Thus, the present invention allows the XML receiver to begin processing the most important XML portions of an XML stream first as well as in mid-transmission and allowing a user to end the transmission before lower priority XML portions are received.",
	"url": null,
	"owner": "Koninklijke Philips Electronics N.V.",
	"publication_number": "07251697",
	"publication_date": "2007-07-31",
	"application_number": "10176232",
	"application_date": "2002-06-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Removable card system with downloadable agent for communicating with a digital television receiver or other host device",
	"summary": "",
	"abstract": "A removable card is adapted for insertion into a corresponding receptacle of a host device, and includes a processor for running at least one application. An agent program is downloadable from the removable card to the host device. The agent program runs on a processor of the host device and controls communication between the application running on the processor of the removable card and at least one application running on the processor of the host device. A different agent program may be downloaded from the card to the host device for each of the applications running on the removable card processor, and each such agent program controls communications between its corresponding removable card application and one or more application programming interfaces (APIs) of applications running on the host device processor.",
	"url": null,
	"owner": "Koninklijke Philips Electronics N.V.",
	"publication_number": "07231411",
	"publication_date": "2007-06-12",
	"application_number": "09396565",
	"application_date": "1999-09-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software support for virtual machine interpreter (VMI) acceleration hardware",
	"summary": "",
	"abstract": "A system and method for processing virtual machine instructions which supports the software trap methodology. An application programming interface (API) prescribes additional functionality for software traps that remove the processing of recursive virtual machine instructions from virtual machine hardware and instead process recursive virtual machine instructions using software. The additional functionality includes the configuration of a context for processing recursive virtual machine instructions, which enables the virtual machine instructions to access CPU registers to retrieve and modify the values of variables as required, the release of the configured context when processing of recursive virtual machine instructions is completed, and the return of control to a virtual machine for processing non-recursive virtual machine instructions.",
	"url": null,
	"owner": "Koninklijke Philips Electronics N.V.",
	"publication_number": "07210140",
	"publication_date": "2007-04-24",
	"application_number": "10247913",
	"application_date": "2002-09-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Virtual environment navigation aid",
	"summary": "",
	"abstract": "A virtual environment browser () holds a number of clip-in files () defining guide charactersu2014locally generated visual aids to navigation that appear within a generated image of a virtual environment and follow a user's input () navigational commands to provide an advance cue as to the effects of an input command. Where the virtual environment data is supplied from a remote source () and includes () an indication of a preferred mode for navigating that environment, for example, flying or walking, the browser () detects this indication and automatically selects the appropriate guide character. Scaling () of the guide character to match the scale of the virtual environment, or such as to render the guide character unobtrusive, may also be provided.",
	"url": null,
	"owner": "Koninklijke Philips Electronics N.V.",
	"publication_number": "07184037",
	"publication_date": "2007-02-27",
	"application_number": "11271474",
	"application_date": "2005-11-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Opaque message archives",
	"summary": "",
	"abstract": "A system includes a server equipped to generate a split encryption key having at least a first key portion and a second key portion, that is used by the server to encrypt at least a portion of a message. Additionally, the first key portion of the split encryption key is retained by the server, while the second key portion of the split encryption key is delivered to a sending client and is discarded from the server. The sending client in turn provides the second key portion to one or more recipients of the message to facilitate recipient access to the message.",
	"url": null,
	"owner": "Kryptiq Corporation",
	"publication_number": "07299357",
	"publication_date": "2007-11-20",
	"application_number": "10394441",
	"application_date": "2003-03-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methods to overcome gravity-induced dysfunction in extremity paresis",
	"summary": "",
	"abstract": "The present invention relates to a system for use in rehabilitation and/or physical therapy for the treatment of injury or disease. The system can overcome gravity-induced dysfunction in extremity paresis following stroke or other neurological disorders.",
	"url": null,
	"owner": "Lam Design Management LLC",
	"publication_number": "07252644",
	"publication_date": "2007-08-07",
	"application_number": "11239709",
	"application_date": "2005-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for analyzing and imaging three-dimensional volume data sets",
	"summary": "",
	"abstract": "A system and method is provided for analyzing and imaging three-dimensional volume data sets. In one embodiment of the invention, a ribbon section is produced which may include a plurality of planes projected from a polyline. The polyline may include one or more line segments preferably formed within a plane. The projected planes intersect the three-dimensional volume data set and the data located at the intersection may be selectively viewed. The polyline may be edited or varied by editing or varying the control points which define the polyline. In another embodiment of the present invention, a method is provided for quickly tracking a physical phenomena represented within the three-dimensional volume data set. A plurality of planes may be successively displayed in the three-dimensional volume data set from which points are digitized related to the structure of interest to create a spline curve on each plane. The area between the spline curves is interpolated to produce a surface representative of the structure of interest, which may for example be a fault plane described by the three-dimensional volume data set. In this manner, the user can more easily and effectively visualize and interpret the features and physical parameters that are inherent in the three-dimensional volume data set.",
	"url": null,
	"owner": "Landmark Graphics Corporation",
	"publication_number": "07248258",
	"publication_date": "2007-07-24",
	"application_number": "11484977",
	"application_date": "2006-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for real-time co-rendering of multiple attributes",
	"summary": "",
	"abstract": "An apparatus and method for enhancing the combined image of multiple attributes without compromising the image of either attribute. The combined image of the multiple attributes is enhanced for analyzing a predetermined property revealed by the attributes. The combined image can be interactively manipulated to display each attribute relative to an imaginary light source or highlighted using a specular component. The method and apparatus are best described as particularly useful for analytical, diagnostic and interpretive purposes.",
	"url": null,
	"owner": "Landmark Graphics Corporation",
	"publication_number": "07298376",
	"publication_date": "2007-11-20",
	"application_number": "10628781",
	"application_date": "2003-07-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Administering devices in dependence upon user metric vectors including relational metrics and location based device control",
	"summary": "",
	"abstract": "Exemplary embodiments of the present invention include a method for administering devices. Such exemplary methods include receiving a plurality of user metrics, creating a relational metric in dependence upon the plurality of user metrics, creating a user metric vector comprising at least one user metric and at least one relational metric, creating a user metric space comprising a plurality of metric ranges, and determining whether the user metric vector is outside the user metric space. If the user metric vector is outside a user metric space, exemplary embodiments include identifying an action, and executing the action.",
	"url": null,
	"owner": "Lenovo Singapore Pte, Ltd",
	"publication_number": "07165056",
	"publication_date": "2007-01-16",
	"application_number": "10627011",
	"application_date": "2003-07-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Entry of a password through a touch-sensitive computer screen",
	"summary": "",
	"abstract": "A keyboard graphic is displayed on a touch-sensitive display screen of a computing system when it is determined that a password should be entered, so that the password can be entered by touching individual spaces within the keyboard graphic. The keyboard graphic may be thus displayed several times during the operation of the system, including following a predetermined period in which no user input is made to the computing system, under control of a subroutine operating as a screen saver subroutine.",
	"url": null,
	"owner": "Lenovo Singapore Pte. Ltd",
	"publication_number": "07308652",
	"publication_date": "2007-12-11",
	"application_number": "09877482",
	"application_date": "2001-06-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for supporting multimode communication in a mobile network",
	"summary": "",
	"abstract": "A mobile communication terminal for supporting a plurality of communication protocols comprises a first software module for managing at least a first operation associated with at least one of the plurality of communication protocols, wherein the first operation is independent of other operations performed by remaining plurality of the communication protocols; and a second hardware module for managing at least a second operation common to at least two of the plurality of communication protocols.",
	"url": null,
	"owner": "LG Electronics Inc.",
	"publication_number": "07272413",
	"publication_date": "2007-09-18",
	"application_number": "10961664",
	"application_date": "2004-10-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Rasterization of three dimensional images",
	"summary": "",
	"abstract": "Rasterization of three-dimensional images are provided in which three-dimensional image data, which includes at least (x,y,z) coordinate and color information, are generated, organized, and stored at memory locations in one or more frame buffers in accordance with z-coordinate information.",
	"url": null,
	"owner": "LightSpace Technologies, Inc.",
	"publication_number": "07256791",
	"publication_date": "2007-08-14",
	"application_number": "10026935",
	"application_date": "2001-12-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Passenger and item tracking with system alerts",
	"summary": "",
	"abstract": "A dynamically configurable threat scanning machine management system is capable of tracking information associated with one ore more items and/or passengers. The central control computer network can transmit, among other things, operational software and threat profiles to the threat scanning machines, while the threat scanning machines can transmit, among other things, images, alarms, and performance data to the central computer that can be distributed to one or more operator stations and/or other command and control centers for review and analysis. The threat scanning machine management system can be arranged in a hierarchical manner which enables threat scanning machines at various locations to be connected into regional, national or international control centers. The tracked information and alarm generation and distribution allow, for example, comparison to other information to determine if an alarm or change in thresholds or sensitivity is warranted.",
	"url": null,
	"owner": "Lockheed Martin Corporation",
	"publication_number": "07212113",
	"publication_date": "2007-05-01",
	"application_number": "10837645",
	"application_date": "2004-05-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Threat scanning machine management system",
	"summary": "",
	"abstract": "Disclosed is a dynamically configurable threat scanning machine management system that utilizes a network to connect threat scanning machines with a central control computer. The central control computer can transmit, among other things, operational software and threat profiles to the threat scanning machines, while the threat scanning machines can transmit, among other things, images and performance data to the central computer. The threat scanning machine management system can be arranged in a hierarchical manner, which enables threat scanning machines at various locations to be connected into regional, national or international control centers for greater management efficiency. The network may be wireless and the control computer may be portable, enabling a supervisor to remotely manage the threat scanning machines while remaining mobile about the facility, or elsewhere. Additionally, the threat scanning machine management system can be accessed and monitored remotely from a web browser via secure Internet access.",
	"url": null,
	"owner": "Lockheed Martin Corporation",
	"publication_number": "07183906",
	"publication_date": "2007-02-27",
	"application_number": "10804088",
	"application_date": "2004-03-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Communications engine architecture",
	"summary": "",
	"abstract": "A modular communications platform and method for processing a communications command are described. The communications platform provides an infrastructure for telephony service providers. The platform includes a connection logic control module for supporting network services, a service logic control module for providing call control support, a subscriber and policy service module to respond to subscriber and policy requests, and an FCAPS module to execute fault, configuration, accounting, performance, and security functions. The method can include the steps of receiving a communications command, generating an authentication request, generating an approval to the authentication request if the communications command is from an approved source, generating a billing request, generating a CPL script, generating instructions based on the CPL script, processing the instructions, generating a status report, and processing the billing request and a status report.",
	"url": null,
	"owner": "Longboard, Inc.",
	"publication_number": "07248575",
	"publication_date": "2007-07-24",
	"application_number": "10232094",
	"application_date": "2002-08-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and product for proxy-based method translations for multiple different firmware versions",
	"summary": "",
	"abstract": "The present invention is a method and system for translating method calls to version-specified method calls. An interface to an underlying object is provided. Applications communicating with the underlying object use the interface. The interface is separate from the underlying object. Version-specific underlying objects are generated. Each one of the version-specific underlying objects is a different version of the underlying object. A plurality of translation objects, one for each version-specific underlying object, are generated for communicating between the interface and each one of the version-specific underlying objects. A translation object is used for translating an interface method call invoked on the interface to a version-specific method call for the underlying object for each version of the underlying object. All translation objects are generated from a single proxy class and a single invocation handler class. The same proxy class and the same invocation handler class are used to generate the translation object for each different version of the underlying object.",
	"url": null,
	"owner": "LSI Corporation",
	"publication_number": "07260816",
	"publication_date": "2007-08-21",
	"application_number": "10682012",
	"application_date": "2003-10-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Process control data collection",
	"summary": "",
	"abstract": "A data collection system. A data input form receives data, and a message queue receives the data from the data input form, and temporarily manages the data until the data collection system can process the data. A temporary data storage temporarily stores the data received by the message queue while waiting for the data collection system to process the data. A transaction manager receives the data from the message queue and processes the data. A data logger logs the processing transactions of the transaction manager. A data loader receives the data from the transaction manager and prepares the data for storage. A data storage device receives the data from the data loader.",
	"url": null,
	"owner": "LSI Corporation",
	"publication_number": "07299158",
	"publication_date": "2007-11-20",
	"application_number": "10799851",
	"application_date": "2004-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for detecting nets physically changed and electrically affected by design ECO",
	"summary": "",
	"abstract": "A method for detecting nets physically changed and electrically affected by a design ECO includes steps as follows. An ECO is executed on an IC design to produce a post-ECO IC design. A first group of nets of the IC design physically changed by the ECO is identified by comparing a pre-ECO database with a post-ECO database. A pre-ECO design SPEF file of the IC design is parsed with a script to identify a second group of nets in the pre-ECO database based on the first group of nets, the second group of nets being coupled to the first group of nets. The second group of nets is pre-ECO electrically affected nets. Parasitics for the first group of nets in the post-ECO database are extracted to generate a parasitic data file for the first group of nets. The parasitic data file is parsed with the script to identify a third group of nets in the post-ECO database based on the first group of nets, the third group of nets being coupled to the first group of nets. The third group of nets is post-ECO electrically affected nets. Finally, a file listing the first group of nets, the second group of nets and the third group of nets is generated.",
	"url": null,
	"owner": "LSI Logic Corporation",
	"publication_number": "07168055",
	"publication_date": "2007-01-23",
	"application_number": "10914921",
	"application_date": "2004-08-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Alert-me management system for telecommunications infrastructure and method of operation thereof",
	"summary": "",
	"abstract": "An alert-me management system for a telecommunications infrastructure and a method of providing an alert-me service. In one embodiment, the system includes: (1) distributed alert-me request servers configured to receive and aggregate alert-me requests pertaining to uniquely identified wireless terminals from calling parties and (2) an alert-me service manager configured to receive the alert-me requests from the distributed alert-me request servers, further aggregate the alert-me requests into a table based on the uniquely identified wireless terminals, generate status checks for the uniquely identified wireless terminals and respond to the distributed alert-me request servers with positive alert-me indications to prompt the distributed alert-me request servers to generate alerts to the calling parties.",
	"url": null,
	"owner": "Lucent Technologies Inc.",
	"publication_number": "07248863",
	"publication_date": "2007-07-24",
	"application_number": "10819585",
	"application_date": "2004-04-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Constructions of variable input length cryptographic primitives for high efficiency and high security",
	"summary": "",
	"abstract": "A hash function is applied to a prefix of a VIL input. The output is added to a suffix of the input. A block cipher is applied to results of the addition. An encryption function is performed on the prefix. The final output is the output of the block cipher and the encryption function. In a second encryption technique, a hash function is applied to an input, and the output of the hash function has first and second portions. A block cipher is applied to the second portion. The output of the block cipher is added to the first portion, and a second function is applied to the result of this first addition. The output of the second function is added to the second portion. An inverse hash function is then applied to the output of the first and second additions, creating an encrypted output.",
	"url": null,
	"owner": "Lucent Technologies Inc.",
	"publication_number": "07221756",
	"publication_date": "2007-05-22",
	"application_number": "10113666",
	"application_date": "2002-03-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Inter-domain network management system for multi-layer networks",
	"summary": "",
	"abstract": "A network management system for a multi-layer network having multiple architectural or technological domains includes an inter-domain configuration manager arranged between a set of one or more network service management applications and a set of network element domain managers, each of the domain managers being associated with a particular domain of the multi-layer network. The configuration manager implements network service design and provisioning functions across the domains of the network in conjunction with stored connectivity information characterizing the multi-layer network. The network management system further includes an inter-domain fault manager and an inter-domain capacity manager, which provide respective fault management and transport capacity management functions across the domains of the multi-layer network. The inter-domain configuration manager, inter-domain fault manager and inter-domain capacity manager may be interfaced to the set of network service management applications and the set of network element domain managers through corresponding published Common Object Request Broker Architecture (CORBA) Application Programming Interfaces (APIs).",
	"url": null,
	"owner": "Lucent Technologies Inc.",
	"publication_number": "07197546",
	"publication_date": "2007-03-27",
	"application_number": "09520133",
	"application_date": "2000-03-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for automated monitoring and action taking based on decision support mechanism",
	"summary": "",
	"abstract": "Techniques are provided for use in accordance with such systems as web sites operating electronic commerce (e-commerce) applications, interactive voice response (IVR) systems and workflow systems for providing automated monitoring of user activity and personalized action taking based on such activity, in accordance with an on-line decision support mechanism which combines formal and heuristic reasoning. In a web-based system, for example, the on-line decision support provided in accordance with the invention can be used in a wide variety of e-commerce applications requiring automated, real-time, intelligent interventions, including targeted promotions and discounts, assisting with navigation through self-help material, supporting dynamic price negotiations, and even selecting large portions of page content.",
	"url": null,
	"owner": "Lucent Technologies Inc.",
	"publication_number": "07170993",
	"publication_date": "2007-01-30",
	"application_number": "10022926",
	"application_date": "2001-12-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multi-analyte diagnostic system and computer implemented process for same",
	"summary": "",
	"abstract": "A multi-analyte diagnostic system for use with a computer. The diagnostic system includes a flow analyzer including a co-planar light source-optical detector array, the flow analyzer being communicatable with the computer. The diagnostic system also includes a memory medium readable by the computer and storing computer instructions. The instructions include the following steps. A biological sample is run through the flow analyzer. The identity and quantity of at least one analyte of interest in the biological fluid is determined substantially simultaneously to the sample-running step.",
	"url": null,
	"owner": "Luminex Corporation",
	"publication_number": "07267798",
	"publication_date": "2007-09-11",
	"application_number": "10442130",
	"application_date": "2003-05-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Fast port failover in a network switch",
	"summary": "",
	"abstract": "A network switch comprises a plurality of ports that exchange frames of data with one or more network devices. A transfer circuit transfers the frames of the data between the ports. At least one of the ports includes a loopback circuit that sends to the transfer circuit each frame of the data received by the at least one of the ports from the transfer circuit when the one of the ports is not operational. A redirect circuit causes the transfer circuit to transfer each frame of the data received by the transfer circuit from the one of the ports to one or more predetermined others of the ports when the one of the ports is not operational.",
	"url": null,
	"owner": "Marvell International Ltd.",
	"publication_number": "07308612",
	"publication_date": "2007-12-11",
	"application_number": "11525326",
	"application_date": "2006-09-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and technique for fine-grained computer memory protection",
	"summary": "",
	"abstract": "A fine-grained memory protection system and technique provide computer memory protection at least to a word granularity. A permissions table having permission values associated with a computer memory is arranged as protection domains. The permissions table can be cached in a protection lookaside buffer (PLD) and/or in sidecar registers. A software calls across protection domains (a cross-domain call) can be facilitated with a switch gate and a return gate. In some embodiments, a gate table is provided to store the switch gates and return gates, each having gate values. In some embodiments, a stack permission stable allows stack frames to be associated with the cross-domain call.",
	"url": null,
	"owner": "Massachusetts Institute of Technology",
	"publication_number": "07287140",
	"publication_date": "2007-10-23",
	"application_number": "10899776",
	"application_date": "2004-07-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Three dimensional tangible interface for interacting with spatial-temporal data using a laser scanner",
	"summary": "",
	"abstract": "An interface that allows a user to model and analyze the properties of three dimensional surface and the regions surrounding such surfaces. The user manipulates a deformable physical modeling material that defines the geometry of a surface. A position sensor such as a laser scanner captures position data specifying the geometry of the surface. A processor processes the geometry data using a selected analysis function to produce result data representing computed characteristics of the surface or its surrounding region. The result data projected as an image onto the deformable surface. The interface permits the user to modify a surface geometry and directly visualize the characteristics of the modified geometry in real time.",
	"url": null,
	"owner": "Massachusetts Institute of Technology",
	"publication_number": "07181363",
	"publication_date": "2007-02-20",
	"application_number": "10825701",
	"application_date": "2004-04-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Three dimensional tangible interface for interacting with spatial-temporal data using infrared light sources and infrared detectors",
	"summary": "",
	"abstract": "An interface that allows a user to model and analyze the properties of three dimensional surface and the regions surrounding such surfaces. The user manipulates a deformable bed of translucent glass beads that defines the geometry of a surface. An array of light emitting diodes underneath the beads transmits infrared light upwardly through the beads such that the intensity of radiation from each position on the surface of the beads is related to the depth of the beads at that position. A digital camera captures radiation image data which is then processed to create elevation data specifying the geometry of the surface. A processor processes the elevation data using a selected analysis function to produce result data representing computed characteristics of the surface or its surrounding region. The result data is projected as an image onto the surface of the beads. The interface permits the user to modify a surface geometry and directly visualize the characteristics of the modified geometry in real time.",
	"url": null,
	"owner": "Massachusetts Institute of Technology",
	"publication_number": "07181362",
	"publication_date": "2007-02-20",
	"application_number": "10825702",
	"application_date": "2004-04-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data mining and reporting",
	"summary": "",
	"abstract": "An integrated system is described that allows a user to easily mine and report data maintained by a customer relationship management (CRM) application. In general, the system automates the process of creating electronic reports, such as an electronic worksheet, in a format that can be directly manipulated and viewed from spreadsheet application. In one embodiment, the report is automatically generated to include a pivot table for displaying the data. The system includes a database adapted to store the CRM data. First and second reporting modules execute within the CRM software application and the worksheet software application, respectively. The reporting modules cooperate in order to integrate CRM application and spreadsheet application, thereby automating the process of generating a worksheet based on the CRM database.",
	"url": null,
	"owner": "Master Mine Software, Inc.",
	"publication_number": "07185279",
	"publication_date": "2007-02-27",
	"application_number": "09738639",
	"application_date": "2000-12-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data communication method",
	"summary": "",
	"abstract": "A data communication function table relating to communication functions is shared between devices. Whether a communication device can operate in an autonomous communication mode or request/response communication mode can be therefore determined, the data type can be determined, the data size and data identification information can be acquired, and a file can be divided to an optimum size for transmission. Network traffic is therefore reduced and the effective communication speed is improved for data communication between devices over a network.",
	"url": null,
	"owner": "Matsushita Electric Industrial Co., Ltd.",
	"publication_number": "07295550",
	"publication_date": "2007-11-13",
	"application_number": "10388358",
	"application_date": "2003-03-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Remote control system and home gateway apparatus",
	"summary": "",
	"abstract": "A gateway apparatus is provided which connects to appliances via a home network. The gateway apparatus includes means for acquiring appliance panel information indicating panel parts of the appliance and an operational range of the panel parts, and means for memorizing gateway apparatus information indicating whether a control command input to the appliance thorough a network built outside the home. The gateway apparatus further includes means for determining whether or not it is possible to accept the input by making reference to the gateway apparatus information when the control command input is received through the outside network and for producing a control command to the appliance based on the appliance panel information when the acceptance is possible. This makes it possible to perform remote control in a similar feeling obtained in operating a front panel of an actual home appliance. Through the outside network, the home appliance can be controlled with easier operations. A higher-reliable remote control system can be provided.",
	"url": null,
	"owner": "Matsushita Electric Industrial Company, Ltd.",
	"publication_number": "07237029",
	"publication_date": "2007-06-26",
	"application_number": "09916113",
	"application_date": "2001-07-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic device that uses a communications network for remote reprogramming of the device",
	"summary": "",
	"abstract": "A portable electronic device is disclosed that is reprogrammable through a pager network. The device includes a communications port. The device also includes a data transceiver for transmitting send data and receiving receive data from a pager network. In addition, the device has a processor. The processor is in electronic communication with the communications port for communicating through the communications port. The processor is also in electronic communication with the data transceiver for communications with the pager network. The device also includes reprogrammable memory programmed with instructions to cause the device to receive new program code from the pager network and to reprogram the reprogrammable memory with the new program code.",
	"url": null,
	"owner": "Matsushita Electric Works, Ltd.",
	"publication_number": "07181606",
	"publication_date": "2007-02-20",
	"application_number": "11176140",
	"application_date": "2005-07-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Telephone interface for communicating with embedded devices through a gateway and allowing access from a remote service provider",
	"summary": "",
	"abstract": "A telephone network interface is disclosed for facilitating communications through use of a telephone with an embedded device through a gateway and for facilitating communications between a remote service provider and the gateway. The telephone network interface includes a telephone interface for electronic communication with a telephone. The telephone network also includes a gateway interface for electronic communications with a gateway. An external telephone network interface is included for connecting the telephone network interface to an external telephone network. In addition, connection control is also provided. Connection control causes the telephone to be selectively in electronic communication with the external telephone network for telephone calls. The connection control also selectively causes the telephone to be in electronic communication with the gateway for communicating with an embedded device such that device requests from the telephone are communicated to the gateway. The gateway is in electronic communication with the embedded device. The connection control further selectively causes the gateway to be in electronic communication with the external telephone network to enable electronic communications between a control service provider and the gateway.",
	"url": null,
	"owner": "Matsushita Electric Works, Ltd.",
	"publication_number": "07242688",
	"publication_date": "2007-07-10",
	"application_number": "09911152",
	"application_date": "2001-07-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integrated systems for providing communications network management services and interactive generating invoice documents",
	"summary": "",
	"abstract": "A integrated customer interface for providing telecommunications management to a customer at a browser involves a web server and a client application. The web server manages a client session supports communication of request messages received from the browser to a network management resource. The client application is integrated for use within the browser, downloadable from the web server in accordance with a predetermined customer entitlement, and programmed to be in interactive communications with the network management resource.",
	"url": null,
	"owner": "MCI, LLC",
	"publication_number": "07225249",
	"publication_date": "2007-05-29",
	"application_number": "09159695",
	"application_date": "1998-09-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for creating and managing survivable, service hosting networks",
	"summary": "",
	"abstract": "The present invention is directed to a system, method and software product for balancing resource services are always available to match the desired work to be done through the use of u201csticky services.u201d. Sticky services are defined as services that you know you want to have available as resources and as such they need to be present in the environment of cooperative applications; it may be that you want these always present or it may be that you want them present whenever certain conditions occur (see NewWave policy service). The general assumption of distributed systems is to not count on the environment you want being present, or put another way assume failure will occur. Therefore distributed environments like Jini assume all services are transient and will be garbage collected when not in active use. For the inside out approach to work, a mechanism should exist that, when desired, counters the transit design assumptions. This implies that two things are needed: (1) a mechanism for providing services as needed; (2) a mechanism for insuring the correct balance of resource services are always available to match the desired work to be done.",
	"url": null,
	"owner": "MCI, LLC",
	"publication_number": "07194543",
	"publication_date": "2007-03-20",
	"application_number": "10292256",
	"application_date": "2002-11-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "On-line experimentation",
	"summary": "",
	"abstract": "An automated system for experimentation includes an experiment engine which can define an experiment relating to various treatments for a set of content elements. The experiment engine conducts the experiment over a data network. An observation module collects observation data relating to user behavior for each treatment. A scripting/scheduling engine coordinates the operation of the experiment engine and the observation module.",
	"url": null,
	"owner": "Memetrics Holdings Pty Limited",
	"publication_number": "07308497",
	"publication_date": "2007-12-11",
	"application_number": "11080204",
	"application_date": "2005-03-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Compilation of remote procedure calls between a timed HDL model on a reconfigurable hardware platform and an untimed model on a sequential computing platform",
	"summary": "",
	"abstract": "A system is described for managing interaction between an untimed HAL portion and a timed HDL portion of the testbench, wherein the timed portion is embodied on an emulator and the un-timed portion executes on a workstation. Repeatability of verification results may be achieved even though the HAL portion and the HDL portion run in parallel with each other. A communication interface is also described for synchronizing and passing data between multiple HDL threads on the emulator domain and simultaneously-running multiple HAL threads on the workstation domain. In addition, a remote procedural-call-based communication link, transparent to the user, is generated between the workstation and the emulator. A technique provides for repeatability for blocking and non-blocking procedure calls. FSMs and synchronization logic are automatically inferred to implement remote procedural calls. A subset of behavioral language is identified that combines the power of conventional modeling paradigms with RTL performance.",
	"url": null,
	"owner": "Mentor Graphics Corporation",
	"publication_number": "07260798",
	"publication_date": "2007-08-21",
	"application_number": "11023592",
	"application_date": "2004-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transaction breakdown feature to facilitate analysis of end user performance of a server system",
	"summary": "",
	"abstract": "A system for monitoring the post-deployment performance of a web-based or other transactional server is disclosed. The monitoring system includes an agent component that monitors the performance of the transactional server as seen from one or more geographic locations and reports the performance data to a reports server and/or centralized database. The performance data may include, for example, transaction response times, server response times, network response times and measured segment delays along network paths. Using the reported performance data, the system provides a breakdown of time involved in completion of a transaction into multiple time components, including a network time and a server time. Users view the transaction breakdown data via a series of customizable reports, which assist the user in determining whether the source of the performance problem. Additional features permit the source to be identified with further granularity.",
	"url": null,
	"owner": "Mercury Interactive Corporation",
	"publication_number": "07197559",
	"publication_date": "2007-03-27",
	"application_number": "10038098",
	"application_date": "2001-10-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "X-radiation scanning system having an automatic object identification and attribute information acquisition and linking mechanism integrated therein",
	"summary": "",
	"abstract": "An x-ray object scanning-tunnel system for automatically acquiring and linking object identity and attribute information about each object transported therethrough while bearing a bar code symbol and/or graphical indicia on the exterior surface thereof. The system comprises a scanning-tunnel housing through which one or more objects can be transported for capturing and processing digital images of the bar code symbol and/or identifying graphical indicia on the object so as to tread the bar code symbol and/or identifying graphical indicia, and identify the object by producing object identification information. An x-ray scanning subsystem mounted within the scanning-tunnel housing, produces an x-radiation energy beam for scanning the interior and/or contents of each object, and automatically generating x-radiation images of the object's interior and/or contents. An information linking computer subsystem automatically links (i) x-radiation images of the interior and/or contents of each transported object, with (ii) object identification information, for storage within a relational database management system (RDBMS) for subsequent access and retrieval.",
	"url": null,
	"owner": "Meterologic Instruments, Inc.",
	"publication_number": "07303132",
	"publication_date": "2007-12-04",
	"application_number": "10164845",
	"application_date": "2002-06-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamically customizing a user interface for the aggregation of content",
	"summary": "",
	"abstract": "Enabling dynamic aggregation of content from a plurality of content providers. The invention stores references associated with specific display areas in a document for a particular data source. Responsive to a request for the document, the invention retrieves the references associated with the data source and dynamically inserts the references into the appropriate display area of the document. A client renders the document by obtaining the content associated with the references. In an embodiment, the invention includes a web service for cobranding a login user interface for a user authentication system. The web service places cobranding content provided by an affiliate content provider and sign-in user interface content provided by a user authentication service into different frames of a single web page.",
	"url": null,
	"owner": "Microsoft Coporation",
	"publication_number": "07293034",
	"publication_date": "2007-11-06",
	"application_number": "10784694",
	"application_date": "2004-02-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for providing color management",
	"summary": "",
	"abstract": "Systems and methods are provided for color management in connection with a variety of computing devices having different color display characteristics. The X11 graphics platform is augmented to support color management systems, such as ICC, sRGB and scRGB, which begin and end with device dependent colors. CMYK color spaces as well as extended RGB color spaces within X11r6 are also supported, thus extending the X11r6 graphics platform to support any modem color management standard.",
	"url": null,
	"owner": "Microsoft Corpoartion",
	"publication_number": "07184057",
	"publication_date": "2007-02-27",
	"application_number": "10179823",
	"application_date": "2002-06-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Access point to access point range extension",
	"summary": "",
	"abstract": "An architecture and methods for extending the depth of a WLAN to a four-level hierarchal access point structure including wireless access points. The wireless access points in the WLAN can be networked by scanning for a network, collecting one or more packets that identify the network from one or more access points, each packet including an address identifying an ancestry of the access points to an ancestral wired access point; and applying an access point selection algorithm to configure a parent access point. The architecture includes a scanning object configured to issue a scan request to a network interface and collect access point data; a selection object configured to filter and sort the collected access point data; an authentication state machine configured to perform authentication and validate; and an association state machine configured to compose a packet including hierarchical data indicative of access point ancestry to a conventional access point.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07187925",
	"publication_date": "2007-03-06",
	"application_number": "11102584",
	"application_date": "2005-04-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Accessing audio processing components in an audio generation system",
	"summary": "",
	"abstract": "An application program provides a performance manager and an audio rendition manager to produce a rendition corresponding to an audio source. The performance manager receives audio data from the audio source and instantiates audio data processing components to process the audio data. The audio rendition manager receives the audio data from the performance manager and instantiates audio data processing components to further process the audio data, including a synthesizer component that generates audio sound wave data, and audio buffers that process the audio sound wave data. The audio data processing components are instantiated as objects having an interface that can be called by the application program. The application program requests a programming reference to an interface of an audio data processing component in the performance manager, or in the audio rendition manager, by calling an interface method of the performance manager or the audio rendition manager, respectively.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07254540",
	"publication_date": "2007-08-07",
	"application_number": "10994782",
	"application_date": "2004-11-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Adaptive machine translation",
	"summary": "",
	"abstract": "A computer-implemented method for providing information to an automatic machine translation system to improve translation accuracy is disclosed. The method includes receiving a collection of source text. An attempted translation that corresponds to the collection of source text is received from the automatic machine translation system. A correction input, which is configured to effectuate a correction of at least one error in the attempted translation, is also received. Finally, information is provided to the automatic machine translation system to reduce the likelihood that the error will be repeated in subsequent translations generated by the automatic machine translation system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07295963",
	"publication_date": "2007-11-13",
	"application_number": "10626925",
	"application_date": "2003-07-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Administrative tool environment",
	"summary": "",
	"abstract": "In an administrative tool environment, user input is supplied to an administrative tool framework for processing. The administrative tool framework maps user input to cmdlet objects. The cmdlet objects describe a grammar for parsing the user input and input objects to obtain expected input parameters. The input objects are emitted by one cmdlet and are available as input to another cmdlet. The input objects may be any precisely parseable input, such as .NET objects, plain strings, XML documents, and the like. The input objects are not live objects. The cmdlets may operate within the same process. Alternatively, one cmdlet may operate locally while another cmdlet operates remotely. The cmdlets may be provided by the administrative tool framework or may be provided by third party developers. The user input may be supplied to the framework via a host cmdlet.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07243344",
	"publication_date": "2007-07-10",
	"application_number": "10882609",
	"application_date": "2004-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Annotations for multiple versions of media content",
	"summary": "",
	"abstract": "Multiple different versions of the same multimedia content are available to a multimedia server. An annotation server maintains annotations corresponding to the multimedia content, each such annotation corresponding to each of the different versions of the multimedia content.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07162690",
	"publication_date": "2007-01-09",
	"application_number": "11334037",
	"application_date": "2006-01-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "API communications for vertex and pixel shaders",
	"summary": "",
	"abstract": "A three-dimensional API for communicating with hardware implementations of vertex shaders and pixel shaders having local registers. With respect to vertex shaders, API communications are provided that may make use of an on-chip register index and API communications are also provided for a specialized function, implemented on-chip at a register level, that outputs the fractional portion(s) of input(s). With respect to pixel shaders, API communications are provided for a specialized function, implemented on-chip at a register level, that performs a linear interpolation function and API communications are provided for specialized modifiers, also implemented on-chip at a register level, that perform modification functions including negating, complementing, remapping, stick biasing, scaling and saturating. Advantageously, these API communications expose these very useful on-chip graphical algorithmic elements to a developer while hiding the details of the operation of the vertex shader and pixel shader chips from the developer.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07280111",
	"publication_date": "2007-10-09",
	"application_number": "10981963",
	"application_date": "2004-11-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application program interface for dynamic instrumentation of a heterogeneous program in a distributed environment",
	"summary": "",
	"abstract": "Described is an application program interface (API) that enables dynamic modification to applications executing in a heterogeneous distributed computing environment. The application program interface includes a navigation function, a query function, a thread management function, and a modifier function. The navigation function returns program information for a local or remote computer (i.e., specified computing device). The query function returns information about a program on the specified computing device. The thread management function controls execution of other programs on the specified computing device. The modifier function modifies a system memory on the specified computing device that stores the heterogeneous program. The API works in conjunction with a hierarchical intermediate representation of the heterogeneous program such that pre-defined program tools can modify the intermediate representation and write these modifications to the specified computing device while the heterogeneous program remains operational.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07263689",
	"publication_date": "2007-08-28",
	"application_number": "10001280",
	"application_date": "2001-11-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application program interface for network software platform",
	"summary": "",
	"abstract": "An application program interface (API) provides a set of functions that make available support for processing XML documents for application developers who build Web applications on Microsoft Corporation's .NETu2122 platform.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07165239",
	"publication_date": "2007-01-16",
	"application_number": "09902810",
	"application_date": "2001-07-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application programming interface and generalized network address translator for translation of transport-layer sessions",
	"summary": "",
	"abstract": "An application programming interface for translation of transport-layer sessions is presented. The system includes kernel-mode support for application-controlled network address translation and user-mode implementation of the redirect API routines. An application process may request that a network gateway modify the source and/or destination of a given network session in a manner transparent to the original source host and/or the replacement destination host. With the generalized NAT (gNAT) of the instant invention and its associated API, both the source and the destination addresses of message packets may be changed. The address changes are mapped in the gNAT, and may result in apparent sessions between different clients and servers. Depending on the protocol in use (e.g. TCP or UDP), the address translation may be made dynamically by the gNAT, under the command of the application, and take place at the kernel level.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07305477",
	"publication_date": "2007-12-04",
	"application_number": "10858754",
	"application_date": "2004-06-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application programming interface for centralized storage of principal data",
	"summary": "",
	"abstract": "In the present invention, data relating to principals known to a computer system is centrally stored and objects having a standardized principal application programming interface (API) for finding, managing and accessing that data is provided to applications in lieu of having the applications independently store the principal data. The present invention eliminates the need for each application to create duplicate principal data. It also ensures that principal data are consistent throughout the applications on the computer system. In addition, the present invention allows any application with objects having the principal API to manage and change the principal data making such principal data easy to update. The principal API includes methods to find principals based on an identity reference to a principal or an identity claim that uniquely identifies the principal on computer system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07200608",
	"publication_date": "2007-04-03",
	"application_number": "10693097",
	"application_date": "2003-10-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application programming interface for changing the visual style",
	"summary": "",
	"abstract": "A method of communicating between a graphical component library and an appearance manager is provided that includes issuing a request, that includes component defining parameters, for rendering services by a graphical component library. The appearance manager receives the request for rendering services and assigns appearance characteristics to the graphical component based upon the provided parameters. A method of rendering graphical components on the display of a computer system is also provided that includes rendering the requested graphical component according to the appearance characteristics assigned by the appearance manager. A method is also provided for communicating between a graphical component library and an appearance manager that includes issuing a request that includes component defining parameters, for information about the defined component. The appearance manager receives the request for information and provides the requested information to the graphical component library based upon the provided parameters.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07190369",
	"publication_date": "2007-03-13",
	"application_number": "11083177",
	"application_date": "2005-03-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application programming interface for utilizing multimedia data",
	"summary": "",
	"abstract": "A computing system, which is in communication with a multimedia source and that includes at least one application for processing multimedia content from the multimedia source, includes an Application Programming Interface (API) for obtaining basic multimedia information that may be required by applications to process the multimedia content. By doing this, the invention enables multimedia application(s) to easily obtain the basic information from the API in a predetermined and standard manner, without having to obtain the information directly from the multimedia source, thereby reducing the functionality that has to be programmed directly into the application(s) for obtaining the basic information, and thereby reducing the cost, time, and resources that are required for creating the multimedia application(s).",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07246318",
	"publication_date": "2007-07-17",
	"application_number": "10185161",
	"application_date": "2002-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Architecture, programming model and API'S",
	"summary": "",
	"abstract": "The subject invention provides a system and/or a method that facilitates employing a model based at least upon a framework, wherein the model can be utilized to build an RFID application. A receiver component can receive data, wherein a model component can create a model based at least in part upon the received data that facilitates creating and/or executing the RFID application. The framework can be, but is not limited to, an entity, a framework class, a hierarchical framework of at least one class, an interface, an exception, a component architecture, a schema, an object model, and/or an API (Application Programming Interface). The model can be utilized to create, deploy, manage, and/or execute the RFID application to provide a generic operation and/or a business specific scenario.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07295116",
	"publication_date": "2007-11-13",
	"application_number": "11069459",
	"application_date": "2005-03-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Associating image files with media content",
	"summary": "",
	"abstract": "Requesting and receiving image files associated with media content. The received image files are stored such that an identifier value associated with the media content is stored in the filenames of the received image files. The invention determines which of the image files is associated with specific media content by searching for the identifier value of the specific media content in the filenames of the image files.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07293227",
	"publication_date": "2007-11-06",
	"application_number": "10622767",
	"application_date": "2003-07-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Audio generation system manager",
	"summary": "",
	"abstract": "An audio generation system includes a performance manager, which is an audio source manager, and an audio rendition manager to produce a rendition corresponding to an audio source. An application program provides the audio source manager and the audio rendition manager. The audio source manager receives audio content from an audio source, provides one or more audio content components that generate event instructions from the received audio content, and processes the event instructions to produce audio instructions that are provided to the audio rendition manager. The audio rendition manager provides processing components to process the audio instructions, including a synthesizer component that receives the audio instructions and generates audio sound wave data, and audio buffers that process the audio sound wave data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07305273",
	"publication_date": "2007-12-04",
	"application_number": "09801922",
	"application_date": "2001-03-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Auto playlist generation with multiple seed songs",
	"summary": "",
	"abstract": "The present invention relates to systems and/or methods that generate playlist(s) for a library or collection of media items via selecting a plurality of seed items, at least one of which is an undesirable seed item. Some of the seed items are desirable indicating that a user prefers additional media items similar to the desirable seed items and others are undesirable indicating that the user prefers additional media items dissimilar to the undesirable seed items. Additionally, the seed items can be weighted to establish a relative importance of the seed items. The invention compares media items in the collection with the seed items and determines which media items are added into the playlist by computation of similarity metrics or values. The playlist can be regenerated by adding desirable seed items to the playlist and removing media items from the playlist (e.g., undesirable seed items).",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07196258",
	"publication_date": "2007-03-27",
	"application_number": "11255365",
	"application_date": "2005-10-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automated cellular telephone clock setting",
	"summary": "",
	"abstract": "A cellular telephone clock is automatically set to correlate to a timestamp contained in a Short Messaging Service (SMS) status report. Accordingly, an exemplary cell phone clock can be properly set any time the cell phone receives a status report. By setting the cell phone device time to correlate to the world time, the exemplary cell phone clock can be automatically set, without requiring any action by the user and without requiring a special time set control message. When the cell phone transmits an SMS message, the cell phone stores the device time corresponding to the time that the message was sent (DTS). When a status report is received, the exemplary cell phone stores the device time corresponding to the time that the status report was received (DTR). Additionally, the cell phone stores the world time that is included in the status report by the SMSC that handled the message (WT). By subtracting the DTR from the WT, the cell phone can determine an approximate difference between the cell phone's device time (and clock) and the world time. By adding this difference to the current device time (DTC), the DTC can be set to closely approximate the WT.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07206590",
	"publication_date": "2007-04-17",
	"application_number": "10988874",
	"application_date": "2004-11-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automated generator of input-validation filters",
	"summary": "",
	"abstract": "An implementation of a technology, described herein, for facilitating the automated generation of input-validation software filters. The implementation of the invention provides an easy graphical user interface (GUI). With this GUI, a user (such as a system administrator) is able to quickly enter a set of parameters defining what valid inputs constituteu2014in particular, when such inputs come from a computing component. Consequently, the user does not have to manually generate filtering instructions on how to filter input from a computing component. This abstract itself is not intended to limit the scope of this patent. The scope of the present invention is pointed out in the appending claims.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07200599",
	"publication_date": "2007-04-03",
	"application_number": "09887524",
	"application_date": "2001-06-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automated secure key transfer",
	"summary": "",
	"abstract": "A provisioning service datacenter provides a key transfer from a web service datacenter over a first secure channel. In certain versions, the provisioning service datacenter transmits an email having a hashed link to a partner site in response to a key request provided by the partner site. Certain roles at the partner site can respond to the email, thereby returning the hashed link to the provisioning service datacenter. Thereupon, in certain versions, the request is forwarded to a web service datacenter, and a secure channel is provided over which a key can be forwarded to the provisioning service datacenter, and thereupon to the partner site. In certain versions, the key is used to establish a second secure channel.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07260224",
	"publication_date": "2007-08-21",
	"application_number": "10610313",
	"application_date": "2003-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic database statistics creation",
	"summary": "",
	"abstract": "A system for automatic statistics creation comprises a query optimizer which automatically generates statistics derived from data in a database and selects an executable procedure from a plurality of procedures that operate on data in a database using the automatically generated statistics. A counter is maintained of updates made to each statistic that has been automatically generated. If the counter breaches a threshold, the automatically generated statistic is removed from the database.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07289999",
	"publication_date": "2007-10-30",
	"application_number": "10981799",
	"application_date": "2004-11-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Base cryptographic service provider (CSP) methods and apparatuses",
	"summary": "",
	"abstract": "Apparatuses and methods are provided for interface logic that is configurable to operatively couple cryptography support logic and cryptography providing logic. The interface logic provides at least one management function to the cryptography providing logic. The management function includes at least one of the following four management functions: an identity management function, a file management function, a container management function, and a cryptography management function.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07200756",
	"publication_date": "2007-04-03",
	"application_number": "10179655",
	"application_date": "2002-06-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Beacon protocol for internet connection sharing devices",
	"summary": "",
	"abstract": "A system and method is provided for detecting, monitoring and maintaining an Internet Connection Sharing Device (ICSD). An ICSD may be connected to one or more devices, and/or applications associated with a Local Area Network (LAN), which devices, and/or applications, may attempt to detect, monitor and maintain the ICSD. Thus, a broadcast protocol for advertising status and services and a unicast request/response protocol are provided to facilitate such detection, monitoring and maintenance.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07254136",
	"publication_date": "2007-08-07",
	"application_number": "09794586",
	"application_date": "2001-02-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Calibration of a device location measurement system that utilizes wireless signal strengths",
	"summary": "",
	"abstract": "An architecture for minimizing calibration effort in an IEEE 802.11 device location measurement system. The calibration technique is based upon a regression function that produces adequately accurate location information as a function of signal strength regardless of gaps in the calibration data or minimally available data. The algorithm takes a set of signal strengths from known room locations in a building and generates a function giving (x,y) as a function of signal strength, which function may then be used for the estimation of new locations. Radial basis functions, which are simple to express and compute, are used for regression. The fact that the algorithm maps signal strength to continuous location makes it possible to skip rooms during calibration, yet still evaluate the location in those rooms.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07233286",
	"publication_date": "2007-06-19",
	"application_number": "11342515",
	"application_date": "2006-01-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Classifying software and reformulating resources according to classifications",
	"summary": "",
	"abstract": "Historically, resources (e.g., dynamic link libraries) were organized based on factors including the expertise of development teams. Unfortunately, this creates shared resources of much greater functionality than required by any one client application. By reformulating shared resources according to nodes reachable by classified applications, reformulated resources reduce the over-inclusive nature of shared resources formed based on the expertise of development teams. Further, layering resources for lower order classified applications also reduces memory requirements.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07308684",
	"publication_date": "2007-12-11",
	"application_number": "10463634",
	"application_date": "2003-06-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Common annotation framework",
	"summary": "",
	"abstract": "A Common Annotation Framework includes, in an embodiment, an annotation having a context anchor that identifies a resource and a position in the resource that the annotation pertains to, and a content anchor that identifies data that is annotating the resource. The annotation can also be extended with client application-defined data and/or functionality, and the framework can be extended with one or more of application-defined objects, methods, and annotation stores.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07243301",
	"publication_date": "2007-07-10",
	"application_number": "10119544",
	"application_date": "2002-04-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Common visual and functional architecture for presenting and controlling arbitrary telephone line features",
	"summary": "",
	"abstract": "A user interface for screen phones monitors telephone line state information and displays user interface controls and telephone line status information dependent on the telephone line state. The user interface includes a display element referred to as a call slip that expands and collapses in response to changes in telephone line state and user input. The call slip updates the information that it displays based on telephone line state changes and information communicated from one or more telephony monitoring applications. The call slip displays user interface controls representing tasks that are dependent on information derived from a telephone call, such as caller ID information. The software used to control the display of call slips and to monitor telephone line state is part of a software platform that may be customized for a particular device or application. For example, an implementer may select default display elements and monitoring application programs from the platform and add custom display elements that communicate with the default programs via their programming interfaces.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07236576",
	"publication_date": "2007-06-26",
	"application_number": "11054144",
	"application_date": "2005-02-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Communication protocol for synchronizing animation",
	"summary": "",
	"abstract": "A communications protocol is described that governs asynchronous exchange of data between a high level animation system and a low level animation system. The high level animation system has a variable, medium-frequency frame rate and is optimized for interactivity. The low level animation system has a constant, high frequency frame rate and is optimized for high refresh frame rate. The communications protocol includes messages that can be sent by the high-level animation system to the low-level animation system to designate an animation and how the animation is to change over a specified period of time. As a result, the low-level system can display the animation at the high refresh rate even if animation data is not received from the high-level system for every frame.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07265758",
	"publication_date": "2007-09-04",
	"application_number": "11275211",
	"application_date": "2005-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Communication stack for network communication and routing",
	"summary": "",
	"abstract": "A communication stack enables computers implementing it to send, receive, or route network communications. The communication stack includes a message layer, a communication layer, a security layer, and a transport protocol layer, with plug-in transport protocol modules and plug-in security protocol modules. Each of the origin computer, target computer, and routing computers involved in delivering a message implements the communication stack. An application on the origin computer calls the message layer of the computer to send messages to a target computer and identifies routing computers on the route for delivering the message to the target computer. The message layer calls the communication layer to establish a connection to the target computer. The communication layer uses the transport protocol layer to establish an initial connection with the target computer, and uses the security layer to negotiate security parameters and to handle secured communications between the origin and target computers.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07191248",
	"publication_date": "2007-03-13",
	"application_number": "10651780",
	"application_date": "2003-08-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Compact text encoding of latitude/longitude coordinates",
	"summary": "",
	"abstract": "Methods are disclosed for encoding latitude/longitude coordinates within a URL in a relatively compact form. The method includes converting latitude and longitude coordinates from floating-point numbers to non-negative integers. A set of base-N string representations are generated for the integers (N represents the number of characters in an implementation-defined character set being utilized). The latitude string and longitude string are then concatenated to yield a single output string. The output string is utilized as a geographic indicator with a URL.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07302343",
	"publication_date": "2007-11-27",
	"application_number": "10631611",
	"application_date": "2003-07-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Context free grammar engine for speech recognition system",
	"summary": "",
	"abstract": "The present invention includes a context-free grammar (CFG) engine which communicates through an exposed interface with a speech recognition engine. The context-free grammar engine, in one illustrative embodiment, handles loading and unloading of grammars, as well as maintaining a desired activation state of the grammars which are loaded. Further, the CFG engine represents all loaded grammars, and their corresponding activation states, as a single grammar to the speech recognition engine.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07206742",
	"publication_date": "2007-04-17",
	"application_number": "11296074",
	"application_date": "2005-12-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Controlling access to protected data and assessment functions via browser redirection",
	"summary": "",
	"abstract": "Enabling an organization to control user assignments and assessment results while enabling a proprietary provider to maintain control over both network distribution of proprietary content comprising the assignments and use of proprietary assessment functions that evaluate the user's performance of the assignments. A student uses a browser to submit a request to a learning management system (LMS) that includes a URL to a network node hosting the proprietary learning content and assessment functions. The LMS sends a hidden form to the browser, causing the browser to automatically redirect to the network node. The proprietary provider then controls distribution of the proprietary learning content to the browser and controls the student's interaction with the proprietary learning content to accomplish the assignment. When the student submits responses to the assignment, the proprietary provider performs proprietary assessment functions and redirects only results data to the LMS through the browser.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07293239",
	"publication_date": "2007-11-06",
	"application_number": "10732743",
	"application_date": "2003-12-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Controlling the listening horizon of an automatic speech recognition system for use in handsfree conversational dialogue",
	"summary": "",
	"abstract": "Conversational dialog with a computer or other processor-based device without requiring push-to-talk functionality. In one embodiment, a computer-implemented method first determines that a user desires to engage in a dialog. Based thereon the method turns on a speech recognition functionality for a period of time referred to as a listening horizon. Upon the listening horizon expiring, the method turns off the speech recognition functionality.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07240011",
	"publication_date": "2007-07-03",
	"application_number": "11257249",
	"application_date": "2005-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Credential management",
	"summary": "",
	"abstract": "Described herein is an implementation of a technology for managing credentials. With an implementation, a credential manager is domain-authentication aware and concurrent authentications with multiple independent networks (e.g., domains) may be established and maintained. Moreover, a credential manager provides a credential model retrofit for legacy applications that only understand the password model. The manager provides a mechanism where the application is only a u201cblind courieru201d of credentials between the trusted part of the OS to the network and/or network resource. The manager fully insulates the application from u201creadu201d access to the credentials. This abstract itself is not intended to limit the scope of this patent. The scope of the present invention is pointed out in the appending claims.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07210167",
	"publication_date": "2007-04-24",
	"application_number": "09757058",
	"application_date": "2001-01-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Cross platform network authentication and authorization model",
	"summary": "",
	"abstract": "A model for authentication and authorization of users and applications that use network services. A client requests a ticket by providing credentials (user ID and password), e.g., over HTTP/SOAP/XML in the UDDI framework. An authentication adapter in a receiving server deserializes the request into a data structure that provides access to the security ID and password attributes, and passes these attributes to an ID management system to perform authentication. The credentials also determine the user's or application's privileges. The authentication adapter constructs a ticket object for the client incorporating the privileges and other information, e.g., the security ID and a date/time stamp. The ticket object is serialized, encrypted, encoded for transmission and inserted into an appropriately-formatted XML message and returned to the requesting client. The client attaches the authentication ticket to subsequent service requests that require authentication. To validate the ticket, the ticket object is reconstructed from the request data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07178163",
	"publication_date": "2007-02-13",
	"application_number": "10292322",
	"application_date": "2002-11-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data property promotion system and method",
	"summary": "",
	"abstract": "A method for promoting properties for processing a message in a business automation system includes the steps of receiving a message which has a plurality of parts where each part has associated properties; identifying the associated properties to be promoted; extracting the information of the promoted property; storing the information of the promoted property in a memory; and processing the message by accessing the information of the promoted property from the memory instead of directly from the message. The method may further include correlating a received message with an earlier processed message by using a correlation method utilizing a strong naming convention to generate a correlation identifier.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07237184",
	"publication_date": "2007-06-26",
	"application_number": "10739714",
	"application_date": "2003-12-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Debugger causality system and methods",
	"summary": "",
	"abstract": "A debugger casuality feature is provided. Debugger casuality is the ability of a cooperating debugger to associate an ordered set of casuality related threads, possibly originating from different processes, as a logical thread of execution. In an illustrative implementation, systems and methods are provided allowing for the execution and management of debugger casuality within a computing environment. In the contemplated implementation casuality hooks are provided for integration with calls found in software operating in a computing environment. The hooks help attach a cooperating debugger to be able to step through a call executing in the computing environment. The casuality hooks provide the ability to step between logically related physical threads executing in a given computing environment. The physical threads ranging from single process, multi-threaded applications to multi-machine, multi-process systems. Furthermore, debugger casuality provides the ability to show the relationship between physical threads executing in a given computing environment.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07293256",
	"publication_date": "2007-11-06",
	"application_number": "10174359",
	"application_date": "2002-06-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Demosaicing graphical content",
	"summary": "",
	"abstract": "Demosaicing of graphical content is provided. In an illustrative implementation a demosaicing engine executing one or more demosaicing algorithms is employed to operate on graphical content to provide better quality and higher resolution images. In operation, the demosaicing engine operates in two modes, a training/learning mode, and a run time mode. During training, training-images are analyzed to generate a codebook of mosaic filter table entries, such that each table entry has an associated list of similar training pixel blocks and their associated filters. During run time, a run-time image is broken into pixel blocks. Each pixel block is then compared with the entries of the codebook to find the closest match filter. The list associated with the entry is then processed using a least-squares algorithm to locate the optimal mosaic filter. As a result, higher resolution is achieved without requiring more pixels.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07158685",
	"publication_date": "2007-01-02",
	"application_number": "10185073",
	"application_date": "2002-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Deriving a symmetric key from an asymmetric key for file encryption or decryption",
	"summary": "",
	"abstract": "One aspect relates to a process and associated device that provides a private key of an asymmetric key pair in a key device. A symmetric master key is derived from the private key of the asymmetric key pair. The symmetric master key is stored in a computer memory location. The symmetric master key is used to encrypt or decrypt a file encryption key. The file encryption key can encrypt or decrypt files. In another aspect, the user can still access the files even if a user deactivates the key device by encrypting or decrypting the file encryption key directly from the symmetric master key.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07181016",
	"publication_date": "2007-02-20",
	"application_number": "10351683",
	"application_date": "2003-01-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Digital production services architecture",
	"summary": "",
	"abstract": "Methods, units, systems, architectures and/or storage media for video and/or audio processing. An exemplary architecture includes one or more layers selected from, for example, service and/or application layers, storage area network layers, digital asset management layers, and/or enterprise applications integration and/or business process automation layers. Various exemplary methods, units, systems and/or storage media are also disclosed.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07212574",
	"publication_date": "2007-05-01",
	"application_number": "10206579",
	"application_date": "2002-07-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed computing services platform",
	"summary": "",
	"abstract": "A server federation cooperatively interacts to fulfill service requests by communicating using data structures that follow a schema in which the meaning of the communicated data is implied by the schema. Thus, in addition to the data being communicated, the meaning of the data is also communication allowing for intelligent decisions and inferences to be made based on the meaning of the data. Cooperative interaction is facilitated over a wide variety of networks by messaging through a common API that supports multiple transport mechanisms. Also, mid-session transfer between client devices is facilitated by schema and the transport-independent messaging structure. The user interfaces of the client devices will appear consistent even if the client devices have different user interface capabilities.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07263551",
	"publication_date": "2007-08-28",
	"application_number": "11299206",
	"application_date": "2005-12-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Drill-through queries from data mining model content",
	"summary": "",
	"abstract": "A drill-through feature is provided which provides a universal drill-through to mining model source data from a trained mining model. In order for a user or application to obtain model content information on a given node of a model, a universal function is provided whereby the user specifies the node for a model and data set, and the cases underlying that node for that model and data set are returned. A sampling of underlying cases may be provided, where only a sampling of the cases represented in the node is requested.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07188090",
	"publication_date": "2007-03-06",
	"application_number": "10611119",
	"application_date": "2003-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic monitor and controller of availability of a load-balancing cluster",
	"summary": "",
	"abstract": "An implementation of a technology, described herein, for remotely and dynamically monitoring the availability of the members of a load-balancing cluster. An implementation of the claimed invention includes a dynamic, exocluster application-layer monitor for dynamically monitoring and dynamically controlling the members of a load-balancing cluster. It may actively control the members that it monitors. The exocluster monitor is protocol agnostic. It dynamically adjusts so that it can monitor all of the members of the cluster as members are added and removed. This abstract itself is not intended to limit the scope of this patent. The scope of the present invention is pointed out in the appending claims.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07296268",
	"publication_date": "2007-11-13",
	"application_number": "09740720",
	"application_date": "2000-12-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic software update",
	"summary": "",
	"abstract": "A system and method for dynamically updating software on one or more installation media for installation on at least one destination machine. The invention obtains update content from one or more update media and merges the update content with the software on the installation media prior to installing the software on the destination machine. The software to be installed includes application programs and operating system software.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07251812",
	"publication_date": "2007-07-31",
	"application_number": "10044570",
	"application_date": "2002-01-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Easy-to-use data report specification",
	"summary": "",
	"abstract": "A method and system for the graphical specification and modification of reports is disclosed which enables data reports to be easily created via a report design dialogue. The report design dialogue includes a group-level outline panel containing controls for grouping, as well as other report controls such as those for sorting and aggregating. A method and system for creating a group-level outline panel using an existing database report is also disclosed. Finally, a computer-readable medium storing a computer-interpretable data structure that stores one or more report specifications is disclosed.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07289976",
	"publication_date": "2007-10-30",
	"application_number": "11020940",
	"application_date": "2004-12-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic shopping basket",
	"summary": "",
	"abstract": "A system which facilitates electronic shopping, which includes a graphical image component residing on a user interface; and a shopping basket component associated with the graphical image component. The shopping basket component provides drag and drop capabilities such that a user can drag and drop representations of identified items from a plurality of sources using a computer pointer into the graphical image and descriptions of the items will be retained by the shopping basket component. The system allows for a user to concurrently effect multiple transactions with disparate items respectively associated a plurality of sources.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07188081",
	"publication_date": "2007-03-06",
	"application_number": "09699961",
	"application_date": "2000-10-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enhancing computer system security via multiple user desktops",
	"summary": "",
	"abstract": "Users can create multiple different desktops for themselves and easily switch between these desktops. These multiple desktops are u201cwalled offu201d from one another, limiting the ability of processes and other subjects in one desktop from accessing objects, such as data files or other processes, in another desktop. According to one aspect, each time a process is launched it is associated with the desktop that it is launched in. Similarly, objects, such as data files or resources, are associated with the same desktop as the process that created them. The operating system allows a process to access only those objects that are either associated with the same desktop as the process or associated with no desktop.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07246374",
	"publication_date": "2007-07-17",
	"application_number": "09524124",
	"application_date": "2000-03-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enrolling / sub-enrolling a digital rights management (DRM) server into a DRM architecture",
	"summary": "",
	"abstract": "A Digital Rights Management (DRM) system has a plurality of DRM servers performing DRM functionality and an entering DRM-E server is enrolled into the system by an enrolling DRM-R server such that the entering DRM-E server is to be trusted within the system. The DRM-E server sends an enrollment request to the DRM-R server including a proffering identification and a public key (PU-E). The DRM-R server validates the proffering identification, and, if the request is to be honored, generates a digital enrollment certificate with (PU-E) for the DRM-E server to enroll such DRM-E server into the DRM system. The now-enrolled DRM-E server with the generated enrollment certificate is able to employ same to issue DRM documents within the DRM system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07308573",
	"publication_date": "2007-12-11",
	"application_number": "10373458",
	"application_date": "2003-02-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Ensuring the health and availability of web applications",
	"summary": "",
	"abstract": "A web server arrangement is provided having a kernel-mode listener service capable of receiving web requests and providing the web requests to at least one user mode web application. The listener service and the web application are operatively configured by a user-mode administrative process. The administrative process is configured to determine when a web application needs to be recycled and to selectively recycle web applications.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07225362",
	"publication_date": "2007-05-29",
	"application_number": "10377148",
	"application_date": "2003-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Event manager for a control management system",
	"summary": "",
	"abstract": "A control management system provides a plurality of software controllable devices coupled to a network wherein each device has at least one property to be controlled and a plurality of clients for changing the properties of at least one device. An event manager acts as an interface between the clients and the devices. The event manager maintains a persistence store of all the properties being controlled in the home control management system and the current values of the properties. When the client requests status information of the properties it controls, the event manager provides this information to the client thereby avoiding the need for the client to separately query each individual device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07185078",
	"publication_date": "2007-02-27",
	"application_number": "09894446",
	"application_date": "2001-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Extensibility application programming interface and framework for meta-model objects",
	"summary": "",
	"abstract": "The present invention relates to a system and methodology providing an Application Programming Interface (API) and framework that supports a meta-object model for application design and operating system interactions. The API includes an input component that receives data and/or instructions. The input component processes a meta-data model that interrelates data via a class hierarchy, wherein the class hierarchy includes relationship descriptions between class objects, attributes, rules, and/or behavioral descriptions. Another aspect includes a data management system that includes a component to receive an item having meta-data annotations. An analysis component determines at runtime a structure for the item via deployment of the meta-data annotations. The system can also include a framework component that defines meta-data class derivations, meta-data classes, meta-data integrity rules, and/or meta-data class behavior.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07293254",
	"publication_date": "2007-11-06",
	"application_number": "10666977",
	"application_date": "2003-09-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Extensible object previewer in a shell browser",
	"summary": "",
	"abstract": "A system and method for extending the functionality of an object previewed in a shell browser to improve the user experience. The shell browser provides an extensibility mechanism so that third party developers can extend the functionality of the default previewer for particular file types. A graphical user interface includes a control which enables a user to select a previewer for displayed files from a plurality of available previewers. Alternatively, the shell browser can automatically select a previewer from a plurality of available previewers. A data structure contains information indicative of the availability of multiple previewers in a shell browser.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07234114",
	"publication_date": "2007-06-19",
	"application_number": "10395560",
	"application_date": "2003-03-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Framework for ordered handling of information",
	"summary": "",
	"abstract": "A system and process for ensuring the smooth flow of electronic ink is described. Dynamic rendering is give priority over other event handlers. Priority may be the use of one or more queues to order when events occur and may be performing dynamic rendering prior to other steps.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07239401",
	"publication_date": "2007-07-03",
	"application_number": "10985923",
	"application_date": "2004-11-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Friendly URLs",
	"summary": "",
	"abstract": "A Web crawler, search engine, browser program, or other client application dynamically accesses data by using u201cfriendlyu201d Uniform Resource Locaters (URLs) that do not require query parameters or other non-intuitive coding. A friendly URL includes a static URL that appears to identify a static resource, such as a Hyper Text Markup Language document. A friendly URL can be a link or entered in a browser program's address field. A data type in the friendly URL is mapped to a data source that dynamically accesses data associated with an intuitive data key in the friendly URL. The data key refers to a specific document, and/or is a search term. A query URL is constructed with the data key, and a data source identifier that preferably refers to a database function and is mapped to the data type. The resulting dynamically accessed data are communicated back to the requesting client application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07293012",
	"publication_date": "2007-11-06",
	"application_number": "10741976",
	"application_date": "2003-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generating a hierarchical plain-text execution plan from a database query",
	"summary": "",
	"abstract": "A system, method and computer-readable medium containing computer-executable instructions for tuning queries is provided. A query processor converts a query into an execution plan in a hierarchical format that conforms to a standardized schema. In one embodiment of the invention, the hierarchical format employed is XML.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07167848",
	"publication_date": "2007-01-23",
	"application_number": "10704480",
	"application_date": "2003-11-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generic interface",
	"summary": "",
	"abstract": "A system and process for ensuring the smooth flow of electronic ink is described. Dynamic rendering is give priority over other event handlers. Priority may be the use of one or more queues to order when events occur and may be performing dynamic rendering prior to other steps.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07199885",
	"publication_date": "2007-04-03",
	"application_number": "10986779",
	"application_date": "2004-11-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generic parameterization for a scene graph",
	"summary": "",
	"abstract": "A parameterized scene graph provides mutable (animated) values and parameterized graph containers such that an application program or the like can selectively change certain aspects of the scene graph description while leaving other aspects intact, and also reuse portions of the scene graph with different parameters. To this end, mutable values are provided, which provide the higher level code with hooks into the scene graph enabling the scene description to be changed. The mutable values may be varied over time to provide animation. A parameterized graph container is also described that enables a scene graph portion to be templatized for reuse throughout a scene in a generic way. In this manner, a single parameterized graph container may be efficiently reused in a scene graph, with different values for its parameters.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07265756",
	"publication_date": "2007-09-04",
	"application_number": "11165756",
	"application_date": "2005-06-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generic user control point tool for universal plug and play (UPnP) devices",
	"summary": "",
	"abstract": "A user control point tool allows generic discovery, control, and display of Universal Plug and Play devices from a common user interface. This generic UCP tool provides a common user experience for all UPnP devices, regardless of their individual manufacturers. The generic UCP tool allows discovery of UPnP devices by type, by unique device name, or asynchronously. The user may select one of the discovered devices, view its properties, and select one of the services provided for that device to control. Additional information from a service description document may be viewed, and a user may query the value of the state variables and invoke an action for a service for the selected UPnP device. The results of the action are displayed on the tool's UI, as is the eventing information for the UPnP device. Status information for operation of the generic UCP tool itself is also provided.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07194689",
	"publication_date": "2007-03-20",
	"application_number": "09867303",
	"application_date": "2001-05-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Graphical user interface for a screen telephone",
	"summary": "",
	"abstract": "A graphical user interface for a web telephone and other telephony devices provides a unique combination of display elements that provide information and enable the user to access functionality of the device. The display elements include customizable screen areas called panes, an application program selection area, and call state area for displaying telephone line status information. A software platform of the user interface provides a set of default user interface features and exposes an application programming interface. System implementers may customize the default display elements or create entirely new custom panes that fit within a uniform user interface framework using the application programming interface.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07225409",
	"publication_date": "2007-05-29",
	"application_number": "09383038",
	"application_date": "1999-08-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Graphics image rendering with radiance self-transfer for low-frequency lighting environments",
	"summary": "",
	"abstract": "Real-time image rendering of diffuse and glossy objects in low-frequency lighting environments captures soft shadows, interreflections, and caustics. As a preprocess, a global transport simulator creates functions over the object's surface representing transfer of arbitrary, low-frequency source lighting into exiting radiance, but including global effects like shadowing and interreflection from the object onto itself. At run-time, these transfer functions are applied to the actual source lighting. Dynamic, local lighting is handled by sampling close to the object at every frame; the object can also be rigidly rotated with respect to the lighting and vice versa. Lighting and transfer functions are represented using low-order spherical harmonics. Functions for radiance transfer from a dynamic lighting environment through a preprocessed object to neighboring points in space further allow cast soft shadows and caustics from rigidly moving casters onto arbitrary, dynamic receivers.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07262770",
	"publication_date": "2007-08-28",
	"application_number": "10389553",
	"application_date": "2003-03-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hardware accelerated blend modes",
	"summary": "",
	"abstract": "Blending colors of source and destination primitives by a graphics processing unit is disclosed. The graphics processing unit executes a blending program that blends the primitives. The graphics processing unit receives the blending program from a central processing unit or a graphics application program. For example, the graphics processing unit draws a source primitive in a source texture map and a destination primitive in a destination texture map. The blending program (e.g., a pixel shader) is set to be applied to the primitives, and the graphics processing unit applies the blend mode to each pixel of the primitives, rendering a composite primitive in a destination render target.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07312801",
	"publication_date": "2007-12-25",
	"application_number": "11065854",
	"application_date": "2005-02-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Heap allocation",
	"summary": "",
	"abstract": "One or more electronically-accessible media including exemplary electronically-executable instructions that, when executed, direct an electronic apparatus to perform actions including: ascertaining, from multiple processors, a processor on which a requesting thread is executing; each processor of the multiple processors associated with each respective heap of multiple respective heaps; and selecting, for a memory allocation to the requesting thread, a respective heap that is associated with the processor on which the requesting thread is executing responsive to the action of ascertaining. An exemplary apparatus includes: at least one memory having multiple memory portions; multiple processors coupled to the at least one memory, each respective processor of the multiple processors executing a respective thread of multiple threads; and a memory allocator adapted to allocate memory resources from a memory portion of the multiple memory portions to each respective thread responsive to the respective processor on which each respective thread is executing.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07185167",
	"publication_date": "2007-02-27",
	"application_number": "10456896",
	"application_date": "2003-06-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Highly componentized system architecture with object mutation",
	"summary": "",
	"abstract": "In accordance with another aspect, the invention is embodied in a computer operating system capable of supporting plural objects running in a computer having a working memory, the computer operating system including a kernel resident in the working memory at link time, and a loadable mutation object resident at link time outside of the working memory and dynamically loadable into the working memory at run time upon demand of one of the application programs, the mutation object including an interface with methods for mutating any one of the plural objects. The kernel includes a loader for loading the mutation object into the working memory in response to a demand from one of the plural objects. The computer further includes a storage memory separate from the working memory, the loadable mutation object residing at link time in the storage memory. The loader loads the mutation object from the storage memory to the working memory, and the loadable mutation object is terminable from the working memory upon lack of demand therefor by the plural objects. Preferably, the kernel of the operating system includes a Namespace for registering the mutation object upon the mutation object being loaded into the working memory, whereby the mutation object becomes available to each of the plural objects through the Namespace.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07159222",
	"publication_date": "2007-01-02",
	"application_number": "09282229",
	"application_date": "1999-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hybrid tree for mixed user interface elements and sequential data",
	"summary": "",
	"abstract": "A hybrid tree data structure is suitable for use in scenarios involving intermingled text and user interface elements. Trees of two different types can be combined via one or more proxy nodes. For example, one type can be efficient at processing user interface elements and another can be efficient at processing text. Operations suitable for user interface elements can be efficiently performed on portions of the hybrid tree having user interface elements, and operations suitable for sequential data can be efficiently performed on portions of the hybrid tree having sequential data. The structure is thus suited for representing documents or graphical user interfaces. A hypertext document can be represented via the hybrid tree to enable more efficient searching, navigation, rendering, or editing of the document. Hybrid tree services can be provided by an operating system service.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07188340",
	"publication_date": "2007-03-06",
	"application_number": "10186050",
	"application_date": "2002-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Importing and exporting markup language data in a spreadsheet application document",
	"summary": "",
	"abstract": "Methods and systems are provided for importing markup language formatted data into a spreadsheet document and for exporting markup language formatted data from a spreadsheet document. XML data is associated with an XML schema file defining XML data types and data type definitions for applying the XML data to the document. An XML data map is prepared that relates any XML data applied to the document back to corresponding XML elements or attributes defined in the associated schema file. When the document is imported into a spreadsheet application grid, the data map is parsed to find XPATHs in the imported spreadsheet document of XML data and the user entered data. After an imported document has been edited, the document may be exported such that the XML data applied to the document is maintained for subsequent import and use of the document.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07249316",
	"publication_date": "2007-07-24",
	"application_number": "11328042",
	"application_date": "2006-01-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Ink divider and associated application program interface",
	"summary": "",
	"abstract": "Methods for communicating between an application and an ink divider object (which stores ink strokes to be divided into groups) may include: (a) issuing a divide request to the ink divider object, optionally by the application; (b) in response to the divide request, calling a divide method, which groups the stored ink strokes into one or more groupings of strokes having a first predetermined granularity (e.g., words, lines, paragraphs, sentences, drawings, etc.); and (c) making information regarding the one or more groupings of strokes available to the application. This u201cinformationu201d made available to the application may include, for example, the actual groupings of the strokes, the number of stroke groupings having the first predetermined granularity, machine generated text corresponding to the stroke groupings, or the like. The results of the divide method may be stored in an ink division result object. In some examples, the ink division result object may include the originally divided strokes and allow retrieval of groupings of strokes of various different granularities. This invention also relates to systems for performing the above methods and various data structures used in performing these methods.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07218779",
	"publication_date": "2007-05-15",
	"application_number": "10347331",
	"application_date": "2003-01-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Ink editing architecture",
	"summary": "",
	"abstract": "A system and process for capturing and rendering ink is described. An ink canvas object may contain none, one, or more objects or elements and may specify the z-order of the objects or elements. The ink canvas object may host a variety of objects or elements and, therefore, provide ink functionality to the objects or elements, even though the objects or elements themselves may not have ink functionality.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07262785",
	"publication_date": "2007-08-28",
	"application_number": "10692015",
	"application_date": "2003-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Input device with forward/backward control",
	"summary": "",
	"abstract": "In a computer system having a display and a keyboard, a computer readable medium includes instructions for invoking a message hook procedure based on a mouse message indicative of a mouse event. Instructions also provide for identifying at least one focus application that has a current keyboard focus and of converting the mouse message into a command for the focus application. The command is then sent to the focus application and the mouse message is prevented from being routed to any other applications. In one embodiment, the commands include the command to page forward or backward through pages of Internet documents. In other embodiments, instead of converting the mouse message into a command, the message hook procedure displays a graphical user interface based on the focus application and the mouse message. The graphical user interface includes one or more commands that the user may select. Based on the selection made by the user, the message hook procedure sends a corresponding command to the focus application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07283121",
	"publication_date": "2007-10-16",
	"application_number": "10978937",
	"application_date": "2004-11-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Instant messaging session invite for arranging peer-to-peer communication between applications",
	"summary": "",
	"abstract": "Arrangements and procedures for arranging peer-to-peer communications sessions between applications are described. In one implementation, a first application executing at a first device utilizes online presence information of an instant messaging service to select a second application with which to engage in the peer-to-peer session. The second application is associated with a second device and registered with the instant messaging service as being peer-to-peer session invite capable. The first application arranges the peer-to-peer session via components of the instant messaging service. The arranged peer-to-peer session is functionally independent of the instant messaging service.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07233979",
	"publication_date": "2007-06-19",
	"application_number": "10172716",
	"application_date": "2002-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interfacing with ink",
	"summary": "",
	"abstract": "The present invention relates to interfacing with electronic ink. Ink is stored in a data structure that permits later retrieval by applications. The ink includes stroke information and may include property information. Through various programming interfaces, one may interact with the ink through methods and setting or retrieving properties. Other objects and collections may be used as well in conjunction with the ink objects.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07158675",
	"publication_date": "2007-01-02",
	"application_number": "10184108",
	"application_date": "2002-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interfacing with ink",
	"summary": "",
	"abstract": "The present invention relates to interfacing with electronic ink. Ink is stored in a data structure that permits later retrieval by applications. The ink includes stroke information and may include property information. Through various programming interfaces, one may interact with the ink through methods and setting or retrieving properties. Other objects and collections may be used as well in conjunction with the ink objects.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07167585",
	"publication_date": "2007-01-23",
	"application_number": "11304540",
	"application_date": "2005-12-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interlocked plug and play with power management for operating systems",
	"summary": "",
	"abstract": "The present invention provides a unified layer for Plug and Play (PnP) components and power management components while relieving device drivers from system-level complexities associated with implementing PnP and/or power management functionality. The layer operates at a level between low-level device drivers and more complex operating system tasks. The subject invention simplifies designing device drivers having proper power management support by creating an infrastructure that allows a device driver to operate within a driver framework or model and without having to process Plug-and-Play or Power Management I/O Request Packets (IRPs) directly.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07308586",
	"publication_date": "2007-12-11",
	"application_number": "10833542",
	"application_date": "2004-04-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interlocked plug and play with power management for operating systems",
	"summary": "",
	"abstract": "The present invention provides a unified layer for Plug and Play (PnP) components and power management components while relieving device drivers from system-level complexities associated with implementing PnP and/or power management functionality. The layer operates at a level between low-level device drivers and more complex operating system tasks. The subject invention simplifies designing device drivers having proper power management support by creating an infrastructure that allows a device driver to operate within a driver framework or model and without having to process Plug-and-Play or Power Management I/O Request Packets (IRPs) directly.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07313708",
	"publication_date": "2007-12-25",
	"application_number": "10833534",
	"application_date": "2004-04-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interoperability of objects between various platforms",
	"summary": "",
	"abstract": "Interoperability of a first framework or platform (e.g., COM) and a second different framework or platform (e.g., .NET) is provided via an attribute mechanism. The attribute mechanism is provided in a non-COM based platform (e.g., .NET) to expose classes to COM. In this manner, a compiler (e.g., the .NET compiler) creates class and events interfaces and adds attributes to the class and interfaces as appropriate for correct interoperability and marshaling. By adding this attribute mechanism to a class in .NET, the .NET compiler is able to use the class declarations (such as public methods, properties, and events) to automatically generate a class interface and an events interface, including appropriate dispatch IDs and GUIDs. Validation is performed on the class being mapped to provide an indication, such as an error message or warning, to the user that the underlying framework marshaling layer cannot marshal certain data types as desired or expected.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07210132",
	"publication_date": "2007-04-24",
	"application_number": "10158325",
	"application_date": "2002-05-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interpolated color transform for changing color of an application user interface",
	"summary": "",
	"abstract": "A system and method for adjusting the color of an application user interface (UI). A UI allows a user to define hue and saturation values used to adjust first RGB values of pixels determining the color of the UI. A media player application (MPA) calculates second RGB values as a function of the first RGB values and the defined hue and saturation values. The MPA compares the defined saturation value to a threshold saturation value. If the defined saturation value is less than the threshold saturation value, the MPA calculates third RGB values as a function of the second RGB values, and assigns the third RGB values to the pixels determining the color of the UI. If the defined saturation value is equal to or greater than the threshold saturation value, the MPA assigns the second RGB values to the pixels determining the color of the UI.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07242409",
	"publication_date": "2007-07-10",
	"application_number": "11101748",
	"application_date": "2005-04-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Isolating assembly versions for binding to application programs",
	"summary": "",
	"abstract": "An infrastructure that allows applications to run with specified versions of dependent assemblies, wherein each assembly may exist and run side-by-side on the system with other versions of the same assembly being used by other applications. An application provides a manifest to specify any desired assembly versions on which it is dependent. Similarly, each assembly may have an assembly manifest that specifies the versions of assemblies on which it is dependent. During an initialization phase, an activation context is created for the application, based on the manifests, to map version independent names to a particular assembly version maintained on the system. While the application is in a running phase, for any globally named object that the application wants created, the activation context is accessed to locate the application's or assembly's manifest-specified version. The manifests and activation context constructed therefrom thus isolate an application from assembly version changes.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07287259",
	"publication_date": "2007-10-23",
	"application_number": "09842270",
	"application_date": "2001-04-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Layered message processing model",
	"summary": "",
	"abstract": "Methods, systems, and computer program products for processing network messages in a manner that simplifies messaging application logic. Processing layers of a messaging system architecture that may include a transport layer, a channel layer, a send/receive layer, a service/client layer, and potentially others, are aware of an End Point Reference (u201cEPRu201d) within a network message The transport layer retrieves message data from a message transport. The channel layer de-serializing the network message consistent with an underlying type system. The send/receive layer filters and dispatches the network message to messaging logic (other layers or application logic) based on the EPRs. The service/client message layer dispatches the network message to messaging application logic based on the EPRs. These EPR aware message processing layers implement dispatch logic so that messaging applications written for the architecture need not provide the dispatch logic, simplifying the messaging application logic and development of the messaging application itself.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07165118",
	"publication_date": "2007-01-16",
	"application_number": "10918907",
	"application_date": "2004-08-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Live image server and client",
	"summary": "",
	"abstract": "A system and process for making live digital video feeds simultaneously available to multiple applications running on a computing device. This involves using a live image server that maintains a camera directory file containing the names of available feeds, and the name and location of an image file for each feed. The image file includes image data corresponding to a current frame of the feed and an index indicative of a frame sequence number. Each time a new frame becomes available, image data representing the frame is put into its associated image file, in place of previously stored image data. A client application chooses a feed from the camera directory file, then accesses the associated image file and makes a copy of the image data. When the client wants a new frame, it determines if the image file index has changed. If so, the client copies the new image data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07188122",
	"publication_date": "2007-03-06",
	"application_number": "10095997",
	"application_date": "2002-03-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Manifest-based trusted agent management in a trusted operating system environment",
	"summary": "",
	"abstract": "Manifest-based trusted agent management in a trusted operating system environment includes receiving a request to execute a process is received and setting up a virtual memory space for the process. Additionally, a manifest corresponding to the process is accessed, and which of a plurality of binaries can be executed in the virtual memory space is limited based on indicators, of the binaries, that are included in the manifest.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07257707",
	"publication_date": "2007-08-14",
	"application_number": "11206579",
	"application_date": "2005-08-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Manifest-based trusted agent management in a trusted operating system environment",
	"summary": "",
	"abstract": "Manifest-based trusted agent management in a trusted operating system environment includes receiving a request to execute a process is received and setting up a virtual memory space for the process. Additionally, a manifest corresponding to the process is accessed, and which of a plurality of binaries can be executed in the virtual memory space is limited based on indicators, of the binaries, that are included in the manifest.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07305553",
	"publication_date": "2007-12-04",
	"application_number": "11206578",
	"application_date": "2005-08-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mapper compiler",
	"summary": "",
	"abstract": "Mapping between a source object and a destination or target object uses techniques and functoids that provide an auto-linking feature in which mappings are automatically provided based solely on source and target field names, or, ignoring field names, field locations within hierarchy. Functoids provide support for callout to programming artifacts, such as custom programming logic embedded in .NET assemblies or custom XSLT, and table-looping to generate and map data into a target document even though that data did not exist in the map input.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07237207",
	"publication_date": "2007-06-26",
	"application_number": "10736406",
	"application_date": "2003-12-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Media streaming of web content data",
	"summary": "",
	"abstract": "Methods for streaming web content data via a computer-readable medium. The web content data comprises one or more media samples. The media samples are encoded in a streaming media format as a web component stream. The web component stream is combined with other component streams comprising additional data other than web content data into a presentation stream. The presentation stream is transmitted via a media server to a client. Rendering commands, which are included in one or more rendering samples encoded in the web component stream along with the media samples, coordinate synchronization between the media samples and the additional data when the client renders the presentation stream.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07290057",
	"publication_date": "2007-10-30",
	"application_number": "10223930",
	"application_date": "2002-08-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Media timeline sorting",
	"summary": "",
	"abstract": "Media timeline sorting is described. In an implementation, a method includes receiving a media timeline at an application programming interface, in which, the media timeline includes a plurality of timeline objects. One or more of the timeline objects reference a respective one of a plurality of media. A plurality of segments is generated from the media timeline for sequential rendering such that each segment references a particular set of the timeline objects that are rendering during a duration of the segment.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07313755",
	"publication_date": "2007-12-25",
	"application_number": "11110295",
	"application_date": "2005-04-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Memory mapping and parsing application data",
	"summary": "",
	"abstract": "In an implementation of application data processing, an application data file is received and memory mapped. A data parser then parses and validates the memory mapped application data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07210137",
	"publication_date": "2007-04-24",
	"application_number": "10436518",
	"application_date": "2003-05-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Message based inter-process for high volume data",
	"summary": "",
	"abstract": "An interprocess communications platform enables individual processes to request and exchange data in a shared memory space, mediated by a communications engine. Processes, such as applications or other software running under an operating system or in a network, register to blocks of a shared memory space via an administrative memory space which tracks pointers, handles and other indicators of memory areas populated by individual processes. When one process requests access to a variable, pointer or other data generated by another process, the request is mediated by the communications engine. The communications engine may locate the target data belonging to the other process in the shared memory space, via a lookup of relative addressing in a separate administrative memory space. The communications engine, memory management objects and other resources may then lock the portion of the shared memory space allocated to the target process to permit the requesting process to access the data. Data may therefore be exchange between given processes while maintaining data integrity, and also may be cached in the shared memory space or elsewhere by the communications engine to further increase efficiency. Available memory in the shared memory space may be managed using the so-called buddy system or other heap or other management techniques. No named pipes or similar mechanisms under an operating system need be invoked.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07299320",
	"publication_date": "2007-11-20",
	"application_number": "11467425",
	"application_date": "2006-08-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for compressing asymmetric clustering language models",
	"summary": "",
	"abstract": "A method and data structure are provided for efficiently storing asymmetric clustering models. The models are stored by storing a first level record for a word identifier and two second level records, one for a word identifier and one for a cluster identifier. An index to the second level word record and an index to the second level cluster record are stored in the first level record. Many of the records in the data structure include both cluster sub-model parameters and word sub-model parameters.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07231349",
	"publication_date": "2007-06-12",
	"application_number": "10448498",
	"application_date": "2003-05-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for correlating events",
	"summary": "",
	"abstract": "A correlation system receives multiple events and multiple data elements. The multiple events and data elements are applied to a correlation function which is implemented as a state machine. A specific event is generated if the correlation function is satisfied by the multiple events and the multiple data elements. Additional events and data elements are received if the correlation function is not satisfied by the original events and data elements. The system allows for the identification of a schema for creating state machines that correlate events and/or data. An instance of a particular state machine is created and transitions for the particular state machine are defined by subscribing to one or more events. An update consumer is applied to the particular state machine to update the state of the particular state machine.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07275250",
	"publication_date": "2007-09-25",
	"application_number": "09847534",
	"application_date": "2001-05-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for deriving logical relations from linguistic relations with multiple relevance ranking strategies for information retrieval",
	"summary": "",
	"abstract": "A method and apparatus are provided for improving the precision of information retrieval systems that use logical form searching techniques. Under one embodiment of the invention, several logical form triples are produced from the user's query and are combined together by restrictive logical operators to generate a compound logical form query. A search is then performed to find documents that meet the requirements set by the compound logical form query. In other embodiments, results generated by a logical form search are intersected with results from a word search to form a more precise set of results.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07249127",
	"publication_date": "2007-07-24",
	"application_number": "10834303",
	"application_date": "2004-04-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for displaying speech recognition progress",
	"summary": "",
	"abstract": "A graphical user interface provides a graphical volume meter indicating the volume of the user's speech and a speech recognition meter showing the progress of a speech recognizer. The graphical volume meter and recognition meter are both located near each other on the display such that the user can focus on both meters at the same time. One aspect of the present invention is that a speech recognition meter is placed on the display near the insertion point where the user intends their speech to take effect. Thus, the user does not have to divert their view from the insertion point in order to check the progress of the speech recognizer.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07292986",
	"publication_date": "2007-11-06",
	"application_number": "09421710",
	"application_date": "1999-10-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for distribution-based language model adaptation",
	"summary": "",
	"abstract": "A method and apparatus are provided for adapting a language model to a task-specific domain. Under the method and apparatus, the relative frequency of n-grams in a small training set (i.e. task-specific training data set) and the relative frequency of n-grams in a large training set (i.e. out-of-domain training data set) are used to weight a distribution count of n-grams in the large training set. The weighted distributions are then used to form a modified language model by identifying probabilities for n-grams from the weighted distributions.",
	"url": null,
	"owner": "MIcrosoft Corporation",
	"publication_number": "07254529",
	"publication_date": "2007-08-07",
	"application_number": "11225543",
	"application_date": "2005-09-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for enabling application program compatibility with display devices having improved pixel density",
	"summary": "",
	"abstract": "A method and apparatus are provided for enabling application program compatibility with display devices having an increased pixel density. According to one method, a call including one or more parameters is directed toward an application programming interface for performing a screen input or output function is received from an application program. In response to receiving the call, a determination is made as to whether the application program is configured for use with a display device having a lower pixel density or a display device having a higher pixel density. In response to determining that the application program is configured for use with a display device having a lower pixel density, the parameters are scaled for the higher pixel density display device and the application programming interface is called using the scaled parameters.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07180531",
	"publication_date": "2007-02-20",
	"application_number": "10789603",
	"application_date": "2004-02-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for event distribution and event handling in an enterprise",
	"summary": "",
	"abstract": "An event distribution and event handling system receives a first event at a first event filter. The first event filter has a set of associated filter criteria, which is applied to the first event. If the first event satisfies the filter criteria, the first event is transformed into a second event and the second event is communicated to a second event filter having a set of associated filter criteria. The second event filter is associated with an event consumer, which performs an action if the second event satisfies the filter criteria associated with the second event filter. The second event includes an event header having a standard format and a payload having multiple payload objects.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07174557",
	"publication_date": "2007-02-06",
	"application_number": "09875245",
	"application_date": "2001-06-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for expanding dictionaries during parsing",
	"summary": "",
	"abstract": "A method is provided for parsing text in a corpus. The method includes hypothesizing a possible new entry for a dictionary based on a first segment of text. A successful parse is then formed for the first segment of text using the possible new entry. Based on the successful parse, the dictionary is changed to include the new entry. The new entry in the dictionary is then used to parse a second segment of text.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07158930",
	"publication_date": "2007-01-02",
	"application_number": "10219752",
	"application_date": "2002-08-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for generating and displaying N-Best alternatives in a speech recognition system",
	"summary": "",
	"abstract": "The present invention is directed to a generating alternatives to words indicative of recognized speech. A reference path of recognized words is generated, based upon input speech data. An operator selection input is received and is indicative of a selected portion of the recognized speech, for which alternatives are to be generated. Boundary conditions for alternatives to be generated are calculated based upon bounds of a reference subpath corresponding to the selected portion of the recognized speech. Alternate subpaths satisfying the boundary conditions are constructed from a hypothesis store which corresponds to the input speech data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07162423",
	"publication_date": "2007-01-09",
	"application_number": "10996317",
	"application_date": "2004-11-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for handling policies in an enterprise",
	"summary": "",
	"abstract": "An event-handling system identifies multiple policies to be combined together in a merged policy set. The system determines whether any conflicts exist between the multiple policies. Any non-conflicting policies are included in the merged policy set. The system resolves conflicting policies by selecting a preferred policy and including the preferred policy in the merged policy set. The preferred policy is selected by arranging conflicting policy templates in order from global policies to local policies and determining the intersection of the conflicting policy templates. The preferred policy template is selected based on the policy template closest to the local policies and within the intersection of the conflicting policy templates.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07171459",
	"publication_date": "2007-01-30",
	"application_number": "09875814",
	"application_date": "2001-06-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for identifying noise environments from noisy signals",
	"summary": "",
	"abstract": "A method and apparatus are provided for identifying a noise environment for a frame of an input signal based on at least one feature for that frame. To identify the noise environment, a probability for a noise environment is determined by applying the noisy input feature vector to a distribution of noisy training feature vectors. In one embodiment, each noisy training feature vector in the distribution is formed by modifying a set of clean training feature vectors. In one embodiment, the probabilities of the noise environments for past frames are included in the identification of an environment for a current frame. In one embodiment, a correction vector is then selected based on the identified noise environment.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07266494",
	"publication_date": "2007-09-04",
	"application_number": "10985896",
	"application_date": "2004-11-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for identifying prosodic word boundaries",
	"summary": "",
	"abstract": "A method and computer-readable medium are provided that identify prosodic word boundaries for a text. If the text is unsegmented, it is first segmented into lexical words. The lexical words are then converted into prosodic words using an annotated lexicon to divide large lexical words into smaller words and a model to combine the lexical words and/or the smaller words into larger prosodic words. The boundaries of the resulting prosodic words are used to set the prosody for the synthesized speech.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07263488",
	"publication_date": "2007-08-28",
	"application_number": "09850526",
	"application_date": "2001-05-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for improved grammar checking using a stochastic parser",
	"summary": "",
	"abstract": "A method and grammar checking system are provided that generate a stochastic score, or a statistical goodness measure, for each of an input string of text and one or more alternative strings of text. An alternative generator generates the alternative strings of text, and a ranking parser produces parse trees and corresponding statistical goodness measures for each of the strings. The string of text having the highest goodness measure is selected for recommendation to a user.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07184950",
	"publication_date": "2007-02-27",
	"application_number": "11177129",
	"application_date": "2005-07-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for managing secure collaborative transactions",
	"summary": "",
	"abstract": "Different levels of security are provided in a security system so that users can decide the security level of their own communications. Users can choose a low level of security and maintain the security overhead as low as possible. Alternatively, they can choose higher levels of security with attendant increases in security overhead. The different levels of security are created by the use of one or more of two keys: an encryption key is used to encrypt plaintext data in a delta and a message authentication key is used to authenticate and insure integrity of the data. Two keys are used to avoid re-encrypting the encrypted data for each member of the telespace. In one embodiment, the security level is determined when a telespace is created and remains fixed through out the life of the telespace. For a telespace, the security level may range from no security at all to security between the members of the telespace and outsiders to security between pairs of members of the telespace. In another embodiment, subgroups called u201ctribesu201d can be formed within a telespace and each tribe adopts the security level of the telespace in which it resides.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07171001",
	"publication_date": "2007-01-30",
	"application_number": "11257239",
	"application_date": "2005-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for quantizing model parameters",
	"summary": "",
	"abstract": "A method of quantizing a model parameter includes applying the model parameter to a non-linear scaling function to produce a scaled model parameter and quantizing the scaled model parameter to form a quantized model parameter. In further embodiments, likelihoods for multiple frames of input feature vectors are determined for each retrieval of quantized model parameters from memory.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07272557",
	"publication_date": "2007-09-18",
	"application_number": "10427215",
	"application_date": "2003-05-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for storing content",
	"summary": "",
	"abstract": "A system receives a broadcast program and temporarily stores the program data. A request is received to permanently record the broadcast program. This request is received after a portion of the broadcast program has been received and temporarily stored. The broadcast program is then permanently recorded, including the temporarily stored program data. A metafile identifies portions of the broadcast program and is accessible by a reader to continuously retrieve the stored portions of the broadcast program.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07260312",
	"publication_date": "2007-08-21",
	"application_number": "09896902",
	"application_date": "2001-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for storing content",
	"summary": "",
	"abstract": "A system receives a broadcast program and temporarily stores the program data. A request is received to permanently record the broadcast program. This request is received after a portion of the broadcast program has been received and temporarily stored. The broadcast program is then permanently recorded, including the temporarily stored program data. A metafile identifies portions of the broadcast program and is accessible by a reader to continuously retrieve the stored portions of the broadcast program.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07272300",
	"publication_date": "2007-09-18",
	"application_number": "11048401",
	"application_date": "2005-02-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for synchronizing multiple versions of digital data",
	"summary": "",
	"abstract": "A method and system for synchronizing multiple versions of multimedia objects is provided. Each multimedia object may be identified by a unique identifier. In addition, a history graph may be generated and maintained for each object, where the history graph includes nodes that store unique identifiers and whose vectors describe the relationship between the multimedia objects. Metadata may be used to describe the transformations of objects.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07216289",
	"publication_date": "2007-05-08",
	"application_number": "09809058",
	"application_date": "2001-03-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus using multiple sensors in a device with a display",
	"summary": "",
	"abstract": "In a device having a display, at least one sensor signal is generated from a sensor in the device. One or more context values are then generated from the sensor signal. The context values indicate how the device is situated relative to one or more objects. At least one of the context values is then used to control the operation of one or more aspects of the device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07289102",
	"publication_date": "2007-10-30",
	"application_number": "09875477",
	"application_date": "2001-06-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and architecture for consolidated database search for input recognition systems",
	"summary": "",
	"abstract": "A method and system are provided for recognizing user input. User input is applied to at least one model to identify at least one decoded value found in a grammar. The decoded value and at least one database value stored in the grammar are then returned. The database value corresponds to a database value found in a database that is separate from the grammar. Under one embodiment, the database is associated with an application that accesses database values in the database. Under a further embodiment, two database values are returned with the decoded value where one of the database values corresponds to a database value in a first database and the other database value corresponds to a database value in a second database.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07197494",
	"publication_date": "2007-03-27",
	"application_number": "10411059",
	"application_date": "2003-04-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and computer readable medium storing executable components for locating items of interest among multiple merchants in connection with electronic shopping",
	"summary": "",
	"abstract": "A shopping basket system includes a shopping basket component and a wish or gift list component. The functionality of the shopping basket system may be invoked via a graphical image, such as an icon, on a web browser or a desktop of the client computer. The user may browse registered sites on the Internet and drag and drop products into the user's shopping basket. All products may then be purchased concurrently regardless of the site that the product was found. The drag and drop capability is provided by the programmability of the shopping basket. A common schema can be employed for describing items (e.g., products and services) to be purchased from registered sites. In one aspect of the invention the common schema is provided in the eXtensible Markup Language (XML). The shopping basket system is provided with a search engine for searching for products on a user's wish or gift list over the Internet. The search results are provided to the user, which can be added to the user's shopping basket list. In one aspect of the invention, the shopping basket system is programmable, such that any application program may access a user's shopping basket system and add items to the user's shopping basket based on items found in a user's wish list.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07162443",
	"publication_date": "2007-01-09",
	"application_number": "10893841",
	"application_date": "2004-07-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and framework for integrating a plurality of network policies",
	"summary": "",
	"abstract": "A method and system is disclosed for managing and implementing a plurality of network policies in a network device. Each of the plurality of policies are defined by one or more filters. The filters are installed in a policy engine. A layer identifies the network policy to be applied to a packet by sending a request to the policy engine. The policy engine then returns the policy to the requesting layer. The method and system may be used to implement a programmable, host-based, distributed, authenticating firewall that enables security and other policies to be applied at several protocol layers.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07308711",
	"publication_date": "2007-12-11",
	"application_number": "10456093",
	"application_date": "2003-06-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for accessing drawing resources",
	"summary": "",
	"abstract": "This disclosure relates to drawing within a computer environment using a drawing resource. The computer environment includes a managed code portion and a native code portion. The computer environment compares a draw parameter call value being passed from the managed code portion to the native code portion with a stored drawing resource value stored in the native code portion. If the draw parameter call value is the same as the stored drawing resource value, then the computer environment is configured to draw onto a native drawing surface using the stored drawing resource. If the draw parameter call value is not the same as the drawing resource value, then a new drawing resource is created in the managed code portion. In another aspect, a portion of the drawing resource feature portion that contains data that describes at least one or more parameter of the drawing resource is transmitted between the managed code portion and the native code portion.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07240346",
	"publication_date": "2007-07-03",
	"application_number": "10293448",
	"application_date": "2002-11-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for configuring a computer for real-time communication",
	"summary": "",
	"abstract": "A method and system for configuring a client computer for real-time communication is provided, in which configuration settings are sent to the computer in the form of a configuration document, such as mark-up language document, that is readable by the client computer. The client computer may request the configuration document on an as-needed basis, or may request to be notified whenever new configuration settings are needed.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07266594",
	"publication_date": "2007-09-04",
	"application_number": "10045745",
	"application_date": "2001-11-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for data entry of handwritten symbols",
	"summary": "",
	"abstract": "A method and system for data entry of handwritten text into a computer program that is not designed to accept handwritten text is provided. In preferred embodiments, the computer program is designed to operate in a windowing environment. A data entry program receives handwritten data, recognizes the data, and sends the recognized data to the computer program. The computer program processes the recognized data as if it had been entered from the keyboard. According to the present invention, the data entry program overlaps the window of the computer program with an invisible window. To the user, it looks as if the computer program is accepting handwritten data directly.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07305130",
	"publication_date": "2007-12-04",
	"application_number": "11511706",
	"application_date": "2006-08-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for defining and controlling algorithmic elements in a graphics display system",
	"summary": "",
	"abstract": "An API is provided that enables programmability of a 3D chip, wherein programming or algorithmic elements written by the developer can be downloaded to the chip, thereby programming the chip to perform those algorithms. A developer writes a routine that is downloadable to a 3D graphics chip. There are also a set of algorithmic elements that are provided in connection with the API that have already been programmed for the developer, that are downloadable to the programmable chip for improved performance. Thus, a developer may download preexisting API objects to a 3D graphics chip. A developer adheres to a specific format for packing up an algorithmic element, or set of instructions, for implementation by a 3D graphics chip. The developer packs the instruction set into an array of numbers, by referring to a list of u2018tokensu2019 understood by the 3D graphics chip. This array of numbers in turn is mapped correctly to the 3D graphics chip for implementation of the algorithmic element by the 3D graphics chip.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07159041",
	"publication_date": "2007-01-02",
	"application_number": "09796577",
	"application_date": "2001-03-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for detecting user intentions in retrieval of hint sentences",
	"summary": "",
	"abstract": "A method of constructing a confusion set database for use in detecting user query intentions includes obtaining a bilingual database having aligned word pairs in first and second languages. Second language word pairs in the bilingual database are aligned with corresponding correct translation first language word pairs. First language human translation word pairs corresponding to each of the second language word pairs in the bilingual database are obtained. Each first language human translation word pair for a particular second language word pair in the bilingual database is aligned with the correct translation first language word pair to define first language set pairs in the confusion set database. Methods, systems and computer readable medium for constructing the confusion set database and for retrieving sentences using the confusion set database are also disclosed.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07293015",
	"publication_date": "2007-11-06",
	"application_number": "10247595",
	"application_date": "2002-09-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for directory balancing",
	"summary": "",
	"abstract": "A system and method for virtually eliminating a potential security risk inherent with the caching of network content. Random subdirectory names are generated for cache directories, while continuing to generate user-friendly file names. Security is achieved since malicious sites cannot guess the cache location, which if guessed along with the filename, could cause a user connected to the site to inadvertently execute malicious content downloaded by the site to the cache. In addition to generating random subdirectory names, the system and method provide enhanced performance by balancing the number of files among the cache directories, and by limiting the number of files in any cache directory by creating additional cache directories as needed.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07185011",
	"publication_date": "2007-02-27",
	"application_number": "09703381",
	"application_date": "2000-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for integrating security mechanisms into session initiation protocol request messages for client-proxy authentication",
	"summary": "",
	"abstract": "A method and system is provided to integrate the Kerberos security mechanism into the message flow of the signaling operation under the Session Initiation Protocol to allow a SIP client and a SIP proxy to authenticate each other. When the SIP proxy receives an request message, such an INVITE request, from the SIP client, it responds with a challenge message indicating that authentication based on Kerberos is required. In response, the SIP client sends a second request message with a proxy authorization header containing authentication data, including a Kerberos server ticket for the Proxy, to allow the proxy to authenticate the client's user.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07243370",
	"publication_date": "2007-07-10",
	"application_number": "10151747",
	"application_date": "2002-05-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for making resources available",
	"summary": "",
	"abstract": "A method and system for making resources available is provided, in which a hierarchy, such as a tree having expandable and collapsible branches, is presented on a user interface. The hierarchy represents a logical arrangement of resources that available to a user. The hierarchy may be organized in a variety of ways, such as by resource category, functional area, project, sub-project, or task grouping. The resources made available may, for example, allow employees of an organization to perform tasks. When a user selects a node on the hierarchy, a group of links that are usable to open files or execute programs is presented. These links may be used to access the available resources and, for example, accomplish tasks of the organization.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07240288",
	"publication_date": "2007-07-03",
	"application_number": "09739856",
	"application_date": "2000-12-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for migrating computer state",
	"summary": "",
	"abstract": "A system and method for migrating state data from a source computing platform to a destination platform, such as for migrating state data from one computer to another computer. Pluggable modules collect state on a source platform and transport it to temporary storage as state objects that are independent of any particular destination platform. For example, a state object may contain the information that represents a file on a source machine, while another state object may contain a piece of registry data on that machine. At the source platform, modules provide state data gathering and analysis that collect the data into the state objects. A transport module transports the data to storage accessible to the destination. At the destination, the state objects are applied by pluggable modules to the destination platform. The object data can be adjusted, translated and/or merged with destination state data as appropriate for the destination platform.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07210131",
	"publication_date": "2007-04-24",
	"application_number": "09968623",
	"application_date": "2001-10-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for providing dynamic capability discovery and use",
	"summary": "",
	"abstract": "A method of providing dynamic service discovery to a client application includes receiving a context specific request, from the client application or component, to discover services available from applications or components. Based on the request, at least one list of services corresponding to the context specific request is retrieved and provided to the client application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07293021",
	"publication_date": "2007-11-06",
	"application_number": "10898692",
	"application_date": "2004-07-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for reducing coding complexity by providing intelligent manipulable defaults",
	"summary": "",
	"abstract": "A method and system is provided for allowing designers, who are primarily concerned with the look and feel of the program, to modify the dialogs in an application being developed without having to rely on the developers to generate executable code in each iteration. Intelligent defaults for parameters that are either not specified in a resource definition or governed by a common style specification are provided to facilitate switching from one dialog element to another without requiring that all of the parameters be specified again.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07243335",
	"publication_date": "2007-07-10",
	"application_number": "09506125",
	"application_date": "2000-02-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for reducing notification area clutter",
	"summary": "",
	"abstract": "A method and system are provided for use in a computer system for organizing and displaying notification items associated with the system, applications or other components, within a notification area. The system monitors items that are placed in the notification, comparing the period of placement with a predetermined time threshold value, If the item has remained inactive for longer than the predetermined threshold period, the item is hidden from the notification area. Additionally, the system monitors the hidden items for changes in icon appearance and will unhide the item upon a change in appearance or specific selection by a user. New items and unhidden items are arranged in the order of the most recent addition to the notification area. The system also allows a user to customize the behavior associated with individual notification items.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07249326",
	"publication_date": "2007-07-24",
	"application_number": "09825717",
	"application_date": "2001-04-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for retrieving confirming sentences",
	"summary": "",
	"abstract": "A method, computer readable medium and system are provided which retrieve confirming sentences from a sentence database in response to a query. A search engine retrieves confirming sentences from the sentence database in response to the query. IN retrieving the confirming sentences, the search engine defines indexing units based upon the query, with the indexing units including both lemma from the query and extended indexing units associated with the query. The search engine then retrieves a plurality of sentences from the sentence database using the defined indexing units as search parameters. A similarity between each of the plurality of retrieved sentences and the query is determined by the search engine, wherein each similarity is determined as a function of a linguistic weight of a term in the query. The search engine then ranks the plurality of retrieved sentences based upon the determined similarities.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07194455",
	"publication_date": "2007-03-20",
	"application_number": "10247596",
	"application_date": "2002-09-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for retrieving hint sentences using expanded queries",
	"summary": "",
	"abstract": "A method, computer readable medium and system are provided which retrieve hint sentences from a sentence database in response to a query. An input component receives the query having terms. A search engine expands the query by including synonyms of the terms to obtain expanded terms. The search engine then combines the expanded terms to form dependency triples from the expanded terms. From the formed dependency triples, dependency triples which are not found in a dependency triples database are discarded to obtain remaining dependency triples from the expanded terms. The search engine then searches the sentence database using the remaining dependency triples as search parameters.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07171351",
	"publication_date": "2007-01-30",
	"application_number": "10247684",
	"application_date": "2002-09-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for transacted file operations over a network",
	"summary": "",
	"abstract": "A system to perform transacted remote file operations over a network includes a client and a server. The client and server each include a transaction manager (TM) and a file system (FS). The client also includes a redirector (RDR), while the server includes a server application (SRV). The RDR receives a request for a remote transacted file operation. In response, the RDR retrieves the transaction from the request. The RDR may use the TM to marshall the transaction for transmission to the server. The RDR sends the transaction to the server over the network. The SRV component receives the transaction, which the TM and FS of the server then use to perform the file operation. The server then returns the file operation result to the client via the network.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07231397",
	"publication_date": "2007-06-12",
	"application_number": "10693658",
	"application_date": "2003-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system of a traffic control application programming interface for abstracting the use of kernel-level traffic control components",
	"summary": "",
	"abstract": "A traffic control application programming interface for abstracting the use of traffic control components to client applications to provide quality of service. The traffic control interface accepts input from a client application and based on that input, communicates with the operating system to control kernel level traffic control components. The client can register with the traffic control interface, and it can open and close interfaces, add, modify, and delete flows on those interfaces, and attach or delete filters on the flows. The client can also obtain data on any currently active interface, flow, or filter. The traffic control interface will send the appropriate message to the operating system, directing that the necessary tasks be performed by either a packet scheduler or a packet classifier. Those kernel level components then return through the operating system the results of the operations requested, and that return data will be passed back to the client application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07168078",
	"publication_date": "2007-01-23",
	"application_number": "10846130",
	"application_date": "2004-05-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system of integrating third party authentication into internet browser code",
	"summary": "",
	"abstract": "A method and system for using an Internet client's local authentication mechanism in systems having updated browser code, so as to enable third party authentication according to an authentication scheme specified by a participating server on clients with updated browser code, while not breaking clients with legacy browser code. A redirect response from a server has authentication data added thereto such that updated browser code can detect the data's presence and enable the use of local security mechanisms for authentication purposes with the server-specified authentication scheme, including local credential entry for verification at a third party login server. At the same time, if such a redirect response is received by prior browser code, the added data is ignored while conventional redirection occurs, such that third party authentication may be performed via redirection to a third party's Internet page that provides a form for credential entry.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07191467",
	"publication_date": "2007-03-13",
	"application_number": "10099403",
	"application_date": "2002-03-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for displaying information responsive to sensing a physical presence proximate to a computer input device",
	"summary": "",
	"abstract": "In a computer system, a touch sensitive input device having touch sensitive auxiliary controls system can be used to anticipate a user's action. When a user's hand approaches a touch sensitive input device, feedback can be displayed on a display screen. A user can receive feedback without activating the input device. The feedback may take the form of status information related to the feature controlled by the input device and can vary depending upon the application open. Likewise, when the hand of a user is moved away from the touch sensitive input device, the feedback brought on by sensing the user's hand may disappear.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07256770",
	"publication_date": "2007-08-14",
	"application_number": "09804496",
	"application_date": "2001-03-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for specifying and parsing expressions",
	"summary": "",
	"abstract": "A method of processing an expression includes encoding an expression in source code of an object-relational application, the expression having at least one property of a class. The source code is then compiled to provide run time code, wherein compiling of the expression produces a form of the expression having the intent of the expression by maintaining all operators and operands of the expression.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07254808",
	"publication_date": "2007-08-07",
	"application_number": "10199975",
	"application_date": "2002-07-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for switching protocols transparently in multi-user applications",
	"summary": "",
	"abstract": "An application programming interface implements a method for transparently switching from one communication protocol to another and for restoring the state of a previous connection. The application programming interface executes on a local, client computer, as well as remote computers. It includes functions that multi-user application programs can call to communicate in a device independent manner with other applications executing on remote computers. To support communication on a variety of different computer communication protocols, the application programming interface accesses programs called service providers that implement the communication protocols and support the message passing model of the interface. The application programming interface can transparently switch the protocol on a remote computer by sending a system message to a compatible version of the interface on the remote computer that includes an identifier of the service provider for the new protocol. In response to the message, the application programming interface loads the new service provider and takes steps to set-up a new connection. The application programming interface can also restore the state of previous connection on a remote computer by sending a system message. In response to this message, the application programming interface on the remote computer retrieves the previous connection state from an MRU stack and loads the service provider for the previous connection.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07197049",
	"publication_date": "2007-03-27",
	"application_number": "10215866",
	"application_date": "2002-08-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of determining uncertainty associated with acoustic distortion-based noise reduction",
	"summary": "",
	"abstract": "A method and apparatus are provided for determining uncertainty in noise reduction based on a parametric model of speech distortion. The method is first used to reduce noise in a noisy signal. In particular, noise is reduced from a representation of a portion of a noisy signal to produce a representation of a cleaned signal by utilizing an acoustic environment model. The uncertainty associated with the noise reduction process is then computed. In one embodiment, the uncertainty of the noise reduction process is used, in conjunction with the noise-reduced signal, to decode a pattern state.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07289955",
	"publication_date": "2007-10-30",
	"application_number": "11642389",
	"application_date": "2006-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of determining uncertainty associated with acoustic distortion-based noise reduction",
	"summary": "",
	"abstract": "A method and apparatus are provided for determining uncertainty in noise reduction based on a parametric model of speech distortion. The method is first used to reduce noise in a noisy signal. In particular, noise is reduced from a representation of a portion of a noisy signal to produce a representation of a cleaned signal by utilizing an acoustic environment model. The uncertainty associated with the noise reduction process is then computed. In one embodiment, the uncertainty of the noise reduction process is used, in conjunction with the noise-reduced signal, to decode a pattern state.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07174292",
	"publication_date": "2007-02-06",
	"application_number": "10236042",
	"application_date": "2002-09-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of noise estimation using incremental bayes learning",
	"summary": "",
	"abstract": "A method and apparatus estimate additive noise in a noisy signal using incremental Bayes learning, where a time-varying noise prior distribution is assumed and hyperparameters (mean and variance) are updated recursively using an approximation for posterior computed at the preceding time step. The additive noise in time domain is represented in the log-spectrum or cepstrum domain before applying incremental Bayes learning. The results of both the mean and variance estimates for the noise for each of separate frames are used to perform speech feature enhancement in the same log-spectrum or cepstrum domain.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07165026",
	"publication_date": "2007-01-16",
	"application_number": "10403638",
	"application_date": "2003-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of noise reduction using correction and scaling vectors with partitioning of the acoustic space in the domain of noisy speech",
	"summary": "",
	"abstract": "A method and apparatus are provided for reducing noise in a training signal and/or test signal. The noise reduction technique uses a stereo signal formed of two channel signals, each channel containing the same pattern signal. One of the channel signals is u201ccleanu201d and the other includes additive noise. Using feature vectors from these channel signals, a collection of noise correction and scaling vectors is determined. When a feature vector of a noisy pattern signal is later received, it is multiplied by the best scaling vector for that feature vector and the best correction vector is added to the product to produce a noise reduced feature vector. Under one embodiment, the best scaling and correction vectors are identified by choosing an optimal mixture component for the noisy feature vector. The optimal mixture component being selected based on a distribution of noisy channel feature vectors associated with each mixture component.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07254536",
	"publication_date": "2007-08-07",
	"application_number": "11059036",
	"application_date": "2005-02-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of real-time speaker change point detection, speaker tracking and speaker model construction",
	"summary": "",
	"abstract": "A method is provided for real-time speaker change detection and speaker tracking in a speech signal. The method is a u201ccoarse-to-refineu201d process, which consists of two stages: pre-segmentation and refinement. In the pre-segmentation process, the covariance of a feature vector of each segment of speech is built initially. A distance is determined based on the covariance of the current segment and a previous segment; and the distance is used to determine if there is a potential speaker change between these two segments. If there is no speaker change, the model of current identified speaker model is updated by incorporating data of the current segment. Otherwise, if there is a speaker change, a refinement process is utilized to confirm the potential speaker change point.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07181393",
	"publication_date": "2007-02-20",
	"application_number": "10306971",
	"application_date": "2002-11-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of reducing index sizes used to represent spectral content vectors",
	"summary": "",
	"abstract": "A method identifies a codeword to represent a vector derived from an audio signal by applying the vector to first and second decision trees. The first decision tree is associated with a first type of audio sound and produces a first codeword. The second decision tree is associated with a second type of audio sound and produces a second codeword. One of the first and second codewords is then selected as the codeword for the vector. In further embodiments, the vector describes the spectral content of the audio signal and a linear prediction value is generated for the vector. The difference between the linear prediction value and the vector is used to identify the codeword.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07200557",
	"publication_date": "2007-04-03",
	"application_number": "10306367",
	"application_date": "2002-11-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of session payload editing",
	"summary": "",
	"abstract": "A method of payload editing in an intelligent transparent gateway is provided. Certain applications include addressing information within the data streams of their sessions. When running on clients that are sharing a connection, such applications would send private, unreachable addressing information to remote peers, and the latter would be unable to respond to the clients's requests. The system of the instant invention supports an extensible means of modifying a session's application-layer data in flight, beyond the modifications made to the session's network-layer and transport-layer addressing information. Extensibility is achieved by allowing drivers to inspect the application-layer data in each packet received for a session, and to edit the application data in each packet. These editors register themselves with the gNAT of the instant invention as handlers for a specific TCP/UDP port number, and are henceforth invoked for each message translated in matching sessions.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07293095",
	"publication_date": "2007-11-06",
	"application_number": "10843523",
	"application_date": "2004-05-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of speech recognition using time-dependent interpolation and hidden dynamic value classes",
	"summary": "",
	"abstract": "A speech signal is decoded by determining a production-related value for a current state based on an optimal production-related value at the end of a preceding state, the optimal production-related value being selected from a set of continuous values. The production-related value is used to determine a likelihood of a phone being represented by a set of observation vectors that are aligned with a path between the preceding state and the current state. The likelihood of the phone is combined with a score from the preceding state to determine a score for the current state, the score from the preceding state being associated with a discrete class of production-related values wherein the class matches the class of the optimal production-related value.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07206741",
	"publication_date": "2007-04-17",
	"application_number": "11294858",
	"application_date": "2005-12-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method to reduce or eliminate audio interference from computer components",
	"summary": "",
	"abstract": "The present invention provides a system and method that mitigates audio interference before and/or during an audio session, and in particular, when a high quality audio session is desired. The system includes an audio component that determines whether an audio session is to commence and a control component that interfaces with the audio component and reduces activity associated with a subset of a plurality of computer components that may interfere with the audio session. The system may also include at least one power management system to facilitate reducing power consumption and activity of the computer component(s). The method involves determining that an audio session is desired and switching one or more computer components to a minimal interference mode prior to commencing the audio session. The method may also involve calling at least on API to facilitate the switching of the computer component(s).",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07178047",
	"publication_date": "2007-02-13",
	"application_number": "10355758",
	"application_date": "2003-01-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for managing secure collaborative transactions",
	"summary": "",
	"abstract": "Different levels of security are provided in a security system so that users can decide the security level of their own communications. Users can choose a low level of security and maintain the security overhead as low as possible. Alternatively, they can choose higher levels of security with attendant increases in security overhead. The different levels of security are created by the use of one or more of two keys: an encryption key is used to encrypt plaintext data in a delta and a message authentication key is used to authenticate and insure integrity of the data. Two keys are used to avoid re-encrypting the encrypted data for each member of the telespace. In one embodiment, the security level is determined when a telespace is created and remains fixed through out the life of the telespace. For a telespace, the security level may range from no security at all to security between the members of the telespace and outsiders to security between pairs of members of the telespace. In another embodiment, subgroups called u201ctribesu201d can be formed within a telespace and each tribe adopts the security level of the telespace in which it resides.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07213147",
	"publication_date": "2007-05-01",
	"application_number": "11257358",
	"application_date": "2005-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatuses for handling single-user applications in multi-user computing environments",
	"summary": "",
	"abstract": "Methods and apparatuses are provided for controlling application software while switching between sessions in a multi-session computing environment. An apparatus includes memory coupled to switching logic and application program managing logic. The switching logic is configured to selectively switch console control of a computing device between at least two user kernel sessions that are maintained in the memory. The application program managing logic is configured to selectively control at least one application program that is operatively configured within at least one of the user kernel sessions. For example, the application program managing logic can be configured to stop the operation, re-start certain application programs, notify application programs about switching events, and/or adjust the playback of audio and/or video signals associated certain application programs.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07213054",
	"publication_date": "2007-05-01",
	"application_number": "09999894",
	"application_date": "2001-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and mechanisms for proactive memory management",
	"summary": "",
	"abstract": "A proactive, resilient and self-tuning memory management system and method that result in actual and perceived performance improvements in memory management, by loading and maintaining data that is likely to be needed into memory, before the data is actually needed. The system includes mechanisms directed towards historical memory usage monitoring, memory usage analysis, refreshing memory with highly-valued (e.g., highly utilized) pages, I/O pre-fetching efficiency, and aggressive disk management. Based on the memory usage information, pages are prioritized with relative values, and mechanisms work to pre-fetch and/or maintain the more valuable pages in memory. Pages are pre-fetched and maintained in a prioritized standby page set that includes a number of subsets, by which more valuable pages remain in memory over less valuable pages. Valuable data that is paged out may be automatically brought back, in a resilient manner. Benefits include significantly reducing or even eliminating disk I/O due to memory page faults.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07185155",
	"publication_date": "2007-02-27",
	"application_number": "11150728",
	"application_date": "2005-06-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and system for managing computational resources of a coprocessor in a computing system",
	"summary": "",
	"abstract": "Systems and methods are provided for managing the computational resources of coprocessor(s), such as graphics processor(s), in a computing system. The systems and methods illustrate management of computational resources of coprocessors to facilitate efficient execution of multiple applications in a multitasking environment. By enabling multiple threads of execution to compose command buffers in parallel, submitting those command buffers for scheduling and dispatch by the operating system, and fielding interrupts that notify of completion of command buffers, the system enables multiple applications to efficiently share the computational resources available in the system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07234144",
	"publication_date": "2007-06-19",
	"application_number": "10039036",
	"application_date": "2002-01-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and system of managing concurrent access to multiple resources",
	"summary": "",
	"abstract": "The present invention is directed to a method and system for managing concurrent access to multiple resources. Resources are assigned to sets in such a way that it is safe to concurrently access any combination of resources in a resource set. For each resource set, a virtual machine is defined and associated with the resource set. An application is assigned to a virtual machine. When an application requests access to a resource not in the application's virtual machine, access control lists are consulted to determine whether the access should be allowed, given the other resources already accessed by the application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07257815",
	"publication_date": "2007-08-14",
	"application_number": "09946659",
	"application_date": "2001-09-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for cryptographically protecting secure content",
	"summary": "",
	"abstract": "Methods and systems are provided for cryptographically protecting secure content in connection with a graphics subsystem of a computing device. Techniques are implemented to encrypt the contents of video memory so that unauthorized software cannot gain meaningful access to it, thereby maintaining confidentiality. Moreover, a mechanism for tamper detection is provided so that there is awareness when data has been altered in some fashion, thereby maintaining integrity. In various embodiments, the contents of overlay surfaces and/or command buffers are encrypted, and/or the GPU is able to operate on encrypted content while preventing its availability to untrusted parties, devices or software.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07203310",
	"publication_date": "2007-04-10",
	"application_number": "10124922",
	"application_date": "2002-04-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for navigating deterministically through a graphical user interface",
	"summary": "",
	"abstract": "Disclosed is a mechanism for systematically invoking executable features of a software application via its graphical user interface. Also disclosed is a mechanism for generating a map that characterizes operational states of an application as it executes. An application driver selects an action to be performed by the application according to a deterministic mode such as depth-first mode or breadth-first mode. In the depth-first mode of deterministic operation, an action associated with a particular element is explored as deeply as possible, while breadth-first mode explores the application as widely as possible. For each executable feature invoked within the software application, the states encountered during execution are stored within the application map for subsequent retrieval and analysis.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07290245",
	"publication_date": "2007-10-30",
	"application_number": "09982395",
	"application_date": "2001-10-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for protecting information in paging operating systems",
	"summary": "",
	"abstract": "The inventive methods and systems provide an approach to protecting unencrypted sensitive information from being paged out to secondary storage, such as a hard disk, during paging operations. In the described embodiment, a key is provided and is maintained in the main memory of a virtual memory system. Measures are taken to protect the key such as page-locking the key in the main memory to ensure that it never gets paged out to the secondary storage. The described key is a desirably large key that is randomly generated by the operating system. When sensitive information is to be placed in the main memory, it is encrypted with the page-locked key. The encrypted sensitive information can then be paged out to secondary storage without concern about its security. When the encrypted sensitive information is needed by a process or application, it is retrieved from secondary storage and decrypted using the page-locked key. For further protection, the sensitive information can be decrypted into a page-locked page of main memory. More than one key can be used to encrypt and/or decrypt the sensitive information.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07293173",
	"publication_date": "2007-11-06",
	"application_number": "11190376",
	"application_date": "2005-07-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for protecting information in paging operating systems",
	"summary": "",
	"abstract": "The inventive methods and systems provide an approach to protecting unencrypted sensitive information from being paged out to secondary storage, such as a hard disk, during paging operations. In the described embodiment, a key is provided and is maintained in the main memory of a virtual memory system. Measures are taken to protect the key such as page-locking the key in the main memory to ensure that it never gets paged out to the secondary storage. The described key is a desirably large key that is randomly generated by the operating system. When sensitive information is to be placed in the main memory, it is encrypted with the page-locked key. The encrypted sensitive information can then be paged out to secondary storage without concern about its security. When the encrypted sensitive information is needed by a process or application, it is retrieved from secondary storage and decrypted using the page-locked key. For further protection, the sensitive information can be decrypted into a page-locked page of main memory. More than one key can be used to encrypt and/or decrypt the sensitive information.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07266690",
	"publication_date": "2007-09-04",
	"application_number": "11190375",
	"application_date": "2005-07-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for screening input strings intended for use by Web servers",
	"summary": "",
	"abstract": "Methods and systems of screening input strings that are intended for use by a Web server are described. In the described embodiment, an attack pattern is determined that can be used to attack a Web server. A search pattern is defined that can be used to detect the attack pattern. The search pattern is defined in a flexible, extensible manner that permits variability among its constituent parts. An input string that is intended for use by a Web server is received and evaluated using the search pattern to ascertain whether the attack pattern is present. If an attack pattern is found that matches the search pattern, then a remedial action is implemented.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07197769",
	"publication_date": "2007-03-27",
	"application_number": "11275920",
	"application_date": "2006-02-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods, computer readable mediums and systems for requesting, retrieving and delivering metadata pages",
	"summary": "",
	"abstract": "Methods, computer readable mediums and systems provide media player users with a full contextual metadata experience. Metadata include multiple forms of property data, or information, relating to media accessed by a media player, such as a CD in a CD-ROM drive of a computer. Metadata is transferred from a server to a client. Identification parameters associated with the accessed media file are submitted by the client to a server, and property data is retrieved and forwarded to the client. The metadata provides the user with integrated, contemporaneous property data directly related to the media file being played, providing automatic, integrated access to data from multiple databases, simply by accessing a related media file through a media player, without further direction from the user.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07313591",
	"publication_date": "2007-12-25",
	"application_number": "10622972",
	"application_date": "2003-07-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Middleware layer between speech related applications and engines",
	"summary": "",
	"abstract": "The present invention provides an application-independent and engine-independent middleware layer () between applications () and engines (). The middleware provides speech-related services to both applications () and engines (), thereby making it far easier for application vendors and engine vendors to bring their technology to consumers.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07177807",
	"publication_date": "2007-02-13",
	"application_number": "11006236",
	"application_date": "2004-12-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Middleware layer between speech related applications and engines",
	"summary": "",
	"abstract": "The present invention provides an application-independent and engine-independent middleware layer between applications and engines. The middleware provides speech-related services to both applications and engines, thereby making it far easier for application vendors and engine vendors to bring their technology to consumers.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07177813",
	"publication_date": "2007-02-13",
	"application_number": "11012547",
	"application_date": "2004-12-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Minimal difference query and view matching",
	"summary": "",
	"abstract": "The subject disclosure pertains to efficient computation of the difference between queries by exploiting commonality between them. A minimal difference query (MDQ) is generated that roughly corresponds to removal of as many joins as possible while still accurately representing the query difference. The minimal difference can be employed to further substantially the scope of view matching where a query is not wholly subsumed by a view. Additionally, the minimal difference query can be employed as an analytical tool in various contexts.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07251646",
	"publication_date": "2007-07-31",
	"application_number": "11352628",
	"application_date": "2006-02-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mobile phone operation based upon context sensing",
	"summary": "",
	"abstract": "A mobile device is provided that includes at least one sensor that provides contextual information to the device. When the mobile device receives an incoming message, or notification, the device responds thereto based at least in part upon the contextual information.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07302280",
	"publication_date": "2007-11-27",
	"application_number": "10162487",
	"application_date": "2002-06-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multi-layer based method for implementing network firewalls",
	"summary": "",
	"abstract": "A method is provided for implementing a firewall in a firewall architecture. The firewall architecture includes a plurality of network layers and a first firewall engine. The layers send packets and packet information to the first firewall engine, maintain and pass packet context to subsequent layers, and process the packets. The first firewall engine compares the packet information to one or more installed filters and returns an action to the layers indicating how to treat the packet.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07260840",
	"publication_date": "2007-08-21",
	"application_number": "10456770",
	"application_date": "2003-06-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multi-planar three-dimensional user interface",
	"summary": "",
	"abstract": "A 10-Foot media user interface is herein described. A computer user interface may be designed for primary use as a 10-Foot user interface, where a user controls the computer using a remote control device, instead of as a traditional 2-Foot user interface where the user controls the computer using keyboard and mouse from directly in from of the computer. The 10-Foot user interface uses 3D space and animations to more clearly indicate navigation and selection of items in the user interface to the controlling user. Use of three-dimensional space also increases the display screen real estate that is available for content items, and allows the media user interface to move unselected items out of primary view of the user. The user interface may animate movement in three-dimensions to allow the user to more easily conceptually follow navigation of the user interface.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07178111",
	"publication_date": "2007-02-13",
	"application_number": "10909838",
	"application_date": "2004-08-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multiple-level graphics processing system and method",
	"summary": "",
	"abstract": "A multiple-level graphics processing system and method (e.g., of an operating system) for providing improved graphics output including, for example, smooth animation. One such multiple-level graphics processing system comprises two components, including a tick-on-demand or slow-tick high-level component, and a fast-tick (e.g., at the graphics hardware frame refresh rate) low-level component. In general, the high-level, less frequent component performs computationally intensive aspects of updating animation parameters and traversing scene data structures, in order to pass simplified data structures to the low-level component. The low-level component operates at a higher frequency, such as the frame refresh rate of the graphics subsystem, to process the data structures into constant output data for the graphics subsystem. The low-level processing includes interpolating any parameter intervals as necessary to obtain instantaneous values to render the scene for each frame of animation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07161599",
	"publication_date": "2007-01-09",
	"application_number": "10184795",
	"application_date": "2002-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multipoint processing unit",
	"summary": "",
	"abstract": "A system to provide a multipoint processing terminal and a multicast bridging terminal to provide mixing, switching, and other processing of media streams under the control of H.323 components. Application Programming Interfaces defined for the multipoint processing terminal provide a multipoint control unit with the capability to change the default behavior of the multipoint processing terminal by allowing the multipoint control unit to control the routing audio and video streams in the multipoint processing terminal and control the media formats in a multipoint conference. Multipoint processing acceleration functionality is provided by providing interfaces to allow hardware accelerated implementations of multipoint processing terminals. The multicast bridging terminals enables clients using one type of control signaling and media streaming to join other conferences using different types of control signaling and media streaming by receiving audio or video data from an incoming media stream and performing any processing necessary to transform the media stream from the incoming stream data format to the outgoing stream data format.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07257641",
	"publication_date": "2007-08-14",
	"application_number": "09539026",
	"application_date": "2000-03-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Noise reduction using correction vectors based on dynamic aspects of speech and noise normalization",
	"summary": "",
	"abstract": "A method and apparatus are provided for reducing noise in a signal. Under one aspect of the invention, a correction vector is selected based on a noisy feature vector that represents a noisy signal. The selected correction vector incorporates dynamic aspects of pattern signals. The selected correction vector is then added to the noisy feature vector to produce a cleaned feature vector. In other aspects of the invention, a noise value is produced from an estimate of the noise in a noisy signal. The noise value is subtracted from a value representing a portion of the noisy signal to produce a noise-normalized value. The noise-normalized value is used to select a correction value that is added to the noise-normalized value to produce a cleaned noise-normalized value. The noise value is then added to the cleaned noise-normalized value to produce a cleaned value representing a portion of a cleaned signal.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07181390",
	"publication_date": "2007-02-20",
	"application_number": "11189974",
	"application_date": "2005-07-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Object connectivity through loosely coupled publish and subscribe events",
	"summary": "",
	"abstract": "An object-based event communications system supplies an event distribution object having an outgoing-from-publisher event interface and associated with unique identifiers defined for a publisher that is programmed to fire events by calling a method on the event distribution object's outgoing-from-publisher event interface. The event communications system stores subscriptions of subscriber objects to methods of the outgoing-from-publisher event interface. On receiving a call from a publisher to its outgoing-from-publisher interface methods, the event distribution object multi-casts calls to counterpart methods of subscriber objects that have stored subscriptions to the respective outgoing-from-publisher interface methods.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07237245",
	"publication_date": "2007-06-26",
	"application_number": "10993070",
	"application_date": "2004-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Object-based software management",
	"summary": "",
	"abstract": "An execution environment accommodating object-based software transparently monitors interactions with software objects to generate operational management information for managing programs executing at plural computers. Notifications are directed to a software manager in the form of events, which can additionally be provided to applications or user programs. The software manager can group the events into sets and derive various operational management metrics from them to provide an overall picture of a program's performance, including availability. A hierarchical arrangement feature facilitates gathering information for programs scattered over plural computers. An alert feature provides warnings if metrics fall outside a specified threshold. In addition, the alert feature can automatically subscribe to additional sets of events to dynamically select the information collected by the software manager. Since the operational management information is collected transparently by logic outside the objects, manual instrumentation of the program is unnecessary, and software management technology is made available to organizations without software management expertise.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07240244",
	"publication_date": "2007-07-03",
	"application_number": "10864066",
	"application_date": "2004-06-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Operating system upgrades in a trusted operating system environment",
	"summary": "",
	"abstract": "Operating system upgrades in a trusted operating system environment allow a current trusted core of an operating system installed on a computing device to be upgraded to a new trusted core. The new trusted core is allowed to access application data previously securely stored by the current trusted core only if it can be verified that the new trusted core is the new trusted core expected by the current trusted core. In accordance with one implementation, the new trusted core is allowed to access only selected application data previously securely stored by the current trusted core.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07159240",
	"publication_date": "2007-01-02",
	"application_number": "09993373",
	"application_date": "2001-11-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Operational semantics rules for governing evolution of processes and queries as processes",
	"summary": "",
	"abstract": "A program includes expressions written in a process-based language. A process kernel executes sets of operational semantics rules governing the meanings of the expressions in the program. A first expression is parsed. The first expression describes that a process is a choice of two processes. The first process of the two processes expresses that a first query is submitted to a queue, after which the first process continues with a first set of actions. The second process of the two processes expresses that a second query is submitted to the queue, after which the second process continues with a second set of actions. The first expression reduces to a second expression. The second expression describes that a third query is submitted to the queue after which the first process runs in parallel with the second process if the third query is in canonical form.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07216335",
	"publication_date": "2007-05-08",
	"application_number": "10303343",
	"application_date": "2002-11-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Password synchronization in a sign-on management system",
	"summary": "",
	"abstract": "A mechanism that synchronizes passwords maintained for plural domains. A user maintains accounts in two domains. The first and second domains each maintain tables correlating userIDs with passwords, such that the same user's password can be different in the different domains. A database stores tables that correlate a given user's userID/password combination in the first domain with his corresponding userID/password combination in the second domain. The database is used to sign the user onto one domain when the user is working in the other domain. When the user changes his password in the first domain, the change is reported to the database, so that the database stores the current password. Optionally, the password change may be reported to the second domain, such that the user will have the same password in both domains.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07251732",
	"publication_date": "2007-07-31",
	"application_number": "10464627",
	"application_date": "2003-06-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Peer networking host framework and hosting API",
	"summary": "",
	"abstract": "A device hosting framework provides hosting for software-implemented logical devices (including peripheral devices bridges) on a computer to expose their services as controlled devices per a peer networking protocol. The device hosting framework encapsulates discovery, description and control protocol operations of the peer networking protocol, which frees the developers of the hosted devices from having to individually implement the peer networking protocol in the hosted devices' software and need implement only the core functionality of the hosted device. The device hosting framework operates as a host supporting device interoperability via the peer networking protocol for multiple hosted devices.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07171475",
	"publication_date": "2007-01-30",
	"application_number": "09872614",
	"application_date": "2001-06-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Peer-to-peer authorization method",
	"summary": "",
	"abstract": "Disclosed are peer-to-peer computer program products, methods, and systems in which a remote peer on a peer-to-peer network is granted or denied access to a resource based on the credentials presented by the remote peer. In accordance with the disclosed subject matter, an access token that includes one or more security identification values which represent respectively one or more access rights in an access control system is generated. An execution thread that is associated with the access token thus generated attempts to access the resource on behalf of the remote peer. In some embodiments, the access control system includes a generic user account, and the access token that is generated for the remote peer includes the security identification value associated with the generic user account in the access control system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07188254",
	"publication_date": "2007-03-06",
	"application_number": "10645319",
	"application_date": "2003-08-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Performant and scalable merge strategy for text indexing",
	"summary": "",
	"abstract": "A full-text search index system and method is generated by creating instances of a database index from an in-memory inverted list of keywords associated with a text identifier and the occurrences of the keyword in the text. Instances of the index are placed in a priority queue. A merge scheduling process determines when a merge should be initiated, selects instances of the index to be merged and selects a type of merge to perform. Instances of an index are assigned a temporal indicator (timestamp). A set of instances is selected to be merged. The set of instances is validated and merged.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07185019",
	"publication_date": "2007-02-27",
	"application_number": "11182655",
	"application_date": "2005-07-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Performing threshold based connection status responses",
	"summary": "",
	"abstract": "A connection manager receives connection status indicators from a remote access service and invokes status threshold based responses. A received status indicator is received in response to a connection request. In another example, the status indicator is pushed to the connection manager. Status indicators are recorded in a status data structure. Status threshold based responses are identified in a status threshold response data structure. When a status indication count corresponds with a threshold value in a status threshold response data structure, a corresponding status threshold based response is invoked. A status data structure is sent to a remote server, and a new status data structure is received. In another example, a new status threshold response data structure is received. In another example, one or more new or updated status responses are received.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07287076",
	"publication_date": "2007-10-23",
	"application_number": "10748310",
	"application_date": "2003-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Persistent peer-to-peer networking over a piconet network",
	"summary": "",
	"abstract": "A persistent peer-to-peer network is implemented over a network with master-slave topology. Data being sent from master to slave or from slave to master are sent in one transmission, but data sent from one slave to another is received by the master and retransmitted to the slave. A session table is kept at each device includes an ordered list of devices, where the first device is the master device. When a master device drops out of the network the slave devices promote the next device in the ordered list of devices to master. A master device may also receive a request from a slave device to become master, and update its session table and send the updated session table to all devices. The slave device requesting master status is then treated as master by all devices in the network.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07167678",
	"publication_date": "2007-01-23",
	"application_number": "10322188",
	"application_date": "2002-12-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Point-to-point data communication implemented with multipoint network data communication components",
	"summary": "",
	"abstract": "A data communication system is configured to communicatively link a host device and a client device with a point-to-point data communication link, where the point-to-point data communication link is configured with multipoint network data communication components designed for data communication over a distributed network. A data communication interface at the host device is communicatively linked with a data communication interface driver via the point-to-point data communication link between the host device and the client device. The data communication interface driver communicates with a virtual driver component for the client device via a virtual network at the client device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07305426",
	"publication_date": "2007-12-04",
	"application_number": "11027125",
	"application_date": "2004-12-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Point-to-point data communication implemented with multipoint network data communication components",
	"summary": "",
	"abstract": "A data communication system is configured to communicatively link a host device and a client device with a point-to-point data communication link, where the point-to-point data communication link is configured with multipoint network data communication components designed for data communication over a distributed network. A data communication interface at the host device is communicatively linked with a data communication interface driver via the point-to-point data communication link between the host device and the client device. The data communication interface driver communicates with a virtual driver component for the client device via a virtual network at the client device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07213044",
	"publication_date": "2007-05-01",
	"application_number": "09945369",
	"application_date": "2001-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Process description language",
	"summary": "",
	"abstract": "A description file that includes multiple statements written in a customizable, tag-based interpreted language for processing data contained in the messages is disclosed. A data shaper translates and then executes each statement in the description file. The customizable, tag-based interpreted language, defines the operational behavior of the data shaper. The operational behavior shapes data contained in the messages to produce publishable matter suitable for online presentation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07181456",
	"publication_date": "2007-02-20",
	"application_number": "10225397",
	"application_date": "2002-08-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Programmatic computer problem diagnosis and resolution and automated reporting and updating of the same",
	"summary": "",
	"abstract": "Programmatically diagnosing the root cause of a problem in a computing system. Events are monitored within an operating system, and at least a subset of the events are logged to a log file. In response to the detection of error condition(s), a diagnostics module is invoked. The diagnostics module queries the log file to correlate events relevant to diagnosis of the problem, and identifies the root cause by evaluating the results of the query. Once the root cause of the problem is diagnosed, a resolution module corresponding to that root cause may be invoked to programmatically resolve the problem. The invocation of the diagnostic and resolution modules may be subject to policy rules. Furthermore, the logging, diagnostics and resolution modules may be automatically updated as needed.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07263632",
	"publication_date": "2007-08-28",
	"application_number": "10651430",
	"application_date": "2003-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Programming model for subscription services",
	"summary": "",
	"abstract": "The present invention relates to a subscription modeling system and methodology. A query processor receives subscription query and subscriber information and transforms the query and subscriber information into data. An index component propagates at least one database with the transformed data; and a matching component that associates the transformed data with event data to generate a database of notification data that can be delivered to subscribers. The invention provides for abstracting subscription and subscriber information (as well as event information if desired) to high-level classes (e.g., data fields)u2014thus the invention provides for modeling such notification related information as data. Subscription applications can thus be developed at high levels wherein complex subscription queries and subscriber information can be defined as data fields for example. Databases in accordance with the data fields can be propagated with subscription/subscriber specific information. The present invention takes advantages of the processing power associated with database engines (e.g., SQL server) to generate notifications via performing a join operation on the databases (e.g., subscription database(s), subscriber database(s) and event database(s)). Accordingly, notifications are generated en masse as compared to per subscription per subscriber. Thus the present invention provides for a highly scalable and efficient notification system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07177859",
	"publication_date": "2007-02-13",
	"application_number": "10180662",
	"application_date": "2002-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Quantified boolean formula (QBF) solver",
	"summary": "",
	"abstract": "Quantified Boolean formula (QBF) techniques are used in determining QBF satisfiability. A QBF is broken into component parts that are analyzable by a satisfiability (SAT) solver. Each component is then independently, and perhaps in parallel, analyzed for satisfiability. If a component is unsatisfiable, then it is determined that the QBF is unsatisfiable, and the analysis is stopped. If a component is satisfiable, then an assignment corresponding to the satisfiable component is noted. If a component is satisfiable, then it is appended to another untested component to provide a combination component, and the satisfiability of the combination component is analyzed. Such appending and analysis is repeated until the QBF is completed and determined to be satisfiable or determined to be unsatisfiable.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07249333",
	"publication_date": "2007-07-24",
	"application_number": "11038958",
	"application_date": "2005-01-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Quasi-particle interferometry for logical gates",
	"summary": "",
	"abstract": "A quantum computer can only function stably if it can execute gates with extreme accuracy. u201cTopological protectionu201d is a road to such accuracies. Quasi-particle interferometry is a tool for constructing topologically protected gates. Assuming the corrections of the Moore-Read Model for v= 5/2's FQHE (Nucl. Phys. B 360, 362 (1991)) we show how to manipulate the collective state of two e/4-charge anti-dots in order to switch said collective state from one carrying trivial SU(2) charge, |1>, to one carrying a fermionic SU(2) charge |u03b5>. This is a NOT gate on the {|1>, |u03b5>} qubit and is effected by braiding of an electrically charged quasi particle u03c3 which carries an additional SU(2)-charge. Read-out is accomplished by u03c3-particle interferometry.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07250624",
	"publication_date": "2007-07-31",
	"application_number": "11233653",
	"application_date": "2005-09-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Querying an object for properties",
	"summary": "",
	"abstract": "The present invention is a method and system for querying a database system. An object query identifies a partial set of properties of an object to be returned. A portion of the relational database containing those properties is identified and only those properties are returned.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07162469",
	"publication_date": "2007-01-09",
	"application_number": "10199978",
	"application_date": "2002-07-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Realtime web page scrapping and visual representation of associated clickthrough and impression data architecture",
	"summary": "",
	"abstract": "Systems and methods for visually displaying clickthrough, impression, and other data pertaining to webpages are provided. In various embodiments, such data can be displayed concurrently with a display of a tracked webpage. User indication of either an element on a tracked webpage or corresponding data can operate to visually highlight related features of the display. Implementation of the present invention may be accomplished by providing a user interface for retrieving downloaded webpages and corresponding data, a scheduler for scheduling the periodic download of tracked webpages, and one or more downloaders for downloading tracked webpages into a target directory.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07181681",
	"publication_date": "2007-02-20",
	"application_number": "10767503",
	"application_date": "2004-01-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Reflection space image based rendering at an interactive frame rate",
	"summary": "",
	"abstract": "The present invention provides a method, system, and computer program product for reflection space image based rendering of an object at an interactive frame rate. A set of source radiance environment maps associated with a set of source viewing vectors are warped to create a destination radiance environment map associated with a destination viewing vector in a current frame. Blending and weighting operations can also be applied in creating the final destination radiance environment map. An object is then rendered with texture environment mapped from the destination radiance environment map.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07268789",
	"publication_date": "2007-09-11",
	"application_number": "10996751",
	"application_date": "2004-11-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Reflowable ink",
	"summary": "",
	"abstract": "A reflow tool employs layout information from an ink analyzer to determine a relationship between different units of electronic ink, such as words. The reflow tool then collects this relationship information into an ink relationship data structure for later use. When the reflow area containing the electronic ink is resized, or when an edit space is inserted into or deleted from the electronic ink, the reflow tool uses the relationship information from the data structure to intelligently segment the electronic ink for reflow. In this manner, the reflow tool ensures that units of electronic ink, such as words, which are associated with larger groupings of electronic ink, such as paragraphs, are not segmented from those larger groupings to which they belong.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07205985",
	"publication_date": "2007-04-17",
	"application_number": "10770976",
	"application_date": "2004-02-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Reformulating resources with nodes reachable from defined entry points",
	"summary": "",
	"abstract": "Historically, resources (e.g., dynamic linked libraries) were organized based on factors including the expertise of development teams. Unfortunately, this creates shared resources of much greater functionality than required by any one client application. By reformulating shared resources according to the nodes reachable from a set of defined entry points, the reformulated resources will contain nodes of relevance. This optimization reduces memory requirements which is useful for embedded systems and for reducing disk accesses.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07210124",
	"publication_date": "2007-04-24",
	"application_number": "10463480",
	"application_date": "2003-06-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Removing noise from feature vectors",
	"summary": "",
	"abstract": "A method and computer-readable medium are provided for identifying clean signal feature vectors from noisy signal feature vectors. Aspects of the invention use mixtures of distributions of noise feature vectors and/or channel distortion feature vectors when identifying the clean signal feature vectors.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07310599",
	"publication_date": "2007-12-18",
	"application_number": "11185159",
	"application_date": "2005-07-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Rendering tear free video",
	"summary": "",
	"abstract": "Systems and methods to render tear free video in a multitasking operating environment are described. In one aspect, a video playback window portion of a desktop display is divided into non-overlapping first and second partitions. As video data is scanned into display memory which maps to the first and second partitions, current scan line input positions are monitored. Responsive to determining that the current scan line position is located in display memory associated with the second partition, display memory mapped to the second partition is not rendered and display memory mapped to the first partition is rendered into the video playback window.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07224368",
	"publication_date": "2007-05-29",
	"application_number": "10732577",
	"application_date": "2003-12-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Representing latent data in an extensible markup language document",
	"summary": "",
	"abstract": "Methods and systems allow style and other formatting settings to remain latent until one or more particular style or formatting settings is instantiated by a user. Data representing each latent style or formatting object is persisted in a data structure apart from the user's document. Each potential style setting or formatting setting may be set as locked for use for a given document or locked for non-use for a given document. Upon saving the document, no data is saved for the numerous available style and formatting settings in the document. When a particular style is called upon by a subsequent consuming application, that application may then instantiate the particular style or formatting setting based on the properties of that style or formatting setting available from the subsequent consuming application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07178102",
	"publication_date": "2007-02-13",
	"application_number": "10730854",
	"application_date": "2003-12-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Resolving virtual network names",
	"summary": "",
	"abstract": "An apparatus and method is provided for resolving virtual network names using one or more name routers. A conventional Uniform Resource Locator (URL) naming scheme is extended by allowing any component to be mapped to an address. The resolution process occurs recursively through a plurality of name routers. Resolution can be contextual, such that the same virtual network name may be resolved differently depending on the identity of the client or other parameters.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07194553",
	"publication_date": "2007-03-20",
	"application_number": "09983539",
	"application_date": "2001-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Restricted content viewing methods and arrangements for use in a DVD player",
	"summary": "",
	"abstract": "In accordance with certain aspects of the present invention, enhancements have been developed to further extend the performance of the generic DVD navigator with respect to restricted access, such as parental controlled access. The methods and arrangements provided herein support various decision mechanisms associated with conventional dual branching operations and coordinating the handling of parental level requests. The methods and arrangements also support a plurality of parental levels and multi-segment parental level branching schemes.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07200323",
	"publication_date": "2007-04-03",
	"application_number": "09721542",
	"application_date": "2000-11-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Scalable programmable video recorder",
	"summary": "",
	"abstract": "A programmable video recorder (PVR) includes a writer application programming interface (API) and a reader API that operate essentially independently to enable the PVR to be networked to multiple reader applications. The writer API creates a backing store and a shared memory mapped file. The backing store stores streamed data in temporary files. The shared memory mapped file stores state information of the backing store files. The reader API receives requests from reader applications to access the stored streamed data. In response to the requests, the reader API permits the reader applications to access the shared memory mapped file to determine where the stored streamed data is located. Upon locating the stored data, the reader API permits the requesting reader applications to access the stored streamed data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07289716",
	"publication_date": "2007-10-30",
	"application_number": "10172551",
	"application_date": "2002-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Scheduling of synchronization operation on a mobile device based on predetermined subset of user actions",
	"summary": "",
	"abstract": "Data is synchronized between a mobile device and a computing device over a wireless link. Synchronization operations are scheduled based on a predetermined subset of user actions.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07269433",
	"publication_date": "2007-09-11",
	"application_number": "10640901",
	"application_date": "2003-08-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Schema-based services for identity-based data access",
	"summary": "",
	"abstract": "A schema-based service for Internet access to per-user services data, wherein access to data is based on each user's identity. The service includes a schema that defines rules and a structure for each user's data, and also includes methods that provide access to the data in a defined way. The services schema thus corresponds to a logical document containing the data for each user. The user manipulates (e.g., reads or writes) data in the logical document by data access requests through defined methods. In one implementation, the services schemas are arranged as XML documents, and the services provide methods that control access to the data based on the requesting user's identification, defined role and scope for that role. In this way, data can be accessed by its owner, and shared to an extent determined by the owner.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07302634",
	"publication_date": "2007-11-27",
	"application_number": "10017680",
	"application_date": "2001-10-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Scripting solution for interactive audio generation",
	"summary": "",
	"abstract": "A script file includes a text section that has a text label to designate a point during execution of the script sequence when an audio rendition of a video event is to be initiated. The script file also includes a container that maintains audio content within the script file. The audio content is identified in the container with a content label that corresponds to a text label in the text section. The audio content is initiated to be generated as the audio rendition at the designated point during execution of the script sequence when the script file is executed and when a script processor determines that the content label corresponds to the text label.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07162314",
	"publication_date": "2007-01-09",
	"application_number": "10092945",
	"application_date": "2002-03-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Seamless tabbed focus control in active content",
	"summary": "",
	"abstract": "In a visual display system using a tabbed focus, movement of the focus is coordinated seamlessly between container-generated visual content and active content.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07197717",
	"publication_date": "2007-03-27",
	"application_number": "10164161",
	"application_date": "2002-06-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Security link management in dynamic networks",
	"summary": "",
	"abstract": "A method for setting up and managing secure data/audio/video links with secure key exchanges, authentication and authorization is described. An embodiment of the invention enables establishment of a secure link with limited privileges using the machine identifier of a trusted machine. This is particularly useful if the user of the machine does not have a user identifying information suitable for authentication. Furthermore, the presentation of a default user identifying information by a user advantageously initiates intervention by a system administrator instead of a blanket denial. This decentralized procedure allows new users access to the network without having to physically access a centralized facility to present their credentials. Another embodiment of the invention enables a remote user to connect to a secure network with limited privileges.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07257836",
	"publication_date": "2007-08-14",
	"application_number": "09694514",
	"application_date": "2000-10-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Sharing live advanced streaming format indexed files",
	"summary": "",
	"abstract": "A computing system connected to storage medium and one or more rendering devices receives streamed multimedia data. The multimedia data is encoded in a format, such as an Advanced Streaming Format, that is conducive to storing the multimedia data in files having appended indexes. Upon receiving the multimedia data, the multimedia data is written to file structures within the storage medium, while at the same time maintaining a real-time index for each file in a shared memory. After a file is complete, the real-time index is appended to the completed file and deleted from the shared memory. When a request for data is received that pertains to a file that does not have an appended index, the computing system obtains any necessary file index information from the real-time index in the shared memory, thereby enabling the requested data to be accessed.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07286748",
	"publication_date": "2007-10-23",
	"application_number": "10206253",
	"application_date": "2002-07-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Special API interface for interfacing an application with a TWAIN module, negotiating and presenting a user interface for inserting an image into a document",
	"summary": "",
	"abstract": "Inserting images into documents. An image source device is made active with an application used to create text in a document. An application programming interface (API) module is accessed from within the application. The API interfaces the application with a TWAIN module used for acquiring an image with the image source device. The API module is separate from the TWAIN module and isolates users from directly interacting with the TWAIN module. The application uses the API module for negotiating with the image source device to determine a set of image capture parameters that control the image source device when acquiring the image. Data representing the image is communicated from the image source device into the memory of a computer hosting the application used to create text so that the data representing the image is a portion of a document stored in the memory.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07266761",
	"publication_date": "2007-09-04",
	"application_number": "09333821",
	"application_date": "1999-06-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Speech controls for use with a speech system",
	"summary": "",
	"abstract": "Systems and methods are described for a speech system that includes one or more speech controls incorporated into one or more speech-enabled applications that run on the speech system. The controls allow applications to be developed with minimal programming effort to incorporate common speech-enabled application functions. A question control provides a customizable template for requesting information from a user. An announcer control allows a speech-enabled application to provide a user with information without having to re-create an entire announcer process each time it is used. A command control provides a simple way to attach command and control functions to speech-enabled applications. A word trainer control provides a way to associate user-selected voice tags with certain information. Providing the controls for use with speech-enabled applications ensures standardized user interfaces across multiple speech-enabled applications.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07188066",
	"publication_date": "2007-03-06",
	"application_number": "10067518",
	"application_date": "2002-02-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Speech controls for use with a speech system",
	"summary": "",
	"abstract": "Systems and methods are described for a speech system that includes one or more speech controls incorporated into one or more speech-enabled applications that run on the speech system. The controls allow applications to be developed with minimal programming effort to incorporate common speech-enabled application functions. A question control provides a customizable template for requesting information from a user. An announcer control allows a speech-enabled application to provide a user with information without having to re-create an entire announcer process each time it is used. A command control provides a simple way to attach command and control functions to speech-enabled applications. A word trainer control provides a way to associate user-selected voice tags with certain information. Providing the controls for use with speech-enabled applications ensures standardized user interfaces across multiple speech-enabled applications.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07254545",
	"publication_date": "2007-08-07",
	"application_number": "11265636",
	"application_date": "2005-11-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Speech platform architecture",
	"summary": "",
	"abstract": "A speech platform architecture is described that provides standardized methods of interaction for users across multiple speech-enabled applications. Listener objects corresponding to speech-enabled applications are used to provide speech functionality to the speech-enabled applications. A common u201cWhat Can I Say?u201d user interface allows users to easily understand what voice commands are available for a particular speech-enabled application. A common configuration user interface is provided that allows users to configure each listener object. Utilization of particular interfaces provides for the common functionality described. As a result of providing common interfaces, users can more easily learn and use multiple speech-enabled applications utilized with a speech system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07174294",
	"publication_date": "2007-02-06",
	"application_number": "10177068",
	"application_date": "2002-06-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Speech processing for telephony API",
	"summary": "",
	"abstract": "Systems, methods, and structures are discussed that enhance media processing. One aspect of the present invention includes a data structure to enhance media processing. The data structure includes a terminal data structure to instantiate terminal objects and a speech recognition terminal data structure that extends the terminal data structure. Another aspect of the present invention includes a data structure to enhance media processing. This data structure includes a terminal data structure to instantiate terminal objects and a speech generation terminal data structure that extends the terminal data structure. These data structures may be used to implement an internet protocol interactive voice response system, an internet protocol unified message system, and speech-enabled Web applications.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07251315",
	"publication_date": "2007-07-31",
	"application_number": "09557333",
	"application_date": "2000-04-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Speech-related event notification system",
	"summary": "",
	"abstract": "The present invention is directed to a system and method of notifying a speech related application of events generated by a speech related engine. A middleware layer receives a notification selection from the application. The notification selection is indicative of a selected notification mechanism for notifying the application of the events. The middleware component receives an event indication from the engine. The event indication is indicative of an event generated by the engine. The event indication is transferred to the application according to the selected notification mechanism.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07162425",
	"publication_date": "2007-01-09",
	"application_number": "10996308",
	"application_date": "2004-11-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Statistically driven sentence realizing method and apparatus",
	"summary": "",
	"abstract": "A method of, and system for, generating a sentence from a semantic representation maps the semantic representation to an unordered set of syntactic nodes. Simplified generation grammar rules and statistical goodness measure values from a corresponding analysis grammar are then used to create a tree structure to order the syntactic nodes. The sentence is then generated from the tree structure. The generation grammar is a simplified (context free) version of a corresponding full (context sensitive) analysis grammar. In the generation grammar, conditions on each rule are ignored except those directly related to the semantic representation. The statistical goodness measure values, which are calculated through an analysis training phase in which a corpus of example sentences is processed using the full analysis grammar, are used to guide the generation choice to prefer substructures most commonly found in a particular syntactic/semantic context during analysis.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07266491",
	"publication_date": "2007-09-04",
	"application_number": "11152352",
	"application_date": "2005-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Storing images having semi-transparent pixels via alpha regions",
	"summary": "",
	"abstract": "An image storage and processing method constructs, clips, fills, and combines arbitrary 2-dimensional shapes in an advanced graphics system. The method supports processing of anti-aliased images by compressing the image into a novel AlphaRegion data structure. AlphaRegion encodes into the data structure both the partially transparent as well as the fully opaque alpha values of an image according to rectangular bands. A band is a contiguous series of scan lines that have the same pattern of alpha values in a single direction. AlphaRegion encoding results in a more compact representation than possible in a conventional bitmap, but without losing the anti-aliasing features. AlphaRegion can be constructed either by supersampling sub-scan lines of an image, from the scan lines of a gray-scale image, from an existing conventional 1-bit Region or alpha mask buffer, or directly from a scan-line conversion of a geometric shape. AlphaRegion stores image data into three arrays, yInfo, xInfo and alphaData. Methods provided with AlphaRegion include rendering methods for filling or clipping the area on the drawing surface and methods for combining two AlphaRegions using boolean combination operators OR, AND, XOR, SUBTRACT, or SUBTRACT_FROM.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07202876",
	"publication_date": "2007-04-10",
	"application_number": "10293594",
	"application_date": "2002-11-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Strategies for handling transactions based on policies",
	"summary": "",
	"abstract": "A transaction handling system and associated method are described for handling transactions based on a plurality of rule sets that apply to point sets (where the point sets contain points that can be consumed for goods and services, or have some other end-use connotation). Namely, the rule sets can be associated with respective point lots to define the characteristics and behavior of the respective point lots. For example, one rule in an applied rule set can determine whether a consumer is permitted to make a purchase without having sufficient points in the consumer's point lot, thus incurring a negative balance in the point lot. Another rule (e.g., a sandbox rule) can determine whether the consumer is permitted to use points only within a limited identified environment, or whether the consumer can use the points in any environment. An override rule set can override a default rule set on an individual account basis or on an individual consumer basis. Upon a transaction that affects a point lot, the transaction handling system can log the transaction in a record that is associated with the point lot.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07175072",
	"publication_date": "2007-02-13",
	"application_number": "11090322",
	"application_date": "2005-03-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Structured indexes on results of function applications over data",
	"summary": "",
	"abstract": "Indexed views or materialized views are used as a secondary index on a base table with multi-valued attributes. This provides for using the index to search in the nested data. Moreover, indexing is provided on the result of an unnest operation. Indexing a view on the result of an unnesting operation provides the ability to index the contents of a nested collection. One such unnesting operation is u201ccross apply unnestu201d. This provides additional options for a query execution plan, leading to a more optimized query. A back-join is provided from the indexed view to the base table to allow fields from the base table that are not present in the indexed view to be included in a result of a query on the table which is processed using the indexed view as an access path. This provides a means of including columns in the query result that are not in the indexed view but are in the base table. The back-join is supported from a single-table indexed view to the base table via a unique clustering key which acts as a logical row locator. Thus, the system can back-join to the base table from an indexed view via the unique clustering key. These features allow the use of indexed views to index a table on the contents of multi-set or multi-valued attributes.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07272598",
	"publication_date": "2007-09-18",
	"application_number": "11096149",
	"application_date": "2005-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Structured indexes on results of function applications over data",
	"summary": "",
	"abstract": "Indexed views or materialized views are used as a secondary index on a base table with multi-valued attributes. This provides for using the index to search in the nested data. Moreover, indexing is provided on the result of an unnest operation. Indexing a view on the result of an unnesting operation provides the ability to index the contents of a nested collection. One such unnesting operation is u201ccross apply unnestu201d. This provides additional options for a query execution plan, leading to a more optimized query. A back-join is provided from the indexed view to the base table to allow fields from the base table that are not present in the indexed view to be included in a result of a query on the table which is processed using the indexed view as an access path. This provides a means of including columns in the query result that are not in the indexed view but are in the base table. The back-join is supported from a single-table indexed view to the base table via a unique clustering key which acts as a logical row locator. Thus, the system can back-join to the base table from an indexed view via the unique clustering key. These features allow the use of indexed views to index a table on the contents of multi-set or multi-valued attributes.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07254574",
	"publication_date": "2007-08-07",
	"application_number": "10795623",
	"application_date": "2004-03-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Synchronization and recovery of peers in a peer to peer environment",
	"summary": "",
	"abstract": "A method is provided for use in a computer system that is operating in a peer-to-peer environment. The peer-to-peer environment has a host peer and at least one non-host peer. The method of the invention is used to order the operation requests of the peers so that operations are performed only in the order that they are processed by the host peer. The method includes providing a list of recognized operations which may be requested by any of the peers in the session. The host peer then receives at least one operation request from one of the peers, the request being selected from the provided list. The host then assigns a unique version number to the operation request, so that all peers within the session can determine the proper order in which to process orders given by the host peer.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07177950",
	"publication_date": "2007-02-13",
	"application_number": "09843452",
	"application_date": "2001-04-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Synchronization view",
	"summary": "",
	"abstract": "Systems and methods are disclosed for synchronizing data stored in remote stores. Data stored in locations such as computer applications, consumer electronic devices and Internet websites is synchronized with a central database within a computer device. The computer device may also store constraints that limit the type of data that may be synchronized with individual stores. A graphical user interface may use different formats or icons to distinguish between data stored in a store and data included within the central database.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07293047",
	"publication_date": "2007-11-06",
	"application_number": "10691905",
	"application_date": "2003-10-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for a consistency check of a database backup",
	"summary": "",
	"abstract": "A method for performing a consistency check on a database backup of a database is performed without requiring a full recovery of the original database from the database backup. Instead, a database view may be used as a smaller storage requirement tool for providing a transaction-consistent view of portions of an existing full database backup. The database view, in combination with the database backup and transaction log, contains all the information necessary to perform a consistency check on the database backup without a full reconstitution of the original database from the database backup. The consistency check may be run on the database view along with the database backup to verify the integrity of the full database backup to add improved reliability to a database recovery scheme.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07277905",
	"publication_date": "2007-10-02",
	"application_number": "10814459",
	"application_date": "2004-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for active diagnosis and self healing of software systems",
	"summary": "",
	"abstract": "An active diagnostic and self healing system involves a support server configured to monitor the state of application and operating system software on a remote client, one or more of whose applications or OS has been registered to the automatic service of the invention. Software drivers or other patches, fixes or updates may be automatically transmitted to the client device via Internet or other connectivity upon the detection of an application or OS crash or other software fault. The user may select criteria according to which fixes and updates may be effected. The fixes and updates may be stored in a knowledge base, vendor databases or other resources, for instance available via Internet or other connections.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07293201",
	"publication_date": "2007-11-06",
	"application_number": "10346371",
	"application_date": "2003-01-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for automatic label placement on charts",
	"summary": "",
	"abstract": "An algorithm is provided for optimizing the layout of labels associated with a visual data object such as a chart. The labels are first placed into a chart definition file that defines the labels as a shape. An initial layout of the labels is created and scored. The shapes are then manipulated iteratively until an optimal layout of the labels is obtained that corresponds to the layout having the score closest to an optimal score. The optimal layout is then used in rendering the visual data object on a screen.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07292244",
	"publication_date": "2007-11-06",
	"application_number": "10968619",
	"application_date": "2004-10-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for backing up and restoring data",
	"summary": "",
	"abstract": "Described is a system and method for allowing applications to interact with a common backup program in a uniform way. The system and method provides a communication mechanism for one or more applications to exchange information with the backup program regarding components of the applications. The information exchanged may include an identification of the components of each application. A component may be considered a group of files or resources that should be backed up or restored together. In this way, when a backup operation is initiated, each application may provide to the common backup program instructions describing the specific components to be backed up. In addition, each application may add other application-specific information useful during a restore of the backed up data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07162599",
	"publication_date": "2007-01-09",
	"application_number": "10996772",
	"application_date": "2004-11-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for browse information parsing without compilation",
	"summary": "",
	"abstract": "A dynamic browse information parser captures the location within a program at which symbols exist. The dynamic browse information parser also parses function bodies, capturing location of symbols within the function body. Upon selection of a symbol and type of information desired, a datastore of browse information is queried. If additional information is required for disambiguation, the dynamic browse information parser parses the source code again to find the indicated browse information. Optionally the browse information is displayed in a window.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07240340",
	"publication_date": "2007-07-03",
	"application_number": "10218142",
	"application_date": "2002-08-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for capturing kernel-resident information",
	"summary": "",
	"abstract": "A system, method and interface for consistently capturing kernel resident information are provided. An operating system architecture includes user mode modules and kernel mode applications. A user mode module initiates a kernel mode information request through an application program interface identifying one or more process threads of interest. A kernel mode module captures information corresponding to standard kernel mode information and corresponding to the specifically identified process threads. The information is returned in a pre-allocated buffer.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07302613",
	"publication_date": "2007-11-27",
	"application_number": "10712619",
	"application_date": "2003-11-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for concurrent operation of a wireless device in two disjoint wireless networks",
	"summary": "",
	"abstract": "A system and method for wireless network communications provides a u201cdual-modeu201d wireless device that operates concurrently as a member of two disjoint wireless networks, such as an infrastructure (u201cISu201d) network and an ad hoc (u201cAHu201d) network. The dual-mode device has a wireless controller driver inserted in its networking stack (e.g., the stack comprising of the Network and NDIS drivers) that exposes two virtual wireless network adapters, one for the first wireless network and one for the second wireless network. Each virtual wireless network adapter has an associated queue for queuing packets in the flow for the corresponding wireless network mode. The wireless controller driver controls the switching of the network mode. In one embodiment where the two networks include an IS network and an AH network, the mode switching is triggered by poll signals transmitted by an access point of the IS network. When the mode is switched from operating in the first network to operating in the second network, the first virtual network adapter is disabled and the second virtual network adapter is enabled, and the queued packets in the queue for the second virtual network adapter are transmitted over the second wireless network.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07194263",
	"publication_date": "2007-03-20",
	"application_number": "09954087",
	"application_date": "2001-09-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for coordinating bandwidth usage of a communication channel by wireless network nodes",
	"summary": "",
	"abstract": "A system and method is provided for coordinating wireless bandwidth usage of a common frequency band by wireless nodes in two disjoint networks, such as an infrastructure (u201cISu201d) network and an ad hoc (u201cAHu201d) network. When AH nodes move into the transmission range of an access point of the IS network, they register with the access point and listen to the access point to tell them when they are allowed to transmit data over a given transmission channel. The access point coordinates the bandwidth usage by broadcasting ad hoc mode poll signals to indicate that the ad hoc nodes may transmit over the channel, and sending infrastructure mode poll signals to indicate that a wireless node in the IS network can transmit over the given channel. The access point makes a fraction of the bandwidth available for communications by the wireless AH nodes in its transmission range, while guaranteeing the rest of the bandwidth for wireless nodes in the IS network.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07248570",
	"publication_date": "2007-07-24",
	"application_number": "09953980",
	"application_date": "2001-09-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for describing and automatically managing resources",
	"summary": "",
	"abstract": "A system and method for automatically allocating resources is provided. The system includes one or more components for automatically allocating one or more resources, based at least in part on data associated with the one or more resources, the data including at least one of, type data, instance data, characteristic data, and dynamically modifiable metadata. An alternative aspect of the system provides one or more components for automatically allocating one or more resources distributed on a plurality of resource allocation servers. The one or more components for automatically allocating the one or more resources can improve utilization of the capacity of the one or more resources. In an alternative embodiment the system includes an Application Programming Interface (API) operable to configure and/or control the one or more components for automatically allocating one or more resources.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07257635",
	"publication_date": "2007-08-14",
	"application_number": "11079422",
	"application_date": "2005-03-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for generating optimized binary representation of an object tree",
	"summary": "",
	"abstract": "A system and related techniques accept extensible application markup language (XAML) inputs corresponding to object trees, such as those representing user interface elements, and map those inputs to a binary construct. A mapping engine may generate tokenized binary outputs representing the XAML file input and ultimately the associated user interface or other object. The binary representation generated by the mapping engine may be optimized in multiple ways, including to encode dimension information such as length, width etc. of dialog boxes or other elements in the binary representation without a necessity for explicit definition. Other optimizations include the type indexing of data types when a novel instance of the type is first encountered, and embedding loader definitions to load the object or data reflected in the binary representation without having to do a lookup against loader lists.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07263654",
	"publication_date": "2007-08-28",
	"application_number": "11115330",
	"application_date": "2005-04-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for generating optimized binary representation of an object tree",
	"summary": "",
	"abstract": "A system and related techniques accept extensible application markup language (XAML) inputs corresponding to object trees, such as those representing user interface elements, and map those inputs to a binary construct. A mapping engine may generate tokenized binary outputs representing the XAML file input and ultimately the associated user interface or other object. The binary representation generated by the mapping engine may be optimized in multiple ways, including to encode dimension information such as length, width etc. of dialog boxes or other elements in the binary representation without a necessity for explicit definition. Other optimizations include the type indexing of data types when a novel instance of the type is first encountered, and embedding loader definitions to load the object or data reflected in the binary representation without having to do a lookup against loader lists.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07237194",
	"publication_date": "2007-06-26",
	"application_number": "10715114",
	"application_date": "2003-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing componentized transports and forms",
	"summary": "",
	"abstract": "Described is a system and method for managing and displaying messages within a mobile device. The invention provides a method for centrally controlling data flow throughout the communication system. The invention provides a means to receive a message over a communications medium, identify a registered form to handle the message, and to pass it to the registered form for display.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07191449",
	"publication_date": "2007-03-13",
	"application_number": "09785942",
	"application_date": "2001-02-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for specifying and utilizing hardware functionality by executing a common hardware register pseudo-language",
	"summary": "",
	"abstract": "A system and method that utilizes a common hardware register pseudo-language are disclosed. The present invention employs a common platform to specify hardware functionality and to execute hardware action(s). Hardware actions can be effectuated by performing a series of instructions, which comprise hardware register primitives and resources utilized by the primitives. The hardware register primitives are operations defined according to the common hardware register pseudo-language. The series of instructions can be loaded prior to boot or during initialization.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07200745",
	"publication_date": "2007-04-03",
	"application_number": "10661691",
	"application_date": "2003-09-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for storing and retrieving a field of a user defined type outside of a database store in which the type is defined",
	"summary": "",
	"abstract": "A type of an object that can be persisted in a database store is defined by a user. The type definition comprises fields and behaviors, each field having a respective data type. One or more fields of the type definition may be designated as containing data of a type that is to be stored as a file outside of the database store and separately from the other fields of the type definition. When a request is received to store an object that is an instance of the user defined type, the data in any so designated field of the object is stored in a file outside of the database store, preferably within a file system of the computer on which the database store is implemented. The data in each of the other fields of the object is stored within the database store in the usual manner. The database store maintains a link, or reference, between the persisted object and the data of the field that is stored as a file outside of the database store. Applications are provided u201cout of bandu201d access, via the file system of the computer, to the file in which the data of given field is stored outside the database store.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07287039",
	"publication_date": "2007-10-23",
	"application_number": "11121882",
	"application_date": "2005-05-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for testing, simulating, and controlling computer software and hardware",
	"summary": "",
	"abstract": "A system and method for providing an extensibility model to create device simulators. The system and method provide a generalized framework for the simulation of hardware devices controlled by software drivers with user and kernel mode programmability. The present invention also provides a framework that facilitates communication between applications operating user address space of an operating system and device drivers and device simulators operating in kernel mode address space of the operating system. In one embodiment, a framework provides a bi-directional communication channel that allows a test application in user address space of an operating system to communicate with a computer component operating in kernel address space of the operating system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07181382",
	"publication_date": "2007-02-20",
	"application_number": "10435481",
	"application_date": "2003-05-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for unified sign-on",
	"summary": "",
	"abstract": "A system that allows a user of a first domain to access a second domain. A request originates in the first domain to perform an action in the second domain. The request indicates a user of the first domain on whose behalf the request was originated. The access request is received by an adapter in the second domain. The adapter requests an access token for a user of the second domain who corresponds to the user of the first domain. A mapping table is used to identify which user in the second domain corresponds to the user in the first domain. Once the correct user of the second domain is identified, an access token for that user is returned to the adapter. The adapter then carries out the requested action by using the access token to impersonate the user of the second domain.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07275259",
	"publication_date": "2007-09-25",
	"application_number": "10463911",
	"application_date": "2003-06-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method providing API interface between XML and SQL while interacting with a managed object environment",
	"summary": "",
	"abstract": "The present invention relates to a system and methodology to facilitate data communications and data management between network entities operating in accordance with various data structures and operating environments. A managed class of application programming interfaces (API) are provided that support data communications between remote/local locations employing a first data structure and a second location supporting a second data structure (e.g., API for NET languages to access SQL Server via XML views). The managed class and associated APIs provide data transformations between such structures to facilitate communications and data management among various locations and architectures. In addition, the managed class and APIs facilitate operations between disparate object systems such as between managed and unmanaged object systems via interface support of a wrapper and associated marshalling technologies to bridge communications between such systems.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07275087",
	"publication_date": "2007-09-25",
	"application_number": "10175118",
	"application_date": "2002-06-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methods enabling a mix of human and automated initiatives in the control of communication policies",
	"summary": "",
	"abstract": "A system and method for identifying communication channels and appropriate timing of communications that facilitate enhancing or maximizing the utility of a communication between communicating parties, based on the participants' preferences and capabilities is provided. The system and method implement policies for facilitating optimal communications between communicating parties based on deterministic and/or uncertain preferences, capabilities and context, both present and predicted, where a decision to employ an initially selected channel and timing of communication may be overridden by contactor or contactee based on user-configurable triggers. The system and method further provide for mixed/multi-initiative overriding of the identified optimal communication channel and indicated best time for a communication. The methods can be implemented on a widescale communication system or within a single portable device. In one approach, the system attempts to optimize the inferred or directly accessed preferences of a contactee given the accessed or inferred preferences, capabilities and goals of the contactor while keeping the rationale and context of the contactee private. Such optimization can be achieved using preferences and policies concerning handling the attempted contact based on a deterministic specification or through inferring context, content and task under uncertainty by employing probabilistic or decision-theoretic inferences to attempt to maximize the expected utility of the communication to the contactee.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07251696",
	"publication_date": "2007-07-31",
	"application_number": "10281718",
	"application_date": "2002-10-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methods for providing histogram computation in a high precision rasterization data pipeline",
	"summary": "",
	"abstract": "A system and methods for implementing histogram computation, for example, into the rasterization pipeline of a 3-D graphics system, are provided. With the histogram computation mechanism, statistical histogram data may be generated for input data of any kind or retrieved from any source that may be specified in a 2-D array or specified in an immediate fashion to specialized data processing hardware. Depending on the nature of the input data, the data may be filtered before passing the data to data processing hardware for further processing. The data processing hardware may then apply an additional function to the input data set before calculation of the histogram data. Then, at some point, the data processing hardware may apply a function to the data to map the derived data to a real-valued function that can then be quantized to a histogram element in the range specified from zero to the number of histogram elements minus one. The corresponding element in this histogram is then incremented according to the data received as it passes through the graphics processor. Advantageously, relatively expensive host computing resources are conserved, and developers are insulated from the tedious details required of implementing histogram computation from the ground up each time it becomes desirable to compute histogram data in connection with an application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07188047",
	"publication_date": "2007-03-06",
	"application_number": "11209954",
	"application_date": "2005-08-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methods for providing runtime spelling analysis and correction",
	"summary": "",
	"abstract": "A system and methods are provided for runtime spelling analysis and correction in a computing system. Misspelled entries or input text is automatically corrected turning the misspelled entries or input text into valid entries or text. The words used for spell checking and correction may be collected through multiple channels or from multiple sources, including words commonly found on the Web, and in users' entries or input text, as well as words from a standard language lexicon, all of which may be in one or more languages. The word(s) are automatically corrected only when there is a very high confidence that the correction is desirable. In various embodiments, the system implements a plurality of mechanisms with which the user can override the correction if invoked.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07296019",
	"publication_date": "2007-11-13",
	"application_number": "10972593",
	"application_date": "2004-10-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methods for sharing configuration information with multiple processes via shared memory",
	"summary": "",
	"abstract": "A system and methods for sharing configuration information with multiple services, or processes, via shared memory. The configuration information, typically, comprises runtime information utilized by processes during operation, including without limitation, information describing data communication connections between the local computer and other computing resources (i.e., port and wire information), and information defining numeric values or character string values (i.e., genre and record information). The system architecture includes a plurality of APIs which: reside at the local computer; populate, manage, and control access to a shared memory containing the configuration information; and, are executable only by processes executing at the local computer, thereby limiting access to the shared memory. Access to the configuration information is further limited to only those processes identified as having appropriate permission. The methods enable the configuration information of the shared memory to be modified during local computer operation and without impeding access to the configuration information.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07302531",
	"publication_date": "2007-11-27",
	"application_number": "11599978",
	"application_date": "2006-11-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methods providing enhanced security model",
	"summary": "",
	"abstract": "The present invention relates to a system and methodology to facilitate security for data items residing within (or associated with) a hierarchical database or storage structure. A database security system is provided having a hierarchical data structure associated with one or more data items. The system includes a security component that applies a security policy to the data items from a global location or region associated with a database. Various components and processes are employed to enable explicit and/or inherited security properties to be received by and propagated to the data items depending on the type of data structure encountered or processed.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07251822",
	"publication_date": "2007-07-31",
	"application_number": "10691999",
	"application_date": "2003-10-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and related methods for accessing management functionality through a command line utility",
	"summary": "",
	"abstract": "A command line utility is described that overlays the management infrastructure of an enterprise to provide easier command options for administrators to effectively manage the enterprise. The primary intent of the command line utility is to facilitate management of the environment without requiring administrators to write scripts or navigate a vast schematized enterprise exposed through the management infrastructure. The command line utility provides command options through class aliases that enable the mapping of management queries and operations to a common term or friendly name that can be extended both in an alias file or at run time in the command line.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07278143",
	"publication_date": "2007-10-02",
	"application_number": "09896207",
	"application_date": "2001-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for reconfiguring a computer between a high power and high functionality configuration and a low power and low functionality configuration",
	"summary": "",
	"abstract": "An intermittent computing system state and intermittent computing module is described for a power-constrained personal computer. In the intermittent computing system state, the power-constrained personal computer may transition between sub-states of the intermittent computing system state according to an intermittent computing schedule. Each intermittent computing sub-state may be associated with hardware power sets and software power sets. Altering power supply to hardware components referenced by hardware power sets may alter power consumed in associated intermittent computing sub-states. A caching mechanism may be configured to make it likely that software components referenced by software power sets are loaded into powered storage types during associated intermittent computing sub-states. In the intermittent computing system state, periods of high functionality may be available over extended periods without the high power consumption associated with a continuous working system state. Average power consumption may be adjusted by varying the intermittent computing schedule.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07203854",
	"publication_date": "2007-04-10",
	"application_number": "10777410",
	"application_date": "2004-02-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method, and computer program product for file encryption, decryption and transfer",
	"summary": "",
	"abstract": "An encrypted file system (EFS) and an underlying file transfer protocol to permit a client to encrypt, decrypt, and transfer file(s) resident on a server are disclosed. A user at a client computer can open, read, and write to encrypted files, including header information associated with encrypted files, and can add users to or remove users from an encrypted file.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07280956",
	"publication_date": "2007-10-09",
	"application_number": "10692843",
	"application_date": "2003-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method, and computer program product for general environment mapping",
	"summary": "",
	"abstract": "A reflection image and an environment map are loaded into memory. During rendering of an object, an environment texture sample is retrieved from the environment map based on a reflection vector stored in a pixel of the reflection image. The retrieved environment texture sample is then applied to the object. The object thus rendered is stored in a frame buffer.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07161595",
	"publication_date": "2007-01-09",
	"application_number": "11275423",
	"application_date": "2005-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for diffusing clipping error",
	"summary": "",
	"abstract": "Systems and methods are provided for diffusing clipping error in a computing system. When a data set contains values which are to be restricted to a range, and the data set includes one or more values which are beyond the range, the invention provides methodology that is an improvement over clipping extraneous values to the range or squeezing the values to the range. Advantageously, systems and methods are provided for distributing or diffusing error to neighboring samples of the data set, thereby spreading localized error, and minimizing the effects associated with remapping the data set to the restrictive range.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07233963",
	"publication_date": "2007-06-19",
	"application_number": "10103220",
	"application_date": "2002-03-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for downloading custom or prefabricated processing routines to programmable graphics chips",
	"summary": "",
	"abstract": "A method and system for controlling the algorithmic elements in 3D graphics systems via an improved 3D graphics API is provided. In one aspect, in a 3D graphics system having privatized formats with privatized drivers used to increase the efficiency of display, existing problems are eliminated that are associated with multiple redundant copies of the publicly formatted graphics data made in host system memory pursuant to various graphics operations e.g., lock and unlock operations. The ability to make a system copy of publicly formatted data is exposed to the developer, eliminating the creation of unnecessary, and redundant copies. Efficient switching between the privatized and public format remains hidden from the developers so that applications execute efficiently while removing consideration thereof from the developers. Thus, developers are free to consider other tasks. In the event that a developer wishes to make a copy of the data, the data is copied pursuant to an operation that the developer calls and over which the developer has control, ensuring that multiple redundant copies of the graphics data are not made in host system memory.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07187384",
	"publication_date": "2007-03-06",
	"application_number": "10973330",
	"application_date": "2004-10-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for managing interactions from multiple speech-enabled applications",
	"summary": "",
	"abstract": "Systems and methods are described for speech systems that utilize an interaction manager to manage interactionsu2014also known as dialoguesu2014from one or more applications. The interactions are managed properly even if multiple applications use different grammars. The interaction manager maintains an interaction list. An application wishing to utilize the speech system submits one or more interactions to the interaction manager. Interactions are normally processed in the order in which they are received. An exception to this rule is an interaction that is configured by an application to be processed immediately, which causes the interaction manager to place the interaction at the front of the interaction list of interactions. If an application has designated an interaction to interrupt a currently processing interaction, then the newly submitted application will interrupt any interaction currently being processed and, therefore, it will be processed immediately.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07299185",
	"publication_date": "2007-11-20",
	"application_number": "11264488",
	"application_date": "2005-11-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for managing multiple grammars in a speech recognition system",
	"summary": "",
	"abstract": "Systems and methods are described for a speech system that manages multiple grammars from one or more speech-enabled applications. The speech system includes a speech server that supports different grammars and different types of grammars by exposing several methods to the speech-enabled applications. The speech server supports static grammars that do not change and dynamic grammars that may change after a commit. The speech server provides persistence by supporting persistent grammars that enable a user to issue a command to an application even when the application is not loaded. In such a circumstance, the application is automatically launched and the command is processed. The speech server may enable or disable a grammar in order to limit confusion between grammars. Global and yielding grammars are also supported by the speech server. Global grammars are always active (e.g., u201ccall 9-1-1u201d) while yielding grammars may be deactivated when an interaction whose grammar requires priority is active.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07167831",
	"publication_date": "2007-01-23",
	"application_number": "10067696",
	"application_date": "2002-02-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for optimizing geometric stretch of a parametrization scheme",
	"summary": "",
	"abstract": "Systems and methods are provided for optimizing the geometric stretch of a parametrization scheme. Given an arbitrary mesh, the systems and methods construct a progressive mesh (PM) such that all meshes in the PM sequence share a common texture parametrization. The systems and methods minimize geometric stretch, i.e., small texture distances mapped onto large surface distances, to balance sampling rates over all locations and directions on the surface. The systems and methods also minimize texture deviation, i.e., u201cslippageu201d error based on parametric correspondence, to obtain accurate textured mesh approximations. The technique(s) begin by partitioning the mesh into charts using planarity and compactness heuristics. Then, the technique(s) proceed by creating a stretch-minimizing parametrization within each chart, and by resizing the charts based on the resulting stretch. Then, the technique(s) simplify the mesh while respecting the chart boundaries. Next, the parametrization is re-optimized to reduce both stretch and deviation over the whole PM sequence. The charts may then be packed into a texture atlas for improved texture mapping in connection with a parametrization scheme.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07230623",
	"publication_date": "2007-06-12",
	"application_number": "10981228",
	"application_date": "2004-11-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for optimizing geometric stretch of a parametrization scheme",
	"summary": "",
	"abstract": "Systems and methods are provided for optimizing the geometric stretch of a parametrization scheme. Given an arbitrary mesh, the systems and methods construct a progressive mesh (PM) such that all meshes in the PM sequence share a common texture parametrization. The systems and methods minimize geometric stretch, i.e., small texture distances mapped onto large surface distances, to balance sampling rates over all locations and directions on the surface. The systems and methods also minimize texture deviation, i.e., u201cslippageu201d error based on parametric correspondence, to obtain accurate textured mesh approximations. The technique(s) begin by partitioning the mesh into charts using planarity and compactness heuristics. Then, the technique(s) proceed by creating a stretch-minimizing parametrization within each chart, and by resizing the charts based on the resulting stretch. Then, the technique(s) simplify the mesh while respecting the chart boundaries. Next, the parametrization is re-optimized to reduce both stretch and deviation over the whole PM sequence. The charts may then be packed into a texture atlas for improved texture mapping in connection with a parametrization scheme.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07262769",
	"publication_date": "2007-08-28",
	"application_number": "10978098",
	"application_date": "2004-10-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for providing a fine to coarse look ahead in connection with parametrization metrics in a graphics system",
	"summary": "",
	"abstract": "Systems and methods are provided for providing a fine-to-coarse look ahead in connection with parametrization in a graphics system. The use of a variety of parametrization metrics may be supplemented and improved by the fine-to-coarse look ahead techniques of the invention. First, the metric of a parametrization is minimized using a coarse-to-fine hierarchical solver, and then accelerated with a fine-to-coarse propagation. The resulting parametrizations have increased texture resolution in surface regions with greater signal detail at all levels of detail in the progressive mesh sequence.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07218322",
	"publication_date": "2007-05-15",
	"application_number": "11185102",
	"application_date": "2005-07-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for providing presence tracking in a distributed computing system",
	"summary": "",
	"abstract": "Providing presence tracking of nodes of a logical network in a distributed computing system. Each node in a logical network tracks the presence of all other nodes on the network. This presence information is used by the protocol to optimize bandwidth utilization of the shared physical media, by not attempting to communicate with a device that does not appear to be or is unlikely to be present. In one embodiment, the presence tracking is applied to a power line carrier (PLC) physical media because of PLC's low-bandwidth characteristics, low baud rate characteristics and the widespread usage of plugged-in devices, the presence of which on the network is generally more transient by nature.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07257644",
	"publication_date": "2007-08-14",
	"application_number": "10251370",
	"application_date": "2002-09-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for providing secure server key operations",
	"summary": "",
	"abstract": "A key management interface that allows for different key protection schemes to be plugged into a digital rights management system is disclosed. The interface exposes the functionality of signing data, decrypting data encrypted using a public key, and re-encrypting data encrypted using the public key exported by the interface to a different authenticated principal (i.e., a different public key). Thus, a secure interface can be provided such that the data does not enter or leave the interface in the clear. Such an interface exports private key operations of signing and decryption, and provides security and authentication for the digital asset server in licensing and publishing. During publishing, a client can encrypt asset keys such that only a specified entity can decrypt it, using a plug-in, for example, that implements the aforementioned interface. During licensing, the license issuing entity can use the interface to decrypt keys for assets and to sign licenses and rights labels such that the asset is protected and consumable by a host digital rights management platform. The interface thus provides an abstraction for key operations.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07174021",
	"publication_date": "2007-02-06",
	"application_number": "10185641",
	"application_date": "2002-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for providing time-and weight-based flexibly tolerant hardware ID",
	"summary": "",
	"abstract": "Systems and methods for implementing a hardware ID with time- and weight-based flexibility use a hardware ID (HWID) including identifying information about hardware components. When software is run, a current HWID is generated. When the current HWID is compared to a stored HWID to determine if the two HWIDs match, a time vector and a weight vector are used in the comparison. A running matching score is kept of matches. For each hardware component, the weight vector indicates the weight given to a correct match of the hashed value for the hardware component. For example, if the weight value for the hardware component is three and there is a match, then the running total is increased by three. For each hardware component, the time vector may indicate an expiration period after which a change in the component may be allowed. For example, if the expiration period for the component is one year, and one year has passed since activation, the running total may be increased even though the component's information in the verification HWID does not match the current component information.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07302590",
	"publication_date": "2007-11-27",
	"application_number": "10337064",
	"application_date": "2003-01-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for sending coordinated notifications",
	"summary": "",
	"abstract": "Systems and methods for delivering coordinated notifications to a user. Each entity that is involved in a transaction with a user generates notifications to update the user about the status of the transaction. The notifications are sent to a notification interface that is accessible by each entity. The notification interface sends the notifications to a router that delivers the notifications to the user according to user preferences, notification status, and user online status. The notifications each contain an identifier that enables them to be coordinated and delivered to the appropriate user.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07257610",
	"publication_date": "2007-08-14",
	"application_number": "09997368",
	"application_date": "2001-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for shared browsing among a plurality of online co-users",
	"summary": "",
	"abstract": "Systems and methods for establishing and maintaining a shared browsing experience are disclosed. A method for establishing a shared browsing experience includes an inviter computer communicating to an invitee computer, via an online messenger communication path, an invitation to establish a co-browsing experience. The invitee computer communicates to the inviter computer, via the first communication path, an acceptance of the invitation. A co-browsing communication path is then established between the inviter computer and the invitee computer. Information relating to the shared browsing experience is then communicated between the inviter and invitee computers via the co-browsing communication path.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07287054",
	"publication_date": "2007-10-23",
	"application_number": "10160848",
	"application_date": "2002-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for transforming query results into hierarchical information",
	"summary": "",
	"abstract": "A computerized system and method for transforming (formatting or aggregating) the results of a query into a hierarchical information stream, such as an extensible Markup Language (XML) data stream is disclosed. A database server receives a query and generates a rowset. A rowset processor, using the mode specified in the query, processes the rowset and query to generate the XML data stream. For the u201cauto1u201d mode, the rowset processor transforms a rowset into an XML data stream using primary-foreign key information specified in the query to determine nesting. For the u201cauto2u201d mode, the rowset processor transforms a rowset into an XML data stream using table ordering information included in the query to determine nesting. For the u201cexplicitu201d mode, the rowset processor transforms a rowset into an XML data stream using the explicit organizational information specified in the query. In one embodiment, it is easier for a developer to compose expressions to generate nested hierarchical structures than previous formulations and simpler semantics are provided without implicit hierarchy inference. The syntax of an embodiment of the hierarchical formatting function includes optional arguments including a name option, a root option, map option, namespace options and a null option.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07213017",
	"publication_date": "2007-05-01",
	"application_number": "10623369",
	"application_date": "2003-07-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Token-based object description",
	"summary": "",
	"abstract": "Token-based object description is disclosed. In one embodiment, a system includes a plurality of objects and a set of tokens. Each object has at least one attribute, such as a type. Each token is mapped to a unique attribute. Each object is describable utilizing the set of tokens.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07293041",
	"publication_date": "2007-11-06",
	"application_number": "10413238",
	"application_date": "2003-04-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Trade-off/semantic networks",
	"summary": "",
	"abstract": "Trade-off/semantic networks are described, including identifying a plurality of elemental attributes, relating each of the plurality of elemental attributes to each other to configure a trade-off relationship between each of the plurality of elemental attributes, and defining an agility extension configured to modify a value for each of the plurality of elemental attributes, where the value affects the trade-off relationship between each of the plurality of elemental attributes. A system is also described, including a user interface configured to provide user input to and data output from a trade-off semantic network, a plurality of elemental attributes arranged within the trade-off semantic network, a configuration module for relating each of the plurality of elemental attributes to each other to configure a trade-off relationship between each of the plurality of elemental attributes, and a logic module configured to define an agility extension configured to modify a value for each of the plurality of elemental attributes, where the value affects the trade-off relationship between each of the plurality of elemental attributes.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07302418",
	"publication_date": "2007-11-27",
	"application_number": "10966302",
	"application_date": "2004-10-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transactional file system",
	"summary": "",
	"abstract": "A transactional file system performs multiple file system operations as part of a user-level transaction. An application specifies that operations should be handled as part of a transaction, and the application is given a file handle associated with the transaction context. Operations are managed consistent with transactional behavior and data isolation is provided with multiple versions of a file and by tracking copies of pages that have changed. Transactional readers do not receive changes to a file made by transactional writers, until the transactional writer commits the transaction and the reader reopens the file. Logging and recovery are also facilitated by logging page data separate from the main log, with a unique signature that enables the log to determine whether a page was fully flushed to disk prior to a system crash. Namespace isolation is also provided until a transaction commits via isolation directories.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07257595",
	"publication_date": "2007-08-14",
	"application_number": "11009662",
	"application_date": "2004-12-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transferring application secrets in a trusted operating system environment",
	"summary": "",
	"abstract": "Transferring application secrets in a trusted operating system environment involves receiving a request to transfer application data from a source computing device to a destination computing device. A check is made as to whether the application data can be transferred to the destination computing device, and if so, whether the application data can be transferred under control of the user or a third party. If these checks succeed, a check is also made as to whether the destination computing device is a trustworthy device running known trustworthy software. Input is also received from the appropriate one of the user or third party to control transferring of the application data to the destination computing device. Furthermore, application data is stored on the source computing device in a manner that facilitates determining whether the application data can be transferred, and that facilitates transferring the application data if it can be transferred.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07243230",
	"publication_date": "2007-07-10",
	"application_number": "09993340",
	"application_date": "2001-11-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Type bridges",
	"summary": "",
	"abstract": "Methods, systems, and computer program products for converting an object of one type to an object of another type that allow for the runtime operation of the conversion process to be altered or customized. The conversion may occur within an extensible serialization engine that serializes, deserializes, and transforms objects of various types. The runtime operation of the serialization engine is altered by one or more extension routines that implement the desired customizations or extensions, without requiring replacement of other existing routines. Based on type information, identified for an initial object, the object is converted to an intermediate representation which permits runtime modification, including modification of object names, object types, and object data. The intermediate representation of the initial object is modified in accordance with extension routines that alter the runtime operation of the serialization engine, and the intermediate representation is converted to a final object and type.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07197512",
	"publication_date": "2007-03-27",
	"application_number": "10401244",
	"application_date": "2003-03-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Unified message system for accessing voice mail via email",
	"summary": "",
	"abstract": "Systems, methods, and structures are discussed that enhance media processing. One aspect of the present invention includes a data structure to enhance media processing. The data structure includes a terminal data structure to instantiate terminal objects and a speech recognition terminal data structure that extends the terminal data structure. Another aspect of the present invention includes a data structure to enhance media processing. This data structure includes a terminal data structure to instantiate terminal objects and a speech generation terminal data structure that extends the terminal data structure. These data structures may be used to implement an internet protocol interactive voice response system, an internet protocol unified message system, and speech-enabled Web applications.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07257203",
	"publication_date": "2007-08-14",
	"application_number": "10882777",
	"application_date": "2004-07-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Unified network thread management",
	"summary": "",
	"abstract": "In order to provide flexibility for a developer, a network API is provided which allows for a network event (for example, the receipt of data over the network) to be handled by one thread from among a predetermined number of dedicated threads. The number of dedicated threads is specified by the application at runtime and can be modified at runtime as well. Where the number of dedicated threads specified is greater than zero, dedicated threads are created which handle network events and call the specific callback functions of the application in response to the network events. Thus the number of such callback events from threads that can occur at one time is limited by the number of dedicated threads specified by the application. When the number of dedicated threads is specified as zero, no callback events can occur except when the application assigns a certain time period for them. Thus, when the number of dedicated threads created is zero, the application has control over the amount of processing time allotted to the network layer. Network events are handled when the application issues calls a u201cDo Worku201d method. While executing this method, network events are handled.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07249355",
	"publication_date": "2007-07-24",
	"application_number": "10322136",
	"application_date": "2002-12-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Unique digital content identifier generating methods and arrangements",
	"summary": "",
	"abstract": "In accordance with certain aspects of the present invention, enhancements have been developed to further extend the performance of the generic DVD navigator component. Of significance herein, was the need to assign a unique identifier to DVD discs and the like. Doing so allows player applications to easily identify, catalogue and associate information with each disc. Previous u201cuniqueu201d ID algorithms have failed to produce useful and reliable identifiers. Thus, improved methods and arrangements are provided for use in the generic DVD navigator that produces substantially, statistically unique disc IDs.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07184653",
	"publication_date": "2007-02-27",
	"application_number": "10966945",
	"application_date": "2004-10-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Universal graphic adapter for interfacing with hardware and means for determining previous output ranges of other devices and current device intial ranges",
	"summary": "",
	"abstract": "The subject invention relates to a Universal Graphics Adapter (UGA) that is a hardware-independent design that encapsulates and abstracts low-level graphics hardware in a standard manner through firmware. UGA is a firmware standard, intended to wrap existing or planned hardware, including VGA. UGA does not require the use of real-mode assembly language, direct hardware register, or frame buffer access to program, thus providing advantages over conventional systems. UGA supports basic drawing operations, continuous display modes, and power management. As a firmware-based standard, UGA facilitates updating a system to support both evolving and new hardware features.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07257650",
	"publication_date": "2007-08-14",
	"application_number": "10885955",
	"application_date": "2004-07-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Universal naming scheme for peer-to-peer resources",
	"summary": "",
	"abstract": "Peer devices register with a resource locator service so that the peer devices can be uniquely identified in a networking environment. An addressing scheme addresses a peer resource in the networking environment based on the unique identifier of a peer device that is a master publisher of the resource. Based on the addressing scheme, the resource locator service can track the location of the master publisher of the resource as well as additional locations of peer devices that have cached the resource and made it available. In various embodiments, the resource locator service can service requests for peer resources by providing a list of locations where the resource is expected to be available or, in the case of non-compatible requester, provide access to the resource itself.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07200667",
	"publication_date": "2007-04-03",
	"application_number": "11067572",
	"application_date": "2005-02-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Updating metadata stored in a read-only media file",
	"summary": "",
	"abstract": "Storing metadata updates for a read-only media file. The media file has content and metadata describing the content. Responsive to a user or application program updating the metadata, the invention stores the updates to the metadata in an update data store when the media file is in the read-only state. The update data store is associated with the media file. The invention reconciles the metadata of the media file with the updates stored in the update data store to create updated metadata. The invention attempts to write the updated metadata to the media file when the media file is available with write access.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07272592",
	"publication_date": "2007-09-18",
	"application_number": "11026844",
	"application_date": "2004-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Use of queues",
	"summary": "",
	"abstract": "A system and process for ensuring the smooth flow of electronic ink is described. Dynamic rendering is give priority over other event handlers. Priority may be the use of one or more queues to order when events occur and may be performing dynamic rendering prior to other steps.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07212296",
	"publication_date": "2007-05-01",
	"application_number": "10986826",
	"application_date": "2004-11-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Using icons to show the validity of computer language structural elements applicable to a computer-generated document",
	"summary": "",
	"abstract": "A method and system are provided for using icons to show the validity of markup language elements applicable to a computer-generated document. A user of a computer-generated document such as a word processing document attaches a schema to the document setting out the rules and procedures with which the document may be annotated with markup language elements for structuring portions of the document. According to one aspect of the invention, the user attaches an Extensible Markup Language (XML) schema to the document for setting the data types, data structures and XML elements rules for the document so that the user may annotate the document with XML structure. When the user begins to annotate the document with a desired markup language structure, such as XML structure, an application pane is displayed to the user to provide the user with assistance in applying allowable XML elements at allowable locations and in allowable order and number. A series of icons are presented alongside the presented elements in the application pane to indicate the level of validity of a given element based on the editing context and location in the document.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07225398",
	"publication_date": "2007-05-29",
	"application_number": "10180666",
	"application_date": "2002-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Using language models to expand wildcards",
	"summary": "",
	"abstract": "A method of inputting text is provided in which a first portion of an input string is received from a user, the first portion of the input string including at least one keystroke representing a wildcard character of the input string. A second portion of the input string is then received, with the second portion including one or more keystrokes all representing non-wildcard characters of the input string.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07277029",
	"publication_date": "2007-10-02",
	"application_number": "11159711",
	"application_date": "2005-06-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Virtual network with adaptive dispatcher",
	"summary": "",
	"abstract": "Methods and systems for providing a virtual network are disclosed. At least one layer of abstraction is created between network service applications and conventional network protocols by inserting an adaptive dispatcher between applications and network transport services on each machine in a network. The message protocol in the virtual network is extensible, allowing application programs to create new headers within any message as needed. The adaptive dispatcher contains handlers that route and dispatch messages within the virtual network based on arbitrary content within each message, including any combination of headers and/or data content. Each device on the virtual network has a virtual address to which messages are directed, allowing devices to move within the network without reconfiguring routing tables. Handlers may be automatically created when an event meeting predefined criteria occurs, including the non-occurrence of a condition, making the virtual network self-healing and adaptive to reconfiguration.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07257817",
	"publication_date": "2007-08-14",
	"application_number": "09993656",
	"application_date": "2001-11-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Virtualized and realized user interface controls",
	"summary": "",
	"abstract": "One aspect relates to a process and associated apparatus that implements a user interface (UI) control within a computer environment. The computer environment includes a managed code portion and a native code portion. The implementing the UI control includes creating a plurality of control node data structures within the managed code portion. A managed UI control is virtualized within the managed code portion by associating and/or batching at least two of the control node data structures. The UI control is realized in the native code portion by migrating the managed UI control into the native code portion. In certain aspects, the UI control is populated and parented prior to the realizing.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07281248",
	"publication_date": "2007-10-09",
	"application_number": "10299460",
	"application_date": "2002-11-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "VPN enrollment protocol gateway",
	"summary": "",
	"abstract": "A virtual private network (VPN) enrollment protocol gateway is described herein. The protocol gateway is implemented as a registration authority that operates as an intermediary between routers and a certificate authority, allowing routers operating in accordance with one protocol to obtain and maintain certificates for a VPN from a certificate authority operating in accordance with another protocol. In accordance with one aspect, the gateway protocol supports various requests from the router, including router enrollment requests, get certificate revocation list request, get certificate requests, get certificate authority certificate requests, and password requests.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07171556",
	"publication_date": "2007-01-30",
	"application_number": "11134713",
	"application_date": "2005-05-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web address converter for dynamic web pages",
	"summary": "",
	"abstract": "Herein is described an implementation of a Web address converter, which helps dynamic Web sites get the attention of spiders of Internet search engines.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07228360",
	"publication_date": "2007-06-05",
	"application_number": "10997265",
	"application_date": "2004-11-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web address converter for dynamic web pages",
	"summary": "",
	"abstract": "A Web address converter helps dynamic Web sites get the attention of spiders of Internet search engines. With the Web address converter, requests from Web browsers using static addresses access corresponding dynamic Web pages and requests from search engines generate an instance of a Web page having links with static addresses pointing to corresponding dynamic Web pages. The Web address converter performs both Dynamic-to-Static (D-to-S) address conversion and Static-to-Dynamic (S-to-D) address conversion. D-to-S address conversion is done when generating a spider-friendly main page for a spider of a search engine to crawl. S-to-D address conversion is used when a browser uses a static address to access a corresponding dynamic Web page. The static address that the browser uses was originally created when the spider-friendly main page was generated.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07200677",
	"publication_date": "2007-04-03",
	"application_number": "09560703",
	"application_date": "2000-04-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web address converter for dynamic web pages",
	"summary": "",
	"abstract": "Herein is described an implementation of a Web address converter, which helps dynamic Web sites get the attention of spiders of Internet search engines. With the Web address converter, requests from Web browsers using static addresses access corresponding dynamic Web pages and requests from search engines generate an instance of a Web page having links with static addresses pointing to corresponding dynamic Web pages. The Web address converter performs either or both Dynamic-to-Static (D-to-S) address conversion and Static-to-Dynamic (S-to-D) address conversion. D-to-S address conversion is done when generating a spider-friendly main page for a spider of a search engine to crawl. S-to-D address conversion is used when a browser uses a static address to access a corresponding dynamic Web page. The static address that the browser uses was originally created when the spider-friendly main page was generated.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07299298",
	"publication_date": "2007-11-20",
	"application_number": "10997237",
	"application_date": "2004-11-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web address converter for dynamic web pages",
	"summary": "",
	"abstract": "Herein is described an implementation of a Web address converter, which helps dynamic Web sites get the attention of spiders of Internet search engines. With the Web address converter, requests from Web browsers using static addresses access corresponding dynamic Web pages and requests from search engines generate an instance of a Web page having links with static addresses pointing to corresponding dynamic Web pages. The Web address converter performs both Dynamic-to-Static (D-to-S) address conversion and Static-to-Dynamic (S-to-D) address conversion. D-to-S address conversion is done when generating a spider-friendly main page for a spider of a search engine to crawl. S-to-D address conversion is used when a browser uses a static address to access a corresponding dynamic Web page. The static address that the browser uses was originally created when the spider-friendly main page was generated.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07275114",
	"publication_date": "2007-09-25",
	"application_number": "10893006",
	"application_date": "2004-07-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web garden application pools having a plurality of user-mode web applications",
	"summary": "",
	"abstract": "A web server system is provided which includes a web garden made up of a plurality of instances of a user-mode web application. The web server includes a kernel-mode listener service that is configured to receive web requests and selectively provide the TCP/IP connections to selected instances of the user-mode web application. It does this by establishing a plurality of request queues corresponding to the number of instances of the web application logic. The web server also includes a user-mode administrative process that is configured to selectively start each of the instances of the web application and maintain the size of the resulting web garden, for example, based on a defined maximum web garden size parameter.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07228551",
	"publication_date": "2007-06-05",
	"application_number": "10377176",
	"application_date": "2003-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Wizard framework",
	"summary": "",
	"abstract": "The information exchanging facility is used by one wizard page to request the information it needs although it need not know where the information may have come from. This allows wizard pages that have already been developed in one wizard to be reused and placed into new wizards. This information exchanging facility is part of an architectural software framework that aids in the design of an interactive help utility, such as a wizard, that guides a user through steps of a particular task.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07308678",
	"publication_date": "2007-12-11",
	"application_number": "10346884",
	"application_date": "2003-01-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Wrapped object for observing object events",
	"summary": "",
	"abstract": "An execution environment accommodating object-based software transparently monitors interactions with software objects to generate operational management information for managing programs executing at plural computers. Notifications are directed to a software manager in the form of events, which can additionally be provided to applications or user programs. The software manager can group the events into sets and derive various operational management metrics from them to provide an overall picture of a program's performance, including availability. A hierarchical arrangement feature facilitates gathering information for programs scattered over plural computers. An alert feature provides warnings if metrics fall outside a specified threshold. In addition, the alert feature can automatically subscribe to additional sets of events to dynamically select the information collected by the software manager. Since the operational management information is collected transparently by logic outside the objects, manual instrumentation of the program is unnecessary, and software management technology is made available to organizations without software management expertise.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07243271",
	"publication_date": "2007-07-10",
	"application_number": "10864648",
	"application_date": "2004-06-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for optimizing geometric stretch of a parametrization scheme",
	"summary": "",
	"abstract": "Systems and methods are provided for optimizing the geometric stretch of a parametrization scheme. Given an arbitrary mesh, the systems and methods construct a progressive mesh (PM) such that all meshes in the PM sequence share a common texture parametrization. The systems and methods minimize geometric stretch, i.e., small texture distances mapped onto large surface distances, to balance sampling rates over all locations and directions on the surface. The systems and methods also minimize texture deviation, i.e., u201cslippageu201d error based on parametric correspondence, to obtain accurate textured mesh approximations. The technique(s) begin by partitioning the mesh into charts using planarity and compactness heuristics. Then, the technique(s) proceed by creating a stretch-minimizing parametrization within each chart, and by resizing the charts based on the resulting stretch. Then, the technique(s) simplify the mesh while respecting the chart boundaries. Next, the parametrization is re-optimized to reduce both stretch and deviation over the whole PM sequence. The charts may then be packed into a texture atlas for improved texture mapping in connection with a parametrization scheme.",
	"url": null,
	"owner": "Microsoft Crporation",
	"publication_number": "07224358",
	"publication_date": "2007-05-29",
	"application_number": "10901826",
	"application_date": "2004-07-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Programmable processor and method with wide operations",
	"summary": "",
	"abstract": "A programmable processor and method for improving the performance of processors by expanding at least two source operands, or a source and a result operand, to a width greater than the width of either the general purpose register or the data path width. The present invention provides operands which are substantially larger than the data path width of the processor by using the contents of a general purpose register to specify a memory address at which a plurality of data path widths of data can be read or written, as well as the size and shape of the operand. In addition, several instructions and apparatus for implementing these instructions are described which obtain performance advantages if the operands are not limited to the width and accessible number of general purpose registers.",
	"url": null,
	"owner": "Microunity Systems Engineering, Inc.",
	"publication_number": "07301541",
	"publication_date": "2007-11-27",
	"application_number": "10616303",
	"application_date": "2003-07-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Programmable processor with group floating-point operations",
	"summary": "",
	"abstract": "A programmable processor that comprises a general purpose processor architecture, capable of operation independent of another host processor, having a virtual memory addressing unit, an instruction path and a data path; an external interface; a cache operable to retain data communicated between the external interface and the data path; at least one register file configurable to receive and store data from the data path and to communicate the stored data to the data path; and a multi-precision execution unit coupled to the data path. The multi-precision execution unit is configurable to dynamically partition data received from the data path to account for an elemental width of the data and is capable of performing group floating-point operations on multiple operands in partitioned fields of operand registers and returning catenated results. In other embodiments the multi-precision execution unit is additionally configurable to execute group integer and/or group data handling operations.",
	"url": null,
	"owner": "Microunity Systems Engineering, Inc.",
	"publication_number": "07216217",
	"publication_date": "2007-05-08",
	"application_number": "10646787",
	"application_date": "2003-08-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Output system and output method used in the same for printing and producing copies",
	"summary": "",
	"abstract": "An output system having a data processor and an printer or other output device for outputting data in a specific format, which is sent from the data processor, to which is installed driver software for controlling the output device. Whether the data on output request passes the driver software is determined in sending data to the output device. Data are prohibited from being sent to the output device for output requests on which data bypasses the driver software.",
	"url": null,
	"owner": "Minolta Co., Ltd.",
	"publication_number": "07305566",
	"publication_date": "2007-12-04",
	"application_number": "09753601",
	"application_date": "2001-01-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and methods for correlating messages sent between services",
	"summary": "",
	"abstract": "Disclosed are methods and apparatus for effectively correlating messages sent between services. In general, a message interchange network is configured to manage the use of services by remote entities or services within a computer network. In general terms, correlation information is stored for each message. The correlation information includes information for correlating each message with a specific call between two services and a specific session between two or more services.",
	"url": null,
	"owner": "Minor Ventures, LLC",
	"publication_number": "07249195",
	"publication_date": "2007-07-24",
	"application_number": "10728356",
	"application_date": "2003-12-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and methods for provisioning services",
	"summary": "",
	"abstract": "Disclosed are methods and apparatus for effectively provisioning services for access by other entities or services. In general, a service manager is configured to manage the provisioning of services between remote entities within a computer network. In general terms, a remote entity offers a service to another remote entity through the service manager. The service manager facilitates formation of the offer to one or more Invitee(s) specified by the service provider. After an offer is formed, it may then be provided to the specified Invitee(s). After an Invitee receives an offer, the Invitee may accept the offer through the service manager or let the offer expire. The service manager also preferably tracks the status of each offer and whether each specified Invitee has accepted such offer. After an Invitee accepts an offer, the service manager preferably records information sufficient for the Invitee to use the offered service.",
	"url": null,
	"owner": "Minor Ventures, LLC.",
	"publication_number": "07305454",
	"publication_date": "2007-12-04",
	"application_number": "10727089",
	"application_date": "2003-12-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Resource sharing with sliding constraints",
	"summary": "",
	"abstract": "The resource sharing system according to the present invention dynamically adjusts the priorities at which requests from applications in different request classes (or classes of service) for a shared resource, are processed. The dynamic priority of a request class is based in part on the average resource allocation to requests in this request class, and in part on settings for the minimum and maximum allocations to the request class. The average resource allocation is the proportion of time the shared resource has been assigned to requests of this class relative to other classes. The dynamic adjustment of priorities uses u201csliding constraintsu201d whereby the priorities are caused to u201cslideu201d with the average resource allocation, and the priority imposes a constraint on when the requests of a resource class can be satisfied: namely, when there are no other requests from higher-priority request classes waiting for the resource.",
	"url": null,
	"owner": "Mitel Networks Corporation",
	"publication_number": "07222345",
	"publication_date": "2007-05-22",
	"application_number": "09933994",
	"application_date": "2001-08-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multimode electronic calipers having ratiometric mode and simplified user interface",
	"summary": "",
	"abstract": "A multimode electronic measuring instrument is provided that includes a ratiometric mode of operation. During the ratiometric mode, a desired dimension is established as a stored reference dimension u201cXu201d. After the reference dimension is stored in memory, subsequent ratiometric measurement readouts will equal a current measurement distance u201cXu201d divided by the reference dimension X. A ratiometric measurement according to this invention indicates the relationship of a current dimension to another readily changed (reference) dimension. The ratiometric mode of operation can be implemented in combination with conventional function caliper functions to provide a multimode caliper having a simple and intuitive user interface. Setting the reference dimension and interpreting the ratiometric measurement display are particularly easy, to facilitate intuitive understanding and operation.",
	"url": null,
	"owner": "Mitutoyo Corporation",
	"publication_number": "07246032",
	"publication_date": "2007-07-17",
	"application_number": "11595408",
	"application_date": "2006-11-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for monitoring host to tool communications",
	"summary": "",
	"abstract": "An aspect of the present invention includes a method and device for listening to communications between processes and tools, recording report and report trigger definitions, matching reports from tools with the recorded definitions, and translating messages into a context-insensitive format. Other aspects of the present invention include dynamically enhancing tool status reports, migrating processes form tool control hosts to distributed processors, and screening requests for tool status information from hosts and distributed processors. More detailed descriptions of aspects of the present invention are described in the claims, specification and drawings.",
	"url": null,
	"owner": "MKS Instruments, Inc.",
	"publication_number": "07200671",
	"publication_date": "2007-04-03",
	"application_number": "09935213",
	"application_date": "2001-08-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "E-business mobility platform",
	"summary": "",
	"abstract": "A platform () allows end users to engage in a session with servers such as content providers, corporate systems, commercial services or ASPs. A session object is associated with each session, attributes of which include the channelu2014thereby allowing changing of a channel during a session. Request/event objects are associated with the session object as requests/notifications arise, and these objects are shared with other modules. Hosted services may be physically resident on the platform or may be accessed transparently via interfaces. A device/channel neutral mark-up language extended from a presentation mark-up language is used as a single common form from which the delivered content is derived. The content from a service is generated by an executable process, normally (but not exclusively) in the extended mark-up language. The derivation of deliverable content is performed via a dynamic and configurable sequence of providers that manipulate the original content in stages.",
	"url": null,
	"owner": "MobileAware Technologies Limited",
	"publication_number": "07287093",
	"publication_date": "2007-10-23",
	"application_number": "09920943",
	"application_date": "2001-08-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Plug-in API for protocol and payload transformation",
	"summary": "",
	"abstract": "Systems and methods for using plug-in modules to process transactions in a proxy, wherein portions of the transaction information such as client requests and corresponding server responses may be transformed before delivery to their destinations. One embodiment comprises an application programming interface (API) implemented in a proxy that enables the use of individual plug-in modules to perform transaction processing, including transformations on requests and/or responses handled by the proxy. In one embodiment, transactions are broken down into stages comprising initializing the transaction, sending an opening statement, getting a request, transforming the request, logging in and obtaining authorization, generating a response, transforming the response, sending the response, and terminating the transaction. Because the proxy uses plug-in modules for the stages, functionality and protocol support can be easily modified, and code re-use is increased.",
	"url": null,
	"owner": "MobiTV, Inc.",
	"publication_number": "07246360",
	"publication_date": "2007-07-17",
	"application_number": "10360952",
	"application_date": "2003-02-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for dynamic extension of device management tree data model on a mobile",
	"summary": "",
	"abstract": "A mobile device having a framework () comprising a logical device management tree (), a device management engine (), and a plurality of application specific logical device management sub-trees () logically connected to the logical device management tree.",
	"url": null,
	"owner": "Motorola Inc.",
	"publication_number": "07242929",
	"publication_date": "2007-07-10",
	"application_number": "11086496",
	"application_date": "2005-03-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for transmitting data in a communication system",
	"summary": "",
	"abstract": "A communication system distributes the functions of a socket abstraction layer of the prior art between a socket abstraction layer included in an client communication device, such as a mobile subscriber, and a socket abstraction layer in a an agent communication device, such as an infrastructure serving the mobile subscriber. By so distributing the functions of the socket abstraction layer, headers may be reduced in signaling between the client communication device and the corresponding agent communication device as part of call set ups and tear downs and in the exchange of payloads between the client and agent communication devices. By reducing the required headers, overhead is reduced and bandwidth is conserved in communications between the client and agent communication devices, such as in over-the-air communications between a mobile subscriber and an infrastructure serving the mobile subscriber, with resulting increases in system capacity and improvements in system efficiency.",
	"url": null,
	"owner": "Motorola, Inc.",
	"publication_number": "07165112",
	"publication_date": "2007-01-16",
	"application_number": "09887831",
	"application_date": "2001-06-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Subcarrier time offsets for improved peak-to-average power of a transmitter",
	"summary": "",
	"abstract": "A system, wireless device () and method reduce the peak-to-average power of a transmitter by creating at least two sampled carrier data streams, running each carrier through a separate delay block, mixing each carrier over in frequency an appropriate amount, resulting in at least two frequency division multiplexed signals, and combining the at least two frequency division multiplexed signals together. The four sampled carrier data streams may each have a bandwidth of 25 kHz. Each separate delay block is less than 20% of its corresponding symbol time. The transmitter may be used to transmit wideband integrated digitally enhanced network (WiDEN) signals.",
	"url": null,
	"owner": "Motorola, Inc.",
	"publication_number": "07313188",
	"publication_date": "2007-12-25",
	"application_number": "10610107",
	"application_date": "2003-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Collaborative environment for producing software products",
	"summary": "",
	"abstract": "Traditionally, a software product is produced through distinctive stages, such as development stage, quality control stage and a production stage, often resulting in difficulty of communications and lack of collaborations among the stages. To provide a true collaborative environment, techniques for creating a model are described. The model, in one perspective, is a collection of instances of environments needed for the stages to achieve a predetermined status of the software product. According to one embodiment, the model includes a plurality of first and second elements. Each of the first elements pertains to one of the instances and each of the second elements represents relationships between or among the first elements. Further the model may include a plurality of third elements, each carrying instructions or data. As a result, a model, accessible by each of the stages, provides a collaborative environment and is applicable to each of the stages, synchronizes changes and facilitates communications among the stages, thus greatly improving collaborations, communications and efficiency of producing the software product.",
	"url": null,
	"owner": "mValent, Inc.",
	"publication_number": "07167865",
	"publication_date": "2007-01-23",
	"application_number": "10610424",
	"application_date": "2003-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Protosubstrates",
	"summary": "",
	"abstract": "The invention provides a nanolithographic protosubstrate adapted for nanolithographic formation of nanostructures on the protosubstrate comprising: a substrate having a top surface exposed for nanolithographic formation of nanostructures, wherein the top surface comprises: electrically insulating surface regions; and at least one discreet electrode topology surrounded by the electrically insulating surface regions, wherein the electrode topology is adapted with electrical interconnections for electrically coupling the electrode topology to an external device.",
	"url": null,
	"owner": "NanoInk, Inc.",
	"publication_number": "07199305",
	"publication_date": "2007-04-03",
	"application_number": "10444061",
	"application_date": "2003-05-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for efficient DMA transfer and buffering of captured data events from a nondeterministic data bus",
	"summary": "",
	"abstract": "A system and method for efficient transfer and buffering of captured data events. The system includes data capture logic configured to capture data events from a nondeterministic data bus; a system memory including a plurality of addressable locations, where a subset of the plurality of addressable locations is configured as a data event buffer; a DMA transfer engine configured to transfer the captured data events from the data capture logic to a region of the data event buffer as portions of the captured data events become available from the data capture logic; and an application configured to access the data event buffer to process the captured data events without the DMA transfer operation being stopped. In response to the region being filled, the DMA transfer engine may perform the DMA transfer operation to a different region of the data event buffer without the DMA transfer operation being stopped.",
	"url": null,
	"owner": "National Instruments Corp.",
	"publication_number": "07200691",
	"publication_date": "2007-04-03",
	"application_number": "10743672",
	"application_date": "2003-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for real-time processing of nondeterministic captured data events",
	"summary": "",
	"abstract": "A system and method for real-time processing of nondeterministic captured data events. The system includes data capture logic configured to capture data events from a nondeterministic data bus; a system memory including a plurality of addressable locations, where a subset of the plurality of addressable locations is configured as a data event buffer; a DMA transfer engine configured to transfer the captured data events from the data capture logic to a region of the data event buffer as portions of the captured data events become available from the data capture logic; and an application configured to retrieve captured data events from the data event buffer and to display the retrieved data events substantially in real time with respect to the occurrence of the corresponding captured data events on the nondeterministic data bus.",
	"url": null,
	"owner": "National Instruments Corp.",
	"publication_number": "07191257",
	"publication_date": "2007-03-13",
	"application_number": "10743416",
	"application_date": "2003-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Configuring a GUI element to subscribe to data",
	"summary": "",
	"abstract": "System and method for configuring a graphical user interface (GUI) element to publish data to a data target and/or subscribe to data from a data source. During program development, a developer associates a GUI element with a program, e.g., for receiving user input data and/or indicating data to the user. The developer configures the GUI element to publish data associated with the GUI element to a data target and/or to subscribe to data from a data source, and specifies a data source or target for the data connection. The program is executed, during which the program automatically determines and uses an appropriate protocol for interfacing with the data source/target to connect to or open the data source and/or target, and receive data from the data source, which is provided to and displayed by the GUI element, and/or send or write data associated with the GUI element to the data target.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07287230",
	"publication_date": "2007-10-23",
	"application_number": "09737527",
	"application_date": "2000-12-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Creation of application system installer",
	"summary": "",
	"abstract": "System and method for creating an application system installer. A root deployable for an application system is received, and programmatically analyzed to determine a root deployer. The root deployer is programmatically analyzed to determine zero or more deployables, and one or more files-to-install. For each respective deployable, a respective deployer is programmatically determined that analyzes the respective deployable to determine any further deployables and files-to-install. This process is repeated for each of the further deployables until all deployables for the respective deployable have been determined and analyzed, and all files-to-install have been determined. The application system installer is then generated using the determined files-to-install, where the installer is operable to programmatically deploy the application system onto a target system to perform the function. Determining zero or more deployables may also include determining one or more supporting sub-installers, where the installer is then generated using the determined files-to-install and supporting sub-installers.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07228541",
	"publication_date": "2007-06-05",
	"application_number": "10346577",
	"application_date": "2003-01-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic routing for a measurement system",
	"summary": "",
	"abstract": "System and method for performing dynamic routing in a measurement system to perform a measurement task. The system includes a computer and one or more measurement devices. One or more topography descriptions (TD) representing connectivity between devices and/or device components in the measurement system are received and preprocessed to generate corresponding graphs. A routing expert receives and analyzes a routing specification indicating source and destination terminals in the measurement system. The system dynamically computes a plurality of routes from the source terminal to the destination terminal by traversing the graphs and selecting the plurality of routes based on a metric. The computed routes are stored in a run-time specification for use at runtime to perform the measurement task. At runtime, a route is selected from the plurality of routes, and the system configures the one or more measurement devices with the selected route for performing the measurement task.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07184919",
	"publication_date": "2007-02-27",
	"application_number": "10232190",
	"application_date": "2002-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Measurement module interface protocol database and registration system",
	"summary": "",
	"abstract": "System and method for providing a measurement module (MM) interface for configuring a measurement system. The method includes creating a MM and one or more MM interface programs implementing respective MM interface protocols (MMIP) for the measurement module. An MMIP server is accessed and the MM registered with the MMIP server. The MM interface programs are stored on the MMIP server, where they are each downloadable from the MMIP server and usable to program a functional unit on a carrier unit, enabling the carrier unit to communicate with the MM in accordance with the respective MMIP. A MM is installed in the measurement system and provides ID to a carrier unit of the system. The MMIP server is accessed and, based on the ID, payment information, etc., a MM interface program is downloaded and used to configure the carrier unit to enable communication with the MM in performing a task.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07165005",
	"publication_date": "2007-01-16",
	"application_number": "10194927",
	"application_date": "2002-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Measurement system graphical user interface for easily configuring measurement applications",
	"summary": "",
	"abstract": "System and method for using a graphical user interface (GUI) to generate a measurement task specification (MTS) for performing a measurement task. The measurement task includes measurement and/or signal generation. A measurement task specifier presents a GUI which guides a user in specifying the measurement task. The GUI presents a plurality of GUI elements, e.g., panels, for specifying a plurality of parameters for the measurement task, including measurement type, devices, channels, timing, and/or triggering. The GUI receives user input indicating values for the parameters, and may provide default values for at least some of the parameters. The GUI stores the parameter values in a memory, analyzes the parameter values, and generates the MTS in response to the analyzing. The MTS is then useable to produce a program which implements the measurement task. The specifier may programmatically generate the program, e.g., a graphical program, which is executable to perform the task.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07162387",
	"publication_date": "2007-01-09",
	"application_number": "10128843",
	"application_date": "2002-04-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Optimized storage for measurement data",
	"summary": "",
	"abstract": "A system and method for storing measurements. Each measurement may include bulk data and attribute data. The bulk data and the attribute data may be stored using different storage mechanisms. In one embodiment, relational database technology may be used to store the attribute data. Relational database technology may facilitate querying or searching on the attribute data. The bulk data may be stored in a database specialized for storing bulk data.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07191184",
	"publication_date": "2007-03-13",
	"application_number": "10137723",
	"application_date": "2002-05-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Programmable hardware element with cartridge controllers for controlling modular measurement cartridges that convey interface information",
	"summary": "",
	"abstract": "System and method for measurement, DAQ, and control operations which uses small form-factor measurement modules or cartridges with a re-configurable carrier unit, sensors, and a computer system to provide modular, efficient, cost-effective measurement solutions. The measurement module includes measurement circuitry, e.g., signal conditioner and/or signal conversion circuitry, and interface circuitry for communicating with the carrier unit. The module communicates interface information to the carrier unit, which informs the computer system how to program or configure a functional unit on the carrier unit to implement the communicated interface, or sends the information directly to the computer system. The computer system programs the carrier unit with the interface, and the programmed carrier unit and measurement module together function as a DAQ, measurement, and/or control device. The carrier unit may receive multiple cartridges, each having a respective interface protocol, where the carrier unit is configurable to support the respective protocols sequentially and/or in parallel.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07254512",
	"publication_date": "2007-08-07",
	"application_number": "11402470",
	"application_date": "2006-04-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Shared routing in a measurement system",
	"summary": "",
	"abstract": "System and method for managing routing resources for a measurement task. The system includes a computer and one or more measurement devices. The legs of a route for routing signals in performing the measurement task are created by, for each respective leg: determining if a routing resource for the respective leg is not currently used in an existing route. If not, then the resource is configured with a desired configuration of the respective leg, and a resource reservation indicated, e.g., by incrementing a resource usage count. If the resource is currently used, the desired configuration is compared with the resource's current configuration. If the current configuration conforms to the desired configuration, a resource reservation is indicated, otherwise, an error message indicating that the leg failed is returned, and optionally, an alternative leg for the route is created which includes a different resource than the respective leg. The route is stored.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07293058",
	"publication_date": "2007-11-06",
	"application_number": "10231504",
	"application_date": "2002-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method enabling asynchronous execution of a test executive subsequence",
	"summary": "",
	"abstract": "A system and method for asynchronous execution of a test executive subsequence. A first test executive sequence (calling sequence) may be created and configured to asynchronously call a second test executive sequence (subsequence). In one embodiment, a u201csubsequence callu201d step may be included in the first test executive sequence, wherein the subsequence call step is operable to asynchronously call the second test executive sequence when the subsequence call step is executed. In response to executing the first test executive sequence, the second test executive sequence may also be executed, asynchronously from the first test executive sequence. The user may specify various options affecting execution of the second test executive sequence (the subsequence). For example, the user may specify various aspects of the execution environment or execution location for the subsequence.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07191361",
	"publication_date": "2007-03-13",
	"application_number": "09944521",
	"application_date": "2001-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for accessing registers of a hardware device in a graphical program",
	"summary": "",
	"abstract": "A system and method for creating a graphical program which accesses registers of a hardware device. In one embodiment, a register access node or primitive may be included in a graphical program, such that when the graphical program is executed on the computer system, the register access node is operable to access (i.e., either read or write) registers of a hardware device in the computer system. The method may comprise first displaying a register access node in the graphical program in response to user input. For example, the user may select the register access node from a palette and drag and drop the register access node onto a window of the graphical program being created. The user may then configure the register access node to access one or more registers of a selected hardware device, e.g., by using a user interface for performing this configuration. In one embodiment, the computer may store a description of the hardware device, wherein the register access node uses the description of the hardware device to access registers of the hardware device during execution of the graphical program. In one embodiment, configuring the register access node may include displaying a list of registers or a list of fields of registers described in the description of the hardware device and receiving user input to select one or more of the registers from the list of registers. The list may also or instead comprise a list of mnemonic names of registers and/or a list of mnemonic names of fields in the registers. The user may thus configure the register access node to access selected registers described in the description of the hardware device.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07213207",
	"publication_date": "2007-05-01",
	"application_number": "09742523",
	"application_date": "2000-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for automatically generating a graphical program in response to a state diagram",
	"summary": "",
	"abstract": "System and method for programmatically generating a graphical program in response to state diagram information. The state diagram information specifies a plurality of states and state transitions. A graphical program generation program (GPG program), receives the state diagram information and automatically, i.e., programmatically, generates a graphical program (or graphical program portion) based on the state diagram information. The GPG program automatically includes graphical source code in a block diagram of the graphical program, which serves as a framework of the states specified by the state diagram information and the state transitions, with various u201cplaceholdersu201d or u201ccontainersu201d enabling the user to easily fill in the graphical program with source code specifying execution instructions for each state and Boolean conditions for each state transition. The specific graphical source code automatically generated depends on programming features supported by a particular graphical programming development environment with which the graphical program is associated.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07200838",
	"publication_date": "2007-04-03",
	"application_number": "09747091",
	"application_date": "2000-12-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for configuring a reconfigurable system",
	"summary": "",
	"abstract": "A system and method for configuring a reconfigurable I/O (RIO) device to perform a function in response to user requirements. A graphical user interface program receives user input specifying a function. A configuration generation program generates a hardware configuration program based on the user input. The hardware configuration program is usable to configure a device to perform the function, where the device includes a programmable hardware element and one or more fixed hardware resources coupled to the programmable hardware element. The hardware configuration program is deployable onto the programmable hardware element and specifies usage of the fixed hardware resources by the programmable hardware element in performing the function. The GUI program is further executable to display icons on a display corresponding to at least a subset of the fixed hardware resources, and to modify an appearance of respective fixed hardware resource icons as the corresponding fixed hardware resources are allocated.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07290244",
	"publication_date": "2007-10-30",
	"application_number": "10055241",
	"application_date": "2001-10-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for programmatically creating a graphical program",
	"summary": "",
	"abstract": "A computer-implemented system and method for programmatically/dynamically creating or editing a graphical program. The ability to programmatically create/edit graphical programs enables applications and tools to automatically create or modify a graphical program or a portion of a graphical program. In the preferred embodiment, any operation which a user may perform while interactively editing a graphical program (e.g., connect two objects, change the position of an object, change the color of an object, etc.) may be performed programmatically.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07159183",
	"publication_date": "2007-01-02",
	"application_number": "09518492",
	"application_date": "2000-03-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for programmatically generating a graphical program in response to program information",
	"summary": "",
	"abstract": "A system and method for programmatically generating a graphical program or a portion of a graphical program in response to receiving program information is disclosed. During execution of a graphical program generation (GPG) program, the GPG program receives program information specifying functionality of the graphical program to be generated. In one embodiment the program information does not specify specific nodes in the graphical program or connections among the nodes. In response to the program information, the GPG program programmatically generates a graphical program (or graphical program portion) that implements the specified functionality.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07210117",
	"publication_date": "2007-04-24",
	"application_number": "09745023",
	"application_date": "2000-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for synchronizing software execution",
	"summary": "",
	"abstract": "System and method for synchronizing software execution in a computer system. Threads or processes executing in the computer system are synchronized via various types of synchronization objects. User input indicating a desire to specify a synchronization object operation is received, specifying a particular type of synchronization object on which to perform the operation, in response to which a graphical user interface, is displayed which is useable to specify a plurality of synchronization object operations, e.g., that are specific to a specified type of synchronization object. The graphical user interface enables the user to select a desired operation to perform on a synchronization object. The user may also specify additional configuration information for the operation. In response to the specified synchronization object operation, program instructions that are executable to perform the synchronization object operation may be programmatically created, and may subsequently be executed to perform the specified synchronization object operation.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07210105",
	"publication_date": "2007-04-24",
	"application_number": "09798661",
	"application_date": "2001-03-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interactive system and method",
	"summary": "",
	"abstract": "An interactive system for providing a mixed reality experience to a user, the system including an object having at least two surfaces, where each surface having a marker. The system also including an image capturing device to capture images of the object in a first scene and a microprocessor configured to track the position and orientation of the object in the first scene by tracking at least two surfaces of the object and identifying at least one marker. In addition, the microprocessor is also configured retrieve multimedia content associated with an identified marker and generates a second scene including the associated multimedia content superimposed over the first scene in a relative position to the identified marker and the microprocessor is configured to provide a mixed reality experience to a user using the second scene.",
	"url": null,
	"owner": "National University of Singapore",
	"publication_number": "07295220",
	"publication_date": "2007-11-13",
	"application_number": "10857698",
	"application_date": "2004-05-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Architecture and method for operational privacy in business services",
	"summary": "",
	"abstract": "Consent-based application programming interfaces (APIs) are used to provide privacy access controls to operational systems for business services accomplished particularly in an electronic and/or networked environment. An API implementation device or host provides a link between a channel application, configured to provide an interface with a customer, and privacy data as used by operational applications and obtained from databases such as data warehouses. The privacy APIs provide per-customer choice/consent to obtaining and/or retrieval of privacy information/data and per-customer access thereto. In one form, the privacy APIs are used in business initiated self service applications wherein an activity or event triggers business to customer initiation.",
	"url": null,
	"owner": "NCR Corp.",
	"publication_number": "07167842",
	"publication_date": "2007-01-23",
	"application_number": "09604825",
	"application_date": "2000-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods, systems and data structures to construct, submit, and process multi-attributal searches",
	"summary": "",
	"abstract": "Methods, systems, and data structures are provided to construct, submit, and process multi-attributal searches. An item, which includes a plurality of attributes, is received. Each attribute includes an attribute value. One or more of the attribute values are modified, and the modified item is sent to a number of data stores or processing devices. If a substantial match on the number of data stores or the processing devices is detected then answer items are received representing the substantial matches that were found on the number of data stores or the processing devices. The answer items are ranked and presented.",
	"url": null,
	"owner": "NCR Corp.",
	"publication_number": "07203675",
	"publication_date": "2007-04-10",
	"application_number": "10078616",
	"application_date": "2002-02-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Restartable scalable database system updates with user defined rules",
	"summary": "",
	"abstract": "A method, computer program, and computer system for updating a database system using a parallel application are disclosed. The parallel application includes a plurality of parallel operators. The method includes receiving records. A unique identifier is assigned to each record. A user defined rule condition is evaluated for each record. An action identifier is assigned to a subset of the records, based on the evaluation of the user defined rule condition. The records are transmitted to the database system with the unique identifiers and, for each of the subset of records, action identifiers.",
	"url": null,
	"owner": "NCR Corp.",
	"publication_number": "07249140",
	"publication_date": "2007-07-24",
	"application_number": "10160754",
	"application_date": "2002-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data mining assists in a relational database management system",
	"summary": "",
	"abstract": "A method, apparatus, and article of manufacture for performing data mining applications in a relational database management system (). Scalable Data Mining Functions () are performed directly against a relational database () by executing queries dynamically generated by an application programming interface () according to requested parameters.",
	"url": null,
	"owner": "NCR Corporation",
	"publication_number": "07162464",
	"publication_date": "2007-01-09",
	"application_number": "09806743",
	"application_date": "1999-10-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Encrypting keypad module",
	"summary": "",
	"abstract": "An encrypting keypad module () comprising a keypad () and an encryption unit () is described. The encryption unit () includes an interpreter () for receiving a file () containing data and instructions for processing the data. The encryption unit () is operable to process the data in the file () by interpreting the instructions in the file (). This enables a file () to be used to instruct the encryption unit () about the data that is to be operated on and the type of operations to be performed on the data.",
	"url": null,
	"owner": "NCR Corporation",
	"publication_number": "07298850",
	"publication_date": "2007-11-20",
	"application_number": "10004132",
	"application_date": "2001-10-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Incorporating predicrive models within interactive business analysis processes",
	"summary": "",
	"abstract": "A Customer Relationship Management (CRM) system that incorporates predictive models. The system is used by business users who are unfamiliar with the art of data mining. The predictive model, which is constructed by a model-building mechanism in a data mining subsystem, accepts the appropriate input attributes, performs calculations against a segment comprised of records, and generates an output attribute.",
	"url": null,
	"owner": "NCR Corporation",
	"publication_number": "07249048",
	"publication_date": "2007-07-24",
	"application_number": "09608595",
	"application_date": "2000-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods, systems, and data structures for modeling information quality and maturity",
	"summary": "",
	"abstract": "Methods, systems, and data structures for modeling information quality are provided. Information metrics, levels of maturity, and capabilities are integrated and linked with one another to provide an information quality and maturity assessment framework and tool. The framework is visualized and traversed in one or more dimensions. Sets of three metric values are provided to the tool for generating a current information quality state of a specific information repository. A desired information quality state is selected, and the tool generates a map of intermediate information quality states needed to optimally reach the desired state from the current state.",
	"url": null,
	"owner": "NCR Corporation",
	"publication_number": "07239985",
	"publication_date": "2007-07-03",
	"application_number": "10668837",
	"application_date": "2003-09-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mobile telephone set capable of altering key layout thereof and mobile telephone system including the same",
	"summary": "",
	"abstract": "A mobile telephone switching network , a server , and a terminal equipment  are connected to a network . A portable telephone set  manufactured by a manufacturer  is connected to the mobile telephone switching network . Not only a service application fabricated by an application maker  but also a key application determining a key layout based on API published by the manufacturer  are uploaded to the server . The service and the key applications are downloaded to the portable telephone set  in response to a requirement from the portable telephone set . In the portable telephone set , the service application is analyzed by using the key application downloaded as mentioned above. The key layout is then determined by analyzing the service application. The key layout is displayed on the liquid crystal display of the portable telephone set ",
	"url": null,
	"owner": "NEC Corporation",
	"publication_number": "07231230",
	"publication_date": "2007-06-12",
	"application_number": "10160110",
	"application_date": "2002-06-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for efficiently and flexibly utilizing spreadsheet information",
	"summary": "",
	"abstract": "In one aspect, the present invention relates to utilizing a spreadsheet by defining a parameter external to the spreadsheet and associating the parameter with the spreadsheet to define a parameterized workbook. In one embodiment, this utilization further comprises storing a location of the spreadsheet and storing the name of the parameter in the same storage module as the location. In another embodiment, it includes defining a result external to the spreadsheet, the result referencing one or more cells within the spreadsheet. In another embodiment, this utilization further comprises receiving a value for the parameter and generating the result based at least in part on the value and the spreadsheet. In another embodiment, it further comprises associating a type with the parameter. The type can define a range of values or attributes associated with the parameter.",
	"url": null,
	"owner": "NetView Technologies, Inc.",
	"publication_number": "07251776",
	"publication_date": "2007-07-31",
	"application_number": "10193015",
	"application_date": "2002-07-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Consistent logical naming of initiator groups",
	"summary": "",
	"abstract": "A technique enables efficient access to logical unit numbers (luns) or virtual disks (vdisks) stored on a storage system, such as a multi-protocol storage appliance. The technique allows a grouping of initiators by a u201chuman friendlyu201d logical name that is mapped to a lun or vdisk on the storage appliance. The initiators are clients operating in, e.g., a storage area network (SAN) environment that initiate requests for the vdisk using block-based access protocols, such as the Small Computer Systems Interface (SCSI) protocol encapsulated over TCP/IP (iSCSI) or over fibre channel (FCP). The technique enables access to the vdisk by all initiators that are members of the initiator group (igroup). An igroup is a logical named entity that is assigned to one or more addresses associated with one or more initiators. These addresses may comprise fibre channel (FC) world wide name (WWN) or iSCSI name identifiers (IDs). Therefore, rather than having to specify these IDs when desiring access to a vdisk, an initiator need only specify the human friendly name of the igroup.",
	"url": null,
	"owner": "Network Appliance, Inc.",
	"publication_number": "07293152",
	"publication_date": "2007-11-06",
	"application_number": "10421576",
	"application_date": "2003-04-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mechanism to survive server failures when using the CIFS protocol",
	"summary": "",
	"abstract": "The invention provides a method and system for re-establishing sessions between a server and its clients following a failure of the server, planned reboot of the server, or takeover by another server. At critical points within a server/client session, state is saved so as to be reliable and consistent. Upon reboot of the system, state is restored using that which was saved; returning the server to its pre-crash state and preserving sessions that were in progress prior to the reboot. Additionally, state saved by a first sever prior to failure or elective shutdown can be transferred to a second server in a takeover configuration also preserving sessions in progress.",
	"url": null,
	"owner": "Network Appliance, Inc.",
	"publication_number": "07296073",
	"publication_date": "2007-11-13",
	"application_number": "09660824",
	"application_date": "2000-09-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for transparently accessing a virtual disk using a file-based protocol",
	"summary": "",
	"abstract": "A system and method enabling transparent access to blocks, such as virtual disks, stored on a storage system using a file-based protocol. The system and method traps incoming file-based protocol open commands to check for a predetermined modification to the file name. If the system and method detects the predetermined modification, then the virtual disk associated with the file name is exported to the client issuing the open command and the client receives a response from the storage system. The client, in response to receiving the response to the open command, creates a new device instantiation for reading and writing raw data to the virtual disk.",
	"url": null,
	"owner": "Network Appliance, Inc.",
	"publication_number": "07181439",
	"publication_date": "2007-02-20",
	"application_number": "10423600",
	"application_date": "2003-04-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed data gathering and storage for use in a fault and performance monitoring system",
	"summary": "",
	"abstract": "Combining system fault and performance monitoring using distributed data collection and storage of performance data. Storage requirements are relaxed and real-time performance monitoring is possible. Data collection and storage elements can be easily configured via a central configuration database. The configuration database can be easily updated and changed. A federated user model allows normal end users to monitor devices relevant to the part of a service they are responsible for, while allowing administrative users to view the fault and performance of a service in an end-to-end manner.",
	"url": null,
	"owner": "Network General Corporation",
	"publication_number": "07246159",
	"publication_date": "2007-07-17",
	"application_number": "10286447",
	"application_date": "2002-11-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for visual application development without programming",
	"summary": "",
	"abstract": "A method and system for creating distributed applications without programming is disclosed. A Connection Editor interacts with an interface manager attached to each program in the visual development system. The interface manager allows connections to be made using the Connection Editor between the compatible properties of disparate programs by a visual process. Upon connection, the interface manager automates data flow between disparate properties without requiring any additional programming. Furthermore, the interface manager allows for dynamic properties to be exposed based on the run-time discovery of data.",
	"url": null,
	"owner": "NICE Systems Ltd.",
	"publication_number": "07240328",
	"publication_date": "2007-07-03",
	"application_number": "10224734",
	"application_date": "2002-08-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for efficient generation of texture coordinate displacements for implementing emboss-style bump mapping in a graphics rendering system",
	"summary": "",
	"abstract": "A graphics system including a custom graphics and audio processor produces exciting 2D and 3D graphics and surround sound. The system includes a graphics and audio processor including a 3D graphics pipeline and an audio digital signal processor. Emboss style effects are created using fully pipelined hardware including two distinct dot-product computation units that perform a scaled model view matrix multiply without requiring the Normal input vector and which also compute dot-products between the Binormal and Tangent vectors and a light direction vector in parallel. The resulting texture coordinate displacements are provided to texture mapping hardware that performs a texture mapping operation providing texture combining in one pass. The disclosed pipelined arrangement efficiently provides interesting embossed style image effects such as raised and lowered patterns on surfaces.",
	"url": null,
	"owner": "Nintendo Co., Ltd.",
	"publication_number": "07307640",
	"publication_date": "2007-12-11",
	"application_number": "11106673",
	"application_date": "2005-04-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Recirculating shade tree blender for a graphics system",
	"summary": "",
	"abstract": "A graphics system including a custom graphics and audio processor produces exciting 2D and 3D graphics and surround sound. A relatively low chip-footprint, versatile texture environment (TEV) processing subsystem is implemented in a pipelined graphics system circulates computed color and alpha data over multiple texture blending/shading cycles (stages). The texture-environment subsystem combines per-vertex lighting, textures and constant (rasterized) colors to form computed pixel color prior to fogging and final pixel blending. Blending operations for color (RGB) and alpha components are independently processed by a single sub-blend unit that is reused over multiple processing stages to combine multiple textures.",
	"url": null,
	"owner": "Nintendo Co., Ltd.",
	"publication_number": "07176919",
	"publication_date": "2007-02-13",
	"application_number": "11242138",
	"application_date": "2005-10-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Feature interactions",
	"summary": "",
	"abstract": "The present invention relates to a telecommunications system and method for providing a plurality of services, the services providing control for communication via the telecommunications system. The system comprises a switching point for triggering one or more services of said plurality of services for a communication. Each of the services may reserve at least one control characteristic. A service manager connected to the switching point is arranged to determine if at least two services can be provided for the communication based on information relating to control characteristics of said at least two services. A new service can be started only if the control characteristics it requires are not reserved by a previously invoked service. A service manager for use in a telecommunication system for managing the plurality of services is also disclosed.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07212621",
	"publication_date": "2007-05-01",
	"application_number": "10111324",
	"application_date": "2000-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for clustered SSL accelerator",
	"summary": "",
	"abstract": "Method and apparatus for clustered Secure Sockets Layer (SSL) acceleration where two or more SSL relays are connected in a cluster. Information is transferred between a first node (typically, the client) and one of the SSL relays where the transferred information is related to communication between the first node and a second node (typically, the server). The state information of an SSL connection between the first node and the one SSL relay is clustered. The clustering includes sharing the state information between the one SSL relay and each of the one or more SSL relays. Any of the SSL relays can take over all connections of another of the clustered SSL relays therefore, providing no interruption in the communication should any of the SSL relays fail.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07305450",
	"publication_date": "2007-12-04",
	"application_number": "10091479",
	"application_date": "2002-03-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus providing user programmable, personalized location-aware services",
	"summary": "",
	"abstract": "A method and system is disclosed to provide a personalized, location related service to a user of a mobile terminal. The method includes: (A) generating a service specification object that comprises a user-specified location and a message to be generated when the user arrives at the location with the MT; and (B) storing the service specification object for later use. The method further entails: (C) tracking the location of the mobile terminal; and when the location of the mobile terminal matches the location in the stored service creation object, (D) generating the message for activating a user-specified action.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07170881",
	"publication_date": "2007-01-30",
	"application_number": "10283808",
	"application_date": "2002-10-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system of configuring a speech recognition system",
	"summary": "",
	"abstract": "A speech control system and method are provided in which state definition information is loaded from a network application server. The state definition information defines possible states of the network application server and is used to determine a set of valid commands of the network application server. A validity of a text command obtained by converting an input speech command can be checked by comparing the text command with the determined set of valid commands. Thus, a transmission of erroneous text commands to the network application server can be prevented so as to reduce total processing time and response delays.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07212970",
	"publication_date": "2007-05-01",
	"application_number": "09809808",
	"application_date": "2001-03-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for call control in intelligent networks",
	"summary": "",
	"abstract": "The presentation of information identifying a calling user of a terminal device (MS-A) to a called terminal device (MS-B) in a communication involving a radio access network is triggered upon receipt of an incoming call; if triggered, the information is presented to a user at a man machine interface (MMI) of the terminal device; a user input is collected via the man machine interface (MMI) in response to the presentation, and the received call is controlled according to the collected user input. It becomes advantageously possible to initiate a retrieval procedure for calling party identifying information while the call is being controlled by a service control device and prior to the routing of the call to the called terminal device.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07161925",
	"publication_date": "2007-01-09",
	"application_number": "10091224",
	"application_date": "2002-03-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for loading user interface software",
	"summary": "",
	"abstract": "An electronic device, a storing means and a method for loading the user interface software of an expansion card in the electronic device. The electronic device comprises means for loading, starting and executing program modules in the electronic device. The expansion card can be coupled in a releasable manner to the electronic device. The user interface software is divided at least into a basic module and a user interface module. The loading of the user interface software is executed at least in two phases, wherein in the first phase the loading and start-up of the basic module is conducted, and in the second phase the loading and start-up of the user interface module is conducted. The second phase is conducted when the expansion card is coupled to the electronic device.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07281246",
	"publication_date": "2007-10-09",
	"application_number": "09575342",
	"application_date": "2000-05-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, apparatus and system for connecting system-level functionality of domestic OS of a mobile phone to any application operating system",
	"summary": "",
	"abstract": "A system level functionality of a domestic operating system (DOS) of a mobile terminal is connected to any application operating system by means of a DOS server that interfaces to various domestic operating systems with DOS-specific plug-ins. The DOS server interfaces to the application layer directly via a client interface.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07188347",
	"publication_date": "2007-03-06",
	"application_number": "10156752",
	"application_date": "2002-05-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mobile application service container",
	"summary": "",
	"abstract": "A mobile application service container is described. Unlike conventional services provided by operators and third party resellers, services built upon application service container framework provide enhanced interoperability while minimizing duplicative consumption of resources.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07167861",
	"publication_date": "2007-01-23",
	"application_number": "10184001",
	"application_date": "2002-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Smart terminal remote lock and format",
	"summary": "",
	"abstract": "A method and mobile terminal are disclosed for use in a wireless communication system, in order to increase security of the mobile terminal when it is lost, stolen, or misplaced by a user. The method includes receiving a guard message at the mobile terminal, authenticating the guard message, locking at least one communication capability of the mobile terminal, and also securing at least some data that is stored in the mobile terminal. Initiation of the method requires inputting a personal identification code at a location separate from the mobile terminal.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07184750",
	"publication_date": "2007-02-27",
	"application_number": "10813920",
	"application_date": "2004-03-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for authentication in a mobile communications system",
	"summary": "",
	"abstract": "The present invention provides an authentication method and apparatus for authenticating an identity of a subscriber attached to a network. According to the invention, in a network terminal, a subscriber identity module is used so that a response is obtained as a result of a challenge given to the identity module as input. A special security server in the network is also used so that when a terminal attaches to the network, a message of a new user is transmitted to the security server. Subscriber authentication information corresponding to the new user is fetched from the mobile communications system to the network, wherein the authentication information includes at least a challenge and a response. Authentication is performed based on the authentication information obtained from the mobile communications system by transmitting the challenge to the terminal through the network, by checking at the terminal that the challenging is unique from challenges used in previous authentication exchanges, by generating, if the challenge is unique, a response from the challenge in the identity module of the terminal and by comparing the generated response with the response received from the mobile communications system.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07280820",
	"publication_date": "2007-10-09",
	"application_number": "11293188",
	"application_date": "2005-12-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for optimizing link throughput in response to non-congestion-related packet loss",
	"summary": "",
	"abstract": "A system, apparatus, and method for providing secure loss recovery for packet loss due to bit errors and other non-congestion-related packet loss occurring over the communication link. An intermediary node in a network between a sending node and a receiving node identifies packet loss due to bit errors (PLB), or other non-congestion-based packet loss, over a network connection between the sending module and the network node. A loss notification signal is sent from the network node to the sending module in response to identification of the non-congestion-based packet loss. The PLB is verified at the sending module. A first loss recovery procedure is performed, different from a second loss recovery procedure associated with congestion-based packet loss, if the PLB is verified at the sending module.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07177272",
	"publication_date": "2007-02-13",
	"application_number": "10603593",
	"application_date": "2003-06-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Terminal-based link adaptation scheme having a detector which monitors application signaling and a requestor which requests a special channel based on the detection",
	"summary": "",
	"abstract": "Apparatus, and associated method, converts real-time multimedia information generated pursuant to an RTP protocol into a form amenable for transmission upon a radio channel, such as a radio channel defined in a cellular communication system. When converted, the informational content of the multimedia information is transmitted in a manner that achieves spectral efficiency and low, constant delay. Once transmitted over the radio channel, the multimedia information is converted back into form corresponding to the RTP protocol before being sent to the receiving station.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07158491",
	"publication_date": "2007-01-02",
	"application_number": "09705701",
	"application_date": "2000-11-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Implementation of multiple simultaneous calls in a mobile communication system",
	"summary": "",
	"abstract": "The invention relates to implementation of multiple simultaneous calls for a mobile station in a mobile communication system. A common traffic channel (TCH) is allocated to several simultaneous calls (applications u2013n) of the mobile station (MS), so that the calls share the capacity of the common channel. Logical links are established for each call inside a common radio link protocol or link access control protocol, which is established over the common traffic channel between the mobile station (MS) and an interworking function (IWF). The common traffic channel (TCH) is allocated when the first call or calls are set up, and the capacity of the traffic channel is adjusted dynamically during the calls. The capacity of the common traffic channel is increased or the allocated capacity is reallocated when a new call is added to the traffic channel. Correspondingly, the capacity is decreased or the allocated capacity is reallocated when a call is cleared from the common traffic channel. The common traffic channel is released after the last call has been cleared.",
	"url": null,
	"owner": "Nokia Networks Oy",
	"publication_number": "07227849",
	"publication_date": "2007-06-05",
	"application_number": "09647784",
	"application_date": "1999-04-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Selection of service implementation",
	"summary": "",
	"abstract": "The invention relates to selection of the implementation of a service, and particularly to selection of the implementation of a supplementary service in a mobile communication system, in a situation where a user can use different terminals the properties of which vary. In the solution of the invention, at least two different implementations are defined for a service, the terminal requirements of which differ from each other. The implementation of the service is selected (, and ) on the basis of the properties of the terminal used. Thus the implementation of the services is made as optimal and flexible as possible by implementing each service function at the most useful location considering the properties of the terminal and network.",
	"url": null,
	"owner": "Nokia Networks Oy",
	"publication_number": "07200385",
	"publication_date": "2007-04-03",
	"application_number": "09743328",
	"application_date": "1999-07-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transporting QoS mapping information in a packet radio network",
	"summary": "",
	"abstract": "A method and a GGSN support node for sending data packets to a mobile station in a mobile communications system from an external communication system. The GGSN receives data packets from the external communication system in a first plurality of data flows which it maps to a second plurality of data flows in the mobile communications system. It establishes at least one filter for controlling the mapping and associates the filter with the mobile station. It also maps at least one of the data flows on the basis of the filter and configures the filter on the basis of information which preferably originates from the mobile station.",
	"url": null,
	"owner": "Nokia Networks Oy",
	"publication_number": "07167447",
	"publication_date": "2007-01-23",
	"application_number": "09891509",
	"application_date": "2001-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Using information about software events to route contacts in a contact center",
	"summary": "",
	"abstract": "A need exists to provide software support in a simple and effective manner over long periods of time. At the same time there is a need to allow contact centers to route calls appropriately when those calls relate to complex software support queries. This needs to be achieved without requiring complex call routing methods and apparatus at the contact center. The present invention addresses these problems by using software error codes or the like to route calls in a contact center.",
	"url": null,
	"owner": "Nortal Networks Limited",
	"publication_number": "07212624",
	"publication_date": "2007-05-01",
	"application_number": "10253145",
	"application_date": "2002-09-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for changing a topology of a network",
	"summary": "",
	"abstract": "Methods and systems for processing a request of changing a first node having a first service connecting with a second node in a network environment are described herein. In one aspect of the invention, an exemplary method includes dynamically launching a second service at the first node, connecting the second service with the second node, directing requests for service to the second service, and terminating the first service. Other methods and systems are also described.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "07246178",
	"publication_date": "2007-07-17",
	"application_number": "10141444",
	"application_date": "2002-05-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Object-oriented network management interface",
	"summary": "",
	"abstract": "A system and method is provided for using an object-oriented interface for network management. An example system and method receives a management information base (MIB) including information related to one or more aspects of a network device, extracts a subset of information from the MIB describing at least one aspect of the network device, and generates a set of object-oriented classes and object-oriented methods corresponding to the subset of information in the MIB. In addition, this system and method interfaces with network management information on a network device, by providing a management information base (MIB) including information related to one or more aspects of a network device, and using a set of object-oriented classes and object-oriented methods that corresponds to the MIB and information related to one or more aspects of the network device.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "07260621",
	"publication_date": "2007-08-21",
	"application_number": "09632294",
	"application_date": "2000-08-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Push-to-talk wireless telecommunications system utilizing a voice-over-IP network",
	"summary": "",
	"abstract": "A method and system to provide push-to-talk from one user to another in a wireless packet data telecommunications network is described. The system may include: a wireless communication network including push-to-talk (PTT) functionality, with a Session Initiation Protocol (SIP) Proxy Server; a SIP Registrar and Location Server operable to store contact addresses of active mobile devices; a Realtime Transport Protocol (RTP) Media Gateway (PTT Server) operable to function as a call endpoint for each of a plurality of mobile devices wherein the plurality of mobile devices are segmented into membership groups, the PTT Server further operable to multicast a communication from one member of the group to the other members of the group; and an Internet Protocol (IP) network interconnecting the SIP Proxy server, the SIP Registrar and Location Server, and the PTT Server.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "07170863",
	"publication_date": "2007-01-30",
	"application_number": "10028091",
	"application_date": "2001-12-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods, data structures, and systems to access data in cross-languages from cross-computing environments",
	"summary": "",
	"abstract": "Methods, data structures, and systems are provided to access data in cross-languages from cross-computing environments. A first request from a first computing environment is received to access the data in a first language. Concurrently, a second request from a second computing environment is received to access the data in the first language. A single message file used to service the requests is used to provide the data in the first language to both the requests within both computing environments. In another embodiment, the second request is received to access the data in a second language, wherein a second message file is used to provide the data in the second language to satisfy the second request simultaneously with the first request.",
	"url": null,
	"owner": "Novell, Inc.",
	"publication_number": "07225222",
	"publication_date": "2007-05-29",
	"application_number": "10051545",
	"application_date": "2002-01-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Predicate indexing of data stored in a computer with application to indexing cached data",
	"summary": "",
	"abstract": "The invention relates to a directory proxy caching system that is constructed based on a predicate, i.e., a query from a client. Broadly stated, the predicate is formed by the query (request) issued by the client. Once the data is found in the directory, then the data is stored in a cache of a proxy server. The data is indexed in the proxy server by the predicate. The predicate is used to form an index by sorting the predicate into a normal form. Steps in sorting the predicate into the normal form include the following. Each symbol of the predicate is represented by a numerical representation, for example the ASCII value used to represent the symbol in ordinary text files. The predicate is expressed as a plurality of primitive predicates, and individual predicates of the plurality of primitive predicates are joined by logical connectors. The logical connectors, and each term in the primitive predicates are represented by numbers. The logical connectors and the predicates are sorted in numerical order of the numbers to form the normal form of the predicate. The information retrieved by the predicate is stored into a cache using the normal form of the predicate as an index. The next request using a previously used predicate can then be found in the cache by the next request being sorted into normal form and used as an index into the cache.",
	"url": null,
	"owner": "Novell, Inc.",
	"publication_number": "07191170",
	"publication_date": "2007-03-13",
	"application_number": "10448499",
	"application_date": "2003-05-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic adaptation of GUI presentations to heterogeneous device platforms",
	"summary": "",
	"abstract": "A system for dynamically adapting a presentation generated with a scalable application to a display screen of any of a plurality of heterogeneous device platforms is disclosed. The system includes a device platform and a transformation module. The device platform is one of the heterogeneous device platforms and includes a display screen. The device platform is operable to initiate generation of a hierarchical configuration representing a plurality of graphical user interface components. The transformation module is operable to selectively arrange the graphical user interface components on a page as a function of the hierarchical configuration. In the addition, the transformation module is operable to selectively transform the graphical user interface components to maximize the fill of the display screen by the page.",
	"url": null,
	"owner": "NTT Docomo, Inc.",
	"publication_number": "07234111",
	"publication_date": "2007-06-19",
	"application_number": "09967167",
	"application_date": "2001-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Backlight dimming and LCD amplitude boost",
	"summary": "",
	"abstract": "Embodiments of the present invention generally provide m Methods and apparatus for reducing power consumption of backlit displays are described. Power consumption is reduced by dimming backlighting by a first scale factor and boosting pixel values by a second scale factor to compensate for the dimming. The scale factors may be constant values. Alternately, one or both of the scale factors may be determined based on pixel values for one or more frames to be displayed and/or one or more frames that have been displayed. For example, scale factors may be calculated based on an average linear amplitude of one or more frames of pixel values or from a maximum pixel value of one or more frames of pixel values. A graphical processing system is described including an integrated circuit capable of transforming a pixel value from a gamma-compensated space to a linear space.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07176878",
	"publication_date": "2007-02-13",
	"application_number": "10316521",
	"application_date": "2002-12-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Depth clamping system and method in a hardware graphics pipeline",
	"summary": "",
	"abstract": "A system, method and computer program product are provided for depth clamping in a hardware graphics pipeline. Initially, a depth value is identified. It is then determined as to whether a hardware graphics pipeline is operating in a depth clamping mode. If the hardware graphics pipeline is operating in the depth clamping mode, the depth value is clamped within a predetermined range utilizing the hardware graphics pipeline.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07224359",
	"publication_date": "2007-05-29",
	"application_number": "10867988",
	"application_date": "2004-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for performing network processing functions",
	"summary": "",
	"abstract": "A novel network architecture that integrates the functions of an internet protocol (IP) router into a network processing unit (NPU) that resides in a host computer's chipset such that the host computer's resources are perceived as separate network appliances. The NPU appears logically separate from the host computer even though, in one embodiment, it is sharing the same chip.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07188250",
	"publication_date": "2007-03-06",
	"application_number": "10319376",
	"application_date": "2002-12-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for a general instruction raster stage that generates programmable pixel packets",
	"summary": "",
	"abstract": "A method and system for a general instruction capable raster stage that generates flexible pixel packets is disclosed. In one embodiment, the rasterizing of a geometric primitive comprising a plurality of vertices wherein each vertex comprises a respective color value, is performed by a rasterization module of a graphics pipeline. The rasterizing includes a plurality of programmable interpolators for computing pixel parameters for pixels of a geometric primitive. The rasterizing module further includes a memory for storing a first instruction associated with a first programmable interpolator for indicating a first parameter on which said first programmable interpolator is to operate and for indicating a first portion of a pixel packet in which to store its results. The rasterizing module additionally includes a memory for storing a second instruction associated with a second programmable interpolator for indicating a second parameter on which said second programmable interpolator is to operate and also for indicating a second portion of said pixel packet in which to store its results.",
	"url": null,
	"owner": "Nvidia Corporation",
	"publication_number": "07190366",
	"publication_date": "2007-03-13",
	"application_number": "10845642",
	"application_date": "2004-05-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Primitive extension",
	"summary": "",
	"abstract": "Method and apparatus for generating a primitive extension defining a generalized primitive is described. The primitive extension defines the connectivity and vertices used to specify a collection of connected primitives, such as a strip-type or fan-type generalized primitive. A generalized primitive includes a number of vertices where some of the vertices are shared with neighboring primitives. The primitive extension includes an originating primitive, vertex data, and connectivity information. The primitive extension provides a general interface for describing a variety of connected primitives.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07196703",
	"publication_date": "2007-03-27",
	"application_number": "10728047",
	"application_date": "2003-12-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Remote graphical user interface support using a graphics processing unit",
	"summary": "",
	"abstract": "Methods, apparatus and systems for the display, on a remote node, of a three-dimensional (3D) image rendered on a host system in a first image format are described. In general, the 3D image is transformed into a second image format that is compressed (i.e., uses fewer data bits per pixel) relative to the first image format, (optionally) scaled to a screen size of remote node, and subsequently transferred to remote node for display. In instances, the transformation of the image from the first image format to the second image format and the optional scaling of the image to the screen size of remote node may be done in a graphics processing unit (GPU) on the host system. As an example, the first image format may be an RGB-based format, such as RGBA (32-bits per pixel) or standard RGB (24-bits per pixel) and the second image format may be a YUV-based format, such as YV12 (12-bits per pixel).",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07173635",
	"publication_date": "2007-02-06",
	"application_number": "10400046",
	"application_date": "2003-03-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for authenticating a user in a web-based environment",
	"summary": "",
	"abstract": "A system and method for authenticating a client having a privilege server, a head end server, and a web adapter performs the steps of negotiating an authentication scheme between the server proxy and the privilege server. User information is presented to the web adapter. The user information is provided to the head end server and in turn presents the information to the web adapter. The user is validated in accordance with the authentication scheme. When the user is validated a ticket is generated for the user. The ticket is presented to the client privilege server proxy that decrypts the ticket. A token is formed from the ticket and the client user identification. The token from the client is provided to the privilege server. A packet is formed having a sequence number and session key encrypted with the ticket. The packet is provided to the head end server which in turn authenticates the user. The packet is provided to the client privilege proxy which decrypts the packet and sends the ticket and the sequence number encrypted with the session key to the data server through the web adapter. User is validated at the data server and privileges are granted thereto.",
	"url": null,
	"owner": "One Touch Systems, Inc.",
	"publication_number": "07313816",
	"publication_date": "2007-12-25",
	"application_number": "10022578",
	"application_date": "2001-12-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for deploying an asset over a multi-tiered network",
	"summary": "",
	"abstract": "A method and system of operating a computer system for targeting one or more digital assets on a distribution server connected to one or more networks so that the digital assets are compatible with one or more target nodes connected to the networks includes examining the one or more digital assets to determine an asset type of the digital asset and, if the asset type is Relational Data (RD), retrieving one or more where clauses of the digital asset. The method and system may further include executing a token replacement operation on the where clause to create a transformed where clause and running a query on one or more tables specified in the digital asset using the transformed where clause, the query returning one or more returned records and the returned records correlating with the target node. The method and system may further include storing the returned record in the digital asset.",
	"url": null,
	"owner": "OP40, Inc.",
	"publication_number": "07209921",
	"publication_date": "2007-04-24",
	"application_number": "09947141",
	"application_date": "2001-09-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and structure for distributing and executing software and data on different network and computer devices, platforms, and environments",
	"summary": "",
	"abstract": "A method and system for organizing a package involving identifying an asset within an application, wherein the asset is determined by an asset boundary and the asset contains a logic/data part and an extended environment part; identifying the package within the application, wherein the package is a logical division of the application and wherein the package includes a plurality of assets; determining a package boundary identifying the scope of the package, wherein the package boundary may be determined by the asset boundary of at least one asset in the package; and organizing the package according to the package boundary, wherein the package including at least two assets.",
	"url": null,
	"owner": "OP40, Inc.",
	"publication_number": "07181731",
	"publication_date": "2007-02-20",
	"application_number": "09947101",
	"application_date": "2001-09-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application-based protocol and proxy selection by a mobile device in a multi-protocol network environment",
	"summary": "",
	"abstract": "In a mobile device operating on a wireless network, one of multiple selectable proxies and its corresponding protocol stack are selected, to proxy a request and response, based on the application making the request. Connection information for each available proxy is stored in a configuration store. The application requests a Net Proxy object for the particular proxy and protocol stack to be used. The Net Proxy object contains a subset of the stored connection information specific to the particular proxy. An HttpAction object is then created for the request, and the Net Proxy object is linked to the HttpAction object. The HttpAction object is provided to a request manager, which dispatches the request to an appropriate protocol stack, based on the content of the net Proxy object linked to the HttpAction object, which causing the request to be sent to the selected proxy.",
	"url": null,
	"owner": "Openwave Systems Inc.",
	"publication_number": "07277915",
	"publication_date": "2007-10-02",
	"application_number": "10292281",
	"application_date": "2002-11-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "MMS based photo album publishing system",
	"summary": "",
	"abstract": "An MMS publishing system comprises a management tool, an authoring tool, a storage facility, a message router, and a rendering server. The management tool authenticates a first user by using a telephone number of the first user as a user ID. The authoring tool allows the first user to associate rich media content with his telephone number. The content is then stored in the storage facility in association with his telephone number. Subsequently, the message router intercepts an MMS message sent from a mobile device over a wireless network when the MMS message includes a predetermined indicator and indicates the telephone number of the first user as a destination. The rendering server then accesses the stored content associated with the telephone number and sends the content to the mobile device, for output to a user of the mobile device.",
	"url": null,
	"owner": "Openwave Systems Inc.",
	"publication_number": "07302254",
	"publication_date": "2007-11-27",
	"application_number": "10365054",
	"application_date": "2003-02-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of sharing a desktop with attendees of a real-time collaboration",
	"summary": "",
	"abstract": "A method of facilitating the reproduction of a presenter's desktop for attendees of a real-time collaboration. A bound portion of the desktop (the portion shared with the attendees) is logically divided into clusters. When the content of a cluster changes, the cluster is analyzed and one or more objects describing the content may be identified. Each object that is not already cached is cached and assigned a cache ID. Each object in the cluster is described in an object primitive to be sent to the attendees. Actions for reproducing the object on the attendees' clients are sent as action primitives. The object and action primitives allow the content of the presenter's desktop to be sent incrementally instead of sending the entire desktop.",
	"url": null,
	"owner": "Oracle International Corp.",
	"publication_number": "07222305",
	"publication_date": "2007-05-22",
	"application_number": "10387920",
	"application_date": "2003-03-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Real-time collaboration client",
	"summary": "",
	"abstract": "A real-time collaboration client and a method of configuring the client for a real-time collaboration with requiring the client to be rebooted. A secondary table of display driver calls is patched to call a redirection table instead, while the primary table is unaltered. Redirected calls are passed to the display driver and to a collaboration module configured to update the collaboration to reflect the display driver call. The video mode of a client video display is then changed, at which time the secondary table is copied over the primary table and made active. If the client is rebooted, a loader module loads before the display driver and intercepts a call to load the display driver. The loader module loads the collaboration module and modifies a return value to the call to cause display driver calls to be directed to the redirection table.",
	"url": null,
	"owner": "Oracle International Corp.",
	"publication_number": "07197751",
	"publication_date": "2007-03-27",
	"application_number": "10387764",
	"application_date": "2003-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for facilitating real-time collaborating by collapsing a queue for a slow client",
	"summary": "",
	"abstract": "A system and method for facilitating real-time collaboration. A real-time collaboration server comprises a number of communication modules for handling communications with individual clients. An organizer manages the collaboration and includes a control unit for each mode (e.g., desktop sharing, whiteboard, chat). Incoming communications are routed to the appropriate control unit by a filter. The control unit queues sets of collaboration data for distribution to clients through separate communication modules. When a client acknowledges one set of data sent to it, the next set can be sent. A roster control unit maintains a roster of clients, including their permissions and properties. A client's permissions may be verified when a communication is received from or is to be sent to the client.",
	"url": null,
	"owner": "Oracle International Corp.",
	"publication_number": "07206811",
	"publication_date": "2007-04-17",
	"application_number": "10387780",
	"application_date": "2003-03-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Architecture for a scalable and user-extensible heap dump analysis tool",
	"summary": "",
	"abstract": "A heap analyzer that processes a snapshot of the heap contained in a dump file is described. The heap analyzer tool can be configured to relocate the pointers in the dumped heap and allow developers to examine the heap in web browser by presenting markup for displaying a heap object in the browser and rendering pointers in the object as clickable links. When a link is selected, the pointer is followed to another object and markup is generated for rendering that object with its links. Furthermore, callbacks may be provided through an application programming interface (API) to allow developers to furnish their own code for analyzing and displaying their data structures.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07249235",
	"publication_date": "2007-07-24",
	"application_number": "10872536",
	"application_date": "2004-06-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Architecture for general purpose near real-time business intelligence system and methods therefor",
	"summary": "",
	"abstract": "A method of optimizing the delivery of a set of data elements to a device, the set of data elements further comprising a metadata portion. The method further includes determining a source of each element of the set of data elements, and creating a set of rules for transforming the set of data elements from a first representation to a second representation, based in part on the metadata. The method further includes transferring the set of data elements from the source to a first computer, transforming the set of data elements, based in part on the set of rules, and delivering the second representation to the device. Thereafter, the method includes monitoring the source for a change to the set of data elements. And, if required, the method further includes transferring the change from the source to the first computer.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07272660",
	"publication_date": "2007-09-18",
	"application_number": "10289131",
	"application_date": "2002-11-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Architecture for general purpose near real-time business intelligence system with client devices and methods therefor",
	"summary": "",
	"abstract": "A method of transferring a set of data elements to a recipient on a network, the network includes a set of devices registered to the recipient. The method also includes receiving the set of data elements. The method further includes ascertaining if the first device is present on the network and if the first user is available via the first device based on status information received via set network. If the first device is present on the network and if the first user is available via the first device, the method includes transferring the set of set of data elements to the first device. And, if the first device is not present on the network or if the first user is not available via the first device, the method further includes transferring the set of set of data elements to the second device if the second device is present on the network and if the first user is available via the second device.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07243124",
	"publication_date": "2007-07-10",
	"application_number": "10289139",
	"application_date": "2002-11-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Blocking cache flush requests until completing current pending requests in a local server and remote server",
	"summary": "",
	"abstract": "Identity Servers issue and respond to requests for performing remote operations. A local Identity Server receives a request to perform a remote operation. The local Identity Server identifies and executes any required local operations. After completing the local operations, the local Identity Server forwards the remote request to a remote Identity Server, which executes the remote operation. An Identity Server includes a management service, management registry, and request handler. The management service identifies and issues remote request to other servers. The request handler receives remote requests from other servers. The management registry maintains an index of function modules for performing local operations.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07213249",
	"publication_date": "2007-05-01",
	"application_number": "09997408",
	"application_date": "2001-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed nonstop architecture for an event processing system",
	"summary": "",
	"abstract": "Methods and architectures for implementing a fault tolerant real time event processing system are provided. The system includes at least one satellite and at least one primary data center. The system remains operational when the primary data center is unavailable to the satellite. The system includes business logic that is divided into logic that can be run effectively at a satellite, and logic that can be run at the main data center to result in effective decisions. When the network connection is impaired or the main data center is unavailable, the satellite can process an incoming event locally. The system includes procedures so that events processed at a satellite during a period of noncommunication with the primary data center will be entered into the primary data center records at a later point.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07257611",
	"publication_date": "2007-08-14",
	"application_number": "09562785",
	"application_date": "2000-05-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Implicit connection caching",
	"summary": "",
	"abstract": "Techniques for implicitly caching connections to a resource (e.g., a database) are provided. A request for a connection does not specify that available connections are stored in a cache. If available connections are stored in a cache, the connection to the resource is obtained from the cache. Otherwise, a new connection to the resource is opened directly, without a connection caching mechanism.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07269692",
	"publication_date": "2007-09-11",
	"application_number": "10446042",
	"application_date": "2003-05-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Maintaining state information in mobile applications",
	"summary": "",
	"abstract": "Techniques for interacting with a client process on a mobile device connected to a network over a wireless link includes receiving a first request at a state machine executing on a first platform connected to the network. The first request is associated with the client process, and is for a service from an application. A first method of the application is invoked with first data in response to the first request. Second data for the client process is received from the application in response to invoking the first method. A first response is based on the second data. The first response is sent for the client process. The method includes managing information about a plurality of requests associated with the client process. The application executes on a second platform connected to the network. Both the first and second platforms are distinct from the mobile device. These techniques free the developers of applications for wireless mobile devices from the responsibility for managing their session state information. This greatly simplifies and accelerates the development of applications.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07188183",
	"publication_date": "2007-03-06",
	"application_number": "09872066",
	"application_date": "2001-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and mechanism for implementing an access interface infrastructure",
	"summary": "",
	"abstract": "A method and system for implementing an improved access interface infrastructure is disclosed. In one approach, an access interface methods is directly supported by an application. The directly supported access interface method corresponds to an access interface implementation. Other access interface methods are transparently processed by being converted or mapped into a generic interface format, which is then translated into the directly supported format.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07178153",
	"publication_date": "2007-02-13",
	"application_number": "10144688",
	"application_date": "2002-05-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for implementing dynamic cache of database cursors",
	"summary": "",
	"abstract": "Disclosed are improved methods, systems, and mediums for implementing a dynamic cursor cache. Cached cursors are tagged to facilitate identification and reuse of cursors from a cursor cache. Cursor caches and cursor usage are managed in an integrated and/or coordinated manner between multiple nodes that have related sets of cursors or cursor resources.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07251657",
	"publication_date": "2007-07-31",
	"application_number": "10427838",
	"application_date": "2003-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "On-the-fly format conversion",
	"summary": "",
	"abstract": "Techniques are provided for accessing data stored in a database. According to one technique, a request is received from an application for a stored file that is currently stored in a database. The stored file is associated with a first file type. One or more database commands are issued to retrieve data associated with the stored file from the database. A renderer is selected from a plurality of renderers based on a first set of selection criteria. The renderer is used to generate an outbound file from the data. The outbound file corresponds to a second file type. The outbound file is provided to the application.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07280995",
	"publication_date": "2007-10-09",
	"application_number": "09571568",
	"application_date": "2000-05-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for efficiently performing memory intensive computations including a bidirectional synchronization mechanism for maintaining consistency of data",
	"summary": "",
	"abstract": "A system and method for efficiently performing memory intensive computations including a bidirectional synchronization mechanism for maintaining consistency of data on which computations will be performed. This can be used to solve various problems such as those in a business context. Synchronization occurs in a near-real-time fashion between data in a database and data stored in memory. The synchronization is accomplished by periodically scanning the database to see if any data has changed. If any data has changed, the changes are copied over to memory so that the data in memory is current. This update is accomplished without copying the entire database into memory each time data in the database changes.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07200720",
	"publication_date": "2007-04-03",
	"application_number": "10041033",
	"application_date": "2001-12-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Time-to-live timeout on a logical connection from a connection cache",
	"summary": "",
	"abstract": "Techniques for utilizing a time-to-live timeout on a logical connection to a resource (e.g., a database) from a cache are provided. When a logical connection to the resource is obtained, a timeout is set specifying the amount of time the logical connection can be utilized. If the timeout expires, the logical connection is closed and the underlying physical connection can be returned to the cache.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07251700",
	"publication_date": "2007-07-31",
	"application_number": "10445985",
	"application_date": "2003-05-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web page connectivity server construction",
	"summary": "",
	"abstract": "A process for constructing a server for collecting, arranging and storing data that defines the connectivity of pages on the World Wide Web (Web). The process input is a set of compressed ASCII links files, wherein each links file is a series of source URLs and corresponding destination URLs. A temporary URLs_info Table is created and initialized. The links files and URLs metadata are read. Buffers of unique URLs are sorted and written from the links files into URL runs. An ID Index is created from the URL_info table. CS_ids are assigned to URLs and written to the ID Index. Both a compressed URL data structure and a URL Index are created. A Host Table is created. URL fingerprints are converted to CS_ids, and preliminary outstarts to CS_ids and preliminary outstarts and outlinks tables are created. Compressed outstarts and outlinks tables are created from the preliminary tables. Subsequently, compressed instarts and inlinks tables are created based on the outstarts and outlinks tables.",
	"url": null,
	"owner": "Overture Services, Inc.",
	"publication_number": "07260583",
	"publication_date": "2007-08-21",
	"application_number": "10737729",
	"application_date": "2003-12-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods, apparatuses and systems facilitating analysis of the performance of network traffic classification configurations",
	"summary": "",
	"abstract": "Methods apparatuses and systems allowing for an examination of the runtime performance and efficiency of traffic classification configuration associated with bandwidth management and other network devices including network traffic classification functionality. Embodiments of the present invention are operative to identify possible changes to the current traffic classification configurations that improve performance efficiency.",
	"url": null,
	"owner": "Packeteer, Inc.",
	"publication_number": "07292531",
	"publication_date": "2007-11-06",
	"application_number": "10334467",
	"application_date": "2002-12-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for synchronizing an email client on a portable computer system with an email client on a desktop computer",
	"summary": "",
	"abstract": "A fully integrated email system for a desktop computer with an associated palmtop computer is disclosed. The portable computer has an email client for viewing incoming email messages and composing outgoing email messages. The personal computer has an email synchronization conduit that synchronizes email on the portable computer email client with email for the desktop computer system. The email synchronization conduit ensures that the email state on the portable computer system matches the email state on the desktop personal computer system exactly. Thus, if an email message is deleted on the portable computer system then that email message will be deleted from the desktop personal computer system. Similarly, if an email message is deleted on the desktop personal computer system then that email message will be deleted from the portable computer system.",
	"url": null,
	"owner": "Palmsource Inc.",
	"publication_number": "07206815",
	"publication_date": "2007-04-17",
	"application_number": "10758980",
	"application_date": "2004-01-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software behavior pattern recognition and analysis",
	"summary": "",
	"abstract": "A target software behavior pattern recognition and analysis tool is disclosed that operates during the real-time execution of monitored target software on a computer, derives a subset of measurements indicating the target software performance and activity, automatically derives a baseline from the subset of measurements, and establishes a state of health of the target software based on comparing real-time measurements to the baseline. The monitored target software contains an agent for deriving a subset of measurements indicating the target software performance and activity. The agent includes sensors embedded into the target software to measure specific code segments, and an examiner which receives measurements from the sensors and transmits these examiner values to a central server. The central server automatically derives a baseline from the received examiner values, and automatically establishes a state of health of the target software based on comparing real-time measurements to the baseline.",
	"url": null,
	"owner": "Path Reliability, Inc.",
	"publication_number": "07269824",
	"publication_date": "2007-09-11",
	"application_number": "10366010",
	"application_date": "2003-02-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and product for data integration through a dynamic common model",
	"summary": "",
	"abstract": "Data integration including extracting a first native record having a first native format from a first native repository through a first adapter, the first adapter loosely coupled for data integration to a data integration application, the first native format having a datatype; transforming the first native record having first native format to a first native record having dynamic common format, the dynamic common format being a subset of a dynamic common model, the dynamic common model comprising mappings to and from the dynamic common format for all native records in all datatypes; transforming the format of the first native record having dynamic common format to a first native record having second native format; and inserting through a second adapter, also loosely coupled to the application, the first native record the second native format into a second native repository.",
	"url": null,
	"owner": "Petris Technology Corporation",
	"publication_number": "07257594",
	"publication_date": "2007-08-14",
	"application_number": "10818618",
	"application_date": "2004-04-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Device integrated battery backup with power source monitoring and manipulation and public safety communications infrastructure incorporating the same",
	"summary": "",
	"abstract": "A system for, and method of, providing device integrated battery backup with power source monitoring and manipulation and a public safety communications infrastructure incorporating the system or the method. In one embodiment, the system includes: (1) a power supply couplable to a primary source of electric power, (2) a network interface, coupled to the power supply and configured to allow the power supply to be remotely controlled and monitored, (3) a rechargeable backup source of electric power coupled to the power supply and (4) a nonrechargeable backup source of electric power coupled to the power supply, the power supply configured to monitor the primary source and the rechargeable backup source and select one of the primary source, the rechargeable backup source and the nonrechargeable backup source based thereon.",
	"url": null,
	"owner": "PHC LLC",
	"publication_number": "07212102",
	"publication_date": "2007-05-01",
	"application_number": "11108431",
	"application_date": "2005-04-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methods for using graphics hardware for real time two and three dimensional, single definition, and high definition video effects",
	"summary": "",
	"abstract": "A method, system, and computer readable medium including instructions for processing single definition or high definition video data to produce an two dimensional and three dimensional effects to occur at a future time. The effects are created in a video processing system using multiple threads.",
	"url": null,
	"owner": "Pinnacle Systems, Inc.",
	"publication_number": "07286132",
	"publication_date": "2007-10-23",
	"application_number": "10829324",
	"application_date": "2004-04-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Image generating apparatus, image generating method, and computer program",
	"summary": "",
	"abstract": "An image generating apparatus () is provided with: a drawing application processor () for indicating a drawing device () to draw a 3D image; and a graphics library (). The drawing application processor is provided with a drawing object information generation device for generating drawing object information to draw an image; and a coordinate transformation information generation device for generating coordinate transformation information. The drawing device generates the 3D image by applying the coordinate transformation information to the drawing object information. An identifier is set to the coordinate transformation information. When the drawing device generates the 3D image, the coordinate transformation information is identified with the identifier.",
	"url": null,
	"owner": "Pioneer Corporation",
	"publication_number": "07218319",
	"publication_date": "2007-05-15",
	"application_number": "10253720",
	"application_date": "2002-09-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for the recovery of unusable printed postage",
	"summary": "",
	"abstract": "A method for recovering postage for metered mail pieces that have not been posted, the method includes: placing information that uniquely identifies the mail piece in a postal indicia ; storing the information that uniquely identifies each metered mail piece at a remote site; requesting a refund for a mail piece that has not been posted; determining if the information in the postal indicia  that appears on the face of the mail piece that uniquely identifies the mail piece is the same as the information that uniquely identifies the mail piece that is stored in the remote site; and refunding the postage if the information in the postal indicia  that uniquely identifies the mail piece is the same as the information that uniquely identifies the mail piece that is stored in the remote site.",
	"url": null,
	"owner": "Pitney Bowes Inc.",
	"publication_number": "RE039779",
	"publication_date": "2007-08-21",
	"application_number": "10880443",
	"application_date": "2004-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Authoring tool for remote experience lessons",
	"summary": "",
	"abstract": "A computer-implemented presentation authoring method, tool, and interface is provided for creating a remote experience lesson defined with a hierarchy of pages, at least one of the pages including an interactive view of a three-dimensional model. Any number of three-dimensional models and views, and any number of two-dimensional images and views may be used for the pages of the lesson. Annotations are drawn directly in the three-dimensional space of the three-dimensional model and are associated with particular pages. Hotspot annotations provide a non-linear link to other pages in the hierarchy of pages. The authoring tool and interface allows the creation of richly interactive and visual lessons based on telepresence experiences of remote locations and objects.",
	"url": null,
	"owner": "Platform Digital LLC",
	"publication_number": "07305611",
	"publication_date": "2007-12-04",
	"application_number": "10225140",
	"application_date": "2002-08-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Advanced voting system and method",
	"summary": "",
	"abstract": "In one embodiment, an advanced voting system includes one or more computing devices operable to receive instructions from a voter to adjust a color of a screen of a computing device. The color adjustment instructions are indicated by the voter's selection of non-dedicated keys associated with a specific color adjustment. The system is operable to execute the color adjustment instructions received from the voter, display ballot questions to the voter, and receive interactive vote selections from the voter.",
	"url": null,
	"owner": "Populex Corp.",
	"publication_number": "07284700",
	"publication_date": "2007-10-23",
	"application_number": "10465896",
	"application_date": "2003-06-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for generating user interface code",
	"summary": "",
	"abstract": "A system for generating user interface code is provided. The system includes a user interface class system generating a user interface class that has two or more user interface features that can be assembled into a user interface by an operator, such as field entry prompts and data display fields. The system also includes a handler class system generating one or more states for each user interface feature of the user interface class, such as to navigate through the field entry prompts and data display fields. The user interface class system, in conjunction with the handler class system, generates the user interface code that causes the selected user interface features and associated states for the user interface features to be generated.",
	"url": null,
	"owner": "Prelude Systems, Inc.",
	"publication_number": "07243334",
	"publication_date": "2007-07-10",
	"application_number": "10046389",
	"application_date": "2002-01-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Boundary representation per feature methods and systems",
	"summary": "",
	"abstract": "Computer implemented methods and systems for CAD data exchange, and in particular for creating boundary representations (u201cbrepsu201d) on a feature-by-feature basis are disclosed. According to an embodiment of the techniques described herein, a parameterized feature from a parametric based design system is exported from a source CAD system (). Iterative steps and complimentary extraction techniques are employed by one or more processors () to create an importable design model of the parameterized feature (), which is imported into a target CAD system (). While the techniques can include API (), pattern matching (), and user emulation () techniques, they include a brep per feature () technique. By exporting the brep on a per feature () basis from the source CAD system (), the design intent of a CAD designer can be preserved on importation into the target CAD system (). In particular, where a parametric representation () of the feature fails to import into the target system (), an unparameterized representation () of the feature can be substituted.",
	"url": null,
	"owner": "Proficiency, Ltd.",
	"publication_number": "07277835",
	"publication_date": "2007-10-02",
	"application_number": "10363183",
	"application_date": "2001-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for persistently encrypting critical software data to control the operation of an executable software program",
	"summary": "",
	"abstract": "A data encryption/decryption system is provided which maintains in encrypted form one or more critical data elements required by a software program. A user must obtain a license key in order to decrypt the critical data elements before the software program can use them. The data elements can be chosen such that their contents provide a control mechanism for the correct operation of the executable software program. The system allows for the inclusion of different data elements with or within a single version of the software program. The different data elements are encrypted for different license keys to allow for different license options and corresponding levels of control and flexibility in the delivery of the software program.",
	"url": null,
	"owner": "Protexis, Inc.",
	"publication_number": "07200760",
	"publication_date": "2007-04-03",
	"application_number": "10334139",
	"application_date": "2002-12-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for piggybacking data across an open data channel of a wireless device",
	"summary": "",
	"abstract": "A system, method, and program for transmitting data across an idle open communication channel from a wireless device. The wireless device includes a computer platform and a plurality of device resources that selectively utilize a open communication channel to communicate with other devices across the network, and each device resource selectively requests notification of an idle open communication channel, and all device resources that have requested such notification are notified upon an idle open communication channel occurring, and each notified device resource can selectively transmit data across the open communication channel prior to closure thereof.",
	"url": null,
	"owner": "Qualcomm Inc.",
	"publication_number": "07162224",
	"publication_date": "2007-01-09",
	"application_number": "10884517",
	"application_date": "2004-07-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Billing system with authenticated wireless device transaction event data",
	"summary": "",
	"abstract": "A system, method, and computer program for billing wireless device subscribers based upon billable interaction with applications and services resident on third party computer devices that are accessible through a wireless network. The system uses authenticatable transaction data that is created when a wireless device conducts a billable transaction whereby the data is a secure indication that a wireless device has performed a specific billable transaction event. The transaction data can be authenticated and then aggregated to generate billing for billable transaction events that occur on the wireless network. The billing can occur from a billing computer on the network or the aggregated data can be sent to a wireless service provider for ultimate billing to the wireless device subscriber.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "07266519",
	"publication_date": "2007-09-04",
	"application_number": "10610439",
	"application_date": "2003-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Flexible antialiasing in embedded devices",
	"summary": "",
	"abstract": "A three-dimensional (3D) graphics pipeline renders a sequence of images of 3D scenes each composed of a plural set of objects. The pipeline comprises an antialiasing oversampling mechanism to perform for a given image, at an early stage of the pipeline, oversampling on a portion of the objects of the given image.",
	"url": null,
	"owner": "Qualcomm Incorporated",
	"publication_number": "07173631",
	"publication_date": "2007-02-06",
	"application_number": "10949607",
	"application_date": "2004-09-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Wireless network optimization through remote device data",
	"summary": "",
	"abstract": "A system, method, and program for optimizing a wireless network having at least data communication between computer devices selectively connected thereto, and at least one of the computer devices is a remotely located wireless device. The wireless device has a resident network optimization application that causes the selective transmission of network status data to at least one other computer device on the wireless network, and either the data-receiving computer device or another computer device on the wireless network optimizes the wireless network based upon the received network status data.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "07263351",
	"publication_date": "2007-08-28",
	"application_number": "10187760",
	"application_date": "2002-07-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "DOCSIS network interface device and methods and systems for using the same",
	"summary": "",
	"abstract": "A network interface device located at a customer's premises includes an external interface that receives a plurality of telecommunication services via a coaxial connection from a telecommunication service provider. The services are received using Data Over Cable Service Interface Specifications. The network interface device also includes at least two distinct internal interfaces that distribute the plurality of telecommunication services to at least two distinct internal transport media. The network interface device also includes a processor the is programmed to receive combined signals comprising the telecommunication services from the external interface, process the combined signals into separate signals representative of distinct telecommunication services, and map each of the separate signals to separate ones of the at least two distinct internal interfaces for distribution at the customer's premises via the internal transport media.",
	"url": null,
	"owner": "Qwest Communications International Inc.",
	"publication_number": "07239698",
	"publication_date": "2007-07-03",
	"application_number": "10715878",
	"application_date": "2003-11-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Packet network interface device and systems and methods for its use",
	"summary": "",
	"abstract": "Certain embodiments of the invention provide network interface devices, as well as systems and methods for using them. For instance, in accordance with some embodiments, a network interface device can comprise an isolation device, which can be configured to isolate an internal transport medium from an external transport medium, such that operational changes to the internal transport medium do not affect the external transport medium, and operational changes to the external transport medium do not affect the internal transport medium.",
	"url": null,
	"owner": "Qwest Communications International Inc.",
	"publication_number": "07180988",
	"publication_date": "2007-02-20",
	"application_number": "10356364",
	"application_date": "2003-01-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Real-time medical monitoring application with a network interface device",
	"summary": "",
	"abstract": "Systems and methods are provided for medical monitoring of a patient at a patient premises. A medical-data collection device is adapted to collect medical data from the patient. The medical-data collection device is interfaced with a transport medium internal to the patient premises. A network interface device is also provided with multiple application devices interfaced with the transport medium internal to the patient premises. One of the application devices is a medical-monitoring application device adapted to process the collected medical data. Another of the application devices is adapted to exchange data with a transport medium external to the patient premises. A processor in communication with the application devices is adapted to coordinate transmission of the collected medical data over the transport medium external to the patient premises.",
	"url": null,
	"owner": "Qwest Communications International Inc.",
	"publication_number": "07264590",
	"publication_date": "2007-09-04",
	"application_number": "10445275",
	"application_date": "2003-05-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for controlled transmittance in a telecommunication system",
	"summary": "",
	"abstract": "Systems and methods for authenticating digital assets in relation to a telecommunications network. In various cases, the systems include a network interface device associated with a customer premises. The network interface device includes a local authentication authority operable to authenticate one or more digital assets maintained in relation to the customer premises. In some cases, a global authentication authority can authenticate the network interface device, and implicitly authenticate the one or more digital assets. Many other cases and/or embodiments are disclosed herein.",
	"url": null,
	"owner": "Qwest Communications International Inc.",
	"publication_number": "07240361",
	"publication_date": "2007-07-03",
	"application_number": "10632602",
	"application_date": "2003-08-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for delivering picture-in-picture signals at diverse compressions and bandwidths",
	"summary": "",
	"abstract": "T Systems and methods for providing picture-in-picture, or other multi-picture displays. Some of the systems include two or more video and/or data signals that are coupled to a transmission device. In addition, a selector signal is coupled to the transmission device. The transmission device also includes a video output that, based at least in part on the selector signal, provides a derivative of one of the video and/or data signals at a first compression and bandwidth, and the other video and/or data signal at a second compression and bandwidth. Various of the methods include utilize the systems to transmit two or more video outputs based at least in part on a selector signal.",
	"url": null,
	"owner": "Qwest Communications International, Inc.",
	"publication_number": "07187418",
	"publication_date": "2007-03-06",
	"application_number": "10377584",
	"application_date": "2003-02-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for dynamic server allocation and provisioning",
	"summary": "",
	"abstract": "A management tool that streamlines the server allocation and provisioning processes within a data center is provided. The system, method, and computer program product divide the server provisioning and allocation into two separate tasks. Provisioning a server is accomplished by generating a fully configured, bootable system image, complete with network address assignments, virtual LAN (VLAN) configuration, load balancing configuration, and the like. System images are stored in a storage repository and are accessible to more than one server. Allocation is accomplished using a switching mechanism which matches each server with an appropriate system image based upon current configuration or requirements of the data center. Thus, real-time provisioning and allocation of servers in the form of automated responses to changing conditions within the data center is possible. The ability to instantly re-provision servers, safely and securely switch under-utilized server capacity to more productive tasks, and improve server utilization is also provided.",
	"url": null,
	"owner": "Racemi, Inc.",
	"publication_number": "07213065",
	"publication_date": "2007-05-01",
	"application_number": "10290171",
	"application_date": "2002-11-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method of providing for the control of a music player to a device driver",
	"summary": "",
	"abstract": "A system and method of providing for the control of a music player to a device driver. One embodiment of the system comprises an electronic music player that is connected to a plurality of music renderers via device drivers via a music renderer controller. The music renderer controller comprises a device integration application program interface for providing a standard interface for communicating with each of the device drivers. Each of the device drivers manage a selected music renderer. The device drivers can display a graphical interface for displaying notifications, customized controls, links to websites, or any other type of information desired by the manufacturer of the device driver. The device drivers can also customize the interfaces of the music render to rename textual elements that are displayed by the device driver. Furthermore, the device drivers can command the music player to suspend and resume playback of music items during selected periods.",
	"url": null,
	"owner": "RealNetworks, Inc.",
	"publication_number": "07237198",
	"publication_date": "2007-06-26",
	"application_number": "09577257",
	"application_date": "2000-05-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for distributing and executing service logic",
	"summary": "",
	"abstract": "A method of distributing and executing service logic across private and public networks for the generation and provision of telecommunication services is disclosed. The functionality and capabilities associated with both Intelligent Network (IN) and non-IN compliant elements of a public telecommunications system are abstracted using a set of control and informational parameters and variables which are associated with a given network element or network element category. A service creation and execution application programming interface provides access to a service creation and execution environment which is distributed in public network gateways, private network gateways, and in compatible software platforms. The distributed service creation and execution environment enable the generation, provisioning, and execution of applications across private and public telecommunication networks in order to provide novel telecommunication services via the serial or concurrent invocation of one or more distributed applications.",
	"url": null,
	"owner": "Redknee Inc.",
	"publication_number": "07277444",
	"publication_date": "2007-10-02",
	"application_number": "10066745",
	"application_date": "2002-02-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for international roaming and call bridging",
	"summary": "",
	"abstract": "Disclosed is an enhanced system and method for bridging calls across telecommunications networks, including an illustrative application of the invention as it relates to international roaming among prepaid wireless subscribers. For instance, whenever wireless subscribers roam internationally they may invoke the system by keying in an Unstructured Supplementary Service Data (USSD) short code followed by the number to be dialed. Said subscriber's prepaid account is then decremented in real-time (until such account is fully depleted). A key feature of the disclosure generally is the bridging of the call legs between the wireless subscriber initiating the telephone communication and that of the receiving party through a series of general purpose databases and computers without requiring modifications to existing core network or handset infrastructure.",
	"url": null,
	"owner": "Redknee Inc.",
	"publication_number": "07181210",
	"publication_date": "2007-02-20",
	"application_number": "10252380",
	"application_date": "2002-09-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for supporting multiple certificate authorities on a mobile communication device",
	"summary": "",
	"abstract": "A system and method for supporting operations with multiple certification authorities (CAs) on a communication device. A common CA interface is provided between a plurality of secure communication applications and a plurality of CA-specific components, each of which interacts with a particular CA. A further common interface may also be provided for operatively coupling the secure communication applications to cryptographic components in the device.",
	"url": null,
	"owner": "Research In Motion Limited",
	"publication_number": "07197296",
	"publication_date": "2007-03-27",
	"application_number": "11398428",
	"application_date": "2006-04-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program product for normalizing data in a supply chain management framework",
	"summary": "",
	"abstract": "A system, method and computer program product are disclosed for normalizing data in a supply chain management framework. A plurality of data types are defined with each data type including parameters. Data is received utilizing a network from a plurality of point of sale outlets of a supply chain that relates to an amount of goods sold by the point of sale outlets. A format of the data is verified against the parameters of the defined data types and any discrepancies between the format of the data and the parameters of the defined data types are corrected for facilitating an analysis of the data.",
	"url": null,
	"owner": "Restaurant Services, Inc.",
	"publication_number": "07171379",
	"publication_date": "2007-01-30",
	"application_number": "09816454",
	"application_date": "2001-03-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enterlink for providing a federated business to business system that interconnects applications of multiple companies",
	"summary": "",
	"abstract": "The present invention, sometimes called Enterlink, for the first time provides a federated system with state that interconnects applications of multiple companies. The Enterlink connects participant companies and applications, through the Enterlink bus, with each other and with consolidated data stores, third party services, core services, public process applications, and private process applications. The Enterlink bus uses, for the first time, metachannels, a metachannel engine and a metachannel repository Connectors connect the Enterlink public process applications and the company private I process applications with the bus. The invention can be applied to the automotive retail industry, among others. The Enterlink applications, core applications, and bus, may be operated as a service to company participants.",
	"url": null,
	"owner": "Reynolds and Reynolds Holdings, Inc.",
	"publication_number": "07231433",
	"publication_date": "2007-06-12",
	"application_number": "10696163",
	"application_date": "2003-10-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for remote diagnostic, control and information collection based on various communication modes for sending messages to a resource manager",
	"summary": "",
	"abstract": "A method, system, and program product for communicating with machines connected to a network. Information sent to or from the machines is transmitted using electronic mail or a via a direct connection. The electronic mail may be transmitted over the Internet to a service center or from a service center to a resource administrator, but also may remain within a local or wide area network for transmission between a machine and a resource administrator. E-mail messages may be transmitted from a computer which is attached to a device which is being monitored or controlled and include information regarding the status, usage or capabilities of the attached device. The device may send status messages and usage information of the device to either a resource administrator or to a service center on the Internet through a firewall. The message may be sent directly to the resource administrator station if urgent service is needed by the device. For routine information, the service center may manage all the resources on an intranet and may send predetermined types of information to the resource administrator using e-mail.",
	"url": null,
	"owner": "Ricoh Co., Ltd.",
	"publication_number": "07293081",
	"publication_date": "2007-11-06",
	"application_number": "10660527",
	"application_date": "2003-09-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system of remote diagnostic, control and information collection using multiple formats and multiple protocols with verification of formats and protocols",
	"summary": "",
	"abstract": "A system, method and program product for diagnosing, controlling and collecting information from devices. Information regarding events of each one of a plurality of target applications executing in an application unit is collected and formatted into one of multiple data formats for transmission through one of multiple communication protocols at the request of each of the target applications, through an interface. A combination of a data format and communication protocol requested by a target application is verified for validity. If the requested combination is invalid, a valid combination is substituted for more reliable transmission. The formatted data is transmitted through, e.g., e-mail or FTP to a predetermined destination or may be saved to local storage, e.g., a local disk. By sharing resources, code duplication is reduced or eliminated.",
	"url": null,
	"owner": "Ricoh Co., Ltd.",
	"publication_number": "07171670",
	"publication_date": "2007-01-30",
	"application_number": "09782164",
	"application_date": "2001-02-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multimodal access of meeting recordings",
	"summary": "",
	"abstract": "A meeting recorder captures multimodal information of a meeting. Subsequent analysis of the information produces scores indicative of visually and aurally significant events that can help identify significant segments of the meeting recording. Textual analysis can enhance searching for significant meeting segments and otherwise enhance the presentation of the meeting segments.",
	"url": null,
	"owner": "Ricoh Company, Ltd.",
	"publication_number": "07298930",
	"publication_date": "2007-11-20",
	"application_number": "10307235",
	"application_date": "2002-11-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for manufacturing customized prefabricated buildings including arbitrarily modularizing a building specification without using any pre-defined modules",
	"summary": "",
	"abstract": "Systems and methods for designing and manufacturing customized prefabricated buildings in optimized modules. In one embodiment, a system for manufacturing a customized prefabricated building includes a computer-usable medium having a sequence of instructions which, when executed by a processor, causes said processor to execute a process including receiving a specification for a customized prefabricated building that identifies components for the prefabricated building and the dimensions of the components, modularizing the specification into modules meeting overall length, width, and height limitations, and optimizing the modularization; a programmable manufacturing system controller coupled to the computer-usable medium and configured to generate instructions for manufacturing the said optimized modules having the plurality of components identified in the specification received by the computer-usable medium; and a manufacturing system coupled to the programmable manufacturing controller configured to execute the instructions generated by the programmable manufacturing controller for building the said optimized modules having the specified plurality of components.",
	"url": null,
	"owner": "Robotic Built Structures, Inc.",
	"publication_number": "07292908",
	"publication_date": "2007-11-06",
	"application_number": "10965407",
	"application_date": "2004-10-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Accessing a dataset using an unsupported access method",
	"summary": "",
	"abstract": "In another particular embodiment, the first access method is the basic direct access method, and the second access method is any of the basic sequential access method and the queued sequential access method. In yet another embodiment, the dataset is an extended format physical sequential dataset.",
	"url": null,
	"owner": "Rocket Software, Inc.",
	"publication_number": "07266552",
	"publication_date": "2007-09-04",
	"application_number": "10821717",
	"application_date": "2004-04-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Simulation method and apparatus for use in enterprise controls",
	"summary": "",
	"abstract": "A method, apparatus and data construct set for generating simulation data structures which can be used by a modeling system to interface between a PLC and simulator, the construct set encapsulating logic and at least a sub-set of simulation information for a particular resource.",
	"url": null,
	"owner": "Rockwell Automation Technologies, Inc.",
	"publication_number": "07266476",
	"publication_date": "2007-09-04",
	"application_number": "10614634",
	"application_date": "2003-07-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methodology that facilitates client and server interaction in a distributed industrial automation environment",
	"summary": "",
	"abstract": "The present invention relates to a system and methodology providing a virtual u201cnamespaceu201d architecture between client and server components in an industrial automation environment, wherein the namespace can be a structured store of logical names, instances and definitions, together with access and modification components. An Active Directory Service Interface (ADSI) family can be employed, for example, to navigate and access the namespace structure and contents. The present invention employs the concept of a u201cserviceu201d to encapsulate server-side behavior accessed through the namespace. Thus, logical names can be utilized to decouple client components from the physical location and implementation of server components. Some services, known as u201cbasic servicesu201d, may ignore the logical container structure exposed by an area model in a namespace. By contrast, services which utilize an area context and a set of named service items to interact with clients can be referred to as u201cnamespace extensions.u201d Further, services known as u201ccontext servicesu201d may use the area model to scope and control accesses, yet not employ a service item namespace organized by the area model.",
	"url": null,
	"owner": "Rockwell Automation Technologies, Inc.",
	"publication_number": "07308473",
	"publication_date": "2007-12-11",
	"application_number": "10207484",
	"application_date": "2002-07-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods that facilitate motion control through coordinate system transformations",
	"summary": "",
	"abstract": "The subject invention relates to systems and methods that facilitate motion between different coordinate systems in an industrial control environment. The systems and methods accept data in one coordinate system and transform the data to a different coordinate system. Suitable transformations include instructions that transform between Cartesian, pre-defined non-Cartesian, and user-defined non-Cartesian coordinate systems, including transformations between a non-Cartesian coordinate system to another non-Cartesian coordinate system. Such transformations can be programmed in essentially any industrial control language and can be seamlessly integrated with the control environment. The systems and methods can be utilized to generate a motion instruction that includes, among other information, source and target coordinate systems and the transformation between them. The subject invention provides for connecting various systems together through respective motion instructions, wherein a motion of a source system is mapped to a coordinate system of a target system and the target system is moved accordingly.",
	"url": null,
	"owner": "Rockwell Automation Technologies, Inc.",
	"publication_number": "07266425",
	"publication_date": "2007-09-04",
	"application_number": "10955068",
	"application_date": "2004-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for implementing a retransmission bridge",
	"summary": "",
	"abstract": "A method of and apparatus for implementing a radio retransmission bridge is disclosed. The method and apparatus includes devices and operations for creating a retransmission bridge software object with a base class application programming interface (API). The method and apparatus also includes devices and operations for creating waveforms with APIs inherited from the base class retransmission bridge API. The method and apparatus also includes devices and operations for identifying crossbanding waveforms being requested. Further, the method and apparatus include devices and operations for determining a location in a data stack in which to instantiate the retransmission bridge API, and instantiating the retransmission bridge API.",
	"url": null,
	"owner": "Rockwell Collins, Inc.",
	"publication_number": "07177590",
	"publication_date": "2007-02-13",
	"application_number": "10315402",
	"application_date": "2002-12-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for generating data sets for testing embedded systems",
	"summary": "",
	"abstract": "A system and method for providing seamless communication with threads executing on an embedded computer. Using a DAT system, a programmer can test the communication interfaces of a thread via either a scripting program, any COM-compliant program, or a graphical test utility. The DAT system automatically formats a block of data that is transmitted between the embedded computer and a host computer and accounts for machine specific enumeration sizes, machine specific pointer sizes, machine specific structure alignment boundaries, machine specific integer sizes, and machine specific byte ordering.",
	"url": null,
	"owner": "S2 Technologies, Inc.",
	"publication_number": "07237230",
	"publication_date": "2007-06-26",
	"application_number": "10105069",
	"application_date": "2002-03-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Recording medium for storing real time recording/reproduction information, method and apparatus for recording and reproducing in real time, and file operating method using the same",
	"summary": "",
	"abstract": "A recording medium for storing real time recording/reproduction information, a real time recording and reproducing method and apparatus, and a file operating method using the information. Real time recording/reproduction information for ensuring real time recording/reproduction is stored in a file control information area, in each real time file, or in a separate file, and real time recording/reproduction attributes are assigned to the file. Thus, real time recorded files can be continuously reproduced without interruption. Also, there are methods of creating a file to which real time recording/reproduction attributes are assigned, extending a data area, and recording and reproducing the file to which real time recording/reproduction attributes are assigned.",
	"url": null,
	"owner": "Samsung Electronics Co., Ltd.",
	"publication_number": "07286751",
	"publication_date": "2007-10-23",
	"application_number": "11430904",
	"application_date": "2006-05-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data base access method and system in management information base of network management protocol",
	"summary": "",
	"abstract": "Disclosed is a data base access method and system that can easily access a data base (DB) in a management information base (MIB) of a simple network management protocol (SNMP) or a common management information protocol (CMIP). The method includes making contents of the MIB into an MBean class where members of m_Attrs, m_AttrName, and m_AttrType including information of the MIB and member functions for accessing these members, and members of m_DBJob and m_ConditionClause for a data base (DB) work and member functions for accessing these members exist, extracting an MIB-based class by compiling the MBean class, inputting an MIB-related instruction to use the extracted MIB-based class, performing a corresponding operation such as a data readout from the MIB if the instruction does not refer to a DB operation, loading the extracted MIB-based class and a smart view DB class SvDB including common information required for a DB access if the instruction refers to the DB operation, and accessing the DB by obtaining a DB name and instruction name and type from the MIB-based class. According to the method, the DB can be easily accessed without changing a DB API even if the MIB is changed.",
	"url": null,
	"owner": "Samsung Electronics, Co., Ltd.",
	"publication_number": "07200653",
	"publication_date": "2007-04-03",
	"application_number": "10294705",
	"application_date": "2002-11-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Media session framework using a control module to direct and manage application and service servers",
	"summary": "",
	"abstract": "The present invention provides for multiplexing applications. In particular, an access receives a request from a user to access an application. Based on the received request, the access server establishes a communication link between the access server and the user. The access request is stored in an input request queue when an available communication path to the requested application is available. The communication path between the input request queue and the application is established, the stored request is removed and sent to the application.",
	"url": null,
	"owner": "SandCherry, Inc.",
	"publication_number": "07185094",
	"publication_date": "2007-02-27",
	"application_number": "09965057",
	"application_date": "2001-09-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interconnection arrangement of routers of processor boards in array of cabinets supporting secure physical partition",
	"summary": "",
	"abstract": "A multiple processor computing apparatus includes a physical interconnect structure that is flexibly configurable to support selective segregation of classified and unclassified users. The physical interconnect structure includes routers in service or compute processor boards distributed in an array of cabinets connected in series on each board and to respective routers in neighboring row cabinet boards with the routers in series connection coupled to routers in series connection in respective neighboring column cabinet boards. The array can include disconnect cabinets or respective routers in all boards in each cabinet connected in a toroid. The computing apparatus can include an emulator which permits applications from the same job to be launched on processors that use different operating systems.",
	"url": null,
	"owner": "Sandia Corporation",
	"publication_number": "07246217",
	"publication_date": "2007-07-17",
	"application_number": "11110344",
	"application_date": "2005-04-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Stereoscopic image processing and display system",
	"summary": "",
	"abstract": "An image processing apparatus includes an image obtaining unit and an information adding unit. The image obtaining unit obtains a base image for stereovision in a multiplex format or a side-by-side format, or obtains an original image and then converts it to such a base image. The information adding unit records information to be referred to for stereovision, such as the format of the base image and the number of assumed viewpoints, in a header of the image data.",
	"url": null,
	"owner": "Sanyo Electric Co., Ltd.",
	"publication_number": "07277121",
	"publication_date": "2007-10-02",
	"application_number": "10227945",
	"application_date": "2002-08-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data synchronization method and system",
	"summary": "",
	"abstract": "A method and system for synchronizing data between a network server and a mobile device is provided. In an embodiment, a plurality of object instances may be received from the network server, and at least one object instance may be selected. For each selected object instance, the plurality of object instances may be recursively searched to identify related object instances, the related object instances may be sorted, and the sorted object instances may be sent to the mobile device, followed by the selected object instance. In this manner, data synchronization between the network server and the mobile device may advantageously include only those object instances that are needed by the mobile device, thereby preventing redundant, or omitted, data transfers.",
	"url": null,
	"owner": "Sap AG",
	"publication_number": "07177865",
	"publication_date": "2007-02-13",
	"application_number": "10608537",
	"application_date": "2003-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing information display",
	"summary": "",
	"abstract": "Systems and methods for managing information display include the ability, at least in one implementation, to receive a message indicating that the information of a resource is to be displayed and to form a user interface for displaying the resource information by defining a pane in which to display the information and selecting a renderer operable to render the information in the pane.",
	"url": null,
	"owner": "Sap AG",
	"publication_number": "07191410",
	"publication_date": "2007-03-13",
	"application_number": "10307891",
	"application_date": "2002-12-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for using a business model user interface",
	"summary": "",
	"abstract": "Method and apparatus for providing a user interface application programming interface (API) for providing extended access to the database by third-party and user software products. In accordance with one embodiment, a method for accessing a business database includes instantiating a company object as an instance of a company class conforming to a component object model standard, setting a server property of the company object to a database server name, setting a company database name property of the company object to the name of a company, setting a user name property of the company object to the name of a user, setting a password property of the company object to a password of the user, setting a language property of the company object to a desired language of the user; and invoking a connect method within the company object, the connect method opening a software connection to a database identified by the company database name property.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07213235",
	"publication_date": "2007-05-01",
	"application_number": "10630729",
	"application_date": "2003-07-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Security service for an electronic marketplace",
	"summary": "",
	"abstract": "A security service for an electronic marketplace that permits members of the marketplace to use any signing service to attach electronic signatures to documents resident on the marketplace regardless of format differences between the member's internal computer system and the electronic marketplace.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07178024",
	"publication_date": "2007-02-13",
	"application_number": "09826738",
	"application_date": "2001-04-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for synchronizing data objects among participating systems via asynchronous exchange of messages",
	"summary": "",
	"abstract": "A computer-implemented method of, and system for, messaging in a computer network is disclosed. The computer network comprises at least two computer-based participant systems communicating through asynchronous exchange of messages. The first system maintains one or more data objects and notifies another system of modifications of the data objects by sending messages. Each time a data object is modified, the corresponding status object is updated and a modification status flag is checked. In response, a communication status flag is checked and a notification message is sent to the other system if necessary. The modification status flag is then reset. Upon receipt of a confirmation message from the other system, the communication status flag is then reset to the original status.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07302489",
	"publication_date": "2007-11-27",
	"application_number": "10632675",
	"application_date": "2003-08-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Test and verification framework",
	"summary": "",
	"abstract": "Systems and techniques to test a software product in one or more computer systems. In general, in one implementation, the technique includes calling components in a first computer system during execution of a test, recording the calls, and rerunning the recorded calls in a second computer system in order to recreate the behavior of the first computer system during execution of the test.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07185235",
	"publication_date": "2007-02-27",
	"application_number": "10306797",
	"application_date": "2002-11-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Using relationships between contexts in model view controller design pattern",
	"summary": "",
	"abstract": "Methods and apparatus, including computer program products, for implementing a computer system that provides a model, a first view and at least a second view for presenting the model, a first controller and at least a second controller for manipulating the model. The first and second views relate to the first and second controllers, respectively. The computer system further comprises at least a first context, a second context and a third context. A user interface element of the first view binds to a first structure element of the first context and a user interface element of the second view binds to a second structure element of the second context. The first structure element and the second structure element reference a third structure element of the third context.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07225424",
	"publication_date": "2007-05-29",
	"application_number": "10335191",
	"application_date": "2002-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Adapting a user interface for voice control",
	"summary": "",
	"abstract": "Method and systems to voice-enable a user interface using a voice extension module are provided. A voice extension module includes a preprocessor, a speech recognition engine, and an input handler. The voice extension module receives user interface information, such as, a hypertext markup language (HTML) document, and voice-enables the document so that a user may interact with any user interface elements using voice commands.",
	"url": null,
	"owner": "SAP Aktiengesellschaft",
	"publication_number": "07246063",
	"publication_date": "2007-07-17",
	"application_number": "10184072",
	"application_date": "2002-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer-implemented method and system to support in developing a process specification for a collaborative process",
	"summary": "",
	"abstract": "A computer-implemented method for a collaborative process of exchanging messages through an asynchronous messaging network. The method is embodied by a computer program that causes a computer system to retrieve information on local states and local state transitions related to each participant system from a first storage location, including information specifying local states of the corresponding participant system and events triggering, and resulting from, the respective local state transition; process the information to generate, and store in a second storage location, information on collaboration states and collaboration state transitions; retrieve information stored in the second storage location; process the information retrieved from the second storage location to generate information on incompletely specified terminal collaboration states among said collaboration states; and generate a result data object containing information on every incompletely specified terminal collaboration state found.",
	"url": null,
	"owner": "SAP Aktiengesellschaft",
	"publication_number": "07272614",
	"publication_date": "2007-09-18",
	"application_number": "10632674",
	"application_date": "2003-08-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Controller for accessing multiple radio frequency identification (RFID) readers",
	"summary": "",
	"abstract": "A radio frequency identification (RFID) controller within an RFID system includes an RFID interrogator interface configured to receive signals from RFID interrogators and configured to manage the RFID interrogators based on instructions received from an application program. The RFID interrogators are configured to receive data from an RFID tag. The controller also includes a controller core configured to process the signals received from the RFID interrogator interface and to provide the data to the application.",
	"url": null,
	"owner": "SAP Aktiengesellschaft",
	"publication_number": "07295113",
	"publication_date": "2007-11-13",
	"application_number": "11015833",
	"application_date": "2004-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic display of RFID and sensor data",
	"summary": "",
	"abstract": "Systems, methods and computer program products, implementing techniques for automatic data acquisition and the real-time display of automatically acquired data. A system implementing the techniques includes one or more automatic data acquisition devices that emit data; and a data integration system that receives data from the automatic data acquisition devices and processes the data. The data integration system includes a display system for displaying the data to a user. The display system is operable to generate a graphical display and to update the graphical display automatically and only when new data from the automatic data acquisition devices is available. The display system is operable to update only affected parts of the graphical display but not necessarily the entire display.",
	"url": null,
	"owner": "Sap Aktiengesellschaft",
	"publication_number": "07250862",
	"publication_date": "2007-07-31",
	"application_number": "11020384",
	"application_date": "2004-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generating a knowledge base",
	"summary": "",
	"abstract": "A method to automatically generate a new knowledge base includes receiving a signal that defines content that is to be included in the new knowledge base. Tables within an existing database are searched to identify at least one candidate table that is associated with data that may be relevant to the defined content that is to be included in the new knowledge base. At least one candidate application programming interface (API) is determined for each candidate table. Combinations of the identified at least one candidate table and the determined at least one candidate API are assessed to select from those combinations a master table and a master API for the new knowledge base. The new knowledge base is accessible by more than one application program within an integrated system. A non-expert user may automatically generate a new knowledge base and associated API with a single mouse click.",
	"url": null,
	"owner": "SAP Aktiengesellschaft",
	"publication_number": "07225177",
	"publication_date": "2007-05-29",
	"application_number": "10782576",
	"application_date": "2004-02-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Radio frequency identification (RFID) controller",
	"summary": "",
	"abstract": "A radio frequency identification (RFID) controller within an RFID system includes an RFID interrogator interface configured to receive signals from an RFID interrogator. The RFID interrogator receives data from RFID tags. The RFID controller also includes a user interface configured to receive a selection of data processing units and an arrangement of data processing units. The RFID controller further includes a controller core configured to process the signals received from the RFID interrogator interface and configured to modify processing of the signals from RFID interrogator based on the selection and the arrangement of the data processing units.",
	"url": null,
	"owner": "SAP Aktiengesellschaft",
	"publication_number": "07245220",
	"publication_date": "2007-07-17",
	"application_number": "10854766",
	"application_date": "2004-05-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Rapid application integration",
	"summary": "",
	"abstract": "Techniques are provided to integrate two or more application systems by using an declarative approach that describes functions or rules to be performed to integrate application systems. Particular integration functions are defined that may be useful for common integration activities. Integration functions may be defined for particular objects and may be assembled to form a declarative business process flow. The declarative business process flow identifies the objects to be exchanged between two or more systems, the sequence of particular transformation functions, the physical field to field transformations required, and the physical connection to be established between the systems. An application integration workstation is described that provides a framework and tools to design, develop and modify (or maintain) application integration software. Such an application integration workstation may reduce the time required to construct or maintain application integration software, which may be referred to as u201crapid application integration.u201d",
	"url": null,
	"owner": "SAP Aktiengesellschaft",
	"publication_number": "07225425",
	"publication_date": "2007-05-29",
	"application_number": "10318405",
	"application_date": "2002-12-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Rapid application integration using an integrated development environment",
	"summary": "",
	"abstract": "Techniques are provided to integrate two or more application systems by using an declarative approach that describes functions or rules to be performed to integrate application systems. Particular integration functions are defined that may be useful for common integration activities. Integration functions may be defined for particular objects and may be assembled to form a declarative business process flow. The declarative business process flow identifies the objects to be exchanged between two or more systems, the sequence of particular transformation functions, the physical field to field transformations required, and the physical connection to be established between the systems. An application integration workstation is described that provides a framework and tools to design, develop and modify (or maintain) application integration software. Such an application integration workstation may reduce the time required to construct or maintain application integration software, which may be referred to as u201crapid application integration.u201d",
	"url": null,
	"owner": "SAP Aktiengesellschaft",
	"publication_number": "07213227",
	"publication_date": "2007-05-01",
	"application_number": "10318356",
	"application_date": "2002-12-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Rapid application integration using functional atoms",
	"summary": "",
	"abstract": "Techniques are provided to integrate two or more application systems by using an declarative approach that describes functions or rules to be performed to integrate application systems. Particular integration functions are defined that may be useful for common integration activities. Integration functions may be defined for particular objects and may be assembled to form a declarative business process flow. The declarative business process flow identifies the objects to be exchanged between two or more systems, the sequence of particular transformation functions, the physical field to field transformations required, and the physical connection to be established between the systems. An application integration workstation is described that provides a framework and tools to design, develop and modify (or maintain) application integration software. Such an application integration workstation may reduce the time required to construct or maintain application integration software, which may be referred to as u201crapid application integration.u201d",
	"url": null,
	"owner": "SAP Aktiengesellschaft",
	"publication_number": "07257818",
	"publication_date": "2007-08-14",
	"application_number": "10318364",
	"application_date": "2002-12-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Rapid application integration using reusable patterns",
	"summary": "",
	"abstract": "Techniques are provided to integrate two or more application systems by using a declarative approach that describes functions or rules to be performed to integrate application systems. Particular integration functions are defined that may be useful for common integration activities. Integration functions may be defined for particular objects and may be assembled to form a declarative business process flow. The declarative business process flow identifies the objects to be exchanged between two or more systems, the sequence of particular transformation functions, the physical field to field transformations required, and the physical connection to be established between the systems. An application integration workstation is described that provides a framework and tools to design, develop and modify (or maintain) application integration software. Such an application integration workstation may reduce the time required to construct or maintain application integration software, which may be referred to as u201crapid application integration.u201d",
	"url": null,
	"owner": "SAP Aktiengesellschaft",
	"publication_number": "07237225",
	"publication_date": "2007-06-26",
	"application_number": "10318369",
	"application_date": "2002-12-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Testing of applications",
	"summary": "",
	"abstract": "Methods and apparatus, including computer program products, for testing a feature of a software application includes forming a feature call by incorporating test data into a data structure that is part of a test script and sending the feature call to the software application containing the feature for testing.",
	"url": null,
	"owner": "SAP Aktiengesellschaft",
	"publication_number": "07174541",
	"publication_date": "2007-02-06",
	"application_number": "10186387",
	"application_date": "2002-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for management of document cross-reference links",
	"summary": "",
	"abstract": "A computer-implemented system and method for handling documents. Data is stored about links between document content. A subset of the document content is defined. If links are identified as broken due to the determination of the document content subset, then the identified broken links are resolved before delivery of the document content subset.",
	"url": null,
	"owner": "SAS Institute Inc.",
	"publication_number": "07290205",
	"publication_date": "2007-10-30",
	"application_number": "10874462",
	"application_date": "2004-06-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing integration via a dial-up interface",
	"summary": "",
	"abstract": "A network system providing integration. The network system includes a client computer, a server, a server-side cryptographic function, a PKI-Bridge, a remote access switch, a client-side cryptographic function, a dial-up client, and a custom script dynamically linked library. The server-side cryptographic function is located on the server and provides cryptographic services. The PKI-Bridge provides an interface between the server and the server-side cryptographic function. The remote access switch provides an interface between the client computer and the server. The client-side cryptographic function is located on the client computer and provides cryptographic services. The dial-up client provides dial-up services to access the remote access switch. The custom script dynamically linked library provides an interface between the dial-up client and the client-side cryptographic function.",
	"url": null,
	"owner": "Schlumberger Omnes, Inc.",
	"publication_number": "07246238",
	"publication_date": "2007-07-17",
	"application_number": "09982072",
	"application_date": "2001-10-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Adaptive system and method for networked media applications",
	"summary": "",
	"abstract": "The invention is a flexible and adaptive application framework and method for providing media services via an interactive media services client device coupled to a programmable media services server device. A method of the preferred embodiment of the invention includes distributing or partitioning computation, data storage, and/or data transmission between the server and client devices to flexibly adapt to and take advantage of the available computing and/or network resources.",
	"url": null,
	"owner": "Scientific-Atlanta, Inc.",
	"publication_number": "07240103",
	"publication_date": "2007-07-03",
	"application_number": "10933136",
	"application_date": "2004-09-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Context sensitive television menu",
	"summary": "",
	"abstract": "A television menu system generates a television menu that is context sensitive based upon a service currently being provided to a user. In one implementation, a type of television service currently being viewed by a user determines whether particular menu items are presented to the user. In another implementations, determining which channel is being provided dictates whether particular menu options are included.",
	"url": null,
	"owner": "Scientific-Atlanta, Inc.",
	"publication_number": "07290274",
	"publication_date": "2007-10-30",
	"application_number": "09693606",
	"application_date": "2000-10-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Converting time-shift buffering for personal video recording into permanent recordings",
	"summary": "",
	"abstract": "A media content recording system in a subscriber television system includes a memory for storing logic, a buffer space for buffering a plurality of media content instances, and a processor configured with the logic to designate as permanent a media content instance among the plurality of media content instances in the buffer space that is requested by a user for permanent recording.",
	"url": null,
	"owner": "Scientific-Atlanta, Inc.",
	"publication_number": "07257308",
	"publication_date": "2007-08-14",
	"application_number": "10008624",
	"application_date": "2001-12-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Disk driver cluster management of time shift buffer with file allocation table structure",
	"summary": "",
	"abstract": "A file allocation system for a hard disk drive includes a memory with driver logic and a processor configured with the driver logic to receive a request to allocate hard disk space of a defined size for a buffer file. In some embodiments, the processor is configured with the driver logic to allocate clusters for the buffer file from a plurality of clusters on the hard disk, wherein the clusters for the buffer file store media content instances. In some embodiments, the processor is configured with the driver logic to designate a portion of the clusters of the buffer file for at least one non-buffer file such that the non-buffer file is permitted to share the portion of the clusters of the buffer file with the buffer file.",
	"url": null,
	"owner": "Scientific-Atlanta, Inc.",
	"publication_number": "07194563",
	"publication_date": "2007-03-20",
	"application_number": "10005628",
	"application_date": "2001-12-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Management of television presentation recordings",
	"summary": "",
	"abstract": "A method for managing television presentation recordings includes determining if a television presentation corresponding to a television presentation listing is scheduled to be recorded, assigning a color to the television presentation listing responsive to determining that the television presentation is scheduled to be recorded, and presenting the television presentation listing to a user.",
	"url": null,
	"owner": "Scientific-Atlanta, Inc.",
	"publication_number": "07218839",
	"publication_date": "2007-05-15",
	"application_number": "10073689",
	"application_date": "2002-02-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Media on demand session re-use",
	"summary": "",
	"abstract": "A system for establishing and re-using sessions for the delivery of media content from at least one server to any of a plurality of client devices that comprises a memory with logic and a processor configured by the logic to establish a first session to deliver first media content. The processor is further configured by the logic to receive a request for a second session to deliver second media content and determine whether a session can be re-used for the second session. The processor is further configured by the logic to re-use the first session for the second session responsive to determining that the first session can be used for the second session.",
	"url": null,
	"owner": "Scientific-Atlanta, Inc.",
	"publication_number": "07296074",
	"publication_date": "2007-11-13",
	"application_number": "10102250",
	"application_date": "2002-03-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for tagging media presentations with subscriber identification information",
	"summary": "",
	"abstract": "A system that inserts subscriber identification information includes, in a preferred embodiment, a system with a memory for storing subscriber identification information and a processor configured to insert the subscriber identification information into a media presentation to improve traceability of copied presentations to a subscriber.",
	"url": null,
	"owner": "Scientific-Atlanta, Inc.",
	"publication_number": "07158185",
	"publication_date": "2007-01-02",
	"application_number": "09847016",
	"application_date": "2001-05-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Synchronized video-on-demand supplemental commentary",
	"summary": "",
	"abstract": "A method for providing media to a user via an interactive media services client device coupled to a programmable media services server device includes receiving user input requesting on-screen comments to be provided with a media presentation and providing the user with a media presentation along with comments related to the media presentation.",
	"url": null,
	"owner": "Scientific-Atlanta, Inc.",
	"publication_number": "07200857",
	"publication_date": "2007-04-03",
	"application_number": "09693780",
	"application_date": "2000-10-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Security framework for supporting kernel-based hypervisors within a computing system",
	"summary": "",
	"abstract": "An inventive security framework for supporting kernel-based hypervisors within a computer system. The security framework includes a security master, one or more security modules and a security manager, wherein the security master and security modules execute in kernel space.",
	"url": null,
	"owner": "Secure Computing Corporation",
	"publication_number": "07263718",
	"publication_date": "2007-08-28",
	"application_number": "10726290",
	"application_date": "2003-12-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program product for authenticating users using a lightweight directory access protocol (LDAP) directory server",
	"summary": "",
	"abstract": "A system, method and computer program product for providing authentication to a firewall using a lightweight directory access protocol (LDAP) directory server is disclosed. The firewall can be configured through a graphical user interface to implement an authentication scheme. The authentication scheme is based upon a determination of whether at least part of one or more LDAP entries satisfy an authorization filter.",
	"url": null,
	"owner": "Secure Computing Corporation",
	"publication_number": "07185361",
	"publication_date": "2007-02-27",
	"application_number": "09495157",
	"application_date": "2000-01-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for message threat management",
	"summary": "",
	"abstract": "The present invention is directed to systems and methods for detecting unsolicited and threatening communications and communicating threat information related thereto. Threat information is received from one or more sources; such sources can include external security databases and threat information data from one or more application and/or network layer security systems. The received threat information is reduced into a canonical form. Features are extracted from the reduced threat information; these features in conjunction with configuration data such as goals are used to produce rules. In some embodiments, these rules are tested against one or more sets of test data and compared against the same or different goals; if one or more tests fail, the rules are refined until the tests succeed within an acceptable margin of error. The rules are then propagated to one or more application layer security systems.",
	"url": null,
	"owner": "Secure Computing Corporation",
	"publication_number": "07225466",
	"publication_date": "2007-05-29",
	"application_number": "11388575",
	"application_date": "2006-03-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for upstream threat pushback",
	"summary": "",
	"abstract": "The present invention is directed to systems and methods for detecting and preventing the delivery of unsolicited communications. A communication transmitted over a communications network is received and analyzed by a system processor. The system processor can extract attributes from the communication and compare extracted attributes to information stored in a system data store. In processing the communication, the system processor may assign a confidence level) a trust level, or other indicia of content. The results of that processing, analysis, and comparison can be propagated to one or more upstream computers in the path from the communication's origin to its destination. Such one or more upstream computers are identified from within the content of the communication, the header of the communication and/or the transfer protocol interactions in receiving the communication. The identified computers are authenticated to limit forgery. The upstream computers receiving the propagated information can selectively apply the information to reduce the flow of communications exhibiting the same threat and/or undesirable characteristics.",
	"url": null,
	"owner": "Secure Computing Corporation",
	"publication_number": "07213260",
	"publication_date": "2007-05-01",
	"application_number": "10373325",
	"application_date": "2003-02-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Context sensitive dynamic authentication in a cryptographic system",
	"summary": "",
	"abstract": "A system for performing authentication of a first user to a second user includes the ability for the first user to submit multiple instances of authentication data which are evaluated and then used to generate an overall level of confidence in the claimed identity of the first user. The individual authentication instances are evaluated based upon: the degree of match between the user provided by the first user during the authentication and the data provided by the first user during his enrollment; the inherent reliability of the authentication technique being used; the circumstances surrounding the generation of the authentication data by the first user; and the circumstances surrounding the generation of the enrollment data by the first user. This confidence level is compared with a required trust level which is based at least in part upon the requirements of the second user, and the authentication result is based upon this comparison.",
	"url": null,
	"owner": "Security First Corporation",
	"publication_number": "07260724",
	"publication_date": "2007-08-21",
	"application_number": "09666377",
	"application_date": "2000-09-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Server-side implementation of a cryptographic system",
	"summary": "",
	"abstract": "The invention is a secure server, or trust engine, having server-centric keys, or in other words, storing cryptographic keys and user authentication data on a server. Users access cryptographic functionality through network access to the trust engine; however, the trust engine does not release actual cryptographic keys or other authentication data. Therefore, the system provides that the keys and data remain secure. The server-centric storage of keys and authentication data provides for user-independent security, portability, availability, and straightforwardness, along with a wide variety of implementation possibilities.",
	"url": null,
	"owner": "Security First Corporation",
	"publication_number": "07187771",
	"publication_date": "2007-03-06",
	"application_number": "09666519",
	"application_date": "2000-09-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for performing sub-picture level splicing based on interrupts",
	"summary": "",
	"abstract": "Techniques to effectuate splicing at sub-picture level. In one aspect, splicing is effectuated via an interrupt generated after each splice has occurred. The interrupt may be generated by either the hardware designated to perform splicing or other peripheral hardware. The interrupt may be provided to a controller, which then performs the necessary processing to effectuate the next splice (e.g., load a new PID value for the next splice into the hardware register). The interrupts required for splicing may be generated in various manners, and typically depends on the specific design of the splicing and/or peripheral hardware. In one simple design, the splicing hardware generates an interrupt after each splice. Other mechanisms may also be used to generate the interrupt. For example, (e.g., scrambled audio) packets may be inserted into a transport stream and used to cause the hardware to generate an interrupt each time the packet is detected.",
	"url": null,
	"owner": "Sedna Patent Services, LLC",
	"publication_number": "07174084",
	"publication_date": "2007-02-06",
	"application_number": "09805492",
	"application_date": "2001-03-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Device status monitoring system, device status monitoring method, and a data storage medium and object program therefor",
	"summary": "",
	"abstract": "A device status monitoring system and method for a POS (point of sale) terminal system, in which an OPOS (OLE for Retail POS) object continuously records changes in device status to a file. A control system (OPOS object) includes a first object (control object) providing an interface for a device class to an application program, and a second object (service object) providing an interface for a specific device to the first object. The second object has commands for executing a process for: receiving status data indicating a device status from the specific device; detecting, as status change data, status data that changed by comparing the received status data with previously received status data; determining, based on predefined recording conditions, whether the status change data is data to be recorded in a log file; generating log data for recording the status change by converting the status change data to a text message and adding time information to the text message; and storing the log data to a log file specified by the recording conditions.",
	"url": null,
	"owner": "Seiko Epson Corporation",
	"publication_number": "07281251",
	"publication_date": "2007-10-09",
	"application_number": "10045578",
	"application_date": "2002-01-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Meeting system and information storage medium",
	"summary": "",
	"abstract": "In a meeting system, supplied-data which is convertible using a virtual machine is transmitted and received among a plurality of processing apparatuses interconnected via a transmission line, and meeting data is reproduced. At least two of the plurality of processing apparatuses include a meeting data reproducing apparatus respectively. At least one meeting data reproducing apparatus includes converting means including a virtual machine for converting the supplied-data into a data format which allows the meeting data to be reproduced, a communication interface unit for receiving the supplied-data from other processing apparatuses, and storage means in which a generated image is stored and which is accessible by other processing apparatuses via the communication interface unit. Each of at least one meeting data reproducing apparatus described above and another meeting data reproducing apparatus including the converting means and the communication interface unit reads part of the meeting data from the storage means and reproduces meeting data in a task-distributed fashion.",
	"url": null,
	"owner": "Seiko Epson Corporation",
	"publication_number": "07251675",
	"publication_date": "2007-07-31",
	"application_number": "09743112",
	"application_date": "2000-05-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for mediating printing on network",
	"summary": "",
	"abstract": "The technique of the present invention intermediates between an arbitrary client and an arbitrary printer connecting with a network to actualize practical printing works. A print portal system utilizing a server connected to the network intermediates between the client and the printer to execute a printing operation. The client outputs a printing requirement, which specifies print data of interest and a printer as an output resource, to the print portal system. The print portal system converts the input print data into data of a general purpose format, which does not depend upon the type of the printer, and transfers the converted print data to the specified printer.",
	"url": null,
	"owner": "Seiko Epson Corporation",
	"publication_number": "07266590",
	"publication_date": "2007-09-04",
	"application_number": "09959011",
	"application_date": "2001-02-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Low-latency multi-hop ad hoc wireless network",
	"summary": "",
	"abstract": "A multi-radio sensor node is provided that includes two or more communication devices. The communication devices include radio frequency (RF) devices like radios. Each communication device supports simultaneous communications among multi-radio sensor nodes of respective independent network clusters. A network structure is provided that includes two or more local network clusters. Each local network cluster includes numerous multi-radio sensor nodes. Each communication device of a multi-radio sensor node supports communication among the multi-radio sensor nodes of a different one of the local network clusters so that simultaneous communications are supported among the multi-radio sensor nodes of the local network clusters. The multi-radio sensor nodes of the local network clusters determine their locations relative to the other multi-radio sensor nodes of the independent network clusters with which they communicate. The location determination includes performing timing synchronization via synchronization signals communicated among the local network clusters, and acoustic signaling.",
	"url": null,
	"owner": "Sensoria Corporation",
	"publication_number": "07161926",
	"publication_date": "2007-01-09",
	"application_number": "10188514",
	"application_date": "2002-07-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Attention economy for attention to messages, tasks and resources",
	"summary": "",
	"abstract": "A centrally tracked artificial currency is provided within the context of an enterprise. This currency serves as a unit of account, medium of exchange, and store of value in a corporate u201cattention economy.u201d Users (typically coworkers) in the enterprise are allotted a base number of currency units, which they can earn, exchange, and spend in a variety of ways to signal importance and u201cpurchaseu201d attention of others, or priority for other organization resources. In one aspect, senders of messages can specify an amount of currency to be associated with the message, so that recipients can see the specified amount before deciding whether to read the message. Once such a system is in use, it facilitates exchange of value based on user-created transactions regarding behavior, communication, resources, incentives, and priorities.",
	"url": null,
	"owner": "Seriosity, Inc.",
	"publication_number": "07240826",
	"publication_date": "2007-07-10",
	"application_number": "11339814",
	"application_date": "2006-01-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for scalable streaming of images with client-side control",
	"summary": "",
	"abstract": "Embodiments of the present invention provide systems and methods for managing and transmitting image data. Some embodiments are particularly suited to streaming JPEG 2000 images from a web server.",
	"url": null,
	"owner": "Sharp Laboratories of America",
	"publication_number": "07260614",
	"publication_date": "2007-08-21",
	"application_number": "09897383",
	"application_date": "2001-07-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Listening module for asynchronous messages sent between electronic devices of a distributed network",
	"summary": "",
	"abstract": "An electronic device is disclosed that is adapted for use in a distributed network of electronic devices. The device includes a processor, a communications layer and memory. The communications layer is in electronic communication with the processor for communications with the distributed network. The memory is in electronic communication with the processor for storing data. A software element is configured by an application to send a request to a plurality of receiver components where the request requires a response from each receiver component of the plurality of receiver components. The device also includes a smart listener configured to receive the request from the software element and to store the request in the memory. The smart listener is configured to transmit the request to the plurality of receiver components through the distributed network and to listen for responses from any of the plurality of receiver components.",
	"url": null,
	"owner": "Sharp Laboratories of America, Inc.",
	"publication_number": "07305680",
	"publication_date": "2007-12-04",
	"application_number": "10218333",
	"application_date": "2002-08-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Television having a java engine and a removable device port",
	"summary": "",
	"abstract": "Method and apparatus for use with televisions having an internal Java engine are included among the embodiments. In exemplary systems, a PCMCIA port allows the Java engine to load and execute Java applets selected by the viewer. Provision is made for system-aware applets to run concurrently with platform-independent applets on different Java display planes that are merged for display. Other embodiments are described and claimed.",
	"url": null,
	"owner": "Sharp Laboratories of America, Inc.",
	"publication_number": "07221407",
	"publication_date": "2007-05-22",
	"application_number": "10868591",
	"application_date": "2004-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Asynchronous messaging using a dynamic routing network",
	"summary": "",
	"abstract": "A dynamic content routing network routes update messages containing updates to properties of live objects from input sources to clients having the objects. Certain objects served to clients by a server are indicated as u201clive.u201d When the clients receive live objects, the clients identify the object IDs associated with the objects and register the object IDs with the routing network. The routing network maintains a registry of object IDs and clients. An input source provides an update message to the routing network containing the object ID and data specifying an update to a property of the object. The routing network routes the message to each client that has registered for the object ID contained in the message. Upon receipt of the message, a client updates the specified property of the live object.",
	"url": null,
	"owner": "Shaw Parsing LLC",
	"publication_number": "07277917",
	"publication_date": "2007-10-02",
	"application_number": "11347802",
	"application_date": "2006-02-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for developing and executing a wireless application gateway",
	"summary": "",
	"abstract": "The invention provides a system and method that enables a business developer to develop and execute a Wireless Application Gateway (WAG) without programming or writing code. The WAG, as developed and executed through this invention can support a variety of wireless devices and a variety of backend systems. The business developer can, without writing code, configure screens for a plurality of mobile devices and define the business logic to carry out a process involving communication between backend systems and mobile devices. Without the need of programming, the business developer can select and work with a plurality of backend systems and business processes at runtime of the WAG.",
	"url": null,
	"owner": "Shipcom Wireless Inc",
	"publication_number": "07197041",
	"publication_date": "2007-03-27",
	"application_number": "10232464",
	"application_date": "2002-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Document publishing and rendering",
	"summary": "",
	"abstract": "A facility for preparing content for display is described. The facility includes a publishing subsystem that, when applied to content, publishes the content. The facility further includes a rendering subsystem that is distinct from the publishing subsystem and that, when applied to content, renders the content.",
	"url": null,
	"owner": "Siebel Systems, Inc.",
	"publication_number": "07181682",
	"publication_date": "2007-02-20",
	"application_number": "10184713",
	"application_date": "2002-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, apparatus, and system for implementing caching of view custom options in a framework to support web-based applications",
	"summary": "",
	"abstract": "According to one aspect of the present invention, a system is provided for implementing caching of view custom options in a framework to support web-based applications. The system comprising a set of server-side objects managed by an object manager (OM) running on a server. The system further comprises a set of browser-side objects running on a browser running on a client. The system also comprises a remote procedure call (RPC) mechanism to enable re-targeting of methods from browser-side objects to server-side objects. The system additionally comprises a notification mechanism to facilitate transmission of notifications from server-side objects to browser-side objects. The system also comprises a cache on the client to store custom options of views, wherein each view is a display panel consisting of a particular arrangement of applets.",
	"url": null,
	"owner": "Siebel Systems, Inc.",
	"publication_number": "07203948",
	"publication_date": "2007-04-10",
	"application_number": "09969966",
	"application_date": "2001-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for multi-channel communication queuing using routing and escalation rules",
	"summary": "",
	"abstract": "A system, apparatus, and method for routing work items to agents, wherein the work items can be of one of two or more different communication media types from one of two or more different communication channels. A queuing engine includes a list of routes and each route is associated with one or more properties. The list of routes can further include information related to one or more escalation rules for each route; the type of communication media available along the route for handling one or more of the work items; whether the route is active; the priority of the route; whether work items can be handled real-time; the service level for work items handled on the route; and the number of work items that can be assigned to the route. The queuing engine determines various properties required to handle each work item, such as the communication media type, agent language and skill level, and the category and recipient of the work item, and assigns each work item to one of the one or more agents based on one or more of the properties. When the queuing engine determines that a work item has been waiting a predetermined amount of time to be assigned to an agent, the queuing engine can escalate the search for an agent to handle the work item based on the escalation rules. The queuing engine can also substitute values for variables in the routing and escalation rules, thereby reducing the number of rules that must be entered to achieve the same routing capability.",
	"url": null,
	"owner": "Siebel Systems, Inc.",
	"publication_number": "07308093",
	"publication_date": "2007-12-11",
	"application_number": "11515604",
	"application_date": "2006-09-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for providing resources from a first component to a second component in a communication network",
	"summary": "",
	"abstract": "In one aspect, a method is provided for providing resources provided in a first communication component to a second communication component, the components in a packet-switched communication networks. The resources being provided by software which runs on the communication components and which accesses the hardware of the communication components. A service examines the hardware of at least one of the communication components in order to determine whether a resource can be provided by a software on said communication component. If the result is positive, the resource-specific software is transmitted to the communication component and provides the resource to be used.",
	"url": null,
	"owner": "Siemens Aktiengesellschaft",
	"publication_number": "07263352",
	"publication_date": "2007-08-28",
	"application_number": "10525123",
	"application_date": "2003-07-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, apparatus and software program for processing and/or evaluating MMS-related messages",
	"summary": "",
	"abstract": "A method for processing and/or evaluating MMS (Multimedia Messaging Service)-related messages (Multimedia Messages (MMs), parts of MMs, delivery reports, read-reply reports, MMS notifications, etc.), on a device or device ensemble adapted to participate in mobile telecommunication (Mobile Station (MS); User Equipment (UE); Mobile Equipment (ME); laptop, notebook, organizer, PC, etc., connected to a MS, UE, etc.), the device or device ensemble accommodating an MMS User Agent and accommodating or adapted to accommodate at least one SIM card (Subscriber Identity module) and/or one UICC (Universal Integrated Circuit Card) with a USIM (UMTS (Universal Mobile Telecommunication Service)-SIM), wherein the MMS-related messages are terminal originated or terminal terminated. The MMS-related messages are processed and/or evaluated by at least one SAT/USAT application (SIM Application Toolkit/USIM Application Toolkit) residing on the SIM card/UICC.",
	"url": null,
	"owner": "Siemens Aktiengesellschaft",
	"publication_number": "07212807",
	"publication_date": "2007-05-01",
	"application_number": "10186365",
	"application_date": "2002-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multimedia terminal for telephony allowing multipoint connections",
	"summary": "",
	"abstract": "A multimedia terminal for telephony based on the ITU-T Standard H.323 sets up multipoint connections to a plurality of other terminals. The multimedia terminal has a controller for processing signaling information for point-to-multipoint connections and has a mixer for mixing datastreams originating at the terminals involved in the multipoint connection and for providing datastream mixtures to these terminals.",
	"url": null,
	"owner": "Siemens Aktiengesellschaft",
	"publication_number": "07158487",
	"publication_date": "2007-01-02",
	"application_number": "09441535",
	"application_date": "1999-11-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Power distribution expert system",
	"summary": "",
	"abstract": "Content is generated on a host system based on real-time data from a controlled process collected over the internet from a customer's client automation system, such as a machine tool control system. The client system may request content from a host website. Instructions associated with the requested content, which may be in the form of software to be run on the client, is delivered to the client via download over the internet. The client, executing the software, captures real-time data associated with a controlled process and transmits it to the host, where content based on the data can be generated for the client and/or its owner. Data gathered by the host, and content generated on the basis of the data, may be made accessible to machine tool manufacturers. Also, data received by the host is associated with an identifier defined for each client system. A historical database for given client equipment can thereby be created.",
	"url": null,
	"owner": "Siemens Aktiengesellschaft",
	"publication_number": "07292900",
	"publication_date": "2007-11-06",
	"application_number": "09950726",
	"application_date": "2001-09-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Call completion services for hybrid public/private communications networks",
	"summary": "",
	"abstract": "A communications network with callback completion to public network stations. An enterprise private network (EPN) includes a communications server, e.g., a private branch exchange (PBX) managing communications with communications devices located at EPN stations and is connected to a public communications network. A call completion (CC) server connected through a Parlay Gateway to the public communications network manages callback requests from connected communications devices to public communications network stations. Call completion to busy subscriber (CCBS) and call completion on no reply (CCNR) services are thus made available from the EPN to the public network or networks including a mixture of public and private telephones.",
	"url": null,
	"owner": "Siemens Communications, Inc.",
	"publication_number": "07203298",
	"publication_date": "2007-04-10",
	"application_number": "10385226",
	"application_date": "2003-03-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for authorizing a party to join a conference",
	"summary": "",
	"abstract": "A system, method, apparatus, means, and computer program code for allowing an authorized party to join a conference are provided. In some embodiments, an application may create or generate a request for an MCU to handle an ad-hoc or meet-me type conference. The application may provide the request to an MCU resource controller or other device. The MCU resource controller may have knowledge of the capabilities of one or more MCUs and be able to assign an MCU to host or otherwise handle the conference. In addition, the MCU resource controller may create or generate a resource address that a participant in the conference may use to access the assigned MCU. The MCU resource controller can provide the resource address to the application, which may then distribute the resource address to one or more parties participating in the conference. The resource address may include or have associated data that the assigned MCU can use to validate or authorize a party to join the conference.",
	"url": null,
	"owner": "Siemens Communications, Inc.",
	"publication_number": "07184531",
	"publication_date": "2007-02-27",
	"application_number": "10456017",
	"application_date": "2003-06-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for indicating an annotation for a document",
	"summary": "",
	"abstract": "Embodiments provide a system, method, apparatus, means, and computer program code that allow multiple annotations to a document to be created and that distinguish between the annotations made by different people. The people may view documents, exchange ideas and messages, etc. via a server or conference/collaboration system at different times and/or without being in direct communication with each other. In such an off-line collaboration mode, the people may want to add listen to, view, or add annotations regarding one or more documents. The methods and systems described herein allow users to follow the trail of annotations regarding a document and to distinguish between the voice or other audible annotations created by other people.",
	"url": null,
	"owner": "Siemens Communications, Inc.",
	"publication_number": "07257769",
	"publication_date": "2007-08-14",
	"application_number": "10456336",
	"application_date": "2003-06-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for presence-based area monitoring",
	"summary": "",
	"abstract": "A telecommunications device includes a positioning controller () adapted to determine positioning information for said telecommunications device; and a wireless communications controller () adapted to receive said positioning information from said positioning controller and cause said positioning information to be transmitted to an associated administration device (-) when said telecommunications device is determined to be out of a predetermined range.",
	"url": null,
	"owner": "Siemens Communications, Inc.",
	"publication_number": "07202814",
	"publication_date": "2007-04-10",
	"application_number": "10672439",
	"application_date": "2003-09-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for processing conference collaboration records",
	"summary": "",
	"abstract": "A telecommunications system includes a network () and a multimedia server () operably coupled to the network. The multimedia server () is adapted to manage a multimedia conference and includes a memory () for storing selectable portions of the multimedia conference. The system further includes one or more client devices () operably coupled to the network and adapted to set recording cues for choosing portions of said multimedia conference for playback. The multimedia server or clients may include a voice recognition system () for transcribing audio portions of the conference. The voice recognition system may further be used to detect instances of the recording cues. In addition, in certain embodiments, the system provides for a moderator or participants to the conference an ability to adjust relevance probabilities generated upon recognition of the cues.",
	"url": null,
	"owner": "Siemens Communications, Inc.",
	"publication_number": "07248684",
	"publication_date": "2007-07-24",
	"application_number": "10316514",
	"application_date": "2002-12-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for web-based presence perimeter rule monitoring",
	"summary": "",
	"abstract": "A telecommunications system according to an embodiment of the present invention includes a wireless device (-) including a positioning controller () and a communications controller (); and an administrative device (-) for receiving alerts from said wireless communication device via said communications controller when said positioning controller determines that said wireless device is outside a predetermined geographic range, route, or daily routine.",
	"url": null,
	"owner": "Siemens Communications, Inc.",
	"publication_number": "07224966",
	"publication_date": "2007-05-29",
	"application_number": "10672456",
	"application_date": "2003-09-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for automatic form segmentation for raster-based passive electronic documents",
	"summary": "",
	"abstract": "Systems and methods for automatically extracting form information (document structure, elements, format, etc.) from electronic documents such as raster-based passive documents, and storing such form information in a file in accordance with a predetermined DTD (document type definition).",
	"url": null,
	"owner": "Siemens Corporate Research, Inc.",
	"publication_number": "07305612",
	"publication_date": "2007-12-04",
	"application_number": "10403106",
	"application_date": "2003-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program product for providing an interface for instantiating additional programmable logic controller functionality",
	"summary": "",
	"abstract": "Embodiments of a system, method and computer program product are described for instantiating additional programmable logic controller (PLC) functionality. In accordance with one embodiment, an extension for a PLC may be identified and loaded into a memory space of the PLC. The loaded extension has an initialization interface that may be exposed to the PLC. When the initialization interface is invoked, functionality of the PLC may be passed to the extension as at least one parameter of the invoked initialization interface. The extension can then be initialized utilizing the passed functionality.",
	"url": null,
	"owner": "Siemens Energy & Automation, Inc.",
	"publication_number": "07269464",
	"publication_date": "2007-09-11",
	"application_number": "11099968",
	"application_date": "2005-04-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for providing an adaptive interface for use in interrogating an application",
	"summary": "",
	"abstract": "A method and a system to interface in order to interrogate a target application. The method and system includes an interface processor receiving data representing a query for information from a target application; a validation processor for validating whether the query representative data is suitable for initiating a search for information on the target application; a data formatting processor for formatting the query representative data into a format suitable for communication to the target application in response to the validation; and a communication processor for communicating the formatted query representative data to the target application.",
	"url": null,
	"owner": "Siemens Medical Solutions Health Services Corporation",
	"publication_number": "07219094",
	"publication_date": "2007-05-15",
	"application_number": "10109156",
	"application_date": "2002-03-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and user interface for accessing and processing patient record information",
	"summary": "",
	"abstract": "A system facilitates the secure access, and update of patient record information and the creation and navigation of image menus supporting the location and access of desired patient record data by a user. A method for use by a portable processing device for accessing patient record information involves receiving user entered information identifying at least one patient record to be acquired and a content portion of a patient record to be acquired. A patient record repository is accessed by generating a URL link including an address of the repository and containing fields incorporating the information identifying the content portion and the patient record. The generated URL link is communicated to an application used for accessing the repository and the identified patient record content portion is received in response to the communication.",
	"url": null,
	"owner": "Siemens Medical Solutions Health Services Corporation",
	"publication_number": "07165062",
	"publication_date": "2007-01-16",
	"application_number": "09939965",
	"application_date": "2001-08-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and user interface for communicating and processing patient record information",
	"summary": "",
	"abstract": "A system facilitates the secure access, transfer and update of patient record information and the creation and navigation of image menus supporting the location and access of desired patient record data by a user. A system provides a user interface for use by a portable processing device for accessing and navigating patient record information. The system receives user identification information for use in authorizing user operation of the portable processing device and initiates display of an image including a plurality of links to a corresponding plurality of individual patients. The system also initiates display of a patient record content index image including a plurality of links to a corresponding plurality of items of patient record information in response to user selection of a link to one of the plurality of individual patients. The system further initiates display of an image including information comprising a portion of a patient record in response to user selection of a link to one of the plurality of items of patient record information.",
	"url": null,
	"owner": "Siemens Medical Solutions Health Services Corporation",
	"publication_number": "07225408",
	"publication_date": "2007-05-29",
	"application_number": "09939886",
	"application_date": "2001-08-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for providing power-hit tolerant state machines and data storage",
	"summary": "",
	"abstract": "A system for providing data restoration in a gaming machine is provided.",
	"url": null,
	"owner": "Sierra Design Group",
	"publication_number": "07278068",
	"publication_date": "2007-10-02",
	"application_number": "10794430",
	"application_date": "2004-03-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integrated-circuit implementation of a storage-shelf router and a path controller card for combined use in high-availability mass-storage-device shelves that may be incorporated within disk arrays, and a storage-shelf-interface tunneling method and system",
	"summary": "",
	"abstract": "An integrated circuit implementing a storage-shelf router, used in combination with path controller cards and optionally with other storage-shelf routers, to interconnect SATA disks within a storage shelf or disk array to a high-bandwidth communications medium, such as an FC arbitrated loop. Various embodiments of the present invention provide a tunneling mechanism through the storage-shelf interface provided by one or more storage-shelf routers within a storage shelf to enable external processing entities to directly access various components within the storage shelf. In one embodiment of the present invention, a WRITE-BUFFER command and a READ-BUFFER command are added to the command interface supported by storage-shelf router. These commands are exchanged via the FCP protocol over the fiber channel in the same manner that SCSI commands are packaged within the FCP protocol. In certain cases, the information packaged within the WRITE-BUFFER and READ-BUFFER commands is directly exchanged with internal disk drives. In other cases, the information is extracted and written to various data structures maintained within internal components of the storage shelf. The WRITE-BUFFER and READ-BUFFER commands essential provide a breach or tunnel in the high-availability storage-shelf virtual interface provided by one or more storage-shelf routers within a storage shelf, allowing an external processing entity to exchange information through the tunnel without intervention by, but facilitated and supported by, the one or more storage-shelf routers within the high-availability storage shelf.",
	"url": null,
	"owner": "Sierra Logic",
	"publication_number": "07167929",
	"publication_date": "2007-01-23",
	"application_number": "10702065",
	"application_date": "2003-11-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and computer program product for blending textures in a texture paging scheme",
	"summary": "",
	"abstract": "Methods, systems, and computer program products for blending textures used to render computer generated images are provided. In an embodiment of the invention, a MIP-mapped mask texture is constructed. Each MIP-level of the MIP-mapped mask texture includes texels representative of different mask information. The MIP-mapped mask texture is sampled during rendering to obtain mask information. The obtained mask information is used to blend between textures. The invention is used to blend, for example, between multiple textures wherein, zero, one, or more of the textures are MIP-mapped and/or between different levels of one or more three-dimensional textures. In an embodiment, the most appropriate texture amongst multiple textures, each providing coverage at different resolutions, is selected for a fragment being rendered, thereby avoiding texture scintillation.",
	"url": null,
	"owner": "Silicon Graphics, Inc.",
	"publication_number": "07295212",
	"publication_date": "2007-11-13",
	"application_number": "10425735",
	"application_date": "2003-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for graphics culling",
	"summary": "",
	"abstract": "A method is disclosed for culling an object database in a graphics processing system. In one embodiment, the method comprises encoding per-object parameters and culling parameters. The per-object parameters are encoded in texture format thereby creating at least one per-object texture containing the encoded per-object parameters. Next, a fragment program used in a fragment processor of the GPU is optionally updated. The updated fragment program embodies a culling operation. A polygon is then rendered, wherein the rendering step includes per-fragment operations. During the per-fragment operations, the updated fragment program is executed. The culling operation embodied therein (i) accesses the culling parameter, (ii) samples the per-object textures, and (iii) produces cull results for a set of database objects. In this fashion, the fragment processor in the GPU is leveraged to perform computationally intensive culling operations.",
	"url": null,
	"owner": "Silicon Graphics, Inc.",
	"publication_number": "07212204",
	"publication_date": "2007-05-01",
	"application_number": "11043038",
	"application_date": "2005-01-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Architecture and API for of transport and upper layer protocol processing acceleration",
	"summary": "",
	"abstract": "A network interface card comprising an upper layer protocol (ULP) handler, a TCP handler capable of interfacing with said ULP handler and, a link handler. The network interface card is adapted to take over and perform at least one session layer function of a host computer connected to a network.",
	"url": null,
	"owner": "Silverback Systems Inc.",
	"publication_number": "07184445",
	"publication_date": "2007-02-27",
	"application_number": "10775069",
	"application_date": "2004-02-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Display device having pagewidth printhead adjacent lower edge of housing",
	"summary": "",
	"abstract": "A display device for use as a computer monitor, the display device comprising:nn",
	"url": null,
	"owner": "Silverbrook Research Pty Ltd",
	"publication_number": "07229226",
	"publication_date": "2007-06-12",
	"application_number": "10922968",
	"application_date": "2004-08-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for contract authority",
	"summary": "",
	"abstract": "A contract authority for use by an automated system of record and an automated negotiations engine for iterative, multivariate negotiations which stores each set of terms proposed at each iteration to form the basis of the system of record. The contract authority of the invention assigns a unique identifier to each negotiated transaction and enables the participants to use that number to track all activities against the transaction for analysis and reporting purposes.",
	"url": null,
	"owner": "Sky Technologies LLC",
	"publication_number": "07222109",
	"publication_date": "2007-05-22",
	"application_number": "09702050",
	"application_date": "2000-10-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for automated, iterative development negotiations",
	"summary": "",
	"abstract": "An automated negotiations engine for iterative, multivariate negotiations of developments of products and programs which stores each set of terms proposed at each iteration to form the basis of the system of record. Active templates created using the present invention can be used to inform other systems automatically of agreed upon terms so that products or computer programs can be generated by them.",
	"url": null,
	"owner": "Sky Technologies, LLC",
	"publication_number": "07194442",
	"publication_date": "2007-03-20",
	"application_number": "09702049",
	"application_date": "2000-10-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for process mining",
	"summary": "",
	"abstract": "An process mining system for analyzing the processes used to implement negotiated contracts and other agreements stored in an automated system of record. Using unique identifiers assigned by the contract authority of the invention, process mining can be done to evaluate the effectiveness of processes used to implement one or more sets of negotiations.",
	"url": null,
	"owner": "Sky Technologies, LLC",
	"publication_number": "07162458",
	"publication_date": "2007-01-09",
	"application_number": "09702128",
	"application_date": "2000-10-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Location-based services that choose location algorithms based on number of detected access points within range of user device",
	"summary": "",
	"abstract": "A location beacon database and server, method of building location beacon database, and location based service using same. Wi-Fi access points are located in a target geographical area to build a reference database of locations of Wi-Fi access points. At least one vehicle is deployed including at least one scanning device having a GPS device and a Wi-Fi radio device and including a Wi-Fi antenna system. The target area is traversed in a programmatic route to avoid arterial bias. The programmatic route includes substantially all drivable streets in the target geographical area and solves an Eulerian cycle problem of a graph represented by said drivable streets. While traversing the target area, periodically receive the GPS coordinates of the GPS device. While traversing the target area, detecting Wi-Fi signals from Wi-Fi access points in range of the Wi-Fi device and recording identity information of the detected Wi-Fi access point in conjunction with GPS location information of the vehicle when the detection of the Wi-Fi access point was made. The location information is used to reverse triangulate the position of the detected Wi-Fi access point; and the position of the detected access point is recorded in a reference database.",
	"url": null,
	"owner": "Skyhook Wireless, Inc.",
	"publication_number": "07305245",
	"publication_date": "2007-12-04",
	"application_number": "11261988",
	"application_date": "2005-10-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computing device with an embedded microprocessor or micro-controller",
	"summary": "",
	"abstract": "A computing device with an embedded microprocessor or micro-controller, including a software stack which comprises a content manager, and a runtime environment positioned in the stack above or together with a hardware abstraction layer. The content manager is not specific to any one design of runtime environment or hardware abstraction layer, so that several different designs of runtime environment and/or hardware abstraction layer can each operate with the same content manager. This de-couples the content manager from the runtime environment and/or hardware abstraction layer (e.g. a Java Virtual machine; elements of the operating system). The core advantage is that a single content manager can be used across multiple runtime environments and/or hardware abstraction layers; runtime environments and OSs can therefore be swapped without needing to re-write the content manager.",
	"url": null,
	"owner": "Smart Card Solutions Limited",
	"publication_number": "07182250",
	"publication_date": "2007-02-27",
	"application_number": "10451033",
	"application_date": "2001-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Decoding an alternator output signal",
	"summary": "",
	"abstract": "An engine diagnostic system is provided that enables a service technician to evaluate engine cylinder contribution to output power. The service technician couples one or more signal leads to the vehicle's battery, alternator, or accessory receptacle (e.g., cigarette lighter receptacle) to provide an alternator output signal to a signal analyzer. The signal analyzer processes the alternator output signal to generate an engine signature, which represents engine cylinder contribution to engine output power.",
	"url": null,
	"owner": "Snap-On Incorporated",
	"publication_number": "07162397",
	"publication_date": "2007-01-09",
	"application_number": "10840509",
	"application_date": "2004-05-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Determining engine cylinder contribution from indexed engine data",
	"summary": "",
	"abstract": "An engine diagnostic system is provided that enables a service technician to evaluate engine cylinder contribution to output power. The service technician couples one or more signal leads to the vehicle's battery, alternator, or accessory receptacle (e.g., cigarette lighter receptacle) to provide an alternator output signal to a signal analyzer. The signal analyzer processes the alternator output signal to generate an engine signature, which represents engine cylinder contribution to engine output power.",
	"url": null,
	"owner": "Snap-On Incorporated",
	"publication_number": "07171302",
	"publication_date": "2007-01-30",
	"application_number": "10840434",
	"application_date": "2004-05-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Determining engine cylinder contribution from indexed engine data",
	"summary": "",
	"abstract": "An engine diagnostic system is provided that enables a service technician to evaluate engine cylinder contribution to output power. The service technician couples one or more signal leads to the vehicle's battery, alternator, or accessory receptacle (e.g., cigarette lighter receptacle) to provide an alternator output signal to a signal analyzer. The signal analyzer processes the alternator output signal to generate an engine signature, which represents engine cylinder contribution to engine output power.",
	"url": null,
	"owner": "Snap-On Incorporated",
	"publication_number": "07286927",
	"publication_date": "2007-10-23",
	"application_number": "11546382",
	"application_date": "2006-10-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for serving software applications to client computers",
	"summary": "",
	"abstract": "A method and system for serving software applications to remote clients across the internet, for example, is disclosed that preferably utilizes standard, SMB (server message block), protocols, which are available in commercial operating systems. Further, an associated business method is described in which subscribing institutions can out-source the application serving to a third party institution, transparently. Finally, a port proxy system is provided that enables tunneling through firewalls that are configured to block communications from SMB ports.",
	"url": null,
	"owner": "Softricity, Inc.",
	"publication_number": "07200632",
	"publication_date": "2007-04-03",
	"application_number": "09527188",
	"application_date": "2000-03-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for testing websites",
	"summary": "",
	"abstract": "A method and system is provided for testing and analyzing websites via a test-enabled web browser. In the representative embodiment a user controls a test-enabled web browser via a set of pull-down menus, thereby choosing between alternative testing and analysis functional capabilities, selecting files in which to store recordings (scripts), choosing files into which to place test results and messages, and setting various parameters that affect how the testing and analysis functions are performed. When the user requests it, the representative embodiment provides for deep recording of user interactions as they relate to a specific web page currently on display in the browser view area, for extracting key information from the current web page sufficient to validate that a future playback does or does not produce the same effects on the chosen website page, for playing back a prior recording to confirm that a website page continues to pass the user-defined tests, and for providing detailed analyses based on the specific contents of the current website page. The general result of systematic use of the test-enabled browser on websites is improved content quality, demonstrated website server behavior for deep tests, quicker delivery by the website server, and better serviceability for e-business.",
	"url": null,
	"owner": "Software Research, Inc.",
	"publication_number": "07231606",
	"publication_date": "2007-06-12",
	"application_number": "10041768",
	"application_date": "2001-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Scaleable message system",
	"summary": "",
	"abstract": "A message system for delivering data in the form messages between message clients comprises a server cluster with a group of client manager nodes and a group of independent message manager nodes. The client manager nodes have the function of managing client connections, whereas the message manager are configured to store and distribute messages. The system further comprising communication channel means in the form of a multicast messagebus for providing a multicast communication channel between said at least one client manager node and said at least one message manager node. The system guarantees delivery of a message by storing it until a receiver is ready to consume it.",
	"url": null,
	"owner": "Softwired AG",
	"publication_number": "07177917",
	"publication_date": "2007-02-13",
	"application_number": "09750009",
	"application_date": "2000-12-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for managing security material and services in a distributed database system",
	"summary": "",
	"abstract": "A method and system for managing security material and security services, and for securely distributing them in a distributed database system where one or multiple distributed applications operate on distributed data. One database hosted by database server contains master version of the security data of databases hosted by database servers. The database hosted by database server has a global view of the security material for managing security of the other databases. A special database is responsible of providing security services to application database of a database server. The system and method control application programs access to data of a database in a database server, and also facilitates the security management issues of complex database topologies, such as multitier hierarchies or multi-master topologies.",
	"url": null,
	"owner": "Solid Information Technology Oy",
	"publication_number": "07266702",
	"publication_date": "2007-09-04",
	"application_number": "10274261",
	"application_date": "2002-10-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and article of manufacture for remote control and navigation of local content",
	"summary": "",
	"abstract": "A system, method and article of manufacture are provided for remotely controlling content stored on a local computer connected to a network system such as the Internet. The invention allows content such as DVD Video content to be locked so that play can only be accomplished through verification of user identity and also allows augmentation and supplementation of the content provided by the video from a remote server. In addition, upon verification of user client credentials, the present invention allows the locally stored content to be supplemented with additional content delivered over the network system. Furthermore, the present invention allows content stored locally on a client device to be remotely controlled to play synchronously on a plurality of client devices.",
	"url": null,
	"owner": "Sonic Solutions",
	"publication_number": "07269634",
	"publication_date": "2007-09-11",
	"application_number": "10346726",
	"application_date": "2003-01-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Presentation of media content from multiple media sources",
	"summary": "",
	"abstract": "A media services interface for use in a readable medium playback device enables synchronization of disparate media playback, network directed playback of media, media playback control via displayed html/javascript file, logging of consumer identifier, media identifier, and playback device identifier in a cookie or log file. The media services comprises a command handler, a properties handler, an event generator, a cookie manager, a navigator state module, an identifier engine, an initialization module, and a bookmark manager. The command handler executes commands received from a connected network, a displayed html/javascript file, etc.",
	"url": null,
	"owner": "Sonic Solutions, a California corporation",
	"publication_number": "07178106",
	"publication_date": "2007-02-13",
	"application_number": "09935756",
	"application_date": "2001-08-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and article of manufacture for a synchronizer component in a multimedia synchronization framework",
	"summary": "",
	"abstract": "A system, method and article of manufacture are provided for creating a synchronizer object in order to playback an event simultaneously on a plurality of a client apparatuses. First, a request is received utilizing a network for viewing an event. Next, the request is queued in memory. In response to the request, an object is created which is adapted to playback the event on a client apparatus simultaneous with the playback of the event on the remaining client apparatuses upon the receipt of an activation signal. The object is sent to one of the client apparatuses utilizing the network for being stored therein.",
	"url": null,
	"owner": "Sonic Solutions, a California corporation",
	"publication_number": "07188193",
	"publication_date": "2007-03-06",
	"application_number": "09489600",
	"application_date": "2000-01-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distribution contents forming method, contents distributing method and apparatus, and code converting method",
	"summary": "",
	"abstract": "A function name, a variable name, a comment sentence, or the like included in a script includes redundancy and affects transmitting efficiency. By replacing the function name or variable name consisting of a relatively long character string with a shorter character string (for example, with one alphabetic character), the data size of the script is reduced. By further deleting comment sentences in the script, data size is also reduced.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "07308508",
	"publication_date": "2007-12-11",
	"application_number": "09786878",
	"application_date": "2000-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information processing apparatus and method, and recording medium therefor",
	"summary": "",
	"abstract": "By installing a device control module (DCM), a functional component module (FCM), and a guarantee card FCM of a digital video cassette recorder (DVCR) into an integrated receiver decoder (IRD), the IRD is able to control the DVCR. The guarantee card FCM is used for accessing an electronic guarantee card stored in a non-volatile memory of the DVCR. The IRD stores purchase information or repair information of the DVCR into the non-volatile memory of the DVCR via an IEEE-1394 serial bus in response to an instruction from a requester. The IRD also reads the purchase information or the repair information from the non-volatile memory of the DVCR via the IEEE-1394 serial bus.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "07295986",
	"publication_date": "2007-11-13",
	"application_number": "09756427",
	"application_date": "2001-01-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information processing device and method, and program",
	"summary": "",
	"abstract": "A user operates a digital camera so as to attach a photographed image to an e-mail describing a user ID and space ID, and transmit the e-mail to a mail server. The mail server reads out the user ID, space ID, and attached image data from the received e-mail. After setting a frame ID for a frame to exhibit the image data in a shared virtual space, the mail server transmits the image data, space ID, and frame ID to an AO server. The AO server stores the received data and also transmits the data to a CP server. The CP server transmits the received data to multiple client computers. The client computers display the received image at a predetermined location in the shared virtual space, specified by the frame ID. This allows the user to easily upload information.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "07191220",
	"publication_date": "2007-03-13",
	"application_number": "10347796",
	"application_date": "2003-01-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Portable information processing terminal, information input/output system and information input/output method",
	"summary": "",
	"abstract": "Each device arranged in an information space and a computer are sustainedly connected and the connection can be visually recognized on the display screen of the computer. More specifically, there is provided a feature of u201cgaze-linku201d metaphor with which connection between the computer and an object viewed by a camera is established. A visible marker may be applied to the object of connection so that the object may be identified by shooting the object by means of a camera and connection may be established between the computer and the object. As the connection between the identified object and the computer is sustained, the user can specify the target of operation in an intuitive and direct manner without worrying about the ID of each device in a network environment where a large number of devices are mutually connected.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "07188139",
	"publication_date": "2007-03-06",
	"application_number": "09713615",
	"application_date": "2000-11-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web-compatible electronic device, web page processing method, and program",
	"summary": "",
	"abstract": "A Web page having display elements such as a headline, a story body, subheads, and links to articles is obtained and rendered internally to obtain a position of each display element based on draw data. Each display element is classified into several clusters according to its position. Next, clusters having the same character attributes are classified as a group. A group having a high average of the number of characters within each of its clusters is determined as the story body and a group having a low average is determined as the headline. Then, individual pages including the story body and a top page including the headline, the subheads, and links to the story body pages are created. Therefore, the Web page is reconstructed as Web pages suitable for browsing in low-resolution display environments.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "07272787",
	"publication_date": "2007-09-18",
	"application_number": "10523234",
	"application_date": "2005-01-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed software applications in the HAVi home network",
	"summary": "",
	"abstract": "An extension to the HAVi specification is defined which enables the discovery and exchange of portable software elements, i.e. application modules (), within the HAVi home network in a defined way. In particular, the sharing of an application module () between several controller devices () is enabled.",
	"url": null,
	"owner": "Sony Deutschland GmbH",
	"publication_number": "07165259",
	"publication_date": "2007-01-16",
	"application_number": "10097093",
	"application_date": "2002-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application programming interface for communication between audio/video file system and audio video controller",
	"summary": "",
	"abstract": "The present invention is directed to an application programming interface. More specifically, the present invention relates to an application programming interface designed for handling interaction between an audio/video controller and an audio/video file system. In one exemplary embodiment, the application programming interface includes a number of function calls which direct the audio/video file system to perform a variety of functions. In addition, the application programming interface permits devices capable of handling different types of data, such as isochronous and asynchronous data, to communicate with the audio/video file system.",
	"url": null,
	"owner": "Sony Electronics, Inc.",
	"publication_number": "07178152",
	"publication_date": "2007-02-13",
	"application_number": "10005884",
	"application_date": "2001-12-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for facilitating service management of communications services in a communications network",
	"summary": "",
	"abstract": "A service management system for a communications network which accepts requests for communications services from service order sources. The service management system includes an interface to the service order sources, a database, and an interface to network elements which provide the communications services. The service order sources may have differing order input formats which are converted by the system into a single internal format for processing and determining of provisioning information to be output to the network elements. The service management system includes table-driven logic which is used to validate and process the requests to determine the provisioning information. Once the provisioning information is determined, it is queued to the appropriate network element, and an acknowledgment is sent to the originating service order source. The service management system also includes a interface to query the database and network elements to perform debugging and error correction.",
	"url": null,
	"owner": "Southwestern Bell Telephone Company",
	"publication_number": "07167550",
	"publication_date": "2007-01-23",
	"application_number": "10436121",
	"application_date": "2003-05-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enterprise naming service system and method",
	"summary": "",
	"abstract": "A naming service for locating a service in an enterprise is provided. The naming service comprising a binding module to associate a first service with a location of an interface maintaining a reference to the first service, the binding module further operable to associate a second service with a location of the second service. The naming service further comprising a look-up module operative to provide the location of the interface in response to a request by an application for the first service, the look-up module further operable to provide the location of the second service in response to a request by a second application. A method for locating a service in an enterprise is also provided.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "07269603",
	"publication_date": "2007-09-11",
	"application_number": "10738542",
	"application_date": "2003-12-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integrated security framework and privacy database scheme",
	"summary": "",
	"abstract": "A system and method for bridging requests for access to resources between requestors in a distributed network and an authenticator servicing the distributed network is provided. The bridging mechanism has security features including a naming service for machine authentication and machine process rules to authorize what process machines can perform. The security proxy bridge intercepts an access request, and checks the IP address for machine authentication as well as the machine process rules and if both verifications are successful, the bridge then forwards the request for access to the authenticator. The security proxy framework utilizes a data structure that provides a method for storing selected security information stored as data records supporting an authentication and authorization system for users to access resources on multiple components of a distributed network supporting multiple business units of an enterprise. Primary authentication information stored herein includes general user information, security, and contact information.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "07263717",
	"publication_date": "2007-08-28",
	"application_number": "10738244",
	"application_date": "2003-12-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interface and method for extending a target application over an instant message link of a communication network",
	"summary": "",
	"abstract": "An instant message (IM) interface configured to extend a target application over an IM link of a communication network is provided according to the invention. The IM interface includes a communication interface configured to transfer a reply IM to an originating application. The IM interface further includes a processing system configured to obtain data from the target application and provide an output form to a messaging Application Programming Interface (messaging API). The output form is provided from a set of Forms Definition Language (FDL) forms. The messaging API is substantially protocol-dependent and the set of FDL forms is protocol-independent. The processing system is further configured to generate the reply IM in an originating application protocol using the data, the output form, and one or more protocol-specific libraries of the messaging API. The reply IM is an originating application protocol-specific IM.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "07310659",
	"publication_date": "2007-12-18",
	"application_number": "10696099",
	"application_date": "2003-10-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Security framework data scheme",
	"summary": "",
	"abstract": "The present disclosure is a method for bridging requests for access to resources between requestors in a distributed network and an authenticator servicing the distributed network. The bridging mechanism has security features including a naming service for machine authentication and machine process rules to authorize what process machines can perform. The security proxy bridge intercepts an access request, and checks the IP address for machine authentication as well as the machine process rules and if both verifications are successful, the bridge then forwards the request for access to the authenticator. The security proxy framework utilizes a data structure that provides a method for storing selected security information stored as data records supporting an authentication and authorization system for users to access resources on multiple components of a distributed network supporting multiple business units of an enterprise. Primary authentication information stored herein includes general user information, security information, and contact information.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "07257834",
	"publication_date": "2007-08-14",
	"application_number": "10284809",
	"application_date": "2002-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and entity for processing communications based on altitude",
	"summary": "",
	"abstract": "A method and system for processing communications based on altitude is provided. When a network receives a request to connect a communication to or from a mobile station, the network will determine the mobile station's current altitude. The network can make this determination by acquiring a GPS reading of the mobile station's current location, which can include an indication of altitude as well as latitude and longitude. Based at least in part on the altitude, the network can then decide whether to allow the requested communication to proceed. For instance, if the altitude is greater than a predetermined threshold level, then the network may preclude the communication. A network can also take into consideration other factors in addition to the altitude of a mobile station, such as the latitude and longitude coordinates of the mobile station, in deciding whether to allow a requested communication to proceed.",
	"url": null,
	"owner": "Sprint Spectrum L.P.",
	"publication_number": "07245908",
	"publication_date": "2007-07-17",
	"application_number": "10465442",
	"application_date": "2003-06-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for network-based remote control and testing of wireless communication devices",
	"summary": "",
	"abstract": "A method and system for remote testing of a wireless communication device (WCD). The WCD is communicatively linked in a test environment with a host computer that communicates over a packet-switched network with a remote computer operated by a testing technician. The remote computer sends control commands to the host computer via the packet-switched network, and the host computer sends corresponding commands to the WCD to cause the WCD to take one or more actions. In a preferred embodiment, the WCD returns to the host computer a digital representation of the screen image currently being shown on a display screen of the WCD, and the host computer passes the digital representation via the packet-switched network to the remote computer for presentation to the technician. The technician can thereby view the display screen of the WCD as tests are performed. Audio and test-equipment coupling may also be provided.",
	"url": null,
	"owner": "Sprint Spectrum L.P.",
	"publication_number": "07206548",
	"publication_date": "2007-04-17",
	"application_number": "10977142",
	"application_date": "2004-10-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Address matching system and method",
	"summary": "",
	"abstract": "An address matching system that maintains a central database of valid addresses has been designed. According to the invention, address matching requests are received by the system from a plurality of remote users located at respective machines (u201cclientsu201d). Those requests are processed at the central system, and the results are returned to the client that made the request. In addition, novel techniques are implemented for improving the likelihood of obtaining one or more matches from a request.",
	"url": null,
	"owner": "Stamps.Com",
	"publication_number": "07236970",
	"publication_date": "2007-06-26",
	"application_number": "09692031",
	"application_date": "2000-10-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for integrated voice gateway",
	"summary": "",
	"abstract": "An integrated voice gateway system for use within a company which can route a voice telephone call between parties at two different locations over an IP network or over the PST NETWORK. The system can route a voice telephone call from a first location within the system to a second location within the system via the IP network, and then from the second location to a third location via the PST NETWORK. The integrated voice gateway system includes a gateway server which serves as an intranet/Internet telephony gateway. The gateway server routes intra-company voice or facsimile (fax) calls, over the company's intranet or the public Internet. The gateway server provides an alternate voice network to the PST NETWORK for a company. This alternate network is provided at a much lower cost. The gateway server is a combination of hardware and software components which reside on a PC server platform. The gateway server is coupled to a customer premise telephone system, i.e. a PBX via a T1 or E1 trunk for larger systems, or an analog trunk for smaller systems. The gateway server is coupled to the company's intranet via industry standard connections. The gateway servers in a multi-site company are coupled together via the company's intranet or wide area network (WAN) into a gateway network. The gateway server uses PBX call status links to provide many unique and useful features which are otherwise unavailable. The gateway server uses T1 inband ANI, PRI, QSIG or industry standard CTI applications programming interfaces (API) and works with any PBX which supports any of these call status links. The gateway server is equipped with a database of user and gateway objects and attributes, and provides many unique features including caller's name based on caller phone number, address translation, gateway network routing information, user authentication, etc. This database can be integrated with industry standard enterprise directory services systems including any directory which supports the Lightweight Directory Access Protocol (X.500) (LDAP) interface.",
	"url": null,
	"owner": "Starvox Communications Inc.",
	"publication_number": "07280530",
	"publication_date": "2007-10-09",
	"application_number": "10086262",
	"application_date": "2002-03-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Index processor",
	"summary": "",
	"abstract": "A graphic processor having an index processing unit for pre-processing a list of vertices making up a three-dimensional image. The method of pre-processing comprising the following steps. First, decomposing the three-dimensional image into a plurality of primitive elements each defined by a set of vertices, each vertex comprising vertex information stored in a vertex storage area and addressable by a vertex index. Then receiving said vertex indices and creating a set of unique indices identifying a batch of vertices and loading only the vertices corresponding to said unique indices into the vertex storage area. Finally creating transformed primitive elements from transformed vertex information addressed in the vertex storage area using the unique indices.",
	"url": null,
	"owner": "STMicroelectronics Limited",
	"publication_number": "07170512",
	"publication_date": "2007-01-30",
	"application_number": "10133971",
	"application_date": "2002-04-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Geometric processing stage for a pipelined graphic engine, corresponding method and computer program product therefor",
	"summary": "",
	"abstract": "A geometric processing stage for a pipelined engine for processing video signals and generating processed video signal in space coordinates (S) adapted for display on a screen. The geometric processing stage includes: a model view module for generating projection coordinates of primitives of the video signals in a view space, said primitives including visible and non-visible primitives, a back face culling module arranged downstream of the model view module for at least partially eliminating the non visible primitives, a projection transform module for transforming the coordinates of the video signals from view space coordinates into normalized projection coordinates (P), and a perspective divide module for transforming the coordinates of the video signals from normalized projection (P) coordinates into screen space coordinates (S). The back face culling module is arranged downstream the projection transform module and operates on normalized projection (P) coordinates of said primitives. The perspective divide module is arranged downstream the back face culling module for transforming the coordinates of the video signals from normalized projection (P) coordinates into screen space coordinates (S). A circuit in the back face culling module can be shared with a standard three dimension back face culling operation when necessary. An application is in graphic engines using standard graphics language like OpenGL and NokiaGL.",
	"url": null,
	"owner": "STMicroelectronics Ltd.",
	"publication_number": "07236169",
	"publication_date": "2007-06-26",
	"application_number": "10886939",
	"application_date": "2004-07-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for routing media",
	"summary": "",
	"abstract": "The system and method for streaming media to a viewer and managing the media comprises and an enhanced service routing processor (ESRP), a real time switch management system (RTSMS), a name routing processor (NRP), and a managed media switch (MMS). The RTSMS has a reservation system. The ESRP receives media from an owner, manages the media according to media rules and order rules defined by the owner, and distributes the media to one or more switches, such as the MMS, according to the media rules and the order rules. The RTSMS is configured to receive the media rules and to receive a viewer's media request via the reservation server. The reservation system of the RTSMS processes the media request according to the media rules and builds a reservation for the requested media. The RTSMS generates the reservation to the viewer and to the NRP. The NRP receives the reservation data from the viewer and from the RTSMS. The NRP processes the reservation data and locates an MMS that can stream the media to the viewer. The NRP transmits the IP address of the MMS to the viewer and transmits the reservation data to the MMS. The viewer initiates a session or connection with the MMS using the reservation number. If the reservation data from the viewer matches the reservation data from the NRP, the MMS streams the media to the viewer.",
	"url": null,
	"owner": "StreamWorks Technologies, Inc.",
	"publication_number": "07191244",
	"publication_date": "2007-03-13",
	"application_number": "10051406",
	"application_date": "2002-01-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for address book application programming interface",
	"summary": "",
	"abstract": "An address book API according to the present invention includes an abstracted API and one or more address book specific adapters. The abstracted API provides functionalities common to a plurality of address book programs. The abstracted API is abstract enough to readily interface with various address books. Each adapter provides for address book program specific implementation of functionalities.",
	"url": null,
	"owner": "Sun Microsystems Inc",
	"publication_number": "07257822",
	"publication_date": "2007-08-14",
	"application_number": "10823321",
	"application_date": "2004-04-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Extending role scope in a directory server system",
	"summary": "",
	"abstract": "Extending role scope in a directory server system. A directory server system comprises a directory server and a role mechanism. The directory server interacts with entries organized in a tree structure. The entries comprise user entries and role entries. The role entries define a role and have an associated scope defined from their location in the tree structure. The role mechanism is capable of attaching a role of an existing role entry to a user entry subject to a first condition comprising. The role mechanism is further capable of determining whether the existing role entry has extra data designating an extra scope, and, if so, of attaching a role of the existing role entry to a user entry subject to a second condition. The second condition comprises the role membership condition and the fact that the user entry belongs to the extra scope of the existing role entry.",
	"url": null,
	"owner": "Sun Microsystems Inc.",
	"publication_number": "07194472",
	"publication_date": "2007-03-20",
	"application_number": "10613660",
	"application_date": "2003-07-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "API representation enabling submerged hierarchy",
	"summary": "",
	"abstract": "A method for representing an application programming interface (API) for an object-oriented library includes creating a list of public elements in the library and storing the list. Each public element in the list includes a sublist of all public related elements for the element. According to one aspect, the public elements include classes and interfaces, the public related elements include public superclasses and public superinterfaces, and the library is a Javau2122 package. According to one aspect, a method for determining a program hierarchy includes receiving an API definition file for an object-oriented library and indicating a first public element is a direct parent of a second public element when the first public element is represented in the sublist for the second public element and the first public element is not represented in the sublist for any other public element listed in the sublist for the second public element. According to another aspect, a method for detecting changes to a program hierarchy includes comparing a first program hierarchy reconstructed from a first API definition file with a second program hierarchy reconstructed form a second API definition file and indicating an error when the first program hierarchy is inconsistent with the second program hierarchy.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07158993",
	"publication_date": "2007-01-02",
	"application_number": "09662258",
	"application_date": "2000-09-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and methods for integrating APIs for program execution management",
	"summary": "",
	"abstract": "Disclosed are apparatus and methods for controlling execution of a target software component within an isolated execution unit. In general terms, an intermediary software component is introduced within the isolated execution unit. This intermediary component program can initialize the isolated execution unit, and then start a target software component within the isolated execution unit. The intermediary component also establishes communication back to the parent (e.g., using an inter isolation communication). The intermediary component communicates with the target software component using the target component's unchanged API and mediates the communication back to the parent using the established inter isolation communication.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07254817",
	"publication_date": "2007-08-07",
	"application_number": "10003920",
	"application_date": "2001-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic lease renewal with message gates in a distributed computing environment",
	"summary": "",
	"abstract": "A system and method for providing message-based leasing of resources in a distributed computing environment. Services may issue leases to clients and provide operations on those leases. The lease functionality of a service may be defined in an XML message schema. Gates may be used to perform lease operations. Leases may be granted for a period that may be negotiated. Leasing messages for performing leasing operations may be defined. An automatic lease renewal mechanism may be implemented to relieve the client of the responsibility of handling lease renewal messages. In one embodiment, of an automatic lease renewal mechanism, each gate may receive renewal messages and automatically respond to them without help from the client process. In another embodiment, a client gate may monitor elapsed time and send a lease renewal message prior to the expiration of a current lease period. In one embodiment, the renewal request may claim the lease at a current access level or at a different access level. In one embodiment, a message gate may contain a single, set-aside renewal response message that is automatically sent to the service when the gate receives the renewal message. In one embodiment using time-based leasing, a lease renewal request from a client to a service may specify a requested lease period, and the service leasing the resource to the client may grant a lease period equal to or less than the specified period.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07260543",
	"publication_date": "2007-08-21",
	"application_number": "09659915",
	"application_date": "2000-09-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer arrangement using non-refreshed DRAM",
	"summary": "",
	"abstract": "A computer arrangement with a processor () and at least one memory unit () connected to the processor () and including dynamic random access memory (), wherein the computer arrangement is arranged to use but not to refresh at least part of the dynamic random access memory () while running a program.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07197596",
	"publication_date": "2007-03-27",
	"application_number": "11345519",
	"application_date": "2006-02-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer-based presentation manager and method for individual user-device data representation",
	"summary": "",
	"abstract": "Access to external service providers is provided through portlets, where each portlet accessible by a user is represented on the display of the user device. Through use of a dynamic content channel, e.g., a portlet, a highly customizable content page may be produced for any individual client system. When a portlet is selected on a user device, the content associated with the portlet is retrieved and automatically transformed into data that can be displayed by that user device. Thus, a particular user device is not limited to accessing content in a format identical to that associated with the user interface in use on the user device. Consequently, the user's ability to access a wide variety of content sources independent of the characteristics of the particular user device is further enhanced.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07281060",
	"publication_date": "2007-10-09",
	"application_number": "09759744",
	"application_date": "2001-01-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Conversion of an object model to a source file generation model",
	"summary": "",
	"abstract": "An infrastructure is provided for creating applications for mobile information devices, using a tag-based markup language. Developers can use the markup language to define applications and content based on easily manipulated textual tags, rather than having to write specific source code. A compiler, processes the tags in several phases. In one phase, a hierarchical object model of the application is populated with objects. Then, in another phase, a generator traverses the object model hierarchy in a top-down manner, producing source code files corresponding to objects in the object model. The code files may include various elements, for example screens, forms, and servlets. For each element required to be generated, an appropriately configured generator class is invoked. The output code can be Java source code.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07305671",
	"publication_date": "2007-12-04",
	"application_number": "10348893",
	"application_date": "2003-01-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Creating a parallel structure for scene-based rendering",
	"summary": "",
	"abstract": "A system and method for rapid processing of scene-graph-based data and/or programs is disclosed. In one embodiment, the system may be configured to utilize a scene graph directly. In another embodiment, the system may be configured to generate a parallel structure including a plurality of data structures and corresponding threads that manage the data originally received as part of the scene graph. The data structures and threads may be configured to convey information about state changes through the use of messaging. The system may include support for messaging between threads, messaging with time and/or event stamps, epochs to ensure consistency, and ancillary structures such as render-bins, geometry structures, and rendering environment structures.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07170511",
	"publication_date": "2007-01-30",
	"application_number": "09759597",
	"application_date": "2001-01-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data exchange system comprising portable data processing units",
	"summary": "",
	"abstract": "Data exchange system includes at least one portable data processing unit with data communication processing and memory units, the latter including an executive program and one or more application descriptors, each application description including at least one interaction context comprising commands, data elements, data references, procedures, access conditions, and external references; the structure of the data elements and the data references as well as other references is chosen in such a way that a very efficient use of the restricted memory space of e.g. smart cards is obtained.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07185110",
	"publication_date": "2007-02-27",
	"application_number": "10122480",
	"application_date": "2002-04-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Decentralized peer-to-peer advertisement",
	"summary": "",
	"abstract": "Embodiments of a shared resource distributed index mechanism that peers in a peer-to-peer network may utilize to distribute index entries corresponding to resources to indexes of shared resources among one or more other peers. These indexes may be used to direct queries to peers where the queries are most likely to be answered. When a query is received by a rendezvous peer including one or more indexes, contents of the query may be u201clooked upu201d in the index to find matches. The results of the lookup may include information on one or peer(s) that may hold advertisement(s) to the resource requested by the query. The query may then be forwarded to one or more peers that may hold the advertisement for the resource. Embodiments may provide u201cloosely-coupledu201d distribution of index entries for use in querying for resources in the peer-to-peer network.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07263560",
	"publication_date": "2007-08-28",
	"application_number": "10231544",
	"application_date": "2002-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed indexing of identity information in a peer-to-peer network",
	"summary": "",
	"abstract": "Embodiments of a distributed index mechanism for indexing and searching for identity information in peer-to-peer networks. In one embodiment, a distributed index may be used to store identity information in a decentralized manner on a plurality of peer nodes. The identity information may be used, for example, to authenticate users. Distributed indexes may allow identity information to be spread across multiple peer nodes so that the load is spread among the various peer nodes. In one embodiment, the distributed index may be a distributed hash table. One embodiment of a distributed index of identity information may be implemented in peer-to-peer networks implemented according to a peer-to-peer platform including one or more peer-to-peer platform protocols for enabling peer nodes to discover each other, communicate with each other, and cooperate with each other to form peer groups and share network resources.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07206934",
	"publication_date": "2007-04-17",
	"application_number": "10255844",
	"application_date": "2002-09-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed simulation system having phases of a timestep",
	"summary": "",
	"abstract": "A distributed simulation system is provided in which timesteps may be divided into a first phase (referred to as the zero time phase herein) and a second phase (referred to as the real time phase herein). In the first phase, each distributed simulation node in the system may process one or more received commands without causing the simulator to evaluate the model in that distributed simulation node. In the second phase, each distributed simulation node may cause the simulator to evaluate the model in response to a command supplying one or more signal values to the model. In one embodiment, the second phase may iterate the evaluation of the model for each command received which supplies signal values. Each iteration may optionally include transmitting a command including the output signal values produced by the model during that iteration.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07231338",
	"publication_date": "2007-06-12",
	"application_number": "10010572",
	"application_date": "2001-11-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed token manager with transactional properties",
	"summary": "",
	"abstract": "A system and method for controlling access to data in a distributed computer system. Distributed Token Manager (DTM) is a system-level service that coordinates read/write access of data objects (tokens) in a multi-process and multi-threaded environment. The DTM may support a transactional model such that write operations to a data object performed by a client process or thread can be either committed or rolled back.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07281050",
	"publication_date": "2007-10-09",
	"application_number": "10408885",
	"application_date": "2003-04-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Document conversion with merging",
	"summary": "",
	"abstract": "Converting a document in a small device format and merging the converted document with an original version of the document in an office productivity format. A document on a server may be converted to a small device format. Some information may be dropped from the document during conversion. The converted document may be transferred to a small device for editing. The edited document may be transferred back to the server for synchronization with the original document. After transferal, the edited document may be converted back to the original document format on the server and analyzed to determine differences between the edited document and the original document. The determined differences may be applied to the original document to merge the small device document with the original document. Information that was lost during the original conversion of the document may be restored to the merged document during the conversion/merge process.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07200668",
	"publication_date": "2007-04-03",
	"application_number": "10091203",
	"application_date": "2002-03-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic administration framework for server systems",
	"summary": "",
	"abstract": "A dynamic administration framework for server systems. A generation mechanism may generate one or more components of the administration framework from meta-information describing persistently stored configuration information. Components providing an in-memory representation of configuration information and components representing business logic of the server may be generated. A user interface may be generated which may be used to administer the generated components. A configuration API may be provided that provides a transparent interface to the persistent store, abstracting storage format and location from clients of the configuration API. A generated administration framework may be compiled with application server or system-specific components. The compiled system may then be used at runtime. One embodiment may include an event notification mechanism that may allow changes in configuration data to be propagated to one or more servers. Using this event notification mechanism, the listening servers may not need to access the persistent store for updates.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07206827",
	"publication_date": "2007-04-17",
	"application_number": "10202949",
	"application_date": "2002-07-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enhanced privacy protection in identification in a data communications network",
	"summary": "",
	"abstract": "A method for enhanced privacy protection in identification in a data communications network includes enrolling for a service on the data communications network, receiving a randomized identifier (ID) in response to the enrolling, storing the randomized ID and using the randomized ID to obtain services on the data communications network. An apparatus for obtaining a service on a data communications network includes an enrollment authority configured to accept an enrollment request. The enrollment authority is further configured to return enrollment results in response to the enrollment request. The enrollment results include user data and the enrollment results may be used obtaining a service from a service provider.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07275260",
	"publication_date": "2007-09-25",
	"application_number": "10040270",
	"application_date": "2001-10-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Event protocol and resource naming scheme",
	"summary": "",
	"abstract": "A method for managing a fault involves detecting an error, gathering data associated with the error to generate an error event, and categorizing the error event using a hierarchical organization of the error event.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07231550",
	"publication_date": "2007-06-12",
	"application_number": "10699634",
	"application_date": "2003-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hardware acceleration of display data clipping",
	"summary": "",
	"abstract": "Embodiments of the present invention are directed to a method and apparatus for hardware acceleration of display data clipping. In one embodiment, all display data is presented to the display system. The display system uses its hardware to clip the undesired data and display the desired data. In one embodiment, the display system has one or more clipping registers. As display data arrives from each source, the information's display location is classified by all the clipping registers. Only pixels which are calculated to be visible by the clipping registers is written to memory for later display. In one embodiment, the display system has an extra amount of memory, termed u201cdisplay mask memory.u201d In one embodiment, there is a corresponding data location in the display mask memory for each pixel in the display memory. In one embodiment, the display system has another set of memory, termed u201clow-resolution display mask memory.u201d In yet another embodiment, the display data is presented to the display system from a server located away from the display system. The display data is presented via a network.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07286140",
	"publication_date": "2007-10-23",
	"application_number": "10206314",
	"application_date": "2002-07-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hardware security module (HSM) chip card",
	"summary": "",
	"abstract": "Processing circuitry is integrated within a hardware security module (HSM) chip card. The processing circuitry is configured to operate in accordance with a set of program instructions stored in a memory integrated within the HSM chip card. The set of program instructions includes program instructions for implementing a public-key cryptography standard (PKCS). The PKCS includes processes for generating and storing a master key. The master key is to be stored in the memory integrated within the HSM chip card. Also, using the master key stored in the memory of the HSM chip card, the HSM chip card enables direct management control of standard chip cards.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07278582",
	"publication_date": "2007-10-09",
	"application_number": "11004316",
	"application_date": "2004-12-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "IDL event and request formatting for corba gateway",
	"summary": "",
	"abstract": "A CORBA Gateway between CORBA-based applications and an enterprise manager may be configurable to manage various networked objects, such as printers, scanners, copiers, telephone systems, etc., which may be interconnected via networks. CORBA-based manager applications may communicate managed object-related messages, such as events, requests, and responses, with the managed objects through a CORBA Object Request Broker (ORB). The CORBA gateway may translate the manager requests from IDL to PMI requests. Similarly, the CORBA gateway may translate the enterprise manager PMI responses and PMI events to IDL/IIOP responses and events which may be passed on through the CORBA ORB to the manager applications in the form of IDL responses and CORBA events. In some embodiments, the client may choose the format in which to send and receive message information. To provide text based events, requests, and replies, an extension IDL interface may be used.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07228346",
	"publication_date": "2007-06-05",
	"application_number": "09557068",
	"application_date": "2000-04-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Indexing virtual attributes in a directory server system",
	"summary": "",
	"abstract": "The invention proposes a directory server, capable of interacting with entries organized in a tree structure. Each entry has attributes, these attributes comprising real attributes each having a value stored in the entry. The directory server comprising: a mechanism capable of associating a virtual attribute to an entry, subject to a virtual attribute condition being verified, the virtual attribute condition being derived from data located elsewhere in the tree structure, and a resolving function, capable of receiving a first filter expression, based on a virtual attribute, for converting it into one or more second filter expressions, containing real attributes, and being computed from the first filter expression and from the virtual attribute condition.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07188094",
	"publication_date": "2007-03-06",
	"application_number": "10616081",
	"application_date": "2003-07-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Key reuse for RDMA virtual address space",
	"summary": "",
	"abstract": "A system and method for reusing an R_Key associated with InfiniBand virtual address space mapped to local, host, storage. An R_Key is initially assigned by an HCA (Host Channel Adapter) when a host registers a set of local storage buffers. The HCA maps the local buffers to virtual address space and returns the R_Key. When the host augments the mapped local storage by identifying additional buffers, the HCA maps the larger storage area to virtual address space and returns the same R_Key. When the host removes local storage from the mapping scheme, the HCA returns a smaller virtual address space associated with the same R_Key.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07290038",
	"publication_date": "2007-10-30",
	"application_number": "10210725",
	"application_date": "2002-07-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Lock-free implementation of dynamic-sized shared data structure",
	"summary": "",
	"abstract": "Solutions to a value recycling problem that we define herein facilitate implementations of computer programs that may execute as multithreaded computations in multiprocessor computers, as well as implementations of related shared data structures. Some exploitations of the techniques described herein allow non-blocking, shared data structures to be implemented using standard dynamic allocation mechanisms (such as malloc and free). A variety of solutions to the proposed value recycling problem may be implemented. A class of general solutions to value recycling is described in the context of an illustration we call the Repeat Offender Problem (ROP), including illustrative Application Program Interfaces (APIs) defined in terms of the ROP terminology. Furthermore, specific solutions, implementations and algorithm, including a Pass-The-Buck (PTB) implementation are also described. Solutions to the value recycling problem can be applied in a variety of ways to implement dynamic-sized data structures.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07254597",
	"publication_date": "2007-08-07",
	"application_number": "10340154",
	"application_date": "2003-01-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Macro-based access control",
	"summary": "",
	"abstract": "Various embodiments of systems and methods for using condition defining data (e.g., access control instructions) attached to nodes in a tree to implement node-related conditions in a directory server having a tree structure are disclosed. In one embodiment, a method includes attaching condition defining data that includes a variable portion and a reference portion to a given node in the tree structure, and upon access to a subnode of said given node in the tree, using the reference portion and a property of the subnode to tentatively derive a value for the variable portion, changing the variable portion into the value, and evaluating the condition in said condition defining data.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07167918",
	"publication_date": "2007-01-23",
	"application_number": "10045682",
	"application_date": "2001-10-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing distribution of content using mobile agents in peer-topeer networks",
	"summary": "",
	"abstract": "Embodiments of a system and method for using mobile agents for managing distribution of content in peer-to-peer networks. An initiating peer node may launch a mobile agent including an itinerary of a group of peer nodes configured to receive and share content from a distributor. The mobile agent may visit the peer nodes on the itinerary to search for and collect information on distributor content stored on the visited peer nodes. The mobile agent may return the payload to the initiating peer node after completing the itinerary. In one embodiment, the mobile agent may include authentication information, and each visited peer node may access the authentication information to verify the mobile agent as authorized by the distributor. The initiating peer node may examine the information provided by the mobile agent to detect unauthorized copies of the distributor content.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07254608",
	"publication_date": "2007-08-07",
	"application_number": "10285087",
	"application_date": "2002-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mechanism for replicating and maintaining files in a space-efficient manner",
	"summary": "",
	"abstract": "A mechanism for replicating and maintaining files in a space-efficient manner is disclosed. In one embodiment, a current file is replicated by associating the data blocks of the current file with both the current file and a new file. The new file and the current files are separate and distinct from each other. Data blocks remain shared until the content of one file is modified. Only the data blocks affected by the modification are duplicated. The two files share the unchanged data blocks, but both files are each associated with additional data blocks that reflect the modification. Reference values are used to track how many files are associated with each data block. In another embodiment, a file descriptor is linked to a filename at the request of a user or application. The present invention avoids needless duplication of the same data blocks among copies of a file.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07185032",
	"publication_date": "2007-02-27",
	"application_number": "10618135",
	"application_date": "2003-07-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for applying personalized rules to e-mail messages at an e-mail server",
	"summary": "",
	"abstract": "One embodiment of the present invention provides a system that applies personalized rules for handling e-mail messages to e-mail messages within an e-mail server. During operation, the system connects to the e-mail server from a remote computer system on behalf of a user. Next, the system applies the personalized rules to e-mail messages received for the user at the e-mail server. This involves applying actions specified in the personalized rules to the e-mail messages. Next, the system disconnects from the e-mail server so that the connection does not have to be maintained.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07200636",
	"publication_date": "2007-04-03",
	"application_number": "10286568",
	"application_date": "2002-11-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for centralized management of a storage virtualization engine and data services",
	"summary": "",
	"abstract": "SVE management software uses management software running at a central service processor to control storage virtualization engines operating in a plurality application programming interface (API) that allows a consistent control of all SVE facilities by means of a set of API commands. The management software controls a dispatch module that translates the commands into appropriate instructions for the SVE nodes and communicates with the remote SVE nodes by a plurality of node client-node server pairs that transfer instructions from the dispatch module to the remote nodes and transfer requested information back from the remote nodes to the dispatch module. Various interfaces, such as a command line interpreter and a CIM provider can be built using the API commands.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07158973",
	"publication_date": "2007-01-02",
	"application_number": "10317903",
	"application_date": "2002-12-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for hardware implementation independent verification of network layers",
	"summary": "",
	"abstract": "A verification mechanism monitors incoming and outgoing traffic between a channel adapter and a switch fabric in an InfiniBand system in order to verify that the InfiniBand protocol is correctly followed by the channel adapter. The verification mechanism uses a simple hardware-independent interface to query the channel adapter hardware for specific values and completion queue, queue pair and work queue element attributes that are required for verification. The verification mechanism creates a plurality of verification components that monitor incoming and outgoing messages and verify that each of the channel adapter elements correctly follows the protocol. The verification mechanism is controlled by a verification application programming interface (API) that allows different test benches and tests to incorporate InfiniBand protocol verification in any test system for use with any hardware.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07290051",
	"publication_date": "2007-10-30",
	"application_number": "10338987",
	"application_date": "2003-01-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for importing static members of a class",
	"summary": "",
	"abstract": "One embodiment of the present invention provides a system that facilitates importing static members of a class. During operation, the system examines code associated with a compilation unit to locate a static import declaration that identifies one or more static members of the class to import. Upon finding such a static import declaration, the system records the static import declaration in a symbol table used to compile the compilation unit. This allows the names for the one or more static members of the class to appear within the compilation unit without being prefixed with a name for the class.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07171657",
	"publication_date": "2007-01-30",
	"application_number": "10237885",
	"application_date": "2002-09-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for installing an application onto a smart card",
	"summary": "",
	"abstract": "An application identifier (AID) comprises at least one customization parameter for an application to be installed onto a smart card. The application may be installed onto the smart card by providing the AID, instantiating the application onto the smart card, storing the AID onto the card, and configuring the application in accordance with the stored AID, wherein the application is configured in accordance with the at least one customization parameter.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07165727",
	"publication_date": "2007-01-23",
	"application_number": "10786506",
	"application_date": "2004-02-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for managing configuration information in a distributed computer system",
	"summary": "",
	"abstract": "A configuration manager federated bean is provided for each host computer in the three-tiered management system. The configuration manager federated bean for a host computer is contacted by federated beans that manage each of the data services when a data service starts and stops using a data storage volume associated with the host computer. The configuration manager bean maintains persistent configuration information for each data service. In one embodiment, configuration manager beans can operate in a clustered environment where several beans store configuration information in a single storage area. Each of the beans implements an arbitration protocol so that only one bean writes to the storage area at any given time.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07159015",
	"publication_date": "2007-01-02",
	"application_number": "10012150",
	"application_date": "2001-11-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing an application on a smart card",
	"summary": "",
	"abstract": "A smart card contains potentially multiple applications, each containing an application identifier (AID). Each application also incorporates an AID interpreter for providing access to the AID. This is achieved by making a request to the AID interpreter to provide the AID for the application. In response, the AID interpreter retrieves a first component of the AID. This first component is logically internal to the AID interpreter. The AID interpreter also retrieves a second component of the AID. This second component is logically external to the AID interpreter and is indicative of a state relevant to the application, such as a current balance in the card. The first and second components of the AID are then combined in order to generate the AID for providing in response to the request.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07191288",
	"publication_date": "2007-03-13",
	"application_number": "10786763",
	"application_date": "2004-02-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for automating generation of web services from existing service components",
	"summary": "",
	"abstract": "A computer-based method for generating a Web service. The method includes identifying first and second service components for inclusion in the Web service, which includes locating available services using service detectors that use differing search techniques and displaying the located services to the user to allow the user to make a selection to identify the first and second service components. The method continues with generating a description or contract for the Web service defining service behavior including invoking rules. A transport structure is then created for accessing the new Web service such as a transmission envelope. The Web service is advertised as being available on the communications network including registering the Web service with a services registry linked to the communications network.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07266582",
	"publication_date": "2007-09-04",
	"application_number": "10215552",
	"application_date": "2002-08-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for asynchronous support of fault-tolerant and adaptive communication",
	"summary": "",
	"abstract": "An invention is provided for affording asynchronous fault-tolerant and adaptive communication in a distributed computing environment. The invention includes periodically updating a stored connection state value, which is received from an application. The connection state value indicates the number of data elements processed by the application. An interruption in a digital connection is then detected on a network between two endpoints. Upon detection, the stored connection state value is exchanged with the opposite endpoint over the network. In this manner, remaining data elements of the transaction can be received sequentially over the network from the opposite endpoint. In particular, the remaining data elements begin with a data element at a point indicated by the connection state value plus one.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07191356",
	"publication_date": "2007-03-13",
	"application_number": "10377965",
	"application_date": "2003-02-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for locating and retaining new software and dependencies on a local server by examining a property file of the new software",
	"summary": "",
	"abstract": "A method for distributing code resident on a remote application server to a local server. When a client requests information, a request handler on the local server handles the request. If the information is available on the local server, the request handler satisfies the request using this information. If the information is not available locally, the request handler accesses the remote application server to obtain the requested information. The request handler forwards the information to the client and caches it on the local server. Where the information cannot be transferred to the local application server, the request handler establishes a proxy to the remote application server that forwards a client request to the remote application server and a response from the remote application server to the client. The client communicates transparently with the remote application server via the proxy on the local application server.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07206844",
	"publication_date": "2007-04-17",
	"application_number": "10875905",
	"application_date": "2004-06-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for synchronous support of fault-tolerant and adaptive communication",
	"summary": "",
	"abstract": "An invention is provided for fault-tolerant and adaptive communication in a distributed computing environment. The invention includes detecting an interruption in a digital connection on a network between two endpoints. Upon detection, a connection state value indicating a number of data elements processed by the application is obtained. The connection state value is then exchanged with the opposite endpoint over the network. In this manner, remaining data elements of the transaction can be received sequentially over the network from the opposite endpoint. In particular, the remaining data elements begin with a data element at a point indicated by the connection state value plus one.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07178051",
	"publication_date": "2007-02-13",
	"application_number": "10378005",
	"application_date": "2003-02-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of re-formatting data",
	"summary": "",
	"abstract": "A data structure is disclosed. The data structure includes a data descriptor record. In turn, the data descriptor record includes a type field, a base address field, an offset field, wherein the, and a length field. The type field may be configured, for example, to indicate a data structure type. The data structure type may be configured to assume a values indicating one of a contiguous buffer, a scatter-gather list and a linked list structure, among other such data structures. The base address field may be configured, for example, to store a base address, with the base address being a starting address of a secondary data structure associated with the data descriptor record. The offset field may be configured, for example, to indicate a starting address of data within a secondary data structure pointed to by a base address stored in the base address field. The length field is configured to indicate a length of data stored in a secondary data structure pointed to by a base address stored in the base address field.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07194569",
	"publication_date": "2007-03-20",
	"application_number": "10805571",
	"application_date": "2004-03-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and articles of manufacture for providing a servlet container based web service endpoint",
	"summary": "",
	"abstract": "Methods, systems, and articles of manufacture consistent with certain principles related to the present invention enable a computing system to layer the packaging and deployment of a web service endpoint on a standard servlet component model. To define a web service endpoint, the computing system may develop a service endpoint class that implements a configured service endpoint interface. The interface and endpoint class may be packaged by the computing system into an archive file. The computing system may use the information stored in the archive file to define the service endpoint modify the archive file with class information associated with the defined service endpoint. The modified archive file may be deployed on a container operating within the computing system. Further, the computing system may produce a WSDL based description of the defined service endpoint and export the document such that a remote client may use the information contained in the document to locate and remotely invoke methods on the defined service endpoint.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07159224",
	"publication_date": "2007-01-02",
	"application_number": "10118169",
	"application_date": "2002-04-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for managing an application",
	"summary": "",
	"abstract": "Methods and apparatus for managing execution of an application according to an application lifecycle. The application lifecycle is managed by an application manager through a set of commands that enable the application manager to cause the application to enter one of a plurality of states. In addition, the application can communicate with the application manager to indicate that the application cannot change its state as the application manager has requested or to request that the application manager change the state of the application to a particular state.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07257812",
	"publication_date": "2007-08-14",
	"application_number": "09465980",
	"application_date": "1999-12-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for type safe, lazy, user-defined class loading",
	"summary": "",
	"abstract": "Type safe linkage is ensured by establishing a constraint if a class references an attribute that is contained in another class. This constraint acts as a u201cpromiseu201d to later ensure type safe linkage. At some point lateru2014such as at the earliest time that the type is loaded by both loadersu2014the constraint is verified. This may be accomplished by verifying that the type for the attribute is the same regardless of whether it is loaded by a loader that defines the referencing class or a loader that defines the referred class. If the constraint is not met, an error message is provided.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07197511",
	"publication_date": "2007-03-27",
	"application_number": "10067349",
	"application_date": "2002-02-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for integrating with load balancers in a client and server system",
	"summary": "",
	"abstract": "Methods, systems, and articles of manufacture consistent with the present invention provide for exchanging messages directly between a client and a selected server regardless of the use of a load balancer. The client generates a message to bypass performing load balancing functionality at the load balancer, and sends the message to the load balancer. The load balancing functionality is bypassed and the message is sent directly to the selected server by the load balancer.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07207044",
	"publication_date": "2007-04-17",
	"application_number": "10301293",
	"application_date": "2002-11-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods, system and articles of manufacture for providing an extensible serialization framework for an XML based RPC computing environment",
	"summary": "",
	"abstract": "Methods, systems, and articles of manufacture consistent with certain principles related to the present invention enable a computing system to receive a serialized message including a target object that is associated with at least one member object. The computing system may invoke a deserialize method on a deserializer associated with the target object. In the event the deserialize method cannot completely deserialize the target object, the deserializer may configure a state object returned by the method to monitor a deserialization status associated with the at least one member object. The deserializer may also create an instance builder object that may complete deserialization of the target object in response to receiving a notification reflecting that the at least one member object is deserialized.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07246358",
	"publication_date": "2007-07-17",
	"application_number": "10118153",
	"application_date": "2002-04-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Migrating large data sets for products upgrades",
	"summary": "",
	"abstract": "A mechanism is disclosed for migrating large data sets for product upgrades. In one embodiment, an identifier is received as a parameter of a first method of an API. In response to the receipt of the identifier as a parameter of the first method, a utility is invoked. The utility exports, as one or more transportable tablespaces, one or more database objects that are associated with the identifier in a database. The identifier is also received as a parameter of a second method of the same API. In response to the receipt of the identifier as a parameter of the second method of the API, a utility is also invoked. The utility imports, into the database, database objects that are contained in the one or more transportable tablespaces. The utility also associates, with the identifier, the database objects that are contained in the one or more transportable tablespaces.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07272600",
	"publication_date": "2007-09-18",
	"application_number": "10808797",
	"application_date": "2004-03-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Migrating processes using data representation language representations of the processes in a distributed computing environment",
	"summary": "",
	"abstract": "A data representation language representation of the state of a process executing on a client or service in a distributed computing environment may be created. The representation may include a computation state of the device and/or virtual machine on which the process is executing, wherein the computation state of the device and/or virtual machine comprises information about the execution state of the process on the device and/or virtual machine. A process state may include, but is not limited to: threads, all objects referenced by the threads, transient variables created during the execution of the process, objects and their data, etc. In one embodiment, data describing one or more leases representing grants of access to external services, obtained from spaces by the process, may also be stored with the process state. The data representation language representation of the state of a process may be moved from node to node within the distributed computing environment. The representation of the state of a process may also be stored as a data representation language object in a store mechanism, and later retrieved from the store mechanism to resume the process execution on the same node or on a different node in the distributed computing environment. In one embodiment, an object compilation/decompilation process may be used in creating the representation of the state of a process and in regenerating the state of the process by decompiling the representation of the state of the process.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07200848",
	"publication_date": "2007-04-03",
	"application_number": "09663564",
	"application_date": "2000-09-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multiple password policies in a directory server system",
	"summary": "",
	"abstract": "The invention proposes a directory server capable of interacting with entries organized in a tree structure in a directory server system. The entries comprise user entries. The directory server has a password checking function capable of checking the password for a user entry, based on password-related data. The password checking function is responsive to a user entry having extra data associated thereto, and identifying an additional entry, for executing a distinct password checking based on the password related data defined in that additional entry.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07165182",
	"publication_date": "2007-01-16",
	"application_number": "10613846",
	"application_date": "2003-07-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network portal system and methods",
	"summary": "",
	"abstract": "A network portal system includes a web-top manager and a universal content broker system. The web-top manager is configured to receive a content request from a user device, where the content request includes a content provider identifier. The universal content broker system is coupled to the web-top manager. The universal content broker system includes a plurality of content providers. Each content provider in the plurality of content providers is associated with a different content provider identifier. Also, each content provider accesses content having a different raw data format. A universal content broker is coupled to the web-top manager and to the plurality of content providers. Upon the receipt of the content request from the web-top manager, the universal content broker passes the request to a content provider in the plurality of content providers that is associated with the content provider identifier.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07269664",
	"publication_date": "2007-09-11",
	"application_number": "09759740",
	"application_date": "2001-01-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Non-blocking memory management mechanism for supporting dynamic-sized data structures",
	"summary": "",
	"abstract": "Solutions to a value recycling problem that we define herein facilitate implementations of computer programs that may execute as multithreaded computations in multiprocessor computers, as well as implementations of related shared data structures. Some exploitations of the techniques described herein allow non-blocking, shared data structures to be implemented using standard dynamic allocation mechanisms (such as malloc and free). Indeed, we present several exemplary realizations of dynamic-sized, non-blocking shared data structures that are not prevented from future memory reclamation by thread failures and which depend (in some implementations) only on widely-available hardware support for synchronization. Some exploitations of the techniques described herein allow non-blocking, indeed even lock-free or wait-free, implementations of dynamic storage allocation for shared data structures. A class of general solutions to value recycling is described in the context of an illustration we call the Repeat Offender Problem (ROP), including illustrative Application Program Interfaces (APIs) defined in terms of the ROP terminology. Furthermore, specific solutions, implementations and algorithm, including a Pass-The-Buck (PTB) implementation are described.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07194495",
	"publication_date": "2007-03-20",
	"application_number": "10340145",
	"application_date": "2003-01-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Overflow sensitive arithmetic instruction optimization using chaining",
	"summary": "",
	"abstract": "A method for arithmetic expression optimization includes receiving an operator and at least one operand of a first instruction defined for a first processor having a first base. The method also includes converting the first instruction to a second instruction optimized for a second processor having a second base smaller than the first base when the at least one operand does not carry potential overflow beyond the second base or when the operator is insensitive to overflow. The method also includes converting instructions in an instruction chain to a wider base larger than the second base and smaller or equal to the first base when the at least one operand carries potential overflow beyond the second base and when the operator is sensitive to overflow. The chain is bounded by the second instruction and a third instruction that has been previously optimized and is the source of the potential overflow.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07207037",
	"publication_date": "2007-04-17",
	"application_number": "10712918",
	"application_date": "2003-11-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Peer trust evaluation using mobile agents in peer-to-peer networks",
	"summary": "",
	"abstract": "Embodiments of a system and method for using mobile agents to gather trust information for evaluating trust in peer-to-peer networks. A peer node may launch a mobile agent on a network including an itinerary of peer nodes to be visited by the mobile agent and an indication of an area of interest. The mobile agent may determine if a visited peer node stores trust evaluations for other peer nodes as providers of codats relevant to the area of interest and, if so, the trust evaluations may be stored as payload data in the mobile agent. After completing the itinerary, the mobile agent may return the payload to the initiating peer node. The initiating peer node may use the trust evaluations collected by the mobile agent in determining or adjusting trust evaluations for peer nodes as providers of codats relevant to the area of interest.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07213047",
	"publication_date": "2007-05-01",
	"application_number": "10285133",
	"application_date": "2002-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Persistent queuing for distributed file systems",
	"summary": "",
	"abstract": "Disclosed are novel methods and apparatus for persistent queuing in distributed file systems. In an embodiment, an apparatus is disclosed. The apparatus includes a distributed file system including a plurality of remote systems. The plurality of remote systems includes a sender site and a receiver site. The apparatus further includes a local queue accessible by the sender site; a remote queue accessible by the receiver site; a next attempt time indicator; and an attempt counter. The next attempt time indicator may specify a next time to install a transferred file on the receiver site. The attempt counter indicates how many attempts have been made to install the transferred file on the receiver site.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07277913",
	"publication_date": "2007-10-02",
	"application_number": "10143191",
	"application_date": "2002-05-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Pipelined 2D viewport clip circuit",
	"summary": "",
	"abstract": "A system and method for performing viewport clipping for multiple viewports using a pipeline. The pixel address coordinates are compared against boundaries of a first viewport window. The results of this comparison, along with the pixel address coordinates, are registered and passed on to the next pipeline stage. There, the pixel address coordinates are compared against the boundaries of a second viewport window. The comparison results are combined with those passed from the previous stage, and the results are again registered. This scheme is repeated until the pixel has been tested against all the viewport window boundaries, with the intermediate results being combined into a single result indicative of whether the pixel is to be passed to the subsequent stages of the graphics pipeline or clipped.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07310103",
	"publication_date": "2007-12-18",
	"application_number": "10091176",
	"application_date": "2002-03-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Plugin architecture for extending polices",
	"summary": "",
	"abstract": "An architecture for allowing extensibility to policies. The architecture has a policy component program that is able to evaluate and enforce polices. The architecture also has plugin modules for allowing a user to customize the polices. The policy component program is able to present interfaces to the user for customizing the polices. The policy component program is further able to integrate customized polices into a framework of the policy component program in response to user input that is based on the interfaces presented to the user. The presented interfaces may be for defining subjects in the policy program, defining conditions in the policy program, defining referrals in the policy program, defining resource names in the policy program, and defining how conflicts will be resolved in the policy program. The interfaces may be compliant with the JAVA programming language.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07296235",
	"publication_date": "2007-11-13",
	"application_number": "10269152",
	"application_date": "2002-10-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Policy abstraction mechanism",
	"summary": "",
	"abstract": "A secure operating system is disclosed in which all code implementing security functionality resides in a security module separate from the operating system code. Calls involving security functions are made using a format or interface which is standardized for all systems. Such a call identifies, inter alia the response and the access mode which are used to identify a call in a two dimensional table which contains a pointer to the needed security functions. In the way security functions are separately compilable and security solving changes can be made by linking in a new security module. Maintenance of security code is separated from maintenance of the underlying operating system.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07185210",
	"publication_date": "2007-02-27",
	"application_number": "08668892",
	"application_date": "1996-06-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Preparation of a software configuration using an XML type programming language",
	"summary": "",
	"abstract": "Configuring software for a target comprises preparing a command file which specifies a subset of components selected from a group of components, and parameters for tuning at least some of the selected subset of components. The command file is written using a single programming language, capable of managing tree structures of objects, preferably an XML type language, having a Document Type Definition enabling it to work as a programming language. An image file is prepared from the command file, to be loaded on the target.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07263699",
	"publication_date": "2007-08-28",
	"application_number": "10171089",
	"application_date": "2002-06-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Remote incremental program verification using API definitions",
	"summary": "",
	"abstract": "A method of operating a computer system includes providing a program in memory, verifying the program prior to an installation of the program and generating a program fault signal when the verification fails. The program includes at least one program unit, and each program unit includes an Application Programming Interface (API) definition file and an implementation. Each API definition file defines items in its associated program unit that are made accessible to one or more other program units and each implementation includes executable code corresponding to the API definition file. The executable code includes type specific instructions and data. Verification includes determining whether a first program unit implementation is internally consistent, determining whether the first program unit implementation is consistent with a first program unit API definition file associated with the first program unit implementation and generating a program fault signal when the verifying fails. A resource-constrained device includes a memory for providing a remotely verified application software program that includes at least one program unit, each program unit comprising type specific instructions and data. The resource-constrained device also includes a virtual machine that is capable of executing instructions included within the application software program. The remote verification uses an API definition file for each implementation to determine whether a first program unit implementation is internally consistent and to determine whether the first program unit implementation is consistent with a first program unit API definition file associated with the first program unit implementation.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07231635",
	"publication_date": "2007-06-12",
	"application_number": "10661043",
	"application_date": "2003-09-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Remote method invocation with secure messaging in a distributed computing environment",
	"summary": "",
	"abstract": "A secure interface between clients and services in a distributed computing environment is described. Method gates may provide an interface to remotely invoke functions of a service. A method gate may be generated from an advertisement that may include definitions for one or more messages for remotely invoking functions of the service. A client may generate messages containing representations of method calls. The service may invoke functions that correspond to the set of messages. A method gate on the service may unmarshal the message and invoke the function. The client may receive the results of the function directly. Alternatively, the results may be stored, an advertisement to the results may be provided, and a gate may be generated to access the results. Message gates may perform the sending and receiving of the messages between the client and service. In one embodiment, functions of the service may be computer programming language (e.g. Java) methods. In one embodiment, a message including a representation of a method call may be generated when no actual method call was made. In one embodiment, a method call may be transformed into messages that may be sent to the service; the service may not know that the messages were generated from a method call. In one embodiment, a service may transform messages requesting functions into method calls; the client may not know that the service is invoking methods to perform the functions. A credential may be embedded in messages and used for message authentication on the service.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07243356",
	"publication_date": "2007-07-10",
	"application_number": "09672145",
	"application_date": "2000-09-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Scriptable plug-in application programming interface",
	"summary": "",
	"abstract": "Embodiments of the present invention relate to a scriptable plug-in API. According to the invention, all of the interfaces in a conventional, non-scriptable plug-in API are mapped to similar interfaces in a scriptable plug-in API. There is no need to change the existing plug-in APIs. In one embodiment, a set of interfaces and a set of wrappers are used to bind the new, scriptable plug-in API to the old one. In another embodiment, C++ wrappers are written to bridge new API to the old one. Inter-threading calls for plug-ins are also made possible using a proxy that functions with scriptable interfaces. In another embodiment, the plug-in is written for a Mozillau2122/Netscapeu2122 6.x browser. In another embodiment, the scripting languages used to develop the plug-in include Python, JavaScript, and Perl.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07269833",
	"publication_date": "2007-09-11",
	"application_number": "10023008",
	"application_date": "2001-12-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure photo carrying identification device, as well as means and method for authenticating such an identification device",
	"summary": "",
	"abstract": "Means and a method for authenticating a photographic image () on an identification device (), the identification device () being provided with: a photographic image of a person () and a microprocessor (), the microprocessor () having: a) a processor (), b) a memory () connected to the processor () and having stored authentication data, and c) interface means () connected to the processor () for communicating with an external device, wherein said photographic image () comprises stegano-graphically hidden information, the content of which together with said authentication data allows authentication of said photographic image (), the method having the following steps: au2032) scanning the photographic image () and generating image data. bu2032) analyzing these image data in accordance with a predetermined image analysis procedure to derive said hidden information, and cu2032) carrying out the authentication of the photographic image () based on the hidden information and the authentication data.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07273169",
	"publication_date": "2007-09-25",
	"application_number": "10967282",
	"application_date": "2004-10-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Single-word lock-free reference counting",
	"summary": "",
	"abstract": "Solutions to a value recycling problem that we define herein facilitate implementations of computer programs that may execute as multithreaded computations in multiprocessor computers, as well as implementations of related shared data structures. Some exploitations of the techniques described herein allow non-blocking, shared data structures to be implemented using standard dynamic allocation mechanisms (such as malloc and free). A class of general solutions to value recycling is described in the context of an illustration we call the Repeat Offender Problem (ROP), including illustrative Application Program Interfaces (APIs) defined in terms of the ROP terminology. Furthermore, specific solutions, implementations and algorithm, including a Pass-The-Buck (PTB) implementation are also described. Solutions to the proposed value recycling problem have a variety of uses. For example, a single-word lock-free reference counting (SLFRC) technique may build on any of a variety of value recycling solutions to transform, in a straight-forward manner, many lock-free data structure implementations that assume garbage collection (i.e., which do not explicitly free memory) into dynamic-sized data structures.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07299242",
	"publication_date": "2007-11-20",
	"application_number": "10340150",
	"application_date": "2003-01-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Smart card with multiple applications",
	"summary": "",
	"abstract": "One embodiment of the invention provides a smart card having multiple applications installed thereon. One of the multiple applications is designated as a default application which is activated whenever the card is reset. The default application is required to implement a first operation to provide a canonically ordered listing of the multiple applications on the card. The default application may further implement a second operation to allow one of the multiple applications to be selected for activation via an index into the listing.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07232073",
	"publication_date": "2007-06-19",
	"application_number": "11019833",
	"application_date": "2004-12-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for goal-based scheduling of blocks of code for concurrent execution",
	"summary": "",
	"abstract": "A scheduler may be configured to schedule a plurality of blocks of concurrent code for multi-threaded execution. The scheduler may be configured to initiate multi-threaded execution of the blocks of concurrent code in an order determined by block-level performance criteria for the blocks of concurrent code to reduce overall execution time of the concurrent code. In one embodiment, the scheduler may be configured to schedule code blocks having a longer run time ahead of blocks having a shorter run time. The scheduler may be configured to schedule a group of said blocks based on a goal of each of the blocks of the group completing execution at approximately the same time. The scheduler may also be configured to initiate multi-threaded execution of each block of the group at different times according to the block-level performance criteria to the goal.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07222218",
	"publication_date": "2007-05-22",
	"application_number": "10277602",
	"application_date": "2002-10-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for managing software version upgrades in a networked computer system",
	"summary": "",
	"abstract": "In a multi-node computer system, a software version management system is described having a version manager for ensuring that cluster nodes running completely incompatible software are unable to communicate with each other. The version manager provides a mechanism for determining when nodes in the cluster are running incompatible software and providing a way for determining the exact version of software that each node must run. The version manager provides support for rolling upgrades to enable the version management software to ensure the chosen version of software that runs the cluster stays constant even though the software installed on individual nodes is changing.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07260818",
	"publication_date": "2007-08-21",
	"application_number": "10449584",
	"application_date": "2003-05-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for secure message-based leasing of resources in a distributed computing environment",
	"summary": "",
	"abstract": "A system and method for providing message-based leasing of resources in a distributed computing environment. Services may issue leases to clients and provide operations on those leases. The lease functionality of a service may be defined in an XML message schema. Gates may be used to perform lease operations. Leases may be granted for a period that may be negotiated. Leasing messages for performing leasing operations may be defined. The leasing messages may include messages to renew a lease and to cancel a lease. Leasing messages may include embedded credentials for authenticating the sender of the message. A client may embed a credential in messages sent to the service. The service may then authenticate the credential when received in a message from the client. The issuing and embedding of credentials in leasing messages may be used to provide a secure leasing environment, effectively prohibiting anyone but an authorized, credentialed client (and the service issuing the lease) from performing functions on the lease.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07188251",
	"publication_date": "2007-03-06",
	"application_number": "09653609",
	"application_date": "2000-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for specification tracking in a Java compatibility testing environment",
	"summary": "",
	"abstract": "An invention is disclosed for collecting information on a specification of a computer program. A plurality of classes is provided, where each class is capable of performing a particular task related to obtaining information from a specification. Then a command is received from a user. The command requests a particular task to be performed. A class is then selected from the plurality of classes based on the task requested by the received command, and the selected class is run. In this manner, information on the specification is obtained. The plurality of classes can include a get assertion class that obtains assertions from the specification, and a reporting class that provides information on test coverage of the specification.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07243090",
	"publication_date": "2007-07-10",
	"application_number": "09881822",
	"application_date": "2001-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method of using a pipe advertisement for a peer-to-peer network entity in peer-to-peer presence detection",
	"summary": "",
	"abstract": "Embodiments of a decentralized mechanism for detecting the presence of entities in a peer-to-peer network. In one embodiment, using pipes, a peer may uniquely and independently generate an identity for a peer-to-peer network entity. The identity may be used to probe the peer-to-peer network for presence of instances of the corresponding entity on other peers regardless of which peer the identity was generated on and without using a central identity repository or presence system. In one embodiment, net crawling may be used to map identities and resolve the locations of instances of the corresponding entities. An entity may move anywhere on the network, and the decentralized mechanism for detecting entity presence may be used to locate the instance(s) of the entity.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07197565",
	"publication_date": "2007-03-27",
	"application_number": "10263923",
	"application_date": "2002-10-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method Xlet and applet manager testing",
	"summary": "",
	"abstract": "An invention is provided for an application manager testing interface that provides a public API usable by testing software. The application manager testing interface allows testing software to issue commands to an application manager to test the life cycle and state management abilities of the application manager. A testing program capable of providing commands to test a life cycle of a dependent program controlled by an application manager is provided. In addition, an application manager testing interface is included that is in communication with the testing program and the application manager. The application manager testing interface is capable of receiving the commands from the testing program and providing the commands to the application manager. In this manner, the application manager can control the dependent program based on the commands. In one aspect, the testing program can be controlled by the application manager. For example, the application manager can be an Xlet manager and the testing program is an agent Xlet, or the application manager can be an applet manager and the testing program can be an agent applet.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07174542",
	"publication_date": "2007-02-06",
	"application_number": "10236801",
	"application_date": "2002-09-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Testing a database transaction system without modifying a database",
	"summary": "",
	"abstract": "A mechanism for testing a database transaction system without modifying a database is provided. A transaction commit instruction, sent by a transaction manager, is intercepted. The transaction commit instruction is intended to instruct a database driver to cause a transaction to be committed. The transaction commit instruction is prevented from reaching the database. A failure signal is sent back to the transaction manager to indicate a failure to commit the transaction even though the database has not experienced the failure. This enables a failure to be simulated without causing a database to suffer any adverse effects.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07219110",
	"publication_date": "2007-05-15",
	"application_number": "10232485",
	"application_date": "2002-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Thread-safe portable management interface",
	"summary": "",
	"abstract": "A system and method for using a management interface such as Portable Management Interface (PMI) in a thread-safe and efficient manner. A secondary scheduler receives PMI management requests from multi-threaded manager applications in a thread-safe manner, such as through a lock. The secondary scheduler monitors the flow of PMI-related requests into PMI to ensure that, at any point in time, only one management request (e.g., callback function) is running on the PMI thread. When a request in the secondary queue is ready for scheduling with the primary scheduler, the secondary scheduler then accesses the primary scheduler in a thread-safe manner, such as through a lock, to send the request to the primary scheduler. The management requests are dispatched from the primary scheduler and executed on managed objects though a Management Information Server. The performance and efficiency of the manager applications is enhanced by increasing the responsiveness of interaction between the manager applications and the schedulers. The performance of the management interface is enhanced by eliminating the need for polling-based scheduling solutions.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07206843",
	"publication_date": "2007-04-17",
	"application_number": "09553971",
	"application_date": "2000-04-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Tool for identifying causes of memory leaks",
	"summary": "",
	"abstract": "A method for identifying memory leak causes is provided. The method initiates with tracking a number of allocations of objects during a time period. Potentially leaking objects are identified and object lifetime tracking instrumentation is injected into the code to track potentially leaking objects. Then, object lifetime logs are generated for each of the potentially leaking objects. A computer readable medium and a system are also provided.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07313661",
	"publication_date": "2007-12-25",
	"application_number": "11084407",
	"application_date": "2005-03-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Using render bin parallelism for rendering scene graph based graphics data",
	"summary": "",
	"abstract": "A system and method for rapid processing of scene-graph-based data and/or programs using a render bin is disclosed. In one embodiment, the system may be configured to generate a plurality of structures and thread that manage the data originally received as part of the scene graph. The structures and threads may be configured to convey information about state changes through the use of messaging. The system may include support for messaging between threads, messaging with time and/or event stamps, epochs to ensure consistency, and ancillary structures such as render-bins, geometry structures, and rendering environment structures. One of the structures may be a render bin that may be used to implement parallel rendering.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07184038",
	"publication_date": "2007-02-27",
	"application_number": "09760000",
	"application_date": "2001-01-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Using token-based signing to install unsigned binaries",
	"summary": "",
	"abstract": "The present invention provides for token based signing of an unsigned binary which may be a stream of bits (e.g., 0's and 1's). The unsigned binary is signed using a secret key which resides in a token (e.g., a smart card), which makes the secret key available to the token holder. The unsigned binary is downloaded and verified for authenticity by the token coupled to a computing device. In one embodiment, the downloaded unsigned binary is encrypted. If the unsigned binary is authentic, it may be used to replace the prior firmware on that computing device.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07281132",
	"publication_date": "2007-10-09",
	"application_number": "10044879",
	"application_date": "2001-10-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Versioning application programming interface and method for using versioning functionality",
	"summary": "",
	"abstract": "A versioning Application Programming Interface (API) is provided for a software platform based on an object-oriented platform-independent programming language. The versioning API includes (a) main interfaces defining versioning functionality, the main interfaces allowing access to the versioning functionality, (b) a functional implementation of the main interfaces, the functional implementation including classes and libraries implementing the versioning functionality, the classes including a reference to a program module to perform a requested versioning function, and (c) a user interface for using the versioning functionality. The versioning API may further include native programming interfaces allowing code written in the object-oriented platform-independent language to operate with code written in a native language other than the object-oriented platform-independent language. The classes and some libraries are written in an object-oriented platform-independent programming language. Some libraries may include software routines written in the native programming language, and implement the native programming interfaces.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07222138",
	"publication_date": "2007-05-22",
	"application_number": "10081000",
	"application_date": "2002-02-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Antivirus scanning in a hard-linked environment",
	"summary": "",
	"abstract": "Computer-implemented methods, apparati, and computer-readable media for detecting malicious computer code in a file () associated with a computer (). A method of the present invention comprises the steps of determining whether there is more than one hard link () to the file (); and when there is more than one hard link (), ascertaining the identities of all the hard links (), and performing an antivirus scan on the file () based upon the hard link(s) () having the most restrictive scanning criteria of all the hard links (), or upon the union of scanning criteria amongst all the hard links ().",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07260847",
	"publication_date": "2007-08-21",
	"application_number": "10280663",
	"application_date": "2002-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enabling seamless user mobility in a short-range wireless networking environment",
	"summary": "",
	"abstract": "The present invention provides methods, systems, and computer program instructions for enabling a variety of devices, particularly low-power hand-held devices, to travel seamlessly through a networking environment such as that encountered within a building by establishing connectivity to a plurality of network access points. The illusion of seamless network connectivity is provided by having these access points coordinate with a core server to perform user authentication, device address assignment, and handoff services.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07197308",
	"publication_date": "2007-03-27",
	"application_number": "11195166",
	"application_date": "2005-08-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Heuristic detection and termination of fast spreading network worm attacks",
	"summary": "",
	"abstract": "Methods, apparati, and computer program products for detecting and responding to fast-spreading network worm attacks include a network monitoring module (), which observes () failed network connection attempts from multiple sources. A logging module () logs () the failed connection attempts. An analysis module () uses the logged data on the failed connection attempts to determine () whether a sources is infected with a worm using a set of threshold criteria. The threshold criteria indicate whether a source's failed connection attempts are non-normal. In one embodiment, a response module () responds () to the computer worm by, e.g., alerting a user or system administrator, terminating an infected process (), or terminating the infected source's network access.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07159149",
	"publication_date": "2007-01-02",
	"application_number": "10280586",
	"application_date": "2002-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Return-to-LIBC attack blocking system and method",
	"summary": "",
	"abstract": "A method includes stalling a call to a critical operating system (OS) function, looking up a value at the previous top of stack, and determining whether the value is equivalent to an address of the critical OS function being called. If the value at the previous top of stack is equivalent to the address of the critical OS function being called, the method further includes taking protective action to protect a computer system.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07287283",
	"publication_date": "2007-10-23",
	"application_number": "10671202",
	"application_date": "2003-09-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Unified program for simultaneously displaying graphically-editable graphics presentation and linguistically-editable linguistic definition of the graphics presentation and for synchronizing the graphics presentation and the linguistic definition to one another",
	"summary": "",
	"abstract": "A web page development application provides simultaneous display of a browser view and the corresponding descriptor language source view. The application provides graphical editing of the browser view. The corresponding descriptor language source view is automatically generated so as to be consistent with the browser view upon prompting by the user. The web page development application allows separate editing of the browser view and corresponding descriptor language source view and cross-synchronization such that changes to one view will automatically update the other view when prompted by the user.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07237193",
	"publication_date": "2007-06-26",
	"application_number": "10255310",
	"application_date": "2002-09-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for data transfer using a recoverable data pipe",
	"summary": "",
	"abstract": "A system for data transfer using a recoverable data pipe includes a data producer, one or more data consumers, a storage device and a data pipe manager. The data producer may be configured to append updated data blocks to the storage device via a producer storage input/output (I/O) channel. The data consumers may be configured to read data blocks from the storage device via consumer storage I/O channels. The data pipe manager may be configured to maintain metadata identifying data blocks of the storage device that have been read by each data consumer, and to release backing storage corresponding to the data blocks that have been read by all data consumers.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07293145",
	"publication_date": "2007-11-06",
	"application_number": "11059091",
	"application_date": "2005-02-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for optimizing storage operations by operating only on mapped blocks",
	"summary": "",
	"abstract": "A system for optimizing storage operations by operating only on mapped blocks may include a first and a second set of one or more storage devices, a virtual device client and a virtual device server. The virtual device server may be configured to aggregate storage in the first set of one or more storage devices into a virtual storage device, and make the virtual device accessible to the virtual device server. In preparation for a synchronization operation, the virtual device server may obtain a map identifying one or more in-use regions of the virtual storage device from the virtual device client. The virtual device server may then perform the synchronization operation by copying the one or more in-use regions of the virtual storage device to the second set of one or more storage devices.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07293154",
	"publication_date": "2007-11-06",
	"application_number": "10992370",
	"application_date": "2004-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for storing and utilizing routing information in a computer network",
	"summary": "",
	"abstract": "A system and method for storing and utilizing routing information in a computer network. Instances of a first network address may be created on each of N nodes in the network. Routing information for routing messages to the first network address may be stored on a first node. The first node may be operable to route a first message to the first network address using the routing information so that the message reaches each of the N nodes that have an instance of the first network address. However, the routing information stored by the first node may comprise information regarding less than all N instances of the first network address.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07292585",
	"publication_date": "2007-11-06",
	"application_number": "10403919",
	"application_date": "2003-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Efficient system and method for running and analyzing multi-channel, multi-modal applications",
	"summary": "",
	"abstract": "A system for developing, running and analyzing multi-modal applications includes a development platform, a run-time engine, and a data-mining module. Once a mobile application is built and tested on the development platform, it can be automatically deployed on the run-time system, which maintains and manages the application. Further, the data-mining system allows access to reporting and analysis tools that aid in understanding end-user behavior and preferences. This data can be used to further enhance applications by redesigning and redeploying them in a rapid and efficient manner.",
	"url": null,
	"owner": "Symbol Technologies, Inc.",
	"publication_number": "07174534",
	"publication_date": "2007-02-06",
	"application_number": "10053767",
	"application_date": "2002-01-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software method for maintaining connectivity between applications during communications by mobile computer terminals operable in wireless networks",
	"summary": "",
	"abstract": "A method of maintaining connectivity and synchronization of data from a first application resident in a first mobile computer to a second application resident in a second computer wherein the data is transmitted over a data communications network including a plurality of stationary access points, determining, in said first mobile computer, that communications between the first mobile computer and the second computer has been impeded, and that association with a different access point or use of a different radio channel should be attempted in order to continue communications; storing and queuing the messages while a new link is established; and re-establishing a link between first and second virtual sockets in the respective computers in order to continue a session between the first and second applications in the first and second computer respectively.",
	"url": null,
	"owner": "Symbol Technologies, Inc.",
	"publication_number": "07225260",
	"publication_date": "2007-05-29",
	"application_number": "09967358",
	"application_date": "2001-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software method utilizing gateways for maintaining connectivity during communications over distinct wireless networks by mobile computer terminals",
	"summary": "",
	"abstract": "Data is transferred between a first mobile computer and a second computer over a first communications channel through a gateway. If the gateway determines that the data transfer has been impeded, then a second communications channel is established. During the time that the data transfer was impeded, the data is stored until the data transfer is resumed.",
	"url": null,
	"owner": "Symbol Technologies, Inc.",
	"publication_number": "07209466",
	"publication_date": "2007-04-24",
	"application_number": "10163556",
	"application_date": "2002-06-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for computer-based, calendar-controlled message creation and delivery",
	"summary": "",
	"abstract": "Methods and apparatus are described for creating, scheduling and delivering messages. A message having a first audio component is generated in response to input from a user. The input includes words entered by the user. The first audio component is operable to facilitate audible playback of the words. Delivery of the message at a future time to a communication device is scheduled in response to specification of the future time by the user. A connection to the communication device is established at the future time via a communications network. The message is transmitted over the connection such that the words associated with the first audio component of the message are audible via the communication device.",
	"url": null,
	"owner": "T-Tag Corporation",
	"publication_number": "07177404",
	"publication_date": "2007-02-13",
	"application_number": "10964175",
	"application_date": "2004-10-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Table-oriented application development environment",
	"summary": "",
	"abstract": "The invention relates to a method for developing a software application including the step of creating a software application having one or more classes, each class comprising one or more metadata describing characteristics defining the class. The method also includes the step of enabling any number of additional metadata to be added to the metadata of the class to facilitate the development of the software application. Also, the metadata and the additional metadata are organized in a tabular fashion.",
	"url": null,
	"owner": "TableCode Software Corporation",
	"publication_number": "07266565",
	"publication_date": "2007-09-04",
	"application_number": "10870407",
	"application_date": "2004-06-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automated pushing of computer user's context data to clients",
	"summary": "",
	"abstract": "Techniques are described for providing information about a current state that is modeled with multiple state attributes. In some situations the providing includes receiving from a first client an indication of an interest in receiving values for an indicated one of the state attributes of the modeled current state, receiving from a second client an indication of an interest in receiving values for another of the state attributes of the modeled current state, and, in response to receiving a value for the indicated one attribute from a first source, determining that the first client has an interest in receiving the received value and supplying the received value to the first client.",
	"url": null,
	"owner": "Tangis Corporation",
	"publication_number": "07225229",
	"publication_date": "2007-05-29",
	"application_number": "09724892",
	"application_date": "2000-11-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamically swapping modules for determining a computer user's context",
	"summary": "",
	"abstract": "Techniques for providing information about a current state modeled with multiple attributes is described. The providing of information can include receiving from a first source an indication of an ability to supply values for one of the state attributes of the modeled current state, and supplying to a client a value for the one attribute received from the first source. After the supplying of the value, the providing can include receiving from a second source a value supplying ability for the one attribute and supplying of a value for the one attribute based on values received for the one attribute from the first and second sources. After the supplying of that value, the providing can include receiving from the first source an indication of a value supplying inability for the one attribute and supplying a value for the one attribute received from the second source.",
	"url": null,
	"owner": "Tangis Corporation",
	"publication_number": "07231439",
	"publication_date": "2007-06-12",
	"application_number": "09724902",
	"application_date": "2000-11-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Supplying notifications related to supply and consumption of user context data",
	"summary": "",
	"abstract": "Techniques are described for providing information about a current state that is modeled with multiple state attributes. In some situations, the providing includes receiving from a module a request related to the modeling of the current state with the multiple state attributes. In such situations, the providing further includes, without further intervention related to the request by the module, determining that the request cannot currently be satisfied, and indicating to the module that the request cannot currently be satisfied, monitoring at later times after the indicating to determine whether the request can be satisfied, and indicating to the module that the request can be satisfied if it is determined at one of the later times that the request can currently be satisfied.",
	"url": null,
	"owner": "Tangis Corporation",
	"publication_number": "07203906",
	"publication_date": "2007-04-10",
	"application_number": "09879339",
	"application_date": "2001-06-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Communications system with data storage device interface protocol connectors and related methods",
	"summary": "",
	"abstract": "A communications system may include a plurality of data storage devices for storing data using at least one of a plurality of different operating protocols. The system may further include a plurality of mobile wireless communications devices for accessing the data storage devices and each using at least one of the plurality of different operating protocols. Moreover, a protocol interface device may also be included. The protocol interface device may include a front-end proxy module for communicating with the plurality of mobile wireless communications devices using respective operating protocols, and a protocol engine module communicating with the front-end proxy module using a common interface protocol. The protocol interface device may also include a respective interface connector module for translating communications between the protocol engine module and the plurality of data storage devices for each of the different operating protocols.",
	"url": null,
	"owner": "Teamon Systems, Inc.",
	"publication_number": "07289975",
	"publication_date": "2007-10-30",
	"application_number": "10777959",
	"application_date": "2004-02-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for notifying users of an event using alerts",
	"summary": "",
	"abstract": "An alert engine module receives an alert for an event in a generic communications format and delivers an alert for the event to a target address in a communications format that is preferred by a user based on the alert content. The generic format can be an e-mail message, such as a Simple Mail Transfer Protocol (SMTP) message. The alert engine can be operative to transform the alert based on a header and/or format of a target address.",
	"url": null,
	"owner": "Teamon Systems, Inc.",
	"publication_number": "07162223",
	"publication_date": "2007-01-09",
	"application_number": "10780423",
	"application_date": "2004-02-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method of polling electronic mailboxes",
	"summary": "",
	"abstract": "A communications system includes a polling agent that can be part of a mobile office platform for polling an electronic mailbox to retrieve unique identifiers (UID's) of electronic messages. A database stores the UID's resulting from the polling operation. The polling agent is operative for polling the electronic mailbox and retrieving only those UID's that are newer than the UID's from a previous polling to determine that new messages are available.",
	"url": null,
	"owner": "Teamon Systems, Inc.",
	"publication_number": "07206816",
	"publication_date": "2007-04-17",
	"application_number": "10767571",
	"application_date": "2004-01-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for implementing standard applications on an intelligent network service control point through an open services gateway",
	"summary": "",
	"abstract": "Telecommunications service providers are increasingly relying on third party applications developed in accordance with industry standard application programming interfaces (API's). In order to decouple the connection between the standard API's and the telecommunications network, the present invention creates a translation layer or open services gateway (OSG). The open services gateway enables an application written to conform to an industry standard API to be used despite changes in the underlying network. The OSG encapsulates the commands from the API's in a TCP/IP packet which is formatted in accordance with a generic data interface specification for an intelligent network services control point. In this manner there is no hard-coded coupling between open standard API's and the telecommunications network. Additionally, the intelligent network services control point can perform important interference monitoring functions.",
	"url": null,
	"owner": "Telcordia Technologies, Inc.",
	"publication_number": "07272133",
	"publication_date": "2007-09-18",
	"application_number": "10216943",
	"application_date": "2002-08-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Wireless internet gateway",
	"summary": "",
	"abstract": "A wireless Internet gateway bridges wireless devices to the Internet, e.g., via a short message service center (SMSC). The gateway provides a portal to SMPP, HTTP, TNPP, or other protocol messages using Java Remote Method Invocation (RMI) techniques. Application servers insert RMI objects containing messages in a message queue handler of the gateway. The RMI objects are queued and passed either directly to a destination delivery handler (e.g., SMPP, SMTP, HTTP or TNPP protocol handler), or passed through a generic destination interface. An SMTP handler provides direct communication of SMTP protocol messages (i.e., email) to the message queue. An SMPP link proxy module provides direct access between a local application server and the destination delivery handler. The messages are packaged into relevant messages of the particular destination protocol (e.g., SMPP), and transmitted to the relevant network element (e.g., to an SMSC).",
	"url": null,
	"owner": "TeleCommunication Systems, Inc.",
	"publication_number": "07228333",
	"publication_date": "2007-06-05",
	"application_number": "09630762",
	"application_date": "2000-08-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for setting up a telephone conference call in a switched telephone network through the internet",
	"summary": "",
	"abstract": "Method and system for setting up connections between a plurality of telephone devices () of a switched telephone network (), for establishing a conference call, comprising connecting a web client terminal () to a web server () of the internet (), on request by the terminal () running a conference application () on the web server () to serve the client terminal () with a web page to return a plurality of telephone numbers corresponding to respective ones of the plurality of telephone devices (), in response to receipt of the plurality of telephone numbers by the web server () uploading the plurality of telephone numbers by the web server () to a service control point () of the switched telephone network () thereby initiating a conference call script () of a service management system () supporting the service control point () for setting up said telephone connections.",
	"url": null,
	"owner": "Telefonaktiebolaget LM Ericsson (publ)",
	"publication_number": "07218715",
	"publication_date": "2007-05-15",
	"application_number": "10363286",
	"application_date": "2000-08-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mobile multimedia engine",
	"summary": "",
	"abstract": "A mobile multimedia system for a mobile terminal for a wireless telecommunications system and a method for enabling multimedia applications in a mobile terminal. The system includes a mobile multimedia engine having a software services component and a hardware component associated with and controlled by said software services component, and an interface component having at least one interface for providing access to the mobile multimedia engine. The system further includes multimedia application software loaded, installed and run in said mobile multimedia engine via the at least one interface in said interface component.",
	"url": null,
	"owner": "Telefonaktiebolaget LM Ericsson (publ)",
	"publication_number": "07286823",
	"publication_date": "2007-10-23",
	"application_number": "10359910",
	"application_date": "2003-02-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "QoS translator",
	"summary": "",
	"abstract": "When UMTS is part of IP end-to-end communication, there must exist means for UMTS to be able to provide the required Quality of Service (QoS) for applications running over IP. Hence there is a need for a translation function for translation between IP QoS parameters and UMTS QoS attributes. This translation is not trivial because of several reasons. First, the number of QoS parameters in the IP level and the UMTS level are different. Second, definitions of parameters at the two levels are different. Keeping these factors in view, the present invention provides for a method for translation of IP QoS parameters to UMTS QoS attributes, and another method for translation of UMTS QoS attributes to IP QoS parameters. This translation will enable spectrum efficient UMTS bearers to be set up for applications running over IP. This will also make negotiation of services possible between an entity at the IP level and the UMTS network. These methods are placed in both the User Equipment as well as the Gateway of the UMTS network.",
	"url": null,
	"owner": "Telefonaktiebolaget LM Ericsson (publ)",
	"publication_number": "07206324",
	"publication_date": "2007-04-17",
	"application_number": "10138240",
	"application_date": "2002-05-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computerized system and method for web enabling and/or web management of embedded applications",
	"summary": "",
	"abstract": "The invention provides a computer implemented method, system, and computer program device for web-enabling a device. An application for remote monitoring and controlling capabilities may be automatically generated, to enable easy development of embedded applications. The application may be loaded onto a device that is to be web-enabled. The application on the device may offer interaction capabilities from standard browsers. A software modeling tool, e.g., a UML-based tool, supplies mechanisms for annotating software elements, and generating and/or customizing code and/or the user interface and/or device elements to be exposed to the web, thereby providing a fast-prototyping and collaborative environment for research and development teams. The web-enabled device may store a copy of the user interface locally. Preferably, the web-enabled device provides real-time updates of device information while connected to the remote user.",
	"url": null,
	"owner": "Telelogic North America Inc.",
	"publication_number": "07275096",
	"publication_date": "2007-09-25",
	"application_number": "10247815",
	"application_date": "2002-09-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Fiber to the home broadband home unit",
	"summary": "",
	"abstract": "The power unit provides power for use in the PI circuit and the RSI circuit. The power unit includes an AC/DC converter for converting ac power received from the residential unit to dc power for use in the ONT and backup batteries for providing power when there is an interruption of the ac power.",
	"url": null,
	"owner": "Tellabs Bedford, Inc.",
	"publication_number": "07277637",
	"publication_date": "2007-10-02",
	"application_number": "10750699",
	"application_date": "2004-01-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for the generation of a voice extensible markup language application for a voice interface process",
	"summary": "",
	"abstract": "A method and system for Extensible Markup Language (XML) application transformation may include converting a call flow diagram describing a voice interface process into a list of states in a XML format, and creating a lookup table of audio states in the XML format by mapping a plurality of audio prompts and their corresponding textual representations with states of a list of states that play audio files associated with the plurality of audio prompts. The method and system may include creating an intermediate application in the XML format and from the list of states by merging audio prompts in the lookup table with states of the list of states that play audio files, and transforming the intermediate application into a second application of a second format that is a representation of the call flow diagram.",
	"url": null,
	"owner": "Tellme Networks, Inc.",
	"publication_number": "07287248",
	"publication_date": "2007-10-23",
	"application_number": "10285894",
	"application_date": "2002-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for dynamic visualization of multi-dimensional data",
	"summary": "",
	"abstract": "Methods and systems for dynamic visualization of highly dimensional data are provided. Example embodiments provide a Dynamic Visualization System (a u201cDVSu201d), which maps data attributes to visualization dimensions and automatically imputes attribute values on-the-fly for each value of a sequencing dimension. Data having different resolutions can be simultaneously displayed in the same visualization. In one embodiment, the DVS comprises a Dynamic Data Management System with a user interface for specifying and mapping attributes, and one or more Dynamic Visualization Engines with near real-time control user interfaces. These components cooperate to define visualization scenarios based upon specified data subsets, determine and automatically execute a defined visualization, and allow analysts and other users to interactively modify the visualization.",
	"url": null,
	"owner": "Terastat, Inc.",
	"publication_number": "07265755",
	"publication_date": "2007-09-04",
	"application_number": "10739897",
	"application_date": "2003-12-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for making and using test verbs",
	"summary": "",
	"abstract": "A computerized method and system for testing a function of an information-processing system. This includes providing an architecture having a set of test commands, the test commands including a set of one or more stimulation commands and a set of one or more result-testing commands, and defining a set of test verbs out of combinations of the test commands. This allows the test programmer to define an overall test program that uses the test verbs in writing a test program that specifies an overall function that will extensively test a system-under-test. The methods further includes executing a program that includes a plurality of test verb instructions and outputting a result of the program. In some embodiments, the present invention provides a computer-readable media that includes instructions coded thereon that when executed on a suitably programmed computer executes one or more of the above methods.",
	"url": null,
	"owner": "TestQuest, Inc.",
	"publication_number": "07191326",
	"publication_date": "2007-03-13",
	"application_number": "11032777",
	"application_date": "2005-01-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Power profiling system and method for correlating runtime information",
	"summary": "",
	"abstract": "Systems and methods for improved power profiling of embedded applications are presented. These inventions provide the ability to measure the power consumption of an embedded application at varying levels of software granularity as the application is executing on the target hardware. Methods and apparatus are provided to permit such measurements in both real-time and non-real-time.",
	"url": null,
	"owner": "Texas Instruments Incorporated",
	"publication_number": "07290246",
	"publication_date": "2007-10-30",
	"application_number": "10325024",
	"application_date": "2002-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Sprite rendering",
	"summary": "",
	"abstract": "Computation of sprite position and size in JSR-184 with revised modelview matrix made with column vector lengths of original modelview matrix.",
	"url": null,
	"owner": "Texas Instruments Incorporated",
	"publication_number": "07202877",
	"publication_date": "2007-04-10",
	"application_number": "11135790",
	"application_date": "2005-05-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for providing information network access to a host agent via a guardian agent",
	"summary": "",
	"abstract": "Methods, systems, and articles of manufacture consistent with the present invention provide a first data processing system access to a network via a second data processing system. An object is sent to the second data processing system, which object when instantiated on the second data processing system implements a network access program that can subscribe to information from the network and publish information to the network. Subscribed to information is received from the second data processing system.",
	"url": null,
	"owner": "The Boeing Company",
	"publication_number": "07269411",
	"publication_date": "2007-09-11",
	"application_number": "10869334",
	"application_date": "2004-06-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Digital video authenticator",
	"summary": "",
	"abstract": "The Digital Video Authenticator (DVA) addresses law enforcement concerns for a means to authenticate digital video (DV) so that it will be admissible and trusted as evidence in court. The DVA is a peripheral device attached to a commercial digital video recording device whose purpose is to generate and record authentication data simultaneously as DV is recorded by the video recording device. Verification of the authenticity of a DV sample will be accomplished using non-real-time software tools. The DVA system and method reads digital video (DV) data from a digital video recording device; parses the DV data into elements representing video, audio, control and timing data; and creates digital signatures that can be used to validate the original DV tape. The combination of secure digital signatures and repeatability of the DV data stored on tape provides the basis for proving the original video has not been modified.",
	"url": null,
	"owner": "The Johns Hopkins University",
	"publication_number": "07197143",
	"publication_date": "2007-03-27",
	"application_number": "10345919",
	"application_date": "2003-01-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Common programming interface for hardware components",
	"summary": "",
	"abstract": "A cross-platform interface tool provides a common interface for any hardware or software component having some advertising mechanism listing its features, input, and output requirements. The advertising mechanism can take a number of different forms, including data, a software object definition, or a communications system. The cross-platform interface tool includes a parsing mechanism for parsing through a component description associated with at least one of the plurality of components to gather information relating to the components. A component interface creator automatically generates a component interface based on the information gathered by the parsing mechanism.",
	"url": null,
	"owner": "The MathWorks, Inc.",
	"publication_number": "07165253",
	"publication_date": "2007-01-16",
	"application_number": "10761888",
	"application_date": "2004-01-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system to maintain application data secure and authentication token for use therein",
	"summary": "",
	"abstract": "Two embodiments of a method and system to maintain application data secure and authentication token for use therein are provided. The present invention uses transient authentication, in which a small hardware token continuously authenticates the user's presence over a short-range, wireless link. Four principles underlying transient authentication are described as well as the two embodiments for securing applications. In the first embodiment, applications are protected transparently by encrypting in-memory state when the user departs and decrypting this state when the user returns. This technique is effective, requiring just seconds to protect and restore an entire machine. In the second embodiment, applications utilize an API for transient authentication, protecting only sensitive state. Ports of three applications, PGP, SSH, and Mozilla are described with respect to this API.",
	"url": null,
	"owner": "The Regents of the University of Michigan",
	"publication_number": "07299364",
	"publication_date": "2007-11-20",
	"application_number": "10608459",
	"application_date": "2003-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Resource allocation decision function for resource management architecture and corresponding programs therefor",
	"summary": "",
	"abstract": "A resource manager for a distributed environment including hosts instantiating copies of a scalable application, generates signals which start up, shutdown or move a selected one of the copies responsive to first information regarding performance of all copies of the scalable application and second information regarding performance of the hosts.",
	"url": null,
	"owner": "The United States of America as represented by the Secretary of the Navy",
	"publication_number": "07181743",
	"publication_date": "2007-02-20",
	"application_number": "09864825",
	"application_date": "2001-05-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System specification language for resource management architecture and corresponding programs therefore",
	"summary": "",
	"abstract": "A method for distributing application, system and network specification information to functional elements controlling a plurality of hosts in a distributed environment, including steps for preparing specification files in a language providing a syntax adapted to describe application, system and network specification information, compiling the specification files to thereby generate specification objects, and providing an application programming interface (API) permitting the functional elements to access the specification information using API calls.",
	"url": null,
	"owner": "The United States of America as represented by the Secretary of the Navy",
	"publication_number": "07171654",
	"publication_date": "2007-01-30",
	"application_number": "09864829",
	"application_date": "2001-05-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic commerce infrastructure system",
	"summary": "",
	"abstract": "A networked commercial interaction management method assembles information into bundles that include a data element reference and meta data describing the data element. The method distributes the meta data and the data element reference from the bundles through the network, and distributes copies of the data elements in the bundles from the network node of their respective data owners to the network nodes of accessors using the meta data and the data element reference distributed through the network. In at least one embodiment, the method periodically issues bundle version identifying signals to different nodes of the network. The bundle version identifying signals indicate changes to the data elements to the network nodes of accessors.",
	"url": null,
	"owner": "Thomson Financial Inc.",
	"publication_number": "07287089",
	"publication_date": "2007-10-23",
	"application_number": "09697024",
	"application_date": "2000-10-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic sales system",
	"summary": "",
	"abstract": "A method comprises making a set of personal profiles available, from at least one buy-side user to at least one sell-side user, each personal profile in the set of personal profiles including a first set of first values for a plurality of information fields, the plurality of information fields relating to commercial transactions. Based upon the at least part of the set of personal profiles, the method receives a request to enter into a trusted relationship from the at least one sell-side user at the at least one buy-side user, and receives a set of trusted relationship information from the at least one sell-side user at the at least one buy-side user. The method sends the set of trusted relationship information, from the at least one buy-side user to the at least one sell-side user. The relationship includes a variable level of trust which affects the amount of infrastructure functionality available to one or more users and wherein the variable level of trust comprises a first level of trust and a second level of trust and wherein the first level of trust is set by the at least one buy-side user and the second level of trust is set by the at least one sell-side user.",
	"url": null,
	"owner": "Thomson Financial Inc.",
	"publication_number": "07305360",
	"publication_date": "2007-12-04",
	"application_number": "09696765",
	"application_date": "2000-10-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for event logging in an information network",
	"summary": "",
	"abstract": "Methods and apparatus for logging, analysis, and reporting of events such as reboots in a client device (e.g., consumer premises equipment in a cable network) using applications. In one aspect, an improved event logging and monitoring system is provided within the device with which the application(s) can interface to record event or error data. In one exemplary embodiment, the client device comprises a digital set-top box having Java-enabled middleware adapted to implement the various functional aspects of the event logging system, which registers to receive event notifications (including resource exhaustion data) from other applications running on the device. The network operator can also optionally control the operation of the logging system remotely via a network agent. Improved client device and network configurations, as well as methods of operating these systems, are also disclosed.",
	"url": null,
	"owner": "Time Warner Cable Inc.",
	"publication_number": "07266726",
	"publication_date": "2007-09-04",
	"application_number": "10722206",
	"application_date": "2003-11-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Maintenance of a markup language document in a database",
	"summary": "",
	"abstract": "A method, an apparatus and a computer program product for converting an XML encoded document into an equivalent SQL table are provided. An arbitrary XML DTD may be converted into an equivalent form by means of which individual node documents stored in the SQL table may be directly accessed. The SQL table is able to be converted back into an XML document of similar structure to the original document from which the table was derived. A set of operations which can be performed on the SQL table is also disclosed. An arbitrarily complex XML document may be broken into suitably sized portions, each of which can be managed independently as a standalone XML document without compromising the validity of the document as a whole. The management of these portions takes advantage of the speed, robustness and maturity of RDBMS systems, while maintaining the hierarchical structure inherent in all XML documents.",
	"url": null,
	"owner": "TimeBase Pty Limited",
	"publication_number": "07281206",
	"publication_date": "2007-10-09",
	"application_number": "10294384",
	"application_date": "2002-11-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for software development",
	"summary": "",
	"abstract": "This invention relates to a method and apparatus for developing software. In one embodiment, a method for facilitating the distributed development of software components includes providing a skill rating for software developers, communicating specifications for a software component to a subset of the developers, receiving submissions from the developers, scoring the submissions, and selecting one submission to be included in a software repository. In another embodiment, a method for compensating a software developer includes soliciting software developers for the submission of computer software components, receiving software components in response to the solicitation from the developers, evaluating the received software components, selecting one or more of the submissions for potential distribution to the public, and allotting the proceeds from the distribution to the developers.",
	"url": null,
	"owner": "TopCoder, Inc.",
	"publication_number": "07292990",
	"publication_date": "2007-11-06",
	"application_number": "10408402",
	"application_date": "2003-04-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for transferring thematic information over the internet",
	"summary": "",
	"abstract": "Some maps include icons which represent links to locations on the Internet which have video clips with information relating the areas where the icons are displayed. When those icons are selected, the video clips are downloaded and played.",
	"url": null,
	"owner": "Totally Global, Inc.",
	"publication_number": "07224365",
	"publication_date": "2007-05-29",
	"application_number": "09816615",
	"application_date": "2001-03-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Intelligent digital audiovisual playback system",
	"summary": "",
	"abstract": "Payment-based audiovisual playback system characterized by comprising a microprocessor unit, primarily including storage means for storing inter alia in digital form the visual and sound information to be used, and associated, through a number of interfaces, with display means for sound playback which provide a multimedia environment. The unit is controlled by a multitask operating system including a library of integrated tools and services in the storage means. The system is also associated, through an interface, with a telecommunications modem and is connectable to an audiovisual information distribution network by a telecommunications modem and telecommunications links, the telecommunications functions also being managed by the multitask operating system.",
	"url": null,
	"owner": "Touchtunes Music Corporation",
	"publication_number": "07188352",
	"publication_date": "2007-03-06",
	"application_number": "08817689",
	"application_date": "1995-10-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for obtaining emergency caller location",
	"summary": "",
	"abstract": "Methods and systems for obtaining the location of a caller during an emergency or other telephone call. Before or during a call, a phone system can obtain from one or more sources a subscriber access line identity associated with a subscriber location record that includes a subscriber access line identity attribute and a subscriber location attribute. A phone system can send a query that includes the subscriber access line identity to a subscriber location query system that returns a subscriber location record or a subscriber location to the phone system. The phone system can then display the caller location information to a phone system, an agent or operator so that emergency services can be quickly and accurately dispatched. Using similar procedure and a memory, phone systems can also determine if a subscriber phone has or is changing location. Methods for testing the emergency call capabilities of a subscriber access line.",
	"url": null,
	"owner": "TP Lab",
	"publication_number": "07272402",
	"publication_date": "2007-09-18",
	"application_number": "11182219",
	"application_date": "2005-07-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Geographic location using multiple location estimators",
	"summary": "",
	"abstract": "A location system is disclosed for commercial wireless telecommunication infrastructures. The system is an end-to-end solution having one or more location centers for outputting requested locations of commercially available handsets or mobile stations (MS) based on, e.g., CDMA, AMPS, NAMPS or TDMA communication standards, for processing both local MS location requests and more global MS location requests via, e.g., Internet communication between a distributed network of location centers. The system uses a plurality of MS locating technologies including those based on: (1) two-way TOA and TDOA; (2) pattern recognition; (3) distributed antenna provisioning; and (4) supplemental information from various types of very low cost non-infrastructure base stations for communicating via a typical commercial wireless base station infrastructure or a public telephone switching network. Accordingly, the traditional MS location difficulties, such as multipath, poor location accuracy and poor coverage are alleviated via such technologies in combination with strategies for: (a) automatically adapting and calibrating system performance according to environmental and geographical changes; (b) automatically capturing location signal data for continual enhancement of a self-maintaining historical data base retaining predictive location signal data; (c) evaluating MS locations according to both heuristics and constraints related to, e.g., terrain, MS velocity and MS path extrapolation from tracking and (d) adjusting likely MS locations adaptively and statistically so that the system becomes progressively more comprehensive and accurate. Further, the system can be modularly configured for use in location signaling environments ranging from urban, dense urban, suburban, rural, mountain to low traffic or isolated roadways. Accordingly, the system is useful for 911 emergency calls, tracking, routing, people and animal location including applications for confinement to and exclusion from certain areas.",
	"url": null,
	"owner": "TracBeam LLC",
	"publication_number": "07298327",
	"publication_date": "2007-11-20",
	"application_number": "10262413",
	"application_date": "2002-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multiple evaluators for evaluation of a purality of conditions",
	"summary": "",
	"abstract": "A system and method is disclosed for locating people or objects. In particular, a system and method for locating a wireless mobile station using a plurality of mobile station location estimators is disclosed. The system is useful for 911 emergency calls, tracking, routing, people and animal location including applications for confinement to and exclusion from certain areas. Additionally, a computational system and method for calibrating the relative performance of multiple models for various application domains is disclosed (e.g., medical, vehicle, communication diagnosis, robotics, seismic signal processing, recognition of terrestrial and/or airborne objects from satellites), wherein each such model may generate hypotheses (e.g., estimates and/or predictions) of an unknown condition. Additionally, the computational system and method may be distributed across a network such as the Internet.",
	"url": null,
	"owner": "TracBeam LLC",
	"publication_number": "07274332",
	"publication_date": "2007-09-25",
	"application_number": "09176587",
	"application_date": "1998-10-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Authentication method and system",
	"summary": "",
	"abstract": "The present invention provides a method and apparatus for the production and labeling of objects in a manner suitable for the prevention and detection of counterfeiting. Thus, the system incorporates a variety of features that make unauthorized reproduction difficult. In addition, the present invention provides an efficient means for the production of labels and verification of authenticity, whereby a recording apparatus which includes a recording medium, having anisotrophic optical domains, along with a means for transferring a portion of the recording medium to a carrier, wherein a bulk portion of the recording medium has macroscopically detectable anisotrophic optical properties and the detecting apparatus thereon.",
	"url": null,
	"owner": "Tracer Detection Technology Corp.",
	"publication_number": "07162035",
	"publication_date": "2007-01-09",
	"application_number": "09577959",
	"application_date": "2000-05-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Graphical display with integrated recent period zoom and historical period context data",
	"summary": "",
	"abstract": "A system and method are provided for displaying a data series. In one embodiment, a graphical interface is provided including at least one axis that is divided into a plurality of axis regions. Preferably, each axis region uses a different linear scale, and the plurality of axis regions forms a continuous non-linear scale. The graphical interface also displays the data series in relation to the plurality of axis regions, and the data series is plotted in relation to each axis region based on a scale resolution corresponding to each respective axis region.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07218325",
	"publication_date": "2007-05-15",
	"application_number": "10814986",
	"application_date": "2004-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for trading and displaying market information in an electronic trading environment",
	"summary": "",
	"abstract": "A system and method for trading and displaying market information along a static axis are described to ensure fast and accurate execution of trades. The static axis, whether is a straight axis or a curved one, can be oriented in any direction. Regardless of how the axis is oriented, a first region may display price levels that are arranged along the static axis. A second region, which overlaps the first region, may display one or more indicators for highlighting one of the price levels associated with the lowest offer and one of the price levels associated with the highest bid. Moreover, a third region, which overlaps the first region, may be included for initiating placement of an order to buy or an order to sell the tradeable object through an action of a user input device. Other overlapping regions may also be displayed so that additional market information may be viewed by a trader.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07228289",
	"publication_date": "2007-06-05",
	"application_number": "10376417",
	"application_date": "2003-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for the secure enrollment of devices with a clearinghouse server for internet telephony and multimedia communications",
	"summary": "",
	"abstract": "Enrolling devices with a clearinghouse server for Internet telephony and multimedia communications. Enrollment can be the process of taking a network device (such as a router, gateway, gatekeeper, etc.) and exchanging encrypted information with the clearinghouse server, so that later communications with that device can be secured. The enrollment is done with levels of security and verification that ensures the devices and clearinghouse server is legitimate.",
	"url": null,
	"owner": "TransNexus, Inc.",
	"publication_number": "07203956",
	"publication_date": "2007-04-10",
	"application_number": "09747365",
	"application_date": "2000-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Changing the personality of a device by intercepting requests for personality information",
	"summary": "",
	"abstract": "A method and system for a target to adopt the personality of a source without loading the personality information of the source onto the target is provided. The personality system extracts personality information from the source and stores the personality information on a removable storage medium. The storage medium is then connected to the target. The personality system intercepts requests of the target to retrieve personality information, which but for the interception would be serviced based on personality information of the target. When a request is intercepted, the personality system retrieves the personality information from the connected storage medium, rather than from the personality information of the target. The personality system then replies to the request with the retrieved personality information.",
	"url": null,
	"owner": "Tranxition Corporation",
	"publication_number": "07293170",
	"publication_date": "2007-11-06",
	"application_number": "11249750",
	"application_date": "2005-10-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Open platform architecture for shared resource access management",
	"summary": "",
	"abstract": "An open platform architecture and methods for shared resource access management are provided. A redirection module in kernel space receives requests for access to resources from applications in user space. The redirection module routes signals representative of the received requests to a device driver interface in user space. Components of the device driver interface include resource management modules and device drivers that correspond to available resources. The resource management modules generate queries to the device drivers regarding availability of the requested resources. Upon receipt of resource status information from the device drivers, components of the device driver interface generate schedules for granting access to the requested resources. Further, the device driver interface components control access to the resources in accordance with the generated schedules including issuing responses to the requesting applications and the device drivers of the requested resources.",
	"url": null,
	"owner": "Tranzeo Wireless Technologies, Inc.",
	"publication_number": "07207041",
	"publication_date": "2007-04-17",
	"application_number": "10184527",
	"application_date": "2002-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Printer management protocol",
	"summary": "",
	"abstract": "Network administrators can centrally manage the assignment of user's printers and network printer connections on any networked computer system, including Microsoft Windows NT Terminal Server Edition. Installation of required drivers is dynamic with no interaction with the user.",
	"url": null,
	"owner": "Tricerat, Inc.",
	"publication_number": "07227657",
	"publication_date": "2007-06-05",
	"application_number": "09693245",
	"application_date": "2000-10-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data analysis and security system",
	"summary": "",
	"abstract": "A process that collects and analyzes data from computer mainframe system events and/or messages as they occur, utilizing a System Management Facility (SMF) interface, a SubSystem Interface (SSI), an Event Notification Facility (ENF) interface, and generates alert message(s) when installation-developed rules so indicate, to provide real-time mainframe event and message monitoring, with notification to multiple targets based on either of two factors: a) configuration parameters defined by auditors and security administrators, and b) statistical analysis and correlation of historical event data (profiling).",
	"url": null,
	"owner": "Type80 Security Software, Inc.",
	"publication_number": "07251829",
	"publication_date": "2007-07-31",
	"application_number": "10280748",
	"application_date": "2002-10-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for secure alert messaging",
	"summary": "",
	"abstract": "An alert messaging system and method to securely transmit and receive alert messages via secure connection among one or more messaging servers and at least one client user station using a token-based, one-way handshake mechanism.",
	"url": null,
	"owner": "UBS Painewebber, Inc.",
	"publication_number": "07240212",
	"publication_date": "2007-07-03",
	"application_number": "10369192",
	"application_date": "2003-02-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automated process execution for project management",
	"summary": "",
	"abstract": "A computer-readable medium causes a computer to operate as a server for managing the development of software by a software development team. Stored on this computer readable medium is a computer program which includes an object module and a process execution module. The object module performs operations on a linked object structure that represents a software development project. The process execution module has one interface that interacts with the object module and has another interface that interacts over a communication network with personal computers of the team members. By this interaction, the phases of each project are started in a non-fixed, non-predictable sequence byu20141) sensing when all the tasks, that are represented by an entry set of CRITERIALIST_ITEM objects, are completed, and 2) sending a notice to begin the phase of the project which is related to the one entry set.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "07159206",
	"publication_date": "2007-01-02",
	"application_number": "10306601",
	"application_date": "2002-11-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automating document reviews in a project management system",
	"summary": "",
	"abstract": "An embodiment of the present invention is a technique to automate document review in a project management tool. The review information on a document review is stored in a repository. The document review is associated to a project in a project management system. The document review is processed using the review information. A notification of the document review is sent.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "07302674",
	"publication_date": "2007-11-27",
	"application_number": "10636923",
	"application_date": "2003-08-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Document processing system",
	"summary": "",
	"abstract": "A document processing system where system software interfaces with transport hardware is provided. A medium stores the system software which includes an API for application software. The system software further includes instructions for a track control module and an exception handler. The track control module creates an object for each read document. The object reports document completion to the application software. The application software requires that document completions be reported in the same order in which the objects were created. When a document jam occurs, the track control module identifies all documents involved in the jam, and for each document involved in the jam the track control module checks if all operations are complete and if the document entered the correct pocket, and sets a flag if both events are true. The exception handler hides the documents involved in the jam that have a set flag, but displays the others.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "07206084",
	"publication_date": "2007-04-17",
	"application_number": "10285327",
	"application_date": "2002-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic monitoring of resources using snapshots of system states",
	"summary": "",
	"abstract": "One embodiment of the invention is a method for dynamically monitoring resources. A request of a user to monitor at least one specified resource is sent to a monitor request module. Using the monitor request module, at least one monitor is created to monitor the specified resource.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "07203868",
	"publication_date": "2007-04-10",
	"application_number": "10723912",
	"application_date": "2003-11-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Image quality assurance systems and methodologies for improving the identification of and access speed to image quality suspects in documents",
	"summary": "",
	"abstract": "An image quality assurance method for identifying image defects in a plurality of imaged documents, where each imaged document includes at least one image rendition. The image renditions are analyzed to provide selected image metrics, the latter of which are compared against preselected image quality metric threshold values. An image quality flag is generated for any image rendition if at least one of the selected image metrics for that image rendition does not successfully compare against the preselected image quality metric threshold values. A record entry is created in an image quality flag file for those documents having at least one flagged image rendition, the record entry including information about the selected image metrics of the at least one flagged image rendition for that imaged document. Image defects in a plurality of imaged documents can be identified by examining the record entries in the image quality flag file.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "07167580",
	"publication_date": "2007-01-23",
	"application_number": "10837351",
	"application_date": "2003-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for predictably feeding and consuming RAM memory to recognize over-consumption of resources",
	"summary": "",
	"abstract": "The present invention is a method for providing the consumption of a set amount of memory within a set amount of time in a server network in order to properly display the capabilities of running multiple applications proprietary suite of tools with the intention of being able to predictably trigger recovery events, and to discover when an application is u201cover-consumingu201d memory.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "07231541",
	"publication_date": "2007-06-12",
	"application_number": "10779984",
	"application_date": "2004-02-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for implementing logic control in programmable controllers in distributed control systems",
	"summary": "",
	"abstract": "The present invention provides a system and method for implementing logic control in programmable controllers in distributed control systems using a wired or wireless network. A software application is used to define the configuration of the network. Based on the network configuration, a compiler engine automatically assigns each statement of the control program to at least one programmable logic controller in the network. Each statement is then transmitted over a data transmission medium to the programmable logic controller assigned to the statement.",
	"url": null,
	"owner": "Unitronics (1989) (Ru2033G) Ltd.",
	"publication_number": "07225037",
	"publication_date": "2007-05-29",
	"application_number": "10932889",
	"application_date": "2004-09-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Rapid mobility network emulator method and system",
	"summary": "",
	"abstract": "A system for emulating mobile network communications can include one or more wireless nodes configured to variably adjust signal reception sensitivity and signal transmission strength; at least one mobile node configured to wirelessly communicate with selected ones of the wireless nodes; and a network emulator communicatively linked to each wireless node. The network emulator can replicate attributes of a wired communications network. The system also can include a controller communicatively linked with the wireless nodes and configured to control signal reception sensitivity and signal transmission strength of each said wireless node, as well as a home agent configured to interact with at least one mobile node via selected ones of the wireless nodes.",
	"url": null,
	"owner": "University of Florida Research Foundation, Inc.",
	"publication_number": "07231330",
	"publication_date": "2007-06-12",
	"application_number": "10909588",
	"application_date": "2004-08-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Management and control of telecommunication services delivery",
	"summary": "",
	"abstract": "The present invention relates to a telecommunications service provision manager that is configured to allow access to a plurality of telecommunications services to determine the location of a service and control execution of that service.",
	"url": null,
	"owner": "University of Strathclyde",
	"publication_number": "07254387",
	"publication_date": "2007-08-07",
	"application_number": "10852306",
	"application_date": "2004-05-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Programmable 3D graphics pipeline for multimedia applications",
	"summary": "",
	"abstract": "A programmable graphics pipeline and method for processing multiple partitioned multimedia data, such as graphics data, image data, video data, or audio data. A preferred embodiment of the programmable graphics pipeline includes an instruction cache, a register file, and a vector functional unit that perform partitioned instructions. In addition, an enhanced rasterization unit is used to generate inverse-mapped source coordinates in addition to destination output coordinates for graphics and other media processing. An enhanced texture address unit generates corresponding memory addresses of source texture data for graphics processing and source media data for media processing. Data retrieved from memory are stored in an enhanced texture cache for use by the vector functional unit. A vector output unit includes a blending unit for graphics data and an output buffer for wide media data.",
	"url": null,
	"owner": "University of Washington",
	"publication_number": "07158141",
	"publication_date": "2007-01-02",
	"application_number": "10053431",
	"application_date": "2002-01-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enhanced communication platform and related communication method using the platform",
	"summary": "",
	"abstract": "A method of providing pre-authorized communication services and/or transactions via a plurality of networks, including accepting and processing a request from a user to provide at least one of a communication service, a transaction and user account information via a plurality of networks of different types, verifying that the user is authorized to receive the at least one of the communication service, the transaction, and the user account information, and that an account associated with the user has a sufficient amount currently available for payment of the at least one of the communication service and the transaction and charging, in real time, an authorized account associated with the user as the at least one of the communication service and the transaction is provided.",
	"url": null,
	"owner": "Upaid Systems, Ltd",
	"publication_number": "07308087",
	"publication_date": "2007-12-11",
	"application_number": "10684396",
	"application_date": "2003-10-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and application programming interface for assigning multiple network addresses",
	"summary": "",
	"abstract": "A method and application programming interface for using multiple network addresses on a common physical layer. The host protocol stack supports multiple Internet Protocol interfaces. When a process makes a function call to create a new socket, a new IP address is associated with the socket. Each socket is then bound to an IP address that is distinct from the IP addresses bound to other sockets. This is in contrast to conventional sockets that are bound to a common IP address. In this manner, each process may be associated with a unique IP address. Such a configuration may useful in Internet telephony where each call process receives a unique private IP address in a virtual private network.",
	"url": null,
	"owner": "UTStarcom, Inc.",
	"publication_number": "07171492",
	"publication_date": "2007-01-30",
	"application_number": "09511735",
	"application_date": "2000-02-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Global electronic trading system",
	"summary": "",
	"abstract": "Methods, systems, and computer readable media for facilitating trading two items (L,Q) from the group of items comprising commodities and financial instruments. At least two agents () want to trade the items (L,Q). There is a trading channel () between the two agents () allowing for the execution of trades. There are flow (trading) limits on the items being traded. A central computer () is coupled to the two agents (). Said computer () is adapted to convey to each agent () current tradable bid and offered prices and sizes subject to the agent's () trading limits.",
	"url": null,
	"owner": "Valaquenta Intellectual Properties Limited",
	"publication_number": "07184984",
	"publication_date": "2007-02-27",
	"application_number": "10005609",
	"application_date": "2001-11-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for emulating a check sorter",
	"summary": "",
	"abstract": "A method for communicating between a check processing system and a non-compatible check sorter is provided that includes accessing a MICR buffer for the check sorter. The MICR buffer comprises MICR data retrieved from a check. A process buffer is generated based on the MICR buffer. The process buffer is standardized for a plurality of disparate types of check sorters. A plurality of feature instructions are received for the check based on the process buffer. The feature instructions are communicated to the check sorter for processing of the check.",
	"url": null,
	"owner": "VECTORsgi, Inc.",
	"publication_number": "07177456",
	"publication_date": "2007-02-13",
	"application_number": "11296663",
	"application_date": "2005-12-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for online communication between a check sorter and a check processing system",
	"summary": "",
	"abstract": "A system for handling checks is provided that includes a sorter operable to retrieve MICR data from a plurality of checks. An emulator is coupled to the sorter. The emulator is operable to access the MICR data, to generate a process buffer based on the MICR data, and to generate a plurality of feature instructions for each check based on the process buffer. A communication engine is coupled between the emulator and a check processing system. The communication engine is operable to communicate between the emulator and the check processing system in real-time. The check processing system is operable to receive the process buffer from the emulator through the communication engine. The emulator is further operable to communicate the feature instructions to the sorter. The sorter is further operable to process the checks based on the feature instructions.",
	"url": null,
	"owner": "VECTORsgi, Inc.",
	"publication_number": "07178723",
	"publication_date": "2007-02-20",
	"application_number": "11149772",
	"application_date": "2005-06-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Broadband network system configured to transport audio or video at the transport layer, and associated method",
	"summary": "",
	"abstract": "A data distribution center associated with a broadband network system wherein the first broadband network system further includes at least one broadband interface unit (BIntU) transceiver comprising a receiver portion and a transmitter portion. The receiver portion is configured to receive user defined protocol with value-added (UDPVA) packet from the BIntU transceiver. The transmitter portion is configured to transmit return packets that is triggered in response to the UDPVA packets, wherein the data distribution center indicates to the BIntU transceiver that the UDPVA packets forwarded by the BIntU transceiver to the data distribution center are being received by the data distribution center or a second BIntU transceiver.",
	"url": null,
	"owner": "Velcero Broadband Applications, LLC",
	"publication_number": "07171485",
	"publication_date": "2007-01-30",
	"application_number": "09981301",
	"application_date": "2001-10-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Delay management system",
	"summary": "",
	"abstract": "A delay management system in a computer system includes a delay manager and a first storage element that stores a delay time. The delay manager is configured to receive a series of delay values and respond to each delay value in the series of delay values by providing a corresponding delay time value. The delay time is updated to the corresponding delay time value if the corresponding delay time value is greater than the delay time.",
	"url": null,
	"owner": "Verigy Pte. Ltd.",
	"publication_number": "07231573",
	"publication_date": "2007-06-12",
	"application_number": "10327386",
	"application_date": "2002-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Adaptive implementation of requested capabilities for a logical volume",
	"summary": "",
	"abstract": "A method, system, and computer program product for adaptively implementing capabilities of a logical volume. If a particular capability is an inherent attribute of an existing storage device, the existing storage device is chosen to implement the volume. If the particular capability is not an inherent attribute of an existing storage device, one or more storage devices are selected and configured to provide the capability. If a capacity is requested for the logical volume and a storage device provides only a portion of the capacity, multiple storage devices having the capability are combined to provide the requested capability and capacity.",
	"url": null,
	"owner": "Veritas Operating Corporation",
	"publication_number": "07162575",
	"publication_date": "2007-01-09",
	"application_number": "10325418",
	"application_date": "2002-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Balancing most frequently used file system clusters across a plurality of disks",
	"summary": "",
	"abstract": "A system and method for balancing input/output load for a plurality of storage devices, such as a plurality of disks. According to one embodiment of the method, accesses (e.g., read and/or write accesses) to chunks located on the storage devices may be monitored, where each chunk comprises one or more file system clusters. Data indicating a number of accesses to each chunk may be stored, and a list of most frequently used chunks may be determined based on the data. The most frequently used chunks may then be balanced across the plurality of storage devices.",
	"url": null,
	"owner": "Veritas Operating Corporation",
	"publication_number": "07185163",
	"publication_date": "2007-02-27",
	"application_number": "10653751",
	"application_date": "2003-09-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Development of a detailed logical volume configuration from high-level user requirements",
	"summary": "",
	"abstract": "A method, system, language, and computer program product to enable a user to provide a high-level specification of storage requirements without having detailed knowledge of the underlying vendor-specific APIs and command line utilities for each possible storage device used to meet the storage requirements. The user does not specify how to implement the storage requirements. The system implements the high-level specification in hardware and/or software without further direction from the user.",
	"url": null,
	"owner": "Veritas Operating Corporation",
	"publication_number": "07159093",
	"publication_date": "2007-01-02",
	"application_number": "10327380",
	"application_date": "2002-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Device driver processing for automated system restores",
	"summary": "",
	"abstract": "In one embodiment, a computer accessible medium comprises a plurality of instructions which, when executed, parse at least a section of an input file to identify: (i) one or more driver information files, if at least one driver information file is listed in the section, and (ii) one or more first device drivers, if at least one device driver is listed in the section. If at least one driver information file is listed in the section, the plurality of instructions parse each of the one or more driver information files to identify: (i) one or more second device drivers, if at least one device driver is included in the driver information file, and (ii) one or more miniport drivers, if at least one miniport driver is included in the driver information file. The plurality of instructions select a selected device driver from the first device drivers, the second device drivers, and the miniport drivers. The selected device driver is to be listed in an output file that is used in a text phase of an operating system installation on a computer system that includes the hardware device. In another embodiment, a computer accessible medium comprises a plurality of instructions which, when executed and if a computer system comprises at least one virtual hardware device, identify the virtual hardware device and a corresponding physical hardware device. The plurality of instructions also capture a device driver associated with the physical hardware device for use as the device driver in an install of an operating system on a second computer system having a same type of physical hardware device. Corresponding computer systems and methods are also described.",
	"url": null,
	"owner": "Veritas Operating Corporation",
	"publication_number": "07293272",
	"publication_date": "2007-11-06",
	"application_number": "10788120",
	"application_date": "2004-02-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "File system and methods for performing file create and open operations with efficient storage allocation",
	"summary": "",
	"abstract": "A client computer system of a cluster may send a request to create a file in a cluster file system. A server may create a file in response to the information and allocate space in a storage to the file. If a request to write to the file is received within a predetermined amount of time, the write may complete without requiring that additional operations be performed to allocate space to the file. If a write to the file is not received within the predetermined amount of time, the space allocated to the file when it was created may be de-allocated. The file system may additionally or alternatively perform a method for opening a file while delaying an associated truncation of space allocated to the file. If a request to write to the file is received within a predetermined amount of time, the write may be performed in the space already allocated to the file.",
	"url": null,
	"owner": "VERITAS Operating Corporation",
	"publication_number": "07188128",
	"publication_date": "2007-03-06",
	"application_number": "10735088",
	"application_date": "2003-12-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "IP virtualization",
	"summary": "",
	"abstract": "A method, system and computer program product for creating a virtual network identity, by using a virtual IP address and hostname, in a software application for the express purpose of making the application node-independent (where node is defined as a particular machine running a given operating system at a specific moment in time) is disclosed. By virtualizing the IP address and hostname, a running software application can be moved from one node to another within a computer network, allowing for process migration and the reallocation of system resources.",
	"url": null,
	"owner": "VERITAS Operating Corporation",
	"publication_number": "07210147",
	"publication_date": "2007-04-24",
	"application_number": "09680559",
	"application_date": "2000-10-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems to access storage objects",
	"summary": "",
	"abstract": "Methods and systems to access storage objects are provided. A reference to a storage object is used to determine a storage stack level associated with the reference. If the storage stack level is not the lowest level of a storage stack, then the reference is translated to a next stack level reference and passed through to a next stack level associated with the stack. References are translated and passed through iteratively until the lowest level of the stack is reached, wherein an absolute reference to the storage object is obtained and propagated back to an original referencing module, thereby providing access to the storage object.",
	"url": null,
	"owner": "Veritas Operating Corporation",
	"publication_number": "07165057",
	"publication_date": "2007-01-16",
	"application_number": "09997350",
	"application_date": "2001-11-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems to backup data",
	"summary": "",
	"abstract": "Methods and systems to backup data are provided. A first computing device identifies data to backup and stabilizes a frozen image of that data. Next, the frozen image is decomposed into physical storage addresses housing the data. The decomposed storage addresses are sent to a second computing device. The second computing device uses the storage addresses along with existing operating system I/O operations to backup the data to computer readable media.",
	"url": null,
	"owner": "VERITAS Operating Corporation",
	"publication_number": "07272619",
	"publication_date": "2007-09-18",
	"application_number": "10970541",
	"application_date": "2004-10-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Storage management system",
	"summary": "",
	"abstract": "A storage management system may provide virtual storage devices for use by an operating system. The storage management system may map files representing the virtual storage devices to a plurality of volumes to be stored on physical storage devices. In various embodiments, the storage management system may include storage management components which manage the files representing the virtual storage devices. In one implementation, the storage management system may support a set of storage commands for the virtual storage devices, including standard commands used by the operating system to communicate with storage devices, and additional commands for communicating with the storage management components. The storage management system may be configured to schedule various applications/operating systems for execution on multiple processing hardware, and to present a consistent view of storage for a given application/operating system, independent of which of the multiple processing hardware on which the application/operation system is executing.",
	"url": null,
	"owner": "VERITAS Operating Corporation",
	"publication_number": "07266637",
	"publication_date": "2007-09-04",
	"application_number": "10821559",
	"application_date": "2004-04-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for detecting and storing file content access information within a file system",
	"summary": "",
	"abstract": "In one embodiment, a system may include a storage device configured to provide a storage space for data storage and a file system configured to map files to the storage space for storage and to manage application accesses to the storage device. The file system may be configured to determine a signature of a first file stored on the storage device dependent upon at least a portion of the first file, detect an operation to access content of the first file, where the operation is generated by an application distinct from the file system, and, subsequent to detecting the operation, store a record of the operation associated with the first file, where the record includes a signature corresponding to the first file, information indicating the operation type and information identifying the application.",
	"url": null,
	"owner": "Veritas Operating Corporation",
	"publication_number": "07272606",
	"publication_date": "2007-09-18",
	"application_number": "10723729",
	"application_date": "2003-11-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for detecting file content similarity within a file system",
	"summary": "",
	"abstract": "A system and method for detecting file content similarity within a file system. The system may include a storage device configured to store a plurality of files and a file system configured to manage access to the storage device. The file system may be configured to compute a compressed size of at least a portion of a given file, and to store an indication of the compressed size in a named stream corresponding to the given file. In one specific implementation of the system, the file system may be further configured to determine a value of a file harmony metric from the compressed size of the concatenation of a first and second file and the compressed sizes of the first and second files, where the compressed sizes of the first and second files may be stored in a corresponding one of a plurality of respective named streams.",
	"url": null,
	"owner": "Veritas Operating Corporation",
	"publication_number": "07188118",
	"publication_date": "2007-03-06",
	"application_number": "10723698",
	"application_date": "2003-11-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for providing communication services for hearing-impaired parties",
	"summary": "",
	"abstract": "A method for providing communication services for the hearing-impaired includes establishing a communication link between a hearing-impaired party and a communication assistant. The communication link may be a full duplex link. The communication assistant may also establish a voice link with a hearing party. The hearing-impaired party and the hearing party may then communicate, with the communication assistant acting as a conduit for the conversation. For example, the hearing party may send a voice message to the communication assistant. The communication assistant may then convert the voice message into a text message and transmit the text message to the hearing-impaired party. The communication assistant may also convert text messages received from the hearing-impaired party into voice messages for the hearing party.",
	"url": null,
	"owner": "Verizon Business Global LLC",
	"publication_number": "07236574",
	"publication_date": "2007-06-26",
	"application_number": "10798348",
	"application_date": "2004-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for providing network interactive voice response with intelligent call routing integration",
	"summary": "",
	"abstract": "An approach for providing interactive voice response services is disclosed. A voice response platform receives a call and generates an automated menu in response. The menu, according to one embodiment, includes an option to transfer the call to an available agent and in response thereto the voice response platform transmits a request for the available agent to an intelligent call router (ICR) over a communications network. The intelligent call router receives the request for the available agent and transmits identification information for the available agent to the voice response platform. The voice response platform then transfers the call to the available agent based on the identification information for the available agent.",
	"url": null,
	"owner": "Verizon Business Global LLC",
	"publication_number": "07221753",
	"publication_date": "2007-05-22",
	"application_number": "10378713",
	"application_date": "2003-03-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for supporting data communication between program components",
	"summary": "",
	"abstract": "An embodiment of the invention includes a method and apparatus for enabling application components to communicate through connection points. Embodiments of the invention include a communication manger allowing application components that implement connection points and listeners to communicate without having prior knowledge of each other's implementation. Application components implement connection point containers that register with a communication manager. Application components may broadcast events and messages to other components and request to be notified when an application component implementing a given type of connection point registers with the communication manager. Other embodiments of the invention implement proxy classes, which allows for automatic generation of connection point classes.",
	"url": null,
	"owner": "Versata Development Group, Inc.",
	"publication_number": "07234147",
	"publication_date": "2007-06-19",
	"application_number": "10013850",
	"application_date": "2001-12-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for enabling secure access to services in a computer network",
	"summary": "",
	"abstract": "A global server includes a communications engine for establishing a communications link with a client; security means coupled to the communications engine for determining client privileges; a servlet host engine coupled to the security means for providing to the client, based on the client privileges, an applet which enables I/O with a secured service; and a keysafe for storing a key which enables access to the secured service. The global server may be coupled to multiple sites, wherein each site provides multiple services. Each site may be protected by a firewall. Accordingly, the global server stores the keys for enabling communication via the firewalls with the services.",
	"url": null,
	"owner": "Visto Corporation",
	"publication_number": "07287271",
	"publication_date": "2007-10-23",
	"application_number": "08841950",
	"application_date": "1997-04-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for transmitting workspace elements across a network",
	"summary": "",
	"abstract": "A system transmits new workspace elements or new workspace element changes at a first memory store via an electronic network to a second memory store. The system includes a first memory store for storing workspace elements; a second memory store coupled via an electronic network to the first memory store for storing workspace element copies; an interface for receiving new workspace elements at the first memory store; and a general synchronization module for electronically transmitting copies of the new workspace elements via the electronic network to the second memory store.",
	"url": null,
	"owner": "Visto Corporation",
	"publication_number": "07225231",
	"publication_date": "2007-05-29",
	"application_number": "09921228",
	"application_date": "2001-08-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for monitoring telephone status",
	"summary": "",
	"abstract": "The monitor is for monitoring the status of a first client telephone, and for sending this status information via a central server to an authorized second client telephone. The central server stores a database of registered client telephones and corresponding client telephones that the client may monitor. A user of a registered client telephone monitors in real time the telephone status of registered friends, family, or co-workers that have agreed to be monitored by the user.",
	"url": null,
	"owner": "Walker Digital, LLC",
	"publication_number": "07260201",
	"publication_date": "2007-08-21",
	"application_number": "11338151",
	"application_date": "2006-01-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for rebrokering orders in a trading system",
	"summary": "",
	"abstract": "Systems and methods are described herein for supporting the trading of bonds in a computerized system using broker dealers as intermediaries. Broker dealers receive orders relating to particular transactions and have the option to accept the order by submitting a matching counter order, or to rebroker the order with the same or modified terms to a number of other investors or additional broker dealers. The additional broker dealers have similar options, thus providing a system wherein orders can be quickly proliferated to a large number of parties. This order proliferation can be fully or partially automated through the use of predefined rules stored in a database which dictate for each broker dealer whether, to whom and under what terms to rebroker orders. When an order is received, the system processes all such rules to output a set of orders which are then communicated to the corresponding parties.",
	"url": null,
	"owner": "Wall Corporation",
	"publication_number": "07231363",
	"publication_date": "2007-06-12",
	"application_number": "09706678",
	"application_date": "2000-11-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for determining web application vulnerabilities",
	"summary": "",
	"abstract": "A method for detecting security vulnerabilities in a web application includes analyzing the client requests and server responses resulting therefrom in order to discover pre-defined elements of the application's interface with external clients and the attributes of these elements. The client requests are then mutated based on a pre-defined set of mutation rules to thereby generate exploits unique to the application. The web application is attacked using the exploits and the results of the attack are evaluated for anomalous application activity.",
	"url": null,
	"owner": "Watchfire Corporation",
	"publication_number": "07237265",
	"publication_date": "2007-06-26",
	"application_number": "10393497",
	"application_date": "2003-03-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for enabling a client application to operate offline from a server",
	"summary": "",
	"abstract": "One disadvantage of the client/server computing model is the client's strong dependence on the server. A system and method are disclosed for enabling a client application to operate offline from the server. For each request, the client application registers a request entry with a scheduler, informing the scheduler of an associated application callback. The scheduler then invokes this application callback when a network connection is available for use, and the client application then sends the request to the server. Error recovery methods are described for requests that are sent to the server but for which no reply is received, and for other error scenarios. Some applications may maintain client-side caches to lookup information independently of the server. Synchronization entries may be registered with the scheduler for keeping the client-side cache in sync with the server-side master data.",
	"url": null,
	"owner": "WebMD Health",
	"publication_number": "07305475",
	"publication_date": "2007-12-04",
	"application_number": "10666818",
	"application_date": "2003-09-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and computer program products for providing network quality of service for World Wide Web applications",
	"summary": "",
	"abstract": "Methods and computer program products are disclosed for providing Qos for Web applications via an internet service application programming interface (u201cISAPIu201d) filter running on an internet information server, wherein the ISAPI filter uses a traffic control application programming interface to manage bandwidth for individual HTTP requests. Responses to HTTP requests can be prioritized based on policies defined by the Web application developer, wherein policy decisions may be made based on many different parameters, such as, for example, the IP address of the Web browser making the request, the type of browser being used, HTTP u201ccookies,u201d the uniform resource locator being requested, an authenticated user ID, or any other information that is exposed from the internet information server through server variables. The present invention accomplishes this with no modifications to the internet information server, and with very minimal changes to the Web application.",
	"url": null,
	"owner": "WebTV Networks, Inc.",
	"publication_number": "07188188",
	"publication_date": "2007-03-06",
	"application_number": "09570329",
	"application_date": "2000-05-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Providing streaming media data",
	"summary": "",
	"abstract": "A system for servicing streaming media requests. The system includes stream director nodes and intelligent stream engine nodes, such as permanent storage devices with network interfaces. The stream director node receives a streaming media request and enqueues the request until all resources on a path from the stream engine node having the media object being requested to the user/client system have been reserved. Once reserved, the enqueued request is then serviced by requesting the stream object from the stream engine node, which then transfers the requested stream object between the stream engine node and the user/client system over the prepared path without involving the stream director node. Upon completion, the prepared path is torn down. In one embodiment the prepared path is a Label Switched Path. A provision is made for balancing the load among the stream engine nodes by duplicating stream objects on other stream engine nodes.",
	"url": null,
	"owner": "Western Digital Ventures, Inc.",
	"publication_number": "07274659",
	"publication_date": "2007-09-25",
	"application_number": "10176498",
	"application_date": "2002-06-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Protection domains for a computer operating system",
	"summary": "",
	"abstract": "A protection domain system is implemented to provide protection for applications executing in a computing environment. Protection domains are allocated system resources and may contain executing tasks. The protection domain system may allow tasks to access resources in other protection domains to which attachments have been made. Attachment is transparent to the software developer. The protection domain system provides flexibility in implementing operating system services and defining protection hierarchies.",
	"url": null,
	"owner": "Wind River Systems, Inc.",
	"publication_number": "07213247",
	"publication_date": "2007-05-01",
	"application_number": "09480309",
	"application_date": "2000-01-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for recording voice and the data entered by a call center agent and retrieval of these communication streams for analysis or correction",
	"summary": "",
	"abstract": "The invention provides for a communications recording and analysis system including means for recording one or more communication streams, means for identifying the recorded stream, means for retrieving the content of said recordings by identifier tags, and wherein additional real-time information is inferred from analysis, in real-time or later, of keystrokes entered at a computer/terminal handling the interaction, and/or computer mouse actions, and/or internet traffic emanating from, or terminating at, any one or more of a number of computers/terminals handling the interaction, and/or the words and/or prosody spoken during the interaction is recorded. Furthermore graphical display means are provided such that the presentation of call flow recording is in the form of a direct graph showing the progress of the calls through the various states and transitions.",
	"url": null,
	"owner": "Witness Systems, Inc.",
	"publication_number": "07203285",
	"publication_date": "2007-04-10",
	"application_number": "10181103",
	"application_date": "2001-01-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Document creation system and method using knowledge base, precedence, and integrated rules",
	"summary": "",
	"abstract": "A data structure generation system. The system includes a knowledge base configured to store data structure components as objects in an object-relational hierarchy. Each object is configured to have a precedence, to include one or more rules, and to include content. The knowledge base may be coupled to a data structure assembly facility configured to retrieve one or more cross-referenced data structure components from a database. The one or more data structure components are configured to have a precedence level, and may be processed in a processor to generate a tree having a root node. The tree may be processed beginning at the root node, and objects of low precedence may be overidden with objects of high precedence.",
	"url": null,
	"owner": "Wolters Kluwer Financial Services, Inc.",
	"publication_number": "07260584",
	"publication_date": "2007-08-21",
	"application_number": "10814548",
	"application_date": "2004-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computing device deployment using mass storage device",
	"summary": "",
	"abstract": "Computing device deployment and configuration using a mass storage device is provided. A generic computing device is provided to a customer or end user. A mass storage device is used to distribute configuration information to the generic computing device. The configuration information includes customer-specified or ordered software applications or other features. The configuration information can also include updates to the computing device system software. The customer or end user couples the mass storage device to the generic computing device in order to load the configuration information into the computing device. After the configuration information is loaded, the computing device is configured for the customer's use. Further features, such as creating customized images, are also provided.",
	"url": null,
	"owner": "Wyse Technology, Inc.",
	"publication_number": "07237103",
	"publication_date": "2007-06-26",
	"application_number": "10779647",
	"application_date": "2004-02-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Encrypted e-mail reader and responder system, method, and computer program product",
	"summary": "",
	"abstract": "A system, method, and computer program product for providing a encrypted email reader and responder is described. The method of distributing and initializing an encrypted electronic mail (email) software application for exchanging secure email, can include: obtaining by a first user a license for an email client software application program having public/private encryption; requesting by the first user that a second user download a reader/responder software application program in order to exchange encrypted email between the first user and the second user; downloading and installing the reader/responder software application program by the second user; sending an email by the second user to the first user including embedding an unencrypted public key by using a send key function of the reader/responder software application program; receiving the email from the second user by the first user, wherein the unencrypted public key is embedded in the email; responding by the first user by sending a second email to the first user, where the reader/responder software application program encrypts a message of the second email into an encrypted message using the unencrypted public key of the second user; receiving the second email by the second user with the encrypted message as an attachment from the first user into a third party email software application program, wherein the third party email software application program is different from the reader/responder software application program and the email client software application program; and opening by the second user the attachment to execute the reader/responder software application program operative to allow a user without the email client software to read and respond to encrypted email created and sent from a user having the email client software.",
	"url": null,
	"owner": "Xante Corporation",
	"publication_number": "07174368",
	"publication_date": "2007-02-06",
	"application_number": "10103713",
	"application_date": "2002-03-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and methods for providing secured communication",
	"summary": "",
	"abstract": "Authentication information is generated for a group where members within a group are able to communicate with each other, but a non-members is not able to participate in that communication. The authentication information provides the determination of whether the member belongs to the group.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07185199",
	"publication_date": "2007-02-27",
	"application_number": "10231194",
	"application_date": "2002-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Document image decoding systems and methods using modified stack algorithm",
	"summary": "",
	"abstract": "Methods and systems for document image decoding incorporating a Stack algorithm improve document image decoding. The application of the Stack algorithm is iterated to improved decoding. A provisional weight is determined for a partial path to reduce template matching. In addition, semantically equivalent hypotheses are identified to reduce redundant hypotheses.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07289668",
	"publication_date": "2007-10-30",
	"application_number": "10215091",
	"application_date": "2002-08-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Document image decoding systems and methods using modified stack algorithm",
	"summary": "",
	"abstract": "Methods and systems for document image decoding incorporating a Stack algorithm improve document image decoding. The application of the Stack algorithm is iterated to improve decoding. A provisional weight is determined for a partial path to reduce template matching. In addition, semantically equivalent hypotheses are identified to reduce redundant hypotheses.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07167588",
	"publication_date": "2007-01-23",
	"application_number": "10215041",
	"application_date": "2002-08-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for executing batch jobs by delegating work to independent service providers",
	"summary": "",
	"abstract": "A job management apparatus for use in a batch job execution system is provided. The job management apparatus includes a client communications part which receives a batch job from a client, an extracting part which extracts a task from the batch job, and an assigning part which receives signals from the service providers and delegates a task to a service provider who is capable of performing such task. The job management apparatus is in communication with a job database which stores the batch job after it is received from the client. At least one provider manager is in communication with the job management apparatus and in communication with the service providers which monitors the tasks as they are being performed on a service provider and provides status information about the task to the job management apparatus. The service providers are configured to output signals to the job management apparatus requesting work.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07197749",
	"publication_date": "2007-03-27",
	"application_number": "09740076",
	"application_date": "2000-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for reducing distortion in scanned images",
	"summary": "",
	"abstract": "Methods and systems for dewarping images allow a user to reduce distortion in scanned images. A scanned image is processed using an optics model and an illumination model, and resampled to reduce distortion. The dewarping may be improved through iterative operations where a model parameter is varied. An optimal image is obtained which corresponds to a maximum metric as a measure of the quality of a resampled image.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07170644",
	"publication_date": "2007-01-30",
	"application_number": "10231220",
	"application_date": "2002-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for determining distribution mean level without histogram measurement",
	"summary": "",
	"abstract": "Techniques for estimating an average background value and an average foreground value of an image data formed by a plurality of pixels by selecting a first plurality of pixels forming a first calculation window from the plurality of pixels, determining at least first, second and third statistical moments for the first plurality of pixels, and determining at least one of average background value and average foreground value using the at least first, second and third statistical moments determined for the first plurality of pixels.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07292365",
	"publication_date": "2007-11-06",
	"application_number": "10342358",
	"application_date": "2003-01-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods for automated uniformity assessment and modification of image non-uniformities",
	"summary": "",
	"abstract": "Methods for automated uniformity assessment and modification of image non-uniformities using an image measurement device capable of determining image reflectance and/or transmitter as a function of position, such as a spectrophotometer, a calorimeter, and/or a densitometer. One or more of these devices scan an image on a substrate, such as a sheet, thereby generating data representing image characteristics, such as, for example, image non-uniformity. The sheet may contain a reference/test pattern including one column, strip or patch intended to have a uniform density. This data generated by the device after the scan of the substrate is analyzed with signal processing algorithms for image characteristics assessment, including image spatial uniformity and compared to reference image characteristics including image spatial uniformity. An image modification profile may be generated to be applied to a marking system to thereby alter subsequent image data and improve image spatial uniformity of the marking system.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07259857",
	"publication_date": "2007-08-21",
	"application_number": "10756396",
	"application_date": "2004-01-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for arranging, manipulating and displaying objects in a graphical user interface",
	"summary": "",
	"abstract": "A Graphical User Interface (u201cGUIu201d) that provides a user with the ability to manipulate display objects in a non-uniform manner on a display surface is provided. For example, a user can manipulate an object so that it appears, torn, bent, folded, angled, etc. Additionally, a method and system for digitally attaching display objects to a display surface is described. The attachments include digital staples, digital push-pins, digital tape, etc. In still another aspect of the present invention a technique for transmitting and updating the display of non-uniform objects is described.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07249327",
	"publication_date": "2007-07-24",
	"application_number": "10104850",
	"application_date": "2002-03-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for authoritativeness grading, estimation and sorting of documents in large heterogeneous document collections",
	"summary": "",
	"abstract": "Systems and methods for determining the authoritativeness of a document based on textual, non-topical cues. The authoritativeness of a document is determined by evaluating a set of document content features contained within each document to determine a set of document content feature values, processing the set of document content feature values through a trained document textual authority model, and determining a textual authoritativeness value and/or textual authority class for each document evaluated using the predictive models included in the trained document textual authority model. Estimates of a document's textual authoritativeness value and/or textual authority class can be used to re-rank documents previously retrieved by a search, to expand and improve document query searches, to provide a more complete and robust determination of a document's authoritativeness, and to improve the aggregation of rank-ordered lists with numerically-ordered lists.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07188117",
	"publication_date": "2007-03-06",
	"application_number": "10232709",
	"application_date": "2002-09-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for authoritativeness grading, estimation and sorting of documents in large heterogeneous document collections",
	"summary": "",
	"abstract": "Systems and methods for determining the authoritativeness of a document based on textual, non-topical cues. The authoritativeness of a document is determined by evaluating a set of document content features contained within each document to determine a set of document content feature values, processing the set of document content feature values through a trained document textual authority model, and determining a textual authoritativeness value and/or textual authority class for each document evaluated using the predictive models included in the trained document textual authority model. Estimates of a document's textual authoritativeness value and/or textual authority class can be used to re-rank documents previously retrieved by a search, to expand and improve document query searches, to provide a more complete and robust determination of a document's authoritativeness, and to improve the aggregation of rank-ordered lists with numerically-ordered lists.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07167871",
	"publication_date": "2007-01-23",
	"application_number": "10232714",
	"application_date": "2002-09-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for compensating for print defects",
	"summary": "",
	"abstract": "Diminished intensity defects occur in electrostatic printing between image regions having grey levels, i.e., different electrostatic potential and toner densities. Such defects occur when higher density regions u201cstealu201d toner from lower density regions. The system and methods according to this invention compensate for these defects by modifying the input image data. The input image data in lighter regions that precede or occur near a light-to-dark transition to a dark region are raised above the input image values. Thus, when printed, the printed image intensity values in such regions are higher than the corresponding image intensity values. As a result, when the higher density regions steal the extra toner provided due to the raised values, the gray level of the printed image corresponds to the desired gray level. The magnitude of these defects is periodically measured with a calibration pattern to generate and/or update compensation factors used in the compensation process.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07295349",
	"publication_date": "2007-11-13",
	"application_number": "10458427",
	"application_date": "2003-06-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for constrained anisotropic diffusion routing within an ad hoc network",
	"summary": "",
	"abstract": "This invention describes methods and systems for tasking nodes in a distributed ad hoc network. A node is selected to participate in a data gathering or a routing task based on its potential contribution to information gain and the cost associated with performing the task such as communication bandwidth usage. This invention describes methods and systems for implementing various selection strategies at each node, using local knowledge about the network. For resource-limited sensor networks, the information-driven data gathering and routing strategies significantly improve the scalability and quality of sensing systems, while minimizing resource cost.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07194463",
	"publication_date": "2007-03-20",
	"application_number": "10446115",
	"application_date": "2003-05-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for designing zero-shift supercell halftone screens",
	"summary": "",
	"abstract": "Conventional design tools were not developed for designing square zero-shift supercells. Conventionally, solutions that enable square zero-shift supercells were found by trial and error or by exhaustive analysis. According to a first design criterion of this invention, a non-square supercell in a first frame of reference has a diagonal that is equal in length to the diagonal of a square supercell in a second frame of reference rotated at a desired screen angle to the first frame of reference. The screen angle is a function of the lengths of the sides of the non-square supercell in the first frame of reference. According to a second design criterion, if the area of the corresponding square supercell in the second frame of reference is an integer, a square zero-shift supercell can be designed based on the lengths of the sides of the non-square supercell in the first frame of reference.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07215444",
	"publication_date": "2007-05-08",
	"application_number": "10195424",
	"application_date": "2002-07-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for efficiently generating and supplying image data for tandem printers",
	"summary": "",
	"abstract": "A page to be printed is organized into a plurality of strips. To rendered the page using a tandem printer, each strip is rendered a plurality of times, once for each print engine of the tandem printer. Each time the selected strip is rendered for a different one of the print engines, the rendered image data for that print engine is stored into a separate memory area, such as a buffer, associated with that print engine Once a selected strip is rendered and the rendered image data stored into the associated memory areas, the rendered image data is used by the appropriate print engines to form image portions on a receiving sheet corresponding to the rendered image data. At the same time, a next strip is selected and repeatedly rendered for each of the print engines.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07199896",
	"publication_date": "2007-04-03",
	"application_number": "10250019",
	"application_date": "2003-05-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for improving calibration of a linear array sensor",
	"summary": "",
	"abstract": "Systems and methods provide calibration for a linear array sensor. A test pattern having a plurality of lines is used. Comparison between expected and measured spacing between a pair of neighboring lines is used to determine sensor position displacement.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07256411",
	"publication_date": "2007-08-14",
	"application_number": "11593121",
	"application_date": "2006-11-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for indexing each level of the inner structure of a string over a language having a vocabulary and a grammar",
	"summary": "",
	"abstract": "Systems and methods for indexing and searching the inner structure of a string over a language having a vocabulary and a grammar using bit vectors. The index preserves the inner gramatical structure of the string while allowing for a fast search. A single search provides immediate access to every level of a document, without having to re-search a single string to determine which sub-parts of that string match the search string. When a string is indexed, the index maintains a compositional representation and the grammatical relationship between the elements of the vocabulary according to the language. The string is then indexed on different levels by disregarding some of the grammatical relationships of component levels.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07194450",
	"publication_date": "2007-03-20",
	"application_number": "10739191",
	"application_date": "2003-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for reducing cross process direction registration errors of a printhead using a linear array sensor",
	"summary": "",
	"abstract": "Systems and methods are provided for determining registration errors in the cross process direction of a printer. A first straight line is obtained by detecting line centers of a first plurality of dashes in a test pattern. A second straight line is obtained by detecting a line center positions of a second plurality of dashes in the test pattern. A difference between the off-set of the first straight line and the off-set of the second straight line is used in determining registration errors.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07309118",
	"publication_date": "2007-12-18",
	"application_number": "10998544",
	"application_date": "2004-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for sensing skew and bow of a raster optical scanner using a full width array detector",
	"summary": "",
	"abstract": "System and methods are provided for detecting color separation misalignment in raster optical scanners. A dash minimum response curve is obtained from a plurality of minimal responses sensed from a plurality of dashes in a test pattern. The frequency of the dash minimum response curve a is used to detect skew or bow, depending on whether the frequency is a constant or a variable.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07193638",
	"publication_date": "2007-03-20",
	"application_number": "10998986",
	"application_date": "2004-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for simplex and duplex image on paper registration",
	"summary": "",
	"abstract": "Systems and methods of registering a sheet in an image reproduction, e.g., a xerographic, device use sheet parameters regardless of the tray or bin with which the sheets are associated, separate tallies of sheet registration correction factors for both sides of a sheet, and use registration errors detected on a first side of a sheet to generate correction factors concerning proper registration of the second side of that sheet. In embodiments, the systems and methods average registration errors for one particular side of a plurality of sheets to obtain a damped error signal that is taken into account for registration of subsequent sheets on each respective sheet side. In embodiments, the systems and methods determine variations between actual and target system performance to affect subsequent sheet flow and registration.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07158751",
	"publication_date": "2007-01-02",
	"application_number": "11101425",
	"application_date": "2005-04-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for simplex and duplex image on paper registration",
	"summary": "",
	"abstract": "Systems and methods of registering a sheet in an image reproduction, e.g., a xerographic, device use sheet parameters regardless of the tray or bin with which the sheets are associated, separate tallies of sheet registration correction factors for both sides of a sheet, and use registration errors detected on a first side of a sheet to generate correction factors concerning proper registration of the second side of that sheet. In embodiments, the systems and methods average registration errors for one particular side of a plurality of sheets to obtain a dampened error signal that is taken into account for registration of subsequent sheets on each respective sheet side. In embodiments, the systems and methods determine variations between actual and target system performance to affect subsequent sheet flow and registration.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07277669",
	"publication_date": "2007-10-02",
	"application_number": "11320822",
	"application_date": "2005-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for triage of passages of text output from an OCR system",
	"summary": "",
	"abstract": "Systems and methods for triage of passages of text output from an OCR system by use of trainable models of the accuracy of the OCR system based on attributes of individual characters. The systems and methods according to this invention automatically triage an OCR-output text passage by determining at least one OCR-output character attribute for each OCR-output character, determining an error rate for the OCR-output text passage using a triage model and the determined at least one OCR-output character attribute, and comparing the determined error rate for the OCR-output text passage with an OCR-output text passage threshold error rate to perform an OCR-output text passage triage decision. Triage decision includes for example, sending OCR results directly to an end user without any post-OCR processing, sending the OCR results through a post-OCR inspection and processing stage, sending the original document image to be completely keyed in manually, and a combination thereof.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07171061",
	"publication_date": "2007-01-30",
	"application_number": "10064435",
	"application_date": "2002-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for visually representing the aging and/or expiration of electronic documents",
	"summary": "",
	"abstract": "Systems and methods enforce an expiration date for an electronic document and represent the expiration visually. The author may specify an expiration date for an electronic document. The expiration date may be either a date stamp or an integer representing a period of time from the creation date. The access to the document may be unavailable to a user after the expiration date. The visual representation of the document may age after a milestone date is reached. Random pixels may be added to the visual representation until the document expires. An algorithm may apply visual metaphor bitmaps to the document's visual representation. The bitmaps may be templates. The document may be mapped to the applied bitmaps. The document may be rendered illegible after the expiration date is reached.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07254772",
	"publication_date": "2007-08-07",
	"application_number": "10207104",
	"application_date": "2002-07-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "High bandwidth reconfigurable on-chip network for reconfigurable systems",
	"summary": "",
	"abstract": "A crossbar switch () is implemented in a reconfigurable circuit, such as a FPGA, instantiated with a number of modules (), the crossbar switch () providing communication links between the modules (). The modules () and crossbar switch () can be easily updated in a partial reconfiguration process changing only portions of modules () and the crossbar switch () while other portions remain active. The crossbar switch () uses individual wiring to independently connect module outputs and inputs so that asynchronous communications can be used. The crossbar switch () can be implemented in different embodiments including a Clos crossbar switch, and a crossbar switch connecting each module output only to a corresponding module input, allowing for a reduction in the amount of FPGA resources required to create the crossbar switches.",
	"url": null,
	"owner": "Xilinx, Inc.",
	"publication_number": "07224184",
	"publication_date": "2007-05-29",
	"application_number": "10981932",
	"application_date": "2004-11-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for a programmable interface of a soft platform on a programmable logic device",
	"summary": "",
	"abstract": "Programmable architecture for implementing a message processing system using an integrated circuit is described. In an example, first attributes are defined for a plurality of threads within the integrated circuit. Second attributes are defined for a memory associated with the integrated circuit. Third attributes are defined for an interconnection topology associated with at least one of the memory and the plurality of threads. Fourth attributes are defined for an interface to at least one of the memory and the plurality of threads.",
	"url": null,
	"owner": "Xilinx, Inc.",
	"publication_number": "07228520",
	"publication_date": "2007-06-05",
	"application_number": "10769331",
	"application_date": "2004-01-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for application-specific programmable memory architecture and interconnection network on a chip",
	"summary": "",
	"abstract": "Programmable architecture for implementing a message processing system using an integrated circuit is described. In an example, specification data is received that includes attributes of the memory system. A logical description of the memory system is generated in response to the specification data. The logical description defines a memory component and a memory-interconnection component. A physical description of the memory system is generated in response to the logical description. The physical description includes memory circuitry associated with the integrated circuit defined by the memory component. The memory circuitry includes an interconnection topology defined by the memory interconnection component.",
	"url": null,
	"owner": "Xilinx, Inc.",
	"publication_number": "07185309",
	"publication_date": "2007-02-27",
	"application_number": "10769591",
	"application_date": "2004-01-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for integrating cores in FPGA-based system-on-chip (SoC)",
	"summary": "",
	"abstract": "The invention provides an interface that can facilitate integration of user specific proprietary cores and commercially available cores during customization of an FPGA-based SoC. A selected hardware or software system component used for customizing the FPGA-based SoC can be configured using parameters that can be automatically propagated and used to configure peer system components. During configuration of the peer system components, other parameters used to configure those peer system components can also be propagated and used to configure other system components during customization of the FPGA-based SoC.",
	"url": null,
	"owner": "Xilinx, Inc.",
	"publication_number": "07216328",
	"publication_date": "2007-05-08",
	"application_number": "11100972",
	"application_date": "2005-04-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods of estimating susceptibility to single event upsets for a design implemented in an FPGA",
	"summary": "",
	"abstract": "Methods of estimating the susceptibility to single event upsets (SEUs) of a design implemented in an FPGA. In an FPGA, many of the configuration memory cells could change state in response to an SEU without affecting the functionality of a design implemented in the FPGA. According to the methods of the invention, the number of u201ccare bitsu201d (bits associated with resources actually used in the design) is determined. The number of care bits as a proportion of the total number of configuration memory cells in the FPGA determines the u201cSEU Probability Impactu201d (SEUPI) value. The u201cMean Time Between Upsetsu201d (MTBU) value is an estimate of how much time will elapse, on average, before one of the configuration memory cells in the FPGA is affected by an SEU. To obtain the u201cMean Time Between Failuresu201d for the design implemented in the FPGA, the MTBU value is divided by the SEUPI value.",
	"url": null,
	"owner": "Xilinx, Inc.",
	"publication_number": "07249010",
	"publication_date": "2007-07-24",
	"application_number": "10407280",
	"application_date": "2003-04-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Reconfiguration of a programmable logic device using internal control",
	"summary": "",
	"abstract": "A method of partially reconfiguring an IC having programmable modules that includes the steps of reading a frame of configuration information from the configuration memory array; modifying at least part of the configuration information, thereby creating a modified frame of configuration information; and overwriting the existing frame of configuration information in the configuration memory array with the modified frame, thereby partially reconfiguring the IC.",
	"url": null,
	"owner": "Xilinx, Inc.",
	"publication_number": "07227378",
	"publication_date": "2007-06-05",
	"application_number": "11100971",
	"application_date": "2005-04-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information security method and system",
	"summary": "",
	"abstract": "The present invention discloses an improved information security system and method. A polymorphic engine is used to enhance the security features of a software application and the data generated by or made available to the application and/or the operating system. The polymorphic engine operates to randomly alter the standard executable code of the original application while preserving its functional characteristics. Each polymorphed instance of the application differs from any other instance of the same application in form only. Various other security features operate to protect the polymorphic engine itself and/or the polymorphed code generated therefrom. These other security features include: just-in-time instruction code decryption; virtual CPU instruction code pre-processing; call mutation; stack manipulation; secure hook-capture of device input; secure display device output; application level decryption of encrypted hardware data streams; and a dynamic, randomly configured graphical keypad interface.",
	"url": null,
	"owner": "Xtreamlok Pty Ltd",
	"publication_number": "07171693",
	"publication_date": "2007-01-30",
	"application_number": "09855073",
	"application_date": "2001-05-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for selecting a date or range of dates",
	"summary": "",
	"abstract": "Systems and methods for selecting a time/date, or a range of times/dates are provided. In one aspect, systems and methods having non-linear timeline UI mechanism(s) for selecting a date, or selecting a date range, are provided. In recognition that user interaction with and recall of time varies depending upon how far away the time period of interest is from the present time, the non-linear timeline provides UI mechanism(s) for selecting a time having different granularities of time in different portions of the timeline. Additionally, in recognition that user interaction with dates and times is not always in terms of numbers, but rather in terms of events, etc., occurring at or around a particular time period of interest, systems and method having date relation UI techniques are provided.",
	"url": null,
	"owner": "Yahoo! Inc.",
	"publication_number": "07278111",
	"publication_date": "2007-10-02",
	"application_number": "10330898",
	"application_date": "2002-12-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for using software objects to manage devices connected to a network in a vehicle",
	"summary": "",
	"abstract": "The invention is the use of a software object as an interface between a device and a network. Both the network and device are located in a vehicle. The system uses a connectivity subsystem that includes a device management object for interfacing between a device and a network in the vehicle. A discovery subsystem identifies which devices are connected to the network by the connectivity subsystem. The control subsystem can then use the device management object to manage the use of the device. In the application layer of the system resides the software applications to be used by the devices and occupants in the vehicle. In the object interface layer of the system resides the software object that connects the network with the various software applications. The network resides in the network layer.",
	"url": null,
	"owner": "Yazaki North America, Inc.",
	"publication_number": "07181511",
	"publication_date": "2007-02-20",
	"application_number": "10122475",
	"application_date": "2002-04-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enhanced environment visualization using holographic stereograms",
	"summary": "",
	"abstract": "Hologram production techniques can combine source data representing realistic information describing an environment with source data providing representational information describing a feature of the environment and/or some object interacting with the environment. The combined data is used to produce holograms, and particularly holographic stereograms including features that enhance the visualization of the environment depicted in hologram. A haptic interface can be used in conjunction with such holograms to further aid use of the hologram, and to provide an interface to secondary information provided by a computer and related to the images depicted in the hologram.",
	"url": null,
	"owner": "Zebra Imaging, Inc.",
	"publication_number": "07190496",
	"publication_date": "2007-03-13",
	"application_number": "10899365",
	"application_date": "2004-07-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generating a mark/space table and a string of timing information on a remote control device",
	"summary": "",
	"abstract": "A remote control device detects that a command has been chosen. A command may, for example, have been chosen by a user pressing a key on the remote control device. In response, the remote control device generates a mark/space table and a string of timing information. The string of timing information includes entries that refer to mark time values and space time values in the mark/space table. The string of timing information also may contain special control portions (for example, a control portion can indicate that a portion of the string of timing information should be repeated a given number of times). The mark/space table and the string of timing information are then used to generate an operational signal that is transmitted from the remote control device. The mark/space table and string of timing information is a particularly compact way of describing an operational signal for a remote control device.",
	"url": null,
	"owner": "Zilog, Inc.",
	"publication_number": "07286076",
	"publication_date": "2007-10-23",
	"application_number": "10928576",
	"application_date": "2004-08-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interpreting a common script block to output various forms of data according to a common protocol",
	"summary": "",
	"abstract": "A virtual machine has a first upper level script, a second upper level script, and common block of script. The first and second scripts and the common block of script are interpreted by an interpreter of the virtual machine. The common block of script may, for example, be a script that encodes data bits in accordance with a remote control device communication protocol. The first script may include information for outputting first data bits (for example, key data). The second script may include information for outputting second data bits (for example, key data). The first script calls the common script, thereby outputting the first data in accordance with the protocol. The second script also calls the common script, thereby outputting the second data in accordance with the same protocol. Use of the common script in the outputting of the first and second data reduces memory requirements and therefore system cost.",
	"url": null,
	"owner": "ZiLOG, Inc.",
	"publication_number": "07227492",
	"publication_date": "2007-06-05",
	"application_number": "10928501",
	"application_date": "2004-08-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Sending a script to a virtual machine for immediate interpreting",
	"summary": "",
	"abstract": "A security channel is provided for communication with an eight-bit, register-based, virtual machine. The virtual machine is placed into a direct mode, and then individual script instructions are sent to the virtual machine across the security channel for immediate interpreting by the virtual machine. The instructions are interpreted one by one as they are received. This feature can be used in debugging. This feature is usable in applications in which resident code is not required, but rather incoming script instructions are adequate to control device operation. A large memory is not required to store scripts, thereby reducing virtual machine system cost. Script instructions usable in the direct mode include instructions for loading a script API or machine code API onto the virtual machine from an external system, for loading a script, and for causing the virtual machine to output the contents of memory and/or internal registers to the external system.",
	"url": null,
	"owner": "ZiLOG, Inc.",
	"publication_number": "07230562",
	"publication_date": "2007-06-12",
	"application_number": "10928502",
	"application_date": "2004-08-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for distributing and viewing electronic documents",
	"summary": "",
	"abstract": "A system for distributing an electronic version of a printed document is disclosed. The system comprises a memory device storing at least one document file that is based at least in part on a source document, which is an electronic version of a printed document. The system further comprises a distribution system programmed for: responding to requests from a client for delivery of a document file; retrieving a file copy from the memory device; assigning at least one right to the file copy, the right defining at least one action capable of being performed on at least a portion of the file copy; encrypting the file copy with a key based at least in part on the identity of the client and on the at least one right; and providing the encrypted file copy, with the associated key, to the client.",
	"url": null,
	"owner": "Zinio Systems, Inc.",
	"publication_number": "07290285",
	"publication_date": "2007-10-30",
	"application_number": "09897190",
	"application_date": "2001-07-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
}]