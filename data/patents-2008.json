
[{
	"name": "Adaptive data architecture for information management systems",
	"summary": "",
	"abstract": "A data architecture for an information management system for storing and retrieving data, where the system is characterized by a set of data processing rules. The data architecture includes a database management system implementing a primary data structure including a plurality of data elements for storing data, the primary data structure being characterized by a fixed data schema. The database management system also implements a secondary data structure defining a plurality of data relationships between the data elements of the primary data structure on a basis of the data processing rules of the information management system. Accordingly, the primary data structure is independent of the data processing rules of the information management system, such that the primary data structure is unaffected by changes to the data processing rules of the information management system.",
	"url": null,
	"owner": "",
	"publication_number": "07464095",
	"publication_date": "2008-12-09",
	"application_number": "10193161",
	"application_date": "2002-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for increased security of wireless transactions",
	"summary": "",
	"abstract": "A mobile communication device with security mechanisms is provided for enabling wireless personal information transfer with increased security. In another embodiment of the invention, a mobile communication device is used to confirm a transaction.",
	"url": null,
	"owner": "",
	"publication_number": "07330714",
	"publication_date": "2008-02-12",
	"application_number": "11105410",
	"application_date": "2005-04-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for subtractive installation",
	"summary": "",
	"abstract": "An apparatus and method for obtaining a storage medium with a deeply customizable set of installed content. Soft assets (e.g., programs, songs, videos, etc.) that form the content are selected from among a much larger set of preinstalled soft assets previously stored on storage media, such as disk drives. In some embodiments, based on a user's selections, the non-selected assets are permanently erased from a storage medium, while the remaining assets are available as installed (wherein substantially no further processing is required to install them). In some embodiments, a new device uses the storage medium to provide its user with a fully functional device without the need to separately install the soft assets from a plurality of sources (e.g., from program-distribution CDROMS and the like). Some embodiments include the storage medium having the soft assets installed, and including a program that elicits selections from a user and erases non-selected assets.",
	"url": null,
	"owner": "",
	"publication_number": "07398524",
	"publication_date": "2008-07-08",
	"application_number": "11428346",
	"application_date": "2006-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for wireless process control",
	"summary": "",
	"abstract": "An apparatus includes a programmable logic controller capable of receiving input data from and/or providing output data to at least one device in a process control system. The programmable logic controller is also capable of executing compiled code. The apparatus also includes a memory capable of storing source code corresponding to the compiled code. In addition, the apparatus includes a processor capable of storing the source code in the memory. The apparatus may further include a wireless radio capable of communicating over a wireless network. In particular embodiments, the programmable logic controller and the processor may form a single functional unit. In other embodiments, the processor and memory may operate in place of the programmable logic controller.",
	"url": null,
	"owner": "",
	"publication_number": "07424328",
	"publication_date": "2008-09-09",
	"application_number": "11327828",
	"application_date": "2006-01-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Bidder-side auction dynamic pricing agent, system, method and computer program product",
	"summary": "",
	"abstract": "The present invention sets forth a system, method, and computer program product for automating an interaction between a buyer and an electronic, variable, dynamic pricing online auction service. The method can include receiving a registration of a buyer at an Internet enabled buyer bidding site, a portfolio, and account information. The method can also receive entered information about financial transaction instruments, contact information, and product preferences in an auction profile. The method can receive a search query for a desired product from product auctions of a plurality of auction sites and can use a search agent or a meta-search agent, and can provide returned auctions, including retrieving and presenting current status of product auctions. The method can receive a selection of returned auctions to store in the portfolio for tracking by scan agents and for bidding by bid proxies. The method can receive selections of product auctions of the returned auctions and place the product auctions into the portfolio for use by a cascaded bid proxy. The method can provide auction monitoring by scan agents of temporal progression of product auctions, and can notify someone via a messaging center of any changes in relevant aspects of the status that could prevent an initial bid from being placed by a bid proxy. The method can enable activation of bid proxies as an auction nears completion to begin placing bids until the auction is won or lost by auction closing and can confirm a counter-offer has not out-bid. The method can compute and execute another higher bid if a counter-offer has been made and accepted, higher than the most recent bid detected.",
	"url": null,
	"owner": "",
	"publication_number": "07461024",
	"publication_date": "2008-12-02",
	"application_number": "09963742",
	"application_date": "2001-09-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "CASS (computer alarm security software)",
	"summary": "",
	"abstract": "The software configurations of a personal computer allow it to provide portable home security to poor American families and small business owners. When a security breach is detected, a wave file out of the computer speakers serves as a detection alarm to the intruder, while another wave file serves as a notification to the homeowner. The personal computer program would automatically loop through different telephone numbers, as preset. The homeowner has the responsibilities to stop, reset or dispatch the appropriate authorities base on the nature of the notification.",
	"url": null,
	"owner": "",
	"publication_number": "07463141",
	"publication_date": "2008-12-09",
	"application_number": "11098790",
	"application_date": "2005-07-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Database remote replication for back-end tier of multi-tier computer systems",
	"summary": "",
	"abstract": "A replication method and system for a computer system having multiple database servers for at least one database, wherein database servers are provided with a unified view of the data content. The method includes the steps of establishing connections to said multiple database servers for communicating with said database servers; distinguishing between read and update query requests; and assigning queries to respective ones of said multiple database servers to preserve the consistency of the respective unified view of data of said multiple database servers in case of receiving update queries. Assigning each new query includes the steps of distinguishing between read and update queries, determining possible assignments of that new query to one or more of said multiple database servers, each said possible update query assignment to one of said multiple database servers being based on a transaction-based replication scheme to preserve the unified view data of said multiple database servers; and assigning that new query to one of said multiple database servers as a function of said possible assignments of that new query, to preserve respective unified view of data of said multiple database servers.",
	"url": null,
	"owner": "",
	"publication_number": "07370064",
	"publication_date": "2008-05-06",
	"application_number": "10213158",
	"application_date": "2002-08-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Declarative Dispatch",
	"summary": "",
	"abstract": "Declarative dispatch is a computer-implemented method for processing a database represented by a collection of declarations. Computational services responsive to notification of declarations are provided. Each declaration includes a subject entity, a relation, and, optionally, an object entity. The relation is associated with one or more of the provided computational services. Upon receiving a declaration, a notification of the received declaration is dispatched to each computational service associated with the received declaration's relation. The notified computational service may process the subject entity, relation, and optional object entity in response to the dispatched notification. Received declarations may be cached, and dispatch of a received declaration may be suppressed upon retrieval of the received declaration from the cache. Dispatch processing may include instantiation of instances of object-oriented classes, assignment to association and property members of object-oriented classes, and implementation of meta-relations, such as commutivity, transitivity, implication, and complementarity of relations.",
	"url": null,
	"owner": "",
	"publication_number": "07454429",
	"publication_date": "2008-11-18",
	"application_number": "11023205",
	"application_date": "2004-12-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic mail software with modular integrated authoring/reading software components including methods and apparatus for controlling the interactivity between mail authors and recipients",
	"summary": "",
	"abstract": "Electronic mail software includes a main email component and a number of installable components which communicate bidirectionally with the email component through an application programming interface (API). The installable components include authoring/reading components and a mailbox browser/editor component. The main email component provides an underlying graphical user interface (GUI) for functions directly associated with the storage and transfer of electronic mail messages and also handles all data bundling and unbundling that may be required to transform a message created by an authoring component into a fully MIME compliant message. In addition, the main email component includes u201chooksu201d (an application programming interface or API) for the attachment of the installable components. The authoring/reading components each provide functionality particular to the type of document the component is designed to create/display. Some modular components, or messages created by them, have assigned u201crolesu201d whereby senders and recipients of certain email documents are provided different kinds of access to the documents.",
	"url": null,
	"owner": "",
	"publication_number": "07444374",
	"publication_date": "2008-10-28",
	"application_number": "09604428",
	"application_date": "2000-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Flexible interrupt handling methods for optical network apparatuses with multiple multi-protocol optical networking modules",
	"summary": "",
	"abstract": "An API including an interrupt handler registration function and one or more interrupt dispatchers, is provided to an optical networking apparatus to facilitate registration of interrupt handlers to handle interrupts triggered by the function blocks of multi-protocol optical networking modules (MPONM). Each registered interrupt handler may handle interrupts triggered by one or more function blocks of any of the MPONM, and/or for one or more cause. In one embodiment, the one or more interrupt dispatchers are equipped to determine the triggering function block and the cause, and determine the interrupt handlers, if any, are to be notified. Each of the interrupt handlers to be notified is notified accordingly, including the triggering function block and the cause.",
	"url": null,
	"owner": "",
	"publication_number": "07363410",
	"publication_date": "2008-04-22",
	"application_number": "11551914",
	"application_date": "2006-10-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Fully capable minimally inflatable object model system for multidimensional applications",
	"summary": "",
	"abstract": "A system for displaying data from a multidimensional database to a user is provided. The system includes a system computer and a multidimensional database accessible by the computer, the multidimensional database having objects stored thereon. Object model software executing on the system computer for instantiates and inflates specified objects up-front a first time the database is accessed, and instantiates and inflates objects which are not specified objects on demand as the nonspecified objects are accessed. The object model software employs an object model which includes a dataspace having at least one dataserver. At least one cube object is stored on each dataserver, each cube object having at least one saved view of data. At least one dimension object is also stored on each dataserver, each dimension object having at least one saved subset of elements.",
	"url": null,
	"owner": "",
	"publication_number": "07366732",
	"publication_date": "2008-04-29",
	"application_number": "09785573",
	"application_date": "2001-02-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hyperlink park and search",
	"summary": "",
	"abstract": "The present invention provides a method for hyperlink parking and searching. A user pre-defined search criteria is formed by adding, deleting, or modifying a search criteria that includes at least one search term. A universal resource Locator (URL) is obtained by parking a cursor on a hyperlink displayed on the current viewing computer screen, and, in response to parking the cursor on the hyperlink, an Internet connection with the URL is established. If the parked-on hyperlink is linkable and displayable, then a second indication is displayed on the current viewing computer screen, a web page associated with the URL is imported and searched with the user pre-defined search criteria to determine a number of matches for each search term, and each search term and a number of matches for each search term is displayed on the current viewing computer screen. Otherwise, a first indication is displayed on the current viewing computer screen.",
	"url": null,
	"owner": "",
	"publication_number": "07383248",
	"publication_date": "2008-06-03",
	"application_number": "10248042",
	"application_date": "2002-12-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Loan program and process for transacting the same",
	"summary": "",
	"abstract": "A loan program and process is structured to provide a significant end-to-end cost savings while overcoming many, if not all, of the drawbacks and regulatory obstacles present in the current payday loan industry. The program, the end-to-end process, and the arrangement thereof, permits a lender to offer short-term, small cash loans to employees through an employer controlled payroll system. Access to the employer controlled payroll system is achieved through an agreed upon relationship between a coordinator, a lender, and the employer. As part of the agreed upon relationship, the lender guarantees that all fees, interest, and other ancillary costs over and above a principle amount of the short-term, small cash loan will be kept at or below a predetermined annual percentage rate (APR). In addition, the loan is repayable over a number of payroll cycles such that each successive payday the principle balance of the loan decreases.",
	"url": null,
	"owner": "",
	"publication_number": "07386507",
	"publication_date": "2008-06-10",
	"application_number": "11859553",
	"application_date": "2007-09-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for collecting, aggregating and providing post-sale market data for an item",
	"summary": "",
	"abstract": "Various systems for collecting individual post-sale market data for products or services, and determining aggregate post-sale market data therefrom, are provided. In such systems, a sale of a product or service may trigger a third party, such as a payment provider, to arrange for the collection of individual post-sale market data from the consumer. Dependent upon the type of product or service involved, a schedule for continuously submitting post-sale market data for the product or service may be provided and the consumer may be encouraged to submit post-sale market data in accordance therewith through a variety of incentives. The received, individual, post-sale market data may be aggregated by one or more sources to determine aggregate post-sale market data for the product or service. The submitted individual data and/or the determined aggregate post-sale market data may then be provided to consumers in order to assist them in making purchasing decisions.",
	"url": null,
	"owner": "",
	"publication_number": "07406436",
	"publication_date": "2008-07-29",
	"application_number": "10103343",
	"application_date": "2002-03-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for improving the transcription accuracy of speech recognition software",
	"summary": "",
	"abstract": "The present invention involves the dynamic loading and unloading of relatively small text-string vocabularies within a speech recognition system. In one embodiment, sub-databases of high likelihood text strings are created and prioritized such that those text strings are made available within definable portions of computer-transcribed dictations as a first-pass vocabulary for text matches. Failing a match within the first-pass vocabulary, the voice recognition software attempts to match the speech input to text strings within a more general vocabulary. In another embodiment, the first-pass text string vocabularies are organized and prioritized and loaded in relation to specific fields within an electronic form, specific users of the system and/or other general context-based, interrelationships of the data that provide a higher probability of text string matches then those otherwise provided by commercially available speech recognition systems and their general vocabulary databases.",
	"url": null,
	"owner": "",
	"publication_number": "07426468",
	"publication_date": "2008-09-16",
	"application_number": "10791626",
	"application_date": "2004-03-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for network content distribution using a personal server approach",
	"summary": "",
	"abstract": "A method and apparatus providing network content distribution using a personal server approach is disclosed. A receiving client is provided with a personal server that can select, aggregate, and organize one or more channels of content in a virtual display space of the client. Selection, aggregation, and organization information is stored only locally. Raw data representing content is stored at a logically separate server across a network. Periodically the personal server requests updated content from the server and stores the content in a local channel database. The personal server synthesizes or generates one or more electronic documents containing the content, based on user-defined virtual space specifications and page organization information. The personal server then presents the electronic documents to a browser or other client element. Unlike past approaches that involve distributing fully formatted content to clients, the personal server can receive raw data, replace tokens in the raw data with other content, obtain embedded channel data, and render pages locally, using a conventional browser, without requiring use of a proprietary viewer, and without sending channel selections and other personal information across the network to an untrusted server.",
	"url": null,
	"owner": "",
	"publication_number": "07346649",
	"publication_date": "2008-03-18",
	"application_number": "09870059",
	"application_date": "2001-05-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for communicating between a remote printer and a server",
	"summary": "",
	"abstract": "In order to enable downloading to a mobile printer data items from a server, a method is disclosed comprising the steps of establishing communication connection end points (u201csocketsu201d), communicating with the server, where the communication includes sending a request for authentication to the server, receiving an authentication response, requesting print data portions from the server, receiving the requested print data portions, and notifying the server after each print data portion has been printed. The method also includes the step of terminating their communication connection when a printing session ends or if an error occurs. The method constitutes a printer-server protocol.",
	"url": null,
	"owner": "",
	"publication_number": "07383321",
	"publication_date": "2008-06-03",
	"application_number": "10191606",
	"application_date": "2002-07-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for storing, retrieving, and managing data for tags",
	"summary": "",
	"abstract": "This invention relates generally to a method and system for storing, retrieving, and managing data for tags that are associated in some manner to any type of object. More particularly, the present invention writes data to these tags, reads data from these tags, and manages data that is written to and/or read from these tags.",
	"url": null,
	"owner": "",
	"publication_number": "07388488",
	"publication_date": "2008-06-17",
	"application_number": "10952789",
	"application_date": "2004-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for analyzing data and performing lexical analysis",
	"summary": "",
	"abstract": "A system and method provide the ability to construct lexical analyzers on the fly in an efficient and pervasive manner. The system and method split the table describing the automata into two distinct tables and splits the lexical analyzer into two phases, one for each table. The two phases consist of a single transition algorithm and a range transition algorithm, both of which are table driven and permit the dynamic modification of those tables during operation. A third u2018entry pointu2019 table may also be used to speed up the process of finding the first table element from state 0 for any given input character.",
	"url": null,
	"owner": "",
	"publication_number": "07328430",
	"publication_date": "2008-02-05",
	"application_number": "10357326",
	"application_date": "2003-02-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods for transmitting data across quantum interfaces and quantum gates using same",
	"summary": "",
	"abstract": "Quantum gaps exist between an origin and a destination that heretofore have prevented reliably utilizing the advantages of quantum computing. To predict the outcome of instructions with precision, the input data, preferably a qubit, is collapsed to a point value within the quantum gap based on a software instruction. After collapse the input data is restructured at the destination, wherein dynamics of restructuring are governed by a plurality of gap factors as follows: computational self-awareness; computational decision logic; computational processing logic; computational and network protocol and logic exchange; computational and network components, logic and processes; provides the basis for excitability of the Gap junction and its ability to transmit electronic and optical impulses, integrates them properly, and depends on feedback loop logic; computational and network component and system interoperability; and embodiment substrate and network computational physical topology.",
	"url": null,
	"owner": "",
	"publication_number": "07451292",
	"publication_date": "2008-11-11",
	"application_number": "10637773",
	"application_date": "2003-08-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multi-dimensional method and apparatus for automated language interpretation",
	"summary": "",
	"abstract": "A method and apparatus for natural language interpretation are described. The invention includes a schema and apparatus for storing, in digital, analog, or other machine-readable format, a network of propositions formed of a plurality of text and/or non-text objects, and the steps of retrieving a string of input text, and locating all associated propositions in the network for each word in the input string. Embodiments of the invention also include optimization steps for locating said propositions, and specialized structures for storing them in a ready access storage area simulating human short-term memory. The schema and steps may also include structures and processes for obtaining and adjusting the weights of said propositions to determine posterior probabilities representing the intended meaning. Embodiments of the invention also include an apparatus designed to apply an automated interpretation algorithm to automated voice response systems and portable knowledge appliance devices.",
	"url": null,
	"owner": "",
	"publication_number": "07403890",
	"publication_date": "2008-07-22",
	"application_number": "10144739",
	"application_date": "2002-05-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Platform-independent real-time interface translation by token mapping without modification of application code",
	"summary": "",
	"abstract": "A system and method for translating one or more tokens from one language to another is provided. A lookup map mapping characteristics of the tokens in one language and the corresponding characteristics to be used in a foreign language is provided. A set of u201ccontentu201d dictionaries mapping tokens in a base language into the corresponding token in another language is also provided and, in conjunction with the characteristics of the foreign token, provides the basis for a translated interface. A GUI environment may initiate a request to translate whenever it is about to transmit a token to the interface or the tokens may be trapped prior to receipt by the display. Other tools and functions are also provided that instruct the interface to modify the location, ordering and other attributes of the token as communicated by the interface.",
	"url": null,
	"owner": "",
	"publication_number": "07369984",
	"publication_date": "2008-05-06",
	"application_number": "10357289",
	"application_date": "2003-02-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Prepaid reservation-based rating system",
	"summary": "",
	"abstract": "A billing system comprising servers, routers, and processors programmed to provide reservation based prepaid billing is disclosed. The billing system is also programmed to concurrently process multiple billing events on a single, prepaid subscriber account.",
	"url": null,
	"owner": "",
	"publication_number": "07366495",
	"publication_date": "2008-04-29",
	"application_number": "10272792",
	"application_date": "2002-10-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Programmed apparatus and system of dynamic display of presentation files",
	"summary": "",
	"abstract": "A method of preparing and displaying a cumulative presentation and a presentation system are provided. A listing of available individual presentation files is provided through a user interface. Each of the presentation files comprises a plurality of presentation slides. A user is queried through the user interface to select presentation files from the available individual presentation files for inclusion in a cumulative presentation in a selected presentation order. A listing of presentation files selected by the user is displayed in the user interface. In response to a first command received from the user, a first slide from a first presentation from the cumulative presentation is provided to a display device for display thereon. In response to a second command received from the user, a second slide from the cumulative presentation is provided to the display device for display thereon.",
	"url": null,
	"owner": "",
	"publication_number": "07434165",
	"publication_date": "2008-10-07",
	"application_number": "10317619",
	"application_date": "2002-12-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Representation of data records",
	"summary": "",
	"abstract": "A computerized method for representing a data record comprising: querying a data source to obtain data selected from the group consisting of a data element in a record, and metadata concerning the record; presenting in a display a record handle for manipulation of the record; presenting in the display a data item wherein the data item is a list of data items or a reference to another record; and, optionally, presenting on the display the metadata above the data item. In some embodiments, the method includes the step of retrieving one or more heterogeneous records from a plurality of databases for display and manipulation. The invention is also a grid control programmed to implement a disclosed method and is a computer-readable medium having computer-executable instructions for performing a disclosed method. The invention links the grid control of the invention with automatic query generation using hierarchical data schema trees. Both the trees and the grid records represent relational foreign keys as extra reference columns. In the grid control, these reference columns are additional embedded record handles.",
	"url": null,
	"owner": "",
	"publication_number": "07461077",
	"publication_date": "2008-12-02",
	"application_number": "10208635",
	"application_date": "2002-07-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software framework that facilitates design and implementation of database applications",
	"summary": "",
	"abstract": "An intelligent framework is provided that is disposed between a high-level language environment and a database system environment. According to one embodiment, the framework programmatically receives information regarding definitions of data structures of objects participating in a software application and information regarding relationships among the objects. Based upon the particular request from the high-level language environment and upon the definitions and relationships, the framework programmatically and dynamically generates appropriate statements associated with the database system environment that accomplish the request. For example, the framework may issue statements to define the structure of a database, access information from the database, and/or manipulate information within the database.",
	"url": null,
	"owner": "",
	"publication_number": "07412455",
	"publication_date": "2008-08-12",
	"application_number": "10836580",
	"application_date": "2004-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software methods of an optical networking apparatus with multiple multi-protocol optical networking modules",
	"summary": "",
	"abstract": "An API is provided to an optical networking apparatus to facilitate uniform access, control or interaction with its multi-protocol optical networking modules (MPONM) by its applications. Each of the MPONM has a number of function blocks having corresponding service routines. In response to an application's request to initialize a MPONM, the initialization function of the API cooperates with the function block service routines to create a data structure for the MPONM, and returns a handle of the data structure to the application. Thereafter, in response to a need to have an operation performed in a function block of a MPONM, the application makes the request with an externalized function the API associated with the function block, including with the request the handle of the data structure of the MPONM.",
	"url": null,
	"owner": "",
	"publication_number": "07320132",
	"publication_date": "2008-01-15",
	"application_number": "10211005",
	"application_date": "2002-08-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software methods of an optical networking apparatus with multiple multi-protocol optical networking modules having packet filtering resources",
	"summary": "",
	"abstract": "An API is provided to an optical networking apparatus to facilitate uniform access, control and interaction with its multi-protocol optical networking modules (MPONM) by its applications. Each of the MPONM has a number of function blocks having corresponding drivers. In response to an application's request to initialize a MPONM, the initialization function of the API cooperates with the function block drivers to create a data structure for the MPONM, and returns a handle of the data structure to the application. Thereafter, in response to a need to have an operation performed in the packet filtering function block of a MPONM, the application makes the request to the API, including with the request the handle of the data structure of the MPONM. In response, the API allocates a packet filtering resource to perform the operation, and returns a handle corresponding to the allocated resource to the application for use in further requests. When the application is finished with the resource, the resource is de-allocated by the API.",
	"url": null,
	"owner": "",
	"publication_number": "07451458",
	"publication_date": "2008-11-11",
	"application_number": "10211158",
	"application_date": "2002-08-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for communicating information relating to a network resource",
	"summary": "",
	"abstract": "A system and method for communicating information relating to a network resource. A computer for displaying supplemental information about another document on a display screen for a user. Guiding individuals to places of interest on a network where information is stored, and/or displaying or otherwise presenting useful information to the user.",
	"url": null,
	"owner": "",
	"publication_number": "07433874",
	"publication_date": "2008-10-07",
	"application_number": "11322602",
	"application_date": "2005-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for custom installation of an operating system on a remote client",
	"summary": "",
	"abstract": "A platform for remotely installing an operating system on a client machine includes a builder engine, for instance running on a support server. The builder engine may interrogate a remote client, for instance a diskless thin client or a machine having a disk but malfunctioning, and receive a machine state image from that machine. The builder engine may then assemble a customized image or kernel of an operating system such as Microsoft Windowsu2122 for transmission to the client. A file system may be initialized in electronic memory, or otherwise and the machine may commence operation, without having executed an operating system setup process. In embodiments, the client machine may then link to a complete image of an operating system to reinstall a comprehensive version of that system, or perform other tasks.",
	"url": null,
	"owner": "",
	"publication_number": "07379982",
	"publication_date": "2008-05-27",
	"application_number": "10401978",
	"application_date": "2003-03-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for information retrieval employing a preloading procedure",
	"summary": "",
	"abstract": "A document retrieval system having improved response time. During the time the user spends viewing the displayed information, other information that the user is likely to read or study later is preloaded into memory. If the user later requests the preloaded information, it can be written to the display very quickly. As a result, the user's request to view new information can be serviced quickly.",
	"url": null,
	"owner": "",
	"publication_number": "07467137",
	"publication_date": "2008-12-16",
	"application_number": "11469953",
	"application_date": "2006-09-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method of permissive data flow and application transfer",
	"summary": "",
	"abstract": "A computer system and computer control software is provided which allows for secure document delivery between remote parties, and control by the sender of the further distribution and handling by the recipient of an electronic document or other computer file. A file in an application may be stored on a server and manipulated by the file's native application. The recipient of the file information is given preferably automatic operation to view the user output of the server application, via a thin-client system. The recipient of the file is thus limited, as dictated by the sender, as to the operations it can perform on the document via the server application. Files attached to electronic messages may also be removed and stored on a server, thus eliminating any possible effect on the recipient machine by the computer file. Also provided for is an adaptable thin-client system which adapts to local environmental and use conditions to provide the correct degree of thin-client or local application reliance.",
	"url": null,
	"owner": "",
	"publication_number": "07424543",
	"publication_date": "2008-09-09",
	"application_number": "09866454",
	"application_date": "2001-05-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method utilizing multiple processes to render graphical data",
	"summary": "",
	"abstract": "A system for rendering graphical data utilizes a plurality of graphics pipelines, a first process, and a second process. Each of the plurality of graphics pipelines is configured to render graphical data. The first process is configured to receive three-dimensional (3D) graphics commands from a graphics application and to receive input commands from a user input device. The first process is configured to buffer the received 3D graphics commands and to execute the received input commands, and the first process, for each of the buffered 3D graphics commands, is configured to begin processing a newly received command upon buffering the 3D graphics command. The second process is configured to interface the buffered graphics commands with each of the plurality of pipelines, wherein execution of the user input command affects an object defined by the graphics application.",
	"url": null,
	"owner": "",
	"publication_number": "07432933",
	"publication_date": "2008-10-07",
	"application_number": "11030450",
	"application_date": "2005-01-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and article of manufacture for determining a price of cryptograph IC services based on a computational burden thereof",
	"summary": "",
	"abstract": "A system, method and article of manufacture are provided for pricing a cryptographic service. A request for a cryptographic service is received. An identification is made of one or more of a computational burden required to perform the cryptographic service, a privacy level of the cryptographic service, and/or a speed of performing the cryptographic service. A price of the cryptographic service is determined based on the computational burden, privacy level, and/or speed. A method is also provided for pricing a cryptographic service based on a compactness of a cryptographic message. A request for encrypting a message is received. The message is encrypted and is also compressed during the encryption. An amount of compression of the message is determined. A price of the encryption is determined based on the amount of compression.",
	"url": null,
	"owner": "",
	"publication_number": "07421583",
	"publication_date": "2008-09-02",
	"application_number": "09596924",
	"application_date": "2000-06-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method, and computer program product for providing a multi-user e-mail system",
	"summary": "",
	"abstract": "A system, method, and computer program product for providing a multi-user shared e-mail system on a single computer is described. The system enables multiple users to use a single computer to provide for each user, one at a time, access to a personal secure e-mail account environment for that user. The e-mail account environment can include an inbox, an outbox and one or more folders to store received e-mail. The multiple e-mail account environments are all stored on the single computer. The single computer can be standalone, or can include an interface to a network, such as the Internet, for delivery of e-mail to users whose e-mail accounts do not reside on the single computer. The multi-user e-mail account system on a shared single computer provides cost efficient access for a large number of users which do not each need their own computer. The e-mail system includes a prioritization indicator to determine which of the multiple users of the shared e-mail system can get access first. Priority can reflect, e.g., receipt of new e-mail by an account and the urgency of received e-mail.",
	"url": null,
	"owner": "",
	"publication_number": "07421472",
	"publication_date": "2008-09-02",
	"application_number": "09714997",
	"application_date": "2000-11-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Trading system and method for institutional athletic and education programs",
	"summary": "",
	"abstract": "A device and method for trading commodity options and futures related to an educational institution's non-rival athletic program to manage risks associated with producing collegiate athletic programs. In one version, the underlying asset of the options and futures contracts is an athletic prospect's obligation to participate in a non-rival athletic program at a particular institution in exchange for the opportunity for the athletic prospect to participate in academic and athletic programs within the institution. In a particular form, the underlying asset is a signed National Letter of Intent, a contract that obligates a prospect attending a particular institution to participate in that institution's non-rival athletic program. Revenues generated by options and futures contracts traded according to the device and method of the present invention can be used to further the institution's educational and athletic missions.",
	"url": null,
	"owner": "",
	"publication_number": "07359879",
	"publication_date": "2008-04-15",
	"application_number": "11754774",
	"application_date": "2007-05-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Trading system and method for institutional athletic and education programs",
	"summary": "",
	"abstract": "A device and method for trading commodity options and futures related to an educational institution's non-rival athletic program to manage risks associated with producing collegiate athletic programs. In one version, the underlying asset of the options and futures contracts is an athletic prospect's obligation to participate in a non-rival athletic program at a particular institution in exchange for the opportunity for the athletic prospect to participate in academic and athletic programs within the institution. In a particular form, the underlying asset is a signed National Letter of Intent, a contract that obligates a prospect attending a particular institution to participate in that institution's non-rival athletic program. Revenues generated by options and futures contracts traded according to the device and method of the present invention can be used to further the institution's educational and athletic missions.",
	"url": null,
	"owner": "",
	"publication_number": "07363272",
	"publication_date": "2008-04-22",
	"application_number": "11754797",
	"application_date": "2007-05-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Virtual type interpretation, interaction and detection",
	"summary": "",
	"abstract": "Interpretation of virtual types in a software development, debugging, or monitoring environment. Display and modification of variables having virtual types. Detection of virtual types.",
	"url": null,
	"owner": "",
	"publication_number": "07434205",
	"publication_date": "2008-10-07",
	"application_number": "11061113",
	"application_date": "2005-02-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for fast gradient pixel clears in graphics rendering",
	"summary": "",
	"abstract": "A system and method of maintaining a gradient in a plurality of pixels of a graphics display, such as a color or intensity gradient, where each pixel has an X coordinate, Y coordinate, and other pixel data that includes a fast-clear bit The pixels are filled on the display to create a gradient based upon the X or Y coordinates of the pixels, or a combination thereof, and when performing a pixel data operation, such as a read operation, the pixel data for a pixel with an activated fast-clear bit is ignored.",
	"url": null,
	"owner": "3DLABS",
	"publication_number": "07466319",
	"publication_date": "2008-12-16",
	"application_number": "10163793",
	"application_date": "2002-06-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for mobile software application development and deployment",
	"summary": "",
	"abstract": "A technique is introduced for developing and deploying an application in a mobile domain. In operation, a mobile data model may be accessed, and a portion of the mobile data model may selected to be instantiated at a distributed device in order to create a mobile data store at the distributed device. The mobile data store may contain enterprise information. A mobile software application and at least a portion of the mobile data model may be made available to a consumer, and, in some embodiments, the application and the portion of the data model may be deployed to a consumer. In some embodiments, the consumer may be a hand-held computing device.",
	"url": null,
	"owner": "@ Hand Corporation",
	"publication_number": "07331035",
	"publication_date": "2008-02-12",
	"application_number": "09848770",
	"application_date": "2001-05-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generic product finder system and method",
	"summary": "",
	"abstract": "A generic product finder system that provides the capability of managing and performing searches on configurable products in a J2EE application. The generic product finder system includes a manager component for performing searches in response to a search query; a product component for persisting a plurality of product information and interacting with the manger component in conducting searches of the product information; a product metadata component that interacts with the manager component for defining a product; and a search configuration component that interacts with the manager component for constructing a set of search rules in a product search configuration. Internally, the product finder system represents products with a specification divided into parameters representing characteristics and optional attributes. This specification exists in a generic state by the use of Java objects. Multiple product specifications may co-exist and their information is persisted by the use of entity beans. The generic product also contains a session bean that acts as manager and single point-of-entry to the product information. Since the products are maintained in a generic form, search rules can be constructed and applied to the product set to perform complex queries.",
	"url": null,
	"owner": "ABB Technology AG",
	"publication_number": "07386562",
	"publication_date": "2008-06-10",
	"application_number": "10721141",
	"application_date": "2003-11-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Connector gateway",
	"summary": "",
	"abstract": "A connector gateway system that provides mobile devices with access to business services is disclosed. The connector gateway system comprises a mobile device that includes an application that is capable of generating a service request. The service request may be generated from the application and may include a DNS name that translates to an address on the connector gateway server. The connector gateway server performs a lookup operation to determine the business server associated with the service request. The connector gateway server creates a data filter that drives an emulation between the mobile device and the business server to pump data between the mobile device and the business server.",
	"url": null,
	"owner": "Accenture Global Services GmbH",
	"publication_number": "07324473",
	"publication_date": "2008-01-29",
	"application_number": "10680661",
	"application_date": "2003-10-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Navigating a software project repository",
	"summary": "",
	"abstract": "A system including a document repository is provided. The system determines, automatically, a level of similarity between at least two of a plurality of discrete elements stored in the document repository. The system then stores data representative of a link between the elements based in-part on the level of similarity. In another embodiment, the system determines a relationship between documents by retrieving a plurality of documents from a document repository. The system segments at least two documents of the plurality of documents into a plurality of conceptually meaningful segments. The system determines if a segment of one document is related to a segment of another document and stores data representative of the relationship.",
	"url": null,
	"owner": "Accenture Global Services GmbH",
	"publication_number": "07383269",
	"publication_date": "2008-06-03",
	"application_number": "10661805",
	"application_date": "2003-09-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Runtime program regression analysis tool for a simulation engine",
	"summary": "",
	"abstract": "A system is disclosed that provides a goal based learning system utilizing a rule based expert training system to provide a cognitive educational experience. The system provides the user with a simulated environment that presents a business opportunity to understand and solve optimally. Mistakes are noted and remedial educational material presented dynamically to build the necessary skills that a user requires for success in the business endeavor. The system utilizes an artificial intelligence engine driving individualized and dynamic feedback with synchronized video and graphics used to simulate real-world environment and interactions. Multiple u201ccorrectu201d answers are integrated into the learning system to allow individualized learning experiences in which navigation through the system is at a pace controlled by the learner. A robust business model provides support for realistic activities and allows a user to experience real world consequences for their actions and decisions and entails realtime decision-making and synthesis of the educational material. The system includes tools for analysis, logging and display of regression analysis information for a presentation as it is presented.",
	"url": null,
	"owner": "Accenture Global Services GmbH",
	"publication_number": "07433852",
	"publication_date": "2008-10-07",
	"application_number": "09868743",
	"application_date": "1999-02-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Simulation enabled accounting tutorial system",
	"summary": "",
	"abstract": "A system provides the user with a simulated environment that presents a business opportunity to understand and solve optimally. Mistakes are noted and remedial educational material presented dynamically to build the necessary skills that a user requires for success in the business endeavor. The system utilizes an artificial intelligence engine driving individualized and dynamic feedback with synchronized video and graphics used to simulate real-world environment and interactions. A robust business model provides support for realistic activities and allows a user to experience real world consequences for their actions and decisions. An accounting tutorial system is enabled for providing active coaching on aspects of cost accounting including debit and credit processing, procedures for closing books, appropriate management of ledgers, assets and liabilities utilizing a t-account motif. Techniques for process sensitive help are also integrated into the system to provide contextual examples to guide a user in performing a task.",
	"url": null,
	"owner": "Accenture Global Services GmbH",
	"publication_number": "07428518",
	"publication_date": "2008-09-23",
	"application_number": "09868698",
	"application_date": "1999-02-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Simulation enabled focused feedback tutorial system",
	"summary": "",
	"abstract": "A system is disclosed that provides a goal based learning system utilizing a rule based expert training system to provide a cognitive educational experience. The system provides the user with a simulated environment that presents a business opportunity to understand and solve optimally. Mistakes are noted and remedial educational material presented dynamically to build the necessary skills that a user requires for success in the business endeavor. The system utilizes an artificial intelligence engine driving individualized and dynamic feedback with synchronized video and graphics used to simulate real-world environment and interactions. Multiple u201ccorrectu201d answers are integrated into the learning system to allow individualized learning experiences in which navigation through the system is at a pace controlled by the learner. A robust business model provides support for realistic activities and allows a user to experience real world consequences for their actions and decisions and entails realtime decision-making and synthesis of the educational material. A dynamic feedback system is utilized that narrowly tailors feedback and focuses it based on the performance and characteristics of the student to assist the student in reaching a predefined goal.",
	"url": null,
	"owner": "Accenture Global Services GmbH",
	"publication_number": "07386524",
	"publication_date": "2008-06-10",
	"application_number": "09887824",
	"application_date": "2001-06-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Communication interface for a financial modeling and counseling system",
	"summary": "",
	"abstract": "The present invention provides a method and a computer system for providing a communication medium over a network for financial modeling and counseling. The system includes financial modeling using a profile of a user and provides automated customized financial coaching directly to the user in a web-based environment. The financial coaching is based on the financial modeling and the profile and includes suggestions for changes to the user's current financial portfolio. The suggestions are presented in a natural language format and include financial products and recommended securities for the user to purchase. The financial advisor may provide live financial coaching such that the user is assisted in achieving financial goals and optimizing long-term goals.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "07315837",
	"publication_date": "2008-01-01",
	"application_number": "09929735",
	"application_date": "2001-08-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Error and load summary reporting in a health care solution environment",
	"summary": "",
	"abstract": "A system, method and computer program are provided for generating error and summary reports for a data load. A plurality of records to be loaded in a database are received. The records may include medical records. A data management template corresponding to the records is chosen. It is verified that all records to be loaded match the data management template. The records are sent to a database for loading in the database upon validation that the records match the data management template. A report of records that match the data management template and records that do not match the data management template is compiled.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "07403901",
	"publication_date": "2008-07-22",
	"application_number": "09549236",
	"application_date": "2000-04-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Knowledge management tool",
	"summary": "",
	"abstract": "A system, method and article of manufacture are provided for managing data across an enterprise. A request for information is received from a user. Data relating to the user request is searched for in at least two geographically separated information repositories. The results of the search are presented to the user. The user is allowed to browse through additional data of the information repositories. Links between data items and other data entries in the information repositories are created according to relationships the data items have to the other data entries.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "07333977",
	"publication_date": "2008-02-19",
	"application_number": "10821629",
	"application_date": "2004-04-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Location-based filtering for a shopping agent in the physical world",
	"summary": "",
	"abstract": "An agent based system utilizes a Personal Digital Assistant (PDA)-based, Global Positioning System (GPS)-enabled information gathering agent that relies on knowledge of a shopper's physical location to support a shopping task while shopping at a mall. Shoppers indicate their shopping goals to the system. Then, as shoppers stroll through a mall, the system informs them of the availability of items of interest to them available in the immediately surrounding stores, as well as any cheaper local alternatives.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "07386477",
	"publication_date": "2008-06-10",
	"application_number": "09975460",
	"application_date": "2001-10-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Supply chain/workflow services in a contract manufacturing framework",
	"summary": "",
	"abstract": "The present disclosure provides for affording supply chain/workflow services in a contract manufacturing framework. First, a database including a plurality of service provider data structures is provided, wherein each service provider data structure includes a description of a particular service provider, and wherein the database further includes a request for proposal mechanism. Next, a particular service provider data structure is identified based on a request for proposal from a user utilizing the request for proposal mechanism. Finally, project management services are afforded to the user based on the request for proposal and the identified service provider data structure.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "07353180",
	"publication_date": "2008-04-01",
	"application_number": "09551181",
	"application_date": "2000-04-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Synchronization in an automated scripting framework",
	"summary": "",
	"abstract": "The present disclosure provides for affording synchronization in an automated scripting framework. First, script data is received utilizing a language-driven interface. Then, reports having user readable sentences are created based on the received script data. The received script data is then translated into automation code. Finally, automated testing is provided utilizing the automation code.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "07437614",
	"publication_date": "2008-10-14",
	"application_number": "11105229",
	"application_date": "2005-04-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and article of manufacture for a knowledge management tool proposal wizard",
	"summary": "",
	"abstract": "A system, method and article of manufacture are provided for developing a dossier. First, a name of one or more clients which may be relevant to the proposal is received. A list of industries associated with the client(s) is presented to the user. The user is allowed to select an industry from the list of industries. A search for information relating to the client and the selected industry is performed. The dossier is prepared utilizing the information found during the searching.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "07350138",
	"publication_date": "2008-03-25",
	"application_number": "09521235",
	"application_date": "2000-03-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Comparatively analyzing vendors of components required for a web-based architecture",
	"summary": "",
	"abstract": "A system, method and article of manufacture are provided for performing a comparative analysis of vendors of network-related products or services. The present invention includes first determining a current network framework. Thereafter, a graphical depiction of the current network framework is displayed along with a plurality of components thereof. Next, a comparative analysis of at least two vendors of network-related products or services is presented. This is accomplished with indicia coding that highlights various aspects of the vendors.",
	"url": null,
	"owner": "Accenture, LLP",
	"publication_number": "07315826",
	"publication_date": "2008-01-01",
	"application_number": "09321279",
	"application_date": "1999-05-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for unified external and interprocess communication",
	"summary": "",
	"abstract": "A palmtop computer system that incorporates mechanical buttons that combine the task of turning the palmtop computer system on and starting a particular application program. Furthermore, the same mechanical button can be used to navigate the application program to find the information that is most likely needed by the user. Additionally, external devices can be coupled to the palmtop computer system in a manner that allows the external hardware device to initiate specific application programs that cooperate with the external hardware device.",
	"url": null,
	"owner": "Access Systems Americas, Inc.",
	"publication_number": "07386858",
	"publication_date": "2008-06-10",
	"application_number": "10622880",
	"application_date": "2003-07-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "DRR generation and enhancement using a dedicated graphics device",
	"summary": "",
	"abstract": "DRR generation and enhancement using a dedicated graphics device are described herein. In one embodiment, an example of a process for generating DRR (digitally reconstructed radiography) images includes, but is not limited to, loading a volume rendering program into a graphics device, the volume rendering program representing a predetermined algorithm according to a non-linear attenuation model. In response to 3D scan data, the graphics device is invoked to execute the volume rendering program to perform at least a portion of volume rendering operations on at least a portion of the 3D scan data, which may include modifying the 3D scan data according to the predetermined algorithm to compensate for a difference between a first attenuation of an object with respect to a second attenuation associating a known intensity of the object. Other methods and apparatuses are also described.",
	"url": null,
	"owner": "Accuray Inc.",
	"publication_number": "07330578",
	"publication_date": "2008-02-12",
	"application_number": "11166686",
	"application_date": "2005-06-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Determining which software component versions of an issue resolution are included in a version of a software development project at a particular time",
	"summary": "",
	"abstract": "Systems and methods for automatically determining, for a version of a software developing project, which software component versions defined for an issue resolution at a particular time, for example, a time in the past, are included in the project version at the particular time. Such determination may include determining the software component versions included in an issue resolution at a particular time, and, for each determined version, determining whether the version is included in the project version. The software components that should be propagated to other versions of a software development project so that these versions have a complete issue resolution may be determined. Further, differences between software project versions, from an issue resolution prospective, may be determined.",
	"url": null,
	"owner": "Accurev, Inc.",
	"publication_number": "07437722",
	"publication_date": "2008-10-14",
	"application_number": "10894697",
	"application_date": "2004-07-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network security testing",
	"summary": "",
	"abstract": "To answer the security needs of the market, a preferred embodiment was developed. A preferred embodiment provides real-time network security vulnerability assessment tests, possibly complete with recommended security solutions. External vulnerability assessment tests can emulate hacker methodology in a safe way and enable study of a network for security openings, thereby gaining a true view of risk level without affecting customer operations. Because this assessment can be performed over the Internet, both domestic and worldwide corporations benefit. A preferred embodiment's physical subsystems combine to form a scalable holistic system that can be able to conduct tests for thousands of customers any place in the world. The security skills of experts can be embedded into a preferred embodiment systems and automated the test process to enable the security vulnerability test to be conducted on a continuous basis for multiple customers at the same time. A preferred embodiment can reduce the work time required for security practices of companies from three weeks to less than a day, as well as significantly increase their capacity. Component subsystems typically include a Database, Command Engine, Gateway, multiple Testers, Report Generator, and an RMCT.",
	"url": null,
	"owner": "Achilles Guard Inc.",
	"publication_number": "07325252",
	"publication_date": "2008-01-29",
	"application_number": "10043654",
	"application_date": "2002-01-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network interaction analysis arrangement",
	"summary": "",
	"abstract": "In a network through which service providing nodes are interconnected, one or more software elements at each service providing node process the network operations. A client interceptor coupled in an examine node to a selected software element intercepts transmissions from the software element to record transmission flow control information. A server interceptor coupled in the examine mode to the selected software element intercepts transmissions to the software element to record transmission flow control information. An administrative node of the network examines the transmission flow control information from the selected software elements to assess network operation.",
	"url": null,
	"owner": "Actional Corporation",
	"publication_number": "07330889",
	"publication_date": "2008-02-12",
	"application_number": "10379894",
	"application_date": "2003-03-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for authentication through a communications pipe",
	"summary": "",
	"abstract": "A method and system for authenticating an end user to one or more remote computer systems using a communications pipe to send authentication codes from a personal security device to one or more remote computer systems and limiting authentication transactions to a secure hub.",
	"url": null,
	"owner": "Activcard",
	"publication_number": "07363486",
	"publication_date": "2008-04-22",
	"application_number": "09844439",
	"application_date": "2001-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for authenticating a personal security device vis-u00e0-vis at least one remote computer system",
	"summary": "",
	"abstract": "The present invention provides a method for authenticating at least one Personal Security Device PSD () vis-u00f4-vis at least a first Remote Computer System () over a first network () using at least one Client () as a host to said at least one PSD (), said method comprising the steps of: a) establishing at least one communications pipe () over said first network () between said at least one PSD () and said at least first Remote Computer System (); and b) running a challenge/response process between said Remote Computer System () and said at least one PSD () through said at least one communications pipe ().",
	"url": null,
	"owner": "Activcard Ireland, Limited",
	"publication_number": "07316030",
	"publication_date": "2008-01-01",
	"application_number": "10476316",
	"application_date": "2002-04-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic redistribution of parity groups",
	"summary": "",
	"abstract": "A system and method for dynamic redistribution of parity groups is described. The system and method for dynamic redistribution of parity groups operates on a computer storage system that includes a plurality of disk drives for storing parity groups. Each parity group includes storage blocks. The storage blocks include one or more data blocks and a parity block that is associated with the data blocks. Each of the storage blocks is stored on a separate disk drive such that no two storage blocks from a given parity set reside on the same disk drive. The computer system further includes a redistribution module to dynamically redistribute parity groups by combining some parity groups to improve storage efficiency.",
	"url": null,
	"owner": "Adaptec, Inc.",
	"publication_number": "07356730",
	"publication_date": "2008-04-08",
	"application_number": "11018114",
	"application_date": "2004-12-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method of handling file metadata",
	"summary": "",
	"abstract": "A network storage system comprises data storage, one or more file system APIs, and a metadata handler. The data storage can comprise file data and associated metadata. The file system APIs can be configured to read and write file data and metadata to and from the data storage. The metadata handler can have a library of functions for handling the metadata. The library can include a metadata blob creation function and a metadata blob extraction function. The metadata blob creation function cooperates with the file system APIs to read source metadata associated with specified file data and creates and populates a metadata blob from which a substantial copy of the source metadata can be generated. The metadata blob extraction function receives at least a metadata blob, extracts information from the metadata blob, and cooperates with the file system APIs to generate destination metadata, a substantial copy of the source metadata.",
	"url": null,
	"owner": "Adaptec, Inc.",
	"publication_number": "07454406",
	"publication_date": "2008-11-18",
	"application_number": "11118617",
	"application_date": "2005-04-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Customizable web site access system and method therefore",
	"summary": "",
	"abstract": "The web site access system comprises an auto composer including the components of a composer and performer. The composer composes a web slide show presentation through automatic extraction of web page details from a desired web page. The web page details includes one or more of the following: a plurality of hyperlinks found within the desired web page that provides a plurality of URLs; a presentation/rendition text file within the desired web page that provides a plurality of URLs; and a meta tag within the desired web page that provides a plurality of URLs. The performer display the web slide show presentation in order of the plurality of URLS provided by the extracted web page details.",
	"url": null,
	"owner": "Adaptive Avenue Associates, Inc.",
	"publication_number": "07428707",
	"publication_date": "2008-09-23",
	"application_number": "10698332",
	"application_date": "2003-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Extensible help facility for a computer software application",
	"summary": "",
	"abstract": "Content obtained from a help file containing at least two interactive links in a sequence may be displayed in a help facility. Each interactive link may be associated with at least one user-activated step in a computer software application to perform in connection with a help topic according to the sequence so that once a user activates one of these links out of sequence, an operation in the computer software application may be invoked to effect the at least one user-activated step.",
	"url": null,
	"owner": "Adobe Systems Incorporated",
	"publication_number": "07415696",
	"publication_date": "2008-08-19",
	"application_number": "11293528",
	"application_date": "2005-12-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Merging images to form a panoramic image",
	"summary": "",
	"abstract": "Methods, systems, and apparatus, including computer program products, for merging images of segments of a view. Methods include: receiving, from a network, a first image representing a first segment of the view and a second image representing a second segment of the view; determining the position of the second segment of the view relative to the first segment of the view; blending the first image with the second image based on the determined position of the second segment relative to the first segment to form a panoramic image of the view; and transmitting the panoramic image over the network.",
	"url": null,
	"owner": "Adobe Systems Incorporated",
	"publication_number": "07386188",
	"publication_date": "2008-06-10",
	"application_number": "11498948",
	"application_date": "2006-08-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for debugging programs run in a variety of environments",
	"summary": "",
	"abstract": "A system and method allows a debugging tool to operate in an environment differently from an expected environment of an application being debugged, yet allows the application to be debugged in an environment in which it is expected to operate. Debugging commands are communicated to an application environment from the debugger running in a different environment and debugging information is communicated from the application environment to the debugger.",
	"url": null,
	"owner": "Adobe Systems Incorporated",
	"publication_number": "07370320",
	"publication_date": "2008-05-06",
	"application_number": "10201055",
	"application_date": "2002-07-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transforming server-side processing grammars",
	"summary": "",
	"abstract": "A translator for translating server-side instructions includes a set of rules for translating server-side instructions from a first grammar to a second different grammar and a translation engine, such as an extensible style-sheet language translator (XSLT), for translating the server-side instructions based on the set of rules.",
	"url": null,
	"owner": "Adobe Systems Incorporated",
	"publication_number": "07356807",
	"publication_date": "2008-04-08",
	"application_number": "11778609",
	"application_date": "2007-07-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Caching user information in an integrated communication system",
	"summary": "",
	"abstract": "An integrated messaging system for performing various types of messaging across different types of networks, including integrated user interfaces and administrator interfaces. Embodiments include a communication server that couples among networks of different types, and an interface module that couples to the communication server. The interface module may be hosted on a messaging server of a network. The interface module pulls various user information from the messaging server, including information relevant to at least the network that includes the messaging server. A cache couples to the communication server and to the interface module to hold information from the communication server and/or the user information pulled from messaging server. The interface module directs a message from the messaging server and/or the cache to at least one device on the networks using the user information.",
	"url": null,
	"owner": "Adomo, Inc.",
	"publication_number": "07321655",
	"publication_date": "2008-01-22",
	"application_number": "11053272",
	"application_date": "2005-02-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Controlling messaging actions using form-based user interface",
	"summary": "",
	"abstract": "An integrated messaging system for performing various types of messaging across different types of networks, including integrated user interfaces and administrator interfaces. Embodiments include a communication server that couples among networks of different types, and an interface module that couples to the communication server. The interface module may be hosted on a messaging server of a network. The interface module pulls various user information from the messaging server, including information relevant to at least the network that includes the messaging server. A cache couples to the communication server and to the interface module to hold information from the communication server and/or the user information pulled from messaging server. The interface module directs a message from the messaging server and/or the cache to at least one device on the networks using the user information.",
	"url": null,
	"owner": "Adomo, Inc.",
	"publication_number": "07346150",
	"publication_date": "2008-03-18",
	"application_number": "11053146",
	"application_date": "2005-02-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integrating messaging server directory service with a communication system voice mail message interface",
	"summary": "",
	"abstract": "An integrated messaging system for performing various types of messaging across different types of networks, including integrated user interfaces and administrator interfaces. Embodiments include a communication server that couples among networks of different types, and an interface module that couples to the communication server. The interface module may be hosted on a messaging server of a network. The interface module pulls various user information from the messaging server, including information relevant to at least the network that includes the messaging server. A cache couples to the communication server and to the interface module to hold information from the communication server and/or the user information pulled from messaging server. The interface module directs a message from the messaging server and/or the cache to at least one device on the networks using the user information.",
	"url": null,
	"owner": "Adomo, Inc.",
	"publication_number": "07330537",
	"publication_date": "2008-02-12",
	"application_number": "11053709",
	"application_date": "2005-02-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for securing the operating system in a handheld medical device and apparatus",
	"summary": "",
	"abstract": "A method includes disabling a synchronization mechanism of a handheld device and disabling one or more hardware buttons on the handheld device. The method also includes removing user access to one or more settings on the handheld device. In addition, the method includes removing one or more system functions on the handheld device.",
	"url": null,
	"owner": "Advanced Neuromodulation Systems, Inc.",
	"publication_number": "07330763",
	"publication_date": "2008-02-12",
	"application_number": "10426569",
	"application_date": "2003-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Datalog support in a modular test system",
	"summary": "",
	"abstract": "A method for communicating test information from a source to a destination is disclosed. The method includes providing a modular test system, where the modular test system comprises a system controller for controlling at least one site controller, the at least one site controller for controlling at least one test module. The method further includes providing a datalog framework for supporting extension of user-defined datalog formats, providing support classes for supporting user-initiated datalog events, receiving a datalog event requesting for communicating input test information from the source to the destination, configuring output test information based upon the destination, the datalog framework and the support classes, and transferring the output test information to the destination.",
	"url": null,
	"owner": "Advantest America R&D Center, Inc.",
	"publication_number": "07430486",
	"publication_date": "2008-09-30",
	"application_number": "10917821",
	"application_date": "2004-08-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Portable distributed application framework",
	"summary": "",
	"abstract": "A portable distributed application framework that uses a definition file describing a structure of data and commands to be used by the framework to interface with an application. A proxy, responsive to a definition file, creates and receives messages based on the definition file. The created messages contain data and commands used to control the application while the received messages contain data from the application. A control, responsive to the definition file, relays messages between the proxy and the application. A housing, responsive to the definition file and the messages from the proxy, provides the application with configuration information and receives data from the application.",
	"url": null,
	"owner": "Agilent Technologies Inc.",
	"publication_number": "07467078",
	"publication_date": "2008-12-16",
	"application_number": "10893668",
	"application_date": "2004-07-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Content storage and replication in a managed internet content storage environment",
	"summary": "",
	"abstract": "A method for content storage on behalf of participating content providers begins by having a given content provider identify content for storage. The content provider then uploads the content to a given storage site selected from a set of storage sites. Following upload, the content is replicated from the given storage site to at least one other storage site in the set. Upon request from a given entity, a given storage site from which the given entity may retrieve the content is then identified. The content is then downloaded from the identified given storage site to the given entity. In an illustrative embodiment, the given entity is an edge server of a content delivery network (CDN).",
	"url": null,
	"owner": "Akamai Technologies, Inc.",
	"publication_number": "07340505",
	"publication_date": "2008-03-04",
	"application_number": "10113182",
	"application_date": "2002-04-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for tiered distribution in a content delivery network",
	"summary": "",
	"abstract": "A tiered distribution service is provided in a content delivery network (CDN) having a set of surrogate origin (namely, u201cedgeu201d) servers organized into regions and that provide content delivery on behalf of participating content providers, wherein a given content provider operates an origin server. According to the invention, a cache hierarchy is established in the CDN comprising a given edge server region and either (a) a single parent region, or (b) a subset of the edge server regions. In response to a determination that a given object request cannot be serviced in the given edge region, instead of contacting the origin server, the request is provided to either the single parent region or to a given one of the subset of edge server regions for handling, preferably as a function of metadata associated with the given object request. The given object request is then serviced, if possible, by a given CDN server in either the single parent region or the given subset region. The original request is only forwarded on to the origin server if the request cannot be serviced by an intermediate node.",
	"url": null,
	"owner": "Akamai Technologies, Inc.",
	"publication_number": "07376716",
	"publication_date": "2008-05-20",
	"application_number": "11593287",
	"application_date": "2006-11-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Scalable, high performance and highly available distributed storage system for Internet content",
	"summary": "",
	"abstract": "A method for content storage on behalf of participating content providers begins by having a given content provider identify content for storage. The content provider then uploads the content to a given storage site selected from a set of storage sites. Following upload, the content is replicated from the given storage site to at least one other storage site in the set. Upon request from a given entity, a given storage site from which the given entity may retrieve the content is then identified. The content is then downloaded from the identified given storage site to the given entity. In an illustrative embodiment, the given entity is an edge server of a content delivery network (CDN).",
	"url": null,
	"owner": "Akamai Technologies, Inc.",
	"publication_number": "07472178",
	"publication_date": "2008-12-30",
	"application_number": "10113183",
	"application_date": "2002-04-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Adaptable control plane architecture for a network element",
	"summary": "",
	"abstract": "A method, computer program product, and data processing system for distributed control of network elements is disclosed. The present invention divides the control plane functions of a network element into subsystems, which are implemented as processes or threads. A bus-like messaging framework allows the subsystems to communicate with each other. Under the messaging framework, subsystems can communicate with each other without regard for whether the subsystems reside on separate (possibly heterogeneous) hardware platforms or on the same processor. This architecture allows individual components of the control plane functions of a single network element to be placed on different processors or on the same processor, depending on the desired degree of parallel processing or level of integration with low-level network-element hardware.",
	"url": null,
	"owner": "Alcatel Lucent",
	"publication_number": "07315897",
	"publication_date": "2008-01-01",
	"application_number": "10651159",
	"application_date": "2003-08-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic device diagnostic methods and systems",
	"summary": "",
	"abstract": "Diagnostic methods and systems for electronic devices are disclosed. Separate dedicated diagnostic software code and operating code are respectively executed in a diagnostic mode and an operating mode of an electronic device. A determination may be made as to whether the electronic device is to be operated in the diagnostic mode or the operating mode when the electronic device is started, for example. A transition to the diagnostic mode from the operating mode may also be made in response to errors detected by online diagnostic tests performed in the operating mode. Results of diagnostic tests are preferably stored in a non-volatile memory for subsequent access, independent of the operating software code.",
	"url": null,
	"owner": "Alcatel Lucent",
	"publication_number": "07428663",
	"publication_date": "2008-09-23",
	"application_number": "10857826",
	"application_date": "2004-06-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Facilitating integration of communications network equipment inventory management",
	"summary": "",
	"abstract": "A physical asset management system as disclosed herein is capable of carrying-out a method for facilitating integration of communications network equipment inventory management. In at least one embodiment of the method for facilitating integration of communications network equipment inventory management, the method includes assigning system-readable identification to an asset item of a communication network, receiving the system-readable identification of the asset item at a physical asset manager in response to installing the asset item in the communication network, and creating an informational link between an on-line sub-object of the asset item and an off-line sub-object of the asset item. The system-readable identification enables the physical asset manager to create the informational link between the on-line sub-object of the asset item and the off-line sub-object of the asset item.",
	"url": null,
	"owner": "Alcatel Lucent",
	"publication_number": "07315887",
	"publication_date": "2008-01-01",
	"application_number": "09833085",
	"application_date": "2001-04-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Micro-mobility network routing system and method",
	"summary": "",
	"abstract": "A micro-mobility network routing system and method implementing a protocol that extends the macro mobility support of Mobile IP to support micro mobility is disclosed which permits a more efficient and easily implemented Internet routing protocol for network devices to be affected. The macro mobility feature herein refers to the notion in which the mobile node gains access to the Internet, while retaining the same IP address. This concept is used only once when the mobile node enters the coverage area of a foreign domain (eventually its home domain). The concept of micro mobility within this context eases routing packets to the mobile node while its moves within the foreign network. The present invention implements these new features via the use of message compositions and protocol extensions that extend the prior art Mobile IP protocols.",
	"url": null,
	"owner": "Alcatel Lucent",
	"publication_number": "07339928",
	"publication_date": "2008-03-04",
	"application_number": "10068525",
	"application_date": "2002-02-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Wireless sensing node powered by energy conversion from sensed system",
	"summary": "",
	"abstract": "A sensing system for sensing conditions or characteristics associated with a process or thing. The sensing system includes one or more energy converters and a sensor, which are coupled to the process or thing. A node is coupled to the sensor and the energy-converter, and the node is powered by output from the energy converter. In a more specific embodiment, the node includes a controller that implements one or more routines for selectively powering a wireless transmitter of the node based on a predetermined condition. The predetermined condition may specify that sensor output values are within a predetermined range or are below or above a predetermined threshold. Alternatively, the predetermined condition may specify that electrical energy output from the energy converter is below a predetermined threshold. A remote computer may be wirelessly connected to node and may include software and/or hardware that is adapted to process information output by the sensor and relayed to the computer via the node.",
	"url": null,
	"owner": "Alcoa Technical Center",
	"publication_number": "07466240",
	"publication_date": "2008-12-16",
	"application_number": "11335019",
	"application_date": "2006-01-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Portable data storage device and method of accessing data thereof",
	"summary": "",
	"abstract": "A portable data storage device includes a control unit coupled via a predetermined interface with a computer having an operating system with user authority limits, and a memory divided into a segment I for storing related applications, a public segment II for temporarily storing instructions and data, and a hidden segment III for saving client data. In a method of accessing data via the portable data storage device, when the computer is to write data into or read data from the segment III, the data to be written or read is first temporarily stored in the segment II, and specific read or write instructions for a read/write level application interface are written into the segment II by the applications in the segment I and executed, so as to complete data exchange and access between the portable data storage device and the computer.",
	"url": null,
	"owner": "Alcor Micro, Corp.",
	"publication_number": "07401195",
	"publication_date": "2008-07-15",
	"application_number": "10966801",
	"application_date": "2004-10-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program product for a collaborative decision platform",
	"summary": "",
	"abstract": "A system, method and computer program product are afforded for providing a collaborative decision platform adapted to run on a computer. Initially, an application capable of performing decision logic is executed. Information is then retrieved from a database in accordance with the decision logic. Information is also received from a user in accordance with the decision logic utilizing a user interface. The information is then processed utilizing the decision logic. In use, the foregoing steps are carried out by a collaborative decision platform capable of retrieving and receiving the information, and processing such information for different purposes by executing different applications each capable of performing different decision logic.",
	"url": null,
	"owner": "Aloft Media, LLC",
	"publication_number": "07401059",
	"publication_date": "2008-07-15",
	"application_number": "11045543",
	"application_date": "2005-01-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Personal information management system",
	"summary": "",
	"abstract": "A personal information management system stores associations between a user and the user's mobile hand held electronic and communication devices. The system receives input indicating the presence of the user and bonds with the mobile hand held devices associated with the identified user to the exclusion of other devices. Once the system has bonded to the user's mobile hand held devices, the user may access data stored on and control functions of the various hand held devices through a single common interface, the system may be used to place and receive cellular telephone calls, send and receive text messages, and record and play back audio messages.",
	"url": null,
	"owner": "Alps Electric Co., Ltd.",
	"publication_number": "07334726",
	"publication_date": "2008-02-26",
	"application_number": "11182730",
	"application_date": "2005-07-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for managing recurring orders in a computer network",
	"summary": "",
	"abstract": "The present invention is directed to a system and method for providing complete electronic commerce (u201cE-Commerceu201d) transactions and solutions for a marketing company's products via the World Wide Web, including facilities for signing up new customers and recruiting, training and supporting new Independent Business Owners through an interactive online process. In another aspect, the present invention relates to the combination of a marketing business with a membership buying opportunity using both electronic commerce and face-to-face transactions. The present invention is also directed to a system and method for combining a marketing business with a membership buying opportunity, so that Independent Business Owners participating in the marketing plan can introduce customers to a membership buying opportunity and earn bonuses or commissions based on the purchases by those members, while Members in the buying opportunity can consume products or, at their option, qualify to become Independent Business Owners.",
	"url": null,
	"owner": "Alticor Investments Inc.",
	"publication_number": "07359871",
	"publication_date": "2008-04-15",
	"application_number": "09714739",
	"application_date": "2000-11-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for data warehousing",
	"summary": "",
	"abstract": "An apparatus and method for implementing data warehousing systems. According to a first embodiment, a system may include a plurality of data warehouses, and a data warehouse manager configured to extract data sets from one or more data sources for storage in one or more of the plurality of data warehouses. Each of a first subset including two or more of the plurality of data warehouses may be configured to store a respective replica of a first data set extracted by the data warehouse manager. Further, the data warehouse manager may be further configured to allow a query dependent upon the first data set to be evaluated by one of the first subset of data warehouses before each respective replica of the first data set has been stored to a corresponding data warehouse of the first subset.",
	"url": null,
	"owner": "Amazon Technologies, Inc.",
	"publication_number": "07415487",
	"publication_date": "2008-08-19",
	"application_number": "11016563",
	"application_date": "2004-12-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing the release of electronic content using a template without version logic",
	"summary": "",
	"abstract": "A facility for rendering a dynamic electronic document is described. The dynamic electronic document has both a current and a future edition. The current edition incorporates a current version of a content item, while the future edition incorporates a future version of the content item. The facility receives a request to return the dynamic electronic document. In response to the request, the facility retrieves a template for the electronic document that contains a single identifier that identifies a group of content item versions containing both the current version of the content item and the future version of the content item. The facility uses the single identifier contained in the template, together with an indication of whether the current edition of the dynamic electronic document or the future version is being requested by the received request, to incorporate the appropriate version of the content item in the rendered dynamic electronic document.",
	"url": null,
	"owner": "Amazon.com, Inc.",
	"publication_number": "07373594",
	"publication_date": "2008-05-13",
	"application_number": "10427709",
	"application_date": "2003-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Trust grant and revocation from a master key to secondary keys",
	"summary": "",
	"abstract": "A method and apparatus is provided that allows code signed by a master key to grant trust to an arbitrary second key, and also allows code, referred to as an antidote and also signed by the master key to revoke permanently the trust given to the second key.",
	"url": null,
	"owner": "America Online, Incorporated",
	"publication_number": "07328337",
	"publication_date": "2008-02-05",
	"application_number": "10478767",
	"application_date": "2001-05-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for modular authentication and session management",
	"summary": "",
	"abstract": "Modular authentication and session management involves the use of discrete modules to perform specific tasks in a networked computing environment. There may be a separate authentication server that verifies the identity of the user and an authorization client that grants various levels of access to users. There may also be an authentication client that receives an initial request from a requesting application and forwards the request to the authentication server to verify the identity of the use. The authorization client may then be invoked to provide the necessary level of access. The use of discrete modules allows multiple business applications to use the same modules to perform user authentication tasks, thus alleviating the unnecessary multiplication of code.",
	"url": null,
	"owner": "American Express Travel Related Services Company, Inc.",
	"publication_number": "07454622",
	"publication_date": "2008-11-18",
	"application_number": "10334615",
	"application_date": "2002-12-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Instant messaging client having an embedded browser",
	"summary": "",
	"abstract": "Systems and techniques alerting a client of a state change at a remote server by creating a user profile indicating a preference to receive at least one alert corresponding to a change in state at the remote server; connecting to a communications system including the remote server; generating an address for the remote server from the user profile; navigating to the address of the remote server; retrieving data corresponding to a particular type of alert from the remote server; and using the retrieved data in delivering an alert to the client.",
	"url": null,
	"owner": "AOL LLC",
	"publication_number": "07392306",
	"publication_date": "2008-06-24",
	"application_number": "09624191",
	"application_date": "2000-07-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic user session",
	"summary": "",
	"abstract": "Systems and techniques for retrieving electronic data by establishing a connection to the communications system using a first account of the user; initiating a first communication session over the connection associated with the first account of the user; and automatically initiating over the same connection one or more additional communication sessions associated with one or more additional accounts of the user.",
	"url": null,
	"owner": "AOL LLC, a Delaware Limited Liability Company",
	"publication_number": "07380007",
	"publication_date": "2008-05-27",
	"application_number": "09842025",
	"application_date": "2001-04-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Direct file transfer between subscribers of a communications system",
	"summary": "",
	"abstract": "Systems and techniques for transferring a file from a first client associated with a first subscriber to a communications system to a second client associated with a second subscriber to the communications system by connecting from the first client to a communications system host; sending, through the communications system host, a request to the second client to establish a direct connection to the second client; when the second client accepts the request, establishing a direct connection to the second client that bypasses the communications system host; and transferring a file over the direct connection.",
	"url": null,
	"owner": "AOL LLC, a Delaware Limited Liability Company",
	"publication_number": "07366779",
	"publication_date": "2008-04-29",
	"application_number": "09597784",
	"application_date": "2000-06-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Displaying search results",
	"summary": "",
	"abstract": "Website search results obtained from searching multiple electronic information stores may be displayed transparently without distinguishing the electronic information store. The search may be performed by a web host and may include receiving at least one search term that then is compared with first electronic information within a first electronic information store to determine whether matches exist, where the first electronic information includes content provided by an internal source. The search term also is compared with second electronic information within a second electronic information store to determine whether matches exist, where the second electronic information includes content provided by an external source. Results are displayed based on matches that are determined to exist with the first electronic information and the second electronic information. The results are combined in a single list of results.",
	"url": null,
	"owner": "AOL LLC, a Delaware Limited Liability Company",
	"publication_number": "07359951",
	"publication_date": "2008-04-15",
	"application_number": "09749627",
	"application_date": "2000-12-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Inter-process communication on a computer",
	"summary": "",
	"abstract": "The invention provides a method of inter-process communication between at least two application processes on one computer. One embodiment of the invention includes a first process of a first application determining a name of a first file in a file system of the computer, the name of the first file being associated with a second application, the first file containing information for the first process to connect to a second process of the second application for inter-process communication; and the first process initiating a first connection to the second process using the information contained in the first file; the first process communicating with the second process using the first connection if the first connection is successfully established; and the first process starting a third process of the second application if the first process fails to establish a connection with the second process.",
	"url": null,
	"owner": "AOL LLC, a Delaware limited liability company",
	"publication_number": "07454758",
	"publication_date": "2008-11-18",
	"application_number": "10774356",
	"application_date": "2004-02-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Accessories for teleconference component",
	"summary": "",
	"abstract": "A system and method providing capability expansion in a teleconferencing environment. One or more accessories are invoked and arranged in an accessory stack associated with an application. The accessory stack is positioned logically between a teleconferencing application and a conference component in both a local and a remote end point. Each accessory provides at least one additional capability to the system independent of the application and the conference component",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07392286",
	"publication_date": "2008-06-24",
	"application_number": "11497401",
	"application_date": "2006-07-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Navigation history",
	"summary": "",
	"abstract": "A method, apparatus, system, and signal-bearing medium that in an embodiment represent previously-accessed data items as nodes in a tree or trees and display the tree or trees with the access time on an axis. The root node of a tree represents a data item accessed via an address entered by a user while a child node of the tree represents a data item selected from a parent node of the child node. In an embodiment, data items that were displayed in the same window as their parents have different connectors between their associated nodes than do data items that were displayed in different windows from their parents.",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07373614",
	"publication_date": "2008-05-13",
	"application_number": "10775941",
	"application_date": "2004-02-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for input/output scheduling",
	"summary": "",
	"abstract": "A system and method for Input/Output scheduling are described herein. In one embodiment, the method includes installing a plurality of Input/Output (I/O) schedulers to schedule I/O requests for a plurality of I/O devices, wherein each of the I/O schedulers schedules I/O requests according to a different scheduling method. The method also includes scheduling one of the I/O requests with at least one of the plurality of I/O schedulers. The method also includes determining that a second I/O scheduler replaces an I/O scheduler of the plurality of I/O schedulers, installing the second I/O scheduler, and scheduling one of the I/O requests with the second scheduler.",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07457886",
	"publication_date": "2008-11-25",
	"application_number": "10867622",
	"application_date": "2004-06-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, computer program and apparatus for operating system dynamic event management and task scheduling using function calls",
	"summary": "",
	"abstract": "Method, computer program, system and apparatus for operating system dynamic event management and task scheduling using function calls. Method, computer program product, and system for non-preemptively scheduling tasks in a computer system. Scheduler and scheduling method that schedules tasks that are broken into a number of short actions, without preempting the actions as they are executed and without assigning a priority to tasks. Invention decreases the overhead as compared to existing methods and systems.",
	"url": null,
	"owner": "ARC International IP, Inc.",
	"publication_number": "07451447",
	"publication_date": "2008-11-11",
	"application_number": "10669542",
	"application_date": "2003-09-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic equipment setting information creating method and apparatus, and security policy creating method and associated apparatus",
	"summary": "",
	"abstract": "A method and an associated apparatus for automatically creating security policies written in specific languages of specific devices based on a security policy written in natural language. A product level policy creating apparatus comprises language conversion means and a plurality of specific device script creating means. The language conversion means converts a product level policy of a first level into an interface language. The specific device script creating means creates product level policies of a second level for the corresponding specific devices. Defining this interface language is synonymous with defining an API (Application Programming Interface). Since the API is defined thus, plug-in modules for functioning as the specific device script creating means can be easily created based on the API.",
	"url": null,
	"owner": "Asgent, Inc.",
	"publication_number": "07337105",
	"publication_date": "2008-02-26",
	"application_number": "10251843",
	"application_date": "2002-09-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Remote access, emulation, and control of office equipment",
	"summary": "",
	"abstract": "A business has a main office () which has a controller (), a plurality of telephones, a plurality of computers, a PBX and/or an ACD (), and a plurality of corporate resources () such as servers, hosts, applications, databases, routers, gateways, switches, a voicemail system, an e-mail system, and facsimile servers. A user at the main office () has access to the various corporate resources and also has a portable communications device (), such as a laptop computer, with which to place a call to the controller via a communications link () such as the Internet, to send user commands to and receive the resultant status, information, or operation, from, the controller, to access any of the corporate resources and data, and to make calls to and receive communications from outside parties (). In addition, the user may create a personal profile which causes the controller to forward selected communications to him, via the Internet, wherever the user may be. The laptop computer allows the user to operate in the same manner as if the user was actually in his office, including placing, receiving, forwarding, and conferencing telephone calls. As a result, regardless of where the user is located, and regardless of what equipment is actually available at the current location of the user, the user can conduct business using the same devices and features that are available at the user's office.",
	"url": null,
	"owner": "Aspect Software, Inc.",
	"publication_number": "07324528",
	"publication_date": "2008-01-29",
	"application_number": "10059872",
	"application_date": "2002-01-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Telephone synchronization with software applications and documents",
	"summary": "",
	"abstract": "A method and system are provided for locating and retrieving stored computer files that are related to an incoming telephone call directed to a computer user. A called party receives a telephone call while the called party is operating her computer. A computer telephony interface receives caller identification information on the calling party and uses that information to launch a software synchronization program for locating files stored on the called party's computer that are related to the calling party. A dialog box is displayed on the screen of the called party's computer that provides the caller identification on the calling party and provides an icon for displaying a list of stored files related to the incoming caller. The list of files may be automatically presented to the called party, or the called party may retrieve the list of stored files by selection of the icon presented in the dialog box. Selection of one of the stored files by the called party causes an instance of an application program, such as a word processing program responsible for creation and storage of the selected file, to be launched for displaying the selected file.",
	"url": null,
	"owner": "AT&T BLS Intellectual Property, Inc.",
	"publication_number": "07333597",
	"publication_date": "2008-02-19",
	"application_number": "10979464",
	"application_date": "2004-11-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for adjusting a network device configuration change distribution schedule",
	"summary": "",
	"abstract": "The invention comprises a method and apparatus for adjusting a distribution schedule controlling distribution of network device configuration changes associated with a plurality of network devices. Specifically, the method comprises determining a distribution status of the distribution of network device configuration changes, comparing the distribution status to the distribution schedule, and adjusting the distribution schedule in response to a difference between the distribution schedule and the distribution status.",
	"url": null,
	"owner": "AT&T Corp.",
	"publication_number": "07385938",
	"publication_date": "2008-06-10",
	"application_number": "11049321",
	"application_date": "2005-02-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application server and method to perform hierarchical configurable data validation",
	"summary": "",
	"abstract": "Clients using standard software protocols may access a validation application server for validation service on data via a number of methods including Internet applications, a Java RMI server, a CORBA gateway server and graphical screen interphase applications. The validation server provides validation service on the data based on dynamically-maintained, centrally-stored validation functions.",
	"url": null,
	"owner": "AT&T Delaware Intellectual Property, Inc.",
	"publication_number": "07353248",
	"publication_date": "2008-04-01",
	"application_number": "09916330",
	"application_date": "2001-07-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automated diagnosis for computer networks",
	"summary": "",
	"abstract": "Systems for providing automated diagnosis of problems for an electronic network include a central diagnosis engine configured to include modules that rank identified policy/configuration changes into potential causes, verify the ranked potential causes and determine whether any of the ranked potential causes is a likely cause or contributor to the problem. An estimator module is configured to calculate distances associated with the ranked potential causes such that a list of potential causes of the problem can be presented in order of likelihood. Other systems and methods are also provided.",
	"url": null,
	"owner": "AT&T Delaware Intellectual Property, Inc.",
	"publication_number": "07409593",
	"publication_date": "2008-08-05",
	"application_number": "10611634",
	"application_date": "2003-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatically facilitated support for complex electronic services",
	"summary": "",
	"abstract": "Systems for an automatically facilitated support for complex electronic services include a plurality of databases having customer records and problem solving information to assist a user with problem resolution and a cycler module configured to access the databases. The cycler module is further configured to search the databases for database pages having keywords that match input provided by the user. Other systems and methods are also provided.",
	"url": null,
	"owner": "AT&T Delaware Intellectual Property, Inc.",
	"publication_number": "07324986",
	"publication_date": "2008-01-29",
	"application_number": "10610807",
	"application_date": "2003-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for converged service creation and execution environment applications",
	"summary": "",
	"abstract": "Embodiments of the present invention relate to systems and methods for a converged service creation and execution application. In an embodiment, an application is coupled to an application server. One or more open application programming interfaces are coupled to the application server, and service session management logic is also coupled to the application server.",
	"url": null,
	"owner": "AT&T Delaware Intellectual Property, Inc.",
	"publication_number": "07458084",
	"publication_date": "2008-11-25",
	"application_number": "11202988",
	"application_date": "2005-08-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for performance measurement quality assurance",
	"summary": "",
	"abstract": "In order to provide in-region, interLATA service, a bell operating company (BOC) must provide telecommunications service to competitive local exchange carriers (CLEC) in a non-discriminatory manner. To demonstrate that the BOC service to the CLEC is non-discriminatory, the BOC provides a series of performance measures to regulatory agencies and to the CLEC. A system and method is described for ensuring the quality of those performance measurements. The system and method provide for identifying sub-processes within a performance measurement process (PMP), identifying critical audit points within each sub-process, and implementing control measures corresponding to each critical audit point. The system and method help to eliminate the need for time-consuming and expensive third-party audits of the PMP.",
	"url": null,
	"owner": "AT&T Delaware Intellectual Property, Inc.",
	"publication_number": "07325000",
	"publication_date": "2008-01-29",
	"application_number": "10871296",
	"application_date": "2004-06-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods, systems, and storage mediums for implementing voice-commanded computer functions",
	"summary": "",
	"abstract": "Exemplary embodiments include a method, system, and storage medium for implementing voice-initiated computer functions. The method includes translating a voice command into a machine-readable format. The voice command requests implementation of a function. The method also includes executing the function requested in the voice command, and acknowledging whether the function was successfully completed.",
	"url": null,
	"owner": "AT&T Delaware Intellectual Property, Inc.,",
	"publication_number": "07403898",
	"publication_date": "2008-07-22",
	"application_number": "10923657",
	"application_date": "2004-08-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automating the life cycle of a distributed computing application",
	"summary": "",
	"abstract": "A system for automating the life cycle of a software application is provided. The software application utilizes computing resources distributed over a network. A representative system includes creating logic operable to create a task list which describes how at least one stage in the application life cycle is to be performed, and processing logic responsive to the creating logic, operable to process the task list to perform at least one stage in the application life cycle. The processing logic is integrated with a development environment, and the development environment is used to develop the software application.",
	"url": null,
	"owner": "AT&T Intellectual Property I, L.P.",
	"publication_number": "07437706",
	"publication_date": "2008-10-14",
	"application_number": "10608942",
	"application_date": "2003-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and software for maintaining network access and security",
	"summary": "",
	"abstract": "A system, method and apparatus for securing communications between a trusted network and an untrusted network are disclosed. A perimeter client is deployed within the trusted network and communicates over a session multiplexing enabled protocol with a perimeter server deployed within a demilitarized zone network. The perimeter client presents requests to make available and communication initiation requests to the perimeter server which presents corresponding sockets to the untrustred network. The session multiplexing capabilities of the protocol used between the perimeter server and perimeter client permit a single communication session therebetween to support a plurality of communication sessions between the perimeter server and untrusted network. In the event data flows across the communication sessions are encrypted, decryption of the data flows is left to the components at the end points of the communication session, thereby restricting exposure of privileged information to areas within trusted networks.",
	"url": null,
	"owner": "AT&T Intellectual Property I, L.P.",
	"publication_number": "07444505",
	"publication_date": "2008-10-28",
	"application_number": "10829702",
	"application_date": "2004-04-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and apparatus for presenting forms and publishing form data",
	"summary": "",
	"abstract": "A computer system, method, and computer-readable medium for presenting forms and publishing form data are provided. A software component is operative to determine if a request for a network resource containing a form has been received. If such a request has been received, the software component determines whether a previously compiled class file should be utilized to respond to the form request. If a previously compiled class file cannot be utilized, the software component compiles a class file capable of generating the fields of the requested form. When the class file is compiled, a field engine table is consulted and field names for the fields to be placed on the requested form are retrieved. A field name specified in the field engine table is associated with the correspondence fields in a form. When a submission containing response data for the fields in the form as received, the software component saves the response data in an output table having fields named identically to the fields in the form.",
	"url": null,
	"owner": "AT&T Intellectual Property I, L.P.",
	"publication_number": "07469270",
	"publication_date": "2008-12-23",
	"application_number": "09993787",
	"application_date": "2001-11-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for managing broadband services",
	"summary": "",
	"abstract": "A system and method are described for selecting a service state using a configurable abstraction layer. A comparison is made between network parameters of a Network Performance Layer and network services of a Service Layer. Once network parameters are within a threshold for providing a given service, a state change can be made in the configuration parameters to suit the provided service.",
	"url": null,
	"owner": "AT&T Intellectual Property I, L.P.",
	"publication_number": "07453822",
	"publication_date": "2008-11-18",
	"application_number": "11037901",
	"application_date": "2005-01-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "VoiceXML and rule engine based switchboard for interactive voice response (IVR) services",
	"summary": "",
	"abstract": "The present application discloses a call routing system and a method of communicating with a call originator. The call routing system includes a voice converted data module having an input to receive an incoming call, an interactive voice response dialog module responsive to the voice converted data module; and a call routing module responsive to the voice converted data module. The call routing module is to route the incoming call to a destination. The method of communicating with an originator of a call includes receiving a call at an automated call handling system; performing an evaluation of the call based on a set of business rules; routing the call to an interactive voice response unit based on the evaluation, and in response to the call, automatically scheduling and sending an email to the originator of the call. The email includes a targeted communication message relating to the subject matter of the call.",
	"url": null,
	"owner": "AT&T Intellectual Property I, L.P.",
	"publication_number": "07460652",
	"publication_date": "2008-12-02",
	"application_number": "10672292",
	"application_date": "2003-09-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for providing automated audible backchannel responses",
	"summary": "",
	"abstract": "A voice processing system comprises a processing device that processes and receives a stream of voice input as a user is speaking. A software program executes program steps for determining a predetermined pattern of speech and silence during processing of stream of voice input so as to play or present the predetermined backchannel response to the user. A method provides an audible backchannel response between the voice processing system and the user, while the user is speaking, in particular, recording a message. The method includes monitoring the message to determine a predetermined pattern of speech and silence based on timing between the speech and silence periods. Then, the method produces the audible backchannel response based on the predetermined pattern. An audible user interface includes a speech processor that processes or classifies an audio message in the telecommunication device as speech and silence frame while a calling party is speaking, in particular, recording the audio message to a called party. A control circuitry cooperates with the speech processor and responds to a predetermined pattern of the speech and silence segments so as to play the preset backchannel response in audible form to the calling party.",
	"url": null,
	"owner": "AT&T Intellectual Property II, L.P.",
	"publication_number": "07469207",
	"publication_date": "2008-12-23",
	"application_number": "11144154",
	"application_date": "2005-06-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods, systems, and computer program products for providing authentication in a computer environment",
	"summary": "",
	"abstract": "Exemplary embodiments relate to methods, systems, and computer program products for providing authentication in a computer environment. The method includes receiving a request for a web service from a client. The request is received at a J2EE based application server hosting one or more applications. The request includes a Kerberos security token and a Kerberos service ticket. Each application has its own Kerberos identity. It is verified that the client has access to the web service using the Kerberos security token and Kerberos service ticket as input to the verifying. The client is provided a connection to the web service if the verifying results in a determination that the client has access to the web service.",
	"url": null,
	"owner": "AT&T Intellectual Property, I,L.P.",
	"publication_number": "07461400",
	"publication_date": "2008-12-02",
	"application_number": "11022257",
	"application_date": "2004-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for customer access to messaging and configuration data",
	"summary": "",
	"abstract": "A method for providing message information to a subscriber in a wireless network includes reading a cookie from a browser, modifying the cookie with the message information, transmitting the modified cookie to the browser, and displaying data to the subscriber based on the message information contained in the cookie.",
	"url": null,
	"owner": "AT&T Mobility II LLC",
	"publication_number": "07401148",
	"publication_date": "2008-07-15",
	"application_number": "10299552",
	"application_date": "2002-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for handling file attachments",
	"summary": "",
	"abstract": "A method and system for forwarding an attachment sent to a wireless device includes receiving a message with an attachment within a wireless network, detecting the attachment, accessing a forwarding address associated with the message, and sending the attachment to the forwarding address.",
	"url": null,
	"owner": "AT&T Mobility II LLC",
	"publication_number": "07317697",
	"publication_date": "2008-01-08",
	"application_number": "10299409",
	"application_date": "2002-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "High bandwidth delivery and internet access for airborne passengers",
	"summary": "",
	"abstract": "A method and a communications system in which a request for data transmitted by an airborne transmitter over a low-bandwidth air-to-ground communication system uplink and received by a ground-based receiver. The requested data is then transmitted over a high-bandwidth communication system downlink, such as a DBS satellite system downlink, preferably using an MPEG-2 compression technique, and received by an airborne receiver located on the same aircraft as the airborne transmitter. The received request for data is transmitted to a data network that contains the requested data, such as the Internet or a private data network, using circuit-switched techniques. According to the invention, the requested data includes one of video information, audio information and textual information.",
	"url": null,
	"owner": "AT&T Mobility II, LLC",
	"publication_number": "RE040476",
	"publication_date": "2008-09-02",
	"application_number": "11295743",
	"application_date": "2005-12-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for the centralized storage of wireless customer information",
	"summary": "",
	"abstract": "A system for storing subscriber information in a centralized location includes a processor, memory coupled to the processor, and a data storage device coupled to the processor. The data storage device includes a subscriber profile portion for storing personal information about a subscriber. The subscriber profile portion includes a subscriber identification portion for storing an identification string. The subscriber profile portion is associated with an account type portion for storing account information, a portal portion for storing portal information, and an account status portion for storing account status information. The data storage device further includes a subscription portion for storing subscription information. The subscription portion is associated with a device portion for storing device information, a services portion for storing services information, and a mobile subscription portion for storing mobile subscription information.",
	"url": null,
	"owner": "AT&T Mobility II, LLC",
	"publication_number": "07454195",
	"publication_date": "2008-11-18",
	"application_number": "10299114",
	"application_date": "2002-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for communication with host internal area access",
	"summary": "",
	"abstract": "A computer implemented internal area access communication system is used for communication between internal applications originating internal communication and running in an internal transaction area on a host computer and external applications originating external communication and running outside of the internal transaction area. Included are an external communication module to convert external communication having formats noncompliant with the internal transaction area, a virtual host terminal to run on the host computer and to execute virtual terminal functions associated with language of the external communication that is noncompliant with the internal transaction area and associated with language compliant with the internal transaction area. Also included is an access state controller to route the external and the internal communication based upon the tracked state information for the internal applications.",
	"url": null,
	"owner": "Attachmate Corporation",
	"publication_number": "07380024",
	"publication_date": "2008-05-27",
	"application_number": "10398595",
	"application_date": "2001-10-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Digital file management and imaging system and method including secure file marking",
	"summary": "",
	"abstract": "The digital file management and imaging system and method of the present invention record additional independent data with each stored image including: a u201ctrue dateu201d which is gleaned from a secure clock which is not settable by the user (the Authentidateu2122); a number derived from a cyclic redundancy code (CRC) algorithm against the image data; this number is called the u201cimage CRCu201d; and a CRC derived from the u201ctrue dateu201d, called the u201cdate CRCu201d. This additional data is recorded within each digital file as soon as possible after the file is acquired. If the file is altered in any way after the recording of the additional data, recalculation of the image CRC on the altered file will not match the original image CRC recorded within it. Thus, the fact that it has been altered can be detected. Likewise, if the true date is altered in any way, recalculation of the date CRC will similarly reveal this fact. The image and date CRCs can be checked and verified at any time. If the recalculated value matches the recorded value, it can be stated that the image presently recorded was recorded on the specified date and has not been altered in any way since then.",
	"url": null,
	"owner": "Authentidate Holding Corp.",
	"publication_number": "07415476",
	"publication_date": "2008-08-19",
	"application_number": "10385291",
	"application_date": "2003-03-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for defining and distributing an animation",
	"summary": "",
	"abstract": "A method of customising an animation. A broadcast station renders first animated objects in response to locked graphic data and unlocked metadata. The metadata facilitates customisation, by including parameter interface information as well as actual parameter values, so that the first animation objects can be customised without reference to the locked graphic data. A distribution station receives signals from the broadcaster, and cumulatively renders second animated objects in response to second locked graphic data and second unlocked metadata, the latter of which is modified in response to distributor data. A television receives signals from the distributor, and cumulatively renders third animated objects in response to third locked graphic data and third unlocked metadata, which is modified in response to viewer data.",
	"url": null,
	"owner": "Autodesk Canada Co.",
	"publication_number": "07427988",
	"publication_date": "2008-09-23",
	"application_number": "10079322",
	"application_date": "2002-02-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Heap memory management using a tri-linked list",
	"summary": "",
	"abstract": "A method, apparatus, and article of manufacture provide the ability to efficiently and effectively manage memory. A tri-linked list/tree of deallocated memory units available for use by a heap are used. A first link points to units smaller than a current block size, a second link points to units equal to the current block size, and a third link points to units larger than the current block size. When a request for memory is received, the tree is traversed to find a unit that satisfies the request and the appropriate unit in the free list is allocated.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "07380091",
	"publication_date": "2008-05-27",
	"application_number": "11414604",
	"application_date": "2006-04-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing a presumptive drafting solution",
	"summary": "",
	"abstract": "A method, apparatus, and article of manufacture for providing a presumptive drafting solution. Input from a cursor control device is received, wherein the input reflects a movement in a computer drawing program of a cursor over a drawing having one or more geometric entities (having one or more geometric attributes). In one or more embodiments, a relevant geometric entity is identified based on how the cursor is moved over the drawing. A presumptive drafting solution is then provided based on the identified relevant geometric entity. In addition, prior drawing solutions (having one or more solution attributes) are obtained and compared to the one or more geometric attributes. A drawing solution having one or more solution attributes similar to the one or more geometric attributes may be provided to the user.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "07401299",
	"publication_date": "2008-07-15",
	"application_number": "09946311",
	"application_date": "2001-09-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multiple output device association",
	"summary": "",
	"abstract": "One or more embodiments of the invention enable a user to establish, configure, and associate one or more output devices with a file. Prior art applications provide for configuring an output device (e.g., a printer) on an application wide basis. Users often format a file or document based on an output device. Consequently, it is useful to associate an output device with a particular file or information. In graphics programs, a user may define a drawing (referred to as a model) with various layouts or views of the drawing. Each layout or view may be formatted for a particular output device. Consequently, one or more embodiments of the invention associate one or more files, layouts, or views with one or more output devices. Additionally, each output device may be configured for a particular file, layout, or view. One or more embodiments of the invention provide for the association of one or more output device configurations with one or more files, layouts, or views.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "07366980",
	"publication_date": "2008-04-29",
	"application_number": "10798500",
	"application_date": "2004-03-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Operator for embossing and engraving profiles in a solid body modeling system",
	"summary": "",
	"abstract": "A computer-implemented solid modeling system performs an operation for embossing or engraving at least one profile onto or into a solid body. Generally, the profile comprises text or a planar geometric shape. Specifically, the profile is a planar face bounded by edges, or the profile is a set of planar faces sharing a common plane and having the same normal direction. In performing the operation, the profiles raise or lower regions of faces with respect to an underlying surface.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "07330771",
	"publication_date": "2008-02-12",
	"application_number": "10946713",
	"application_date": "2004-09-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Replace face operator for solid body modeling",
	"summary": "",
	"abstract": "A computer-implemented solid modeling system performs a replace face operation on a solid body by selecting one or more outgoing faces on the solid target body and replacing the selected faces with one or more incoming faces from an operator body. The selected faces on the target body may comprise a single face, a set of adjacent faces or a set of disjoint faces. The selected faces on the operator body may comprise one single-sided face or one or more sheets, wherein a sheet is an edge-connected set of double-sided faces.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "07366581",
	"publication_date": "2008-04-29",
	"application_number": "10947585",
	"application_date": "2004-09-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Single gesture map navigation graphical user interface for a thin client",
	"summary": "",
	"abstract": "An application on a thin client displays a map. A graphical user interface permits the application to receive single gesture inputs of a stylus. If the single gesture input comprises a drag of the stylus a minimum distance, the map is panned such that the map is shifted to a new center view. The displayed map may contain one or more map objects. If the input comprises a single tap on a specific map object, the map object under the tap may be selected and highlighted. Further, a ToolTip for the map object may be displayed. A further tap of the ToolTip may result in the navigation to a link or URL associated with the map object selected. One or more zoom buttons may also be displayed. If a zoom button is tapped by the user, the map may be displayed in a different level of detail.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "07439969",
	"publication_date": "2008-10-21",
	"application_number": "11550497",
	"application_date": "2006-10-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Audio conferencing system",
	"summary": "",
	"abstract": "According to the principles of the invention, there is provided a conferencing system that dynamically assigns calls to DSP resources. The system may attempt to process each audio conference on a single DSP node, so that information about conference participants does not need to be shared across DSP nodes. Further, the mapping of call channels to resources within a DSP node may be automated so that it is transparent to a conferencing system control application. Where more than one DSP node is required for a particular conference, there is further provided a system for linking DSP nodes. There are also provided methods for managing audio conferencing resources.",
	"url": null,
	"owner": "AVAYA Holdings Limited",
	"publication_number": "RE040135",
	"publication_date": "2008-03-04",
	"application_number": "11091002",
	"application_date": "2005-03-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web-based personal assistant",
	"summary": "",
	"abstract": "A system for contacting a first user using a packet-switched communication is provided that includes:nn",
	"url": null,
	"owner": "Avaya Inc.",
	"publication_number": "07450567",
	"publication_date": "2008-11-11",
	"application_number": "10658821",
	"application_date": "2003-09-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Personal virtual assistant",
	"summary": "",
	"abstract": "A computer-based virtual assistant the behavior of which can be changed by the user, comprising a voice user interface for inputting information into and receiving information from the virtual assistant by speech, a communications network, a virtual assistant application running on a remote computer, the remote computer being electronically coupled to the user interface via the communications network, wherein the behavior of the virtual assistant changes responsive to user input. A computer-based virtual assistant that also automatically adapts its behavior is disclosed, comprising a voice user interface for inputting information into and receiving information from the virtual assistant by speech, a communications network, a virtual assistant application running on a remote computer, the remote computer being electronically coupled to the user interface via the communications network, wherein the remote computer is programmed to automatically change the behavior of the virtual assistant responsive to input received by the virtual assistant. As detailed below, the virtual assistant adapts to the user in many different ways based on the input the virtual assistant receives. Such input could be user information, such as information about the user's experience, the time between user sessions, the amount of time a user pauses when recording a message, the user's emotional state, whether the user uses words associated with polite discourse, and the amount of time since a user provided input to the virtual assistant during a session.",
	"url": null,
	"owner": "Avaya Technology Corp.",
	"publication_number": "07415100",
	"publication_date": "2008-08-19",
	"application_number": "10837605",
	"application_date": "2004-05-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing secure streaming data transmission facilities using unreliable protocols",
	"summary": "",
	"abstract": "The invention provides a method and apparatus for transmitting data securely using an unreliable communication protocol, such as User Datagram Protocol. In one variation, the invention retains compatibility with conventional Secure Sockets Layer (SSL) and SOCKS protocols, such that secure UDP datagrams can be transmitted between a proxy server and a client computer in a manner analogous to conventional SOCKS processing. In contrast to conventional SSL processing, which relies on a guaranteed delivery service such as TCP and encrypts successive data records with reference to a previously-transmitted data record, encryption is performed using a nonce that is embedded in each transmitted data record. This nonce acts both as an initialization vector for encryption/decryption of the record, and as a unique identifier to authenticate the record. Because decryption of any particular record does not rely on receipt of a previously received data record, the scheme will operate over an unreliable communication protocol. The system and method allows secure packet transmission to be provided with a minimum amount of overhead. Further, the invention provides a network arrangement that employs a cache having copies distributed among a plurality of different locations. SSL/TLS session information for a session with each of the proxy servers is stored in the cache so that it is accessible to at least one other proxy server. Using this arrangement, when a client computer switches from a connection with a first proxy server to a connection with a second proxy server, the second proxy server can retrieve SSL/TLS session information from the cache corresponding to the SSL/TLS communication session between the client device and the first proxy server. The second proxy server can then use the retrieved SSL/TLS session information to accept a session with the client device.",
	"url": null,
	"owner": "Aventail Corporation, a wholly owned subsidiary of SonicWALL, Inc.",
	"publication_number": "07360075",
	"publication_date": "2008-04-15",
	"application_number": "09783146",
	"application_date": "2001-02-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed cache for state transfer operations",
	"summary": "",
	"abstract": "A network arrangement that employs a cache having copies distributed among a plurality of different locations. The cache stores state information for a session with any of the server devices so that it is accessible to at least one other server device. Using this arrangement, when a client device switches from a connection with a first server device to a connection with a second server device, the second server device can retrieve state information from the cache corresponding to the session between the client device and the first server device. The second server device can then use the retrieved state information to accept a session with the client device.",
	"url": null,
	"owner": "Aventail, LLC",
	"publication_number": "07383329",
	"publication_date": "2008-06-03",
	"application_number": "09783147",
	"application_date": "2001-02-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Bitstream format for compressed image data",
	"summary": "",
	"abstract": "It is desirable to provide a bitstream format for compressed data that would allow multiple processors to access and decompress different parts of the data in parallel. Compressed images are usually defined in terms of macroblocks that have a width less than the image width and a height less than the image height. Thus, an image is divided several bands of multiple lines, and each band of multiple lines is divided into a macroblock. The set of macroblocks that define a band is called herein a macroblock rasterscan. The bit stream format includes, for each image, a picture header followed by image scan data. The image scan data includes data corresponding to a plurality of macroblock rasterscans. The data for each macroblock rasterscan includes data for a plurality of macroblocks for a band of lines in the image followed by padding. The padding ensures that data for each macroblock rasterscan terminates on a data boundary. The picture header references an image scan index that indicates a number of macroblock rasterscans in the image scan data and a number of lines per macroblock rasterscan, followed by entries of the index. Each entry in the index includes an offset of the macroblock rasterscan in image scan. The picture header may contain a reference to a picture header type, that references an I_frame_image_descriptor, which references the image scan index.",
	"url": null,
	"owner": "Avid Technology, Inc.",
	"publication_number": "07433519",
	"publication_date": "2008-10-07",
	"application_number": "10817209",
	"application_date": "2004-04-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Fixed bit rate, intraframe compression and decompression of video",
	"summary": "",
	"abstract": "High quality intraframe-only compression of video can be achieved using rate distortion optimization and without resizing or bit depth modification. The compression process involves transforming portions of the image to generate frequency domain coefficients for each portion. A bit rate for each transformed portion using a plurality of scale factors is determined. Distortion for each portion is estimated according to the plurality of scale factors. A scale factor is selected for each portion to minimize the total distortion in the image to achieve a desired bit rate. A quantization matrix is selected according to the desired bit rate. The frequency domain coefficients for each portion are quantized using the selected plurality of quantizers as scaled by the selected scale factor for the portion. The quantized frequency domain coefficients are encoded using a variable length encoding to provide compressed data for each of the defined portions. The compressed data is output for each of the defined portions to provide a compressed bitstream at the desired bit rate.",
	"url": null,
	"owner": "Avid Technology, Inc.",
	"publication_number": "07403561",
	"publication_date": "2008-07-22",
	"application_number": "10817217",
	"application_date": "2004-04-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Proxy method and system for secure wireless administration of managed entities",
	"summary": "",
	"abstract": "A method, system and apparatus are described for avoiding the use of a web-server or generic security when providing network administration services remotely to managed entities using wireless technology. Instead a true Proxy device, not operating as a web-server, is used to preprocess all command traffic from wireless input devices (WID). The intervention between the WID and the managed entities of the Proxy isolating the managed entities from the WID, enhanced by encoding using a novel messaging protocol, further enhanced by a novel security model based on multiple pre-shared keys and algorithms together with identifiers and passwords that are not transmitted, achieves several bandwidth and security advantages including the ability to deliver TELNET services across the Internet and behind a firewall.",
	"url": null,
	"owner": "Avocent Huntsville Corporation",
	"publication_number": "07421735",
	"publication_date": "2008-09-02",
	"application_number": "11445228",
	"application_date": "2006-06-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Proxy method and system for secure wireless administration of managed entities",
	"summary": "",
	"abstract": "A method, system and apparatus are described for avoiding the use of a web-server or generic security when providing network administration services remotely to managed entities using wireless technology. Instead a true Proxy device, not operating as a web-server, is used to preprocess all command traffic from wireless input devices (WID). The intervention between the WID and the managed entities of the Proxy isolating the managed entities from the WID, enhanced by encoding using a novel messaging protocol, further enhanced by a novel security model based on multiple pre-shared keys and algorithms together with identifiers and passwords that are not transmitted, achieves several bandwidth and security advantages including the ability to deliver TELNET services across the Internet and behind a firewall.",
	"url": null,
	"owner": "Avocent Huntsville Corporation",
	"publication_number": "07454785",
	"publication_date": "2008-11-18",
	"application_number": "10326226",
	"application_date": "2002-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for delivering messages using alternate modes of communication",
	"summary": "",
	"abstract": "There is provided a novel system and method for delivering messages using alternate modes of communication when a primary mode of communication is not available as may happen in emergent circumstances such as those that arise during a terrorist attack causing damage to communications infrastructure.",
	"url": null,
	"owner": "Avocent Huntsville Corporation",
	"publication_number": "07394761",
	"publication_date": "2008-07-01",
	"application_number": "10424735",
	"application_date": "2003-04-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Asynchronous hypertext messaging system and method",
	"summary": "",
	"abstract": "An asynchronous hypertext messaging system and method are disclosed. The system and method use existing hypertext transfer protocols and is capable of transmitting real-time asynchronous data between server and client regardless of firewalls or proxy servers implemented at the client or the server. In a communication system comprising a client and server interconnected by an internet, initial authentication is performed initially between the server and the client. A secure log in is performed by the client with the server in conjunction with a possible java applet download. The communication server then initiates a multiplexed virtual connection between the server and the client and transmission of asynchronous real-time data can occur over the virtual connection. The virtual connection is periodically refreshed by a request issued from the java applet.",
	"url": null,
	"owner": "AVT Technologies Ltd.",
	"publication_number": "07376715",
	"publication_date": "2008-05-20",
	"application_number": "10872130",
	"application_date": "2004-06-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for continuing to provide processing on disk outages",
	"summary": "",
	"abstract": "A system and method for continuing to provide processing in a processing system is disclosed. In one embodiment, a processing system is provided comprising a secondary storage device, a memory, a processor, an operating system, and a plurality of processes stored in the secondary data storage device. The plurality of processes comprise a first group of processes and a second group of processes. The first group of processes is adapted to be swapped between the secondary data storage device and the memory for execution. The second group of processes is adapted to be locked into the memory of the processing system during operation. The request to lock and unlock a process is affected by a watchdog process unrelated to the process being locked. Configuration information for the watchdog process identifies the processes in the first and/or second groups.",
	"url": null,
	"owner": "Ayaya Inc.",
	"publication_number": "07467324",
	"publication_date": "2008-12-16",
	"application_number": "11006015",
	"application_date": "2004-12-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Programmable network convergence edge switch",
	"summary": "",
	"abstract": "A programmable network convergence edge-switch (NCES) deployed in the corporate enterprise that enables services delivered by the telecommunication carriers to interoperate and integrated with databases and applications within corporate enterprises. The NCES enables integration of services deployed over Advanced Intelligent Networks (AIN), softswitches (SS) and Session Initiation Protocol (SIP) switches over one set of interfaces on one end and data deployed over IP network over the other set of interfaces on the other end. Integrating carrier services with enterprise data generates an opportunity to build the next generation of advanced applications and services that transcend beyond a single-network single-protocol to a multi-network multi-protocol environment.",
	"url": null,
	"owner": "Azurn America, Inc.",
	"publication_number": "07369540",
	"publication_date": "2008-05-06",
	"application_number": "10421361",
	"application_date": "2003-04-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Category analysis in a market management",
	"summary": "",
	"abstract": "The present disclosure provides for analyzing expenditures by category. A file including expenditure data relating to spent monies is identified. The expenditure data from the file is extracted. An independent and a dependent variable relating to the expenditure data are determined. The expenditure data is graphed based on the determined variables. Conclusions are displayed based on the expenditure data.",
	"url": null,
	"owner": "B2EMarkets, Inc",
	"publication_number": "07389214",
	"publication_date": "2008-06-17",
	"application_number": "09562668",
	"application_date": "2000-05-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Manufacture for a market management framework",
	"summary": "",
	"abstract": "The present disclosure provides for affording a market management framework. Category analysis is provided for a user specified project. Then, supplier analysis is performed for the user specified project. A strategy is then developed for determining the suppliers for the specified project based on the supplier analysis. Further, negotiations are managed between selected suppliers and the user.",
	"url": null,
	"owner": "B2EMarkets, Inc.",
	"publication_number": "07395193",
	"publication_date": "2008-07-01",
	"application_number": "09563757",
	"application_date": "2000-05-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Image and data processing system",
	"summary": "",
	"abstract": "A system and method for processing financial information is provided. A client request may be received through an application program interface (API). A first set of data based on the client request may be retrieved through the API from a first information repository comprising information on debit transactions and credit transactions. The first set of results may be transmitted to the client application for display. A second client request based on the first set of results may be received through the API from the client application, and a second set of data may be retrieved through the API from a second information repository comprising information on credit transactions and component deposit items. The second set of results may be transmitted back to the client application for display. A third client request based on the second set of results may be received, and corresponding financial image information may be retrieved from an image information repository and transmitted back to the client application for display.",
	"url": null,
	"owner": "Bank of America Corporation",
	"publication_number": "07421153",
	"publication_date": "2008-09-02",
	"application_number": "10827203",
	"application_date": "2004-04-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for transacting retrieval of real estate property listings using a remote client interfaced over an information network",
	"summary": "",
	"abstract": "A system and method for transacting retrieval of real estate property listings using a remote client interfaced over an information network is described. A set of real estate property listings is maintained in a structured database. Each listing includes a characteristics set describing property listing information organized according to property class. A remote client is interfaced in a dynamic search session via a communications link transiently connected over an information network. The remote client maintains both program code and data exclusively in a general purpose random access memory configured for both transient and persistent storage. A target characteristics set describing one or more such listings in at least one such property class is received from the remote client upon initiation of the session. The listings matching the target characteristics set from the structured database are identified. The listings are provided to the remote client upon termination of the session.",
	"url": null,
	"owner": "BayNet World, Inc.",
	"publication_number": "07430555",
	"publication_date": "2008-09-30",
	"application_number": "10243259",
	"application_date": "2002-09-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for communicating in a personal area network",
	"summary": "",
	"abstract": "A network () connects a hub device () to several peripheral devices (). The hub device () generates a token and broadcasts the token on the network (). Each of the peripheral devices () receives the token broadcast by the hub device (), determines whether the token identifies the peripheral device (), analyzes the token to determine a size and direction of a current data transfer when the token identifies the peripheral device (), and transfers data to or receives data from the hub device () according to the determined size and direction of the current data transfer.",
	"url": null,
	"owner": "BBN Technologies Corp.",
	"publication_number": "07386003",
	"publication_date": "2008-06-10",
	"application_number": "09536191",
	"application_date": "2000-03-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Annotation based development platform for asynchronous web services",
	"summary": "",
	"abstract": "An annotation based development platform for asynchronous web services is described. In one embodiment, the developer expresses logic offered by the web service using a standard programming language augmented with declarative annotations specifying preferences for exposing that logic as an asynchronous web service. At compile time, an enhanced compiler analyzes the annotated source file and automatically generates the mechanisms required to expose its functionality as an asynchronous web service.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07356803",
	"publication_date": "2008-04-08",
	"application_number": "10082807",
	"application_date": "2002-02-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Annotation based development platform for stateful web services",
	"summary": "",
	"abstract": "An annotation based development platform for stateful web services is described. In one embodiment, the developer expresses logic offered by the web service using a standard programming language augmented with declarative annotations specifying preferences for exposing that logic as a stateful web service. At compile time, an enhanced compiler analyzes the annotated source file and automatically generates the mechanisms required to expose its functionality as a stateful web service.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07437710",
	"publication_date": "2008-10-14",
	"application_number": "10082794",
	"application_date": "2002-02-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Clustered enterprise Javau2122 in a secure distributed processing system",
	"summary": "",
	"abstract": "A clustered enterprise distributed processing system. The distributed processing system includes a first and a second computer coupled to a communication medium. The first computer includes a virtual machine (JVM) and kernel software layer for transferring messages, including a remote virtual machine (RJVM). The second computer includes a JVM and a kernel software layer having a RJVM. Messages are passed from a RJVM to the JVM in one computer to the JVM and RJVM in the second computer. Messages may be forwarded through an intermediate server or rerouted after a network reconfiguration. Each computer includes a smart stub having a replica handler, including a load balancing software component and a failover software component. Each computer includes a duplicated service naming tree for storing a pool of smart stubs at a node.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07334232",
	"publication_date": "2008-02-19",
	"application_number": "11176768",
	"application_date": "2005-07-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Federated management of content repositories",
	"summary": "",
	"abstract": "A method for integrating a plurality of content repositories into a virtual content repository (VCR), comprising providing credential information to each one of said plurality of content repositories, receiving authorization information from each one of said plurality of content repositories, wherein the authorization information indicates whether or not an authorization procedure succeeded, integrating into the VCR each one of said plurality of content repositories whose authorization information indicates successful authorization, and wherein each one of said plurality of content repositories exposes a first set of services to enable its integration into the VCR.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07433896",
	"publication_date": "2008-10-07",
	"application_number": "11325006",
	"application_date": "2006-01-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for protection against interleaving transactions using a transaction manager",
	"summary": "",
	"abstract": "A transaction manager maintains an enlistment data structure used for managing resource object enlistment. A transaction manager may receive an enlistment request initiated from a resource object. Upon receiving the request, the transaction manager will determine if the resource object is already enlisted. If the resource object is already enlisted, the transaction manager will block the enlistment request. If the resource object is not enlisted, the transaction manger will enlist the resource. Upon enlistment, the resource object will perform a requested task or service. After the requested task or service is complete, the resource initiates a delistment request to the transaction manager. After receiving the delistment request from the resource, object, the transaction manager is delisted from the enlistment data structure.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07353495",
	"publication_date": "2008-04-01",
	"application_number": "10789010",
	"application_date": "2004-02-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "RFID edge server with security plug-ins",
	"summary": "",
	"abstract": "An RFID edge server using an application server allows for improvements in an RFID system.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07394377",
	"publication_date": "2008-07-01",
	"application_number": "11256767",
	"application_date": "2005-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Smart stub or enterprise Javau2122 bean in a distributed processing system",
	"summary": "",
	"abstract": "A clustered enterprise distributed processing system. The distributed processing system includes a first and a second computer coupled to a communication medium. The first computer includes a virtual machine (JVM) and kernel software layer for transferring messages, including a remote virtual machine (RJVM). The second computer includes a JVM and a kernel software layer having a RJVM. Messages are passed from a RJVM to the JVM in one computer to the JVM and RJVM in the second computer. Messages may be forwarded through an intermediate server or rerouted after a network reconfiguration. Each computer includes a Smart stub having a replica handler, including a load balancing software component and a failover software component. Each computer includes a duplicated service naming tree for storing a pool of Smart stubs at a node.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07454755",
	"publication_date": "2008-11-18",
	"application_number": "10427646",
	"application_date": "2003-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for analyzing security policies in a distributed computer network",
	"summary": "",
	"abstract": "A system and method for analyzing a global security policy in a distributed computing environment. In one embodiment the security policy is a global security policy which is stored in, and managed by, a policy manager located on a server. In another embodiment the security policy is a local client security policy stored in an application guard located on a client server which manages access to various securable components of the distributed computing environment.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07350226",
	"publication_date": "2008-03-25",
	"application_number": "10242920",
	"application_date": "2002-09-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for incrementally distributing a security policy in a computer network",
	"summary": "",
	"abstract": "A system and method for generating an updated version of, or reconstructing a previously enforced version of, a local client security policy stored in an application guard. A policy manager distributes a change (or an accumulation of changes) to the currently enforced version of the security policy through a network to the application guard. The application guard uses the distributed change to update the currently enforced version of the local client security policy. To reconstruct a previously enforced version of a local security policy, the policy manager generates a reversing delta equal to the reverse of the change (or accumulation of changes) from a previously enforced version to the currently enforced version of the security policy, and distributes the reversing delta through the network to the application guard. The application guard applies the distributed reversing delta to the currently enforced version to reconstruct the previously enforced version.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07363650",
	"publication_date": "2008-04-22",
	"application_number": "10243122",
	"application_date": "2002-09-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for maintaining security in a distributed computer network",
	"summary": "",
	"abstract": "A system and method for maintaining security in a distributed computing environment comprises a policy manager located on a server for managing and distributing a security policy, and an application guard located on a client for managing access to securable components as specified by the security policy. In the preferred embodiment, a global policy specifies access privileges of the user to securable components. The policy manager may then preferably distribute a local client policy based on the global policy to the client. An application guard located on the client then manages access to the securable components as specified by the local policy.",
	"url": null,
	"owner": "Bea Systems, Inc.",
	"publication_number": "07318237",
	"publication_date": "2008-01-08",
	"application_number": "11171104",
	"application_date": "2005-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for a common runtime container framework",
	"summary": "",
	"abstract": "An extensible container framework can be used to create and deploy software runtime containers. Such a framework can allow containers to inherit functionality and runtime environment attributes of other such containers. An extensible container framework can support multiple component types, and can provide the ability to add incremental features through a common component architecture. A framework can provide a common set of container infrastructure and services, and can expand the leverage of capabilities built around each container. This description is not intended to be a complete description of, or limit the scope of, the invention. Other features, aspects, and objects of the invention can be obtained from a review of the specification, the figures, and the claims.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07444620",
	"publication_date": "2008-10-28",
	"application_number": "10776435",
	"application_date": "2004-02-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for business process plug-in development",
	"summary": "",
	"abstract": "A system and method for using session beans to integrate business processes. The system includes a process engine which includes a workflow and a plug-in manager. The system further allows for creating session beans, packaging the session beans for deployment, and deploying the session beans to the process engine as a plug-in, to dynamically modify the workflow. The plug-in manager handles event notifications to and from the deployed session beans at runtime, according to the workflow. In this manner, the environment allows for easy development of software applications that are intended to communicate with business processes and external components.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07424717",
	"publication_date": "2008-09-09",
	"application_number": "10404684",
	"application_date": "2003-04-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software update and patch audit subsystem for use in a computer information database system",
	"summary": "",
	"abstract": "A Computer Information Database System includes a software update and patch audit subsystem that manages computer profile data using system grouping and audit specification criteria. The subsystem thus selects a particular group of computers using the grouping criteria, and further selects from within the group the computers that pass or fail the applicable audit requirements. A given computer passes the requirements if the computer has installed thereon the specified software updates and patches that are applicable to the computer operating system platform. Otherwise, the computer fails. The audit subsystem may instead select particular computers using the audit specification criteria and then using the grouping criteria further select the subset of these computers that belong to a particular group. Further, the audit specification criteria may be set differently for the respective groups. Also, the grouping criteria and/or the security audit criteria may change without adversely impacting the operations of the subsystem. The audit system uses database tables and views that include value-to-match fields for either or both of the grouping and the audit specification criteria, and also software update or patch specific information and/or operating system specific information. One table includes group and operating system information for the respective computers, another table includes entries for the respective updates and patches that are installed on the respective computers, and another table includes entries that together specify the security audit specifications for the respective groups. Using the tables, the system produces views that relate, for example, to failing computers, what updates or patches the respective failing computers are missing, which or how many computers are failing within a particular group.",
	"url": null,
	"owner": "Bellarc, Inc.",
	"publication_number": "07353389",
	"publication_date": "2008-04-01",
	"application_number": "10819545",
	"application_date": "2004-04-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Arrangements storing different versions of a set of data in separate memory areas and method for updating a set of data in a memory",
	"summary": "",
	"abstract": "Computer-readable medium storing a data structure for supporting persistant storage of a set of data, the data structure including: (a) at least an oldest version of the set of data in a first memory area the first memory area including at least one first tag for uniquely identifying the oldest version, and (b) at least a most recently updated version of the set of data in a second, distinct memory area, the second memory area including at least one second tag for uniquely identifying the most recently updated version. The invention also relates to a computer arrangement including a processor and such a computer-readable medium, as well as to a method of updating sets of data having such tagged-data structures.",
	"url": null,
	"owner": "Belle Gate Investment B.V.",
	"publication_number": "07360039",
	"publication_date": "2008-04-15",
	"application_number": "10870953",
	"application_date": "2004-06-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer readable medium for storing large data files",
	"summary": "",
	"abstract": "An enhanced file format to store large quantities of variable-sized data records on a storage medium and to permit efficient access and control over data stored in the enhanced file format. A file format is the structure of a file that defines the way it is stored and laid out on a disk. In a preferred embodiment of the present invention, a file format includes a model directory containing models. Models include element lists comprising element chunks. The element chunks include elements, where elements are variable-sized data records.",
	"url": null,
	"owner": "Bentley Systems, Inc.",
	"publication_number": "07428548",
	"publication_date": "2008-09-23",
	"application_number": "09929278",
	"application_date": "2001-08-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program product for a distributed speech recognition tuning platform",
	"summary": "",
	"abstract": "A system, method and computer program product are provided for tuning a speech recognition process. Initially, a database of utterances is maintained. Thereafter, information associated with the utterances is collected utilizing a speech recognition process. Further, the utterances in the database are transmitted to a plurality of users utilizing a network. As such, transcriptions of the utterances in the database may be received from the users utilizing the network. In use, the speech recognition process may be tuned utilizing the information and the transcriptions.",
	"url": null,
	"owner": "BeVocal, Inc.",
	"publication_number": "07383187",
	"publication_date": "2008-06-03",
	"application_number": "09769880",
	"application_date": "2001-01-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program product for large-scale street name speech recognition",
	"summary": "",
	"abstract": "A system, method and computer program product are provided for speech recognition. During operation, a database of words are maintained. Initially, a probability is assigned to each of the words which indicates a prevalence of use of the word. Further, an utterance is received for speech recognition purposes. Such utterance is matched with one of the words in the database based on least in part on the probability.",
	"url": null,
	"owner": "BeVocal, Inc.",
	"publication_number": "07444284",
	"publication_date": "2008-10-28",
	"application_number": "10989873",
	"application_date": "2004-11-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computerized method and computer system for positioning a pointer",
	"summary": "",
	"abstract": "In a visualization system a three-dimensional scene () is projected onto a camera's view projection plane () from a camera's defined viewpoint () and mapped onto a two-dimensional display. For positioning a pointer () in the three-dimensional scene (), the view of the three-dimensional scene is animated automatically to provide to a user the view of the three-dimensional scene with a kinetic depth effect. The view of the three-dimensional scene is animated by applying a spatial transformation to the three-dimensional scene () or the camera. The transformation is applied to the three-dimensional () scene or the camera such that the projected view of the pointer () remains essentially static. The pointer () is positioned based on signals received from the user, while the view is animated. Providing to the user an animated view of the three-dimensional scene with a kinetic depth effect makes it possible for the user to place the pointer () in all three dimensions without the need for stereoscopic vision.",
	"url": null,
	"owner": "Bitplane AG",
	"publication_number": "07382374",
	"publication_date": "2008-06-03",
	"application_number": "11118363",
	"application_date": "2005-05-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Recovery and representation of object interaction in an object oriented program",
	"summary": "",
	"abstract": "A process and system are provided for representing object interactions, by means of a sequence diagram or the like, wherein the object interactions are recovered from source code written in Java or other object-oriented programming language. Initially, a Method Information Parser determines the respective methods declared inside the source code and extracts their names. A Method Detail Parser then extracts the method calls to other objects within a method, to resolve each complex method call into multiple lines of single method calls. Information derived from the multiple lines of single method calls is then used to generate the sequence diagram.",
	"url": null,
	"owner": "Board of Regents, The University of Texas System",
	"publication_number": "07426716",
	"publication_date": "2008-09-16",
	"application_number": "10617592",
	"application_date": "2003-07-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Extensible method for obtaining a record of data backup activity (and errors) and converting same into a canonical format",
	"summary": "",
	"abstract": "An extensible method and system for obtaining an historical record of data backup activity (and errors) from a plurality of data backup software devices, and converting the same into a canonical format, is disclosed. In the first aspect, a method comprises the steps of providing a late-binding mechanism that provides the invention with extensibility so that it can be made to inter-operate with an arbitrary variety of backup software devices. In the second aspect, an interface for requesting and returning a canonical backup activity log is disclosed. In the third aspect, an interface for requesting and returning a canonical backup error log is disclosed. In the fourth aspect, the use of a canonical format enables the data to be cross-referenced, consolidated and compared.",
	"url": null,
	"owner": "Bocada, Inc.",
	"publication_number": "07469264",
	"publication_date": "2008-12-23",
	"application_number": "10765539",
	"application_date": "2004-01-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Extensible method for obtaining an historical record of data backup activity (and errors) and converting same into a canonical format",
	"summary": "",
	"abstract": "An extensible method and system for obtaining an historical record of data backup activity (and errors) from a plurality of data backup software devices, and converting the same into a canonical format, is disclosed. In the first aspect, a method comprises the steps of providing a late-binding mechanism that provides the invention with extensibility so that it can be made to inter-operate with an arbitrary variety of backup software devices. In the second aspect, an interface for requesting and returning a canonical backup activity log is disclosed. In the third aspect, an interface for requesting and returning a canonical backup error log is disclosed. In the fourth aspect, the use of a canonical format enables the data to be cross-referenced, consolidated and compared.",
	"url": null,
	"owner": "Bocada, Inc.",
	"publication_number": "07457833",
	"publication_date": "2008-11-25",
	"application_number": "10625333",
	"application_date": "2003-07-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methodology for asynchronous code refactoring with symbol injection",
	"summary": "",
	"abstract": "A system and methodology for asynchronous code refactoring with symbol injection is described. In one embodiment, for example, a method is described for refactoring a plurality of interdependent software modules that reside in separate projects, the method comprises steps of: in response to a change that affects a particular symbol of a software module that resides in a first project, refactoring the software module of the first project to propagate the change to all instances of the particular symbol in the software module; during the refactoring of the software module of the first project, recording meta data about the refactoring that is required to effect the change; and automatically propagating the change to a dependent software module residing in a second project, by refactoring the dependent software module based on the recorded meta data about the refactoring that occurred to the software module of the first project.",
	"url": null,
	"owner": "Borland Software Corporation",
	"publication_number": "07370318",
	"publication_date": "2008-05-06",
	"application_number": "10711230",
	"application_date": "2004-09-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Subscriber management and accounting using event detection in a wireless device",
	"summary": "",
	"abstract": "A system and method performs real-time subscriber management and accounting for a wireless device by detecting predetermined events within the wireless device and communicating information pertaining to such events from the wireless device to a real-time subscriber management platform in association with each communication session. The information received by the real-time subscriber management platform is used to control the behavior of the wireless device and/or to update accounting information pertaining to the subscriber.",
	"url": null,
	"owner": "Boston Communications Group, Inc.",
	"publication_number": "07418252",
	"publication_date": "2008-08-26",
	"application_number": "10917259",
	"application_date": "2004-08-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Cryptography accelerator application program interface",
	"summary": "",
	"abstract": "Methods and apparatus are provided for making function calls to various cryptography accelerators. An application program interface abstraction layer coupled to a cryptography accelerator receives generic function calls from designer configured software and performs operations such as security association management, policy management, packet processing, cryptography accelerator configuration, and key commit management. Upon receiving a generic function call, the abstraction layer performs processing to make a chip specific function call or update abstraction layer management information associated with the generic function call.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07369657",
	"publication_date": "2008-05-06",
	"application_number": "10378054",
	"application_date": "2003-02-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integrated gigabit ethernet PCI-X controller",
	"summary": "",
	"abstract": "A network controller having a multiprotocol bus interface adapter coupled between a communication network and a computer bus, the adapter including a predictive time base generator; and a management bus controller adapted to monitor and manage preselected components coupled with one of the communication network and the computer bus. The management bus controller is adapted to employ an Alert Standard Format (ASF) specification protocol, a System Management Bus (SMBus) specification protocol, an Intelligent Platform Management Interface (IPMI) specification protocol, a Simple Network Management Protocol (SNMP), or a combination thereof. The network controller also includes a 10/100/1000BASE-T IEEE Std. 802.3-compliant transceiver and media access controller coupled with the communication network; a buffer memory coupled with the MAC, wherein the buffer memory includes one of a packet buffer memory, a frame buffer memory, a queue memory, and a combination thereof; and a transmit CPU and a receive CPU coupled with the multiprotocol bus interface adapter and the management bus controller. The network controller can be a single-chip VLSI device in an 0.18 micron CMOS VLSI implementation.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07444455",
	"publication_date": "2008-10-28",
	"application_number": "11357637",
	"application_date": "2006-02-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Late frame recovery method",
	"summary": "",
	"abstract": "Method of processing a transmitted encoded media data stream is received. If a data element arrives prior to, or at, a predetermined playout deadline, the data element is decoded, the media represented by the decoded data element is played, and the data element is provided to a decoder state machine to update a decoder state. If a data element arrives after the predetermined playout deadline, the data element is provided to the decoder state machine to update the decoder state. In one embodiment, if the specified data element fails to arrive by the playout deadline, a subsequently received data element is saved in memory. Then, if the specified data element arrives after the predetermined playout deadline, the specified data element and the saved, subsequently received, data element are provided to the decoder state machine to update the decoder state.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07460479",
	"publication_date": "2008-12-02",
	"application_number": "11674442",
	"application_date": "2007-02-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for co-location of two radio frequency devices",
	"summary": "",
	"abstract": "A method for avoiding signal interference between a first RF device and a second RF device is provided. The first and second RF devices are co-located and the first RF device is configured to operate within a semi-stationary range of a frequency band. The second RF device is configured to operate by changing channels within the frequency band. The method initiates with a communication interface being provided between the first RF device and the second RF device. Then, the second RF device receives the semi-stationary range and a mode for the first RF device through the communication interface. Next, the second RF device is adapted to avoid the semi-stationary range of the frequency band of the first RF device when the mode of the first RF device is in an active mode. An apparatus where two RF devices are co-located without causing interference for each other is also provided.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07317900",
	"publication_date": "2008-01-08",
	"application_number": "10233237",
	"application_date": "2002-08-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for deterministic control of an emulation",
	"summary": "",
	"abstract": "An emulation-based event-wait simulator including an application module to configure and command verification processes on a design under test (DUT). An event dispatcher is in communication with the application module to deliver commands to the DUT. A plurality of transactors are in communication with the event dispatcher to forward the commands to the DUT. A channel controller is in communication with the transactors to process and forward the commands to the DUT, wherein the channel controller also receives messages from the DUT, processes the messages, and forwards the messages to the transactors for delivery to the event dispatcher and the application module.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07472054",
	"publication_date": "2008-12-30",
	"application_number": "10385654",
	"application_date": "2003-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for deterministic control of an emulation",
	"summary": "",
	"abstract": "An emulation-based event-wait simulator including an application module to configure and command verification processes on a design under test (DUT). An event dispatcher is in communication with the application module to deliver commands to the DUT. A plurality of transactors are in communication with the event dispatcher to forward the commands to the DUT. A channel controller is in communication with the transactors to process and forward the commands to the DUT, wherein the channel controller also receives messages from the DUT, processes the messages, and forwards the messages to the transactors for delivery to the event dispatcher and the application module.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07472055",
	"publication_date": "2008-12-30",
	"application_number": "10385705",
	"application_date": "2003-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for receive queue provisioning",
	"summary": "",
	"abstract": "Systems and methods that provide receive queue provisioning are provided. In one embodiment, a communications system may include, for example, a first queue pair (QP), a second QP, a general pool and a resource manager. The first QP may be associated with a first connection and with at least one of a first limit value and an out-of-order threshold. The first QP may include, for example, a first send queue (SQ). The second QP may be associated with a second connection and with a second limit value. The second QP may include, for example, a second SQ. The general pool may include, for example, a shared receive queue (SRQ) that is shared by the first QP and the second QP. The resource manager may provide, for example, provisioning for the SRQ and may manage the first limit value and the second limit value.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07430211",
	"publication_date": "2008-09-30",
	"application_number": "10688373",
	"application_date": "2003-10-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method of processing data flow in multi-channel, multi-service environment by dynamically allocating a socket",
	"summary": "",
	"abstract": "A method and system for processing a data flow in a multi-channel, multi-service environment is described. In one embodiment, a socket is dynamically allocated, the socket including a dynamically allocated service. Further, the server processes the data flow based upon the type of data being processed.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07428593",
	"publication_date": "2008-09-23",
	"application_number": "11056557",
	"application_date": "2005-02-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Voice and data exchange over a packet based network",
	"summary": "",
	"abstract": "A signal processing system which discriminates between voice signals and data signals modulated by a voiceband carrier. The signal processing system includes a voice exchange, a data exchange and a call discriminator. The voice exchange is capable of exchanging voice signals between a switched circuit network and a packet based network. The signal processing system also includes a data exchange capable of exchanging data signals modulated by a voiceband carrier on the switched circuit network with unmodulated data signal packets on the packet based network. The data exchange is performed by demodulating data signals from the switched circuit network for transmission on the packet based network, and modulating data signal packets from the packet based network for transmission on the switched circuit network. The call discriminator is used to selectively enable the voice exchange and data exchange.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07423983",
	"publication_date": "2008-09-09",
	"application_number": "09522185",
	"application_date": "2000-03-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Voice and data exchange over a packet based network with AGC",
	"summary": "",
	"abstract": "A signal processing system which discriminates between voice signals and data signals modulated by a voiceband carrier. The signal processing system includes a voice exchange, a data exchange and a call discriminator. The voice exchange is capable of exchanging voice signals between a switched circuit network and a packet based network. The signal processing system also includes a data exchange capable of exchanging data signals modulated by a voiceband carrier on the switched circuit network with unmodulated data signal packets on the packet based network. The data exchange is performed by demodulating data signals from the switched circuit network for transmission on the packet based network, and modulating data signal packets from the packet based network for transmission on the switched circuit network. The call discriminator is used to selectively enable the voice exchange and data exchange.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07443812",
	"publication_date": "2008-10-28",
	"application_number": "11503603",
	"application_date": "2006-08-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Voice and data exchange over a packet based network with DTMF",
	"summary": "",
	"abstract": "A signal processing system which discriminates between voice signals and data signals modulated by a voiceband carrier. The signal processing system includes a voice exchange, a data exchange and a call discriminator. The voice exchange is capable of exchanging voice signals between a switched circuit network and a packet based network. The signal processing system also includes a data exchange capable of exchanging data signals modulated by a voiceband carrier on the switched circuit network with unmodulated data signal packets on the packet based network. The data exchange is performed by demodulating data signals from the switched circuit network for transmission on the packet based network, and modulating data signal packets from the packet based network for transmission on the switched circuit network. The call discriminator is used to selectively enable the voice exchange and data exchange.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07468992",
	"publication_date": "2008-12-23",
	"application_number": "11459556",
	"application_date": "2006-07-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Wireless remote firmware debugging for embedded wireless device",
	"summary": "",
	"abstract": "A method for debugging a ROM in a wireless target device. After a wireless communication link is established with the target device by a host computer, a debug mode change command is transmitted to the target device by the host computer. The debug mode change command is received by the target device and a monitor program is enabled to parse the serial port. A debug instruction from a debugger in the host computer is then received by the monitor program where, the debug instruction includes an entry address and a jump address. The application program jumps to the received jump address upon reaching the entry address location in the application program. An acknowledgement package is transmitted to the debugger in the host computer, and a second debug instruction is received from the debugger, responsive to the acknowledgement package.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07318172",
	"publication_date": "2008-01-08",
	"application_number": "10930577",
	"application_date": "2004-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure and backward-compatible processor and secure software execution thereon",
	"summary": "",
	"abstract": "A secure processor assuring application software is executed securely, and assuring only authorized software is executed, monitored modes and secure modes of operation. The former executes application software transparently to that software. The latter verifies execution of the application software is authorized, performs any extraordinary services required by the application software, and verifies the processor has obtained rights to execute the content. The secure processor (1) appears hardware-identical to an ordinary processor, with the effect that application software written for ordinary processors can be executed on the secure processor without substantial change, (2) needs only a minimal degree of additional hardware over and above those portions appearing hardware-identical to an ordinary processor. The secure processor operates without substantial reduction in speed or other resources available to the application software. Functions operating in secure mode might reside in an on-chip non-volatile memory, or might be loaded from external storage with authentication.",
	"url": null,
	"owner": "BroadOn Communications Corp.",
	"publication_number": "07322042",
	"publication_date": "2008-01-22",
	"application_number": "10360827",
	"application_date": "2003-02-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure and backward-compatible processor and secure software execution thereon",
	"summary": "",
	"abstract": "A secure processor assuring application software is executed securely, and assuring only authorized software is executed, monitored modes and secure modes of operation. The former executes application software transparently to that software. The latter verifies execution of the application software is authorized, performs any extraordinary services required by the application software, and verifies the processor has obtained rights to execute the content. The secure processor (1) appears hardware-identical to an ordinary processor, with the effect that application software written for ordinary processors can be executed on the secure processor without substantial change, (2) needs only a minimal degree of additional hardware over and above those portions appearing hardware-identical to an ordinary processor. The secure processor operates without substantial reduction in speed or other resources available to the application software. Functions operating in secure mode might reside in an on-chip non-volatile memory, or might be loaded from external storage with authentication.",
	"url": null,
	"owner": "BroadOn Communications Corp.",
	"publication_number": "07380275",
	"publication_date": "2008-05-27",
	"application_number": "11048515",
	"application_date": "2005-01-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application modification system and method",
	"summary": "",
	"abstract": "The present invention is directed to a system and method for utilization of applications on a device having an embedded operating system. Typically, the applications comprise third-party applications without source code. The system and method provide for the modification of the behavior and appearance of such applications and include the functionality to capture and respond to various events occurring in the applications.",
	"url": null,
	"owner": "BSQUARE Corporation",
	"publication_number": "07316014",
	"publication_date": "2008-01-01",
	"application_number": "10194563",
	"application_date": "2002-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Federated system and methods and mechanisms of implementing and using such a system",
	"summary": "",
	"abstract": "A federated system and methods and mechanisms of implementing and using such a system is disclosed. In some embodiments, one or more mappings are created between a taxonomy view at a node and one or more taxonomies of one or more data sources. The one or more data sources can then be accessed via the taxonomy view. In other embodiments, one or more mappings are created between content from different data sources and content from those data sources are merged using the one or more mappings.",
	"url": null,
	"owner": "Cadence Design Systems, Inc.",
	"publication_number": "07392255",
	"publication_date": "2008-06-24",
	"application_number": "10632769",
	"application_date": "2003-07-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for simulation of mixed-language circuit designs",
	"summary": "",
	"abstract": "A method for simulation of mixed-language circuit designs is disclosed. In one embodiment, an object-oriented language module is natively instantiated within a hardware description language based design. In another embodiment, a hardware description language module is natively instantiated within an object-oriented language based design. A system for simulation of mixed-language circuit designs is also disclosed. In one embodiment, a simulator is configured to natively manipulate an object-oriented language module within a hardware description language based design. In another embodiment, a simulator is configured to natively manipulate a hardware description language module within an object-oriented language based design.",
	"url": null,
	"owner": "Cadence Design Systems, Inc.",
	"publication_number": "07424703",
	"publication_date": "2008-09-09",
	"application_number": "10405573",
	"application_date": "2003-04-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Connection management system for creating and releasing connections to a print server",
	"summary": "",
	"abstract": "Print server load is reduced efficiently by deleting information about print clients from a print server based on precise conditions peculiar to a print system.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07359075",
	"publication_date": "2008-04-15",
	"application_number": "10278797",
	"application_date": "2002-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Digital image retrieval and storage",
	"summary": "",
	"abstract": "The present invention relates to the retrieval and storage of image data captured using a digital image acquisition device such as a still camera, a video camera or a scanning device, and of image data stored on removable storage media such as compact flash, smart and memory stick media. An image retrieval architecture is described such that image data may be retrieved from any digital image acquisition device and/or from removable storage media, and a u201cone-clicku201d operation is available to minimize an amount of interaction needed to retrieve image data from the digital image acquisition device.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07406248",
	"publication_date": "2008-07-29",
	"application_number": "09723976",
	"application_date": "2000-11-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Home printing from internet sources",
	"summary": "",
	"abstract": "Internet-based printing to a home printer in which the print job is pre-rasterized at the cable head end and sent in rasterized format to the set top box. Because the print job is pre-rasterized at the cable head end, and not at the set top box, resources are not wasted at the set top box when they are more readily available at the cable head end. In addition, because of the high speed communication network already in existence between the cable head end and the set top box, even large pre-rasterized print jobs can be transmitted to the set top box in reasonable amounts of time, meaning more quickly than a situation in which it was the set top box that performed rasterization.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07433070",
	"publication_date": "2008-10-07",
	"application_number": "11171231",
	"application_date": "2005-07-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Image processing apparatus, and method for controlling the image processing apparatus to process displayable and non-displayable data received from a server",
	"summary": "",
	"abstract": "An information processing apparatus fully utilizing contents available on a network by processing content that cannot be displayed on a built-in browser. A web browser displays in a pop-up fashion a dialog window that queries a user about the process to be performed on undisplayable data if the received data is undisplayable. The user can select between u201cprintu201d and u201csendu201d as an alternative process for the undisplayable data.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07464333",
	"publication_date": "2008-12-09",
	"application_number": "10991199",
	"application_date": "2004-11-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Incremental color transform creation",
	"summary": "",
	"abstract": "An overall color transformation is constructed from multiple ones of individual color transformation steps, the overall color transformation used by a color management system to transform colors from one color space to another. A sequence of sequential add operations is executed, each add operation adding a single one of the individual transformation steps to an intermediate transformation constructed from preceding add operations, and for each add operation returning at least one value which characterizes the add operation. The sequence of subsequent add operations is altered based on preceding ones the returned values.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07342682",
	"publication_date": "2008-03-11",
	"application_number": "10309880",
	"application_date": "2002-12-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information processing apparatus having printer driver and sheet parameter setting method for printer driver",
	"summary": "",
	"abstract": "It is necessary to switch print settings and color processing tables to optimum ones in accordance with a type of sheet which is used in a printer. In the case of enabling a new sheet to be used, a setting can be easily added without newly forming a whole printer driver. Print set information regarding the new sheet is set into a media script and fetched into a media block via a compiler. Control is made so as to store the print set information from a media database API into a media database. When the new sheet is selected on a driver display screen, the media database is searched from the media database API and print data is formed on the basis of the print set information.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07339693",
	"publication_date": "2008-03-04",
	"application_number": "10614096",
	"application_date": "2003-07-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information processing apparatus, distributed printing method, and storage medium",
	"summary": "",
	"abstract": "A requested print job is divided and distributed to a plurality of printers to efficiently and correctly print data of the print job, with only a simple user instruction of distributed printing. Under the control of a distribution controller, data of a print job is divided into data corresponding to the number of printers from which the data is output, and spooled in specific file formats in accordance with a combination of the printers. In accordance with the spooled data, divided print data is generated and distributed to the printers via a network under the control of a transmission controller.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07359081",
	"publication_date": "2008-04-15",
	"application_number": "11418030",
	"application_date": "2006-05-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information processing apparatus, information processing method, and control program",
	"summary": "",
	"abstract": "The following method and an apparatus, a medium, and the like to which the method can be applied are disclosed as examples of embodiments. In an information processing method in an information processing apparatus which can communicate with an image forming apparatus, the method has a recognizing step of recognizing that a driver program for an image forming process is installed into the information processing apparatus, an obtaining step of obtaining construction information which is used for setting of the driver program from an outside, an activating step of activating the obtaining step in response to the recognition of the installation of the driver program by the recognizing step, and a setting step of setting the construction information obtained by the obtaining step so that it can be read by the driver program.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07383554",
	"publication_date": "2008-06-03",
	"application_number": "10459502",
	"application_date": "2003-06-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information processing apparatus, information processing method, and control program",
	"summary": "",
	"abstract": "An information processing method for managing the usage of an image processing apparatus. The image processing method includes a managing step for managing log information that indicates the usage of the image processing apparatus; a registering step for registering image-processing-apparatus user information concerning an image-processing-apparatus user in the log information managed in the managing step; a first acquiring step for acquiring a limit value of an amount used that is input in response to the registration of the image-processing-apparatus user information in the registering step; and a setting step for automatically setting the limit value acquired in the first acquiring step as a limit value of a usage fee for the image-processing-apparatus user.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07436552",
	"publication_date": "2008-10-14",
	"application_number": "10718386",
	"application_date": "2003-11-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information processing apparatus, information processing method, computer readable program and storage medium product storing computer readable program",
	"summary": "",
	"abstract": "When users employ a printer driver having the function of automatically selecting a development mode, the invention is intended to make the function of automatically selecting a development mode more convenient to the users. To that end, when one of development modes including a vector mode and an image mode is automatically decided, the printer driver automatically decides a plurality of print setting items in printing data to be processed in the decided development mode depending on the contents of drawing.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07423775",
	"publication_date": "2008-09-09",
	"application_number": "11179540",
	"application_date": "2005-07-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information processing apparatus, method of controlling printing, computer program, and printing system",
	"summary": "",
	"abstract": "In order to reduce the total time needed to print data produced by application software, producing of data and printing of the data are performed in parallel. In the parallel processing mode, the application software outputs data part by part in the same order as the order in which the data is printed by a printer on printing paper in a printing direction, that is, in a direction from the top to the bottom of the page. A printer driver declares to an OS (Operating System) that the OS should perform processing in an unbanding mode, and banding is performed by the printer driver. In the parallel processing mode, data of an area is printed when data of a next area is being scanned, and thus the total time from the start of a copying process to the end of printing is reduced.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07365868",
	"publication_date": "2008-04-29",
	"application_number": "10658024",
	"application_date": "2003-09-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Job management apparatus, job management system, job management method, and storage medium storing program",
	"summary": "",
	"abstract": "In the past, a computer that processes data and an output apparatus that receives the processed data and outputs the same have managed the data differently. Therefore, it has been difficult to correctly grasp job information. According to this invention, logs are obtained from both of a computer that processes data and an output apparatus that outputs the processed data and merged to be managed. Therefore, job information can be managed collectively and correctly.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07420696",
	"publication_date": "2008-09-02",
	"application_number": "10410344",
	"application_date": "2003-04-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Monitoring job status for grouped print jobs",
	"summary": "",
	"abstract": "When a group print job is to be processed, a print application issues a grouping start instruction to a print system client first. The respective print jobs are then transmitted to a spooler. The print system client extracts the print jobs and sends them to a printer in accordance with scheduling by a print system server. In this case, if a transmission retry, transmission error, error after transmission, or the like occurs in a member print job belonging to the group job, the corresponding status is set as the status of the group job. The subsequent processing is performed as if the error had occurred in the overall group job.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07315404",
	"publication_date": "2008-01-01",
	"application_number": "09969819",
	"application_date": "2001-10-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Print managing apparatus, device driver registering method, and device driver registering program",
	"summary": "",
	"abstract": "In a system in which a client, a plurality of output devices, and a server are connected via a network, it is an object to enable a device driver to be installed into the server by a remote operation of the client and eliminate troublesomeness upon setting of a construction of a port. A Web server has a port constructing unit and a driver installing unit which operate in response to a remote instruction from the client and its construction is realized by making those units operative under the local system authority.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07461375",
	"publication_date": "2008-12-02",
	"application_number": "10406308",
	"application_date": "2003-04-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Printing system and management method therefor",
	"summary": "",
	"abstract": "A computer transmits a command to change the operation of a print command to a printing apparatus. The printing apparatus changes the operation of the print command and records information (print record) associated with printing on a storage unit in accordance with the changed print command. The reading unit of the computer reads the print record recorded by the printing apparatus, and the management unit of the computer manages the read print record.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07352484",
	"publication_date": "2008-04-01",
	"application_number": "10190694",
	"application_date": "2002-07-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Program storable image forming apparatus, control method, and control program",
	"summary": "",
	"abstract": "An image forming apparatus has a first execution environment that can interpret and execute a first-format instruction for controlling the image forming apparatus, and a second execution environment that can interpret and execute a second-format instruction defined by a format that does not depend on a type of the image forming apparatus, realized in the first execution environment. The image forming apparatus includes control means for controlling processing of starting execution of the first-format instruction from the second execution environment, using a second-format predetermined instruction, recognition means for recognizing, when interpreting the second-format instruction by executing application software in the second execution environment, whether or not an instruction string to be executed is the second-format predetermined instruction, and control means for controlling the image forming apparatus by starting and executing the first-format instruction via the second-format predetermined instruction when the recognition means has recognized that the instruction to be executed is the second-format predetermined instruction, and for controlling the image forming apparatus so as to execute the second-format predetermined instruction in the second execution environment when the recognition means has recognized that the instruction to be executed is not the second-format predetermined instruction.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07460253",
	"publication_date": "2008-12-02",
	"application_number": "10421883",
	"application_date": "2003-04-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Rendering images containing video",
	"summary": "",
	"abstract": "A video node for use in rendering one or more video frames of a video stream. The video node is represented by a compositing tree (). The compositing tree () comprises at least one image primitive node () representing one or more video frames () of the video stream. At least one of the video frames () represented by the image primitive node () is composited with at least one further graphical primitive represented by at least one further primitive node () of the compositing tree (). The video frame () is composited with the further graphical primitive according to a compositing operation represented by an operation node of the compositing tree () in order to generate a composite image () represented by at least one composite node () of the compositing tree ().",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07403209",
	"publication_date": "2008-07-22",
	"application_number": "11081724",
	"application_date": "2005-03-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for detecting unauthorized access using a voice signature",
	"summary": "",
	"abstract": "A method for detecting unauthorized access is provided. The method includes receiving a voice input associated with a request to access an account. A request voice signature corresponding to the voice input associated with the request is generated. An authorized voice signature corresponding to the account is retrieved. The request voice signature corresponding to the voice input is compared with the authorized voice signature corresponding to the account. Unauthorized access is detected in response to the comparison.",
	"url": null,
	"owner": "Capital One Financial Corporation",
	"publication_number": "07430287",
	"publication_date": "2008-09-30",
	"application_number": "11689232",
	"application_date": "2007-03-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method to correct magnetic field/phase variations in proton resonance frequency shift thermometry in magnetic resonance imaging",
	"summary": "",
	"abstract": "PRF shift MRI data is acquired. The PRF shift MRI data may include signals affected by both a desired PRF shift and an undesired PRF shift. Thus, example systems and methods describe manipulating the PRF shift MR! data to make it substantially free of the effects of the undesired PRF shift, which facilitates displaying certain MRI images based on the desired PRF shift.",
	"url": null,
	"owner": "Case Western Reserve University",
	"publication_number": "07359745",
	"publication_date": "2008-04-15",
	"application_number": "10437662",
	"application_date": "2003-05-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Autonomic control of a distributed computing system using rule-based sensor definitions",
	"summary": "",
	"abstract": "A distributed computing system conforms to a multi-level, hierarchical organizational model. One or more control nodes provide for the efficient and automated allocation and management of computing functions and resources within the distributed computing system in accordance with the organization model. A user, such as a system administrator, interacts with the control nodes to logically define the hierarchical organization of distributed computing system. The control node includes an automation subsystem having one or more rule engines that provide autonomic control of the application nodes in accordance with a set of one or more rules. For example, the rules may define sensors or methods of configuring the distributed computing system. More specifically, the sensor rules define the conditions under which the automation subsystem may update a model of the distributed computing system based on data received from the distributed computing system.",
	"url": null,
	"owner": "Cassatt Corporation",
	"publication_number": "07454427",
	"publication_date": "2008-11-18",
	"application_number": "11176161",
	"application_date": "2005-07-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for causing an idle image to execute on an application node of a distributed computing system when instructed to power down",
	"summary": "",
	"abstract": "A distributed computing system contains one or more application nodes. One or more control nodes provide for the efficient and automated allocation and management of computing functions and resources within the distributed computing system. The control node includes an automation subsystem that provides autonomic power control for the application nodes, regardless of which vendor manufactured the application nodes. For power controllers not specifically supported by the distributed computing system, a universal power controller responds to power down instructions by causing a targeted application node to execute an idle software image and reports that the application node has been successfully powered down.",
	"url": null,
	"owner": "Cassatt Corporation",
	"publication_number": "07401238",
	"publication_date": "2008-07-15",
	"application_number": "11192303",
	"application_date": "2005-07-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for efficient collection and storage of experimental data",
	"summary": "",
	"abstract": "Methods and system for efficient collection and storage of experimental data allow experimental data from high-throughput, feature-rich data collection systems, such as high-throughput cell data collection systems to be efficiently collected, stored, managed and displayed. The methods and system can be used, for example, for storing, managing, and displaying cell image data and cell feature data collected from microplates including multiple wells and a variety of bio-chips in which an experimental compound has been applied to a population of cells. The methods and system provide a flexible and scalable repository of experimental data including multiple databases at multiple locations including pass-through databases that can be easily managed and allows cell data to be analyzed, manipulated and archived. The methods and system may improve the identification, selection, validation and screening of new drug compounds that have been applied to populations of cells.",
	"url": null,
	"owner": "Cellomics, Inc.",
	"publication_number": "07467153",
	"publication_date": "2008-12-16",
	"application_number": "10649323",
	"application_date": "2003-08-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure telematics",
	"summary": "",
	"abstract": "A telematics system that includes a security controller is provided. The security controller is responsible for ensuring secure access to and controlled use of resources in the vehicle. The security measures relied on by the security controller can be based on digital certificates that grant rights to certificate holders, e.g., application developers. In the case in which applications are to be used with vehicle resources, procedures are implemented to make sure that certified applications do not jeopardize vehicle resource'0 security and vehicle users' safety. Relationships among interested entities are established to promote and support secure vehicle resource access and usage. The entities can include vehicle makers, communication service providers, communication apparatus vendors, vehicle subsystem suppliers, application developers, as well as vehicle owners/users. At least some of the entities can be members of a federation established to enhance and facilitate secure access and usage of vehicle resources.",
	"url": null,
	"owner": "Cellport Systems, Inc.",
	"publication_number": "07366892",
	"publication_date": "2008-04-29",
	"application_number": "10767548",
	"application_date": "2004-01-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed computing system architecture",
	"summary": "",
	"abstract": "A computing system architecture is based upon a peer-to-peer, asynchronous model. The architecture specifies a set of infrastructure facilities that comprise an inter-prise operating system. The inter-prise operating system provides all the facilities that make application coding as easy in the peer-to-peer asynchronous model as it is in a hierarchical, synchronous model. Services, which reside in containers, are linked asynchronously by an inter-prise bus and use data from a virtual data store.",
	"url": null,
	"owner": "Charles Schwab & Co., Inc.",
	"publication_number": "07444433",
	"publication_date": "2008-10-28",
	"application_number": "11638080",
	"application_date": "2006-12-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for rapidly generating identifiers for records of a database",
	"summary": "",
	"abstract": "A method and apparatus generates identifiers of database records apart from the database. One or more application programs may request an identifier of a transaction, and a stored identifier of a prior transaction is incremented or otherwise altered to produce the identifier of the transaction. The identifier is provided to the application program, which uses it as an identifier of a record of a database if such a record is created. If a system failure occurs, the database is scanned to identify the most recently issued identifier stored in the database, for example by requesting from the database the highest transaction number stored, and that number is used to generate the next transaction number.",
	"url": null,
	"owner": "Charles Schwab & Co., Inc.",
	"publication_number": "07359921",
	"publication_date": "2008-04-15",
	"application_number": "10812594",
	"application_date": "2004-03-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System providing methodology for securing interfaces of executable files",
	"summary": "",
	"abstract": "A system providing methodology for securing interfaces of executable files is described. In one embodiment, for example, a method is described for securing a program comprised of a plurality of interoperable components, the method comprises steps of: extracting information about a function of a first component of the program that is callable by at least one other component of the program; securing the extracted information; in response to an attempt by a second component of the program to invoke the function of the first component, validating authenticity of the second component; and if the second component is validated, providing access to the function of the first component using the secured extracted information.",
	"url": null,
	"owner": "Check Point Software Technologies, Inc.",
	"publication_number": "07360097",
	"publication_date": "2008-04-15",
	"application_number": "10711491",
	"application_date": "2004-09-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automated trading exchange system having integrated quote risk monitoring and integrated quote modification services",
	"summary": "",
	"abstract": "An automated trading exchange having integrated quote risk monitoring and quote modification services. An apparatus is implemented using at least one computer, having memory, and a processor. The computer is configured to receive orders and quotes, wherein specified ones of the quotes are contained in a quote group, and have associated trading parameters such as a risk threshold. Not all received quotes are required to have trading parameters as described herein. Preferably, the quote group contains all the quotes, or a subset of quotes, belonging to an individual market-maker for a given class of options contracts, or possibly the quotes of two or more market-makers that have identified themselves as belonging to a group for the purposes of risk monitoring and quote modification. The computer typically generates a trade by matching the received orders and quotes to previously received orders and quotes, and otherwise stores each of the received orders and quotes if a trade is not generated. The computer then determines whether a quote within the quote group has been filled as a result of the generated trade, and if so, determines a risk level and an aggregate risk level associated with said trade. The computer then compares the aggregate risk level with the market-maker's risk threshold, and if the threshold is exceeded, automatically modifies at least one of the remaining quotes in the quote group. The computer may also automatically regenerate quotes that have been filled.",
	"url": null,
	"owner": "Chicago Board Options Exchange, Incorporated",
	"publication_number": "07356498",
	"publication_date": "2008-04-08",
	"application_number": "09475534",
	"application_date": "1999-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for monitoring trades outside of a no-bust range in an electronic trading system",
	"summary": "",
	"abstract": "An alert system that notifies an Exchange's staff of a trade that appears to be outside of an expected market range of prices includes an input device, determination logic, evaluation logic, and alert logic. The determination logic derives a theoretical no-bust range of prices based on data received from the input device. The theoretical no-bust range of prices are prices above and below a synthesized market price, within which an erroneous trade cannot be cancelled. The evaluation logic monitors trades and compares those trades to the theoretical no-bust range of prices. The alert logic notifies the Exchange's staff when the evaluation logic identifies a potentially erroneous trade that lies outside the theoretical no-bust range of prices. A method of notifying the Exchange of a trade that potentially lies outside of an expected range of prices includes monitoring an input range of prices and deriving the theoretical no-bust range of prices. The method then compares transactions prices to the theoretical no-bust range of prices and notifies the Exchange when a potentially erroneous trade can be cancelled.",
	"url": null,
	"owner": "Chicago Mercantile Exchange",
	"publication_number": "07464055",
	"publication_date": "2008-12-09",
	"application_number": "10405025",
	"application_date": "2003-03-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Throttling distributed statistical data retrieval in a network device",
	"summary": "",
	"abstract": "The present invention provides a method and apparatus for managing distributed statistical data retrieval in a network device. Periodically, statistical data is gathered by processes on one or more remote cards in a network device and transferred to a central process. The statistical data may comprise, for example, management/historical data including accounting, performance, security and fault logging data (or some portion thereof). In one embodiment, the central process may notify each process as to when gathered statistical data may be reported. This allows the central process to throttle the amount of data sent to the central process in accordance with any existing backlog of data to be processed by the central process.",
	"url": null,
	"owner": "Ciena Corporation",
	"publication_number": "07349960",
	"publication_date": "2008-03-25",
	"application_number": "09670455",
	"application_date": "2000-09-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for querying message information",
	"summary": "",
	"abstract": "A method for querying message information includes assigning a unique identifier to a message transmitted in a wireless network, providing the unique identifier to a wireless device associated with the message, receiving the unique identifier in a query request, and retrieving the message information from the wireless network based on the unique identifier.",
	"url": null,
	"owner": "Cingular Wireless II, LLC",
	"publication_number": "07319858",
	"publication_date": "2008-01-15",
	"application_number": "10299182",
	"application_date": "2002-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for improving performance in computer networks based on lossy channel",
	"summary": "",
	"abstract": "A method and system for improving networking performance in networks based on lossy channels. A selected file system call  is redirected by sending a file request to a server over a first protocol. Data is received from the server in response to the file request over a second protocol.",
	"url": null,
	"owner": "Cirrus Logic, Inc.",
	"publication_number": "07424544",
	"publication_date": "2008-09-09",
	"application_number": "10744204",
	"application_date": "2003-12-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for providing server state and attribute management for voice enabled web applications",
	"summary": "",
	"abstract": "A unified web-based voice messaging system provides voice application control between a web browser and an application server via an hypertext transport protocol (HTTP) connection on an Internet Protocol (IP) network. The application server generates and maintains a server-side data record, also referred to as a u201cbrownieu201d, that includes application state information and user attribute information for an identified user session with the web browser. The application server, in response to receiving a new web page request from the browser, initiates a web application instance to begin a transient application session with the browser. The brownie also includes a session identifier that uniquely identifies the session with the user of the application session. The application server stores the brownie in a memory resident within the server side of the network, and sends to the browser the session identifier and the corresponding web page requested by the web browser.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07328269",
	"publication_date": "2008-02-05",
	"application_number": "10799618",
	"application_date": "2004-03-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application server configured for dynamically generating web forms based on extensible markup language documents and retrieved subscriber data",
	"summary": "",
	"abstract": "An application server, configured for dynamically generating a web page (e.g., HTML) document based on execution of XML documents, dynamically generates an HTML page having selected form elements based on a stored XML document that defines available HTML form elements and respective attributes, and based on user attributes retrieved by the application server from an open network database server (such as LDAP). The application server, in response to a request from a user, accesses an XML document configured for specifying attributes associated with the request; the XML document may specify as form elements menus that are available for generation based on qualified user attributes, or may specify HTML fields that can be generated for display on the HTML page based on the qualified user attributes. The application server also retrieves the user attributes, and dynamically generates the HTML page based on identifying the user attributes matching the qualified user attributes of the accessed XML document. Hence, HTML pages having form elements can be dynamically generated, providing personalized HTML pages without the necessity of modifying CGI scripts or stored HTML pages.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07346840",
	"publication_date": "2008-03-18",
	"application_number": "09791895",
	"application_date": "2001-02-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automated real-time site survey in a shared frequency band environment",
	"summary": "",
	"abstract": "An intelligent spectrum management (ISM) system and method that includes sophisticated features to detect, classify, and locate sources of RF activity. The system comprises one or more radio sensor devices positioned at various locations in a region where activity in a shared radio frequency band is occurring. A server is coupled to the radio sensor devices and aggregates the data generated by the sensor devices. The server receives data from each of the plurality of sensor devices and executes functions to process the data. One feature of the system is to correlate data collected from the sensor or from suitably equipped devices that operate (and may move about) in a space with locations where provocation of that data occurs. To this end, radio frequency energy is received at each of a plurality of known positions (e.g., the sensors) in a space. The positions in the space of one or more devices emitting radio frequency energy in the space is determined from the received radio frequency energy at the plurality of known positions (e.g., the sensors). A variety of positioning techniques may be employed, such as received signal strength, time-difference-of arrival, time-of-arrival, etc. Activity data representing characteristics of received radio frequency energy in the space is generated at the sensors or at suitable equipped devices that may move about the space. The server correlates the activity data with the positions in the space that are associated with the provocation of the activity data.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07444145",
	"publication_date": "2008-10-28",
	"application_number": "11500426",
	"application_date": "2006-08-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic re-provisioning of network elements to adapt to failures",
	"summary": "",
	"abstract": "A method of automatically re-provisioning a network element in adaptation to a failure comprises the computer-implemented steps of identifying a network element that has failed; selecting a substitute network element from among a pool of one or more available network elements; receiving connection configuration information from the identified network element; and, based on the connection configuration information, re-configuring the substitute network element and one or more switch devices associated with the identified network element, wherein the re-configuring causes the one or more switch devices to change one or more connections from the identified network element to the substitute network element.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07469279",
	"publication_date": "2008-12-23",
	"application_number": "10635894",
	"application_date": "2003-08-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Communication arrangement between virtual routers of a physical router",
	"summary": "",
	"abstract": "A virtual router (VR) communication arrangement enables services on different VRs executing on the same physical router to communicate without utilizing or substantially consuming communication resources, such as a network protocol stack and physical interfaces, of the physical router. The services are illustratively implemented as separately-scheduled VR processes executing on the physical router. A virtual router forwarding information base (vrFIB) is provided within a client socket library of each VR process and is used to determine whether the services are on the same physical router. If so, a lightweight interconnection is created between the services and a message (u201cpacketu201d) is forwarded over that interconnection to effectuate communication. If the services are not on the same physical router, the packet is sent over the network protocol stack and communication is established using the communication resources of the router.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07461154",
	"publication_date": "2008-12-02",
	"application_number": "10992499",
	"application_date": "2004-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Connecting an endpoint to a conference call",
	"summary": "",
	"abstract": "Connecting an endpoint to a conference call includes associating a caller identifier with a conference call identifier, where the caller identifier corresponds to an endpoint and the conference call identifier corresponds to a conference call. A call is received from the endpoint, and the caller identifier is determined to be associated with the conference call identifier. Connection of the endpoint to the conference call is initiated.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07466812",
	"publication_date": "2008-12-16",
	"application_number": "10691369",
	"application_date": "2003-10-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Controlling access of concurrent users of computer resources in a distributed system using an improved semaphore counting approach",
	"summary": "",
	"abstract": "A method of controlling concurrent users of a distributed resource on a network is disclosed. In one aspect, there are one or more local lock managers executing on corresponding hosts and cooperating as a distributed lock manager. The resource is limited to a maximum number of concurrent users. A user identification for each user is associated with one host. In response to a request associated with a particular user associated with a first host, a lock is requested from a first local lock manager process executing on the first host. A related method of handling a request for a count-limited resource includes receiving a request from a client process for the computer resource. If it is determined that the request exceeds a maximum count for the resource, then it is determined whether a current time is within a retry time period of the client's first request. If it is determined the current time is within the retry time period, then it is automatically determined again whether the request exceeds the maximum count for the resource. If it is determined that the request does not exceed the maximum count, then the resource is provided to the client process.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07328263",
	"publication_date": "2008-02-05",
	"application_number": "09774906",
	"application_date": "2001-01-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Directory-enabled network elements",
	"summary": "",
	"abstract": "A directory enabled network element, which in one embodiment, is a network device that has an element that enables querying, accessing, and updating directory information that is managed by a directory service of a network. An application programming interface (API) is configured to receive directory services requests from application programs (APs) and provide the directory services requests to the directory enabling element. A locator service is accessible using the API and configured to locate servers that provide the directory services. A bind service in the directory enabling element is coupled to a security protocol. An event service is configured to receive registration of an event and an associated action from an AP, notify the AP when the event occurs, and execute the associated responsive action. The network device can thereby automatically authenticate itself to a directory service.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07376827",
	"publication_date": "2008-05-20",
	"application_number": "09435015",
	"application_date": "1999-11-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Efficient processing of connection control messages in managing virtual circuits using signaling protocols",
	"summary": "",
	"abstract": "To send a connection control message associated with a first set of attributes, only a difference of the first set of attributes from a second set of attributes associated with an already active virtual circuit (to a common destination) may be sent (contained in the connection control message). The devices receiving the message may create the necessary configuration for the new virtual circuit by modifying a copy of the configuration of the active virtual circuit. Processing requirements may be minimized as the devices may not need to parse and decode long list of information element. The feature may be particularly important in setting up a virtual circuit for voice calls, as a long list of attributes may be associated with each virtual circuit, but the difference of attributes being only minimal.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07324526",
	"publication_date": "2008-01-29",
	"application_number": "10268767",
	"application_date": "2002-10-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing packet voice networks using a virtual entity approach",
	"summary": "",
	"abstract": "A method for managing packet voice networks conforming to ITU Recommendation H.323, using a virtual entity approach and abstract information model approach, is disclosed. A virtual zone object represents an association of a virtual gateway, which comprises an H.323 gateway and a signaling controller, and one or more associated virtual gatekeepers, each of which comprises an H.323 gatekeeper, or the combination of an H.323 gatekeeper and a route server. User input specifies a configuration operation on the virtual zone and one or more parameter values. One or more configuration instructions are automatically issued to both the gateway and the gatekeeper, and other involved objects representing other involved network elements, resulting in configuring both the gateway and the gatekeeper as specified in the user input. As a result, a user can configure or operate on a virtual zone or other virtual object as an atomic entity, for example, in a network management application, without involvement in complicated details of the actual network devices that provide a particular packet voice service.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07466710",
	"publication_date": "2008-12-16",
	"application_number": "10147014",
	"application_date": "2002-05-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Media gateway adapter",
	"summary": "",
	"abstract": "A method for communicating messages from a media gateway is disclosed. A thread pair comprising a communication protocol control stack thread and one or more media gateway adapter threads is assigned to a message from a media gateway. The thread pair is associated with a processor. The message is received from the media gateway at the communication protocol control stack thread, and is routed to a media gateway adapter thread corresponding to a communication protocol. The message is processed according to the communication protocol, and is sent to a call agent.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07320017",
	"publication_date": "2008-01-15",
	"application_number": "09948318",
	"application_date": "2001-09-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for balancing wireless access based on centralized information",
	"summary": "",
	"abstract": "A method and apparatus for managing and balancing wireless access based on centralized information is provided. A request to provide service to a wireless client is received from a first access node in a plurality of access node. An access policy, applicable to the first access node, is selected from a plurality of stored policies. The stored policies may include a variety of rules, such as how many or which wireless clients may be serviced by an access node. A centralized manager, such as an AAA server, may perform the selection of the access policy. A determination is made as to whether to allow the first access node to provide service to the wireless client based on the selected access policy. A message that instructs the first access node whether to provide or deny service to the wireless client is transmitted to the first access node.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07336960",
	"publication_date": "2008-02-26",
	"application_number": "10974418",
	"application_date": "2004-10-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for correlating output of distributed processes",
	"summary": "",
	"abstract": "A method for correlating output of distributed processes includes receiving certain information at a first process of multiple distributed processes that perform one computer application. The information includes a unique identifier for a particular instance of the application that is different from any other identifier for any other instance of the application. The unique identifier is included in data written by the first process to a first data structure. Based on the unique identifier, the data in the first data structure is correlated with data in a different, second data structure written by a different, second process.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07454761",
	"publication_date": "2008-11-18",
	"application_number": "10327225",
	"application_date": "2002-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for creating policies for policy-based management of quality of service treatments of network data traffic flows",
	"summary": "",
	"abstract": "A method and apparatus for creating policies for use in policy-based management of quality of service treatments of network data traffic flows are described. The policies are defined based on information about types of network traffic flows generated by an application program, and information about quality of service functions that are available in devices of the network. In one embodiment, application information is received that defines one or more traffic flows generated by an application program, including information identifying one or more points at which an application generates the traffic flows, from a first individual having responsibility for managing enterprise applications in the network. Further, QoS information is received that defines one of more quality of service treatments that the network device may apply to data processed by the network device, from a second individual having responsibility for managing the network. Based on the device QoS information and the application information, one or more processing policies that associate the traffic flows with the quality of service treatments are determined. Mappings of the application information to the quality of service treatments, which may be used to generate the quality of service value when the application program generates traffic flows, are created and stored. As a result, the policies are informed both by application program expertise and network expertise. Methods and mechanisms of integrating the policies into a directory are described.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07346677",
	"publication_date": "2008-03-18",
	"application_number": "09347438",
	"application_date": "1999-07-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for distributing and updating private keys of multicast group managers using directory replication",
	"summary": "",
	"abstract": "An approach for establishing secure multicast communication among multiple multicast proxy service nodes is disclosed. The multicast proxy service nodes, which can be distributed throughout an enterprise domain, are organized in a logical tree that mimics the logical tree arrangement of domains in a directory server system. The attributes of the multicast proxy service nodes include the group session keys that are members of the secure multicast or broadcast groups. Because keys as well as key version information are housed in the directory, multicast security can be achieved over any number of network domains across the entire enterprise. Key information is stored in, and the logical tree is supported by, a directory service. Replication of the directory accomplishes distribution of keys. Multicast proxy service nodes may obtain current key information from a local copy of the replicated directory.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07383436",
	"publication_date": "2008-06-03",
	"application_number": "10954525",
	"application_date": "2004-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for dynamic allocation and management of semaphores for accessing shared resources",
	"summary": "",
	"abstract": "Methods and apparatus are disclosed for dynamic allocation and management of semaphores for accessing shared resources. In one implementation, a semaphore manager maintains a data structure of resources having currently active resource requests and a list of each task requesting access and the particular type of access requested. When an access request is received for the first time for a resource, an entry is added to the data structure and access is authorized. Additional requests to access the resource may be received while the resource is allocated. If a new request for read access is received and the resource is currently under read access, access is granted and an entry is added to the data structure. Otherwise, the resource is currently unavailable, and access is either immediately denied or queued for possible future allowance during a specified, predetermined or forever duration.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07353515",
	"publication_date": "2008-04-01",
	"application_number": "09776794",
	"application_date": "2001-02-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing multiple authentication types using an authentication protocol that supports a single type",
	"summary": "",
	"abstract": "A method is disclosed for providing multiple authentication types within an authentication protocol that supports a single type of authentication for a client in communication with an authorization server over a network. One or more authentication request packets compliant with an authentication protocol are sent to the client. Each of the packets comprises a type value that specifies multiple authentication, and a data field having a value that is structured in compliance with the authentication protocol. Each of the packets is associated with one of a plurality of different authentication conversations with the client. A plurality of responses is received from the client for each of the authentication conversations. The sending and receiving steps are repeated until results are determined for the authentication conversations. The client is authenticated based on results of each of the plurality of authentication conversations. Embodiments provide multiple Extensible Authentication Protocol (EAP) authentication methods.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07421503",
	"publication_date": "2008-09-02",
	"application_number": "10346967",
	"application_date": "2003-01-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for provisioning network devices using instructions in Extensible Markup Language",
	"summary": "",
	"abstract": "A system and an apparatus are disclosed for carrying out automatic network device provisioning and configuration. A configuration service receives a request from a network device to provide configuration information. The configuration service retrieves a template describing the device configuration, where the template associates one symbolic reference to one parameter that may receive values specific to particular devices. Based at least on the symbolic reference and the request, the configuration service retrieves a value of the parameter that is specific to the network device. A device-specific instance of the configuration information is created and stored based at least one the template and the value of the parameter. The configuration information is stored in XML format and conforms to an XML DTD.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07395322",
	"publication_date": "2008-07-01",
	"application_number": "11404397",
	"application_date": "2006-04-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus providing a supply chain management system useful in outsourced manufacturing",
	"summary": "",
	"abstract": "A method is disclosed for automatically identifying and resolving one or more discrepancies in an outsourced manufacturing supply chain in which a plurality of supply chain partners participate. According to this aspect, information representing one or more supply chain events is received from each of the supply chain partners in a database with which each of the supply chain partners may communicate over a public network. One or more rules are applied periodically to the supply chain event information, resulting in generating one or more alerts pertaining to one or more discrepancies that are found in the supply chain event information. The alerts are communicated to the supply chain partners who are participating in a transaction to which the discrepancies relate. Each alert remains active until second information is received that represents a second supply chain event that resolves the alert. According to one feature, the alerts are periodically escalated until they are resolved. A hub-and-spoke supply chain management system that facilitates the foregoing method, and other features, is also disclosed. In other aspects, the invention encompasses a computer apparatus, a computer readable medium, and a carrier wave configured to carry out the foregoing steps.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07426478",
	"publication_date": "2008-09-16",
	"application_number": "11799671",
	"application_date": "2007-05-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus providing secure multicast group communication",
	"summary": "",
	"abstract": "An approach for establishing secure multicast communication among multiple members that participate in a multicast group is disclosed. In one feature, multiple multicast proxy service nodes (MPSNs) are defined and control when members join or leave the multicast group. The MPSNs are logically represented by a first binary tree in which each node of the first binary tree is associated with a domain of a directory service and one or more of the MPSNs. A second binary tree is created that has leaf nodes representing each member. The second binary tree is stored in a domain of the directory service with a root node that represents one or more of the MPSNs. The members can each establish multicast communication and serve as a key distribution center. When a member joins the multicast group, a new group session key is determined by replicating a branch of the second binary tree.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07434046",
	"publication_date": "2008-10-07",
	"application_number": "09728488",
	"application_date": "2000-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for optimized reliable non-member group communication through write-only membership",
	"summary": "",
	"abstract": "A group communication mechanism for optimized reliable non-member group communication through write-only membership is disclosed. The group communication mechanism comprises two or more group member processes that receive all messages that are sent to a group. The group communication mechanism further comprises a non-group member process that has a u201cwrite-onlyu201d group membership status and does not receive any messages that are sent to the group. The non-group member process is configured to send (a) one or more messages to the group, and (b) in connection with each message that it sends to the group, a different sequence value. Each sequence value identifies an order of a message relative to other messages that the non-group member process sends to the group.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07447202",
	"publication_date": "2008-11-04",
	"application_number": "10378997",
	"application_date": "2003-03-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for testing web-based applications",
	"summary": "",
	"abstract": "A method and system is disclosed for testing web-based applications. In one embodiment, the response time of one or more web pages is measured. The loading of a web page is initiated. A first event is received indicating preparation to navigate to the web page. A timer mechanism is started. A second event is received indicating that the web page has completed loading. The timer mechanism is stopped. The elapsed time for the web page to load is determined. In an alternative embodiment, a system for integrated testing of web-based applications is described. Multiple testing functions included in the integrated testing system include performance time measurement, URL recording and replay and HTML link validation.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07330887",
	"publication_date": "2008-02-12",
	"application_number": "10337739",
	"application_date": "2003-01-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for tracking an event through multiple module-specific files",
	"summary": "",
	"abstract": "A method and apparatus for tracking data associated with an event across multiple files includes generating a particular value upon occurrence of a particular event during a first process spawned from a first module. The particular value is unique among all events during processes spawned from all modules. First data associated with the particular event is written to a first file of the multiple files. The first file records information associated with the first process according to the first module. The first data includes the particular value. Second data is sent to a second process spawned from a second module. The second data includes the particular value.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07424716",
	"publication_date": "2008-09-09",
	"application_number": "10198946",
	"application_date": "2002-07-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network tunneling method and apparatus",
	"summary": "",
	"abstract": "Method and apparatus for tunneling any existing data-, control-, or routing-related protocol through a generic Internet protocol (IP) transport are described. The method includes providing a generic messaging structure that includes at least a transport protocol, a message buffer, a source-address field and one or more data fields for transparent routing of a user protocol over the IP transport and also providing an application program interface to the generic messaging structure, the interface including a mechanism for a user to choose a desired transport and associated protocol for transparently routing the user protocol over the transport in accordance with the chosen transport protocol within the one or more data fields. Alternatively or additionally, the method includes creating a base class library including plural defined source and header files and further providing a mechanism for deriving a transaction-based protocol-specific class that is compatible with the base class library. The apparatus is an application programming interface (API), preferably coded in C/C++, for transparently routing data between sockets in such an IP transport. The API includes a message buffer data structure defining a protocol-generic parent class, message, source-address and data fields; a message creation mechanism for creating a message and adding it to the message buffer data structure; and a protocol creation mechanism for deriving a protocol-specific child class that renders new protocol-specific sub-fields of the protocol field of the message buffer data structure.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07395343",
	"publication_date": "2008-07-01",
	"application_number": "10083891",
	"application_date": "2002-02-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Providing a multicast service in a communication network",
	"summary": "",
	"abstract": "Providing a multicast service includes maintaining multicast service information at an application server. The multicast service information describes a multicast service having an associated subscriber, and the multicast service is operable to deliver multicast content from a multicast source. A cell supporting a user device associated with the subscriber is determined, and creation of a bearer path for the multicast service is initiated. Delivery of the multicast content to the user device is enabled using the bearer path.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07423986",
	"publication_date": "2008-09-09",
	"application_number": "10810189",
	"application_date": "2004-03-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Resource sharing among multiple RSVP sessions",
	"summary": "",
	"abstract": "In one embodiment, a technique is provided to share resources among data flows. An apparatus receives a request for a new data flow where the new data flow is associated with a session group (ID). The apparatus determines that the session group ID of the new data flow matches a session group ID of one or more existing data flows, and that the one or more existing data flows are not already sharing resources with another data flow that has a session group ID different from the first session group ID. Provided this is true, the apparatus shares resources reserved for the one or more existing data flows with the new data flow.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07454504",
	"publication_date": "2008-11-18",
	"application_number": "11584854",
	"application_date": "2006-10-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Single number reachability using cellular and desktop telephones",
	"summary": "",
	"abstract": "A system for providing a single number reachability solution for communications with a desktop telephone and a cellular telephone includes a mobility application coupled to a call management application. The call management application can associate a telephone number with a desktop telephone and a first communication port, receive a first telephone call initiated by a remote device and directed to the telephone number, and offer the first telephone call to the desktop telephone and to the first communication port. The mobility application can associate the first communication port with a cellular telephone, obtain a second communication port from multiple available communication ports in response to the offer, and place a second telephone call to the cellular telephone using the second communication port. Signaling associated with a communication session with the remote device passes through a call management application, and media associated with the communication session passes directly between the remote device and an answering device.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07319864",
	"publication_date": "2008-01-15",
	"application_number": "10988886",
	"application_date": "2004-11-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for management of a shared frequency band",
	"summary": "",
	"abstract": "A system, method, software and related functions are provided for managing activity in a radio frequency band that is shared, both in frequency and time, by signals of multiple types. An example of such a frequency band is an unlicensed frequency band. Radio frequency energy in the frequency band is captured at one or more devices and/or locations in a region where activity in the frequency band is happening. Signals occurring in the frequency band are detected by sampling part or the entire frequency band for time intervals. Signal pulse energy in the band is detected and is used to classify signals according to signal type. Using knowledge of the types of signals occurring in the frequency band and other spectrum activity related statistics (referred to as spectrum intelligence), actions can be taken in a device or network of devices to avoid interfering with other signals, and in general to optimize simultaneous use of the frequency band with the other signals. The spectrum intelligence may be used to suggest actions to a device user or network administrator, or to automatically invoke actions in a device or network of devices to maintain desirable performance.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07424268",
	"publication_date": "2008-09-09",
	"application_number": "10420515",
	"application_date": "2003-04-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for management of a shared frequency band using client-specific management techniques",
	"summary": "",
	"abstract": "A system and method are provided for managing communication with a plurality of wireless client devices operating in a radio frequency band shared by other types of devices, comprising a step of controlling at least one parameter associated with radio communication with each of the plurality of wireless devices based on the radio frequency environment associated with each corresponding one of the plurality of wireless client devices. Spectrum profile information describing the radio frequency environment (activity in the frequency band) at a wireless client device is sent to the wireless base station device (where the parameter controls are made) from either a wireless client device or another radio device in the proximity of one or more wireless client devices that is capable of generating the spectrum profile information. The spectrum profile information may include information identifying signals that are occurring in the frequency band in the proximity of a wireless client device. Examples of parameters that may be controlled at the wireless base station device include packet fragmentation threshold (the length of a data packet), transmission data rate and transmission scheduling (synchronizing a transmission to quiescent intervals of one or more periodic interfering signals).",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07408907",
	"publication_date": "2008-08-05",
	"application_number": "10641973",
	"application_date": "2003-08-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method providing for interaction between programming languages",
	"summary": "",
	"abstract": "Interaction between programming languages includes receiving a command from a user, where the command is written in a first programming language. The first programming language is converted to an intermediate language. Translations are performed between the intermediate language and a second programming language to provide interaction between the first and second programming languages.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07406683",
	"publication_date": "2008-07-29",
	"application_number": "11070015",
	"application_date": "2005-03-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "User interface and time-shifted presentation of data in a system that monitors activity in a shared radio frequency band",
	"summary": "",
	"abstract": "An intelligent spectrum management (ISM) system and method that includes sophisticated features to detect, classify, and locate sources of RF activity. The system comprises one or more radio sensor devices positioned at various locations in a region where activity in a shared radio frequency band is occurring. A server is coupled to the radio sensor devices and aggregates the data generated by the sensor devices. Data collected and processed by the server from the sensors may be coupled to a console application that displays the data in desirable user interface format. According to one aspect, the server continuously stores spectrum analysis data pertaining to activity in a frequency band over time and/or protocol analysis data pertaining to analysis of packets transmitted in the frequency band according to a communication protocol. A console application includes a time-shift display mode that permits a user to specify an instant of time prior to the current time from which to playback spectrum analysis data and/or protocol analysis data generated by one or more radio sensor devices.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07460837",
	"publication_date": "2008-12-02",
	"application_number": "10953231",
	"application_date": "2004-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for distributed program execution with web-based file-type association",
	"summary": "",
	"abstract": "In one aspect the invention relates to a method for enabling distributed program execution in a network that includes a client system and a plurality of server systems. The method includes the step of presenting a graphical depiction of a data file that is stored on a web server. A request to execute a first executable program, that includes information concerning a second executable program associated with the data file is reviewed. The second program can execute with on the client system or one of a plurality of server systems. Application output data from the second executable program is reviewed and formatted by the first executable program and received application output data is presented to the user.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07330872",
	"publication_date": "2008-02-12",
	"application_number": "09970462",
	"application_date": "2001-10-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for identifying long matches of data in a compression history",
	"summary": "",
	"abstract": "Systems and methods of storing previously transmitted data and using it to reduce bandwidth usage and accelerate future communications are described. By using algorithms to identify long compression history matches, a network device may improve compression efficiently and speed. A network device may also use application specific parsing to improve the length and number of compression history matches. Further, by sharing compression histories, compression history indexes and caches across multiple devices, devices can utilize data previously transmitted to other devices to compress network traffic. Any combination of the systems and methods may be used to efficiently find long matches to stored data, synchronize the storage of previously sent data, and share previously sent data among one or more other devices.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07453379",
	"publication_date": "2008-11-18",
	"application_number": "11685170",
	"application_date": "2007-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods of clustered sharing of compression histories",
	"summary": "",
	"abstract": "Systems and methods of storing previously transmitted data and using it to reduce bandwidth usage and accelerate future communications are described. By using algorithms to identify long compression history matches, a network device may improve compression efficiently and speed. A network device may also use application specific parsing to improve the length and number of compression history matches. Further, by sharing compression histories, compression history indexes and caches across multiple devices, devices can utilize data previously transmitted to other devices to compress network traffic. Any combination of the systems and methods may be used to efficiently find long matches to stored data, synchronize the storage of previously sent data, and share previously sent data among one or more other devices.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07460038",
	"publication_date": "2008-12-02",
	"application_number": "11685165",
	"application_date": "2007-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed computing infrastructure including autonomous intelligent management system",
	"summary": "",
	"abstract": "Systems and methods are disclosed for a distributed computing infrastructure on a computer network comprising a plurality of computers. The distributed computing infrastructure (DCI) provides a software platform for creating, running, and managing distributed applications. DCI may include XML-capable software applications on a peer-to-peer network. DCI may include small, network-unaware applications called peerlets. DCI may include a system and method for creating complex distributed applications using pre-complied binaries. DCI may include a capability for multiple, independent collaborative sessions for distributed collaborative applications (e.g., chat, instant messaging, shared whiteboard, etc.). DCI may include systems and methods for reducing interactions between users and applications to archivable form and then playing back the interactions. DCI may include a system and method for automatic software retrieval on a peer-to-peer network.",
	"url": null,
	"owner": "ClearCube Technology, Inc.",
	"publication_number": "07434220",
	"publication_date": "2008-10-07",
	"application_number": "10662936",
	"application_date": "2003-09-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed computing infrastructure including small peer-to-peer applications",
	"summary": "",
	"abstract": "Systems and methods are disclosed for a distributed computing infrastructure on a computer network comprising a plurality of computers. The distributed computing infrastructure (DCI) provides a software platform for creating, running, and managing distributed applications. DCI may include XML-capable software applications on a peer-to-peer network. DCI may include small, network-unaware applications called peerlets. DCI may include a system and method for creating complex distributed applications using pre-complied binaries. DCI may include a capability for multiple, independent collaborative sessions for distributed collaborative applications (e.g., chat, instant messaging, shared whiteboard, etc.). DCI may include systems and methods for reducing interactions between users and applications to archivable form and then playing back the interactions. DCI may include a system and method for automatic software retrieval on a peer-to-peer network.",
	"url": null,
	"owner": "ClearCube Technology, Inc.",
	"publication_number": "07370336",
	"publication_date": "2008-05-06",
	"application_number": "10662933",
	"application_date": "2003-09-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed resource manager",
	"summary": "",
	"abstract": "A distributed resource manager for managing resources among a plurality of networked computers, e.g., computer blades. The resource manager executes on two or more of the computers, e.g., substantially concurrently, collecting data related to usage, performance, status, and/or load, for a component, process, and/or attribute of one or more computers, and evaluating operation rules based on the collected data to determine one or more resource management operations, e.g., re-configuring, activating/deactivating, and/or switching and/or swapping computers, for more efficient allocation of resources. Each executing resource manager transmits the determined resource management operations to the other executing resource managers, receives respective determined resource management operations from them, and resolves conflicts between the determined resource management operations and the received respective determined resource management operations, thereby generating a modified one or more resource management operations. The modified resource management operations may be performed with or without human input.",
	"url": null,
	"owner": "ClearCube Technology, Inc.",
	"publication_number": "07328261",
	"publication_date": "2008-02-05",
	"application_number": "10301518",
	"application_date": "2002-11-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing virtual network attached storage using excess distributed storage capacity",
	"summary": "",
	"abstract": "A system and method are disclosed for using free storage capacity on a plurality of storage media as a virtual storage device on a computer network comprising a plurality of computers. A first portion of each storage medium stores data. To implement Virtual Network Attached Storage (VNAS), the respective u201cfreeu201d second portions of each storage medium are aggregated into a shared storage volume. Computers on the network may mount the shared storage volume at one of a plurality of mount points and may store data on the shared storage volume. VNAS may be implemented in a peer-to-peer manner whereby each computer acts as a server for the data stored on its part of the shared storage volume (i.e., the second portion of its storage media). VNAS may be used to implement a system and method for managing data fail-over.",
	"url": null,
	"owner": "ClearCube Technology, Inc.",
	"publication_number": "07370083",
	"publication_date": "2008-05-06",
	"application_number": "11557606",
	"application_date": "2006-11-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for reducing user-application interactions to archivable form",
	"summary": "",
	"abstract": "Systems and methods are disclosed for a distributed computing infrastructure on a computer network comprising a plurality of computers. The distributed computing infrastructure (DCI) provides a software platform for creating, running, and managing distributed applications. DCI may include XML-capable software applications on a peer-to-peer network. DCI may include small, network-unaware applications called peerlets. DCI may include a system and method for creating complex distributed applications using pre-complied binaries. DCI may include a capability for multiple, independent collaborative sessions for distributed collaborative applications (e.g., chat, instant messaging, shared whiteboard, etc.). DCI may include systems and methods for reducing interactions between users and applications to archivable form and then playing back the interactions. DCI may include a system and method for automatic software retrieval on a peer-to-peer network.",
	"url": null,
	"owner": "ClearCube Technology, Inc.",
	"publication_number": "07430616",
	"publication_date": "2008-09-30",
	"application_number": "10662889",
	"application_date": "2003-09-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing transactions on a network: four or more parties",
	"summary": "",
	"abstract": "A system for managing user accounts and controlling anonymous access to resources over data networks for a plurality of provider members in a manner to preserve the secrecy of the identity of a user who is in a home provider's user/customer base. The system includes a means for sharing non-identifying user information and charges among a plurality of service provider members, including a home provider and an outside provider, a means for enabling a user who is registered as a customer with the home provider to anonymously access the resources of the outside provider, a sharing means adapted to allow the system to permit the home provider to enable access by the user to the resources of the outside provider without requiring either personal identification or an open account for the user at the outside provider, and a verification means separate from the home provider adapted to allow the outside provider to determine the user's access privileges and criteria. The verification means may include a token and authentification server. The verification means preferably does not have access to personal identification information of the user. Preferably the verification server is separate from the provider members. In another aspect, the system includes means for enabling a user who is registered as a customer with the home provider to access the resources of the outside provider, while allowing the appearance that the resources are accessed directly from the home provider.",
	"url": null,
	"owner": "Clickshare Service Corporation",
	"publication_number": "07324972",
	"publication_date": "2008-01-29",
	"application_number": "09599163",
	"application_date": "2000-06-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for network operation",
	"summary": "",
	"abstract": "A network of secure servers, requiring no central entity to administer user identities or access permissions. Each autonomous server hosts a set of user accounts. Users may link to and access the accounts of all other users in the network. Resources in accounts are private, but users may grant each other partial permissions to them. Links and permissions are independent of the location of accounts, and are cryptographically authenticated. Users may migrate their account between servers without loosing accumulated permissions, or breaking links that others have to their account. The ability to grant permissions may be delegated to reflect complex organizational structures. A permission may be configured to unlock data in a multitude of accounts. The system will support applications that require secure information sharing across multiple organizational boundaries, and provides a distributed security model which is feasible to deploy as it is wholly administered by its users.",
	"url": null,
	"owner": "Clink Systems, Ltd.",
	"publication_number": "07367044",
	"publication_date": "2008-04-29",
	"application_number": "10172169",
	"application_date": "2002-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Modular backup and retrieval system",
	"summary": "",
	"abstract": "The invention is a modular backup and retrieval system. The software modules making up the backup and retrieval system run independently, and can run either on the same computing devices or on different computing devices. The modular software system coordinates and performs backups of various computing devices communicating to the modules. Actions of modules on one of the computing devices acts as a system manager for a network backup regimen. A management component acts as a manager for the archival and restoration of the computing devices on the network. It manages and allocates library media usage, maintains backup scheduling and levels, and supervises or maintains the archives themselves through pruning or aging policies. The management component is not hard wired in its functionality, but may adapt to changing circumstances in these policies. A second software module acts as a manager for each particular library media.",
	"url": null,
	"owner": "CommVault Systems, Inc.",
	"publication_number": "07389311",
	"publication_date": "2008-06-17",
	"application_number": "09354063",
	"application_date": "1999-07-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Directory service system and method with tolerance for data entry storage and output",
	"summary": "",
	"abstract": "A method and apparatus for applying an application of a data service, such as X.500 and LDAP, to a relational database, a database design and use of the database to perform such directory services. Specifically addressed is the problem of achieving efficient searching of a directory service database coupled with effective input or output of data from the database. The disclosed method and apparatus, which provide end efficiency and data tolerance in the provision of a variety of database services, is based upon the concurrent storage in a database of both a normalised (syntax normalised) form and a raw (protocol encoded) form of the data. The raw form of data may be in ASN.1. A further feature of the disclosed method and apparatus concerns the transfer of data in and out of a database, where, in finding data in the database, a normalised form is used, and, in transferring data out of the database, a raw form is used. Syntax rules are used to convert the raw form of data to or from the normalised form in which it is stored.",
	"url": null,
	"owner": "Computer Associates Think, Inc.",
	"publication_number": "07315860",
	"publication_date": "2008-01-01",
	"application_number": "09427263",
	"application_date": "1999-10-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for measuring middleware response time",
	"summary": "",
	"abstract": "System and method for monitoring middleware performance is described herein. A route time for a sample message transmitted along a predetermined network route is determined and at least one queue residency time is determined. The at least one queue residency time reflects an amount of time an actual application message is stored in at least one respective local production queue located along the network route. Middleware response time is calculated according to the route time and the at least one queue residency time.",
	"url": null,
	"owner": "Computer Associates Think, Inc.",
	"publication_number": "07386613",
	"publication_date": "2008-06-10",
	"application_number": "10750009",
	"application_date": "2003-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for scheduling and monitoring computer processes",
	"summary": "",
	"abstract": "A job scheduling device providing a consistent set of application programming interfaces (APIs) compiled and linked into an individual or suite of programs to provide scheduling services on a single computer or across multiple computing platforms, includes a GUI API for retrieving and validated job parameters, a job scheduling API for allocating jobs based on the job parameters, and an enterprise scheduling agent hosted on one or more nodes of the computer platforms. An enterprise communication agent sends messages containing jobs from a computer executing a program utilizing the job scheduling device to the enterprise scheduling agent on a selected node where the job is to execute. Then, the enterprise scheduling agent retrieves job parameters and launches the job on the selected node. The enterprise scheduling agent maintains a local job repository containing job information for each job run on its corresponding node and sends messages to a job data management API to maintain a central job repository containing information on jobs executed on all nodes.",
	"url": null,
	"owner": "Computer Associates Think, Inc.",
	"publication_number": "07386586",
	"publication_date": "2008-06-10",
	"application_number": "09219071",
	"application_date": "1998-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Event-triggered transaction processing for electronic data interchange",
	"summary": "",
	"abstract": "A method and system for automating data exchange processing by using event-triggered transaction processing. Transaction data may be exchanged electronically with industry clearinghouses or in-house administration systems. A trading relationship between trading partners is stored in a trading relationship database. At least one trading partner is a sending trading partner and at least one trading partner is a receiving trading partner with respect to a transaction between the sender and receiver. Maps and rules may be created and stored with respect to transactions and/or trading partners. An incoming transaction is received through an industry clearinghouse from the at least one sending partner as identified in the trading relationship. In response to receiving the incoming transaction, additional information is read from an administration system specified by a map in order to complete the processing of the transaction. The incoming transaction is a triggering event which prompts the obtaining of additional data. The additional data may be obtained according to user-specified business rules. In response to obtaining additional information, an outgoing transaction which may include the additional data is generated and sent to the receiving trading partner through the industry clearinghouse.",
	"url": null,
	"owner": "Computer Sciences Corporation",
	"publication_number": "07340426",
	"publication_date": "2008-03-04",
	"application_number": "09365066",
	"application_date": "1999-07-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Internet-enabled system and method for assessing damages",
	"summary": "",
	"abstract": "An Internet-enabled method and system for processing insurance claims. The system may include an insurance claim processing server which is configured to estimate a value of an insurance claim as a function of insurance claim assessment data entered by a user during an insurance claim consultation session. The insurance claim assessment data may include one or more bodily injuries and one or more treatments of the bodily injuries. The insurance claim processing server may include a rules engine and a web server which may be executable to generate and send to a client computer system a plurality of web pages comprising insurance claim assessment questions. The client computer system may be coupled to the insurance claim processing server through a network such as the Internet. The client, including a web browser, may be operable to receive the insurance claim assessment data entered by the user and send the insurance claim assessment data across the network to the insurance claim processing server. The system may include additional client computer systems which are also coupled to the insurance claim processing server through the network.",
	"url": null,
	"owner": "Computer Sciences Corporation",
	"publication_number": "07418400",
	"publication_date": "2008-08-26",
	"application_number": "09603303",
	"application_date": "2000-06-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of modifying a business rule while tracking the modifications",
	"summary": "",
	"abstract": "Components of the business rules may be stored as entries in one or more database tables. A rule editor may access business rule components and assemble the components to form a graphical display of a business rule. The graphical display may allow the user to view, edit and/or create business rules. The system may track changes made to a business rule and may store a log file of changes made. The system may delay implementing the modifications until the modifications are approved by a user having appropriate authority.",
	"url": null,
	"owner": "Computer Sciences Corporation",
	"publication_number": "07451148",
	"publication_date": "2008-11-11",
	"application_number": "10285339",
	"application_date": "2002-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and compositions for articular repair",
	"summary": "",
	"abstract": "Disclosed herein are methods and compositions for producing articular repair materials and for repairing an articular surface. In particular, methods for providing articular repair systems. Also provided are articular surface repair systems designed to replace a selected area cartilage, for example, and surgical tools for repairing articular surfaces.",
	"url": null,
	"owner": "ConforMIS, Inc.",
	"publication_number": "07468075",
	"publication_date": "2008-12-23",
	"application_number": "10305652",
	"application_date": "2002-11-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Networked services licensing system and method",
	"summary": "",
	"abstract": "A method, system, and computer program product for exercising rights based on determining trust in an issuance of a rights expression, including issuing rights expressions by a chain of servers, forming a chain of rights expressions issued from server to server and finally from the last server to a client, such that each of the rights expressions except the last includes a specification of rights for the next server to issue the rights in the next rights expression; determining whether or not each of the servers has a right to issue the respective rights expression; exercising by the client the rights expressed in the last rights expression as being trusted, if it is determined that each of the servers had a right to issue the respective rights expression; and not exercising by the client the rights expressed in the last rights expression as not being trusted, if it is determined that at least one of the servers did not have the right to issue the respective rights expression.",
	"url": null,
	"owner": "ContentGuard Holdings, Inc.",
	"publication_number": "07386513",
	"publication_date": "2008-06-10",
	"application_number": "10856865",
	"application_date": "2004-06-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for controlling the distribution and use of digital works using secure components",
	"summary": "",
	"abstract": "A system for controlling the distribution and use of digital works using digital tickets. In the present invention, a u201cdigital ticketu201d is used to entitle the ticket holder to exercise some usage right with respect to a digital work. Usage rights are used to define how a digital work may be used or distributed. Each usage right may specify a digital ticket which must be present before the right may be exercised. Digital works are stored in repositories which enforce a digital works usage rights. Each repository has a u201cgeneric ticket agentu201d which punches tickets. In some instances only the generic ticket agent is necessary. In other instances, punching by a u201cspecial ticket agentu201d residing on another repository may be needed.",
	"url": null,
	"owner": "Contentguard Holdings, Inc.",
	"publication_number": "07359881",
	"publication_date": "2008-04-15",
	"application_number": "09777845",
	"application_date": "2001-02-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for providing configurable caller ID information",
	"summary": "",
	"abstract": "Systems and methods for providing configurable caller ID information are disclosed. A communications service includes a caller ID configuration function. The communications service controls packetized call data, and outbound caller ID options are configurable via the caller ID configuration function.",
	"url": null,
	"owner": "Converged Data Solutions LLC",
	"publication_number": "07379455",
	"publication_date": "2008-05-27",
	"application_number": "10326718",
	"application_date": "2002-12-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for secure key delivery for decrypting bulk digital content files at an unsecure site",
	"summary": "",
	"abstract": "Rather than downloading each content document on demand from the publisher location to the user site, at the publisher location, each content document is encrypted and then multiple encrypted documents are assembled into a distribution archive that is itself encrypted with a scheduled key. The distribution archive is then downloaded into a content server at the user site. When the content server receives the distribution archive, it decrypts the archive file and unpacks the encrypted documents. The scheduled key used to decrypt an archive file is included with an archive file that was sent previously to the user site in accordance with the subscription service. The scheduled key to decrypt the first archive file sent to the user is sent from the publisher to the user over a communication channel different from the communication channel used to send the archive file from the publisher to the user.",
	"url": null,
	"owner": "Copyright Clearance Center, Inc.",
	"publication_number": "07324648",
	"publication_date": "2008-01-29",
	"application_number": "10615278",
	"application_date": "2003-07-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for tracking and controlling e-mail forwarding of encrypted documents",
	"summary": "",
	"abstract": "In response to a request from a content server to forward an encrypted document to a recipient user, a forwarding engine in the content server prepares an e-mail message that contains a link to the document publisher and an identifier for the document. Upon receiving the e-mail, the recipient user can log onto a content server in the publisher and the publisher content server resolves the link, downloads a secure viewer program and an encrypted version of the requested document to the viewer program. Subsequently, the secure viewer program requests a decryption key for the encrypted document and decrypts the document. The recipient user can then view the document content in secure viewer but cannot copy or print the document without permission from the publisher.",
	"url": null,
	"owner": "Copyright Clearance Center, Inc.",
	"publication_number": "07373330",
	"publication_date": "2008-05-13",
	"application_number": "10614950",
	"application_date": "2003-07-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Initiating a wireless communication session from contact information on a computer",
	"summary": "",
	"abstract": "A communication session between a wireless communication device and one or more recipient communication devices is initiated in response to user input received at a separate computing device. The intended parties of the call are identified at the computing device in response to the user input. Once the intended parties have been identified, the computing device generates and transmits calling instructions to the wireless communication device to instruct the wireless communication device to call the one or more recipient communication devices. This allows a caller to utilize the functionality and resources available on a computer to initiate a call, while enabling the caller to utilize the functionality and resources available on the caller's wireless communication device to engage in and complete the call, without requiring the caller to communicate through the telephony applications of a computer.",
	"url": null,
	"owner": "Core Mobility, Inc.",
	"publication_number": "07317919",
	"publication_date": "2008-01-08",
	"application_number": "10865576",
	"application_date": "2004-06-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Collection content classifier",
	"summary": "",
	"abstract": "Collection content classifiers classify computer files and other collection content in accordance with predetermined classification specifications. In operation, collection content classifiers dynamically discover collection content members, assign data types to content members, associate symbolic actions with content members, determine processing dependencies among content members, and return organized classification information to calling programs for subsequent use in processing content members. Collection content classifiers thereby improve the productivity of human knowledge workers by enabling the construction of smart, collection-aware application programs that can perform more extensive, more complex, and more automated collection processing operations than were previously possible.",
	"url": null,
	"owner": "Coverity, Inc.",
	"publication_number": "07409376",
	"publication_date": "2008-08-05",
	"application_number": "11129679",
	"application_date": "2005-05-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Collection information manager",
	"summary": "",
	"abstract": "Collection information managers improve the productivity of knowledge workers by organizing information about arbitrary collections of computer files into collection data structures, for use by automated collection processing programs. Three kinds of knowledge are obtained and organized by collection information managers: collection instance information, collection content information, and collection processing information. Software programs can use information in collection data structures to precisely understand and process collections in useful ways that were not previously possible.",
	"url": null,
	"owner": "Coverity, Inc.",
	"publication_number": "07447703",
	"publication_date": "2008-11-04",
	"application_number": "09885078",
	"application_date": "2001-06-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for providing product and services upgrades and work order status in a cable services network",
	"summary": "",
	"abstract": "Methods and systems are provided for allowing a cable services customer to efficiently order desired products and services through an automated self-provisioning process provided through an interactive television session between the customer and a cable services provider.",
	"url": null,
	"owner": "Cox communications, INC",
	"publication_number": "07428503",
	"publication_date": "2008-09-23",
	"application_number": "11002913",
	"application_date": "2004-12-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method of supporting kernel functionality",
	"summary": "",
	"abstract": "Embodiments of the present invention provide an advantage over prior art software architectures by allowing a kernel to send requests to and receive corresponding results from user space applications. Because the kernel can utilize user space applications, the kernel can use the results of complex calculations without requiring a significantly larger kernel. This provides advantages because programming and debugging of complex algorithms can occur at the user space level rather than the kernel space level.",
	"url": null,
	"owner": "Crossroads Systems, Inc.",
	"publication_number": "07448049",
	"publication_date": "2008-11-04",
	"application_number": "10647050",
	"application_date": "2003-08-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for iconic software environment management",
	"summary": "",
	"abstract": "A method and system for storing, navigating and accessing files within an operating system through the use of a graphical thumbnail representing the video display of the active document within the active application, and organized chronologically by the most recent file u2018capturedu2019. Filenames, application names and thumbnail filenames are stored in an indexed file. The indexed file can consist of every document and application used during a session or categorically defined by project or tasks or personal preference. This also stores the application name and path eliminating the need to remember which application last edited the file and where the application is located.",
	"url": null,
	"owner": "Cygnus Systems, Inc.",
	"publication_number": "07346850",
	"publication_date": "2008-03-18",
	"application_number": "09878009",
	"application_date": "2001-06-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic application programming interface (API) generation for functional blocks",
	"summary": "",
	"abstract": "A method of generating an application programming interface (API) for an electronic circuit. A graphical user interface is displayed through which a user can initiate generation of the API. A component is selected from a plurality of components for placement in said electronic circuit. The component represents an implementable function in the electronic circuit. The component is configured using the graphical user interface. The data pertaining to the selected component and the configuration of the component is stored. The graphical user interface is utilized to access the stored data. The interface is initiated to invoke a processing of said data which causes a generation of the application programming interface. The application interface is for controlling the function of the component in said electronic circuit.",
	"url": null,
	"owner": "Cypress Semiconductor Corporation",
	"publication_number": "07337407",
	"publication_date": "2008-02-26",
	"application_number": "09994599",
	"application_date": "2001-11-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for generating microcontroller configuration information",
	"summary": "",
	"abstract": "A method and apparatus for configuring a microcontroller. An XML description of the microcontroller's hardware resources may be accessed. A user may select from available hardware resources and pre-defined user modules to select a configuration. Configuration information, which may include register bit patterns and microprocessor instructions, may be automatically generated. Additionally, application programming interface calls and structure, as well as interrupt vector tables may be automatically generated. Embodiments of the present invention provide improved ease of use and the ability to manage greater complexity in the configuration of configurable microcontrollers.",
	"url": null,
	"owner": "Cypress Semiconductor Corporation",
	"publication_number": "07406674",
	"publication_date": "2008-07-29",
	"application_number": "10002726",
	"application_date": "2001-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for application driven power management among intermittently coupled interoperable electronic devices",
	"summary": "",
	"abstract": "System, device, method, and computer program and computer program products for providing communicating between devices having similar or dissimilar characteristics and facilitating seamless interoperability between them. Computer program software and methods of and systems and devices for sharing of content, applications, resources and control across similar and dissimilar permanently or intermittently connected electronic devices. Devices, systems, appliances, and the like communicating and/or interoperating within the framework provided. Application driven power management. Applications built using linear tasking and/or vertical layering as embodied at least partially in n interoperability framework, keep track of their exact response time needs so that efficient power management techniques can extend the lifetime of batteries, limit amount of energy consumed, or limit amount of heat generated on devices.",
	"url": null,
	"owner": "DARTdevices Corporation",
	"publication_number": "07409569",
	"publication_date": "2008-08-05",
	"application_number": "11149455",
	"application_date": "2005-06-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System device and method for configuring and operating interoperable device having player and engine",
	"summary": "",
	"abstract": "System, device, method, and computer program and computer program products for providing communicating between devices having similar or dissimilar characteristics and facilitating seamless interoperability between them. Computer program software and methods of and systems and devices for sharing of content, applications, resources and control across similar and dissimilar permanently or intermittently connected electronic devices. Devices, systems, appliances, and the like communicating and/or interoperating within the framework provided. Interoperability device, such as a DartDevice, provides a highly interoperable device by virtue of its running a compliant player such as a DartPlayer containing an engine such as a DartEngine and at least one communications protocol for connecting to other devices.",
	"url": null,
	"owner": "DARTdevices Corporation",
	"publication_number": "07454542",
	"publication_date": "2008-11-18",
	"application_number": "11148961",
	"application_date": "2005-06-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interface definition language compiler",
	"summary": "",
	"abstract": "A distributed computer application can be made to communicate with a plurality of computer architectures. A first compiler compiles and converts input interface source code to produce a high level language including a plurality of computer architecture interfaces. A second compiler integrates application source code with the converted interface source code to produce the distributed computer application with the plurality of computer architecture interfaces that enable the distributed computer application to communicate with the plurality of computer architectures.",
	"url": null,
	"owner": "Dassault Systemes",
	"publication_number": "07428728",
	"publication_date": "2008-09-23",
	"application_number": "10844748",
	"application_date": "2004-05-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for visually programming instruction set for process",
	"summary": "",
	"abstract": "A method for visually programming an instruction set for a process is proposed. The method is based on receiving a request to design the process, providing a process designer interactive display, storing a library containing at least one function, accepting via the process designer interactive display function-related information concerning the function, outputting via the process designer interactive display a graphical representation of the function-related information, and generating the instruction set for the process based upon the function and the function-related information.",
	"url": null,
	"owner": "Data Quality Solutions, Inc.",
	"publication_number": "07320016",
	"publication_date": "2008-01-15",
	"application_number": "11105346",
	"application_date": "2005-04-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for visually accurately predicting color matches on different materials",
	"summary": "",
	"abstract": "An example method uses a spectrophotometer to collect reflectance curve data from a physical sample colored to a desired color. The reflectance curve data is employed to produce computer display outputs of substrates as they would be appear if colored with the desired color. The method includes using a colorimeter to collect calorimetric data from the outputs on the display. The sets of colorimetric data are compared and data that facilitate manipulating the reflectance curve data associated with the desired color is produced. The synthetic reflectance curve data facilitates producing matches for the various substrates as colored and displayed on the computer display. The synthetic reflectance curve data may also be used to manipulate colorant formulae.",
	"url": null,
	"owner": "Datacolor Holding AG",
	"publication_number": "07430316",
	"publication_date": "2008-09-30",
	"application_number": "10767150",
	"application_date": "2004-01-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information handling system featuring a single pipe string driven architecture for bridging data of heterogeneous object source in native subsystems to java using native invocation interfaces",
	"summary": "",
	"abstract": "An information handling system having a single pipe string driven data transport architecture includes a hardware independent execution environment subsystem and a native operating system environment subsystem. A data transport pipe is provided for integrating legacy instrumentation agents of the native operating system environment subsystem and new instrumentation agents of the hardware independent execution environment subsystem into a single integrated systems management application.",
	"url": null,
	"owner": "Dell Products L.P.",
	"publication_number": "07337447",
	"publication_date": "2008-02-26",
	"application_number": "10349660",
	"application_date": "2003-01-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Vehicular communications system",
	"summary": "",
	"abstract": "In a case that a gateway unit connected with multiple networks receives mode managing data indicating an operating mode from a first network, the gateway unit sends mode managing data formed based on the received mode managing data only to control units and a gateway unit connected with a second network excluding the first network. This prevents both the gateways units from repeatedly exchanging mode managing data indicating a normal operating mode. Each control unit thereby rapidly transfers to a low power consumption mode when being able to operate in the low power consumption mode.",
	"url": null,
	"owner": "DENSO CORPORATION",
	"publication_number": "07457301",
	"publication_date": "2008-11-25",
	"application_number": "11151441",
	"application_date": "2005-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Event-driven trade link between trading and clearing systems",
	"summary": "",
	"abstract": "A system is provided for linking together a system of trading financial instruments to a system of clearing transactions in financial instruments. In a first aspect of the present invention, the linking system includes a network linking a plurality of trading systems and a clearing system. An external interface couples the trading systems to the network while a clearing interface couples the clearing system to the network. A transmitter module transmits trading information in a plurality of kinds of securities along the network from the trading system to the clearing system. That transmitting selectively occurs approximately simultaneously with the arrival of the trading information at the external interface. The transmitting also occurs independently of the selection of trading algorithm or clearing algorithm. A second aspect of the present invention involves a computerized method for coupling a plurality of trading systems and a clearing system with a network. The method couples the trading systems to the network at an external interface and the clearing system to the network at a clearing interface. Transmission of trading information occurs along the network from the trading system to the clearing system. That transmission selectively occurs approximately simultaneously with the arrival of the trading information at the external interface. The trading information covers trades in a plurality of kinds of financial instruments, including, stocks, bonds, commodities, goods, services, and rights. The transmitting of trading information in the computerized method occurs independently of the selection of trading algorithm or clearing algorithm.",
	"url": null,
	"owner": "Deutsche Bu00f6rse AG",
	"publication_number": "07318045",
	"publication_date": "2008-01-08",
	"application_number": "09793437",
	"application_date": "2001-02-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network-based securing of added-value services against automated connections",
	"summary": "",
	"abstract": "A network-based verification of call connections is provided between a telecommunications subscriber terminal and a telecommunications service device selected by a service call number. This verification provides a way of enabling secure protection against an undesired selection of a service device and/or the selection of an undefined service device. A system and a method are provided in which during a call set-up, the selected call number is evaluated on the basis of at least one service call number stored in a communication network and/or at least one service call number area. In response to the identification of a service call number, the transmission of a defined confirmation information message from the telecommunication subscriber terminal is requested for the verification of the call connection, and in response to a mismatch between the requested confirmation information message and the confirmation information message transmitted, or not, by the telecommunication subscriber device, the call set-up is interrupted.",
	"url": null,
	"owner": "Deutsche Telekom AG",
	"publication_number": "07409049",
	"publication_date": "2008-08-05",
	"application_number": "10556292",
	"application_date": "2004-04-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hybrid switching architecture having dynamically assigned switching models for converged services platform",
	"summary": "",
	"abstract": "A converged services platform based on a hybrid switching architecture in which either a traditional switching model or a soft-switching model may be selected on a call-by-call basis. In addition, the assigned switching model may be dynamically changed while a call is in progress in order to gain access to desired media services while avoiding network latencies and undesirable service delays.",
	"url": null,
	"owner": "Dialogic Corporation",
	"publication_number": "07417982",
	"publication_date": "2008-08-26",
	"application_number": "10717438",
	"application_date": "2003-11-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Cash dispensing automated banking machine diagnostic system and method",
	"summary": "",
	"abstract": "A automated banking machine () and method of operating the machine is provided. The method comprises causing with a terminal application, at least one transaction function device of the automated banking machine to operate through at least one communication with an XFS layer of the automated banking machine. The automated banking machine may include a cash dispenser and the transaction function may include dispensing cash. The method further comprises causing with at least one diagnostic application, at least one internal component of the at least one transaction function device to perform at least one function without communicating with the at least one transaction function device through the XFS layer. The internal function may include operating a motor or sensor of the cash dispenser.",
	"url": null,
	"owner": "Diebold Self-Service Systems divison of Diebold, Incorporated",
	"publication_number": "07404515",
	"publication_date": "2008-07-29",
	"application_number": "10722363",
	"application_date": "2003-11-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Content indexing and searching using content identifiers and associated metadata",
	"summary": "",
	"abstract": "A method of indexing content for network searching comprises identifying media content signals stored at sites distributed over a distributed computer network; extracting content identifiers from the content signals; using the content identifiers to obtain metadata used to classify the media content signals; and creating a searchable index of the media content signals based on the metadata, wherein users access the searchable index on the distributed computer network to submit a search query for the searchable index to retrieve links to the media content signals.",
	"url": null,
	"owner": "Digimarc Corporation",
	"publication_number": "07372976",
	"publication_date": "2008-05-13",
	"application_number": "11466392",
	"application_date": "2006-08-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Digital asset management, targeted searching and desktop searching using digital watermarks",
	"summary": "",
	"abstract": "The present invention provides methods and systems to improve network searching for watermarked content. In some implementations we employ keyword searching to narrow the universe of possible URL candidates. A resulting URL list is searched for digital watermarking. A system is provided to allow customer input. For example, a customer enters keywords or network locations. The keywords or network locations are provided to a watermark-enabled web browser which accesses locations associated with the keywords or network locations. Some implementations of the present invention employ a plurality of distributed watermark-enabled web browsers. Other aspects of the invention provide methods and system to facilitate desktop searching and automated metadata gathering and generating. In one implementation a digital watermark is used to determine whether metadata associated with an image or audio file is current or fresh. The metadata is updated when it is out of date. Watermarks can also be used to link to or facilitate so-called on-line u201cblogsu201d (or online conversations).",
	"url": null,
	"owner": "Digimarc Corporation",
	"publication_number": "07450734",
	"publication_date": "2008-11-11",
	"application_number": "11152684",
	"application_date": "2005-06-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Security clearance card, system and method of reading a security clearance card",
	"summary": "",
	"abstract": "The security clearance card, system, and method include a card that stores data to verify the identity of an owner of the card. In addition to other types of information, the card stores biometric data of the owner and other identity data. Different portions of the data may be encrypted with different encryption techniques based upon a predetermined level of security assigned to the portions of the stored data. Reader elements are then capable of reading at least a portion of the encrypted data stored on the security clearance card, and receiving at least one biometric from an individual. The biometric stored in the card is then compared with the biometric of the individual presenting the security clearance card to verify that the holder of the card is the owner of the card.",
	"url": null,
	"owner": "Digital Data Research Company",
	"publication_number": "07344068",
	"publication_date": "2008-03-18",
	"application_number": "11539703",
	"application_date": "2006-10-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for managing web services within a computer network system",
	"summary": "",
	"abstract": "The present invention is directed to a method and apparatus that manages Web Services within an enterprise having an intranet. In an embodiment of the present invention, a Management Server (MS) is connected with a Management Server Client (MSC) via a network. The MS and MSC work in concert to manage Web Services by providing performance monitoring, security, contract and Service Level Agreement (SLA) management, and other performance enhancements in a unique, pluggable, expandable architecture. In another embodiment of the present invention, the MS is connected to an MSC via a network using a Web Services Application Programming Interface (API). The MSC is connected with a server for providing Web Services to a client. The Web Services are provided to the client through the MSC. The MS provides configuration data to the MSC for management of the Web Services provided through the MSC. In yet another embodiment, the MS is connected to a plurality of MSC's. Each MSC is connected with a plurality of servers. Each of the servers can provide Web Services to a plurality of clients. The Web Services are provided to each client through at least one MSC. In a further embodiment, the Web Services are provided to a client through an MSC that is connected to the server.",
	"url": null,
	"owner": "Digital Evolution",
	"publication_number": "07370075",
	"publication_date": "2008-05-06",
	"application_number": "10423534",
	"application_date": "2003-04-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dual virtual machine architecture for media devices",
	"summary": "",
	"abstract": "A software computing based environment for providing secured authentication of media downloaded from a network or loaded from a media player includes two peer-mode operating virtual machines. The low-level virtual machine provides decoding and decryption functions whereas the high-level virtual machine provides application level functions such as user interface, input/output.",
	"url": null,
	"owner": "Disney Enterprises, Inc.",
	"publication_number": "07469346",
	"publication_date": "2008-12-23",
	"application_number": "10890009",
	"application_date": "2004-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for a server deterministically killing a redundant server integrated within the same network storage appliance chassis",
	"summary": "",
	"abstract": "An apparatus for deterministically killing one of redundant servers integrated into a network storage appliance chassis along with at least one storage controller is disclosed. Each server can generate a kill signal on a backplane of the chassis to the other server in response to a stopped heartbeat of the other server in order to disable the I/O ports of the other server on a network so the live server can reliably take over the identity of the other server on the network. Unlike conventional kill paths, such as an Ethernet cable connecting the two servers in separate chassis, the present invention does not require the failed server to be operational since the kill path is substantially a direct reset to the I/O ports of the failed server. One server raises a shield before killing the other server to avoid both servers killing each other simultaneously.",
	"url": null,
	"owner": "Dot Hill Systems Corporation",
	"publication_number": "07401254",
	"publication_date": "2008-07-15",
	"application_number": "10893486",
	"application_date": "2004-07-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for deterministically performing active-active failover of redundant servers in response to a heartbeat link failure",
	"summary": "",
	"abstract": "An apparatus is disclosed for deterministically performing active-active failover of redundant servers in response to a failure of a link on which each server provides a heartbeat to the other server. Each of the servers is configured to take over the identity of the other server on a common network in response to detecting a failure of the other server's link heartbeat. Each server provides a status indicator to a storage controller indicating whether the other server's link heartbeat stopped. The storage controller determines the link has failed if both of the status indicators indicate the other server's heartbeat stopped, and responsively kills one of the servers. The storage controller also receives a heartbeat directly from each server. If only one direct heartbeat stops when the status indicators indicate the link heartbeats stopped, then the storage controller detects one server has failed and inactivates the failed server.",
	"url": null,
	"owner": "Dot Hill Systems Corporation",
	"publication_number": "07380163",
	"publication_date": "2008-05-27",
	"application_number": "10830875",
	"application_date": "2004-04-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for storage controller to deterministically kill one of redundant servers integrated within the storage controller chassis",
	"summary": "",
	"abstract": "An apparatus and method for deterministically killing one of redundant servers on a common network is disclosed. The apparatus includes a chassis that encloses the servers and a storage controller, status indicators generated by the servers to the storage controller, and kill controls, generated by the storage controller to respective ones of the servers, each for killing a respective one of the servers. The status indicators and kill controls are wholly enclosed in the chassis. The kill controls deterministically disable the killed server on the network independently of the state of the server to be killed. That is, the server does not need to be able to respond to a command to be disabled on the network. In one embodiment, the kill controls comprise reset signals. After the storage controller deterministically kills one of the servers, the other server takes over the identity of the killed server on the network.",
	"url": null,
	"owner": "Dot Hill Systems Corporation",
	"publication_number": "07320083",
	"publication_date": "2008-01-15",
	"application_number": "10831688",
	"application_date": "2004-04-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application server blade for embedded storage appliance",
	"summary": "",
	"abstract": "A method for transferring data within a network storage appliance is disclosed. The method includes transmitting a packet on an I/O link from a server to a first portion of a storage controller. Transmitting the packet on the I/O link is performed within a single blade module in a chassis enclosing the storage appliance. The method also includes forwarding a data transfer command within the packet from the first portion of the storage controller to a second portion of the storage controller. Forwarding the data transfer command is performed via a local bus on a backplane of the chassis through a connector of the blade connecting the blade to the backplane.",
	"url": null,
	"owner": "Dot Hill Systems Corporation",
	"publication_number": "07464205",
	"publication_date": "2008-12-09",
	"application_number": "11612507",
	"application_date": "2006-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application server blade for embedded storage appliance",
	"summary": "",
	"abstract": "A server blade includes a printed circuit board (PCB), including a connector for connecting the blade to a backplane comprising a local bus, and a removal mechanism for use by a person to disconnect the connector from the backplane for removal of the blade from a chassis while the chassis is powered up. The server blade also includes an I/O link and a server, each affixed on the PCB. The server transmits packets on the I/O link to a storage controller enclosed in the chassis. The packets include commands to transfer data to at least one storage device controlled by the storage controller. A portion of the storage controller, affixed on the PCB, receives the packets from the server on the I/O link, and forwards the commands on the backplane local bus to another portion of the storage controller affixed on a separate PCB enclosed in the chassis.",
	"url": null,
	"owner": "Dot Hill Systems Corporation",
	"publication_number": "07464214",
	"publication_date": "2008-12-09",
	"application_number": "11612503",
	"application_date": "2006-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application server blade for embedded storage appliance",
	"summary": "",
	"abstract": "An application server blade for an embedded storage appliance is disclosed. The blade includes a printed circuit board (PCB) with a connector for connecting to a chassis backplane including a local bus. Affixed on the PCB is a server, a portion of a storage controller, and an I/O link coupling the server and storage controller portion. The server transmits packets on the I/O link to the storage controller portion. The packets include commands to transfer data to a storage device controlled by the storage controller. The storage controller portion receives the packets from the server on the I/O link and forwards the commands on the backplane local bus to another portion of the storage controller affixed on a separate PCB also enclosed in the chassis. The blade also includes a removal mechanism for hot-replacement of the blade in the chassis. The blade architecture facilitates software reuse.",
	"url": null,
	"owner": "Dot Hill Systems Corporation",
	"publication_number": "07334064",
	"publication_date": "2008-02-19",
	"application_number": "10831690",
	"application_date": "2004-04-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network storage appliance with integrated redundant servers and storage controllers",
	"summary": "",
	"abstract": "A network storage appliance integrates a plurality of servers and a plurality of storage controllers into a single chassis. The storage controllers control transfers of data between the servers and storage devices controlled by the storage controllers. The servers and storage controllers comprise a plurality of field replaceable units (FRUs) that plug into a backplane also enclosed in the chassis. The FRUs are redundant such that any one of the FRUs may fail without incurring loss of availability of the data stored on the storage devices. One of the storage controllers detects a failure of one of the servers and responsively kills the failed server. The failure may be a stopped heartbeat from the failed server. Additionally, one of the storage controllers detects a failure of a heartbeat link coupling the servers and responsively inactivates one of the servers to enable failover to the live server.",
	"url": null,
	"owner": "Dot Hill Systems Corporation",
	"publication_number": "07330999",
	"publication_date": "2008-02-12",
	"application_number": "10831689",
	"application_date": "2004-04-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network storage appliance with integrated redundant servers and storage controllers",
	"summary": "",
	"abstract": "A network storage appliance includes a chassis, enclosing a storage controller and first and second servers. The storage controller has first and second I/O ports for coupling to first and second I/O links. The storage controller controls a plurality of physical disk drives and presents the plurality of physical disk drives as one or more logical disk drives on the first and second I/O links. The servers each have an I/O port for coupling to a respective one of the first and second I/O links. Each of the servers transmits packets to the storage controller over the respective I/O link. The packets include block-level protocol disk commands each identifying one of the logical disk drives, such as SCSI block level protocol commands each identifying one of said logical disk drives as a SCSI logical unit. The I/O links may be FibreChannel, Ethernet, or Infiniband links, for example.",
	"url": null,
	"owner": "Dot Hill Systems Corporation",
	"publication_number": "07437604",
	"publication_date": "2008-10-14",
	"application_number": "11673573",
	"application_date": "2007-02-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for adding value to a stored-value account",
	"summary": "",
	"abstract": "A system and method for adding value into a customer's stored-value account is provided. A stored-value card is distributed to a merchant for distribution to a customer who has an account with a specific provider of goods and/or services. The stored-value card has an associated identifier that can be used to associate a stored value with the card. The associated stored value is redeemable with one or more providers, including the specific provider. The account has an associated account number. During a card purchase transaction, a central processor receives a request to activate the card from a merchant terminal. The central processor receives a redemption request from the customer, wherein the redemption request includes the identifier. The central processor identifies the provider and the account number. The central processor inserts the associated value into the account, for instance by passing a value insertion request to the provider. The central processor receives a subsequent request to activate the card from a different merchant terminal. The central processor recognizes the card, identifies the provider and account number, and automatically inserts the value into the account.",
	"url": null,
	"owner": "e2interactive, Inc.",
	"publication_number": "07328190",
	"publication_date": "2008-02-05",
	"application_number": "10739301",
	"application_date": "2003-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Value insertion using bill pay card preassociated with biller",
	"summary": "",
	"abstract": "The present invention is directed at systems and methods of inserting value into a customer account with a provider of goods or services. Methods may comprise distributing to a customer a bill pay card wherein the bill pay cards comprise information sufficient to identify the provider of goods or services, the customer, and the customer's account with the provider of goods or services; presenting the bill pay card at a point of sale (POS) location; reading or otherwise obtaining from the bill pay card the information thereon; receiving value from the customer; and crediting the value received from the customer to the customer's account with the provider of goods or services. Systems may comprise a bill pay card; a provider of goods or services; and a POS.",
	"url": null,
	"owner": "e2Interactive, Inc.",
	"publication_number": "07437328",
	"publication_date": "2008-10-14",
	"application_number": "11672204",
	"application_date": "2007-02-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Printing system and method for customization of a print job",
	"summary": "",
	"abstract": "A method and system of customizing a print job includes receiving an input of an application file. A preferential printing feature is selected from a group of preferential printing features. The printer driver associated with the preferential features is applied to the application file. The application file is printed using the printer driver.",
	"url": null,
	"owner": "Eastman Kodak Company",
	"publication_number": "07466442",
	"publication_date": "2008-12-16",
	"application_number": "09731503",
	"application_date": "2000-12-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Custom caching",
	"summary": "",
	"abstract": "Methods and systems are presented for custom caching. Application threads define caches. The caches may be accessed through multiple index keys, which are mapped to multiple application thread-defined keys. Methods provide for the each index key and each application thread-defined key to be symmetrical. The index keys are used for loading data from one or more data sources into the cache stores on behalf of the application threads. Application threads access the data from the cache store by providing references to the caches and the application-supplied keys. Some data associated with some caches may be shared from the cache store by multiple application threads. Additionally, some caches are exclusively accessed by specific application threads.",
	"url": null,
	"owner": "eBay Inc.",
	"publication_number": "07406464",
	"publication_date": "2008-07-29",
	"application_number": "11007061",
	"application_date": "2004-12-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Rules-based system architecture and systems using the same",
	"summary": "",
	"abstract": "Systems and methods for processing data. In one embodiments, a system for processing data can include a first rules engine configured to obtain the data, to obtain a first object including a rule identifier to contain the data, to generate an instance of a first rule based on the first object, and to execute the instance of the first rule passing the first object as input to the instance of the first rule, wherein the instance of the first rule configured to perform an action in order to process the data contained in the first object, and to modify the rule identifier included in the first object.",
	"url": null,
	"owner": "eFunds Corporation",
	"publication_number": "07343364",
	"publication_date": "2008-03-11",
	"application_number": "11159847",
	"application_date": "2005-06-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Device for supporting NICs and TOEs under same protocol family of socket interface using IP checking mechanism",
	"summary": "",
	"abstract": "The present invention propose a new mechanism, IP check layer which enables to use TOE cards and legacy NICs simultaneously within same protocol family in a Linux or a UNIX computing environment. The IP check layer is inserted between a BSD socket layer and an INET socket layer. IP check layer maintains a routing information and, information of IP addresses of each network interfaces and each socket's bind state. Using this information, IP check layer determines how to process a socket call and which layer (TOE layer, host INET layer) will take over the socket call. By means of the above mechanism, the present invention makes existing socket applications to use TOE cards and legacy NICs at the same time without modification or recompiling.",
	"url": null,
	"owner": "Electronics and Telecommunications Research Institute",
	"publication_number": "07382802",
	"publication_date": "2008-06-03",
	"application_number": "11015477",
	"application_date": "2004-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Loan origination system interface for online loan application processing",
	"summary": "",
	"abstract": "A loan origination system interface module for processing loan applications from a user through a lender web site is described. The loan originator accesses a lender web site to perform loan processing procedures. The module is included on the lender's web page through a standard object reference in HTML specification. The module contains information unique to that lender, and the lender's identification number as well as desired data format. Once the loan originator decides to transfer a loan application or supplemental data to the lender, the module examines the loan origination software pipeline and presents a selection of loan products to the user. Once the user makes a selection, the module extracts loan information stored in the loan origination software by conducting a search for each required data field, relates that data to the specific field in the vendor application format, and packages the data in a format acceptable to the lender. The module then finds the appropriate route to deliver the loan data to the lender, either directly through a standard Internet secure communication protocol, or indirectly through a separate server computer. The user can then continue the transaction on the lender's web site in an uninterrupted work flow. Loan processing occurs on the lender's web site, and the interaction of the web site and loan origination software is handled by the module.",
	"url": null,
	"owner": "Ellie Mae, Inc.",
	"publication_number": "07472089",
	"publication_date": "2008-12-30",
	"application_number": "10222637",
	"application_date": "2002-08-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Online system for fulfilling loan applications from loan originators",
	"summary": "",
	"abstract": "A processing and submission client/server system transmits relevant loan information from a borrower to one or more lender computer systems through pre-defined file templates, which are utilized during loan origination. An automatic data flow process from the origination screen populates the relevant fields in any other related loan forms and word processing documents. Different forms are supported for different types of loans. The loan originator computer system includes a loan origination software program integrated with a web-browser based interface system. The interface system couples the loan origination software program to one or more partner computers. The partners comprise loan underwriters, lenders, and settlement service vendors. The interface system provides dynamic formatting and data transmission for different connections depending on the transaction type and target partner. In a web-based implementation, the interface system populates data directly from the loan origination software program to the appropriate web pages of the target partners.",
	"url": null,
	"owner": "Ellie Mae, Inc.",
	"publication_number": "07444302",
	"publication_date": "2008-10-28",
	"application_number": "10172844",
	"application_date": "2002-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enhanced distributed extract, transform and load (ETL) computer method",
	"summary": "",
	"abstract": "A method for delivering information to information targets within a computing environment having multiple platforms includes extracting information from an information source, transforming the extracted information, and isolating the transformed information by wrapping the transformed information into a message envelope having a standard format. The message envelope is routed to at least one information target on the same platform where the message envelope is targeted to an information target on the same platform as the router. The message envelope is routed to a second router acting as a router broker where the message envelope is targeted to an information target on a different platform than the router. The router broker routes the message envelope to at least a third router located on the platform with an information target; the third router routing the message envelope to at least one information target on its platform. The message envelope is unwrapped to reveal the transformed information that is then loaded into the information target.",
	"url": null,
	"owner": "Embarq Holdings Company LLC",
	"publication_number": "07321939",
	"publication_date": "2008-01-22",
	"application_number": "10607788",
	"application_date": "2003-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for mirroring and restoring data",
	"summary": "",
	"abstract": "An apparatus and method for mirroring data is provided wherein integrity of data on a mirror device is maintained during and after a restore process of data to a standard volume. Because integrity of the mirror is maintained, data from the mirror may be used to perform a later restore to the standard volume if data becomes corrupted, or data is unavailable for any other reason. As a result, the mirror may be used for backup or other operations.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07444420",
	"publication_date": "2008-10-28",
	"application_number": "11409304",
	"application_date": "2006-04-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Content addressable information encapsulation, representation, and transfer",
	"summary": "",
	"abstract": "Techniques for managing the storing of a digital asset by a first computer in a computer system that further comprises a second computer. The first computer receives a communication from the second computer including the digital asset, determines whether the digital asset has been stored by the first computer, and when it has not, stores a copy of the digital asset. The digital asset is identified by a first identifier based, at least in part, on its content. In one embodiment, the first identifier is the only identifier that can be used to identify the digital asset in communication between the first and second computers. In another embodiment, the computer system further stores a unit of data comprising the first identifier and metadata relating to the digital asset.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07398391",
	"publication_date": "2008-07-08",
	"application_number": "10894330",
	"application_date": "2004-07-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Content addressable information encapsulation, representation, and transfer",
	"summary": "",
	"abstract": "One embodiment is directed to a method for use in a computer system comprising at least first and second computers, wherein the first provides content addressable storage. A request to access a unit of data stored by the first computer is issued by the second computer and received by the first. In one embodiment, the unit of data comprises a first identifier identifying at least one digital asset and metadata relating to the at least one digital asset, and the request identifies the unit of data via a second identifier based, at least in part, on the content of the unit of data. In another embodiment, a request to access a unit of data is sent from a second computer and received at a first computer and identifies the unit of data via a content identifier based, at least in part, on the content of the unit of data. The content identifier is the only identifier that can be used in communication between the first and second computers to identify the unit of data.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07415731",
	"publication_date": "2008-08-19",
	"application_number": "10894450",
	"application_date": "2004-07-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Message-based distributed synchronization in a storage system",
	"summary": "",
	"abstract": "Described is a synchronization technique that may be used to coordinate processing between endpoints using the connecting message fabric. Processors in a data storage system communicate using the message switch of the message fabric. Each processor is an endpoint within a data storage system. A first endpoint may mark the beginning of the synchronization period by specifying a processing point at which other processors and the first endpoint are to coordinate from the perspective of the first endpoint. Synchronization is performed using local state information about the processing state of each endpoint as reported by each endpoint. The first endpoint waits for successful synchronization within a timeout period in accordance with the first endpoint's local state information. If successful synchronization does not occur prior to the timeout period, the first endpoint broadcasts a message with a new synchronization point to other endpoints. This indicates that the synchronization has failed marking the end of the synchronization period from perspective of the first endpoint.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07363431",
	"publication_date": "2008-04-22",
	"application_number": "10667170",
	"application_date": "2003-09-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for migrating data and automatically provisioning a target for the migration",
	"summary": "",
	"abstract": "Methods and apparatus for migrating a logical object. In one embodiment, a migration is performed by automatically determining the source location(s) of the logical object, moving the data stored therein to a target location while maintaining the availability of the data at the source location to an application program, and automatically servicing access requests from the application program at the target location after moving the data. In another embodiment, a migration is performed by automatically provisioning target location(s) to store a logical object, moving the data in the logical object to the target location(s) while maintaining its availability to an application program, and automatically servicing access requests from the application program at the target location after moving the data. In a further embodiment, a migration is performed by moving the data within a logical object from a source logical volume to a target logical volume, automatically servicing access requests from an application program at the target logical volume after moving the data, and retiring the source logical volume.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07415591",
	"publication_date": "2008-08-19",
	"application_number": "10421239",
	"application_date": "2003-04-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for migrating data in a computer system",
	"summary": "",
	"abstract": "Methods and apparatus for migrating a data set. In one embodiment, a migration is paused. In another embodiment, for a migration of data between multiple source/target groups, the migration is initiated by beginning transfer for some groups and queuing others for later processing. In a further embodiment, different transfer vehicles are used for different source/target groups. In a still further embodiment, a transfer vehicle is automatically selected for at least one source/target group.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07376764",
	"publication_date": "2008-05-20",
	"application_number": "10315791",
	"application_date": "2002-12-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for moving logical entities among storage elements in a computer storage system",
	"summary": "",
	"abstract": "Method and apparatus are disclosed for moving logical data entities from one storage element to another storage element in a computer storage system, when more than one user or host computer may access the logical entity. According to one embodiment of the method, all of the read requests for the logical entity are moved to a new copy of the logical entity, before writes for logical entity are moved to the new copy.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07428604",
	"publication_date": "2008-09-23",
	"application_number": "10984098",
	"application_date": "2004-11-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for processing management information",
	"summary": "",
	"abstract": "An agent collecting management data from the resource operating in the managed network to form a management data set and identifies segregated regions of management data within the management data set. Each segregated region is a respective partial transitive closure of the collected management data taken over a graph representing the entire management data set. For each segregated region of management data, the agent partitions that segregated region of management data into a set of logical partitions and transfers each logical partition of the segregated region of management data to a network management application in the managed network for access by the network management application. A network management application receives the partitions and only needs to keep objects in memory related to partitions that are currently received and being processed thus saving memory and processing resources.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07444350",
	"publication_date": "2008-10-28",
	"application_number": "11095421",
	"application_date": "2005-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for application of management actions to resources sharing relationships",
	"summary": "",
	"abstract": "In a network management application, a system applies a management action to a resource by receiving a selection of a resource representation in a network environment that represents a resource to which a management action is to be applied. The system applies a series of resource traversal functions to a repository containing objects representative of network resources in the network environment. The traversal functions identify a set of action affected resources in the network environment existing along a set of relationship paths extending to at least one storage device that have a current allocation relationship to the selected resource. The system presents a representation of the set of allocated resources in the network environment to a user of the management application. The representation of action-affected resources informs the user of resources within the storage area network that are currently in an functional relationship with the selected resource to which a management action is to be applied and that may be affected if the management action is to be applied to the selected resource.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07401137",
	"publication_date": "2008-07-15",
	"application_number": "10750336",
	"application_date": "2003-12-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for assigning management responsibilities to multiple agents",
	"summary": "",
	"abstract": "A management control center identifies multiple remotely located agents and their corresponding abilities to manage devices in a storage area network on behalf of the management control center. In response to learning capabilities of the multiple agents, the management control center assigns a first agent of multiple agents in the storage area network to handle execution of a first set of management functions associated with a given device in the storage area network. Additionally, the management control center assigns a second agent of multiple agents in the storage area network to handle execution of a second set of management functions associated with the given device. This technique of assigning multiple agents (rather than a single agent) different management functions alleviates a management control center from having to coordinate direct communications with and control many different types of vendor devices in the storage area network.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07469284",
	"publication_date": "2008-12-23",
	"application_number": "11024231",
	"application_date": "2004-12-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for deleting content from a storage system",
	"summary": "",
	"abstract": "One embodiment is directed to a computer system that includes primary and secondary storage systems. When a request to store a content unit is received, it may be determined whether to store the content unit on the primary storage system or the secondary storage system. In another embodiment, a computer may store information relating to an action to be performed in one of the directories of a file system that corresponds to a period of time. When the period of time to which the directory corresponds arrives, the action may be performed. In another embodiment, a content unit stored on a primary storage system may be copied to a secondary storage system in a computer system. After the content unit has been copied, the secondary storage system may send a delete request to the primary storage system to delete the content unit from the primary storage system.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07320059",
	"publication_date": "2008-01-15",
	"application_number": "11213233",
	"application_date": "2005-08-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for forwarding access requests in a content addressable computer system",
	"summary": "",
	"abstract": "Embodiments of the present invention are directed to a method and apparatus for receiving an input/output (I/O) request from a host computer that specifies an operation to be performed on a content addressable storage (CAS) system and determining which operation is specified by the request before receipt of the I/O request by a content addressable storage system. In another embodiment, an I/O request from a host computer is received by a first CAS which determines if the request is to be processed by another CAS system. When it is determined that the request is to be processed by another CAS system, the first CAS system may forward the request to the other CAS system. In another embodiment, an appliance receives an I/O request from a host computer to perform an operation that accesses a unit of content. The appliance may set up a communication session between the host and a CAS system so that the unit of content may be transmitted between the host and the CAS system without passing through the appliance.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07428611",
	"publication_date": "2008-09-23",
	"application_number": "10837311",
	"application_date": "2004-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for generating a content address to indicate data units written to a storage system proximate in time",
	"summary": "",
	"abstract": "One embodiment is a system for locating content on a storage system, in which the storage system provides a location hint to the host of where the data is physically stored, which the host can resubmit with future access requests. In another embodiment, an index that maps content addresses to physical storage locations is cached on the storage system. In yet another embodiment, intrinsic locations are used to select a storage location for newly written data based on an address of the data. In a further embodiment, units of data that are stored at approximately the same time having location index entries that are proximate in the index.",
	"url": null,
	"owner": "EMC corporation",
	"publication_number": "07444389",
	"publication_date": "2008-10-28",
	"application_number": "10731845",
	"application_date": "2003-12-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for managing groups of resources",
	"summary": "",
	"abstract": "An agent in a storage area network communicates with a management entity in the storage area network to discover a group of resources in the storage area network controlled by the management entity. In response to discovering the group of resources, the agent associates member resources (e.g., and their respective names) of the group of resources to a corresponding group identifier to which the member resources belong. The agent reports i) the corresponding group identifier and ii) the member resources of the group of resources controlled by the management entity to a management control center that assigns one of multiple agents in the storage area network to manage the group of resources based on communications with the management entity. After a step of assigning, the management control center can initiate an assigned agent to control the group of resources.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07457824",
	"publication_date": "2008-11-25",
	"application_number": "11023668",
	"application_date": "2004-12-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for managing the storage of content",
	"summary": "",
	"abstract": "One embodiment is directed to a computer system that includes primary and secondary storage systems. When a request to store a content unit is received, it may be determined whether to store the content unit on the primary storage system or the secondary storage system. In another embodiment, a computer may store information relating to an action to be performed in one of the directories of a file system that corresponds to a period of time. When the period of time to which the directory corresponds arrives, the action may be performed. In another embodiment, a content unit stored on a primary storage system may be copied to a secondary storage system in a computer system. After the content unit has been copied, the secondary storage system may send a delete request to the primary storage system to delete the content unit from the primary storage system.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07350041",
	"publication_date": "2008-03-25",
	"application_number": "11212898",
	"application_date": "2005-08-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus providing an extensible manageable entity model for a network",
	"summary": "",
	"abstract": "Deployment of new elements in a computer network can result in development of patch kits adapters, and other software and trigger corresponding regressive test efforts. In a storage area network, a method is disclosed for defining a general, extensible model of a manageable entity for use in management of the entity. The method includes obtaining a set of attribute values related to the manageable entity in relation to the storage area network. A deployment engine identifies corresponding entity categories within a storage area network entity model that contains attribute definitions that correspond to respective attribute values in the set of attribute values obtained from the manageable entity. The deployment engine assigns the respective attribute values of the manageable entity to the corresponding respective attribute definitions identified in the model. The deployment engine then determines if all attribute values of the manageable entity have been assigned. If unassigned attribute values remain, a classification processor defines new entity categories to contain new attribute definitions, and assigns the unassigned attributes value to the new attribute definitions contained in the new entity category.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07454487",
	"publication_date": "2008-11-18",
	"application_number": "10335546",
	"application_date": "2002-12-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Module insertion/extraction device",
	"summary": "",
	"abstract": "A device for inserting and/or removing a module into or from an interior region of an assembly, such device comprising a single piece, elongated, having a module mounting region configured to have mounted thereto the module; a handle; and an intermediate region disposed between the module mounting region and the handle, such handle being pivotally mounted to pivot about an axis perpendicular to a longitudinal axis of the structure. The handle portion has a surface positioned perpendicular to a surface of the first portion.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07405942",
	"publication_date": "2008-07-29",
	"application_number": "11238283",
	"application_date": "2005-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "RAID data storage system having keyed SAS expansion cables",
	"summary": "",
	"abstract": "A data storage system has a first and second chassis. Each of tow datapaths has a keyed front end datapath point connected to a keyed expansion point of a respective SAS expander of the first chassis, and has a keyed backend datapath point connected to a keyed front end expansion point of a respective SAS expander of the second chassis.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07377800",
	"publication_date": "2008-05-27",
	"application_number": "11238563",
	"application_date": "2005-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Surface level sparing in disk drives",
	"summary": "",
	"abstract": "A technique involves accessing a hard disk platter surface using surface virtualization. The technique includes receiving a command to access a hard disk platter surface. The command specifies an address. The technique further includes providing a virtual surface identifier based on the address specified by the command, and generating a particular real surface identifier based on the virtual surface identifier. The particular real surface identifier corresponds to a particular hard disk platter surface among multiple hard disk platter surfaces of a set of disk drives. The technique further includes accessing the particular hard disk platter surface among the multiple hard disk platter surfaces of the set of disk drives based on the particular real surface identifier. Such operation is capable of being carried out within a disk drive controller in a manner that is transparent to a host, or alternatively by the host.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07472223",
	"publication_date": "2008-12-30",
	"application_number": "11529143",
	"application_date": "2006-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methods for storage area network simulation",
	"summary": "",
	"abstract": "A storage area network simulator, operable to simulate an exchange of calls emanating from a SAN management application to a plurality of manageable entities, allows analyzing SAN management application response to a particular configuration. A capture tool discovers manageable entities interconnected in a particular SAN experiencing undesirable operation. The capture tool provides exemplary calls to an agent, and gathers responses. The exemplary calls enumerate expected responses from the various manageable entities responsive to the agent. The gathered responses take the form of an XML markup script. A simulation plug-in is operative as an interface module (e.g. plug-in) for a test agent in a test environment, such as the management application test facility. The test agent employs the simulation plug-in as the API plug-in for calls emanating from the test agent. The plug-in receives the normalized responses, and selectively transmits the corresponding response from the gathered normalized responses in response to agent calls received via the API.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07315807",
	"publication_date": "2008-01-01",
	"application_number": "10954015",
	"application_date": "2004-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for determining the mapping of logical objects in a data storage system",
	"summary": "",
	"abstract": "A method and apparatus for manipulating data in a storage device that is coupled to a host computer. Manipulations that can be performed by the storage device include moving non-contiguous blocks of data between the host computer and the storage device in a single operation. Other manipulations can be performed directly by the storage device without passing data to or from the host computer and include copying data from one logical object that is defined on the host computer to another, initializing, backing-up, transforming, or securely deleting a logical object that is defined by the host computer with a single command. In one embodiment, an application programming interface is provided that allows a relationship between logical objects on a host computer and storage locations on a storage device to be communicated between the host computer and the storage device. By providing the storage device with knowledge of the relationship between a logical object and the storage locations corresponding to that logical object, data corresponding to the logical object can be manipulated directly by the storage device, rather than by the host computer. In another embodiment, a is graphical visualization routine is provided that displays the global mapping of a logical object to a set of physical blocks on the storage device for each layer of mapping below the logical object.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07383294",
	"publication_date": "2008-06-03",
	"application_number": "11192146",
	"application_date": "2005-07-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methodology for peer-to-peer voice communication employing a pushed interactive multimedia announcement",
	"summary": "",
	"abstract": "A system, method and corresponding software application installed on communication devices of the system for communicating a media-based call alert from a calling-party device to a called-party device prior to establishing the voice call therebetween. The media-based call alert is played on the called-party device prior to (or concurrent with) the establishment of the voice call. Preferably, the communication of the media-based call alert is realized as part of a service that is available to subscribers of the service.",
	"url": null,
	"owner": "Emotive Communications, Inc.",
	"publication_number": "07421067",
	"publication_date": "2008-09-02",
	"application_number": "11463974",
	"application_date": "2006-08-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for device zoning in fibre channel arbitrated loop systems",
	"summary": "",
	"abstract": "Methods and apparatus for switching Fibre Channel Arbitrated Loop Systems is provided between a plurality of Fibre Channel Loop devices. In one aspect of the invention, the system switches based at least in part on arbitrated loop primitives. An exemplary interconnect system may include a first port and a second port, both including port logic to monitor certain arbitrated loop primitives, a connectivity apparatus, a route determination apparatus including a routing table consisting of ALPA addresses and their associated ports, the route determination apparatus coupled to each port and the connectivity apparatus, where the connectivity apparatus creates paths between the ports based on arbitrated loop primitives. In one embodiment, the connectivity apparatus is a crossbar switch. Examples of the arbitrated loop primitives that cause the switch to create paths between ports includes one or more of the following: ARB, OPN and CLS. In yet other aspects, the system ensures device access fairness through one or more techniques, including a rotating priority system, a counter to count the number of OPNs, especially sequential OPNs, and/or priority based on port type. Device zoning may be implemented. In one implementation, the system includes trunking such that frames may be transferred on multiple ports.",
	"url": null,
	"owner": "Emulex Design & Manufacturing Corporation",
	"publication_number": "07397788",
	"publication_date": "2008-07-08",
	"application_number": "10616866",
	"application_date": "2003-07-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for switching fibre channel arbitrated loop systems",
	"summary": "",
	"abstract": "Methods and apparatus for switching Fibre Channel Arbitrated Loop Systems is provided between a plurality of Fibre Channel Loop devices. In one aspect of the invention, the system switches based at least in part on arbitrated loop primitives. An exemplary interconnect system may include a first port and a second port, both including port logic to monitor certain arbitrated loop primitives, a connectivity apparatus, a route determination apparatus including a routing table consisting of ALPA addresses and their associated ports, the route determination apparatus coupled to each port and the connectivity apparatus, where the connectivity apparatus creates paths between the ports based on arbitrated loop primitives. In one embodiment, the connectivity apparatus is a crossbar switch. Examples of the arbitrated loop primitives that cause the switch to create paths between ports includes one or more of the following: ARB, OPN and CLS. In yet other aspects, the system ensures device access fairness through one or more techniques, including a rotating priority system, a counter to count the number of OPNs, especially sequential OPNs, and/or priority based on port type. Device zoning may be implemented. In one implementation, the system includes trunking such that frames may be transferred on multiple ports.",
	"url": null,
	"owner": "Emulex Design & Manufacturing Corporation",
	"publication_number": "07382790",
	"publication_date": "2008-06-03",
	"application_number": "10617148",
	"application_date": "2003-07-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Monitoring detection and removal of malfunctioning devices from an arbitrated loop",
	"summary": "",
	"abstract": "The detection, removal and reinsertion of possibly malfunctioning devices from an arbitrated loop is disclosed. When a new device is first connected to a storage switch and a loop is formed and begins initialization, a LOOP_DOWN event is sent to a processor and a loop down timer is started for each port in the loop. If initialization is successful, a LOOP_UP event is sent to the processor and the loop down timer is reset for each port in the loop. However, if one of the loop down timers times out, a problem occurred during the initialization. The port associated with the timed out timer is bypassed so that the devices in the remainder of the loop can continue trying to complete the initialization. The processor initiates a PTBI event on the bypassed device. If the bypassed device is operating properly, it is re-inserted back into the loop.",
	"url": null,
	"owner": "Emulex Design & Manufacturing Corporation",
	"publication_number": "07469361",
	"publication_date": "2008-12-23",
	"application_number": "11029736",
	"application_date": "2005-01-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Prerequisite-based scheduler",
	"summary": "",
	"abstract": "A prerequisite-based scheduler is disclosed which takes into account system resource prerequisites for execution. Tasks are only scheduled when they can successfully run to completion and therefore a task, once dispatched, is guaranteed not to become blocked. In a prerequisite table, tasks are identified horizontally, and resources needed for the tasks are identified vertically. At the bottom of the table is the system state, which represents the current state of all resources in the system. If a Boolean AND operation is applied to the task prerequisite row and the system state, and if the result is the same as the prerequisite row, then the task is dispatchable. In one embodiment of the present invention, the prerequisite based scheduler (dispatcher) walks through the prerequisite table from top to bottom until a task is found whose prerequisites are satisfied by the system state. Once found, this task is dispatched.",
	"url": null,
	"owner": "Emulex Design & Manufacturing Corporation",
	"publication_number": "07370326",
	"publication_date": "2008-05-06",
	"application_number": "10817290",
	"application_date": "2004-04-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and computer-readable medium for negotiating reinsurance for a risk",
	"summary": "",
	"abstract": "System, methods, and computer program products for facilitating negotiations for reinsurance of a risk. The negotiations for reinsurance of a risk are conducted between a cedent and one to many assumers. An interface is provided for allowing submissions of risk for reinsurance, responses from selected assumers, and replies to the responses as necessary to continue or conclude the negotiation. The interface also allows users to view information exchanged during various stages of the negotiation. Additional functionality including categorizing risk, categorizing reinsurance, required distribution, distribution preferences, and endorsement agreements are also provided.",
	"url": null,
	"owner": "Ereinsure.com, Inc.",
	"publication_number": "07333940",
	"publication_date": "2008-02-19",
	"application_number": "10029464",
	"application_date": "2001-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Wireless CPU GPS application",
	"summary": "",
	"abstract": "A wireless handheld GPS-enabled device and supporting system comprises a wireless CPU that functions as a host processor, a GPS chipset to provide GPS measurements, and a GPS application hosted by the wireless CPU. Other applications are also hosted by the wireless CPU and are provided with position solutions from the GPS application. The GPS application calls for GPS aiding information from an Internet server via a TCP/IP socket provided by a GPRS link supported by the wireless CPU. Location area identifier (LAI) and u201cbreadcrumbu201d information are provided to the GPS application so it can skip having to make a z-count determination during initialization.",
	"url": null,
	"owner": "Eride, Inc.",
	"publication_number": "07463188",
	"publication_date": "2008-12-09",
	"application_number": "11732386",
	"application_date": "2007-04-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hidden link dynamic key manager for use in computer systems with database structure for storage of encrypted data and method for storage and retrieval of encrypted data",
	"summary": "",
	"abstract": "A computer system () having a security domain (), at least one client business domain (), and a plurality of client terminals () utilizes a hidden link dynamic key manager () and a database structure that includes encrypted data entities (C, D) and a security identification attribute () for storage of encrypted data. Methods for encrypting data and for storing, decrypting, and retrieving encrypted data operate on the computer system (), which also includes an information database () and a key database (). The key database () is isolated from the information database (). The hidden link key manager is stored in the security domain () and includes a system key manager () operable to generate system keys with system key common names and an encryption key manager () operable to generate encryption keys having encryption key identifications. The key managers () operate on a key server (), which is mirrored by a secondary key server (). A general security manager () also operates on the key server () to control access to the security domain (). The security information attribute () is stored with a persistent data entity (A) that is associated with the other encrypted data entities (C, D) by a database schema. The encryption key identification () for the encryption key used to encrypt the data entities (C, D) is encrypted by a system key and then stored as part of the security information attribute (). The system key common name hash value () is also stored in the security information attribute (). The information data entities () are stored on the information database (), but the encryption key identification (), encryption key (), system key common name hash value (), and system key common name () are stored in the key database () inside the security domain (). The system key itself is stored on a Smart Card reader () inside the security domain.",
	"url": null,
	"owner": "Eruces, Inc.",
	"publication_number": "07362868",
	"publication_date": "2008-04-22",
	"application_number": "09693605",
	"application_date": "2000-10-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Test harness for enterprise application integration environment",
	"summary": "",
	"abstract": "A test harness is provided for fully testing an enterprise application integration (u201cEAIu201d) environment. The test harness is preferably used with a GUI-based test tool and includes a test controller, a message collector and a test validator. The test controller transmits control signals to the message collector to configure the message collector to u201clistenu201d for predefined messages on a message bus. If a message matches the configuration rules, the test validator compares the message to a set of validation rules. If the message matches the validation rules, the test is deemed a success. Test-created messages may also be injected onto the bus by a message generator and unavailable EAI applications may be simulated by a test responder. Preferably, the message collection and generation configurations are based on templates created from previously stored messages. Off-bus applications may be tested by employing a message u201cteeu201d coupled to the bus.",
	"url": null,
	"owner": "Evolving Systems, Inc.",
	"publication_number": "07337361",
	"publication_date": "2008-02-26",
	"application_number": "10665076",
	"application_date": "2003-09-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Archive of text captures from rendered documents",
	"summary": "",
	"abstract": "A facility for storing a text capture data structure for a particular user is described. The data structure comprises a number of entries. Each entry corresponds to a text capture operation performed by the user from a rendered document. Each entry contains information specifying the text captured in the text capture operation.",
	"url": null,
	"owner": "Exbiblio B.V.",
	"publication_number": "07421155",
	"publication_date": "2008-09-02",
	"application_number": "11098016",
	"application_date": "2005-04-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods, systems and computer program products for data gathering in a digital and hard copy document environment",
	"summary": "",
	"abstract": "A system for easily determining viewership of articles or ads in printed publications and using the determined viewership to determine author compensation, ad rates, or other historical or demographic related information is described. The system receives scan information of portions of a number of paper documents that is generated by scanners operated by a number of users. The system searches digital content using the received scan information, and determines a readership value for components of the paper document based upon the search.",
	"url": null,
	"owner": "Exbiblio B.V.",
	"publication_number": "07437023",
	"publication_date": "2008-10-14",
	"application_number": "11208458",
	"application_date": "2005-08-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Tunneling between a bus and a network",
	"summary": "",
	"abstract": "A system is described having a network, a bus and an interface coupling the network to the bus. A host is coupled to the network and executes software to generate packets for communication on the network. A bus device is coupled to the bus. The interface and host coordinate to transport bus device packets between the host and the bus device via tunneling over the network.",
	"url": null,
	"owner": "F5 Networks, Inc.",
	"publication_number": "07349391",
	"publication_date": "2008-03-25",
	"application_number": "09272807",
	"application_date": "1999-03-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "ASP business decision engine",
	"summary": "",
	"abstract": "A decision engine is provided that integrates all components of a credit application process, including access to and manipulation of credit bureau data, credit scoring, credit decisioning, and matching the correct products, into a single application service provider (ASP) platform which is accessible through a series of Application Programming Interfaces (APIs).",
	"url": null,
	"owner": "Fair Isaac and Company, Inc.",
	"publication_number": "07356503",
	"publication_date": "2008-04-08",
	"application_number": "09790382",
	"application_date": "2001-02-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for managing a database",
	"summary": "",
	"abstract": "A system and a method for managing a database. The system includes a database manager for storing and retrieving data records from a database. In one embodiment, the database includes a database data structure that is divided into a plurality of sections. Each of the sections holds is configured to hold zero or more data records. During a store operation of a data record, a key that is associated with the data record is used to identify one of the sections. The system determines whether the identified section has sufficient space to contain the identified data record. If the section has insufficient space, the system deletes data records according to a ranking function. In one embodiment of the invention, the ranking function is a least recently used algorithm. The system of the present invention does not have any inter-dependency between the data records that are stored within the database. Furthermore, in one embodiment of the invention, the system creates the database using sections that are the same size that is used by a caching system to store and retrieve pages from mass storage.",
	"url": null,
	"owner": "Fair Isaac Corporation",
	"publication_number": "07389305",
	"publication_date": "2008-06-17",
	"application_number": "09323512",
	"application_date": "1999-06-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system of monitoring, sensor validation and predictive fault analysis",
	"summary": "",
	"abstract": "The present invention provides an improved method and system for real-time monitoring, validation, optimization and predictive fault analysis in a process control system. The invention monitors process operations by continuously analyzing sensor measurements and providing predictive alarms using models of normal process operation and statistical parameters corresponding to normal process data, and generating secondary residual process models. The invention allows for the creation of a fault analyzer directly from linearly independent models of normal process operation, and provides for automatic generation from such process models of linearly dependent process models. Fuzzy logic is used in various fault situations to compute certainty factors to identify faults and/or validate underlying assumptions. In one aspect, the invention includes a real-time sensor data communications bridge module; a state transition logic module; a sensor validation and predictive fault analysis module; and a statistical process control module; wherein each of the modules operates simultaneously.",
	"url": null,
	"owner": "Falconeer Technologies LLC",
	"publication_number": "07451003",
	"publication_date": "2008-11-11",
	"application_number": "10793162",
	"application_date": "2004-03-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for providing asynchronous messaging",
	"summary": "",
	"abstract": "Systems and methods are provided for providing asynchronous communication between a source processor and a destination processor. In one embodiment, a method includes receiving an information request; making a first call to the destination processor, such that the first call includes the information request; and ending the first call while the destination processor determines an information response, such that said ending terminates a synchronous communication between the source processor and the destination processor. Furthermore, the method includes making a second call to the source processor, such that the second call includes the information response; ending the second call, such that said ending terminates a synchronous communication between the destination processor and the source processor; and providing asynchronously the information response.",
	"url": null,
	"owner": "Federal Home Loan Mortgage Corporation",
	"publication_number": "07437464",
	"publication_date": "2008-10-14",
	"application_number": "10355264",
	"application_date": "2003-01-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "High-performance network content analysis platform",
	"summary": "",
	"abstract": "One implementation of a method reassembles complete client-server conversation streams, applies decoders and/or decompressors, and analyzes the resulting data stream using multi-dimensional content profiling and/or weighted keyword-in-context. The method may detect the extrusion of the data, for example, even if the data has been modified from its original form and/or document type. The decoders may also uncover hidden transport mechanisms such as, for example, e-mail attachments. The method may further detect unauthorized (e.g., rogue) encrypted sessions and stop data transfers deemed malicious. The method allows, for example, for building 2 Gbps (Full-Duplex)-capable extrusion prevention machines.",
	"url": null,
	"owner": "Fidelis Security Systems",
	"publication_number": "07467202",
	"publication_date": "2008-12-16",
	"application_number": "10658777",
	"application_date": "2003-09-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic item management and archival system and method of operating the same",
	"summary": "",
	"abstract": "An electronic item management and archival system for managing and archiving items. Each item includes at least one of image data, audio data, and video data. The system includes a server configured to receive items, archive at least one of the received items to an archive, and retrieve at least one of the archived items from the archive. In some embodiments, the server also includes architecture that supports a pool of threads promoting multiple, independent archive and retrieve operations concurrently.",
	"url": null,
	"owner": "Fiserv Incorporated",
	"publication_number": "07379978",
	"publication_date": "2008-05-27",
	"application_number": "10199950",
	"application_date": "2002-07-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Simulation system for multi-node process control systems",
	"summary": "",
	"abstract": "A simulation system attaches to a configuration database for one or more fully configured nodes of a process control system and copies the modules within those nodes into one or more simulation computers as simulation modules. The simulation system includes an algorithm that automatically creates a reference parameter module for each of the copied nodes that stores a reference parameter for each of the inputs, outputs or other references to signals external to the nodes. In the case of the Fieldbus function blocks, the simulation system automatically creates a function block within the simulation workstation in the protocol of the controller node which mimics the operation of the Fieldbus function block, and then creates the simulation system having those mimicked Fieldbus function blocks operating as if they had originally been configured to be in the controller being simulated, instead of within a field device external to the controller.",
	"url": null,
	"owner": "Fisher-Rosemount Systems, Inc.",
	"publication_number": "07392165",
	"publication_date": "2008-06-24",
	"application_number": "10274562",
	"application_date": "2002-10-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and a method for accelerating communication between a client and an email server",
	"summary": "",
	"abstract": "The communication between a remote email or application program and the server to which it interfaces, such as a mailbox exchange server, is improved. The present invention operates by tricking or controlling the application program in such away that the application program operates as thought it is on-line although in actuality it is off-line. This is accomplished by spoofing the application program and as a result, the application program operates off-line but the user has on-line type experience. More specifically, the present invention replaces the MAPI/RPC as the transport provider while the user is operating the application program in an off-line mode. The data transfer between the email application program and the email server is handled by the present invention in the background. On the server end of the connection, the present invention operates to spoof the server and thus causes the server to operate as though the remote customer is an interactive user presently connected to the domain.",
	"url": null,
	"owner": "Flash Networks, Ltd",
	"publication_number": "07447745",
	"publication_date": "2008-11-04",
	"application_number": "10500405",
	"application_date": "2003-01-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method of processing text based entries",
	"summary": "",
	"abstract": "A system and method are provided for identifying text information and making such information available for applications. The system includes an electronic device communicating text information and an application for performing a function. The system also includes memory storing known text formats and a processor for processing the text information. The processor compares the text information to the known text formats and determines a text format of the text information. The processor also tags the text information according to the determined text format and further makes the tagged text information available to one or more applications.",
	"url": null,
	"owner": "Ford Motor Company",
	"publication_number": "07426689",
	"publication_date": "2008-09-16",
	"application_number": "11013246",
	"application_date": "2004-12-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Device, system and/or method for providing schema-independent access to object in documents",
	"summary": "",
	"abstract": "A computer system supports the access of documents formatted according to different schemas. A model includes a relationship for different schemas. The relationship specifies a particular data and, corresponding to the particular data and one of the different schemas, a reference to one or more ontological-elements(s). An ontological-element defines a semantic relationship between the particular data (as subject) and objects with regard to a semantic relationship in documents. An executable program can include instructions or queries to access the particular data in a one or more documents. To access the particular data in the document, the executable program can access the model to obtain the reference to the ontological-elements corresponding to the particular data and the various schema for the various documents can refer to ontological-elements corresponding to the particular semantic relationships among the data, the ontological-elements further specifying one or more objects corresponding to the particular data; and can access objects in the particular documents as specified by ontological-elements.",
	"url": null,
	"owner": "Fortinet, Inc.",
	"publication_number": "07469252",
	"publication_date": "2008-12-23",
	"application_number": "11606209",
	"application_date": "2006-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatically configuring a web-enabled digital camera to access the internet",
	"summary": "",
	"abstract": "A method and system for automatically configuring a hand-held electronic device for accessing a site on a public network is disclosed. The method and system include establishing a connection to a website server, which is responsible for establishing and maintaining website accounts, and sending information uniquely identifying the electronic device to the website server. The server then sends user account information to the device, including an account ID and password, created based on the electronic device information. The user account information is then stored on electronic device for use the next time the electronic device accesses the website, whereby the user does not have to enter account information in order to establish the ISP connection or the website account before accessing the public network.",
	"url": null,
	"owner": "FotoMedia Technologies, LLC",
	"publication_number": "07443419",
	"publication_date": "2008-10-28",
	"application_number": "10658999",
	"application_date": "2003-09-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Flexible image rendering system utilizing intermediate device-independent unrendered image data",
	"summary": "",
	"abstract": "A flexible, user-friendly computer-implemented image processing system is provided. The system includes a process to receive an image rendering request. The image rendering request includes an indication of raw image data and an indication of desired rendering output characteristics. A rendering process is configured to process the raw image data to generate at least one rendered image, based on an indication of a particular image acquisition device employed to generate the raw image data. In accordance with some embodiments, the rendering process includes a plurality of rendering sub-processes. Each sub-process corresponds to a separate image acquisition device, and the rendering process is configured to process the raw image data based on the sub-process corresponding to the indication of the particular image acquisition device employed to generate the raw image data.",
	"url": null,
	"owner": "Foveon, Inc.",
	"publication_number": "07372595",
	"publication_date": "2008-05-13",
	"application_number": "10100250",
	"application_date": "2002-03-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Image classifying systems and methods",
	"summary": "",
	"abstract": "Methods and systems for classifying images, such as photographs, allow a user to incorporate subjective judgments regarding photograph qualities when making classification decisions. A slide-show interface allows a user to classify and advance photographs with a one-key action or a single interaction event. The interface presents related information relevant to a displayed photograph that is to be classified, such as contiguous photographs, similar photographs, and other versions of the same photograph. The methods and systems provide an overview interface which allows a user to review and refine classification decisions in the context of the original sequence of photographs.",
	"url": null,
	"owner": "Fuji Xerox Co., Ltd.",
	"publication_number": "07327347",
	"publication_date": "2008-02-05",
	"application_number": "10325913",
	"application_date": "2002-12-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Indexing for contextual revisitation and digest generation",
	"summary": "",
	"abstract": "A medium, system and method of processing content information. In one exemplary embodiment, the medium, system and method include determining associated previously accessed content information in response to an action performed on a document containing information and based on a context of the information, and indicating to a user the determined associated content information.",
	"url": null,
	"owner": "Fuji Xerox Co., Ltd.",
	"publication_number": "07363294",
	"publication_date": "2008-04-22",
	"application_number": "10739185",
	"application_date": "2003-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for creating an interactive 3D visualization of indexed media",
	"summary": "",
	"abstract": "A 3D graphical user interface includes a two-dimensional ground-plane layout representing the relationship between one or more leaf elements of a tree data structure. The interface further includes at least one building-like structure, each of the at least one building-like structure corresponding to a respective one of the one or more leaf elements. Each of the at least one building-like structure provides a summary of media associated with the respective one of the more leaf elements corresponding to at least one building-like structure.",
	"url": null,
	"owner": "Fuji Xerox Co., Ltd.",
	"publication_number": "07340678",
	"publication_date": "2008-03-04",
	"application_number": "10776618",
	"application_date": "2004-02-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for dynamic reading fluency instruction and improvement",
	"summary": "",
	"abstract": "Techniques for dynamic personalized reading fluency instruction and improvement are provided by determining a user reading fluency level based on one or more spoken responses provided by the user during one or more reading aloud session of a text that has been evaluated for discourse structure and information structure of sentences. One or more reading fluency improvement aids are provided to the user based on one or more of: determined user-specific reading fluency deficiencies, user-personalized information responses and user class-specific reading fluency deficiencies as determined by the reading fluency improvement system.",
	"url": null,
	"owner": "Fuji Xerox Co., Ltd.",
	"publication_number": "07455522",
	"publication_date": "2008-11-25",
	"application_number": "10263834",
	"application_date": "2002-10-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for media summarization",
	"summary": "",
	"abstract": "A stream of ordered information, such as, for example, audio, video and/or text data, can be windowed and parameterized. A similarity between the parameterized and windowed stream of ordered information can be determined, and a probabilistic decomposition or probabilistic matrix factorization, such as non-negative matrix factorization, can be applied to the similarity matrix. The component matrices resulting from the decomposition indicate major components or segments of the ordered information. Excerpts can then be extracted from the stream of ordered information based on the component matrices to generate a summary of the stream of ordered information.",
	"url": null,
	"owner": "Fuji Xerox Co., Ltd.",
	"publication_number": "07424150",
	"publication_date": "2008-09-09",
	"application_number": "10728777",
	"application_date": "2003-12-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Digital camera and image data processing system",
	"summary": "",
	"abstract": "The present invention provides a digital camera and an image data processing system, which can develop and observe images recorded by both a compressed image recording control function and a raw image recording function on an external image processing device regardless of the presence/absence of a raw image reproducing function. When an image of CCD-raw data is reproduced on a PC, a self-development execution module is added to an image file to make it possible to perform reproduction such as display of the data on the monitor of the PC without arranging a dedicated viewer for reproducing CCD-raw data on the PC.",
	"url": null,
	"owner": "Fujifilm Corporation",
	"publication_number": "07408571",
	"publication_date": "2008-08-05",
	"application_number": "10397260",
	"application_date": "2003-03-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Architecture for a hybrid STM/ATM add-drop multiplexer",
	"summary": "",
	"abstract": "Architecture for a SONET network element. The architecture includes an interconnection system for a network element, including a line unit slot, a switch fabric slot, and service unit slots. The line unit slot is connected as a hub to the switch fabric slot and the service unit slots in a first star interconnection configuration. The switch fabric slot is connected as a hub to the line unit slot and the service unit slots in a second star interconnection configuration. The star interconnection configurations provide fault isolation between different units, and allow for replacement of failed units without interfering with the links of other units to the hub. A service unit is provided including a first backplane interface for connecting with an ATM star interconnect configuration within the network element, and a second backplane interface for connecting to an STM star interconnect configuration within the network element.",
	"url": null,
	"owner": "Fujitsu Limited",
	"publication_number": "07428236",
	"publication_date": "2008-09-23",
	"application_number": "11302767",
	"application_date": "2005-12-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Architecture for a hybrid STM/ATM add-drop multiplexer",
	"summary": "",
	"abstract": "A network element including an active/standby pair of line units, an active/standby pair of switch fabric units, at least one service unit, and a management and control unit. Each line unit maintains data communications using a first communications protocol. Each switch fabric unit maintains data communications using a second communications protocol. Each service unit includes a first backplane interface supporting the first communications protocol, and a second backplane interface supporting the second communications protocol. The management and control unit provides a control infrastructure for selectively communicating data units between the active/standby pair of line units, the active/standby pair of switch fabric units, and the service unit, responsive to provisioning information or information contained within the respective data unit.",
	"url": null,
	"owner": "Fujitsu Limited",
	"publication_number": "07382722",
	"publication_date": "2008-06-03",
	"application_number": "11302619",
	"application_date": "2005-12-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Creation supporting apparatus and creation supporting method of graphical user interface program, and recording medium recorded with creation supporting program",
	"summary": "",
	"abstract": "An individual object constituting a graphical user interface (hereinafter called u201cGUIu201d) related with a variable and a method in a processing program for the object; and there is generated a GUI program in which a variable referencing procedure and a variable updating procedure are added to the processing program. Thus, it is unnecessary to modify the processing program with a change in screen layout, unless new objects are added to the screen layout of GUI, thereby improving the productivity of GUI programs.",
	"url": null,
	"owner": "Fujitsu Limited",
	"publication_number": "07337406",
	"publication_date": "2008-02-26",
	"application_number": "09961734",
	"application_date": "2001-09-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for providing a protection path for connectionless signals in a telecommunications network",
	"summary": "",
	"abstract": "A method is provided for providing protection for connectionless signals in a telecommunications network comprising a plurality of nodes. A first protection path is generated from each of the nodes to a destination node. A second protection path is generated from each of the nodes to the destination node. The second protection path is distinct from the first protection path. Protection traffic is routed along one of the protection paths to the destination node.",
	"url": null,
	"owner": "Fujitsu Limited",
	"publication_number": "07385917",
	"publication_date": "2008-06-10",
	"application_number": "09589038",
	"application_date": "2000-06-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Server/client system",
	"summary": "",
	"abstract": "The server/client system comprises a server and at least one client which is connected to said server via a communication line and is provided with at least one I/O port, and is so configured that said server is provided with a device driver for controlling said I/O port, and a virtual I/O port for providing an interface having the same function as said I/O port for said device driver, for transmitting an input/output control signal from said device driver to said client, and for receiving an event from said client to indicate said event to said device driver, and said client is provided with a device handler which is connected to said virtual I/O port via said communication line and controls said I/O port.",
	"url": null,
	"owner": "Fujitsu Limited",
	"publication_number": "07464133",
	"publication_date": "2008-12-09",
	"application_number": "10048999",
	"application_date": "1999-10-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Workflow system and method",
	"summary": "",
	"abstract": "A developer can use a workflow system provided client to get an application up and running relatively quickly. The workflow system provides adapters which enables quick deployment and element flexibility. Adapters have a fixed interface which allows the Document Management System ((DMS)), Directory Services (DS) and DataBase system (DB) to be changed independent of the application in contrast to other workflow systems which tie the application directly to the (DMS), DS, and DB. The adapters allow developers to attach clients of varying types and magnitude and allows developers to mix and match application elements to better serve their application. Thus, the workflow system is not tied to any proprietary (DMS), DS, or DB.",
	"url": null,
	"owner": "Fujitsu Limited",
	"publication_number": "07403948",
	"publication_date": "2008-07-22",
	"application_number": "10438698",
	"application_date": "2003-05-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System using change log stored at a server to identify changes to user's application data for synchronizing data between systems",
	"summary": "",
	"abstract": "A system and method for synchronizing devices which can couple to the Internet, or any network. In one aspect a system for synchronizing data between a first system and a second system is provided. The system includes a first sync engine on the first system interfacing with data on the first system to provide difference information. A data store is coupled to the network and in communication with the first and second systems. A second sync engine is provided on the second system coupled to receive the difference information from the data store via the network, and interface with data on the second system to update said data on the second system with said difference information. Difference information is transmitted to the data store by the first sync engine and received from the data store from the second sync engine. A method for synchronizing at least a first file and a second file resident on the first and second systems, respectively, coupled to the Internet, respectively, is also provided. The method includes the steps of: determining difference data resulting from changes to the first file on the first system; transmitting the difference data to a server via the Internet; querying the server from a second system to determine whether difference data exists for files on the second system; retrieving the difference data to the second system; and updating the second file on the second system with the difference data.",
	"url": null,
	"owner": "FusionOne, Inc.",
	"publication_number": "07415486",
	"publication_date": "2008-08-19",
	"application_number": "10659646",
	"application_date": "2003-09-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus, methods, and systems for viewing and manipulating a virtual environment",
	"summary": "",
	"abstract": "Components for generating, reviewing, processing, storing, retrieving, analyzing, and optimizing information input to or output from a virtual environment. The components may be a video camera component, a stand-alone or device mountable on a tripod to permit a camera person to select from one or more views within a virtual environment, such as a video game being executed, and to provide alternative views within the confines of the virtual environment. The component permits selection from multiple views and manipulation of the same, including a rotation leftward or rightward, a tilt upward or downward, a zooming inward or outward, a translation (for example, a track movement) leftward, rightward, forward, or backward, a rolling movement, and a camera position adjustment (for example, crane movement) upward or downward.",
	"url": null,
	"owner": "Gamecaster, Inc.",
	"publication_number": "07403220",
	"publication_date": "2008-07-22",
	"application_number": "11177049",
	"application_date": "2005-07-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Game of skill and chance and system and method for playing such game",
	"summary": "",
	"abstract": "A game of skill and chance is provided in which five die are manipulated by a player to obtain different combinations. The obtained die combinations are then recorded on a card and scored by a computer. Players play against each other and the winner is the individual with the highest total score.",
	"url": null,
	"owner": "GameLogic Inc.",
	"publication_number": "07331860",
	"publication_date": "2008-02-19",
	"application_number": "10962181",
	"application_date": "2004-10-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for playing a role-playing game",
	"summary": "",
	"abstract": "A method and apparatus for playing a variation of keno in which the game player pays to play through any number of methods, reveals whether the player has a winning number of matches by playing a solitaire game, and then receives the appropriate winnings if any. The solitaire game may be played, for example, over the Internet or other network using a computer system. The computer system may be, for instance, a cell phone, a personal computer, a set-top box, kiosk, or other computing system.",
	"url": null,
	"owner": "Gamelogic, Inc.",
	"publication_number": "07357715",
	"publication_date": "2008-04-15",
	"application_number": "10910564",
	"application_date": "2004-08-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Shared registry with multiple keys for storing preferences and other applications on a local area network",
	"summary": "",
	"abstract": "A method and system for storing and automatic retrieval of data is provided. A u201cregistryu201d is one way a computer system manages personal preference data such as configuration preferences and other data that users may want specific devices, applications and/or users to access. The present invention enables computer users to use a number of computer devices under essentially any circumstance and allows users and/or applications to provide individualized preference data for each situation. The registry is n-dimensional and data is stored using, for example, an identifier having three or more keys. Other features of the invention, such as wild cards and times tamps, result in a flexible robust registry system.",
	"url": null,
	"owner": "Gateway Inc.",
	"publication_number": "07464094",
	"publication_date": "2008-12-09",
	"application_number": "09752026",
	"application_date": "2000-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for using a channel and event overlay for invoking channel and event related functions",
	"summary": "",
	"abstract": "A convergence system suitable for accepting inputs from several television or personal computing sources is disclosed. The sources can be output on a display. The convergence system is controlled by a multi-function controller suitable for providing a set of function commands. A processor is coupled to the inputs, display and operably coupled to the controller wherein the processor responds to the function commands provided by the controller. The processor also creates for output on the display a set of channel banners. At least one of the channel banners provides information on available processor functions and provides video feed-back when the processor is responding to the function commands.",
	"url": null,
	"owner": "Gateway Inc.",
	"publication_number": "07363644",
	"publication_date": "2008-04-22",
	"application_number": "10764678",
	"application_date": "2004-01-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transaction control in an information appliance management system",
	"summary": "",
	"abstract": "The present invention provides a universal information appliance management system capable of executing transactions, including financial transactions, across a distributed network. The present invention allows content/service providers to control distribution of the content or services they furnish, and provides novel business process features such as automatic micro-billing of events and instances wherein minuscule requests and tasks of very low value may be billed and monies collected where doing so was otherwise impractical. The information appliance management system also provides dynamic support for multiple simultaneous payment algorithms and for easily modifying or updating the payment algorithms as desired. Further, the present invention provides for automatic offline or online transactions with deferred connections such that payment for a transaction may be secured prior to actually completing the transaction such that the user may obtain the paid for content even without an immediate network connection. Additionally, the present invention provides central authentication of objects of the system such that one object may verify the validity of any other object.",
	"url": null,
	"owner": "Gateway Inc.",
	"publication_number": "07395539",
	"publication_date": "2008-07-01",
	"application_number": "09542743",
	"application_date": "2000-04-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for the development of a control process for an instrument",
	"summary": "",
	"abstract": "A method and an apparatus for the development of a control process for an instrument are disclosed. The method comprises a first step of selecting one or more commands from a plurality of pre-defined commands in which at least one of the selected one or more commands being a purpose-linked command; and a second step of combining the selected one or more commands to produce the control process. The pre-defined commands have a control part for controlling the operation of the instrument and at least one of the pre-defined commands has a purpose part for controlling the purpose of the command. The apparatus for the development of a control process for an instrument comprises a first memory for storing a plurality of control parameters for individual ones of a plurality of commands, a display device for displaying information relating to the plurality of commands, a selection device for selecting ones of the plurality of commands and a processor for combining selected ones of the plurality of commands for producing the control process.",
	"url": null,
	"owner": "GE Healthcare Bio-Sciences AB",
	"publication_number": "07409250",
	"publication_date": "2008-08-05",
	"application_number": "11005489",
	"application_date": "2004-12-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for managing a distributed x-ray system",
	"summary": "",
	"abstract": "A preferred embodiment of the present invention provides a method and system for managing a distributed medical diagnostic imaging system. The system includes a system manager for managing the medical diagnostic imaging system, a subsystem that includes a subsystem manager for managing the subsystem and an actor, or task operator, capable of executing certain functions. The subsystem manager reports to the system manager. The system also includes a communication channel for transmitting data between the system manager and the subsystem. The system may include a plurality of subsystems with a plurality of actors or task operators. The components of the system may be configured and adjusted.",
	"url": null,
	"owner": "GE Medical Systems Global Technology Company, LLC",
	"publication_number": "07334160",
	"publication_date": "2008-02-19",
	"application_number": "10044140",
	"application_date": "2002-01-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatically tracking mobilized equipment and nurse call priority assignment system and method",
	"summary": "",
	"abstract": "By combining the information acquired from a location system that is tracking equipment and/or personnel within a hospital environment, automatic assignment of the u201cre-locatedu201d patient monitoring equipment can be made in concert with a nurse call system. By utilizing time-based elimination criteria, monitoring equipment that is coupled to generic port can be automatically processed for port priorities, and equipment assignment changes. An event subscription manager with location bridges and nurse call bridges facilitate the automatic association of the patient monitoring equipment to the respective nurse call system and intended information therein. By use of the automatic association paradigms, manual alarm and assignment tasks can be minimized.",
	"url": null,
	"owner": "GE Security, Inc.",
	"publication_number": "07333002",
	"publication_date": "2008-02-19",
	"application_number": "11138457",
	"application_date": "2005-05-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Communications of UICC in mobile devices using internet protocols",
	"summary": "",
	"abstract": "A mobile device and UICC communication using standard Internet protocols. Such communication allows users access to their UICC information using standard web browsers and allows use of the UICCs to communicate with remote servers and thereby provide secure services for Internet transactions. The mobile device has a communications module to selectively communicate with the UICC processor or with at least one node on a network, the mobile device communications module has an Internet protocol module operable to receive messages issued from a first Internet application as Internet protocol packets, and to transmit the packets to target IP addresses; and operable to receive Internet protocol packets, to process the packets, and to send the messages contained in the packets to the first Internet application.",
	"url": null,
	"owner": "Gemalto Inc",
	"publication_number": "07454233",
	"publication_date": "2008-11-18",
	"application_number": "11234577",
	"application_date": "2005-09-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic client proxy configuration for portable services",
	"summary": "",
	"abstract": "In a distributed computing system which employs smart cards to provide services, the need for a fixed mapping between methods that can be invoked from a card application and APDU messages is avoided. A card skeleton provides a decoding table to a client proxy when a connection is established between a card and a terminal. With the information provided from the skeleton, the proxy dynamically maps methods to APDU messages, for communication during a given session. As a result, if the on-card application is enhanced to provide new methods, its corresponding skeleton is upgraded to recognize those methods. When the card is connected to a terminal, the updated information is provided to the proxy at the terminal, to enable the user to access the enhanced features of the application.",
	"url": null,
	"owner": "Gemplus",
	"publication_number": "07340748",
	"publication_date": "2008-03-04",
	"application_number": "09740986",
	"application_date": "2000-12-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for protection against fraudulent modification of data sent to a secure electronic medium",
	"summary": "",
	"abstract": "A method for protection against modification of data sent by a user to a secure medium via a reader selects and stores some of the data. Confirmation of the authenticity of the selected data is obtained by verifying whether they are identical to those input on request by the user in a secure communication mode of the reader. The method is applicable to the protection against the modification of a command and/or a document signed with an electronic signature.",
	"url": null,
	"owner": "Gemplus",
	"publication_number": "07360247",
	"publication_date": "2008-04-15",
	"application_number": "10276920",
	"application_date": "2001-05-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Messaging system based building control",
	"summary": "",
	"abstract": "An arrangement using an Instant Messaging (u201cIMu201d) chat-type interface for monitoring and controlling devices in an automated home is provided. The automated home is arranged to be accessible as an IM contact (often called a u201cbuddyu201d) to a user of an IM service that is located remotely from the automated home. After initiating an IM chat session, the user queries the status of systems and devices in the automated home, and operates devices in the automated home. In various illustrative examples, natural language commands are utilized to enable the user to ask simple questions regarding the status of devices in the home, take a virtual u201cwalk throughu201d the home, and turn devices on and off, among other options. As IM interfaces are being increasingly used on a variety of devices including mobile phones and personal digital assistants, users can conveniently access and control their automated home while traveling.",
	"url": null,
	"owner": "General Instrument Corporation",
	"publication_number": "07403838",
	"publication_date": "2008-07-22",
	"application_number": "11302777",
	"application_date": "2005-12-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data management system having a common database infrastructure",
	"summary": "",
	"abstract": "A data management system for use in accessing a plurality of diverse and distributed data sources over a computer network. Within the system, data from the data sources is represented by common data objects that encapsulate the actual data along with the methods and properties needed for use of the data. The system includes a common data model, a plurality of service managers, and a data services coordinator that coordinates operation of the service managers in utilizing the common data model to instantiate the common data objects that represent the data being accessed. The service managers include at least one data access manager for creation of the common data objects and a plurality of ancillary service managers that each provide one or more data service functions such as, for example, meta-data management, data management, data versioning, data transport, data update notification, data security, data presentation, and data translation.",
	"url": null,
	"owner": "General Motors Corporation",
	"publication_number": "07395255",
	"publication_date": "2008-07-01",
	"application_number": "10243295",
	"application_date": "2002-09-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for providing adaptive and proactive interaction management for multiple types of business interactions occurring in a multimedia communications environment",
	"summary": "",
	"abstract": "An object-oriented system for managing multiple media types in a communication center environment has a multimedia queuing system, a processor for processing events in the queue, an interaction server for selecting media type or event types, a resource manager for reporting availability of a resource access point, and a data store for storing client information about media types available to the client and historical information about success of past use of those media types. In a preferred application, the system processes and routes incoming events of known media type to access points defined as systems or agents based in part on media channel availability of the access point, and wherein the system selects a media channel or channels for certain events in queue that are not pre-dedicated as specific media type events but are generated outbound or internal proactive contact events. For proactive contact events, the system automatically selects a media channel for each event based on a combination of set preferences and predictions based on historical channel information relating to success channel connections to that client.",
	"url": null,
	"owner": "Genesys Telecommunications Laboratories, Inc.",
	"publication_number": "07373410",
	"publication_date": "2008-05-13",
	"application_number": "10441865",
	"application_date": "2003-05-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Routing emails to a plurality of agents",
	"summary": "",
	"abstract": "An Internet Protocol Network Telephony call center having a plurality of agents for serving clients also processes e-mails addresses to the call center, but not to specific agents. An e-mail server receives and routes the e-mail, and includes a router and a database storing skill set information regarding agents. The router extracts information from the e-mails, matches key words in the extracted information with key words from the skill sets, and routes the e-mails to appropriate agents having the necessary skills to respond to the service requirements in the e-mails.",
	"url": null,
	"owner": "Genesys Telecommunications Laboratories, Inc.",
	"publication_number": "07460496",
	"publication_date": "2008-12-02",
	"application_number": "11049207",
	"application_date": "2005-02-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Structured workfolder",
	"summary": "",
	"abstract": "A structured WorkFolder for organizing electronic documents in a self-contained data repository comprising sections for grouping related documents, and placeholders for indicating documents expected to be placed in the WorkFolder. The WorkFolder allows users of local or distributed data environments to gather and organize a collection of documents and supporting meta-data in a single data object that can be simultaneously accessed and updated by multiple users. The WorkFolder may also contain one or more task entries that are used to track the progress of work related to a WorkFolder. Additionally, supporting meta-data in the form of tasks, information fields, threaded discussions, as well as a detailed history log of all changes made to the WorkFolder can be stored in the WorkFolder.",
	"url": null,
	"owner": "Global 360, Inc.",
	"publication_number": "07447712",
	"publication_date": "2008-11-04",
	"application_number": "09136244",
	"application_date": "1998-08-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Adaptive Voice-over-Internet-Protocol (VoIP) testing and selecting transport including 3-way proxy, client-to-client, UDP, TCP, SSL, and recipient-connect methods",
	"summary": "",
	"abstract": "A Voice-over-Internet-Protocol (VoIP) system includes clients that make management connections to an external manager server using web-browsing protocols. A discovery process tests a variety of transport methods by sending packets using different protocols to several ports of the external manager. Some packets may be blocked by firewalls, while other packets are allowed to pass through. Successful packet replies indicate transport capabilities of the client. When a client makes a VoIP call to another client, the external manager compares transport capabilities of the two clients and selects a transport capability that is common to both clients. Transport methods include direct client-to-client connections using TCP or UDP to an arbitrary port or well-known port 80 or 443, and indirect using a voice-proxy server that each client connects to using web standards such as HTTP or SSL. When a client can make only outgoing connections, that client initiates the connection.",
	"url": null,
	"owner": "Global IP Solutions, Inc.",
	"publication_number": "07369537",
	"publication_date": "2008-05-06",
	"application_number": "10249384",
	"application_date": "2003-04-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for managing clusters containing multiple nodes",
	"summary": "",
	"abstract": "In clusters of multiprocessor systems it is important that these processor nodes are aware of each others availability and performance capabilities. In highly available systems using these multiprocessor systems there needs to be a method to dynamically bring nodes both into the cluster and to remove nodes out of the cluster. The processor node that is responsible for these actions is designated the manager node (). The manager node has a pre-selected backup to assume this responsibility upon the inability of said manager node to fulfill its duties. To allow the cluster of nodes to communicate with each other efficiently there needs to be a distributed messaging system that allows for the rapid distribution of data messages among the cluster nodes.",
	"url": null,
	"owner": "Goahead Software, Inc.",
	"publication_number": "07370223",
	"publication_date": "2008-05-06",
	"application_number": "10363709",
	"application_date": "2001-08-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for assured denotation of application semantics",
	"summary": "",
	"abstract": "Method and system are disclosed for assured denotation of application semantics (u201cADASu201d). In a computer system operating at least one application, a method is disclosed for providing assured denotation of application semantics associated with the application. A graphical operation is received for the application. The graphical operation includes at least one argument. The argument is intercepted for the graphical operation, and modified for the graphical operation to provide an indication of at least one application semantic associated with the application.",
	"url": null,
	"owner": "Google Inc.",
	"publication_number": "07406542",
	"publication_date": "2008-07-29",
	"application_number": "10379340",
	"application_date": "2003-03-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Technique for providing information assistance including a concierge-type service",
	"summary": "",
	"abstract": "A user may access information assistance for a concierge-type service, whereby the user may make restaurant reservations, purchase goods and services, obtain movie listings, etc. with an agent's (or operator's) assistance. In accordance with the invention, the agent may suggest a vendor for providing the goods or services requested by the user, and attempt to fulfill the user request. The suggested vendor may be one of the preferred vendors pre-selected by the user; it may be one of the preferred vendors pre-selected by a group to which the user belongs; it may be one of the preferred vendors pre-selected by the provider of the concierge-type service; and it may be one of the preferred vendors pre-selected by a telephone carrier to which the user subscribes. The suggested vendor may also be a function of characteristics of the vendors that the user prefers, costs, etc. The invention resolves conflicts of preferences of different parties involved to come up with the suggested vendor.",
	"url": null,
	"owner": "Grape Technology Group, Inc.",
	"publication_number": "07412042",
	"publication_date": "2008-08-12",
	"application_number": "10367090",
	"application_date": "2003-02-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methods for nonintrusive database security",
	"summary": "",
	"abstract": "Typical conventional database security scheme mechanisms are integrated in either the application or database. Maintenance of the security scheme, therefore, such as changes and modifications, impose changes to the application and/or database. Configurations of the invention employ a security filter for intercepting database streams, such as data access transactions, between an application and the a data repository, such as a relational database. A security filter deployed between the application and database inspects the stream of transactions between the application and the database. The security filter, by nonintrusively interrogating the transactions, provides a content-aware capability for seamlessly and nondestructively enforcing data level security. A security policy, codifying security requirements for the users and table of the database, employs rules concerning restricted data items. The filter intercepts transactions and determines if the transaction triggers rules of the security policy. If the transactions contain restricted data items, the security filter modifies the transaction to eliminate the restricted data items.",
	"url": null,
	"owner": "Guardium, Inc.",
	"publication_number": "07437362",
	"publication_date": "2008-10-14",
	"application_number": "10723521",
	"application_date": "2003-11-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methods for tracking local database access",
	"summary": "",
	"abstract": "Network based intrusion detection analyzes DB access attempts prior to transport into the host computer system and accordingly, mitigate resource overhead. However, host computer systems often employ local access such as a DBA account. Monitoring access attempts via the network monitor may not encompass such local access attempts. A data security device which intercepts both local and remote access attempts to the database resource monitors all database access attempts for auditing and security analysis. The data security device receives local access transactions via a local agent on the host. The local agent identifies and integrates with an interprocess communication (IPC) mechanism on the host computer system. The local agent implements an IPC interception mechanism to direct local database access attempts to the local agent, which then forwards the intercepted attempts to the data security device for further analysis. The network data security device therefore observes local access attempts via interception and transmission to the data security device, thereby consolidating analysis and logging of the data access attempts via the data security device.",
	"url": null,
	"owner": "Guardium, Inc.",
	"publication_number": "07426512",
	"publication_date": "2008-09-16",
	"application_number": "10780407",
	"application_date": "2004-02-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hardware verification scripting",
	"summary": "",
	"abstract": "Exemplary techniques for verifying a hardware design are described. In a described embodiment, a method comprises compiling an error verification object corresponding to an error verification command to verify a portion of a hardware design of a device under test. The error verification object is compiled in accordance with data provided by an error scripting module. The error scripting module has access to hardware-specific data corresponding to the hardware design of the device under test. The compiled object is sent to the device under test and a response to the compiled object is received from the device under test. The received response from the device under test is parsed in accordance with data provided by the error scripting module.",
	"url": null,
	"owner": "Hewlett-Packard Development Company",
	"publication_number": "07447966",
	"publication_date": "2008-11-04",
	"application_number": "11030349",
	"application_date": "2005-01-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Trusted computing environment",
	"summary": "",
	"abstract": "A trusted computing environment , wherein each computing device  to  holds a policy specifying the degree to which it can trust the other devices in the environment . The policies are updated by an assessor  which receives reports from trusted components  in the computing devices  to  which identify the trustworthiness of the computing devices  to ",
	"url": null,
	"owner": "Hewlett-Packard Development Company L.P.",
	"publication_number": "07353531",
	"publication_date": "2008-04-01",
	"application_number": "10080477",
	"application_date": "2002-02-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Aggregation of network resources providing offloaded connections between applications over a network",
	"summary": "",
	"abstract": "A computer system aggregates a plurality of network resources of a computer system. The plurality of network resources forms a bypass stack operable to provide offloaded connections to one or more applications available on the computer system. Each of the applications is associated with a first port number. The computer system itself is addressable on the network by a public IP address. The system assigns private IP addresses to uniquely identify each of the plurality of network resources. The system creates a socket for each application by which the application can communicate with the network. The socket is associated with a first endpoint tuple that includes the public IP address and the first port number associated with the application for which the socket is created. The socket is further associated with a set of bypass endpoint tuples that are translated from the first endpoint tuple, each of the set including a different one of the private IP addresses. Each of the bypass endpoint tuples is available to be a transport address to define an offloaded connection to the application through one of the network resources. The created socket can be a listening one at a server node or a connection one at a client node.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07403535",
	"publication_date": "2008-07-22",
	"application_number": "11013185",
	"application_date": "2004-12-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for creating a trusted environment",
	"summary": "",
	"abstract": "A computer apparatus for creating a trusted environment comprising a trusted device arranged to acquire a first integrity metric to allow determination as to whether the computer apparatus is operating in a trusted manner; a processor arranged to allow execution of a first trust routine and associated first operating environment, and means for restricting the first operating environment access to resources available to the trust routine, wherein the trust routine being arranged to acquire the first integrity metric and a second integrity metric to allow determination as to whether the first operating environment is operating in a trusted manner.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07467370",
	"publication_date": "2008-12-16",
	"application_number": "11090964",
	"application_date": "2005-03-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for creating a trusted environment",
	"summary": "",
	"abstract": "A computer apparatus for creating a trusted environment comprising a trusted device arranged to acquire a first integrity metric to allow determination as to whether the computer apparatus is operating in a trusted manner; a processor arranged to allow execution of a first trust routine and associated first operating environment, and means for restricting the first operating environment access to resources available to the trust routine, wherein the trust routine being arranged to acquire the first integrity metric and a second integrity metric to allow determination as to whether the first operating environment is operating in a trusted manner.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07376974",
	"publication_date": "2008-05-20",
	"application_number": "10303690",
	"application_date": "2002-11-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Assessing health of a subsystem or service within a networked system",
	"summary": "",
	"abstract": "A health assessor for assessing health of a target element within a multi-element system includes multiple sensors, each being operatively coupled to the target element to produce measures of the target element. The health assessor also includes measure collectors, each of which collects a measure from one of the sensor. In addition, the health assessor includes evaluators. Each evaluator evaluates at least a subset of all the measures collected by the measure collectors in accordance with (1) a predefined evaluation definition for the respective evaluator and (2) at least a subset of all historical measures to provide an assessment. A probabilistic reasoning network is coupled to the evaluators to receive the assessment from each of the evaluators and to combine all the assessments in accordance with a pre-configured reasoning definition so as to provide an overall health assessment of the target element. A health assessment system including the health assessor is also described.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07426502",
	"publication_date": "2008-09-16",
	"application_number": "09882581",
	"application_date": "2001-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data integrity monitoring in trusted computing entity",
	"summary": "",
	"abstract": "A method of security monitoring of data files in a computer platform is carried out by a trusted component having a processor and trusted memory area. The method comprises creating one or a plurality of data files in an untrusted memory area of said computing platform, for each created data file, periodically generating a digest data by applying a hash function to each data file, storing the digest data in a trusted memory area and for each file periodically comparing a current digest data of the file with a previously generated digest data of the file. Any differences between a previous and a current digest data indicate that a file in the untrusted memory area has been corrupted.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07457951",
	"publication_date": "2008-11-25",
	"application_number": "09979903",
	"application_date": "2000-05-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Delivery of an interruption to an operating system",
	"summary": "",
	"abstract": "One embodiment of the invention is a method for handling an interruption during execution of an application on a computer system that uses a register stack, the method comprising receiving the interruption by a hypervisor, sending the interruption to an operating system for handling; if the register stack has a fault, then generating, by the operating system, another interruption that is delivered to the hypervisor; after receiving the another interruption, covering, by the hypervisor, the register stack; after covering the register stack, sending the interruption to the operating system for handling; and after handling, returning to execution of the application.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07363536",
	"publication_date": "2008-04-22",
	"application_number": "10903218",
	"application_date": "2004-07-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Embedded spreadsheet commands",
	"summary": "",
	"abstract": "A cell of a spreadsheet is automatically updated and a comment is determined to have a command associated with the update. In response to detecting the command, the command is processed.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07426688",
	"publication_date": "2008-09-16",
	"application_number": "10979268",
	"application_date": "2004-11-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Error-detectable license key fragmentation to facilitate errorless manual entry",
	"summary": "",
	"abstract": "A key fragment generator accepts a key string, such as from a key string generator, and produces a plurality of key fragments that can be entered by a human with a lower likelihood of error than if the human attempted to enter the original key string. A key defragmenter accepts a plurality of entered key fragments, reconstitutes the original key string from the entered key fragments and, optionally, provides the reconstituted key string to a software package or other license manager. The key fragment generator can produce u201cfriendlyu201d key fragments that are easier for humans to read and enter than the arbitrary character strings that characterize typical key strings. The key fragment generator can produce u201cerror-detectableu201d key fragments. If an error-detectable key fragment is entered incorrectly, the key defragmenter can generate an error message and permit a user to enter the key fragment again. The key fragment generator can produce u201cerror-correctableu201d key fragments. If an error-correctable key fragment is entered incorrectly, the key defragmenter can generate an error message that describes the nature of the error or that draws a user's attention to a portion of the key fragment that the user entered incorrectly. The error message can include a u201chintu201d related to one or more confusable characters that were entered incorrectly.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07406600",
	"publication_date": "2008-07-29",
	"application_number": "10630144",
	"application_date": "2003-07-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Gesture recognition",
	"summary": "",
	"abstract": "A gesture related to portions of handwritten text is recognized. Furthermore, an action is performed against the portions of the handwritten text. The action is associated with the recognized gesture.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07372993",
	"publication_date": "2008-05-13",
	"application_number": "10895740",
	"application_date": "2004-07-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Grid computing control system",
	"summary": "",
	"abstract": "Embodiments of the present invention provide a method for grid computing access control and a system thereof. A command is received from a user. The authorization of the user to execute the command is verified. A system parameter is monitored during execution of the command.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07421500",
	"publication_date": "2008-09-02",
	"application_number": "10340436",
	"application_date": "2003-01-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "In-service raid mirror reconfiguring",
	"summary": "",
	"abstract": "This disclosure describes a technique including operating a redundant disk drive device, wherein the redundant disk drive device includes a primary disk drive and at least one mirror disk drive. At least one of the disk drives is reconfigured within the redundant disk drive system in such a manner that during the reconfiguring, the disk drive is maintained on-line.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07370248",
	"publication_date": "2008-05-06",
	"application_number": "10704478",
	"application_date": "2003-11-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mechanism and method for sharing imaging information from an enterprise resource planning computing environment",
	"summary": "",
	"abstract": "A distributed imaging capability to a user of a client device using data partially obtained from an enterprise resource planning system. Document creation, manipulation, editing, and output is provided by and associated with the originating user. Generic access instructions cause associated document data to be retrieved or stored. Multiple documents and output devices may be employed to accomplish distributed imaging functionality. Interactive graphical printing configuration and monitoring can be utilized.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07464134",
	"publication_date": "2008-12-09",
	"application_number": "10056687",
	"application_date": "2002-01-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mechanism for sharing web-based imaging information from a multi-function peripheral",
	"summary": "",
	"abstract": "The method of the present invention is capable of providing distributed imaging capability to a user of a multi-function peripheral. Document creation, manipulation, editing, and output are provided by the present invention. Document design and image data are associated with the originating user. Generic access instructions cause associated document data to be retrieved or stored in accordance with the present invention. A multi-function peripheral is used to obtain and store at least a portion of image data. Multiple documents and output devices may be employed to accomplish the requesting user's needs. Further, interactive graphical printing configuration and monitoring may be utilized.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07321902",
	"publication_date": "2008-01-22",
	"application_number": "10219101",
	"application_date": "2002-08-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for controlling execution of a child process generated by a modified parent process",
	"summary": "",
	"abstract": "A monitoring interface, includes logic responsive to a pre-fork event, the pre-fork event responsive to a vfork system call. The pre-fork event includes indicia that identifies a child process to be created in accordance with the vfork system call. A method for controlling the execution of a child process created from a parent process, where the parent process is monitored by a software tool includes, receiving indicia that a vfork system call will be executed by the parent process, suspending execution of the parent process, extracting a process identifier from the indicia of the vfork system call, the process identifier corresponding to a child process to be generated by the parent process when the parent process executes the vfork system call, setting a process monitor thread to observe the child process, and resuming execution of the parent process to enable the parent process to execute past the vfork system call.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07415699",
	"publication_date": "2008-08-19",
	"application_number": "10608330",
	"application_date": "2003-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and device for three-dimensional graphics to two-dimensional video encoding",
	"summary": "",
	"abstract": "A method and device for three-dimensional graphics to two-dimensional video encoding. A three-dimensional model representing at least one three-dimensional object is received. The three-dimensional model is rendered into a two-dimensional frame. Composition information for the two-dimensional frame is extracted from the three-dimensional model. A bit stream is encoded based on the two-dimensional frame and the composition information.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07426304",
	"publication_date": "2008-09-16",
	"application_number": "10942357",
	"application_date": "2004-09-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for communicating between a management station and at least two networks having duplicate internet protocol addresses",
	"summary": "",
	"abstract": "A system and method for communicating between a management station and at least two networks having duplicate Internet Protocol (IP) addresses. An IP address for an IP data packet to be sent to at least one of an end device and the management station is recognized. A header of the IP data packet with a tag that identifies one of the duplicate IP networks within which the end device resides is modified. The IP data packet is routed, based on the tag, in accordance with a policy.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07451203",
	"publication_date": "2008-11-11",
	"application_number": "10740897",
	"application_date": "2003-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for hosting an application with a facade server",
	"summary": "",
	"abstract": "One exemplary embodiment may be a system that comprises a central processing unit (CPU), an application, and a facade server. The facade server may host the application without utilizing network protocols. A program executing on the CPU may create an interface between the facade server and a browser for exchanging data associated with the application.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07472398",
	"publication_date": "2008-12-30",
	"application_number": "10715250",
	"application_date": "2003-11-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for managing a network",
	"summary": "",
	"abstract": "In an exemplary method, a network having first and second network manager devices is managed by independently managing a first operation using a first logic of the first network manager device, including managing a first portion of a database, and by independently managing a second operation using a second logic of the second network manager device, including managing a second portion of the database. A peer-to-peer interface can communicate information between the first and second network manager devices. In an exemplary embodiment, a system for managing a network includes a plurality of network manager devices, each device including a logic for managing a different operation, a database, and a peer-to-peer interface for sending queries to a different network manager device in the plurality and receiving queries from the different network manager device in the plurality.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07398307",
	"publication_date": "2008-07-08",
	"application_number": "10425727",
	"application_date": "2003-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for pinning a resource having an affinity to a user for resource allocation",
	"summary": "",
	"abstract": "A method and system for resource allocation. Specifically, in one embodiment, a method begins by receiving a request for an interactive session from a user. The request also comprises a resource requirement profile. Then, the method continues by selecting a computing resource having an affinity to the user. The computing resource is selected from a plurality of computing resources that are available to the user. The selected computing resource is implemented to support the interactive session. Thereafter, the selected computing resource is assigned to the user for use in the interactive session.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07340522",
	"publication_date": "2008-03-04",
	"application_number": "10632447",
	"application_date": "2003-07-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for providing information for remote device support",
	"summary": "",
	"abstract": "A method and system gather information to facilitate the remote support of devices installed on a computer. For example, an exemplary method comprises first installing an information harvester and a formatter onto the computer. These are then used to identify and test the devices and to collect information about the devices and the testing. Then at least some of the collected information is formatted for display to the user and presentation to a support specialist. The formatted information is then displayed as part of a user display also having provision whereby a user may enter additional comments about device problems into the user display. If a user so chooses, the user comments may be collected, then the combined formatted collected information and the collected user comments are sent to a support specialist by means of a network transport mechanism such as e-mail, TCP, or the like.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07325170",
	"publication_date": "2008-01-29",
	"application_number": "10804290",
	"application_date": "2004-03-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network communication apparatus and method",
	"summary": "",
	"abstract": "A network communication apparatus comprises an application, a plurality of communication sessions, a transport manager, and buffer logic. The application is configured to initiate a session request specifying a set of receiving units and a transport protocol. The transport manager is configured to allocate at least one of the communication sessions to the application in response to the session request. The transport manager is further configured to provide a session identifier that identifies the allocated session. The transport manager configures, based on the session request, the allocated session to communicate with the specified set of receiving units via the specified protocol. The buffer logic is configured to store data produced by the application into the shared memory accessible to each of the communication sessions and to associate the stored data with the session identifier. The allocated session is configured to retrieve the data based on the session identifier and to transmit the retrieved data through a network to the specified set of receiving units via the specified protocol.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07373408",
	"publication_date": "2008-05-13",
	"application_number": "10361737",
	"application_date": "2003-02-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network, method and computer readable medium for distributing security updates to select nodes on a network",
	"summary": "",
	"abstract": "A network having a intrusion protection system comprising a network medium, a management node connected to the network medium and running an intrusion prevention system management application, and a plurality of nodes connected to the network medium and running an instance of an intrusion protection system application, at least one of the nodes having an identification assigned thereto based on a logical assignment grouping one or more of the plurality of nodes, each node sharing the identification being commonly vulnerable to at least one network exploit is provided. A method of transmitting a command and security update message to a subset of nodes of a plurality of network nodes comprising generating an update message by a management node of the network, addressing the update message to a network address shared by the subset of nodes, transmitting the update message, and receiving and processing the update message by the subset of nodes is provided. A computer-readable medium having stored thereon a set of instructions to be executed, the set of instructions, when executed by a processor, cause the processor to perform a computer method of generating, by the computer, a message addressed to a subset of nodes on a network, transmitting the message on a network medium of the network to the subset of nodes, receiving the message by a router terminating the network medium, and forwarding, by the router, the message to any nodes included in the subset of nodes on a second network medium terminated by the router is provided.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07444679",
	"publication_date": "2008-10-28",
	"application_number": "10001446",
	"application_date": "2001-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Power management system for UPS attached to external devices",
	"summary": "",
	"abstract": "Systems, methodologies, media, and other embodiments associated with power management are described. One exemplary system embodiment includes an uninterrupted power supply (UPS) manager logic configured to determine a power status of one or more UPS devices attached to one or more external peripheral devices. The UPS manager logic can be configured to notify an appropriate operating system of a power loss to a selected external device.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07350088",
	"publication_date": "2008-03-25",
	"application_number": "11075409",
	"application_date": "2005-03-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Power management with low power processes",
	"summary": "",
	"abstract": "Systems, methodologies, media, and other embodiments associated with selectively regulating power consumption by a computing system are described. One exemplary method embodiment includes receiving a signal that power regulation is desired for a computing system. The exemplary method embodiment may also include selectively causing a low power process to be executed in the computing system to cause the computing system to consume less power on average than would be consumed if the low power process was not executed.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07412611",
	"publication_date": "2008-08-12",
	"application_number": "11150919",
	"application_date": "2005-06-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Pre-defined print option configurations for printing in a distributed environment",
	"summary": "",
	"abstract": "Pre-defined print option configurations for printing in a distributed environment are established by user selection of one or more print options via a network service. The one or more print options are identified for subsequent resolution, and can be applied to one or more other network services.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07450256",
	"publication_date": "2008-11-11",
	"application_number": "09905506",
	"application_date": "2001-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Pre-warming portions of an inkjet printhead",
	"summary": "",
	"abstract": "An embodiment of a printing system is provided with an inkjet printhead having plural portions each having an ink-ejecting nozzle. The printing system includes plural heater elements each associated with one of the plural portions to pre-warm ink dispensed by the nozzle of the associated portion in response to a pre-warming signal. The printing system also includes a controller configured to generate the pre-warming signal for one or more heater elements based on a selection criteria for generating the pre-warming signal only when the nozzle of said associated portion is required to eject ink during an upcoming print swath.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07341324",
	"publication_date": "2008-03-11",
	"application_number": "10691311",
	"application_date": "2003-10-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Printer based file revision databasing",
	"summary": "",
	"abstract": "The present disclosure relates to modifying files that are part of file system in a printer or printing device. The file system is related to a database, such that the database is updated when the file system is modified. Changes to the files system are made through a request, modifying the file system based on the request, and updating the database. Individual files make up programs that may be provided by a printer manufacturer or a third party solution provider. When the printer manufacturer or solution provider desires to modify files affecting a program, a query may be made as to the existing files in the database of the particular printer.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07456991",
	"publication_date": "2008-11-25",
	"application_number": "10418714",
	"application_date": "2003-04-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Protection of the configuration of modules in computing apparatus",
	"summary": "",
	"abstract": "A method of protecting from modification computer apparatus comprising a plurality of functional modules by monitoring the configuration of functional modules within the computer apparatus. The method comprises: storing a module configuration of the computer apparatus; and checking the actual module configuration against the stored module configuration, and inhibiting function of the computer apparatus if the actual module configuration does not satisfactorily match the stored module configuration. Advantageously, the module configuration is stored on a security token, such as a smart card.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07430668",
	"publication_date": "2008-09-30",
	"application_number": "09913454",
	"application_date": "2000-02-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Providing secure access through network firewalls",
	"summary": "",
	"abstract": "To enable controlled, secure connections using a versatile protocol such as TCP/IP to be established through a firewall and proxy server, the versatile protocol is tunnelled using HTTP. Client to server communications are effected using an HTTP POST operation. Server to client communications are effected using an HTTP GET operation to establish a tunnelled socket; this socket is closed within an interval less than any timeout imposed by the proxy server and immediately re-established by another GET operation, irrespective of whether data continue to be pending for communication to the client. A globally-unique ID is included in each POST and GET message to enable related messages to be recognized.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07359978",
	"publication_date": "2008-04-15",
	"application_number": "11357050",
	"application_date": "2006-02-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Reliable datagram",
	"summary": "",
	"abstract": "A reliable datagram service is implemented with a source and destination resource (SDR). Source SDR resources, at a source device, multiplex units of work produced by at least one source application instance (AI) into a serial unit of work stream having units of work in a defined order and transmit the serial unit of work stream over a communication services/fabric. Destination SDR resources, at a destination device, receive the serial unit of work stream, demultiplex the serial unit of work stream into units of work provided to at least one destination AI, and provide a negative acknowledgement (NAK) for a unit of work received ahead of its defined order.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07318102",
	"publication_date": "2008-01-08",
	"application_number": "09578155",
	"application_date": "2000-05-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Reliable multicast",
	"summary": "",
	"abstract": "A reliable multicast service is operated between a source device and multiple destination devices participating in a multicast group. The source device includes a first source application instance (AI) producing a first unit of work stream, and communication services (CS). Each destination device in the multicast group includes CS, and at least one destination AI which consumes units of work. Communication services/fabric provide communication between the source device and the multiple destination devices. Multiple source and destination resources (SDRs) implement corresponding multiple reliable transport services between the source device and corresponding multiple destination devices in the multicast group for delivery of the first unit of work stream to the corresponding destination devices and guaranteeing strong ordering of the first unit of work stream received at the corresponding destination devices.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07346699",
	"publication_date": "2008-03-18",
	"application_number": "09578019",
	"application_date": "2000-05-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure foreign enterprise printing",
	"summary": "",
	"abstract": "Example systems, methods, computer-readable mediums, and other forms of a secure foreign enterprise printing system are provided. An example system may include a wireless telephonic logic for communicating with a wireless network web services provider and a wireless network communication logic configured to communicate a print request to the wireless network web services provider using the wireless telephonic logic. The print item may be stored in a first enterprise and may be printed on an image forming device that is located in a second enterprise. The example system may also include an encryption logic configured to facilitate providing security for the print item as it travels from the first enterprise to the image forming device.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07349543",
	"publication_date": "2008-03-25",
	"application_number": "10686979",
	"application_date": "2003-10-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Self-adapting plug-in service",
	"summary": "",
	"abstract": "A self-adapting plug-in service that runs on a plurality of platforms and obviates the need to develop a different version of the plug-in service for each platform. A self-adapting plug-in service according to the present techniques includes code that generates a platform access using a common plug-in API and a translation layer that translates the platform access into a platform-specific access that is adapted one of the platforms that is running under the self-adapting plug-in service.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07433935",
	"publication_date": "2008-10-07",
	"application_number": "11118244",
	"application_date": "2005-04-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for managing data flow and measuring service in a storage network",
	"summary": "",
	"abstract": "A computer network has several machines, including machines having storage systems, and communication resources for communicating between the machines. A metadata registry having information about data stored on the network is distributed on two or more machines of the network, and local copies of part of this metadata registry reside on a compute machine of the network. The metadata registry has a command object that comprises network address information about at least some of the machines of the computer network that participate in a first communication. An agent monitors communications between the machines of the computer network for communications relevant to the command object, the agent modifies the command object by adding network address information of additional machines of the computer network that should participate in the first communication between said machines to maintain coherency of the metadata registry and local copies thereof.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07379960",
	"publication_date": "2008-05-27",
	"application_number": "10748346",
	"application_date": "2003-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for optimizing a program",
	"summary": "",
	"abstract": "Disclosed are systems and methods for optimizing a program.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07356813",
	"publication_date": "2008-04-08",
	"application_number": "10255748",
	"application_date": "2002-09-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for uniform resource locator filtering",
	"summary": "",
	"abstract": "A system and method for Uniform Resource Locator (URL) filtering is disclosed. The method comprises receiving an event notification upon the occurrence of an event associated with a received URL; searching, in response to the event notification, a lexical search tree data structure storing a plurality of URLs for the received URL; and processing the received URL in response to the received URL not matching any of the plurality of URLs stored in the lexical search tree data structure.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07472167",
	"publication_date": "2008-12-30",
	"application_number": "10004192",
	"application_date": "2001-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for writing to a drive when an application lacks administrator privileges",
	"summary": "",
	"abstract": "A system and method are provided which enable a user of a computer application without administrator privileges to write to a drive without using a third party driver and without using a customized driver acting in conjunction with an IDE bus. The system includes a driver programming interface in communication with the application, a service proxy in communication with the driver interface, a service with administrator privileges in communication with the service proxy, a driver in communication with the service with administrator privileges, and a drive in communication with the driver.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07434232",
	"publication_date": "2008-10-07",
	"application_number": "10702586",
	"application_date": "2003-11-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method of monitoring e-service Quality of Service at a transaction level",
	"summary": "",
	"abstract": "Quality of Service (QoS) management in a service-based system may be provided by adaptively adjusting system operational parameters in response to real time relationships between QoS specifications and measurements. A QoS manager may include a measurement engine configured to acquire real time data that is specific to transaction instances of various transaction types. The manager also may include a controller for comparing transaction data from the measurement engine to the guaranteed QoS standards. Depending upon the results of the comparison, the controller may invoke control actions.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07349340",
	"publication_date": "2008-03-25",
	"application_number": "10464593",
	"application_date": "2003-06-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods of providing image copy and modify commands to a receiver with an associated display",
	"summary": "",
	"abstract": "A method comprises providing image copy and modify commands to a receiver. Each copy command causes pixel values in an area of a display associated with the receiver to be copied to another area of the display and each modify command causes at least one pixel value in an area of the display to be modified. The method further comprises generating a future copy region if a future copy command that is providable to the receiver is encountered. The future copy region defines one or more rectangles of pixels on the display that are copyable in the future on the display associated with the receiver. The method also comprises using the future copy region to avoid sending a future copy command to the receiver that will copy pixel values that are to be modified on a display associated with a sending system.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07450128",
	"publication_date": "2008-11-11",
	"application_number": "10988776",
	"application_date": "2004-11-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Tiered multi-source software support using automated diagnostic-data transfers",
	"summary": "",
	"abstract": "Primary and secondary support vendors  and  provide support for an application  running on a customer computer system . Diagnostic software  running on the customer computer system gathers diagnostic data, which is transmitted to the primary-support vendor's computer system . There, the diagnostic data is analyzed to determine whether the help of the secondary support vendor is required. If so, the diagnostic data is repackaged for transmission to the secondary support vendor. The results of the secondary analysis are returned to the primary support vendor's computer system and used to generate a proposed solution, which is made available to the customer ",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07334028",
	"publication_date": "2008-02-19",
	"application_number": "10722337",
	"application_date": "2003-11-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transaction processing systems and methods utilizing non-disk persistent memory",
	"summary": "",
	"abstract": "In at least one embodiment, transaction processing systems comprise non-disk persistent memory that is utilized to commit transactions.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07383290",
	"publication_date": "2008-06-03",
	"application_number": "10797258",
	"application_date": "2004-03-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Trusted computing platform",
	"summary": "",
	"abstract": "Whenever a user wishes to interact with the computing platform, he first requests the integrity metric, which he compares with an authentic integrity metric that was measured by a trusted party. If the metrics are the same, the platform is verified and interactions can continue. Otherwise, interaction halts on the basis that the operation of the platform may have been subverted.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07444601",
	"publication_date": "2008-10-28",
	"application_number": "11249820",
	"application_date": "2005-10-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Use of a job ticket service to store bid information",
	"summary": "",
	"abstract": "A bidding service may be used to receive bid information to complete a job request, from processors coupled to a job ticket service center. The processors submit bids in response to posting of job ticket notices at the service center. A work flow controller may post the job ticket notices after receipt of the job request. The job ticket notice may include specific tasks or branches that must be completed to complete the job request. The job ticket notice may include descriptions of specific branches and their interrelationships in sufficient detail to allow the processors to bid for completion of the branches. The bidding service may select bids from the processors based on set criteria. For example, the job request may specify minimum performance requirements (e.g., a maximum cost and a completion deadline). The bidding service may reject any bids that fail to satisfy the minimum performance requirements. Where the work flow controller has established multiple branches, each such branch may include minimum performance requirements. The branch-specific performance requirements may be established by the work flow controller based on overall performance requirements for the job ticket.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07349869",
	"publication_date": "2008-03-25",
	"application_number": "09873194",
	"application_date": "2001-06-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Using thermal management register to simulate processor performance states",
	"summary": "",
	"abstract": "Systems, methodologies, media, and other embodiments associated with simulating a processor performance state by controlling a thermal management signal are described. One exemplary system embodiment includes a data structure for storing bit patterns that facilitate controlling a GPIO (General Purpose Input Output) block and addresses of locations to which the bit patterns can be written. The example system may also include a logic configured to receive a request to produce a performance state in a processor and to cause a frequency and voltage to be established in the processor in response to a thermal management signal being generated in response to writing the bit pattern(s) to the address(es).",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07430502",
	"publication_date": "2008-09-30",
	"application_number": "10812147",
	"application_date": "2004-03-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Wireless printing interface kit and method",
	"summary": "",
	"abstract": "A kit, system, and associated methods are provided to facilitate wireless printing. In one embodiment, the system comprises a platform having a processor circuit having a processor and a memory. The system also includes a wireless printing logic stored in the memory and executable by the processor. The wireless printing logic comprises an application capable of a print operation and a number of hidden objects that encapsulate a number of wireless printing tasks associated with a wireless printing operation for the application. The wireless printing logic also includes at least one application programming interface (API) object that provides an interface between the application and the hidden objects, and, at least one platform specific object that encapsulates a number of adaptive wireless printing tasks that are configured for operation on the platform.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07417754",
	"publication_date": "2008-08-26",
	"application_number": "09947261",
	"application_date": "2001-09-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Connecting device of storage device and computer system including the same connecting device",
	"summary": "",
	"abstract": "In an environment in which plural external storage devices having different function control interfaces are intermixed, when a function of a storage device is controlled from a computer, a common interface for controlling the function of the storage device is provided. A device that provides the common interface manages an interrelationship between a storage area recognized by a host computer and a storage area provided by the storage device and associates a storage area which becomes a target of a function control instruction with the storage device that provides the storage area. A type of the storage device that provides the storage area which becomes the target of the function control instruction is identified and function control is ordered through a function control interface unique to the device.",
	"url": null,
	"owner": "Hitachi, Ltd.",
	"publication_number": "07392336",
	"publication_date": "2008-06-24",
	"application_number": "11281475",
	"application_date": "2005-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data processing device and its input/output method and program",
	"summary": "",
	"abstract": "The present invention improves input/output speed by multiplexing/demultiplexing data and also reducing the processing time required for interrupt handling. The present invention involves a process which requests input/output operation; an adapter which performs input/output operation based on the request from the process; and a scheduler which keeps the process in wait state while the adapter is performing input/output operation. When the input/output operation of the adapter is completed, the state of the process waiting for the completion of the operation is changed into u201crunnableu201d by the adapter, and the execution of the process which requested input/output operation is thereby restarted.",
	"url": null,
	"owner": "Hitachi, Ltd.",
	"publication_number": "07336664",
	"publication_date": "2008-02-26",
	"application_number": "10320607",
	"application_date": "2002-12-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "File server for long term data archive",
	"summary": "",
	"abstract": "A NAS system including a NAS controller which processes file level input/output requests and controls the NAS system, and a storage apparatus having a controller which controls a storage device upon which plural volumes for storing data are represented. In the invention when at least a portion of data of a file stored on a volume is updated, the updated data is stored to an unused area of the volume, information is stored on the volume indicating that the updated data corresponding to original data stored in an original area is stored in the unused area so that subsequent accesses to the original of the updated data is directed to the updated data stored in the unused area, and the original of the updated data is retained in the original area, thereby implementing long term data archiving of the original of the updated data.",
	"url": null,
	"owner": "Hitachi, Ltd.",
	"publication_number": "07353242",
	"publication_date": "2008-04-01",
	"application_number": "10886646",
	"application_date": "2004-07-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integrated service management system",
	"summary": "",
	"abstract": "The present invention provides techniques for creation, operation, management, and access control of network-based storage services. Specific embodiments provide improved efficiency of the service management tasks used for designing, operating and accounting the robust and profitable network services, for example. In representative embodiments, techniques for constructing integrated network and storage services are provided. In a specific embodiment, the service comprises of three major service components: virtual private networks (VPN), application servers and storage area networks (SAN). Each of these service components has its own customer identification information, such as VPN identifier for VPN services, process identifier for application servers and logical unit number (LUN) for storage devices.",
	"url": null,
	"owner": "Hitachi, Ltd.",
	"publication_number": "07379987",
	"publication_date": "2008-05-27",
	"application_number": "09964129",
	"application_date": "2001-09-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integrated service management system for remote customer support",
	"summary": "",
	"abstract": "The present invention provides techniques for creation, operation, management, and access control of network-based storage services. Specific embodiments provide improved efficiency of the service management tasks used for designing, operating and accounting the robust and profitable network services, for example. In representative embodiments, techniques for constructing integrated network and storage services are provided. In a specific embodiment, the service comprises of three major service components: virtual private networks (VPN), application servers and storage area networks (SAN). Each of these service components has its own customer identification information, such as VPN identifier for VPN services, process identifier for application servers and logical unit number (LUN) for storage devices.",
	"url": null,
	"owner": "Hitachi, Ltd.",
	"publication_number": "07464152",
	"publication_date": "2008-12-09",
	"application_number": "11449438",
	"application_date": "2006-06-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for file management",
	"summary": "",
	"abstract": "File management method having first and second processing modes for storing file type information for discrimination between first and second processing modes in recording medium as file management information associated with file for file management. In first processing mode, when data in the form of file is written on a recording medium and a write error occurs, replacement processing to another write area is performed to write the data in another area. In second processing mode, when write error occurs, the replacement processing to other write area is not performed to write the data. Method includes reading file type information associated with a file to be processed from recording medium, converting the file type from file type indicative of first processing mode to file type indicative of second processing mode, and writing the file type after conversion in recording medium as file management information associated with the file to be processed.",
	"url": null,
	"owner": "Hitachi, Ltd.",
	"publication_number": "07320012",
	"publication_date": "2008-01-15",
	"application_number": "11410023",
	"application_date": "2006-04-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Techniques for managing a storage environment",
	"summary": "",
	"abstract": "Techniques for managing a storage environment. According to an embodiment of the present invention, high-level application programming interfaces (APIs) are provided that can be used by applications such as storage management applications (e.g., ERM applications, SRM applications) to manage a storage environment. Using these APIs, an application can issue simple high-level commands to perform storage management operations without having to worry about the low level storage array-specific commands. Embodiments of the present invention handle the necessary translations between the high-level commands and the low-level storage array-specific commands or protocols.",
	"url": null,
	"owner": "Hitachi, Ltd.",
	"publication_number": "07363390",
	"publication_date": "2008-04-22",
	"application_number": "10374319",
	"application_date": "2003-02-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "XML document classifying method for storage system",
	"summary": "",
	"abstract": "An XML document classifying method includes the steps of: classifying a plurality of XML documents stored in a storage unit, depending on whether a specific element/attribute is present in the XML documents and based on the identity of the value of the element/attribute; generating a folder hierarchical expression wherein the XML documents are sorted and arranged into folders; and providing the folder hierarchical expression for a hierarchical file GUI.",
	"url": null,
	"owner": "Hitachi, Ltd.",
	"publication_number": "07337187",
	"publication_date": "2008-02-26",
	"application_number": "10933223",
	"application_date": "2004-09-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for monitoring online behavior at a remote site and creating online behavior profiles",
	"summary": "",
	"abstract": "A method and system for monitoring users on one or more computer networks, disassociating personally identifiable information from the collected data, and storing it in a database so that the privacy of the users is protected. The system includes monitoring transactions at both a client and at a server, collecting network transaction data, and aggregating the data collected at the client and at the server. The system receives a user identifier and uses it to create an anonymized identifier. The anonymized identifier is then associated with one or more users' computer network transactions. The data is stored by a collection engine and then aggregated to a central database server across a computer network.",
	"url": null,
	"owner": "Hitwise Pty, Ltd.",
	"publication_number": "07360251",
	"publication_date": "2008-04-15",
	"application_number": "11236482",
	"application_date": "2005-09-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for testing hardware devices",
	"summary": "",
	"abstract": "A system for testing hardware devices applies a multi-level architecture including a Graphical User Interface (GUI) level (), a Dynamic Link Library (DLL) level (), and a device driving level (). The GUI level selects test items and test units for a test project based on test requirements, stores the test project in a test script file, configures test parameters for performing the test project, and stores the test parameters in a test parameter configuration file. The DLL level transmits test results of each hardware device () to the GUI level. The device driving level includes a device driving module () for obtaining test information on the hardware device, comparing the test information with standard information in the test parameter configuration file, and generating a comparison result. A related method is also disclosed.",
	"url": null,
	"owner": "Hon Hai Precision Industry Co., Ltd.",
	"publication_number": "07409603",
	"publication_date": "2008-08-05",
	"application_number": "11025576",
	"application_date": "2004-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus, method, and system for removing ethernet header and adding second IP header",
	"summary": "",
	"abstract": "An apparatus including a protocol stack, the protocol stack including an application layer, a network layer, and a physical layer, wherein the physical layer comprises a hardware interface between the apparatus and a network, wherein network-level tunnelling of a packet from the network layer, the tunnelling creating a packet having a plurality of network layer source addresses and a plurality of network layer destination addresses, takes place in the apparatus below the network layer but above the physical layer, wherein a driver operating in the apparatus below the network layer but above the physical layer effects the network-level tunnelling, and wherein the driver is configured to generate a reply to an ARP packet received from the network layer of the apparatus.",
	"url": null,
	"owner": "Hughes Electronics Corporation",
	"publication_number": "07325063",
	"publication_date": "2008-01-29",
	"application_number": "10691302",
	"application_date": "2003-10-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network system with TCP/IP protocol spoofing",
	"summary": "",
	"abstract": "A system in which a personal computer sends messages into a TCP/IP network using a conventional dial-up link and downloads data from the TCP/IP network using a high-speed one-way satellite link. A preferred embodiment uses a conventional SLIP provider to connect to the TCP/IP network and uses a commercial software TCP/IP package that has a standard driver interface. A spoofing protocol compensates for the long propagation delays inherent to satellite communication.",
	"url": null,
	"owner": "Hughes Network Systems, Inc.",
	"publication_number": "07337233",
	"publication_date": "2008-02-26",
	"application_number": "10750356",
	"application_date": "2003-12-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for scaling a two-way satellite system",
	"summary": "",
	"abstract": "A two-way satellite communication system for providing a scalable architecture is disclosed. A plurality of transceivers transmit signals over a plurality of return channels, wherein the plurality of return channels are partitioned into a plurality of return channel groups. A hub communicates with the plurality of transceivers via the plurality of return channel groups. The hub is connected to a packet switched network. Each of the plurality of transceivers performs a random weighted selection of a return channel group among the plurality of return channel groups.",
	"url": null,
	"owner": "Hughes Network Systems, LLC",
	"publication_number": "07463582",
	"publication_date": "2008-12-09",
	"application_number": "09789079",
	"application_date": "2001-02-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Actuation system for an agent oriented architecture",
	"summary": "",
	"abstract": "Roughly described, the invention addresses the above problems by separating an actuation subsystem from the natural language interpretation system. The NLI develops u201cinterpretation result commandsu201d in response to user input, and transmits them to the actuation subsystem using a predefined interpretation result command format that is independent of the requirements of the particular back-end application. The actuation subsystem, which is the only component that is specific to the back-end application, converts the interpretation result command into one or more u201capplication commandsu201d and communicates it (them) to the back-end application in the form required by the specific back-end application. In some embodiments the actuation subsystem also can take results from a back-end application in application-dependent form, and convert it to a common predefined internal format that is application-independent.",
	"url": null,
	"owner": "Ianywhere Solutions, Inc.",
	"publication_number": "07353176",
	"publication_date": "2008-04-01",
	"application_number": "10327440",
	"application_date": "2002-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method, and computer program product for placement of channels on a mobile device",
	"summary": "",
	"abstract": "The invention includes systems, methods, computer program products, and combinations and sub-combinations thereof for enabling channels specific to a user's interest (as well as other objects) to be loaded on mobile devices (as well as other types of devices), and for users of mobile devices to operate with such channels on their mobile devices in an interactive manner while in an off-line mode.",
	"url": null,
	"owner": "iAnywhere Solutions, Inc.",
	"publication_number": "07392308",
	"publication_date": "2008-06-24",
	"application_number": "09864292",
	"application_date": "2001-05-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for facilitating access by sellers to certificate-related and other services",
	"summary": "",
	"abstract": "A system and method are disclosed for facilitating access to a plurality of certificate-related and other services including certificate validation. A seller is provided with digital signature messaging software for accessing these services. Two preferred implementations are disclosed for integrating a seller's existing Web server and applications with this software. The first preferred implementation is referred to as u201cpassive integrationu201d because it requires little or no modification to a seller's existing e-commerce Web application. In this first implementation, the seller's Web site is preferably provided with five additional components: a Web filter for redirecting HTTP requests, a second Web server for parsing the redirected HTTP requests, a servlet that runs applications based on the requested URL, a filter engine that identifies pages from a buyer that require the buyer's signature as well as pages that require access to system services, and a bank interface that receives requests to access system services from the filter engine, and processes those requests. The second preferred implementation is referred to as u201cactive integrationu201d because it requires the seller to rewrite code of its Web applications to provide the functionality necessary to access system services. In active integration, the seller's Web site is preferably provided with the bank interface described above but the functionality provided by the other digital signature messaging software components is instead provided by modifying directly the seller's Web application.",
	"url": null,
	"owner": "Identrus",
	"publication_number": "07424616",
	"publication_date": "2008-09-09",
	"application_number": "09657604",
	"application_date": "2000-09-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computerized gaming system, method and apparatus",
	"summary": "",
	"abstract": "The present invention in various embodiments provides a computerized wagering game method and apparatus that features an operating system kernel, a system handler application that loads and executes gaming program shared objects and features nonvolatile storage that facilitates sharing of information between gaming program objects. The system handler of some embodiments further provides an API library of functions callable from the gaming program objects, and facilitates the use of callback functions on change of data stored in nonvolatile storage. The nonvolatile storage also provides a nonvolatile record of the state of the computerized wagering game, providing protection against loss of the game state due to power loss. The system handler application in various embodiments includes a plurality of device handlers, providing an interface to selected hardware and the ability to monitor hardware-related events.",
	"url": null,
	"owner": "IGT",
	"publication_number": "07470182",
	"publication_date": "2008-12-30",
	"application_number": "10827042",
	"application_date": "2004-04-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Display list compression for a tiled 3-D rendering system",
	"summary": "",
	"abstract": "A 3-dimensional computer graphics rendering system receives object data for a scene to be rendered. This includes vertex data and index data. The scene is subdivided into priority of rectangular areas (). Object  of each rectangular area in the scene is assembled () and subsequently compressed (). This data can subsequently be retrieved and decompressed and used for producing a properly shaded and texted image for display.",
	"url": null,
	"owner": "Imagination Technologies Limited",
	"publication_number": "07324115",
	"publication_date": "2008-01-29",
	"application_number": "10860335",
	"application_date": "2004-06-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Controlling haptic sensations for vibrotactile feedback interface devices",
	"summary": "",
	"abstract": "Controlling haptic sensations from a vibrotactile feedback device connected to a computer. The vibrotactile device includes an actuator having a rotatable mass, and receives information, which causes a periodic control signal to be produced. The control signal controls the actuator to rotate the mass to induce a vibration in the device, where a magnitude and a frequency of the vibration can be adjusted independently of each other by adjusting the control signal. Vibration magnitude is based on control signal duty cycle, and vibration frequency is based on control signal frequency. Kinesthetic haptic effects can be output on the vibrotactile device by mapping the kinesthetic effect to a vibrotactile effect that causes vibrotactile forces to be output. The kinesthetic haptic effect can be a periodic or nonperiodic effect.",
	"url": null,
	"owner": "Immersion Corporation",
	"publication_number": "07446752",
	"publication_date": "2008-11-04",
	"application_number": "10671465",
	"application_date": "2003-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for protocol processing engine",
	"summary": "",
	"abstract": "A protocol processing engine system, which is arranged between a host side and a media access control (MAC) layer to thus speed up data transmission. The system includes a host interface, a network media access control (MAC) interface, a receiving subsystem and a transmitting subsystem. The system uses the host interface to interface with the host side and the network MAC interface to interface with the network MAC layer. The receiving subsystem classifies a connection received from the network MAC layer into a priority connection, fast connection or slow connection based on a pre-stored information, and activates its respective hardware circuit based on the connection classified in order to speed up data transmission of the connection. The transmitting subsystem transmits a connection received from the host interface to the network MAC interface.",
	"url": null,
	"owner": "Industrial Technology Research Institute",
	"publication_number": "07447230",
	"publication_date": "2008-11-04",
	"application_number": "11106624",
	"application_date": "2005-04-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Remote scoring and aggregating similarity search engine for use with relational databases",
	"summary": "",
	"abstract": "A system and method for defining a schema and sending a query to a similarity search engine to determine a quantitative assessment of the similarity of attributes between an anchor record and one or more target records. The similarity search engine makes a similarity assessment in a single pass through the target records having multiple relationship characteristics. The similarity search engine is a server configuration that communicates with one or more database management systems for providing data persistence, data retrieval and access to user defined functions. The architecture enables search activities to be segmented among multiple remote database management systems for reducing the time required to perform searches. Implementation provisions include a method by which a secure transport driver may be configured for a datasource and a method by which configuration files may be persisted to either filesystem storage or a relational database.",
	"url": null,
	"owner": "Infoglide Software Corporation",
	"publication_number": "07386554",
	"publication_date": "2008-06-10",
	"application_number": "10653690",
	"application_date": "2003-09-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Internet based telephone line",
	"summary": "",
	"abstract": "A telephone service method that provides subscribers with the functionality of an extra telephone line during data/Internet sessions. Each subscriber has a unique telephone number Dns that can be dialed by anyone with access to the PSTN. When the Dns is dialed the call will be routed via the PSTN to the ILTD server. The ILTD server upon receiving the call attempt from the Dnc will analyze the dialed number (Dns) and determine if the subscriber's computer is able to receive the telephone call. If the subscriber's computer is actively engaged in an Internet Protocol session, with the ILTD client software running, the ILTD server will connect the call over the Internet to the ILTD client software. The ILTD client software will activate the subscriber's sound card and the microphone to play audio and receive input from the microphone to allow the subscriber and the calling party to have a full duplex telephone conversation (i.e. using voice-over-IP technology).",
	"url": null,
	"owner": "InfoInteractive",
	"publication_number": "07408919",
	"publication_date": "2008-08-05",
	"application_number": "09567758",
	"application_date": "2000-05-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Bandwidth allocation method and apparatus",
	"summary": "",
	"abstract": "A satellite communications system provides a communications service to a mobile terminal on which different communications applications may be run. Calls are set up between any of the applications via a satellite to a network management centre which provides different service adaptors which adapt the calls to different types of service provided over terrestrial networks, such as telephony, facsimile, internet or ATM services. The bandwidth allocated to each call over the satellite link may be varied during the call according to demand either from the relevant application or from the network management centre. Multiple calls may be connected concurrently to or from different applications running on the mobile terminal. A maximum bandwidth is allocated to each call. Efficient use is thereby made of the limited bandwidth available over the satellite, according to the instantaneous bandwidth requirements of different applications. For real-time calls requiring multiple slots per frame in a TDMA channel, the slots are mutually spaced apart to reduce delay.",
	"url": null,
	"owner": "Inmarsat Global Limited",
	"publication_number": "07469141",
	"publication_date": "2008-12-23",
	"application_number": "10391598",
	"application_date": "2003-03-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Self-learning integrity management system and related methods",
	"summary": "",
	"abstract": "An integrity management system predicts abnormalities in complex systems before they occur based upon the prior history of abnormalities within the complex system. A topology of the nodes of a complex system is generated and data is collected from the system based on predetermined metrics. In combination with dynamic thresholding, fingerprints of the relevant nodes within a complex system at various time intervals prior to the occurrence of the abnormality are captured and weighted. The fingerprints can then be applied to real-time data provide alerts of potential abnormality prior to their actual occurrence.",
	"url": null,
	"owner": "Integrien Corporation",
	"publication_number": "07467067",
	"publication_date": "2008-12-16",
	"application_number": "11535818",
	"application_date": "2006-09-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for data transfer",
	"summary": "",
	"abstract": "A method including matching a data transmission characteristic of a first application on a first network device and of a second application on a second network device, requesting a prioritized data transfer between the first and second applications from a policy manager application, determining whether to approve the requested prioritized data transfer based upon a set of policy rules, and transferring data between the first and second application with preferential treatment.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07340531",
	"publication_date": "2008-03-04",
	"application_number": "10260230",
	"application_date": "2002-09-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for wireless/wired communications interface",
	"summary": "",
	"abstract": "An apparatus and method for wireless/wired Bluetoothu2122 communications interface are described. The method includes detection of a communications configuration of a device as one of a wireless communications interface and a wireless/wired communications interface. Once detected, it is determined whether a wired/wireless communications interface is the communications interface of the device. When such is the case, a data transmission error rate of the device is determined during operation of the device in a wireless communications mode. Next, the device is switched from the wireless communications mode to a wired communications mode when the data transmission error rate caused by wireless radio interference of the device exceeds a pre-determined threshold. As such, the present invention allows Bluetoothu2122 wireless communications devices to utilize a wired communications mode when transmission error rate exceeds a pre-determined threshold.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07336602",
	"publication_date": "2008-02-26",
	"application_number": "10060757",
	"application_date": "2002-01-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Applications of an appliance in a data center",
	"summary": "",
	"abstract": "In various embodiments, an appliance may be used to implement various functions. In some embodiments, an appliance may be used with a DBMS server. The appliance may generate a request, and the DBMS server may generate a result. The appliance may transform the result to a different format for return to a requestor corresponding to the request. In still other embodiments, the appliance may be used with a computer system configured to execute other backend applications such as content management systems, filesystems, etc. In other embodiments, the appliance may receive first output data from a first server of a plurality of servers that is to be supplied as first input data to a second server of the plurality of servers. The appliance may be configured to transform the first output data to a first markup language format and to transform the first markup language format to the second format.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07409400",
	"publication_date": "2008-08-05",
	"application_number": "10889626",
	"application_date": "2004-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Architecture and system for host management",
	"summary": "",
	"abstract": "According to some embodiments, a system provides a resource service module, a resource data record repository, and a provider module. The resource service module exposes an interface, receives an invocation of the interface from a system management module, and requests managed resource data associated with a manageable resource based on the invocation. The resource data record repository includes a resource data record indicating a memory location of a managed host in which the managed resource data is stored, and the provider module receives the request and retrieves the managed resource data from the memory location of the managed host.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07424711",
	"publication_date": "2008-09-09",
	"application_number": "11170491",
	"application_date": "2005-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Code interpretation using stack state information",
	"summary": "",
	"abstract": "Executing an instruction on an operand stack, including performing a stack-state aware translation of the instruction to threaded code to determine an operand stack state for the instruction, dispatching the instruction according to the operand stack state for the instruction, and executing the instruction.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07424596",
	"publication_date": "2008-09-09",
	"application_number": "10813599",
	"application_date": "2004-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Configuration proxy service for the extended firmware interface environment",
	"summary": "",
	"abstract": "A method of abstracting information through object interfaces is described. The object interfaces are used to present platform device information in a pre-boot service environment. Firmware tables such as Advanced Configuration and Power Interface and System Management Basic Input/Output System may be used to auto-configure diagnostic test suites through an abstracted software interface.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07421620",
	"publication_date": "2008-09-02",
	"application_number": "11101812",
	"application_date": "2005-04-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Device for structured data transformation",
	"summary": "",
	"abstract": "Numerous embodiments of structured data transformation are disclosed. Some embodiments include characterizing at least a portion of an expression in a stylesheet as evaluatable at a phase wherein the phase is one of a compile phase, a parse phase, or a transformation phase of applying the stylesheet to a document to transform the document in a document transformation appliance, applying at least a portion of the expression to the document in the phase determined in the characterizing, combining results from applying the at least a portion of the expression and from applying other expressions to the document to generate a transformed document, and outputting the transformed document or saving the transformed document to memory.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07328403",
	"publication_date": "2008-02-05",
	"application_number": "10889547",
	"application_date": "2004-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Expression grouping and evaluation",
	"summary": "",
	"abstract": "An apparatus comprises a stylesheet compiler and a document processor. The stylesheet compiler is configured to identify expressions in a stylesheet and is configured to generate one or more expression trees representing the expressions. Expressions having one or more common nodes are represented as children of a subtree that represents the common nodes. Coupled to receive a document and the expression tree, the document processor is configured to evaluate the expressions represented in the one or more expression trees against the document.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07437666",
	"publication_date": "2008-10-14",
	"application_number": "10889273",
	"application_date": "2004-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Firmware emulation environment for developing, debugging, and testing firmware components including option ROMs",
	"summary": "",
	"abstract": "A method and apparatus to execute a pre-boot application within an emulated pre-boot environment to test functionality of the pre-boot application. The emulated pre-boot environment is executed within a user mode of an operating system (u201cOSu201d) during an OS runtime of the processing system. The pre-boot application interacts with a hardware device of the processing system via a kernel proxy agent. The kernel proxy agent executes in a kernel mode of the OS.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07334120",
	"publication_date": "2008-02-19",
	"application_number": "10713720",
	"application_date": "2003-11-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hardware/software partition for high performance structured data transformation",
	"summary": "",
	"abstract": "An apparatus comprises a computer accessible medium encoded with a plurality of instructions which, when executed, compile a stylesheet into one or more data structures, and a hardware circuit coupled to receive the data structures and a document. The hardware circuit is configured to perform at least a portion of transforming the document as specified in the stylesheet using the data structures.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07458022",
	"publication_date": "2008-11-25",
	"application_number": "10889614",
	"application_date": "2004-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Host computer using basic input and output system to process control command received from a remote computer according to timer interrupts",
	"summary": "",
	"abstract": "A technique for providing communication between two computers through a network in a way to allow one computer to control the other.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07349991",
	"publication_date": "2008-03-25",
	"application_number": "11351934",
	"application_date": "2006-02-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mechanism to secure computer output from software attack using isolated execution",
	"summary": "",
	"abstract": "A method and platform for maintaining the security of output data in an isolated execution environment. A system memory has an isolated output area readable only by secure output controllers having an isolated execution mode. The output controllers may make a request for access to the isolated output area, upon proper authentication if the request access is granted. The output device may either DMA the content of the isolated output area to an output end point, such as a display, or load it into local storage, the security of which is guaranteed by the controller.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07389427",
	"publication_date": "2008-06-17",
	"application_number": "09672367",
	"application_date": "2000-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for handling data transfers",
	"summary": "",
	"abstract": "Embodiments of the present invention provide for implementation of data transfers in an efficient manner. The 48-bit LBA mechanism requires two sets of I/O writes to IDE registers on primary channel or secondary channel. The two sets of I/O writes to the primary or secondary channel registers are performed by setting a status register to a first or second state appropriately depending on the data. Embodiments of the present invention provide a single set of writes to I/O registers when the size of the data transfer is equal to or below a threshold value.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07437503",
	"publication_date": "2008-10-14",
	"application_number": "11114600",
	"application_date": "2005-04-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for programming a functionality of an integrated circuit (IC)",
	"summary": "",
	"abstract": "Method and apparatus for remotely programming a functionality of an integrated circuit (IC) are described herein. In one aspect, exemplary method includes receiving a command for enabling a functionality of an integrated circuit (IC) from a remote facility over a network, and enabling the functionality of the IC in response to the command. Other methods and apparatuses are also described.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07324450",
	"publication_date": "2008-01-29",
	"application_number": "10404784",
	"application_date": "2003-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus to protect nonvolatile memory from viruses",
	"summary": "",
	"abstract": "An apparatus, system, method, and article for protecting nonvolatile memory from viruses are described. The apparatus may include a nonvolatile memory comprising one or more protected storage areas. The nonvolatile memory may be arranged to transform buffered information to be programmed in the protected areas and to program transformed information in the protected storage areas. Other embodiments are described and claimed.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07411821",
	"publication_date": "2008-08-12",
	"application_number": "11390948",
	"application_date": "2006-03-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, apparatus and system for optimizing routing of mobile IP packets",
	"summary": "",
	"abstract": "Network devices on mobile networks may be configured to improve and optimize packet processing and routing. Specifically, a home agent device may be decomposed into its major functionality, namely processing and routing. Various processors on the device are assigned to specific tasks and each processor may be optimized for its specific tasks, thus improving packet processing and routing. The home agent device may comprise one or more physical components.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07342916",
	"publication_date": "2008-03-11",
	"application_number": "10660284",
	"application_date": "2003-09-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, apparatus and system for reverting FAT cluster number to file ID and offset of non-FAT flash file system",
	"summary": "",
	"abstract": "A device includes a processor connected to a memory. The device further includes a module having a process. The module is integrated in a Multimedia File Manager (MFM). The process operates to allow an external computer access to MFM volumes in the memory. A method includes reverting a file allocating table (FAT) cluster number to a file ID and file offset of a non-FAT flash memory file system.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07426606",
	"publication_date": "2008-09-16",
	"application_number": "11395124",
	"application_date": "2006-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatuses for route management on a networking control plane",
	"summary": "",
	"abstract": "An open networking routing system includes at least one forwarding element, and a control element communicatively coupled to the forwarding element(s). In one embodiment, the control element is equipped with a route cache manager to receive notification of a routing table update in the control element, and facilitate notification of the routing table update to at least one functional component within the control element and forwarding element(s) in a coordinated manner to maintain routing coherency between the control element and forwarding element(s).",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07388840",
	"publication_date": "2008-06-17",
	"application_number": "10610858",
	"application_date": "2003-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods, systems, and data structures for generating a rasterizer",
	"summary": "",
	"abstract": "Methods, systems and data structures produce a rasterizer. A graphical state is detected on a machine architecture. The graphical state is used for assembling a shell rasterizer. The machine architecture is used for selecting replacement logic that replaces portions of shell logic in the shell rasterizer. The machine architecture is used for selectively inserting memory management logic into portions of the shell logic to produce.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07453466",
	"publication_date": "2008-11-18",
	"application_number": "11229276",
	"application_date": "2005-09-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network-like communication and stack synchronization for different virtual machines on the same physical device",
	"summary": "",
	"abstract": "Embodiments include methods, apparatuses, articles, and systems having a plurality of agents of a plurality of virtual machines of a physical device. In various embodiments, first and second agents of first and second virtual machines are adapted to cooperate to ensure that a port of the physical device is listened to by only a first application of the first virtual machine and by the second agent of the second virtual machine. Also, the first and second agents are further adapted to cooperate to facilitate the first application and a second application of the second virtual machine in communicating with each other in a network-like manner.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07346909",
	"publication_date": "2008-03-18",
	"application_number": "11511695",
	"application_date": "2006-08-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Perceptually based display",
	"summary": "",
	"abstract": "A display technique determines the desired size of an object to be displayed (using a distance dependent measure such as visual arc angle), determines the distance between the display unit and a user, and adjusts the size of the displayed object based on the desired size and measured distance. By repeatably determining the distance between the user and display unit, each displayed object may be dynamically adjusted to maintain an approximately constant size display, from the users point of view. The display technique may be implemented in hardware, software, or a combination of hardware and software. One benefit of the display technique is that eye strain can be reduced while working at a computer display unit.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07345684",
	"publication_date": "2008-03-18",
	"application_number": "10927719",
	"application_date": "2004-08-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Predictive processor speed governor",
	"summary": "",
	"abstract": "A processor-based system accessing a performance profile for a program executing on a predetermined data set, executing the program on the predetermined data set, and governing processor speed in a predictive manner based at least in part on the performance profile.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07334145",
	"publication_date": "2008-02-19",
	"application_number": "10862980",
	"application_date": "2004-06-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Predictive provisioning of media resources",
	"summary": "",
	"abstract": "An apparatus and method are provided for predictive provisioning of functional packages based on offered traffic and a predictive model of the offered traffic. According to one embodiment of the invention, a managed agent provides predictions regarding an anticipated need for functional package provisioning based on traffic offered to the managed agent and a predictive model of offered traffic. A provisioning agent receives the predictions and in response to the predictions instructs the managed agent to provision a new functional package. According to another embodiment of the invention, the provisioning agent instructs a second managed agent to provision the media resource needed by the original managed agent. The traffic is then routed from the original man aged agent to the second managed agent.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07451207",
	"publication_date": "2008-11-11",
	"application_number": "10186878",
	"application_date": "2002-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Protecting software environment in isolated execution",
	"summary": "",
	"abstract": "A processing system has a processor that can operate in a normal ring  operating mode and one or more higher ring operating modes above the normal ring  operating mode. In addition, the processor can operate in an isolated execution mode. A memory in the processing system may include an ordinary memory area that can be accessed from the normal ring  operating mode, as well as an isolated memory area that can be accessed from the isolated execution mode but not from the normal ring  operating mode. The processing system may also include an operating system (OS) nub, as well as a key generator. The key generator may generate an OS nub key (OSNK) based at least in part on an identification of the OS nub and a master binding key (BK) of the platform. Other embodiments are described and claimed.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07380278",
	"publication_date": "2008-05-27",
	"application_number": "11386269",
	"application_date": "2006-03-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Real-time scheduling of virtual machines",
	"summary": "",
	"abstract": "A method for scheduling a plurality of virtual machines includes: determining a resource requirement (X) for each virtual machine (VM); determining an interrupt period (Y) for each VM; and scheduling the plurality of VMs based, at least in part, on each respective Xand Y.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07356817",
	"publication_date": "2008-04-08",
	"application_number": "09541444",
	"application_date": "2000-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Services processor having a packet editing unit",
	"summary": "",
	"abstract": "A services processor includes an editing unit, which performs various functions for editing data packets, such as packet creation, packet encapsulation, and packet replication.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07333484",
	"publication_date": "2008-02-19",
	"application_number": "10359042",
	"application_date": "2003-02-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for adaptive power management",
	"summary": "",
	"abstract": "A disclosed method involves initializing a performance profiler of a processing system. The performance profiler may include performance profile parameters for a power management policy for the processing system. The method also involves retrieving performance metrics for the processing system from a performance monitoring unit (PMU) of the processing system, in response to a determination that performance details should be collected. A current performance state of the processing system may be determined, based at least in part on the performance profile parameters and the performance metrics from the PMU. The current performance state may then be communicated to a policy manager of the processing system. Other embodiments are disclosed and claimed.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07346787",
	"publication_date": "2008-03-18",
	"application_number": "11006917",
	"application_date": "2004-12-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for efficient processing of XML documents represented as an event stream",
	"summary": "",
	"abstract": "forming the operation codes and information items into a sequence of contiguous bytes suitable for transfer from the source to the destination, said byte sequence not depending upon any memory address assigned to the byte sequence.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07356764",
	"publication_date": "2008-04-08",
	"application_number": "10422597",
	"application_date": "2003-04-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method of annotating network packets",
	"summary": "",
	"abstract": "A system and method of transmitting network packets between network processing elements through links are disclosed. One or more configuration entities may allocate one or more fixed length slots to be appended to network packets forwarded on a link between network processing elements in-band of the link.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07415024",
	"publication_date": "2008-08-19",
	"application_number": "10133125",
	"application_date": "2002-04-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method to exchange information between a control element and forwarding elements in a network element architecture",
	"summary": "",
	"abstract": "A network element comprises a control element (CE), a plurality of forwarding element (FEs) and an interconnect in communication with said CE and at least one of said FEs. Communication across the interconnect between the CE and the plurality of FEs is done in accordance with a protocol that includes a binding phase used to provide a data channel between the CE and a first one of the FEs. The binding phase is further used to provide a control channel between the CE and the first one of the FEs, the control channel used to transport control and configuration messages. The control channel is separate from the data channel. The protocol also includes a capability discovery phase, a configuration operation phase and an unbind phase executed between the CE and the FE.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07428219",
	"publication_date": "2008-09-23",
	"application_number": "10789402",
	"application_date": "2004-02-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System development tool",
	"summary": "",
	"abstract": "According to some embodiments, execution information is received from a first development tool. Execution information is also received from a second development tool. Based on the first execution information and the second execution information, operation of the first development tool may be controlled. According to some embodiments, the first and second development tools are associated with different processor architectures.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07380168",
	"publication_date": "2008-05-27",
	"application_number": "11171762",
	"application_date": "2005-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Table driven programming system for a services processor",
	"summary": "",
	"abstract": "The invention provides apparati and methods for processing a packet. The processing is done according to a table and context based scheme.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07333490",
	"publication_date": "2008-02-19",
	"application_number": "10359041",
	"application_date": "2003-02-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Techniques to provide information validation and transfer",
	"summary": "",
	"abstract": "Techniques to issue a single application programming interface (API) to request both data copy and CRC validation operations. In some embodiments, a receiver of the API may observe which logic (e.g., software or hardware and/or combinations of software and hardware) is available to execute instructions for data copy and CRC validation operations.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07454667",
	"publication_date": "2008-11-18",
	"application_number": "11115656",
	"application_date": "2005-04-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transferring multiple data units over a wireless communication link",
	"summary": "",
	"abstract": "A wireless communication system may include a first transceiver that may concurrently keep at least two data units, such as payloads of data pending for transfer to a second transceiver (e.g., a targeted wireless communication device) over a communication link (e.g., a short-range radio link) on a communication channel. To wirelessly communicate with one or more networked wireless communication devices or systems, in one embodiment, the first transceiver is located in a device that may use a local link control and adaptation protocol capable of non-blocking data transfer operations. In one embodiment, pending multiple, data units are buffered to participate in a data streaming session. The transfer of the data units may be monitored to determine whether or not a data transfer operation was successful during the data streaming session. When the protocol learns that during the data streaming session a problem occurred with a data unit that was pending, the problem may be reported via an event instead of waiting for feedback to arrive from the targeted wireless communication device.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07376435",
	"publication_date": "2008-05-20",
	"application_number": "10113039",
	"application_date": "2002-04-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Speech recognition system and method",
	"summary": "",
	"abstract": "A computer system and method is disclosed that includes a telephony server that receives a spoken dialing command, sends the command to a speech recognition server, and dials a command based on the result. A computer system and method is disclosed that improves audio message delivery reliability. A computer system and method is disclosed that improves audio message manipulation. A computer system and method is disclosed that manages memory when audio messages are received. A system and method is disclosed that supports multiple speech recognition engines.",
	"url": null,
	"owner": "Interactive Intelligence, Inc.",
	"publication_number": "07363228",
	"publication_date": "2008-04-22",
	"application_number": "10666956",
	"application_date": "2003-09-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Route optimization technique for mobile IP",
	"summary": "",
	"abstract": "The present invention relates to mobile data communications in general, and more specifically, the present invention describes a route optimization technique requiring no awareness of the Mobile IP protocol by a Correspondent Node when forwarding traffic using the shortest path between a Mobile Node and the Correspondent Node in a visiting domain. The invention describes the management of route entries, network address translations and firewall filters in order to provide a secure, yet, flexible deployment of Mobile IP route optimization. Specific considerations are described for the case of separate Foreign Agent and co-located care-of address respectively.",
	"url": null,
	"owner": "Interactive People Unplugged AB",
	"publication_number": "07333482",
	"publication_date": "2008-02-19",
	"application_number": "09742443",
	"application_date": "2000-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for routing call agents to website customers based on customer activities",
	"summary": "",
	"abstract": "A system for allowing call center agents to initiate text chat, audio and/or video communication, as well as collaborative browsing with potential customers visiting web pages includes a customer monitoring applet that monitors the behavior of the customer via the web browser and sends information to a router process, the information including information identifying the customer, the web page location, status of a transaction, etc. The router process uses the information supplied to it from the customer monitoring applet, as well as information on one or more available agent processes to determine which call agent would be appropriate to initiate contact with the potential customer. The router process transmits the information identifying the customer to the selected agent process for presentation to the agent. The agent can monitor the status of the customer, as well as other customers, and send a request to initiate communication, if appropriate. The router process uses a customer status database and an agent status database to determine which agent is appropriate for a particular customer.",
	"url": null,
	"owner": "International Buisness Machines Corporation",
	"publication_number": "07330873",
	"publication_date": "2008-02-12",
	"application_number": "10226425",
	"application_date": "2002-08-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Accessing a ERP application over the internet using strongly typed declarative language files",
	"summary": "",
	"abstract": "A method of converting ERP data in a database managed by an ERP application and accessed through an ERP API and ERP Message Agent API (MAAPI) to strongly typed data in Java objects includes steps of reading, parsing, creating, and populating. A XML file containing the definition of the Java objects and their attributes or HyperText Markup Language (HTML) statements which specifies presentation format is read. Each of the declarations and HTML statements are parsed to identify definitions of objects and their attributes. The respective objects are created with their attributes. The objects are populated with data from the ERP data.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07444643",
	"publication_date": "2008-10-28",
	"application_number": "10719461",
	"application_date": "2003-11-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Administering devices in dependence upon user metric vectors including generic metric spaces",
	"summary": "",
	"abstract": "Methods for administering devices including creating a user metric vector including a plurality of disparate user metrics, selecting a generic metric space including a plurality of generic metric ranges, and determining whether the user metric vector is outside the generic metric space. Embodiments include identifying an action and executing the identified action, if the user metric vector is outside the generic metric space.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07464062",
	"publication_date": "2008-12-09",
	"application_number": "10607461",
	"application_date": "2003-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Administering devices in dependence upon user metric vectors with multiple users",
	"summary": "",
	"abstract": "Methods for administering devices, including creating a user metric vector including a plurality of disparate user metrics, creating a user metric space including a plurality of metric ranges, determining whether the user metric vector is outside the user metric space, creating, in dependence upon the user metric vector, a dynamic action list, if the user metric vector is outside a user metric space, identifying at least one action in the dynamic action list, and executing the action.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07386863",
	"publication_date": "2008-06-10",
	"application_number": "10607485",
	"application_date": "2003-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Administering devices including allowed action lists",
	"summary": "",
	"abstract": "Exemplary embodiments of the present invention include a method for administering devices in a network. The method includes creating a user metric vector comprising a plurality of disparate user metrics, creating a user metric space comprising a plurality of metric ranges and determining whether the user metric vector is outside the user metric space. If the user metric vector is outside a user metric space, identifying an action in dependence upon the user metric vector the method includes determining whether the action is allowed. If the action is allowed, the method includes executing the action. Many embodiments include receiving an allowed action list, such as for example, receiving an allowed action list from a moderator DML.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07461143",
	"publication_date": "2008-12-02",
	"application_number": "10692414",
	"application_date": "2003-10-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Administering devices with domain state objects",
	"summary": "",
	"abstract": "Exemplary embodiments of the present invention include a method for administering devices. Such exemplary embodiments include receiving a domain state object, identifying an action in dependence upon the domain state object, and executing the action. In many exemplary embodiments, receiving a domain state object includes receiving a signal to download the domain state object from a mobile sensor, and downloading the domain state object from the mobile sensor.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07437443",
	"publication_date": "2008-10-14",
	"application_number": "10612702",
	"application_date": "2003-07-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Allowing client applications to programmatically access web sites",
	"summary": "",
	"abstract": "A method for creating a web service to programmatically access a network addressable location via an intermediate gateway includes analyzing a network at the location; generating, at the gateway, a service description file and an executable code for the network page; translating the service description file into a standard Web service format; deploying the service to the gateway, making the service available to a client application; providing a runtime process to enable the client application to automatically make a programmatic request of the location; translating the structure of the request to a syntax of location using SOAP; submitting the request to the location which executes the submitted request to obtain a response; translating the response to extract data satisfying the request; wrapping the extracted data in a SOAP envelope; translating the wrapped response to a host data structure of the client application; and compiling the executable code.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07467391",
	"publication_date": "2008-12-16",
	"application_number": "10284918",
	"application_date": "2002-10-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for maintaining resource integrity without a unified transaction manager in a software environment",
	"summary": "",
	"abstract": "An apparatus and method for maintaining integrity of data in a software environment are provided. With the apparatus and method, the individual software resources associated with a transaction are identified and the processing of these resources is started. As the processing of these resources terminates, their associated APIs return messages indicating either that the software resource committed or was unable to commit and the reason why the software resource was unable to commit. Based on this reason, appropriate error resolution and recovery operations are performed and the transaction is resubmitted only to those software resources that were unable to commit. The software resources that already committed have their states maintained. In this way, roll back of committed software resources is avoided.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07346905",
	"publication_date": "2008-03-18",
	"application_number": "10457843",
	"application_date": "2003-06-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus for maintaining resource integrity without a unified transaction manager in a software environment",
	"summary": "",
	"abstract": "An apparatus and method for maintaining integrity of data in a software environment are provided. With the apparatus and method, the individual software resources associated with a transaction are identified and the processing of these resources is started. As the processing of these resources terminates, their associated APIs return messages indicating either that the software resource committed or was unable to commit and the reason why the software resource was unable to commit. Based on this reason, appropriate error resolution and recovery operations are performed and the transaction is resubmitted only to those software resources that were unable to commit. The software resources that already committed have their states maintained. In this way, roll back of committed software resources is avoided.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07448035",
	"publication_date": "2008-11-04",
	"application_number": "11966614",
	"application_date": "2007-12-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus, and system, for efficient and reliable computation of results for mathematical functions",
	"summary": "",
	"abstract": "An apparatus and system are provided for efficient computation of reliable results for mathematical functions. The apparatus may include an interface, a control module, and an error module. The interface receives a mathematical function call. The call includes a plurality of arguments for which a range of computable results for the mathematical function varies with respect to the values for the arguments. The control module determines whether executing the mathematical function using the plurality of arguments will produce a result within the range of computable results. The error module aborts the mathematical function call prior to initiating execution of the mathematical function in response to determining that the values for the plurality of arguments produce a result outside the range of computable results.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07454455",
	"publication_date": "2008-11-18",
	"application_number": "10862559",
	"application_date": "2004-06-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application connector parallelism in enterprise application integration systems",
	"summary": "",
	"abstract": "A system and method for responding to requests for processing made by an integration broker to an application having a single threaded application programmer interface, comprising receiving a request for processing; determining whether the received request is event-triggered or call-triggered; sending the request to a slave process assigned to event-triggered requests, when the request is event-triggered; and sending the request to a slave process assigned to call-triggered requests, when the request is call-triggered.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07386857",
	"publication_date": "2008-06-10",
	"application_number": "10245131",
	"application_date": "2002-09-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Asynchronous symmetric multiprocessing",
	"summary": "",
	"abstract": "An apparatus for serializing concurrent requests to multiple processors includes a signal merging tree structure and a traversal mechanism. The tree structure has a root node and leaf nodes for connecting a data consumer to the root. The tree structure serializes concurrent requests in the presence of race conditions, and connects each request producer from among the processors to a respective leaf node. The mechanism enables a producer to transmit a signal from a corresponding leaf node to the consumer at the root node by setting all nodes on a path from the leaf node to the root node to a Boolean true. The mechanism enables the consumer to trace signal submissions of the producers such that submission traversals by the producers and trace traversals by the consumer can be concurrently performed to allow data races between signal submissions by producers and between signal submissions by producers and the consumer.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07318126",
	"publication_date": "2008-01-08",
	"application_number": "11103156",
	"application_date": "2005-04-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Cache for an enterprise software system",
	"summary": "",
	"abstract": "Techniques are described for caching data from a software system, such as an enterprise software system. The techniques may be applied to a computing device connected to the software system via a network. In one example, the cache comprises an elegant, file-based cache that includes an object store that stores the cached data and an allocation table that manages allocation of space in the object store. The caching techniques provide a robust storage system which preserves a previous copy of the allocation table while updating the current table. Moreover, cache management techniques are described that utilize an automatic collapse to keep cache file sizes to a minimum. When multiple software applications are executing on the computing device, the techniques allow concurrent access to the cache by the multiple software applications while maintaining the integrity of the stored data.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07418567",
	"publication_date": "2008-08-26",
	"application_number": "10999369",
	"application_date": "2004-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Calendar bar interface for electronic mail interaction",
	"summary": "",
	"abstract": "A calendar bar utility with a special user interface may be integrated and displayed simultaneously with an electronic mail list inbox. The calendar bar user interface comprises a linear display arranged into multiple, chronologically-arranged, time periods. Upon selection of a specific time period, such as a day, or the current day, subdivisions of the time period, e.g. hours of a day, are displayed in a similar format. The calendar bar also allows multiple calendars, for example the personal calendar of the user, and a team calendar for multiple individuals, to be displayed simultaneously for easy access. Selection of a specific time period causes data associated with any event in that time period to be displayed next to the designated time period, or, alternatively, in a separate window. The data associated with the event may vary in detail and scope depending on the designer preferences, but will typically include the start and end times, the location, topic, type, i.e. call-in, video conference, etc., the participants, relevant telephone numbers, network addresses, electronic mail content and/or threads or summaries thereof and references to any relevant data and materials.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07363590",
	"publication_date": "2008-04-22",
	"application_number": "10331057",
	"application_date": "2002-12-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Canceling window close commands",
	"summary": "",
	"abstract": "A method, apparatus, system, and signal-bearing medium that, in an embodiment, receive a close command directed to a window, and determine whether the close command was received within a close threshold time of the display of the window. If the close command was received within the threshold time, in various embodiments, a close dialog is displayed, the window is faded, the window is shrunk, or a status message is displayed indicating that the window is closing. If a cancel command is received within a cancel-close threshold, the closing of the window is canceled. If the number of times the cancel command has been received for the window exceeds a cancel threshold, then in various embodiments, the close threshold is increased, magnification is recommended, a sound option is recommended, or speech recognition is recommended. In an embodiment, in response to a close command directed to a window, a determination is made whether the number of times the window has been resized is greater than a resize threshold. If the window has been resized greater than the resize threshold, in various embodiments, the cancel dialog is displayed, the window is faded, the window is shrunk, or a status message is displayed indicating that the window is closing. In another embodiment, if input to a window has been received within an input threshold time since the window was opened, then a confirmation message is displayed.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07464341",
	"publication_date": "2008-12-09",
	"application_number": "11171774",
	"application_date": "2005-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Change log handler for synchronizing data sources",
	"summary": "",
	"abstract": "The present invention provides a change log handler than can accommodate a change log having an entry that includes more than one modification operation or multi-valued attributes. The change log handler typically includes a change parser for parsing change attributes corresponding to the change log that identify changes to the first data source. Such changes can include a plurality of modification operations as reflected in a single entry of the change log. The change log handler also includes a change reflector for applying the changes to a second data source.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07363327",
	"publication_date": "2008-04-22",
	"application_number": "10857405",
	"application_date": "2004-05-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Checkpoint/resume/restart safe methods in a data processing system to establish, to restore and to release shared memory regions",
	"summary": "",
	"abstract": "A method is provided in which checkpointing operations are carried out in data processing systems running multiple processes which employ shared memory in a manner which preserves data coherence and integrity but which places no timing restrictions or constraints which require coordination of checkpointing operations. Data structures within local process memory and within shared memory provide the checkpoint operation with application level information concerning shared memory resources specific to at least two processes being checkpointed. Methods are provided for establishing, restoring and releasing shared memory regions that are accessed by multiple cooperating processes.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07376860",
	"publication_date": "2008-05-20",
	"application_number": "11013642",
	"application_date": "2004-12-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Client device configuration with configuration services providers",
	"summary": "",
	"abstract": "Configuring a client device, including receiving, from a manufacturer, a configuration bundle for a client device, receiving, from a vendor, vendor provided configuration parameters for the client device, receiving from a user, user provided configuration parameters for the client device, and associating the vendor provided configuration parameters and the user provided configuration parameters with the configuration bundle for the client device; thereby producing an associated configuration bundle for the client device.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07437432",
	"publication_date": "2008-10-14",
	"application_number": "10317994",
	"application_date": "2002-12-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Client device configuration with hooks",
	"summary": "",
	"abstract": "Configuring a client device including associating a hook in a configuration bundle with customized programming, downloading the configuration bundle for a client device to a services gateway, and executing the configuration bundle on the services gateway, including calling the hook.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07398305",
	"publication_date": "2008-07-08",
	"application_number": "10361198",
	"application_date": "2003-02-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Common interface to access catalog information from heterogeneous databases",
	"summary": "",
	"abstract": "Various embodiments of a method to access metadata from a plurality of data servers from a federated database management system are provided. In one embodiment, a request for metadata, from a client application, is received by the federated database management system. Data servers which are accessible from the federated database management system are identified. For each data server, metadata describing data of a data source of that data server is retrieved in accordance with the application request. The retrieved metadata from each of the data servers is aggregated to produce an aggregated result in a uniform format. The aggregated result is provided. In another embodiment, for each data server, a source metadata request for metadata of that data server is generated in accordance with the application request and a source metadata application programming interface. A view is created based on the source metadata request for metadata for each data server.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07469248",
	"publication_date": "2008-12-23",
	"application_number": "11131792",
	"application_date": "2005-05-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Communication endpoint supporting multiple provider models",
	"summary": "",
	"abstract": "A method for communication includes receiving a request from a first party, submitted via a first communication service provider to a telephony application, to place a call using the application to a second party. Responsive to a characteristic of the call placed by the first party, a second communication service provider is selected to carry the call between the application and the second party. The second party is then connected via the second communication service provider to communicate with the first party using the application.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07454505",
	"publication_date": "2008-11-18",
	"application_number": "10053872",
	"application_date": "2002-01-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer implemented method for automatically controlling selection of a grid provider for a grid job",
	"summary": "",
	"abstract": "A user at a grid client enters at least one bid criteria for a particular grid job intended for submission to an external grid environment. The grid client automatically selects at least one grid provider for the external grid environment to query for availability to process the particular grid job to meet the criteria for the particular grid job. The grid client automatically distributes the criteria in a bid request for the particular grid job to the selected grid providers. The grid client stores bid responses received from the grid providers, and responsive to reaching a deadline for return of responses for the bid request, the grid client selects a winning bid response from the particular grid job from among the received responses. The grid client automatically distributes the particular grid job from the grid client system to the grid provider submitting the winning bid response.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07472079",
	"publication_date": "2008-12-30",
	"application_number": "11034335",
	"application_date": "2005-01-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Consistent snapshots of dynamic heterogeneously managed data",
	"summary": "",
	"abstract": "A system and method for providing a consistent view of data stored therein, which can change dynamically in an uncoordinated way, includes a client program and a snapshot server program. The snapshot server program permits one or more client programs to request snapshots of data from the snapshot server program such that the data included in or referenced by a snapshot originates from one or more host server programs and the data is accessible to the snapshot server program, but is managed independently of the snapshot server program.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07392324",
	"publication_date": "2008-06-24",
	"application_number": "10918070",
	"application_date": "2004-08-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Container manifest integrity maintenance system and method",
	"summary": "",
	"abstract": "A system, method, and medium for tracking the contents of a container in which the items stored in the container are provided with radio frequency identification (u201cRFIDu201d) tags, and a tracker affixed to the container periodically polls the items in the container to collect identification information. An electronic manifest, also attached to the container, is updated periodically to reflect items which have been added to the container or removed from the container since the last polling. The tracker emulates an RFID tag when polled by an external reader, responding by uploading the entire electronic manifest to the external reader. The external reader and the affixed reader preferably utilize distinct RFID protocols so as to produce a hierarchical manifest data structure with high integrity.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07385510",
	"publication_date": "2008-06-10",
	"application_number": "11427969",
	"application_date": "2006-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Controlling a GUI display for a plug-in",
	"summary": "",
	"abstract": "Methods, systems, and computer program products are provided for controlling a GUI display for a plug-in in an application supporting plug-ins. Embodiments include receiving, at run time, in the application from the plug-in a request to display a GUI object; responsive to the request, retrieving an XML representation of the GUI object; and displaying the GUI object in dependence upon the retrieved XML representation of the GUI object. Typical embodiments also include receiving from the plug-in a request to retrieve user input responsive to the GUI object; and returning to the plug-in responsive user input.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07426713",
	"publication_date": "2008-09-16",
	"application_number": "10815214",
	"application_date": "2004-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Cooperatively multitasking in an interrupt free computing environment",
	"summary": "",
	"abstract": "Multitasking in a hardware interrupt free environment. Event indicators are employed to multitask between processes of the environment. Processes to be multitasked register with one another, and then during processing, one of the processes toggles an event indicator to allow another process to execute. The toggling allows the processes to share resources in an interrupt free environment.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07340740",
	"publication_date": "2008-03-04",
	"application_number": "10421978",
	"application_date": "2003-04-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data gather scatteru2014redistribution machine",
	"summary": "",
	"abstract": "A method, system, and computer program product to transfer data between two application data structures by copying a data gather scatter program (DGSP) from an exporting process address space where a first data structure is located, to a location in shared memory visible to an importing process address space; assembling a parameter set identifying the data structure; starting a data gather scatter-redistribution machine (DGS-RM) in an importing process space where a second application data structure is located; passing the first parameter set, the DGSP copy, and a second parameter set identifying a second application data structure and a second DGSP to the DGS-RM; and creating master and worker stack machines. The master stack machine identifies a contiguous chunk of the first data structure. The worker stack machine identifies contiguous chunks of the second data structure representing the same number of bytes as the contiguous chunk of the first data structure and transferring to (from) one or more identified chunks of the second data structure from (to) the single chunk of the first application data structure.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07392256",
	"publication_date": "2008-06-24",
	"application_number": "10963091",
	"application_date": "2004-10-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data loading from a remote data source record by record",
	"summary": "",
	"abstract": "A method, apparatus and article of manufacture is provided for loading data from a remote data source record by record, in a computer system network connecting a source site and a target site via a database connection communication line. The source site has at least one data source and a Distributed Relational Database Architecture (DRDA) software server having multi-database access to DBMSs. The target site requests data loading from the source site DRDA via a block of Structured Query Language (SQL) statements. Data are transported record by record via the database connection communication line according to the DRDA communication protocol, wherein the target site loads records concurrently with the unloading of records in the source site. The data loading may also be performed in a pipeline manner, loading data records in multiple partitions with a plurality of parallel streams, pointed to by a plurality of data source partition cursors.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07418441",
	"publication_date": "2008-08-26",
	"application_number": "09912586",
	"application_date": "2001-07-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Discovering object definition information in an integrated application environment",
	"summary": "",
	"abstract": "Provided is a method, system, and program for providing an object discovery agent (ODA) client. There is one object discovery agent (ODA) client and at least one ODA, wherein each ODA is associated with one application and includes: (i) application programming interfaces (APIs) to communicate with the associated application to discover definition information on objects maintained by the application and (ii) code to communicate with the ODA client. The ODA client communicates with one of the at least one ODA to cause the ODA to gather definition information on at least one object used by one application. The gathered object definition information is provided to an integration server to integrate the object in an environment including heterogeneous objects from different applications.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07406474",
	"publication_date": "2008-07-29",
	"application_number": "11008306",
	"application_date": "2004-12-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Document analysis and retrieval",
	"summary": "",
	"abstract": "A method and system for document analysis and retrieval. A document that includes text is received from a host. Document keys (i.e., keywords and keyphrases) associated with the text are generated. In first embodiments, a document taxonomy is provided. The taxonomy has categories and associated category keys (i.e., keywords and keyphrases). The category keys of each category are compared with the document keys to determine a distance between the document and each category as a measure of how close the document is to each category. A subset of the categories is returned to the host, wherein the subset of the categories reflects the determined distances. In second embodiments, a search string is created as a logical function of a subset of the document keys. The search string is submitted to a search engine. Links to related documents are received from the search engine and returned to the host.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07412453",
	"publication_date": "2008-08-12",
	"application_number": "10334370",
	"application_date": "2002-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Drawing method and drawing apparatus for displaying image data about a plurality of objects including semitransparent object and opaque object on computer display screen",
	"summary": "",
	"abstract": "A method is provided for multi-pass semitransparent processing having three passes. The method provides for displaying image data about a plurality of objects including opaque objects and semitransparent objects on a computer display screen by using an updatable Z-buffer as a storage, utilizing information about a depth direction for each object. A hardware resource capable of implementing the multi-pass method is also disclosed. The hardware resource, for example, is implemented as a drawing apparatus which can display image data about a plurality of objects including opaque objects and semitransparent objects on a computer display screen, utilizing information about a depth direction for each object.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07453458",
	"publication_date": "2008-11-18",
	"application_number": "09433475",
	"application_date": "1999-11-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Driver safety manager",
	"summary": "",
	"abstract": "A unified approach that permits the consideration of different issues and problems that affect driving safety. Particularly, there is proposed herein the creation of a driver safety manager (DSM). The driver safety manager embraces numerous different factors, multimodal data, processes, internal and external systems and the like associated with driving.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07349782",
	"publication_date": "2008-03-25",
	"application_number": "10790343",
	"application_date": "2004-02-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic generator for fast-client static proxy from service interface definition document",
	"summary": "",
	"abstract": "Providing APIs for dynamically generating fast client-side proxies given any type of service interface specification/definition document, such as IDL, WSDL or JMX MBean descriptors, so as to provide fast communication with distributed clients as well as dynamically allowing server interfaces to be updated without burdening clients for generation/assembly of distributed communication client stubs. A dynamic static-proxy invocation gateway is utilized along with a plurality of novel dynamic static-proxy invocation generators, one being associated with each specific service available for use on the servers. The invocation gateway receives requests for service from a client side stub, ascertains the service to be accessed by the client requests, and causes the appropriate generator to create dynamically a static client-side proxy for the requested service, if one does not yet exist.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07356562",
	"publication_date": "2008-04-08",
	"application_number": "10428206",
	"application_date": "2003-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic optimization of prepared statements in a statement pool",
	"summary": "",
	"abstract": "An apparatus, program product and method dynamically optimize prepared statements resident in a statement pool to permit subsequent reuses of such statements to utilize the optimized representations of such statements. The optimization of pooled statements may be performed responsive to the tracked usage of the statements in a statement pool, to direct the overhead associated with such optimization to those statements that are more likely to be utilized in the future. Among a multitude of possible optimizations, a pooled statement that requests data in a format other than that utilized by the database being accessed may be modified to request the data in the format used by the database, thereby decreasing the overhead in the database associated with format conversions.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07356523",
	"publication_date": "2008-04-08",
	"application_number": "10154023",
	"application_date": "2002-05-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamically reconfigurable distributed interactive voice response system",
	"summary": "",
	"abstract": "The present invention is a computer system and method that manages connections between one or more data network interfaces and one or more phone interfaces. A manager process, running on a computer system having both data and phone network interfaces, receives one or more telephone calls from one or more users over one of the phone interfaces and than accesses one or more profiles associated with each of the users. These profiles have one or more service identifiers and one or more interactive response agent (IRA) identifiers associated with the respective user. A menu of the service identifiers is presented to the user. The system then looks up an agent address of one of the IRAs that is associated with the service identifier selected by the user from the menu and establishes a session with the associated IRA. Having done this a two-way communication with the associated IRA occurs during the session. In this communication, the IRA is capable of passing information to the system from one or more application servers to which the IRA is connected over one or more data networks.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07379539",
	"publication_date": "2008-05-27",
	"application_number": "10917550",
	"application_date": "2004-08-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Edge deployed database proxy driver",
	"summary": "",
	"abstract": "An edge-deployed database proxy. A database access system which has been configured with the database proxy can include a universal database connectivity driver having a first exposed interface through which access to a database server can be provided; a database proxy driver registered with the universal database connectivity driver; and, a database driven application programmatically linked to the database proxy driver. Significantly, the database proxy driver can have a second exposed interface which conforms with the first exposed interface of the universal database connectivity driver. The database proxy driver further can have a configuration for invoking at least one auxiliary task in addition to providing access to the database server through the first exposed interface of the universal database connectivity driver.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07426515",
	"publication_date": "2008-09-16",
	"application_number": "10047860",
	"application_date": "2002-01-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Efficient configuration data migration technique",
	"summary": "",
	"abstract": "Methods, systems, and computer program products for migrating configuration data from an existing program to a replacement program, in response, for example, to a command by an external agent. In preferred embodiments, an existing program is modified according to the invention to add functionality to obtain pertinent configuration data from such sources available to the existing program as its internal tables, configuration files, and run-time commands, and then to write a configuration file containing configuration data formatted for use by the replacement program. The program's internal tables may often contain configuration data which is not always available to the replacement program e.g. command line parameters, data provided through receipt of messages from other programs, etc. The invention advantageously makes voluminous formatted configuration data available to the replacement program in order to expeditiously provide a basis for its initial operation after installation.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07337435",
	"publication_date": "2008-02-26",
	"application_number": "10042794",
	"application_date": "2002-01-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Efficient process for handover between subnet managers",
	"summary": "",
	"abstract": "A method and system for efficiently merging subnets having individual subnet managers (SM) into a single network with one master SM. During discovery and configuration of a subnet, a subnet manager creates a Subnet Management Database (SMDB) representative of the subnet components being managed. Each subnet manager contains an independent SMDB. When two or more subnets are linked/connected together to form a single network, a single one of the subnet managers is selected as the master subnet manager and all the subnets' SMDBs must be merged. An SMDB record labeling mechanism is utilized to differentiate among components from the different subnets that may have the same parameter values, such as protection keys (P_keys) and re-assign individual parameters to create a single SMDB of uniquely defined components.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07409432",
	"publication_date": "2008-08-05",
	"application_number": "09692350",
	"application_date": "2000-10-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enabling collaborative applications using Session Initiation Protocol (SIP) based Voice over Internet protocol Networks (VoIP)",
	"summary": "",
	"abstract": "A method and system for enabling voice over Internet for computer applications includes registering session initiation protocol (SIP) as a system service and providing SIP service through an application programming interface (API) to permit access to service functions by individual software applications. A SIP link is provided within a software application to permit user invocation of SIP service functions. The link may be passed as a parameter to permit external access to an invoked service function.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07376129",
	"publication_date": "2008-05-20",
	"application_number": "10695856",
	"application_date": "2003-10-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Establishing user accounts for RFID-based telecommunications routing",
	"summary": "",
	"abstract": "Methods, systems, and products are provided for establishing RFID-based telecommunications routing for a user including identifying a plurality of telephony devices available to a user, identifying the location of the plurality of telephony devices available to the user, receiving from a user routing preferences, receiving an identification of an RFID tag for the user, and associating with the user the identified telephony devices available to a user, the locations of the plurality of devices available to the user, the routing preferences, and the identification of the RFID tag.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07324476",
	"publication_date": "2008-01-29",
	"application_number": "10981287",
	"application_date": "2004-11-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Federating legacy/remote content into a central network console",
	"summary": "",
	"abstract": "Content from multiple remote/legacy consoles is aggregated within a central console to provide a single point-of-access for managing remote resources. Preferred embodiments deploy the central console as a network-accessible application, and this console application communicates with remotely-located console applications (and/or other locally-executing functions) that carry out tasks selected from the central console by an administrator and then return content generated by those tasks for rendering in the central console. The run-time environment used at the central console is not required to match the run-time environment of the remote/legacy consoles.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07444633",
	"publication_date": "2008-10-28",
	"application_number": "10795007",
	"application_date": "2004-03-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Framework to access a remote system from an integrated development environment",
	"summary": "",
	"abstract": "For use in an integrated development environment, such as Eclipse, a common connection registry of connections to remote systems is presented. The connection registry contains objects and subsystem objects. The connection objects have attribute information for the remote system whereas the subsystem objects contain information specific to a particular tool and connection. The framework further presents a common user interface by which tools can be registered within a connection, or by which a new connection can be created. The common user interface presents application program interfaces by which connection objects and subsystem objects can be created, retrieved, maintained, updated, modified, stored in the registry, and/or deleted, etc. The framework is capable of maintaining connections and tools within an integrated development environment independent of the type and/or operating system of the remote systems, the programming language of the tools, etc.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07458062",
	"publication_date": "2008-11-25",
	"application_number": "10286559",
	"application_date": "2002-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hierarchical event filtering for storage server",
	"summary": "",
	"abstract": "A technique for reducing the number of events that are transmitted by a server to a client in a client/server application programming interface (API). At the server host, each of different event messages is associated with at least one event category in a hierarchy of event categories. Each client host sends a registration request to the server host to inform the server host that the client host wants to receive only event messages that are associated with a specified event category. The server host associates the specified event category with each client host, and communicates only the event messages that are descendants of the specified event category.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07437735",
	"publication_date": "2008-10-14",
	"application_number": "10789167",
	"application_date": "2004-02-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information processing system, information processing unit, control method, program and a recording medium",
	"summary": "",
	"abstract": "An information processing system includes a plurality of information processing units wirelessly communicating with each other, each of which includes a distribution data receiving section for receiving distribution data to be distributed to each of the information processing units from an information processing unit that has received the distribution data among the plurality of information processing units, a destination selection section for selecting an information processing unit that has not received the distribution data as a destination information processing unit for the distribution data from among the plurality of information processing units, and a distribution data sending section for sending the distribution data to the information processing unit selected by the destination selection section using a frequency band that is not used by another information processing unit while the other information processing unit is sending the distribution data to still another information processing unit.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07453859",
	"publication_date": "2008-11-18",
	"application_number": "11190305",
	"application_date": "2005-07-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integrated multi-function object locks",
	"summary": "",
	"abstract": "A single lock word comprises an identifier field for storing a thread identifier associated with a first thread obtaining a lock on an object; an inflation field for storing a fat lock bit upon inflation of the lock on the object; and a contention field for storing a contention bit in response to an attempt by a second thread to obtain a lock on the object. The values of the single lock word are verified with a single memory fetch instruction. When unlocking an object, a single memory fetch instruction can be used to read the lock word to: (1) determine whether thread T is still the current owner of the lock, and (2) determine the states of inflation and/or contention (i.e., determine whether the fat lock and/or contention bits have been set).",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07447861",
	"publication_date": "2008-11-04",
	"application_number": "10890751",
	"application_date": "2004-07-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integrating legacy application/data access with single sign-on in a distributed computing environment",
	"summary": "",
	"abstract": "The present invention provides methods, systems, computer program products, and methods of doing business whereby legacy host application/system access is integrated with single sign-on in a modem distributed computing environment. A security token used for signing on to the modem computing environment is leveraged, and is mapped to user credentials for the legacy host environment. These user credentials are programmatically inserted into a legacy host data stream, thereby giving the end user the look and feel of seamless access to all applications/systems, including not only modem computing applications/systems but also those residing on (or accessible through) legacy hosts. In addition to providing users with the advantages of single sign-on, the disclosed techniques enable limiting the number of user identifiers and passwords an enterprise has to manage.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07426642",
	"publication_date": "2008-09-16",
	"application_number": "10294370",
	"application_date": "2002-11-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interfacing an application server to remote resources using Enterprise Java Beans as interface components",
	"summary": "",
	"abstract": "A method for interfacing an application server with a resource can include the step of associating a plurality of Enterprise Java Beans (EJBs) to a plurality of resources, where a one-to-one correspondence exists between EJB and resource. An application server can receive an application request and can determine a resource for handling the request. An EJB associated with the determined resource can interface the application server to the determined resource. The request can be handled with the determined resource.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07448041",
	"publication_date": "2008-11-04",
	"application_number": "10833566",
	"application_date": "2004-04-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Internet SCSI communication via UNDI services",
	"summary": "",
	"abstract": "A method and system for emulating a hardware Internet Small Computer System Interface (iSCSI) Host Bus Adapter (HBA) without risking an interruption of communication between a computer and a remote secondary storage device is presented. During normal operations, a (hardware emulating) software iSCSI HBA drives a Network Interface Card (NIC) to afford communication between the computer and the remote secondary storage. If an operating system (OS) anomaly occurs in the computer, the NIC is normally disconnected by the OS. To maintain communication between the computer and the secondary storage device if such an event occurs, a failover network device is called up by the computer's System Management Memory (SMM) Basic Input Output System (BIOS), which allows uninterrupted communication to continue between the computer and remote secondary storage device.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07430629",
	"publication_date": "2008-09-30",
	"application_number": "11127397",
	"application_date": "2005-05-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Key-controlled object-based memory protection",
	"summary": "",
	"abstract": "A method, system, and program key-controlled object-based memory protection are provided. A processing unit includes an authority check for controlling access by the processing unit to pages of memory according to whether a hardware protection key set currently loaded in an authority mask register allows access to the pages. In particular, each page of memory is assigned a page key number that indexes into the hardware protection key set. The currently loaded hardware protection key set specifies those page key numbers that are currently accessible to the processing unit for the execution context. Each hardware key within the hardware protection key set may be associated with a particular data object or group of data objects. Thus, effectively, the currently loaded hardware protection key set identifies which data objects or groups of data objects are currently accessible. Software keys are assigned to data objects and dynamically mapped to hardware protection key sets, such that when a module is called, the software keys assigned to that module are mapped to the hardware protection key set to be loaded for controlling current access to memory.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07424584",
	"publication_date": "2008-09-09",
	"application_number": "10916981",
	"application_date": "2004-08-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Language-enhanced programming tools",
	"summary": "",
	"abstract": "Statements of a computer program expressed using a first source natural language are made meaningful to a programmer familiar with a second target natural language. The first source natural language of the computer program is determined from the programmer, or through analysis, and the second target natural language desired by the programmer is selected. Textual constructs may be parsed, with reference to stored coding conventions to determine meaningful lexical tokens. Such tokens are translated with a translation engine, and displayed to the programmer, desirably using a graphical user interface feature of an integrated development environment (IDE) for computer programming in a particular programming language.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07412388",
	"publication_date": "2008-08-12",
	"application_number": "10734794",
	"application_date": "2003-12-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Loading software on a plurality of processors",
	"summary": "",
	"abstract": "A processing unit (PU) retrieves a file from system memory and loads it into its internal memory. The PU extracts a processor type from the file's header which identifies whether the file should execute on the PU or a synergistic processing unit (SPU). If an SPU should execute the file, the PU DMA's the file to the SPU for execution. In one embodiment, the file is a combined file which includes both PU and SPU code. In this embodiment, the PU identifies one or more section headers included in the file which indicates embedded SPU code within the combined file. In this embodiment, the PU extracts the SPU code from the combined file and DMA's the extracted code to an SPU for execution.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07415703",
	"publication_date": "2008-08-19",
	"application_number": "10670842",
	"application_date": "2003-09-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Magnifying the text of a link while still retaining browser function in the magnified display",
	"summary": "",
	"abstract": "A web browser magnifies the content of the whole page in memory and displays the relevant portion in a magnifier with hyperlinks. The web browser then maps the magnified display to the original document. Thus, manipulation of the mouse in the magnified display may result in an action with respect to the original document. The user may then select a link for navigation within the magnified display. Alternatively, the web browser may analyze the original web page and construct magnifier contents on the basis of either the document object model, extensible markup language (XML), or hypertext markup language (HTML) representation of the magnified portion.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07437670",
	"publication_date": "2008-10-14",
	"application_number": "09820511",
	"application_date": "2001-03-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing analysis of a degraded service in a grid environment",
	"summary": "",
	"abstract": "A method, system, and program managing analysis of a degraded service in a grid environment are provided. In a grid environment of multiple diverse systems, a service availability management agent is enabled to receive multiple types of error messages generated from the multiple diverse systems within the grid environment. Each error message is parsed to determine a general error indicator. Then, the service availability management agent attempts to resolve the general error indicator and return a solution to each parsed error message. Solutions may include an adjustment of resource usage by a particular service, an explanation of a particular error message, or a recommendation of alternate resources. The service availability management agent preferably specifies the transmission of the solution in a format specified for the requester system.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07464159",
	"publication_date": "2008-12-09",
	"application_number": "10757270",
	"application_date": "2004-01-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing features available on a portable communication device based on a travel speed detected by the portable communication device",
	"summary": "",
	"abstract": "A portable communication device detects a current speed of travel of the portable communication device independent of any vehicle temporarily transporting the portable communication device. A speed based setting controller of the portable communication device compares the current speed to at least one threshold value set at the portable communication device. Responsive to the current speed exceeding the threshold value, the speed based setting controller automatically assigns a separate speed based setting to a current setting for each feature assigned to the threshold value, wherein each current setting for each feature designates the operability of that feature within the portable communication device, such that the current setting for each feature adjusts with a speed of travel as detected by the portable communication device.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07369845",
	"publication_date": "2008-05-06",
	"application_number": "11191579",
	"application_date": "2005-07-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing network errors communicated in a message transaction with error information using a troubleshooting agent",
	"summary": "",
	"abstract": "A method for managing network errors communicated in a message transaction with error information using a troubleshooting agent. A network facilitates message transactions between a requester and a responder for facilitating web services. When a non-application specific error occurs in relation to a particular message transaction, such as a network error, a protocol layer assigns an error code and either the requester or responder encodes the error code in the body of an envelope added to the particular message transaction. The message transaction is an XML message with a Simple Object Access Protocol (SOAP) envelope encoded with the error code to which the XML message is then attached. The error encoded message transaction is forwarded to a troubleshooting agent. The troubleshooting agent facilitates resolution of the non-application specific error and returns a descriptive message indicating the resolution of the non-application specific error to at least one of the requester and the responder.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07467196",
	"publication_date": "2008-12-16",
	"application_number": "11034304",
	"application_date": "2005-01-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing SANs with scalable hosts",
	"summary": "",
	"abstract": "A method, system, and computer program product for providing enhanced management features for a SAN with scalable hosts. Partitioned hosts (or u2018scalableu2019 hosts) are managed by extending SAN manager host-centric logical views to show (1) the host partition hierarchy and (2) the storage resource ownership for a SAN-attached scalable host. The extended host-centric view includes the host system, hosting OSes (if applicable), hosted OSes for each hosting OS (or the host system), OS volumes for each hosted OS, and logical mapping of each OS volume to the SAN storage resource (logical unit). The SAN manager is extended to also show how hosting (trusted) partitions, blades, and/or cluster members physically connect into a SAN. Users are able to toggle between a host centric view and a physical topology view by selection of items within the interface.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07340579",
	"publication_date": "2008-03-04",
	"application_number": "10987055",
	"application_date": "2004-11-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mapping data from multiple data sources into a single or multiple reusable software components",
	"summary": "",
	"abstract": "A method, apparatus and program storage device for mapping data objects, residing in multiple data sources or generated dynamically, into a single or multiple reusable software components, for integrated information access to multiple disparate data sources, residing on or generating the data dynamically on different hardware systems and possibly in different data formats. A user identifies selected data objects from multiple data sources and registers them with an information integration software facility, in order to create at least one virtual data object having at least one attribute from the selected registered data objects, and to wrap access to the at least one virtual data object into a reusable software component, as though it was a single real data object, accessible directly from software applications.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07412457",
	"publication_date": "2008-08-12",
	"application_number": "10983842",
	"application_date": "2004-11-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mechanism for executing nested transactions in an execution environment supporting flat transactions only",
	"summary": "",
	"abstract": "Disclosed is a means and a method for executing a nested transaction in an execution environment supporting flat transactions only. To process a StartTransaction operation within a nested transaction it is suggested to check whether the StartTransaction operation is on the first nesting level of the nested transactions. An actual transaction within the execution environment by issuing a corresponding StartTransaction is started only in the affirmative case but not otherwise. To process a CommitTransaction operation within a nested transaction to successfully terminate a transaction it is suggested to check whether the CommitTransaction operation is on the first nesting level of the nested transaction. An actual transaction within the execution environment will be terminated only by issuing a corresponding CommitTransaction operation in the affirmative case but not otherwise. To process a RollbackTransaction operation within a nested transaction aborting a transaction as unsuccessful, it is suggested to issue a corresponding RollbackTransaction operation within the execution environment independent from the nesting level of said RollbackTransaction operation.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07346632",
	"publication_date": "2008-03-18",
	"application_number": "10055208",
	"application_date": "2002-01-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mechanism for improving accessibility of JMX monitoring information in web content",
	"summary": "",
	"abstract": "System, method and computer program product for monitoring the status of components in a data processing system that improves the accessibility of JMX monitoring information in web content. The system includes a mechanism for acquiring a text representation of component status for display as ALT and TITLE content associated with each status image. Because the component status is displayed in a manner that is indistinguishable from ALT/TITLE text that has already been statically included in an image attribute, user experience is improved for users with and without accessibility needs.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07337349",
	"publication_date": "2008-02-26",
	"application_number": "10881596",
	"application_date": "2004-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mechanism for loading plugin classes at an appropriate location in the class loader hierarchy",
	"summary": "",
	"abstract": "A set of plug-in class loaders is provided in the class loader hierarchy. A plug-in class loader is provided for each class loader in the plug-in application's class loader hierarchy. Each plug-in class loader is associated with a single application class loader and is configured such that it delegates to its associated application class loader. All plug-in class loaders are also configured with a class path such that they may load plug-in classes from a directory that is specified within a configuration file. The loading of all plug-in classes is initiated by the application using the plug-in class loaders.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07434215",
	"publication_date": "2008-10-07",
	"application_number": "10660014",
	"application_date": "2003-09-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Memory allocator for a multiprocessor computer system",
	"summary": "",
	"abstract": "Methods for dynamically allocating memory in a multiprocessor computer system such as a non-uniform memory access (NUMA) machine having distributed shared memory. The methods include allocating memory by specified node, memory class, or memory pool in response to requests by the system (kernel memory allocation) or a user (application memory allocation). Through these methods memory is allocated more efficiently in a NUMA machine. For example, allocating memory on a specified node in a NUMA machine, such as the same node on which a process requiring the memory is running, reduces memory access time. Allocating memory from a specified memory class allows device drivers with restricted DMA ranges to operate with dynamically allocated memory. Other benefits of these methods include minimizing expensive remote-memory accesses using a distributed reference count mechanism and lock-free cache access.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07472233",
	"publication_date": "2008-12-30",
	"application_number": "10835768",
	"application_date": "2004-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for autonomic test case feedback using hardware assistance for data coverage",
	"summary": "",
	"abstract": "A method, apparatus, and computer instructions for presenting coverage data relating to data access occurring during execution of code. The coverage data containing data access indicators associated with memory locations is obtained. The data access indicators that have been set by a processor in the data processing system in response to access of the memory locations during execution of the code by the processor are identified to form set data access indicators. Each set instruction access indicator is associated with a portion of the memory locations allocated for the code. A presentation for coverage data is generated, wherein the set data access indicators are identified in the presentation.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07421684",
	"publication_date": "2008-09-02",
	"application_number": "10806917",
	"application_date": "2004-03-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for autonomically initiating measurement of secondary metrics based on hardware counter values for primary metrics",
	"summary": "",
	"abstract": "A method, apparatus, and computer instructions in a data processing system for processing instructions are provided. Instructions are received at a processor in the data processing system. If a selected indicator is associated with the instruction, counting of each event associated with the execution of the instruction is enabled. Functionality may be provided in the performance monitoring application for initiating the measurement of secondary metrics with regard to identified instructions, data addresses, ranges of identified instructions, or ranges of identified data addresses, based on counter values for primary metrics. Thus, for example, when a primary metric counter, or a combination of primary metric counters, meets or exceeds a predetermined threshold value, an interrupt may be generated. In response to receiving the interrupt, counters associated with the measuring of secondary metrics of a range of instructions/data addresses may be initiated.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07392370",
	"publication_date": "2008-06-24",
	"application_number": "10757269",
	"application_date": "2004-01-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for configuring and modeling server information in an enterprise tooling environment",
	"summary": "",
	"abstract": "A computer implemented method, an apparatus, and a computer usable program product are provided for configuring and modeling server connection and deployment information in an enterprise tooling environment. A software model is provided that comprises a connections object, which includes a plurality of connection objects and deploy spec objects. Each of the connection objects is specific to a backend server type. A deploy controller is provided at run time to examine the connections object for a connection object. A backend resource manager is loaded for a specific application server. If a connection object is present, the backend resource manager loads a connection interpreter, which transforms development time connection information in the connection object to the run time connection information in corresponding deploy spec object and connection factory spec object. The backend resource manager then writes the deployment information to the configurations files of the application server.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07454492",
	"publication_date": "2008-11-18",
	"application_number": "11213237",
	"application_date": "2005-08-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for counting instruction and memory location ranges",
	"summary": "",
	"abstract": "A method, apparatus, and computer instructions in a data processing system for processing instructions and monitoring accesses to memory location ranges. An instruction for execution is identified. A determination is made as to whether the instruction is within a contiguous range of instructions. Execution information relating to the instruction is identified if the instruction is within the contiguous range of instructions. With memory location accesses, an access to a memory location is identified. A determination of whether the memory location is within a contiguous range of memory locations is made. Access information is identified if the memory location is within the contiguous range of memory locations.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07373637",
	"publication_date": "2008-05-13",
	"application_number": "10675872",
	"application_date": "2003-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for counting instruction execution and data accesses",
	"summary": "",
	"abstract": "A method, apparatus, and computer instructions in a data processing system for processing instructions. Instructions are received at a processor in the data processing system. If a selected indicator is associated with the instruction, counting of each event associated with the execution of the instruction is enabled.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07395527",
	"publication_date": "2008-07-01",
	"application_number": "10675777",
	"application_date": "2003-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for determining availability of a user of an instant messaging application",
	"summary": "",
	"abstract": "An instant messaging application intelligently infers a user's unavailability from one or more indicia which include the user's electronic calendar. Preferably, the instant messaging application may report not only that a user is unavailable, but also give a reason for inferring unavailability, in order to provide other users with additional potentially useful information. Preferably, the user may specify which indicia and which parameters may be used to infer his unavailability in an editable profile. When another user requests status, this value is returned by the server. An intelligent instant messaging application as described herein provides other users with more accurate and complete availability information.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07337210",
	"publication_date": "2008-02-26",
	"application_number": "10720878",
	"application_date": "2003-11-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for electronic mail interaction with grouped message types",
	"summary": "",
	"abstract": "An electronic mail inbox uses a mail agent to categorize incoming electronic mail to facilitate more flexible and rapid viewing and possible response thereto. Several special functions for collection of regularly sent types of mail, such as newsletters, office memos, press releases, etc., are utilized. In addition, special menu items are provided for collection and presentation of different priority items, such as urgent correspondence and approval requests. The electronic mail inbox facilitates multiple viewing options so that collections of regularly sent or different priority types of mail may be viewed separately and/or interleaved with other items in a main mail inbox. In addition, items that require an affirmative response, such as approval requests, may include a special preview format that allows for rapid viewing of pertinent details and approval directly from the mail inbox without review of the complete item.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07359936",
	"publication_date": "2008-04-15",
	"application_number": "10351862",
	"application_date": "2003-01-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for generating electronic document definitions",
	"summary": "",
	"abstract": "A method of automatically creating an electronic document definition can include querying an application using a meta data interface of the application to obtain meta data describing at least one other interface of the application. The meta data can be received responsive to the querying. The meta data can be processed to determine at least one electronic document definition describing the at least one other interface in accordance with the received meta data and a message specification of the application.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07315980",
	"publication_date": "2008-01-01",
	"application_number": "10102766",
	"application_date": "2002-03-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for managing multiple data processing systems using existing heterogeneous systems management software",
	"summary": "",
	"abstract": "A common consolidation management application provides an interface to the multiple different system management software applications and at least one user input console. An adapter in each of the system management software applications supports communication with the consolidation application. A system administrator issues requests to different system management software applications using a common interface provided by the consolidation application. The consolidation application can be installed over an existing complex of computer systems managed by different management applications, without modifying the managed systems or replacing the management applications.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07412709",
	"publication_date": "2008-08-12",
	"application_number": "10703356",
	"application_date": "2003-11-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for performing temporal checking",
	"summary": "",
	"abstract": "An apparatus for performing temporal checking is disclosed. A signal logger for performing temporal checking includes a group of edge detection modules and a group of counting modules. During testing, the signal logger is coupled to a device under testing (DUT). Each of the edge detection modules is capable of maintaining edge information after a state transition on a signal within the DUT has been detected. Each of the counting modules is associated with one of the edge detection modules. Each of the countering modules is capable of maintaining a clock cycle count information associated with a detected edge. After the testing has been completed, temporal checking information on a signal within the DUT can be obtained by reconstructing the edge information and the associated clock cycle count information of the signal collected during the test.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07464354",
	"publication_date": "2008-12-09",
	"application_number": "11297308",
	"application_date": "2005-12-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for referencing a constant pool in a java virtual machine",
	"summary": "",
	"abstract": "A method, apparatus, and computer instructions for referencing a constant pool. A determination is made as to whether a bytecode references the constant pool. A relative offset to the constant pool is identified for the bytecode, in response to the bytecode referencing the constant pool. The bytecode is then replaced with a new bytecode containing the relative offset. The relative offset is used to reference the constant pool.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07356811",
	"publication_date": "2008-04-08",
	"application_number": "10886920",
	"application_date": "2004-07-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for testing a software program using mock translation input method editor",
	"summary": "",
	"abstract": "A method, apparatus, and computer instructions for testing software programs running on a data processing system. Text is translated from the source language to the target language to form translated text in response to a user input, containing the text in a source language. The text is entered through a computer interface in the data processing system. The translated text is inserted into a user interface of the software program to be tested to form inserted, translated text. The software program is written using the target language. A determination is made as to whether the software program functions correctly using the inserted, translated text.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07389223",
	"publication_date": "2008-06-17",
	"application_number": "10666870",
	"application_date": "2003-09-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for thread-safe handlers for checkpoints and restarts",
	"summary": "",
	"abstract": "A method, apparatus, and computer instructions for executing a handler in a multi-threaded process handling a number of threads in a manner that avoids deadlocks. A value equal to the number of threads executing in the data processing system is set. The value is decremented each time a lock count for a thread within the number of threads is zero. A thread within the number of threads is suspended if the thread requests a lock and has a lock count of zero. A procedure, such as a handler, is executed in response to all of the threads within the number of threads having no locks.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07337444",
	"publication_date": "2008-02-26",
	"application_number": "10339753",
	"application_date": "2003-01-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for transferring data from an application to a destination",
	"summary": "",
	"abstract": "A method, apparatus, and computer instructions for sending content from a first application to a second application. In response to a user input indicating a selection of content for transfer to the second application, the selection of the content is copied to form copied content. The copied content is then automatically sent to the second application without requiring additional user manipulation of the copy content. Additionally, the destination may be another user. In this case, the second application is employed to automatically transfer the copied content to that second user.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07395317",
	"publication_date": "2008-07-01",
	"application_number": "10687237",
	"application_date": "2003-10-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for transmitting accessibility requirements to a server",
	"summary": "",
	"abstract": "A method, apparatus, and computer instructions for transmitting accessibility requirements. Content is received from a computer at a data processing system. The content is parsed for a selected indicator. The data processing system is queried to identify accessibility requirements in response to the selected indicator being present. The identified accessibility requirements are sent to the computer. These accessibility requirements are use by the computer to generate content for the data processing system.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07401288",
	"publication_date": "2008-07-15",
	"application_number": "10610239",
	"application_date": "2003-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and computer program product for handling application references to undefined operating system services",
	"summary": "",
	"abstract": "A method and a computer program product that enable an existing operating system (OS) to provide a non-failure response to an application's reference to an OS service that is not currently defined/available within the existing OS. The loader of the OS responds to each reference to an undefined service by mapping the reference to an undefined service response utility (USRU). USRU is a specialized service designed to provide a response that a requested service is not yet available. When the OS loader detects that an application is referring to an OS service that is undefined, the OS loader resolves the reference to the USRU, which, when invoked returns an indication that the requested service is not yet available.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07454762",
	"publication_date": "2008-11-18",
	"application_number": "11006199",
	"application_date": "2004-12-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and data processing system having dynamic profile-directed feedback at runtime",
	"summary": "",
	"abstract": "Software communicates to a processing unit a classification each of at least one schedulable software entity that the processing unit executes. A resource manager within the processing unit dynamically allocates hardware resources within the processing unit to the schedulable software entity during execution in accordance with the classification. The classification may be retrieved by the software from in data storage, and operating system software may schedule the schedulable software entity for execution by reference to the classification. The processing unit may also monitor, in hardware, execution of each of a plurality of schedulable software entities within the processing unit in accordance with a monitoring parameter set. The processing unit may then report to software the utilization of hardware resources by each of the plurality of schedulable software entities so that the software may develop or refine a classification for the schedulable software entity.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07448037",
	"publication_date": "2008-11-04",
	"application_number": "10755878",
	"application_date": "2004-01-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for autonomic monitoring of semaphore operation in an application",
	"summary": "",
	"abstract": "A method, an apparatus, and a computer program product in a data processing system are presented for using hardware assistance for gathering performance information that significantly reduces the overhead in gathering such information. Performance indicators are associated with instructions or memory locations, and processing of the performance indicators enables counting of events associated with execution of those instructions or events associated with accesses to those memory locations. The performance information that has been dynamically gathered from the assisting hardware is available to the software application during runtime in order to autonomically affect the behavior of the software application, particularly to enhance its performance. For example, the counted events may be used to autonomically collecting statistical information about the ability of a software application to successfully acquire a semaphore.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07421681",
	"publication_date": "2008-09-02",
	"application_number": "10682437",
	"application_date": "2003-10-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for caching fragments while avoiding parsing of pages that do not contain fragments",
	"summary": "",
	"abstract": "A method, a system, an apparatus, and a computer program product are presented for a fragment caching methodology. After a message is received at a computing device that contains a cache management unit, a fragment in the message body of the message is cached. Subsequent requests for the fragment at the cache management unit result in a cache hit. A FRAGMENTLINK tag is used to specify the location in a fragment for an included or linked fragment which is to be inserted into the fragment during fragment or page assembly or page rendering. If a FRAGMENTLINK tag is present within the message body of a message, then the FRAGMENT message header for the message may indicate the presence of the FRAGMENTLINK tag with a directive for the FRAGMENT message header, e.g., using a u201ccontains-fragmentu201d directive.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07412535",
	"publication_date": "2008-08-12",
	"application_number": "10034748",
	"application_date": "2001-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for caching message fragments using an expansion attribute in a fragment link tag",
	"summary": "",
	"abstract": "A method, a system, an apparatus, and a computer program product are presented for a fragment caching methodology. After a message is received at a computing device that contains a cache management unit, a fragment in the message body of the message is cached. Subsequent requests for the fragment at the cache management unit result in a cache hit. A FRAGMENTLINK tag is used to specify the location in a fragment for an included or linked fragment which is to be inserted into the fragment during fragment or page assembly or page rendering. A FRAGMENTLINK tag may include a FOREACH attribute that is interpreted as indicating that the FRAGMENTLINK tag should be replaced with multiple FRAGMENTLINK tags. The FOREACH attribute has an associated parameter that has multiple values that are used in identifying multiple fragments for the multiple FRAGMENTLINK tags.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07426534",
	"publication_date": "2008-09-16",
	"application_number": "10034771",
	"application_date": "2001-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for checking the security on a distributed computing environment",
	"summary": "",
	"abstract": "An automated method for checking the adequacy of security in a distributed computing environment (DCE) consisting of a client and a server(s). The method comprises of first loading a DCE security tool on the DCE server/client machine. The security is a software application which instantiates the security checks of the invention. The DCE security tool is executed on the DCE by entering an executable command on the client or the server. This causes the DCE security tool to automatically search for security violations or warnings and output a resulting report with any violation or warning found.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07454791",
	"publication_date": "2008-11-18",
	"application_number": "09404275",
	"application_date": "1999-09-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for connecting businesses through common interests",
	"summary": "",
	"abstract": "A method of connecting businesses through common interests can include storing business profiles comprising business attributes in an online business registry. Responsive to a query from an inquiring business, the online business registry can be searched to locate at least one business having a business profile including at least one business attribute corresponding to the query. At least one communications link between the inquiring business and the located business can be established according to at least one business attribute of the business profile of the located business.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07426472",
	"publication_date": "2008-09-16",
	"application_number": "10081702",
	"application_date": "2002-02-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for determining memory usage of a heap",
	"summary": "",
	"abstract": "A method and system for determining the memory utilization of a heap are provided. With the method and system, object allocations and optionally, possible memory freeing events are used to initiate a mark-and-count operation. The mark-and-count operation marks the live objects and maintains a running count of their memory bytes allocated to the live objects, referred to as a live count. The execution of the mark-and-count operation may be dependent upon various criteria including thresholds, functions of the live count, peak live counts, number of memory bytes allocated since a previous mark-and-count operation was performed, and the like. In addition to the live count, a total number of bytes allocated to objects may be maintained in order to obtain information regarding the heap memory utilization.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07444484",
	"publication_date": "2008-10-28",
	"application_number": "10875929",
	"application_date": "2004-06-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for dynamic client authentication in support of JAAS programming model",
	"summary": "",
	"abstract": "Authentication operations are performed within a CORBA-compliant environment with client applications using the JAAS programming model. A client application obtains an interoperable object reference (IOR) for a target object on a remote server that is protected within a security domain. After the client application invokes the target object, an object request is generated, and a request-level interceptor obtains the IOR for the target object and extracts an identifier for the security domain from the IOR. If a credential for the security domain is not in the current execution context of the client application, i.e., the current JAAS subject in the JAAS programming model, then the request-level interceptor performs an authentication operation with the security domain on behalf of the client application, receives an authentication credential, and places the authentication credential into the execution context of the client application. The object request is further processed in association with the obtained credential.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07363487",
	"publication_date": "2008-04-22",
	"application_number": "10611022",
	"application_date": "2003-07-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for efficiently transferring a self-defined non-contiguous message in a one-sided communication model",
	"summary": "",
	"abstract": "A method and system for transferring noncontiguous messages group including assembling a set of data into a series of transmission packets, packaging a description of the layout of the transmission packets into description packets and then places each description packet into a local buffer while maintaining a count of the number of description packets, transfers each description packet into a transmit buffer for transmission to at least one receiving node, identifies the data packets, and forwards each data packet to the transmit buffer for transmission to the at least one receiving node. The receiving node receives the transmission packets, identifies each packet as a description packet or data packet, places the description packets in a local buffer for storage until the description is complete, places each description packet into a user data buffer, stores data packets in a local queue until the description is complete, then transfers the data packets to the user buffer.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07454491",
	"publication_date": "2008-11-18",
	"application_number": "10965597",
	"application_date": "2004-10-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for network management with adaptive monitoring and discovery of computer systems based on user login",
	"summary": "",
	"abstract": "A method, system, apparatus, and computer program product is presented for management of a distributed data processing system. A network management framework allows system administrators to configure user-associated monitoring parameters and device-associated monitoring parameters for users and devices within the distributed data processing system. Resources within the distributed data processing system are dynamically discovered, and the discovered resources are adaptively monitored using the network management framework.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07337473",
	"publication_date": "2008-02-26",
	"application_number": "09738337",
	"application_date": "2000-12-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for preventing unauthorized rerecording of multimedia content",
	"summary": "",
	"abstract": "A method, system and computer readable medium for the blocking of recording digital content at an end user multimedia end-user-system during the rendering of encrypted digital multimedia files. Before the process of rendering of encrypted digital multimedia can be started all rendered media stream during playback are opened to ensure that this multimedia content is not recorded. This blocks the usage of the multimedia interfaces including devices and/or ports that can be used to store un-encrypted content that has been decrypted for the purposes of playing or rendering. The method also includes an exception, which allows recording with permission from the present invention.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07383228",
	"publication_date": "2008-06-03",
	"application_number": "11201809",
	"application_date": "2005-08-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for providing version control of parameters in a command-based API using Java serialization",
	"summary": "",
	"abstract": "A technique for determining whether a server host supports the functions in a command sent by a client host. The client host formulates a command including a command object that contains parameter objects. The parameter objects, which represent the functions, are serialized, e.g., using the Java serialization command, and communicated to the server host. The server host attempts to deserialize the parameter objects. If it is successful, it is concluded that the server host supports the functions represented by the parameter objects. Or, it is concluded that the server host is incompatible with the functions represented by one or more parameter objects that cannot be deserialized. The server host may be a storage server, and the functions may be storage-related, such as a copy type to be performed.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07409693",
	"publication_date": "2008-08-05",
	"application_number": "10697761",
	"application_date": "2003-10-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for server support for pluggable authorization systems",
	"summary": "",
	"abstract": "A method, system, apparatus, and computer program product is presented for plugging in a standard authorization system in a manner such that legacy applications can use the authorization APIs and backend remote interfaces of a legacy authorization system. When a legacy application makes a call intended for a routine within the legacy authorization system, the call is redirected to make the appropriate calls to the APIs of the standard authorization system.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07320141",
	"publication_date": "2008-01-15",
	"application_number": "09814808",
	"application_date": "2001-03-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for stepping up to certificate-based authentication without breaking an existing SSL session",
	"summary": "",
	"abstract": "A method is presented for performing authentication operations. When a client requests a resource from a server, a non-certificate-based authentication operation is performed through an SSL (Secure Sockets Layer) session between the server and the client. When the client requests another resource, the server determines to step up to a more restrictive level of authentication, and a certificate-based authentication operation is performed through the SSL session without exiting or renegotiating the SSL session prior to completion of the certificate-based authentication operation. During the certificate-based authentication procedure, an executable module is downloaded to the client from the server through the SSL session, after which the server receives through the SSL session a digital signature that has been generated by the executable module using a digital certificate at the client. In response to successfully verifying the digital signature at the server, the server provides access to a requested resource.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07395424",
	"publication_date": "2008-07-01",
	"application_number": "10621927",
	"application_date": "2003-07-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for synchronizing direct access storage volumes",
	"summary": "",
	"abstract": "A method and system for synchronizing direct access storage volumes designated as managed by storage management software with direct access storage volumes available to a computer system. An identifier of a volume is provided. The volume is connected to and available to a computer system, and is not managed by storage management software. The identifier is matched with an identification pattern included in a record of a database accessible to the computer system. Management options that facilitate managing the volume by the storage management software, and that are included in the record are retrieved from the record. The volume is automatically added to a set of volumes being managed by the storage management software. The adding of the volume includes designating the volume as being managed by the storage management software and providing the management options to the storage management software.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07343447",
	"publication_date": "2008-03-11",
	"application_number": "11270763",
	"application_date": "2005-11-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for tracing profiling information using per thread metric variables with reused kernel threads",
	"summary": "",
	"abstract": "A method and system for tracing profiling information using per thread metric variables with reused kernel threads is disclosed. In one embodiment kernel thread level metrics are stored by the operating system kernel. A profiler request metric information for the operating system kernel in response to an event. After the kernel thread level metrics are read by the operating system for a profiler, their values are reset to zero by the operating system kernel. The profiler then applies the metric values to base metric values to appropriate Java threads that are stored in nodes in a tree structure base on the type of event and whether or not the kernel thread has been reused. In another embodiment non-zero values of thread level metrics are entered on a liked list. In response to a request from a profiler, the operating system kernel reads each kernel thread's entry in the linked list and zeros each entry. The profiler can then update the intermediate full tree snapshots of profiling information with the collection of non-zero metric variables.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07389497",
	"publication_date": "2008-06-17",
	"application_number": "09612350",
	"application_date": "2000-07-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for using a compact disk as a smart key device",
	"summary": "",
	"abstract": "A data processing system accepts a removable storage media, which becomes electrically engaged with a system unit within the data processing system, after which the removable storage media and the hardware security unit mutually authenticate themselves. The removable storage media stores a private key of a first asymmetric cryptographic key pair and a public key of a second asymmetric cryptographic key pair that is associated with the hardware security unit, and the hardware security unit stores a private key of the second asymmetric cryptographic key pair and a public key of the first asymmetric cryptographic key pair that is associated with the removable storage media. In response to successfully performing the mutual authentication operation between the removable storage media and the hardware security unit, the system unit is enabled to invoke cryptographic functions on the hardware security unit while the removable storage media remains engaged with the system unit.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07386736",
	"publication_date": "2008-06-10",
	"application_number": "11014559",
	"application_date": "2004-12-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for virtualization of trusted platform modules",
	"summary": "",
	"abstract": "A method, an apparatus, a system, and a computer program product is presented for virtualizing trusted platform modules within a data processing system. A virtual trusted platform module along with a virtual endorsement key is created within a physical trusted platform module within the data processing system using a platform signing key of the physical trusted platform module, thereby providing a transitive trust relationship between the virtual trusted platform module and the core root of trust for the trusted platform. The virtual trusted platform module can be uniquely associated with a partition in a partitionable runtime environment within the data processing system.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07380119",
	"publication_date": "2008-05-27",
	"application_number": "10835330",
	"application_date": "2004-04-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system of generically managing tables for network processors",
	"summary": "",
	"abstract": "A method and system for managing a plurality of tables for a plurality of heterogeneous network processors in a network is disclosed. The network also includes at least one host processor that utilizes at least one table management application. The method and system include providing a plurality of generic application program interfaces (APIs). The generic APIs communicate with the control application(s) and the heterogeneous network processors. The generic APIs communicate with the table management application(s) in a network processor independent manner, but manage the tables for the heterogeneous network processors in a network processor specific manner. Thus, the generic APIs allow the control application(s) to be network processor independent and to manage the tables for the heterogeneous network processors in the network processor specific manner.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07325239",
	"publication_date": "2008-01-29",
	"application_number": "10706232",
	"application_date": "2003-11-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system of preventing unauthorized rerecording of multimedia content",
	"summary": "",
	"abstract": "A method, system and computer readable medium for the blocking of recording digital content at an end user multimedia end-user-system during the rendering of encrypted digital multimedia files. Before the process of rendering of encrypted digital multimedia can be started all rendered media stream during playback are opened to ensure that this multimedia content is not recorded. This blocks the usage of the devices and/or ports that can be used to store un-encrypted content that has been decrypted for the purposes of playing or rendering. The method also includes an exception, which allows recording with permission from the present invention.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07346580",
	"publication_date": "2008-03-18",
	"application_number": "09938401",
	"application_date": "2001-08-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system to control operation of a portlet",
	"summary": "",
	"abstract": "A method to control a portlet associated with a portal page may include deactivating a selected portlet in response to operating a deactivation feature. The method may also include reactivating the selected portlet in response to operating a reactivation feature. The method may also include freezing a portlet content in the selected portlet in response to deactivating the selected portlet. The method may further include disabling hyperlinks, buttons and other inputs to the selected portlet in response to deactivating the selected portlet. The method may further include reconfiguring a portal server to ensure that a portlet content of a selected portlet cannot be affected while the selected portlet is deactivated.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07376900",
	"publication_date": "2008-05-20",
	"application_number": "10711701",
	"application_date": "2004-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for adding and enforcing enhanced authorization policy on devices in computer operation systems",
	"summary": "",
	"abstract": "In this invention, when security policy is attached to a file, a device protection manager is given the protected file's name. If the file is a special device file, then the device manager records the device specification in a device database. When a device access occurs, the device specification is extracted from the special device file used in the access. This extracted device specification is then used to search the device database. If a matching device specification is found in the database and the accessed device file has the same name as the protected resource, then authorization policy rules on that resource determine the access. If the match is a different device file name from the protected file name for the same device, then the search continues until the exact accessed device is found or until all device specification matches are found. In the absence of an exact device file match, all the matching device files are presented to the external security manager for authorization checking and the most restrictive outcome prevails.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07454788",
	"publication_date": "2008-11-18",
	"application_number": "09843069",
	"application_date": "2001-04-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for constructing and caching a chain of file identifiers and enabling inheritance of resource properties in file systems",
	"summary": "",
	"abstract": "The techniques of the present invention involve constructing and caching a chain of FIDs that represent the directory path to a system resource. Typically a lookupname( ) service returns a handle to the object and a handle to the object's owning directory. The owning directory handle can then be used to obtain a file identifier (FID) for the owning directory. This FID constitutes the first FID in the chain and will also act as the lookup key in the cache. The process next finds the directory's parent. A FID is obtained with the parent handle. This FID is added to the chain. The process repeats until the root of the system's file tree is reached. This result is a chain or array of FIDs representing the full path name of the directory containing the accessed object. The chain begins with the directory FID closest to the accessed object and ends with the FID representing the root of the file tree. Once constructed, the FID chain which forms a binary representation of a directory path name is placed in a cache. The cached chain remains valid unless a rename operation occurs on any FID components in the chain. On an object access, the process obtains a FID for the object's owning directory. This FID which represents the first FID in a FID chain is then used to search the FID chain cache. If a match is found, then the cached FID represents the path name for the access object. With this found chain, the expense of constructing the additional component FIDs for the object's owning oath is avoided.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07333988",
	"publication_date": "2008-02-19",
	"application_number": "11520270",
	"application_date": "2006-09-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for constructing segmentation-based predictive models",
	"summary": "",
	"abstract": "The present invention generally relates to computer databases and, more particularly, to data mining and knowledge discovery. The invention specifically relates to a method for constructing segmentation-based predictive models, such as decision-tree classifiers, wherein data records are partitioned into a plurality of segments and separate predictive models are constructed for each segment. The present invention contemplates a computerized method for automatically building segmentation-based predictive models that substantially improves upon the modeling capabilities of decision trees and related technologies, and that automatically produces models that are competitive with, if not better than, those produced by data analysts and applied statisticians using traditional, labor-intensive statistical techniques. The invention achieves these properties by performing segmentation and multivariate statistical modeling within each segment simultaneously. Segments are constructed so as to maximize the accuracies of the predictive models within each segment. Simultaneously, the multivariate statistical models within each segment are refined so as to maximize their respective predictive accuracies.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07451065",
	"publication_date": "2008-11-11",
	"application_number": "10096474",
	"application_date": "2002-03-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for defining a metadata schema to facilitate passing data between an extensible markup language document and a hierarchical database",
	"summary": "",
	"abstract": "A method is provided for defining a metadata schema to facilitate passing data between an XML document and a hierarchical database. The invention includes a database accessor, a document accessor, and an association module. The database accessor accesses a database schema indicative of database field names and a hierarchical structure for a hierarchical database. The document accessor accesses a document schema that defines the hierarchical structure, content data syntax, and semantics of valid, well-formed, XML documents that can be passed into and out of the hierarchical database. The document schema also includes at least one XML element name that maps to a corresponding database field name in the database schema. The association module associates the database schema and the document schema to provide a metadata schema that enables data to be passed between an XML document and the hierarchical database.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07418456",
	"publication_date": "2008-08-26",
	"application_number": "10758890",
	"application_date": "2004-01-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for determining a close approximate benefit of reducing memory footprint of a Java application",
	"summary": "",
	"abstract": "Changes in performance in a Java program are deduced from information related to garbage collection events of the program. Assumptions are made about the system, the application and garbage collection, and changes in performance that will result from modifying the program are deduced.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07434214",
	"publication_date": "2008-10-07",
	"application_number": "10761991",
	"application_date": "2004-01-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for determining on demand right size buffering within a socket server implementation",
	"summary": "",
	"abstract": "Method, apparatus and article of manufacture for acquiring a buffer after data from a remote sender (e.g., client) has been received by a local machine (e.g., server). Because the client data has already been received when the buffer is acquired, the buffer may be sized exactly to the size of the client data. In general, the buffer may be caller supplied or system supplied.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07373378",
	"publication_date": "2008-05-13",
	"application_number": "10038008",
	"application_date": "2002-01-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for enabling a program written in untrusted code to interact with a security subsystem of a hosting operating system",
	"summary": "",
	"abstract": "A program written in untrusted code (e.g., JAVA) is enabled to access a native operating system resource (e.g., supported in WINDOWS NT) through a staged login protocol. In operation, a trusted login service listens, e.g., on a named pipe, for requests for login credentials. In response to a login request, the trusted login service requests a native operating system identifier. The native operating system identifier is then sent to the program. Using this identifier, a credential object is then created within an authentication framework. The credential object is then used to login to the native operating system to enable the program to access the resource. This technique enables a JAVA program to access a WINDOWS NT operating system resource under the identity of the user running the JAVA program.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07451484",
	"publication_date": "2008-11-11",
	"application_number": "09321788",
	"application_date": "1999-05-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for first pass filtering of anomalies and providing a base confidence level for resource usage prediction in a utility computing environment",
	"summary": "",
	"abstract": "Provided is a method for monitoring resources in a utility computing environment (UCE). Measurements are evaluated to determine whether or not a particular resource requires remedial or other type of action. A sliding measurement window is employed to assemble a number of measurements corresponding to a particular resource. The number of intervals in a sliding measurement window is based upon best practices corresponding to the resource being measured and analyzed. A first threshold-crossing event and subsequent events are stored until the window is full, or closed. When the window is closed, the threshold-crossing measurements are analyzed to determine whether or not there exists an issue with the resource that requires action. Once a window has been closed and analyzed, the first threshold-crossing event and each subsequent event up to a second threshold-crossing event are discarded and the window reopens.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07409314",
	"publication_date": "2008-08-05",
	"application_number": "10902591",
	"application_date": "2004-07-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for implementing access control for queries to a content management system",
	"summary": "",
	"abstract": "A method to generate an SQL sub-expression that implement access control rules stored in a library server. The SQL sub-expression is then merged with the SQL passed from an application program interface (API). The access control checking mechanism is implemented on the server side of the content management system. In this client/server environment, the query SQL statement is built in two layers: the API (client) layer and the server layer. The API sends the query string to the underlying stored procedure. The stored procedure then generates the access control logic based on the configuration parameters of the library server. This access control logic is dynamically added to the query string sent by the API. The stored procedure prepares, builds and executes this new query string as a dynamic SQL statement.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07392246",
	"publication_date": "2008-06-24",
	"application_number": "10367086",
	"application_date": "2003-02-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for implementing single threaded optimizations in a potentially multi-threaded environment",
	"summary": "",
	"abstract": "Under the present invention, program code is examined (statically or dynamically) for characteristics indicative of a potential to generate multiple threads. If none are found, single threaded optimization(s) such as desynchronization, optimization of globals, etc., can be implemented. In addition, if the program code is later revealed to have the potential to generate multiple threads, the single threaded optimization(s) can be corrected to avoid incorrect execution.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07395530",
	"publication_date": "2008-07-01",
	"application_number": "10930032",
	"application_date": "2004-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for obtaining a value via a rule engine implemented by a collection object",
	"summary": "",
	"abstract": "A method for obtaining a value via a rule engine implemented by a collection object associated with an object-oriented application. A request for the value includes a key, is received from the application, and is directed to a method of the collection object. The collection object is capable of storing the key and associated data, and providing the data in response to receiving the request. An overriding of the method of the collection object replaces the provision of the data by the collection object with a processing of the request by a rule engine external to the application. The rule is identified in a rule definition file external to the application based on an association between the rule and the key. An algorithm associated with the rule and included in the rule definition file is executed to provide the requested value.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07454392",
	"publication_date": "2008-11-18",
	"application_number": "11329687",
	"application_date": "2006-01-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for parallel simulation on a single microprocessor using meta-models",
	"summary": "",
	"abstract": "The present invention generally relates to hardware development and design, and in particular it relates to a method for simulating hardware. A meta model () is compiled for integrating a plurality of n different instantiations (A, . . . N) of the same hardware model, and facilities and signals of different instantiations are resolved by instantiation-specific name space specifications in a code switch (). Thus, computing time is saved because by simulating the meta model, the processor resources, for instance, storage spaces, are utilized more efficiently.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07353159",
	"publication_date": "2008-04-01",
	"application_number": "10146331",
	"application_date": "2002-05-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for providing graphical representations of search results in multiple related histograms",
	"summary": "",
	"abstract": "A method is provided for enabling a user to search for documents that the user has previously viewed on its local machine. The documents with which the user interacts are monitored for predetermined events, and content data and metadata from the monitored documents is obtained. An index that includes parameters determined from the content data and metadata is created and a search of the index is performed to retrieve documents that the user has previously viewed.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07395260",
	"publication_date": "2008-07-01",
	"application_number": "10910617",
	"application_date": "2004-08-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for providing multi-variable dynamic search results visualizations",
	"summary": "",
	"abstract": "A system and method are provided for enabling a user to search for documents that the user has previously viewed on its local machine. The system includes three main components: the desktop integration module, the index module, and the graphical user interface module. The desktop integration module is an application which monitors documents with which the user interacts for predetermined events, and obtains content data and metadata from the monitored documents. The index module indexes the content data and metadata received from the desktop integration module. The graphical user interface module then permits a user to utilize the desktop integration module and index module by allowing a user to search for a document.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07421421",
	"publication_date": "2008-09-02",
	"application_number": "10910568",
	"application_date": "2004-08-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for publish/subscribe messaging",
	"summary": "",
	"abstract": "The invention relates to a message brokering system for connecting a client in a local publish/subscribe messaging system to a remote message broker. The system comprises a message broker in said local publish/subscribe messaging system and a metabroker application means representing said remote message broker. The local message broker comprises publish/subscribe means for proxying messages between the client and the metabroker application means. The metabroker application means comprises publish/subscribe means for proxying messages between the local broker and the remote broker.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07437417",
	"publication_date": "2008-10-14",
	"application_number": "10547724",
	"application_date": "2004-02-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for scheduling and transmitting messages",
	"summary": "",
	"abstract": "A method for scheduling and transmitting messages is disclosed. The method comprises storing a plurality of audio files in an audio database, generating a schedule of queued messages via the plurality of audio files, transmitting the queued messages based on the schedule, reconfiguring the schedule based on a user interaction delivering the queued messages in accordance with the reconfigured schedule. Through the use of the method in accordance with the present invention, a scheduled plurality of messages can be transmitted in a clear and professional manner. Additionally, u201cad hocu201d messages can be incorporated into the schedule without significantly disrupting the other messages.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07467188",
	"publication_date": "2008-12-16",
	"application_number": "10770310",
	"application_date": "2004-02-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for synchronization of a line-oriented text document and a stream-oriented text document",
	"summary": "",
	"abstract": "A method for synchronizing the contents of a line-oriented text document and a stream-oriented text document. The line-oriented text document has a sequence number area. The line-oriented text document listens for a change in the content of the stream-oriented text document and vice versa. When a change is detected in one document, listening in the other document is suspended and a complementary document change is implemented in the other document. Document adjustments resulting from such a complementary change are listened for separately, and echoed similarly into the original document.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07451396",
	"publication_date": "2008-11-11",
	"application_number": "10756141",
	"application_date": "2004-01-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for the reliability of host data stored on fibre channel attached storage subsystems",
	"summary": "",
	"abstract": "A method for improving the reliability of host data stored on Fiber Channel attached storage subsystems by performing end-to-end data integrity checks. When a read or write operation is initiated, an initial checksum for data in the read/write operation is generated and associated with the data, wherein the association exists through a plurality of layers of software and attached storage subsystems. The initial checksum is passed with the data in the read/write path. When a layer of software in the read/write path receives the initial checksum and data, the layer performs an integrity check of the data, which includes generating another checksum and comparing it to the initial checksum. If the checksums do not match, the read/write operation fails and the error is logged. If the checksums match, the integrity check is repeated through each layer in the read/write path to enable detecting data corruption at the point of source.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07472332",
	"publication_date": "2008-12-30",
	"application_number": "11189895",
	"application_date": "2005-07-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for updating XML schema registry using schema pass by value with message",
	"summary": "",
	"abstract": "Schema information is provided with transmission of a data object. When a data object is converted to a transmission format, schema information for the object type is added to the transmission format element. The unmarshaling code uses the schema information to update a schema registry at the receiving end. The schema registry is used as a tool for converting the transmission format element back to the data element. The next time an object of that object type is sent to the recipient, the schema information is not added to the transmission format element.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07461075",
	"publication_date": "2008-12-02",
	"application_number": "11134494",
	"application_date": "2005-05-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for visualizing weblog social network communities",
	"summary": "",
	"abstract": "A method and system for providing a visual representation of electronic, on-line journals, such as those generally referred to as u201cWeblogsu201d or u201cBlogsu201d, that uses a treemap display object in a graphical user interface to represent social networking characteristics discovered in, and aggregated from a set of on-line journals. The generated display object includes on-line journal representations shown within the social network communities to which they belong. This visual organization is provided through a treemap representation, in which an enclosing region for a set of journals is broken up into sub-regions corresponding to social network communities. Representations of individual on-line journals are provided as inner regions within the sub-regions for the communities. The enclosing region, sub-regions and inner regions may be rectangular, or any other specific geometric shape as appropriate for a given application. The relative size of an inner region representing a specific journal may be determined based on how strongly related that journal is to the other members of the community, or on how active that journal is in terms of reads or writes, or based on some other criteria.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07373606",
	"publication_date": "2008-05-13",
	"application_number": "11138568",
	"application_date": "2005-05-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of addressing query scheduling and system resource requirements",
	"summary": "",
	"abstract": "Method, system and article of manufacture for scheduling queries. In particular, the scheduling options made available to a user for a particular unit of work are determined dynamically at the time of scheduling. In this way, the execution cost, for example, of a particular unit of work can be taken into account when determining which scheduling options to make available. In addition, or alternatively, system availability and/or user parameters may be accounted for when determining which scheduling options to make available.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07454404",
	"publication_date": "2008-11-18",
	"application_number": "10787477",
	"application_date": "2004-02-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, apparatus and computer program product for managing message flow in a multithreaded, message flow environment",
	"summary": "",
	"abstract": "In one form, a method for managing message flow includes processing messages concurrently by processing nodes in a computer software application. The processing nodes include at least one set of lock acquisition, system resource access and lock release nodes interconnected in a flow path. In such a set, the nodes are interconnected in a flow path and process a respective one of the messages in a sequence defined by the flow path. The processing includes granting access to a system resource exclusively for the set's respective message responsive to the lock acquisition node processing its respective message. The system resource is accessed for the message responsive to the set's system resource node processing the message. The accessing of the resource for the message includes changing a certain system state. The exclusive accessing of the system resource is released responsive to the set's lock release node processing the message.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07401334",
	"publication_date": "2008-07-15",
	"application_number": "10326147",
	"application_date": "2002-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and article for dynamic real-time stream aggregation in a network",
	"summary": "",
	"abstract": "A graphic user interface of a network client () includes a stock ticker from a stock server () and a news sidebar from a news server () over the IP addresses advertised to the client () in its list of mutli-homed addresses from the video server () specified under Stream Control Transmission Protocol (SCTP). The client accepts real-time data from the stock exchange server and the news agency server on the multi-homed IP addresses designated in the association with the video server () without knowing that the data is coming from a different source than the video server (). The real-time data feeds from the video, stock and news servers are aggregated on the client () with enhanced speed because the feeds come directly to the client and not via the video server. The operating systems of the home server and remote servers utilize SCTP and specialized commands to implement the enhanced speed of real-time data aggregation being streamed to network clients without requiring modifications to existing client systems.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07386624",
	"publication_date": "2008-06-10",
	"application_number": "10692124",
	"application_date": "2003-10-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and article for improved TCP performance during packet reordering",
	"summary": "",
	"abstract": "TCP congestion avoidance is implemented upon retransmission of a packet and is reverted back to the original congestion state upon receipt of an early acknowledgement (ACK), indicating reordering of packets, thereby eliminating a needless restriction on TCP bandwidth. Upon receiving an ACK to a retransmitted packet, it is determined if the ACK resulted from receipt of the original reordered packet or the retransmitted packet, based on the arrival time of the ACK at the sender. If the round-trip-time (RTT) for the retransmitted packet is much lower than the average or current calculated RTT for the network link between sender and receiver, then the retransmission occurred as a result of a reordering event, and the congestion window is restored back to its value prior to the retransmission, thereby permitting the network link to continue operating at its original increased throughput.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07385923",
	"publication_date": "2008-06-10",
	"application_number": "10640818",
	"application_date": "2003-08-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and article for rapid detection and avoidance of high data corrupting routes within a network",
	"summary": "",
	"abstract": "A receiving host in a TCP/IP network sends an acknowledgment indicating a received data packet is corrupt. The sending host will begin transmitting with a new field set in the IP header called a check-TCP-checksum bit, thereby requesting that all routers in the TCP/IP network perform a checksum on the entire received packet. Routers in the TCP/IP network will perform a complete checksum on an entire packet with the check-TCP-checksum bit set, and not just on the IP header. The routers continuously monitor the ratio of corrupt packets received on a particular port that fail the entire packet checksum to the total number of packets received on that port. If the ratio of corrupt-to-received packets exceeds a corruption threshold, the router assumes that the associated link is causing data corruption and issues a routing update indicating that the link is bad and should be avoided. Once the retransmission rate between the sender and receiver drops below a threshold level, the bad link has been detected and avoided within the TCP/IP network and the check-TCP-checksum option in the IP header is no longer set in data packets transmitted to the receiver host.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07394769",
	"publication_date": "2008-07-01",
	"application_number": "10640819",
	"application_date": "2003-08-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program product for providing a configuration specification language supporting incompletely specified configuration entities",
	"summary": "",
	"abstract": "In a hardware definition language (HDL) file among one or more files, one or more design entities containing a functional portion of a digital system are specified. The one or more design entities logically contain a plurality of latches having a respective plurality of different possible latch values that each corresponds to a different configuration of the functional portion of the digital system. With one or more statements in the one or more files, a multi-level Dial tree is defined that includes a selective control Dial (SCDial) entity at an upper level that is associated with at least one design entity. The SCDial entity has a Dial input, a plurality of Dial outputs coupled to inputs of the plurality of lower level Dials, and a mapping table indicating a mapping between each of a plurality of possible input values of the Dial input and a respective one of a plurality of sets of output values for the plurality of Dial outputs. At least one set of output values in the mapping table specifies output values for fewer than all of the plurality of Dial outputs. Each specified output value reflects a setting of at least one lower level Dial, and settings of the lower level Dials reflect which of the plurality of different possible configuration values is loaded in the plurality of configuration latches.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07426461",
	"publication_date": "2008-09-16",
	"application_number": "10880853",
	"application_date": "2004-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program product for providing a configuration specification language supporting selective presentation of configuration entities",
	"summary": "",
	"abstract": "In at least one hardware definition language (HDL) file, at least one design entity containing a functional portion of a digital system is specified. The design entity logically contains a latch having a respective plurality of different possible latch values. With one or more statements, a configuration entity is associated with the latch. The configuration entity has a plurality of different settings and each setting reflects which value is loaded in the associated latch. A controlling value set, indicating at least one controlling value for which presentation of a current setting of the configuration entity instance is restricted, is also defined in one or more files. Thereafter, in response to a request to present at least a partial state of the digital system, a current setting of the configuration entity instance is excluded from presentation by reference to a configuration database indicating the controlling value set.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07389490",
	"publication_date": "2008-06-17",
	"application_number": "10902595",
	"application_date": "2004-07-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program product for specifying a configuration for a digital system utilizing dial biasing weights",
	"summary": "",
	"abstract": "In a method of data processing, a database defines a Dial entity and at least one instance of the Dial entity. Each instance of the Dial entity has an input having a plurality of different possible input values and one or more outputs, and each of the plurality of different possible input values has a different associated output value set for the one or more outputs. Each instance of the Dial entity determines a value of at least one of a plurality of configuration latches in a digital system separate from the database. The database also associates with the Dial entity at least one set of biasing weights that, when applied, determines a probability of each instance of the Dial entity having particular ones of the plurality of different possible input values. In response to a call to set the plurality of configuration latches, the database is accessed to apply the at least one set of biasing weights to select one of the plurality of different possible input values for the at least one instance of the Dial entity. The plurality of configuration latches in the digital system are set based upon the output value set for the one or more outputs of the at least one instance of the Dial entity.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07434193",
	"publication_date": "2008-10-07",
	"application_number": "11345847",
	"application_date": "2006-02-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program product for specifying and using register entities to configure a simulated or physical digital system",
	"summary": "",
	"abstract": "In at least one hardware definition language (HDL) file, at least one design entity containing a functional portion of a digital system is specified. The design entity logically contains first and second latches each having a respective plurality of different possible latch values. With one or more statements, a first Dial instance is associated with the first latch and a second Dial instance is associated with the second latch. A setting of the first Dial instance thus controls which of the plurality of different possible values is loaded in the first latch, and a setting of the second Dial instance controls which of the plurality of different possible values is loaded in the second latch. With a statement, a Register instance is concurrently associated with both the first and the second latches, such that a setting of the Register instance controls the latch values loaded in both the first and second latches.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07454737",
	"publication_date": "2008-11-18",
	"application_number": "11552306",
	"application_date": "2006-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program product providing a configuration specification language having clone latch support",
	"summary": "",
	"abstract": "Methods, data processing systems, and program products supporting the insertion of clone latches within a digital design are disclosed. According to one method, a parent latch within the digital design is specified in an HDL statement in one of the HDL files representing a digital design. In addition, a clone latch is specified within the digital design utilizing an HDL clone latch declaration. An HDL attribute-value pair is associated with the HDL clone latch declaration to indicate a relationship between the clone latch and the parent latch according to which the clone latch is automatically set to a same value as the parent latch when the parent latch is set. Thereafter, when a configuration compiler receives one or more design intermediate files containing the clone latch declaration, the configuration compiler creates at least one data structure in a configuration database representing the clone latch and the relationship between the clone latch and the parent latch.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07395524",
	"publication_date": "2008-07-01",
	"application_number": "10651186",
	"application_date": "2003-08-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program product providing a configuration specification language supporting arbitrary mapping functions for configuration constructs",
	"summary": "",
	"abstract": "A method is disclosed of associating a mapping function with a configuration construct of a digital design defined by one or more hardware description language (HDL) files. According to the method, in the HDL files, a configuration latch is specified within a design entity forming at least a portion of the digital design. In addition, a Dial is specified that defines a relationship between each of a plurality of input values and a respective one of a plurality of different output values. The HDL files also include a statement that instantiates an instance of the Dial in association with the configuration latch such that a one-to-one correspondence exists between a value contained within the configuration latch and an input value of the instance of the Dial. The HDL files further include a statement associating the Dial with a mapping function that applies a selected transformation to values read from or written to the instance of the Dial.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07366999",
	"publication_date": "2008-04-29",
	"application_number": "11408835",
	"application_date": "2006-04-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program product providing a configuration specification language supporting arbitrary mapping functions for configuration constructs",
	"summary": "",
	"abstract": "A method is disclosed of associating a mapping function with a configuration construct of a digital design defined by one or more hardware description language (HDL) files. According to the method, in the HDL files, a configuration latch is specified within a design entity forming at least a portion of the digital design. In addition, a Dial is specified that defines a relationship between each of a plurality of input values and a respective one of a plurality of different output values. The HDL files also include a statement that instantiates an instance of the Dial in association with the configuration latch such that a one-to-one correspondence exists between a value contained within the configuration latch and an input value of the instance of the Dial. The HDL files further include a statement associating the Dial with a mapping function that applies a selected transformation to values read from or written to the instance of the Dial.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07392501",
	"publication_date": "2008-06-24",
	"application_number": "11408583",
	"application_date": "2006-04-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program product supporting presentation of a simulated or hardware system including configuration entities",
	"summary": "",
	"abstract": "Within a display device, a respective one of a plurality of design graphical representations is displayed for each of a plurality of hierarchically arranged design entity instances within a simulated system. The design entity instances include a particular design entity instance containing a latch that is represented by a particular design graphical representation. A configuration entity instance associated with the particular design entity is identified within a configuration database associated with the simulated system. The configuration entity instance has a plurality of different settings that each reflects a value of the latch. Within the display device, a configuration graphical representation of the configuration entity instance is presented in association with the particular design graphical representation corresponding to the particular design entity instance. In addition, a current setting of the configuration entity instance is presented concurrently with the configuration graphical representation.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07469400",
	"publication_date": "2008-12-23",
	"application_number": "11948461",
	"application_date": "2007-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program product supporting presentation of a simulated or hardware system including configuration entities",
	"summary": "",
	"abstract": "Within a display device, a respective one of a plurality of design graphical representations is displayed for each of a plurality of hierarchically arranged design entity instances within a simulated system. The design entity instances include a particular design entity instance containing a latch that is represented by a particular design graphical representation. A configuration entity instance associated with the particular design entity is identified within a configuration database associated with the simulated system. The configuration entity instance has a plurality of different settings that each reflects a value of the latch. Within the display device, a configuration graphical representation of the configuration entity instance is presented in association with the particular design graphical representation corresponding to the particular design entity instance. In addition, a current setting of the configuration entity instance is presented concurrently with the configuration graphical representation.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07386825",
	"publication_date": "2008-06-10",
	"application_number": "10902628",
	"application_date": "2004-07-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and computer program product for caching web content",
	"summary": "",
	"abstract": "The invention provides a method, system and computer program product for caching dynamic portal pages without changing the existing caching proxy infrastructure or the transportation protocol used by providing an advanced caching component. An advanced caching component provides the functionality that additional dynamic page specific cache information is provided as part of the response including the portal page. Each component in the portal that dynamically contributes page fragments to be aggregated to a portal page provides dynamic component specific cache information which includes component specific cache scope and expiration values. The component specific cache scope and cache expiration values are used to calculate dynamic page specific cache information resulting in a common minimum cache scope and a common minimum cache expiration values for a portal page to be aggregated. The dynamic page specific cache information ensures that the minimum cache scope is correctly chosen as contributed from the components and the minimum cache expiration does not exceed any of the component specific cache expiration values.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07421481",
	"publication_date": "2008-09-02",
	"application_number": "11242258",
	"application_date": "2005-10-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and computer program product for providing an intelligent event notification system",
	"summary": "",
	"abstract": "A method, system, and computer program product for providing an intelligent event notification system. The method includes selecting a type of event notification for an event. Determining the type of event notification is based in part on information elements associated with the event. The method also includes determining at least one optimal alert system to receive an event notification corresponding to the type of event notification selected. The determination is based in part on information elements associated with the event. The method further includes associating an alert trigger with the event notification and transmitting the event notification to the at least one optimal alert system upon activation of the alert trigger.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07400229",
	"publication_date": "2008-07-15",
	"application_number": "11098334",
	"application_date": "2005-04-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for business rules authoring and operation employing a customizable vocabulary",
	"summary": "",
	"abstract": "Methods and apparatus for authoring and executing an individualized language business rule. In one embodiment, a method comprises creating at least one individualized language resource, creating at least one individualized language rule referencing at least one of said individualized language resource, and transforming said at least one individualized language rule into computer executable format.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07444314",
	"publication_date": "2008-10-28",
	"application_number": "10725352",
	"application_date": "2003-12-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for dependency-based impact simulation and vulnerability analysis",
	"summary": "",
	"abstract": "A technique for determining a potential impact of a simulated condition of at least one subject component associated with a computing environment comprises the following steps/operations. First, one or more components in the computing environment which depend on the at least one subject component are identified and a potential condition status associated with each of the one or more identified components is determined. Then, information is presented to a user with respect to at least a portion of the one or more identified components based on the corresponding condition status. By way of example, the inventive techniques may be applied to a distributed computing environment. The computing environment may also be an autonomic computing environment.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07334222",
	"publication_date": "2008-02-19",
	"application_number": "10241397",
	"application_date": "2002-09-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for managing computing deployment in presence of variable workload",
	"summary": "",
	"abstract": "Automated or autonomic techniques for managing deployment of one or more resources in a computing environment based on varying workload levels. The automated techniques may comprise predicting a future workload level based on data associated with the computing environment. Then, an estimation is performed to determine whether a current resource deployment is insufficient, sufficient, or overly sufficient to satisfy the future workload level. Then, one or more actions are caused to be taken when the current resource deployment is estimated to be insufficient or overly sufficient to satisfy the future workload level. Actions may comprise resource provisioning, resource tuning and/or admission control.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07350186",
	"publication_date": "2008-03-25",
	"application_number": "10384973",
	"application_date": "2003-03-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and arrangements to manage on-chip memory to reduce memory latency",
	"summary": "",
	"abstract": "Methods, systems, and media for reducing memory latency seen by processors by providing a measure of control over on-chip memory (OCM) management to software applications, implicitly and/or explicitly, via an operating system are contemplated. Many embodiments allow part of the OCM to be managed by software applications via an application program interface (API), and part managed by hardware. Thus, the software applications can provide guidance regarding address ranges to maintain close to the processor to reduce unnecessary latencies typically encountered when dependent upon cache controller policies. Several embodiments utilize a memory internal to the processor or on a processor node so the memory block used for this technique is referred to as OCM.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07437517",
	"publication_date": "2008-10-14",
	"application_number": "11032876",
	"application_date": "2005-01-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods for de-serializing data objects on demand",
	"summary": "",
	"abstract": "The invention is directed to methods for de-serializing data from a software system, such as an enterprise software system, upon request. For example, methods are described for converting a data description language, such as the extensible markup language (XML), representation of data from an enterprise software system to an object when requested by a software application. A computing device connected to the enterprise software system loads multidimensional data via an XML data stream. The XML data is de-serialized to create objects as the objects are requested by software applications executing on the computing device. The remaining XML data may be stored on the computing device until the corresponding objects are requested by the software applications.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07464082",
	"publication_date": "2008-12-09",
	"application_number": "10998409",
	"application_date": "2004-11-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods to browse database query information",
	"summary": "",
	"abstract": "Systems, methods, and computer products that efficiently determine how columns, tables, and queries associated with a database are related to each other. The present invention enables a user to see at a glance in which queries certain columns and tables are used. The present invention may be implemented with a query miner module that includes a query browser module that improves browsing through queries and their components over the past. The preferred embodiment of the present invention provides an easy to use graphical interface showing the queries, tables, and columns in a tree structure. Further, the preferred embodiment of the present invention presents information about relationships and dimensions associated with a database and about columns, tables, and queries to the user without discernable lag time between the user's request and the generated information.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07447687",
	"publication_date": "2008-11-04",
	"application_number": "10144347",
	"application_date": "2002-05-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods, systems, and computer program products for implementing a reusable new product planning model",
	"summary": "",
	"abstract": "A method, system, and computer program product for implementing a reusable new product planning model is provided. The method includes gathering historical demand data for products in a product set and determining a launch period for the products, the historical demand data broken down by time periods. For each of the time periods, the method includes determining a transition percentage for each of the products, grouping the transition percentages by respective launch-based time periods, and averaging the transition percentages, resulting in an averaged transition range. The method further includes calculating fast and slow transition ranges for each of the launch-based time periods. The method further includes developing a production plan for a new product by applying one of the transition ranges to the new product before product launch, and allocating a remaining demand percentage to existing products in the product set using the selected transition range and for a corresponding launch-based time period.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07359758",
	"publication_date": "2008-04-15",
	"application_number": "11308395",
	"application_date": "2006-03-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Minimizing complex decisions to allocate additional resources to a job submitted to a grid environment",
	"summary": "",
	"abstract": "A method, system, and program for minimizing complex decisions to allocate additional resources to a job submitted to a grid environment are provided. First, at least one decision to allocate additional resources to at least one previously submitted job is stored in a decision cache, wherein said the least one decision is stored according to at least one characteristic of the at least one previously submitted job. When another job is submitted to the grid environment needs additional resources, the characteristic of the currently submitted job is compared with the characteristics of previous submitted jobs. If there is a match, then the previously made decision associated with the matching characteristic controls allocation of additional resources for the currently submitted job, such that complex decision making for allocation of additional resources is minimized by reusing previously stored decisions to allocate additional resources.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07406691",
	"publication_date": "2008-07-29",
	"application_number": "10756134",
	"application_date": "2004-01-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Model independent simulation",
	"summary": "",
	"abstract": "Embodiments of the present invention address deficiencies of the art with respect to event driven simulation and provide a method, data processing system and computer program product for mapping a process model for use in a generic simulation engine. In an embodiment of the invention, a generic model simulation method can include mapping a specifically formatted process representation into a generic process model, and providing the generic process model to a simulation engine. The method further can include executing a simulation on the generic process model in lieu of executing the simulation on the specifically formatted process representation.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07437277",
	"publication_date": "2008-10-14",
	"application_number": "11161651",
	"application_date": "2005-08-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multi-user, multi-timed collaborative annotation",
	"summary": "",
	"abstract": "A displayed document comprises an annotation widget, the widget associated with an annotation document and a corresponding annotation key in an annotation store. The annotation document associated with a workflow action program. A user with a predetermined privilege selects a widget and is presented with the annotation document. The user performs an annotation task modifying the annotation document and submits the annotation document to the annotation store, the submission triggering the workflow action program to progress the workflow to another step.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07472341",
	"publication_date": "2008-12-30",
	"application_number": "10983820",
	"application_date": "2004-11-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Navigating a UAV having an on-board digital camera to capture desired geographic area",
	"summary": "",
	"abstract": "Methods, systems, and products for navigating a UAV having an on-board digital camera are provided. Embodiments include identifying a geographic area not captured by the digital camera while the UAV is flying in a current flying pattern, and modifying the current flying pattern to capture an image of the identified geographic area. Identifying a geographic area not captured by the digital camera while the UAV is flying in a current flying pattern may be carried out by determining an area captured by the onboard camera, extrapolating the area captured by the onboard camera along the flying pattern to determine a perimeter of uncaptured geographic area, and determining the area of the uncaptured geographic area in dependence upon the perimeter.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07418320",
	"publication_date": "2008-08-26",
	"application_number": "11041923",
	"application_date": "2005-01-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Navigating UAVs in formation",
	"summary": "",
	"abstract": "Navigating UAVs in formation, including assigning pattern positions to each of a multiplicity of UAVs flying together in a pattern; identifying a waypoint for each UAV in dependence upon the UAV's pattern position; piloting the UAVs in the pattern toward their waypoints in dependence upon a navigation algorithm, where the navigation algorithm includes repeatedly comparing the UAV's intended position and the UAV's actual position and calculating a corrective flight vector when the distance between the UAV's actual and intended positions exceeds an error threshold. The actual position of the UAV may be taken from a GPS receiver on board the UAV.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07469183",
	"publication_date": "2008-12-23",
	"application_number": "11041919",
	"application_date": "2005-01-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Notifying users of device events in a networked environment",
	"summary": "",
	"abstract": "Notifying a user of a device event, including receiving a device event, associating the device event with a user, receiving an RFID signal from a user's RFID tag, determining the user's location in dependence upon the RFID signal, selecting a user notification appliance in dependence upon the user's location, and notifying the user of the device event with the selected user notification appliance. In typical embodiments, associating the device event with a user also includes reading a user ID from a device record for the device. In typical embodiments, associating the device event with a user also includes identifying the location of the device, identifying a previous location of the user, and associating the device event with a user in dependence upon the location of the device and the previous location of the user.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07432805",
	"publication_date": "2008-10-07",
	"application_number": "11953554",
	"application_date": "2007-12-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Notifying users of device events in a networked environment",
	"summary": "",
	"abstract": "Notifying a user of a device event, including receiving a device event, associating the device event with a user, receiving an RFID signal from a user's RFID tag, determining the user's location in dependence upon the RFID signal, selecting a user notification appliance in dependence upon the user's location, and notifying the user of the device event with the selected user notification appliance. In typical embodiments, associating the device event with a user also includes reading a user ID from a device record for the device. In typical embodiments, associating the device event with a user also includes identifying the location of the device, identifying a previous location of the user, and associating the device event with a user in dependence upon the location of the device and the previous location of the user.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07333014",
	"publication_date": "2008-02-19",
	"application_number": "10981268",
	"application_date": "2004-11-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "On-demand active role-based software provisioning",
	"summary": "",
	"abstract": "Automated software provisioning based upon a set of role definitions for a user of a configurable device such as a computer or personal digital assistant. The present invention may be realized as an enhancement or extension to currently available software distribution tools which are used to distribute software to remote and local machines, and to permit unattended software installation and maintenance. The invention provides role-based software provisioning which automatically distributes the appropriate software programs and updates to computers that are owned by users based on the role of each user, thereby avoiding the need for intensive manual efforts to determine which computers need what software. The invention may also be interfaced to a License Management system in order to accomplish automatic recovery of unused software licenses, and to obtain permission for installing new licenses, based on user role changes.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07409463",
	"publication_date": "2008-08-05",
	"application_number": "10728162",
	"application_date": "2003-12-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Parameter passing of data structures where API and corresponding stored procedure are different versions/releases",
	"summary": "",
	"abstract": "A method for passing parameters of data structures where an API and corresponding stored procedures are at different version/release levels is provided. A received data structure is parsed for a version identifier of a caller. The parsed version identifier is compared to a stored procedure version identifier and a determination is made with regards to a data structure compatibility or a data structure incompatibility. If a data structure compatibility is determined, all received data structure elements are parsed. If, however, a data structure incompatibility is determined, only data structure elements known to both the caller and the stored procedures are parsed.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07467386",
	"publication_date": "2008-12-16",
	"application_number": "10759661",
	"application_date": "2004-01-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Persistence of inter-application communication patterns and behavior under user control",
	"summary": "",
	"abstract": "An end-user or administrator is allowed to couple portlets in a portal through user interface events taking place on the portal display itself. When the portal is displayed, if the user actuates a control corresponding to a property in a portlet, a menu of actions that can be performed with that data by other portlets is provided to the user. In addition to this u201cconventionalu201d manner, an alternative manner of actuating the component is provided to the user such that if the user actuates the control in this alternative manner, the user is provided the option of making the chosen action u201cpersistent,u201d so that the next time the control is actuated by the user, or the associated property is otherwise produced, the chosen action is performed automatically, without requiring the user to choose an action.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07376739",
	"publication_date": "2008-05-20",
	"application_number": "10776040",
	"application_date": "2004-02-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Persistent group membership in a distributed computing system",
	"summary": "",
	"abstract": "A distributed system has a multiplicity of nodes. A group of the nodes subscribe to a group services process. The group is subject to dissolving. A list of persistent subscribers to the group is maintained. Subscriptions to members and states of the group that are persistent subscribers do not terminate in response to the group being dissolved. The persistent subscribers automatically receive a notice in response to the group being reestablished and do not need to re-subscribe to the group.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07395327",
	"publication_date": "2008-07-01",
	"application_number": "10741363",
	"application_date": "2003-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Personal video recording with machine learning for messaging",
	"summary": "",
	"abstract": "Machine learning for control of a personal video recorder (u201cPVRu201d), including providing records of transmissions of messages; identifying a message point in operation of a PVR; selecting, in dependence upon the message point, a message to be transmitted; and determining in dependence upon the records of transmissions of messages whether to transmit the selected message. Embodiments include determining whether to transmit the selected message in dependence upon a frequency with which the message is transmitted to a user. Embodiments include transmitting to users messages prompting for responses identifying commands; storing records of transmissions of messages, including storing records of responses; and selecting a message to be transmitted in dependence upon the records of responses to messages. Embodiments include structuring the selected message in dependence upon the records of responses to messages, including inserting in the selected message choices for a set of sequenced commands.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07433582",
	"publication_date": "2008-10-07",
	"application_number": "10180361",
	"application_date": "2002-06-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Personal video recording with storage space requirement checking",
	"summary": "",
	"abstract": "Administration of storage space requirements on personal video recorders (u201cPVRsu201d), including recording a show having a storage space requirement, and incrementing the show's storage space requirement. Embodiments include tracking a recording period for the show and actual storage space used during the recording period; comparing the storage space used with an amount of storage space projected to be used during the tracked recording period; and incrementing the show's storage space requirement if the storage space used is greater than the storage space projected to be used. Embodiments include incrementing the show's storage space requirement in accordance with a predetermined overallocation rate. Embodiments include incrementing a show's storage space requirement in dependence upon genre.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07366398",
	"publication_date": "2008-04-29",
	"application_number": "10180164",
	"application_date": "2002-06-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Policy driven autonomic computing-specifying relationships",
	"summary": "",
	"abstract": "An autonomic computing system and method determine policy definitions () and a set of available actions (); monitor resources distributed within the system; determine if the system is at a desired end state; and modify resource states by sending instructions for the resources to perform available actions. The policy definitions () specify: start order between resources, prioritization between resources, conditional activation of policies, desired end state of resources, and location limitation of resources. The system and method receive status information from available resources, and monitor and modify the system until it reaches the desired end state. The policy definitions () can be determined by specifying a user-defined system end state and resource relationships. The policy definitions () can further harvest implicit relationships between resources, via self-discovery, and underlying relationships among resources.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07451201",
	"publication_date": "2008-11-11",
	"application_number": "10675828",
	"application_date": "2003-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Private source code commenting",
	"summary": "",
	"abstract": "A method, computer program product, and data processing system for exchanging information regarding software source code among a team of developers is disclosed. In a preferred embodiment of the present invention, a developer associates commentary with a particular code feature, such as a function or object class. A list of intended recipients or readers of the commentary is obtained from the developer. Additional settings regarding such things as an expiration date for the commentary are also obtained from the developer. The source code with associated commentary is then made available to the intended readers. If desired, the source code with associated commentary may be transmitted the intended recipients via e-mail or an u201cinstant messageu201d or other form of notification can be transmitted to the intended recipients to notify them of the commentary to be read.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07454744",
	"publication_date": "2008-11-18",
	"application_number": "10614548",
	"application_date": "2003-07-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Programmable graphics processing engine",
	"summary": "",
	"abstract": "A fully programmable graphics processing engine is provided. The graphics processing engine includes three independent, programmable processors that run independent sets of instructions from independent instruction storage facilities. Graphics processing tasks may be distributed among the serially pipelined processors to allow for load balancing and parallel processing. The graphics processing engine may be a graphics co-processing core within a larger, general purpose computing system. Register files and storage units may be addressable by the system host processor. Each processor accepts incoming data for state or context updates. Each processor may execute a specific graphics processing function by executing a set of instructions when a predetermined memory address is accessed.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07388588",
	"publication_date": "2008-06-17",
	"application_number": "10937174",
	"application_date": "2004-09-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Query-driven partial materialization of relational-to-hierarchical mappings",
	"summary": "",
	"abstract": "Techniques are provided for automatically rewriting a relational-to-hierarchical mapping into one or more modified mappings. In this way, clients that prefer or require different portions of the mapping-defined data are supported. For example, in one aspect of the invention, a technique for modifying a relational-to-hierarchical mapping in accordance with at least one user query includes the following steps/operations. At least one query associated with a query language that supports a hierarchical data structure is obtained. Further, at least one relational-to-hierarchical mapping for use in translating data associated with a relational data structure into data associated with the hierarchical data structure is obtained. Then, the at least one relational-to-hierarchical mapping is modified based on the at least one query such that data specifically relevant to the at least one query may be generated in accordance with the modified relational-to-hierarchical mapping.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07469249",
	"publication_date": "2008-12-23",
	"application_number": "10795534",
	"application_date": "2004-03-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Querying markup language data sources using a relational query processor",
	"summary": "",
	"abstract": "An XML wrapper queries an XML document in an on-the-fly manner so that only parent nodes in the document that satisfy the query are extracted and then unnested. The parent nodes and associated descendent nodes are located using XPath expressions contained as options in data definition language (DDL) statements. The parent nodes satisfying the query and associated descendent nodes are extracted and stored outside of a database according to a relational schema. The wrapper facilitates applications that use convention SQL queries and views to operate on that information stored according to the relational schema. The wrapper also responds to query optimizer requests for costs associated with queries against external data sources associated with the wrapper.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07457810",
	"publication_date": "2008-11-25",
	"application_number": "10141921",
	"application_date": "2002-05-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "RDMA server (OSI) global TCE tables",
	"summary": "",
	"abstract": "In remote direct memory access (RDMA) transfers in a multinode data processing system in which the nodes communicate with one another through communication adapters coupled to a switch or network, there is a need for the system to ensure efficient memory protection mechanisms across jobs. A method is thus desired for addressing virtual memory on local and remote servers that is independent of the process ID on the local and/or remote node. The use of global Translation Control Entry (TCE) tables that are accessed/owned by RDMA jobs and are managed by a device driver in conjunction with a Protocol Virtual Offset (PVO) address format solves this problem.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07430615",
	"publication_date": "2008-09-30",
	"application_number": "11017456",
	"application_date": "2004-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Redundant storage of computer data",
	"summary": "",
	"abstract": "Redundant storage of computer data including encoding N data values through M linear expressions into M encoded data values and storing each encoded data value separately on one of M redundant storage devices where M is greater than N and none of the linear expressions is linearly dependent upon any group of Nu22121 of the M linear expression.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07360143",
	"publication_date": "2008-04-15",
	"application_number": "11136660",
	"application_date": "2005-05-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Rerouting ongoing telecommunications to a user",
	"summary": "",
	"abstract": "Rerouting telecommunications to a user including receiving a plurality of RFID signals from an RFID tag located with the user, anticipating a user's future location in dependence upon the RFID signals, selecting a telephony device in dependence upon the anticipated future location, and rerouting an ongoing call to the selected telephony device. In typical embodiments, selecting a telephony device in dependence upon the anticipated future location also includes identifying location based routing preferences for the user. In typical embodiments, selecting a telephony device in dependence upon the anticipated future location also includes identifying device-based routing preferences for the user. In typical embodiments, anticipating a user's future location in dependence upon the RFID signals also includes determining a first user location, determining a second user location, and predicting a user's future location in dependence upon the first user location and the second user location.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07436945",
	"publication_date": "2008-10-14",
	"application_number": "10981298",
	"application_date": "2004-11-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Routable application partitioning",
	"summary": "",
	"abstract": "A method, apparatus, system, and signal-bearing medium that in an embodiment determine the active partitions of an application and assign the active partitions among servers via a routing table. The routing table is sent to a client, who uses the routing table to send requests and/or messages to the active partitions. In an embodiment, the routing table includes identifiers of the active partitions and the associated partitions. If one of the servers fails or if the partitions have a loading imbalance, the partitions are reassigned via the routing table.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07356613",
	"publication_date": "2008-04-08",
	"application_number": "10920086",
	"application_date": "2004-08-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Schema management",
	"summary": "",
	"abstract": "Disclosed is a method, system, and program for managing schemas. A schema and one or more associated schema documents are registered. A schema information document is automatically generated based on the schema and the one or more associated schema documents. A request to be performed on at least one of the schema, an associated schema document, and the schema information document is processed.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07433940",
	"publication_date": "2008-10-07",
	"application_number": "10763013",
	"application_date": "2004-01-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Selecting a program to improve a service class by requesting the program to incrementally self-tune",
	"summary": "",
	"abstract": "A method, apparatus, system, and signal-bearing medium that in an embodiment request a program or programs to tune themselves to run faster or slower if a service class is not meeting its performance goal. In an embodiment, the program is repeatedly requested to incrementally tune itself until the performance goal is met or until no further improvement occurs. In various embodiments, the programs to be requested to tune themselves are selected based on whether the programs are bottlenecks for the service class, whether the programs do the majority of work for the service class, whether the programs easily meet their own performance goals, or whether the programs are low priority. In this way, the programs may be performance tuned in a way that is more effective and less intrusive than by adjusting global, system-level resource allocations.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07350195",
	"publication_date": "2008-03-25",
	"application_number": "10664546",
	"application_date": "2003-09-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Strict validation of inference rule based on abstraction environment",
	"summary": "",
	"abstract": "A method, system and article of manufacture for processing rule sets and, more particularly, for processing abstract rule sets. One embodiment provides a computer-implemented method of managing execution of an analysis routine configured to process one or more inputs. The analysis routine is defined by at least one abstract rule set having one or more abstract rules each having a conditional statement and a consequential statement. The method comprises determining, from the retrieved analysis routine, a predefined validating condition that needs to be satisfied by at least one of the inputs, and validating a particular data value defining the at least one of the inputs on the basis of the predefined validating condition. If the particular data value is not validated, a predefined action configured to avoid execution of the analysis routine on invalid inputs is performed.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07444332",
	"publication_date": "2008-10-28",
	"application_number": "11272588",
	"application_date": "2005-11-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method enabling future messaging directives based on past participation via a history monitor",
	"summary": "",
	"abstract": "A system and method for controlling the flow of documents by associating Globally Unique Identifiers with each original document, each reply document, each copy document and each forwarded document, such as e-mail messages. Historical analysis is performed on a locally stored history records containing the Globally Unique Identifiers extracted from received documents to determine which recipients are active participants and which are inactive participants, according to user preferences and thresholds. Lists for direct recipients (e.g. u201cTou201d list), carbon copy recipients, and blind copy recipients are automatically proposed to a user of a document handling system when authoring a new document, replying to a document, or forwarding a document, according to the results of the historical participation analysis, thereby stemming information flow to participants who are not active in an ad hoc asynchronous conversation.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07461151",
	"publication_date": "2008-12-02",
	"application_number": "10713740",
	"application_date": "2003-11-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for accessing different types of back end data stores",
	"summary": "",
	"abstract": "A system for exchange of data between a plurality of clients and at least one back end data store by using a central synchronization server having a connection to the clients. The clients generate data to be synchronized. The system includes a sync engine connected to the central synchronization server for performing synchronization with the central synchronization server, a single back end neutral interface associated with and connected to the sync engine, and a component assigned to each of the at least one back end data store. Each of the components include a back end dependent part having an interface with the single back end neutral interface and an interface with the assigned back end data store.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07404011",
	"publication_date": "2008-07-22",
	"application_number": "10516427",
	"application_date": "2003-04-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for creating and rendering client-side user interfaces via custom tags",
	"summary": "",
	"abstract": "A system and method for creating, rendering and controlling a user interface is provided. A server generates a mark-up language document containing custom tags and conventional tags. The custom tags are associated with machine-executable instructions operating on a client device. When the client device receives the markup language document containing custom tags, the client device processes the custom tags and inserts the machine-executable code into the document at the location of the custom tags. A browser operating on the client device then executes the code and renders the document on a display device.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07458019",
	"publication_date": "2008-11-25",
	"application_number": "10761139",
	"application_date": "2004-01-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for fault tolerant controller for network RAID",
	"summary": "",
	"abstract": "A fault-tolerant and efficient way of deducing a set of inconsistent stripes for a network RAID protocol, wherein clients forward input/output (I/O) to a particular controller device called the coordinator, which executes RAID logic and which sends out device IOs to the relevant storage devices. If the coordinator fails then a new coordinator reconstructs its state from the storage devices.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07318119",
	"publication_date": "2008-01-08",
	"application_number": "10977429",
	"application_date": "2004-10-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for planning and generating queries for multi-dimensional analysis using domain models and data federation",
	"summary": "",
	"abstract": "Data integration and data analysis using computing equipment, software as well as hardware, includes a system and method for integrating data from various data sources, structured and unstructured, without physically creating a data warehouse and automatically generating queries for analysis of the integrated data from a multitude of different views.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07337170",
	"publication_date": "2008-02-26",
	"application_number": "11037909",
	"application_date": "2005-01-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for prevention of buffer overflow intrusions",
	"summary": "",
	"abstract": "Disclosed as a system and method for providing enhanced security to processes running on a data processing system. The disclosed system and method selectively revokes execute privileges from memory pages being used for stacks of susceptible processes running on the data processing system. By selectively resetting execute privileges on a per page and per process basis, the system and method maintains system performance and provides enhanced security to processes running on the data processing system.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07386886",
	"publication_date": "2008-06-10",
	"application_number": "09708397",
	"application_date": "2000-11-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for real-time detection of computer system files intrusion",
	"summary": "",
	"abstract": "A system and method for real-time detection of computer system files intrusion consists in taking advantage of an existing Application Programming Interface (API) dedicated to the creation, modification and deletion of files in order to detect in real-time illegal modification of any vital file or directory of a computer system.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07318163",
	"publication_date": "2008-01-08",
	"application_number": "10753180",
	"application_date": "2004-01-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for secure configuration of sensitive web services",
	"summary": "",
	"abstract": "The present invention discloses a system and method for configuration of access rights to sensitive information handled by a sensitive Web-Service. In a case of requested configuration changes initiated by the client system the Web-Server system provides a configuration data file to the client system preferably using a SOAP-communication protocol. The changes of the configuration data file are exclusively performed offline at the client side and the updated configuration data file is signed with authentication information and sent as a part of a SOAP-request to the Web-Server system. The Web-Server system provides a filter component for identifying and discarding non-SOAP requests as well as an access control manager for providing authentication examination for incoming SOAP-requests. After successful passing these components the SOAP-request is used for updating the existing configuration data file.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07392391",
	"publication_date": "2008-06-24",
	"application_number": "10242129",
	"application_date": "2002-09-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for using hot plug configuration for PCI error recovery",
	"summary": "",
	"abstract": "A method, system, and program product for recovering from a bus error in a computer system having a hot plug interface. In accordance with the method of the present invention, an operating system transparent interrupt, such as a system management interrupt, is generated in response to a bus error. Responsive to the operating system transparent interrupt, the hot pluggable bus is scanned and a device associated with the error is identified by an interrupt handler invoked by the interrupt. Finally, a hot plug configuration manager, such as an advanced configuration and power interface is utilized to remove the identified device from system operations without having to restart the system.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07447934",
	"publication_date": "2008-11-04",
	"application_number": "11168145",
	"application_date": "2005-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method of dynamically weighted analysis for intrusion decision-making",
	"summary": "",
	"abstract": "An intrusion detection mechanism is provided for flexible, automatic, thorough, and consistent security checking and vulnerability resolution in a heterogeneous environment. The mechanism may provide a predefined number of default intrusion analysis approaches, such as signature-based, anomaly-based, scan-based, and danger theory. The intrusion detection mechanism also allows a limitless number of intrusion analysis approaches to be added on the fly. Using an intrusion detection skin, the mechanism allows various weights to be assigned to specific intrusion analysis approaches. The mechanism may adjust these weights dynamically. The score ration can be tailored to determine if an intrusion occurred and adjusted dynamically. Also, multiple security policies for any type of computing element may be enforced.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07450005",
	"publication_date": "2008-11-11",
	"application_number": "11334672",
	"application_date": "2006-01-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems, methods and computer programs for determining dependencies between logical components in a data processing system or network",
	"summary": "",
	"abstract": "Described are methods, apparatus and computer programs for determining run-time dependencies between logical components of a data processing environment. Components of the data processing environment are monitored by monitoring agents accessing run-time activity data via APIs of the managed system. A dependency generator identifies correlations between the run-time activity of the monitored components. For synchronous monitored systems, the dependency generator calculates an activity period for monitored components and determines which component's activity periods contain the activity periods of other components. Containment is used as an indicator of a likely dependency relationship, and a weighting is computed for each dependency relationship based on the consistency of containment.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07409676",
	"publication_date": "2008-08-05",
	"application_number": "10689417",
	"application_date": "2003-10-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Techniques for representing 3D scenes using fixed point data",
	"summary": "",
	"abstract": "A quantization transform, corresponding to a geometric object, is determined. The geometric object represents at least a portion of an object in a three-dimensional scene. The quantization transform is suitable for converting a floating point space to a fixed point space, where the floating point space contains floating point data corresponding to the geometric object. The quantization transform is used to convert floating point data to fixed point data. The floating point data is typically vertices corresponding to the geometric object. Additionally, a quantization transform corresponding to a geometric object is determined. The geometric object represents at least a portion of the three-dimensional scene. The quantization transform is suitable for converting a floating point space to a fixed point space, and the fixed point space contains one or more fixed point data corresponding to the geometric object. The floating point space defines at least the portion of the three-dimensional scene. At least the quantization transform is applied to the one or more fixed point data.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07432925",
	"publication_date": "2008-10-07",
	"application_number": "10719304",
	"application_date": "2003-11-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transparent coupling between compatible containers communicating over networks",
	"summary": "",
	"abstract": "A first container executing on a first computer determines, by using one or more messages defined by an open-standard protocol and communicated over one or more networks coupled to the second computer, whether the second container, executing on a second computer, can communicate using messages having a portion not defined by the open-standard protocol and having a portion defined by the open-standard protocol. The first container communicates, with the second container, at least one additional message having the portion not defined by the open-standard protocol and having the portion defined by the open-standard protocol. The portion not defined by the open-standard protocol occupies a predetermined part of the message that would be defined by the open-standard protocol if the open-standard protocol were used for the predetermined part.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07343426",
	"publication_date": "2008-03-11",
	"application_number": "10699371",
	"application_date": "2003-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Tunneling IPv6 packets",
	"summary": "",
	"abstract": "Methods, systems, and products are provided for tunneling IPv6 packets. Embodiments include receiving, by an origin IPv6 border router from an origin IPv6 host, an IPv6 packet having an IPv6 destination address; receiving, by an origin IPv6 border router from an origin IPv6 host, an IPv4 address for a destination IPv6 border router retrieved from a data structure associating IPv6 destination addresses with IPv4 addresses for destination IPv6 border routers; encapsulating, by the origin IPv6 border router, the IPv6 packet in an IPv4 packet; and sending the encapsulated packet to a destination IPv6 border router at the IPv4 address. In many embodiments, encapsulating, by the origin IPv6 border router, the IPv6 packet in an IPv4 packet is carried out by adding an IPv4 header to the IPv6 packet.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07437470",
	"publication_date": "2008-10-14",
	"application_number": "10992380",
	"application_date": "2004-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Use of hardware to manage dependencies between groups of network data packets",
	"summary": "",
	"abstract": "A task obtained by a communications processor is decomposed into one or more requests that form a request group. The requests of the request group are sent to main memory and responses to those requests are expected. There may be requests for a plurality of request groups being processed concurrently. However, responses to the request groups are to be returned to the communications processor in the order in which the request groups were sent from the communications processor. To ensure this ordering, dependencies between the request groups are tracked by hardware coupled to the communications processor.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07408945",
	"publication_date": "2008-08-05",
	"application_number": "10685252",
	"application_date": "2003-10-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Use of special directories for encoding semantic information in a file system",
	"summary": "",
	"abstract": "In an enhanced file system specialized operators are provided, which consolidate contextually sensitive selections of documents from widely scatterednn",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07437363",
	"publication_date": "2008-10-14",
	"application_number": "09929260",
	"application_date": "2001-08-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Use of virtual targets for preparing and servicing requests for server-free data transfer operations",
	"summary": "",
	"abstract": "A method for utilizing virtual targets and abstract copy orders in preparing and servicing requests for server-free data transfer operations in a data storage network. The abstract copy orders represent data transfers between virtual targets and real devices. They allow source target copy orders to be prepared separately from destination target copy orders. The abstract copy orders may then be converted into concrete copy orders involving only real device targets for execution by a data mover that implements the server-free data transfer operations.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07461131",
	"publication_date": "2008-12-02",
	"application_number": "10383951",
	"application_date": "2003-03-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Utilization of logical fields with conditional constraints in abstract queries",
	"summary": "",
	"abstract": "Methods, systems, and articles of manufacture are provided for enhancing abstract queries by utilizing logical fields with conditional constraints. Building abstract queries with logical fields configured with conditional constraints allows for optimized physical queries to be generated from corresponding abstract queries.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07363297",
	"publication_date": "2008-04-22",
	"application_number": "11038707",
	"application_date": "2005-01-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Virtual foldering system for blending process and content in a collaborative environment",
	"summary": "",
	"abstract": "A system and a process for combining document management and issue management with a hierarchical set of process steps in a unified context is described. A virtual foldering system provides a basic container for documents, issues, process steps, and other components. Each process step (or u201ctasku201d) is a virtual folder, which can contain contents and other process steps, thus resulting in a hierarchical definition of the overall process and content. The hierarchy of components may be described in extended markup language (u201cXMLu201d) and then deployed into a relational database management system (u201cRDBMSu201d), where it is used to define the structure of a process-driven application. Access control and personalization for users are provided through a permissions scheme that is based on user groups, roles, and organizations. Users are only presented with their assigned tasks and issues, as well as other portions of the process they need to be aware of. Associations provide linkage of components across contexts and thus sharing of information among activities and between groups. In addition, a formula-based calculation engine provides simplified access to information for integrated reporting and definition of custom business logic.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07379945",
	"publication_date": "2008-05-27",
	"application_number": "10690255",
	"application_date": "2003-10-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web services access to classification engines",
	"summary": "",
	"abstract": "A method and system for document analysis and retrieval. A remote host in a first computing system transmits a first portion and at least one additional portion of a document to a web service host in a second computing system. The web service host reconstructs the entire document from the received first portion and at the least one additional portion. After reconstructing the entire document, the web service host implements at least one of extracting, generating, and determining steps. The extracting step extracts text from the entire document to configure the text in a text format. The generating step generates document keys associated with the text from analysis of the text in the text format. The determining step determines from given categories of a document taxonomy, a set of closet categories to the document based on comparing the category keys of the given categories with the document keys.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07321880",
	"publication_date": "2008-01-22",
	"application_number": "10613560",
	"application_date": "2003-07-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data protection systems and methods",
	"summary": "",
	"abstract": "Systems and methods are provided for protecting electronic content from the time it is packaged through the time it is experienced by an end user. Protection against content misuse is accomplished using a combination of encryption, watermark screening, detection of invalid content processing software and hardware, and/or detection of invalid content flows. Encryption protects the secrecy of content while it is being transferred or stored. Watermark screening protects against the unauthorized use of content. Watermark screening is provided by invoking a filter module to examine content for the presence of a watermark before the content is delivered to output hardware or software. The filter module is operable to prevent delivery of the content to the output hardware or software if it detects a predefined protection mark. Invalid content processing software is detected by a monitoring mechanism that validates the software involved in processing protected electronic content. Invalid content flows can be detected by scanning the information passed across system interfaces for the attempted transfer of bit patterns that were released from an application and/or a piece of content management software.",
	"url": null,
	"owner": "Intertrust Technologies Corp.",
	"publication_number": "07406603",
	"publication_date": "2008-07-29",
	"application_number": "09653517",
	"application_date": "2000-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software self-defense systems and methods",
	"summary": "",
	"abstract": "Systems and methods are disclosed for protecting a computer program from unauthorized analysis and modification. Obfuscation transformations can be applied to the computer program's local structure, control graph, and/or data structure to render the program more difficult to understand and/or modify. Tamper-resistance mechanisms can be incorporated into the computer program to detect attempts to tamper with the program's operation. Once an attempt to tamper with the computer program is detected, the computer program reports it to an external agent, ceases normal operation, and/or reverses any modifications made by the attempted tampering. The computer program can also be watermarked to facilitate identification of its owner. The obfuscation, tamper-resistance, and watermarking transformations can be applied to the computer program's source code, object code, or executable image.",
	"url": null,
	"owner": "Intertrust Technologies Corp.",
	"publication_number": "07430670",
	"publication_date": "2008-09-30",
	"application_number": "09629546",
	"application_date": "2000-07-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Trusted and secure techniques, systems and methods for item delivery and execution",
	"summary": "",
	"abstract": "Documents and other items can be delivered electronically from sender to recipient with a level of trustedness approaching or exceeding that provided by a personal document courier. A trusted electronic go-between can validate, witness and/or archive transactions while, in some cases, actively participating in or directing the transaction. Printed or imaged documents can be marked using handwritten signature images, seal images, electronic fingerprinting, watermarking, and/or steganography. Electronic commercial transactions and transmissions take place in a reliable, u201ctrustedu201d virtual distribution environment that provides significant efficiency and cost savings benefits to users in addition to providing an extremely high degree of confidence and trustedness. The systems and techniques have many uses including but not limited to secure document delivery, execution of legal documents, and electronic data interchange (EDI).",
	"url": null,
	"owner": "Intertrust Technologies Corp.",
	"publication_number": "07392395",
	"publication_date": "2008-06-24",
	"application_number": "11102216",
	"application_date": "2005-04-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Trusted infrastructure support systems, methods and techniques for secure electronic commerce, electronic transactions, commerce process control and automation, distributed computing, and rights management",
	"summary": "",
	"abstract": "An integrated, modular array of administrative and support services are provided for electronic commerce and electronic rights and transaction management. These administrative and support services supply a secure foundation for conducting transaction-related capabilities functioning over electronic network-s, and can also be adapted to the specific needs of electronic commerce value chains. In one embodiment, a Distributed Commerce Utility having a secure, programmable, distributed architecture provides administrative and support services. The Distributed Commerce Utility may comprise a number of Commerce Utility Systems. These Commerce Utility Systems provide a web of infrastructure support available to, and reusable by, the entire electronic community and/or many of its participants. Different support functions can be collected together in hierarchical and/or networked relationships to suit various business models or other objectives. Modular support functions can combined in different arrays to form different Commerce Utility Systems for different design implementations and purposes.",
	"url": null,
	"owner": "Intertrust Technologies Corp.",
	"publication_number": "07415617",
	"publication_date": "2008-08-19",
	"application_number": "10895845",
	"application_date": "2004-07-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system of externalising/internalising data record that allow processing of part or all of the record",
	"summary": "",
	"abstract": "A method of external data storage in a system including a primary processing device, having a processor and a primary data storage unit, adapted to run application programs for processing active records in the processor and configured to store data belonging to active records in the primary data storage unit; and a secondary data storage system, accessible to the primary processing device, includes loading data belonging to an active record into the primary data storage unit and externalizing the record by transferring at least a piece of data belonging to the record to the secondary data storage system for storage. The step of externalizing a record includes the making of a call by an application program using data belonging to the record to an interface, arranged to transfer the piece of data to the secondary data storage system.",
	"url": null,
	"owner": "Irdeto Access B.V.",
	"publication_number": "07467284",
	"publication_date": "2008-12-16",
	"application_number": "11055881",
	"application_date": "2005-02-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for a programming environment for a simulation of a computer application",
	"summary": "",
	"abstract": "The system includes a novel software application interactive representation modeling language, a software application () operative to use the modeling language to create, read and modify interactive representation models of the proposed applications, a memory () to store requirement data and interactive representation model data, a software application () operative to read and update the interactive representation model data across a computer network, a software application () operative to maintain a record of the requirements and to administer operation of the system, a software application () operative to render interactive representations of the proposed applications in browser readable format, a software application () operative to allow multiple instances of other applications to access interactive representation data and requirement data residing in the memory and a software application () operative to allow an individual user's interactions with the system to be broadcast across a networked system to other users.",
	"url": null,
	"owner": "iRise",
	"publication_number": "07349837",
	"publication_date": "2008-03-25",
	"application_number": "10762428",
	"application_date": "2004-01-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data communication protocol in an automatic meter reading system",
	"summary": "",
	"abstract": "An automatic meter reading (AMR) system includes a fixed or mobile reader and an endpoint. The endpoint is interfaced to a utility meter and the fixed or mobile reader is capable of communicating with the endpoint via RF communication. In this system the fixed or mobile reader sends a message to the endpoint that includes a response mode direction; the response mode direction from the reader tells the endpoint to respond to the reader either in a mobile network mode or a fixed network mode.",
	"url": null,
	"owner": "Itron, Inc.",
	"publication_number": "07336200",
	"publication_date": "2008-02-26",
	"application_number": "10915706",
	"application_date": "2004-08-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multi-protocol, multi-interface communications device testing system",
	"summary": "",
	"abstract": "A multi-protocol, multi-interface communications device testing system is disclosed. The system simultaneously controls communication channels of a communications platform though multiple Interface Protocols, such as TDM, IP and Telephony Application Program Interfaces. The system also allows the creation of multi Interface Protocol Test Scenarios, and displays the results of executing the test results from all Protocols Interfaces and records and displays results.",
	"url": null,
	"owner": "IXIA",
	"publication_number": "07412034",
	"publication_date": "2008-08-12",
	"application_number": "11255403",
	"application_date": "2005-10-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for implementing a real-time event management platform",
	"summary": "",
	"abstract": "A method and apparatus for implementing a real-time enterprise event management system is disclosed. The enterprise event management (EEM) system couples together various u201cevent awareu201d computing resources that publish and subscribe to u201ceventsu201d that provide information about the state computing resources. All of the events are represented as eXtensible Mark-up Language (XML) documents. Chains of related events are known as u201cevent streamsu201d. In the real-time event management platform, the event streams are available to all other event-aware computing resources operating in the shared event driven environment. The three main components are a real-time messaging system or handing event messages, a rules engine for allowing specific event message handing rules to be created, and a enterprise directory schema for providing a comprehensive directory of all the available resources and the means in which the resources may be accessed.",
	"url": null,
	"owner": "Jarna, Inc.",
	"publication_number": "07454459",
	"publication_date": "2008-11-18",
	"application_number": "10236003",
	"application_date": "2002-09-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Diving computer with programmable display",
	"summary": "",
	"abstract": "A diving computer is provided. The diving computer includes a computer connected to a dot matrix screen to display information concerning a dive. The computer has an interface to an external personal computer for reprogrammably configuring the information displayed on the screen. The user may customize the information on one or more views of the screen in several ways. The user may select the desired information to be displayed, and may customize the size and placement of the information on one or more views. The diving computer also has a number of pre-programmed displays that may be selected, each of which present different layouts and organizations of diving related information.",
	"url": null,
	"owner": "Johnson Outdoors Inc.",
	"publication_number": "07383150",
	"publication_date": "2008-06-03",
	"application_number": "11451042",
	"application_date": "2006-06-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for comparing extensible markup language (XML) documents",
	"summary": "",
	"abstract": "A system and a method for comparing Extensible Markup Language (XML) documents includes providing two XML documents as XML objects to a comparison tool and providing a list of XML items to be either included or excluded from the comparison. The comparison tool provides an application program interface (API), which allows it to be plugged into any application. The adaptability of the comparison tool to any application and the ability to exclude items from the comparison, or limit the comparison to specific items, provide for a flexible tool that improves performance for a user.",
	"url": null,
	"owner": "JP Morgan Chase Bank",
	"publication_number": "07392471",
	"publication_date": "2008-06-24",
	"application_number": "11053481",
	"application_date": "2005-02-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application independent messaging system",
	"summary": "",
	"abstract": "A messaging system that isolates application programs from the underlying transport and routing mechanisms that are actually used to convey messages. This isolation is provided in part through the use of directory files. The directory files contain all of the specific details (e.g. conversion and routing parameters) necessary to interface with the transport and routing mechanisms. As the transport and routing details change (e.g. due to updated versions or new mechanisms) only the directory files need to be changed. The present invention further includes Message Processing Servers (MPSs) which provide additional messaging functionality such as message storage, tracing, reconciliation, statistical auditing, reformatting, content based routing and multicasting. As additional functionality is developed, this functionality can be flexibly incorporated into a new MPS.",
	"url": null,
	"owner": "JPMorgan Chase Bank, N.A.",
	"publication_number": "07458079",
	"publication_date": "2008-11-25",
	"application_number": "11289517",
	"application_date": "2005-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network router management interface with API invoked via login stream",
	"summary": "",
	"abstract": "A network router management interface for use in configuring a router and obtaining operational information provides an application programming interface (API) that permits clients to formulate requests and receive replies according to an extensible markup language such as XML. The router may transform a login stream at a router command line interface (CLI) to implement the XML-based API. For example, the management server accepts input from the CLI and, upon receipt of a particular command from the client, transforms the CLI into a programmatic interface for exchange of XML-tagged requests and XML-tagged replies according to the XML-based API. Providing access to the XML-based API via the CLI login shell enables the use of standard login, security, authentication and authorization techniques.",
	"url": null,
	"owner": "Juniper Networks, Inc.",
	"publication_number": "07363351",
	"publication_date": "2008-04-22",
	"application_number": "11446839",
	"application_date": "2006-06-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for enabling collaborative authoring of hierarchical documents",
	"summary": "",
	"abstract": "A method in a computer system is disclosed for enabling authors to work on hierarchical documents. The method comprises retrieving a hierarchical document from a server computing device, modifying the retrieved hierarchical document, sending an indication of the modification to the server computing device, and when the modification cannot be applied on the server computing device, reverting the modified hierarchical document to a current form of the hierarchical document on the server computing device.",
	"url": null,
	"owner": "Justsystems Canada Inc.",
	"publication_number": "07424671",
	"publication_date": "2008-09-09",
	"application_number": "10817013",
	"application_date": "2004-04-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hierarchical database management system, hierarchical database management method, and hierarchical database management program",
	"summary": "",
	"abstract": "A hierarchical database, in which a lower class inherits to a property of an super class, having a class code for each class to identify the class, includes a first classification system having a regular class, and a second classification system having the regular class and a synonymous class referring to and using the regular class of the first classification system, wherein the synonymous class has an identification information to identify it is the synonymous class, a class code of the synonymous class, and a class code of the regular class of the first classification system to which the synonymous class refers.",
	"url": null,
	"owner": "Kabushiki Kaisha Toshiba",
	"publication_number": "07333986",
	"publication_date": "2008-02-19",
	"application_number": "11086229",
	"application_date": "2005-03-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Processing data objects based on object-oriented component infrastructure",
	"summary": "",
	"abstract": "A method, system and computer program product for implementing a high level object-oriented component infrastructure is directed to providing efficient development of programmable applications and systems. Objects of a system form an object hierarchy including child-objects and parent-objects. The system components include metadata describing properties of objects that are encapsulated into each of the components. A programmable object-oriented system locates the components placed in one or several catalogs and reads the metadata. This metadata is then used by the system for determining which module needs to be loaded for creation of an instance of an object in order to support functionality requested by another system object or by an external application.",
	"url": null,
	"owner": "Kaspersky Lab, ZAO",
	"publication_number": "07418710",
	"publication_date": "2008-08-26",
	"application_number": "11868292",
	"application_date": "2007-10-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for latency and power efficient database searches",
	"summary": "",
	"abstract": "Methods, apparatus and systems perform searches in a CAM memory that is divided into one or more databases. A selector selects at least two the databases for a simultaneous search, and selects at least one of the databases for a sequential search.",
	"url": null,
	"owner": "Kawasaki Microelectronics, Inc.",
	"publication_number": "07467129",
	"publication_date": "2008-12-16",
	"application_number": "10325887",
	"application_date": "2002-12-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Feed-forward control in event-based manufacturing systems",
	"summary": "",
	"abstract": "Communication between machines in an event-based manufacturing system. In an event-based manufacturing system, material-specific data obtained for a material produced during a first manufacturing operation is used to govern a second manufacturing operation to decrease the likelihood of at least a delay event, a waste event, or poor quality of the product.",
	"url": null,
	"owner": "Kimberly-Clark Worldwide, Inc.",
	"publication_number": "07401728",
	"publication_date": "2008-07-22",
	"application_number": "11410268",
	"application_date": "2006-04-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integrating event-based production information with financial and purchasing systems in product manufacturing",
	"summary": "",
	"abstract": "Integrating event-based production information with financial and purchasing systems in product manufacturing. Some of the disclosed embodiments include a method of tracking production information, a method of analyzing event-based production information to provide financial reports, a method of adapting an online production documentation system to provide financial report data, and a production documentation system. Also disclosed are computer-readable media for storing a data structure representing an event-based delay or waste record populated during manufacturing, and a method of automatically generating an alert and providing an associated financial report in a process for manufacturing a product associated with an event-based information system. The embodiments are operable in an intelligent manufacturing system including a process for converting raw materials to a product, a process control system including one or more sensors capable of generating an alarm in response to an event that results in one of waste, machine delay, or decrease product quality, a data logger associated with the process control system for obtaining event parameters associated with the event, a database on a server for recording event parameters obtained by the data logger, and a reporting system cooperatively associated with the database for reporting productivity parameters regarding the process derived at least in part from the event parameters.",
	"url": null,
	"owner": "Kimberly-Clark Worldwide, Inc.",
	"publication_number": "07357298",
	"publication_date": "2008-04-15",
	"application_number": "10306881",
	"application_date": "2002-11-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "User interface for reporting event-based production information in product manufacturing",
	"summary": "",
	"abstract": "User interface for reporting event-based production information in product manufacturing. Some of the disclosed embodiments include a system, method, computer-readable medium, and display device for processing data stored in a database. The data includes automatically collected event-based production information records in a manufacturing system wherein each record represents an event and includes a timestamp, an event code, and a measure of cost or production loss associated with the event. The embodiments are operable in an intelligent manufacturing system including a process for converting raw materials to a product, a process control system including one or more sensors capable of generating an alarm in response to an event that results in one of waste, machine delay, or decrease product quality, a data logger associated with the process control system for obtaining event parameters associated with the event, a database on a server for recording event parameters obtained by the data logger, and a reporting system cooperatively associated with the database for reporting productivity parameters regarding the process derived at least in part from the event parameters.",
	"url": null,
	"owner": "Kimberly-Clark Worldwide, Inc.",
	"publication_number": "07380213",
	"publication_date": "2008-05-27",
	"application_number": "10306867",
	"application_date": "2002-11-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Delivery of any type of information to anyone anytime anywhere",
	"summary": "",
	"abstract": "Information delivery system and methods detects and organizes information into canonical topics, such as who, what, when, where, price, etc., and facilitates a user to persistently subscribe to topics, web users, web resources, event streams, etc. The system facilitates a user to register devices and applications on which to receive information, as it becomes available, related to the subscription(s). The system facilitates users to specify preferences for the topics, web users, web resources, and registrations, which prioritize delivery of information. The system senses information, aggregates the user's registrations, subscriptions, and preferences, and filters information a topic-interest basis. The system notifies a user based on the preferences.",
	"url": null,
	"owner": "KnowNow-Delaware",
	"publication_number": "07379963",
	"publication_date": "2008-05-27",
	"application_number": "09615663",
	"application_date": "2000-07-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Wireless addressable lighting method and apparatus",
	"summary": "",
	"abstract": "An improved technique of utilizing a centralized control protocol for lighting devices such as DALI. A technique is disclosed for utilizing such protocols in a wireless environment. The first step involves associating particular slave devices with a specified master control device, and a second step involves associating specific functions within the master device with specific slave devices.",
	"url": null,
	"owner": "Koninklijke Philips Electronics N.V.",
	"publication_number": "07417556",
	"publication_date": "2008-08-26",
	"application_number": "09841665",
	"application_date": "2001-04-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Selective encryption of electronic messages and data",
	"summary": "",
	"abstract": "A system includes a server to store a first portion of a message, and a client to store a complementary second portion of the message. The first portion of the message is encrypted and a message specific token comprising one or more encryption keys used to encrypt the first portion of the message is generated. The second portion of the message stored on the client is subsequently combined with the message-specific token to form a partially secured message at the client. Furthermore, the partially secured message including the message-specific token is delivered from the client to a recipient to facilitate access to both the first and second portions of the message by the recipient.",
	"url": null,
	"owner": "Kryptiq Corporation",
	"publication_number": "07469340",
	"publication_date": "2008-12-23",
	"application_number": "10394410",
	"application_date": "2003-03-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for approximating an editable surface",
	"summary": "",
	"abstract": "A system and methods are disclosed for automatically approximating an editable surface from a 3D data set or a 3D point set, which may be imaged in the form of a NURBS surface.",
	"url": null,
	"owner": "Landmark Graphics Corporation",
	"publication_number": "07352369",
	"publication_date": "2008-04-01",
	"application_number": "11118027",
	"application_date": "2005-04-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methods for enhancing an image of post-stack seismic data with pre-stack seismic data features",
	"summary": "",
	"abstract": "A system and methods for enhancing an image of post-stack seismic data, with pre-stack seismic data features, and displaying the enhanced image with the image of the post-stack seismic data are disclosed.",
	"url": null,
	"owner": "Landmark Graphics Corporation",
	"publication_number": "07319637",
	"publication_date": "2008-01-15",
	"application_number": "11231262",
	"application_date": "2005-09-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "OLAP query generation engine",
	"summary": "",
	"abstract": "A system and method for generating an On-Line Analytical Processing (OLAP) query. A query object is provided that supports a plurality of OLAP servers which use different structured query formats. An OLAP server is determined from among the OLAP servers for which the query will be executed based on a property of the query object. The query object is processed to generate a query statement using the structured query format that corresponds to the determined OLAP server.",
	"url": null,
	"owner": "Lawson Software, Inc.",
	"publication_number": "07363287",
	"publication_date": "2008-04-22",
	"application_number": "10645708",
	"application_date": "2003-08-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for electronic presentations with annotation of preview material",
	"summary": "",
	"abstract": "An electronic presentation system and method provides multiple display screens for presentation materials as well as permits dynamic annotations to presentation materials that do not permanently alter the presentation materials. In a multi-windowed display interface, a currently displayed slide or the next-to-display slide can be easily annotated or otherwise modified. Thus, the presentation materials can easily be directed to any one of the display screens and any annotations can be saved for future use or simply deleted.",
	"url": null,
	"owner": "Learning Tree International",
	"publication_number": "07454708",
	"publication_date": "2008-11-18",
	"application_number": "11188204",
	"application_date": "2005-07-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for integrating security and access for facilities and information systems",
	"summary": "",
	"abstract": "A system for integrating security and access for facilities and information systems is provided including a computer server, information systems, and facility protection systems. The information systems and facility protection systems are coupled for communication to the computer server via a network. Facility protection systems represent an access control system for controlling entry/exit to areas of buildings, such as with badges or other ID Credentials and other systems, such as intrusion detection and fire systems, to provide protection in facility environments. Information systems each represent a computer system requiring user authorization, via computers or terminals capable of connecting thereto, to access information resources or network environments protected by the computer system. Information systems may also include information protection systems requiring user authorization for external access to other information systems. The computer server has a central database which stores at least information defining users and their access privileges to the information systems and to areas of facilities controlled by access control system. Each of the information systems and facility protection systems sends event data to the computer server when an event occurs on its respective system, and an event transaction processor in the computer server determines action(s), if any, to take in response to one or more received events and accordingly sends action data to other information systems and facility protection systems to instruct such systems to automatically respond to security risks representing by such events in real-time. Central management of users and their access privileges, and monitoring of events is further provided.",
	"url": null,
	"owner": "Lenel Systems International, Inc.",
	"publication_number": "07380279",
	"publication_date": "2008-05-27",
	"application_number": "09906554",
	"application_date": "2001-07-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Controlling power usage of computing device components in holistic manner",
	"summary": "",
	"abstract": "Power usage of computing device components is controlled in a holistic manner. The projected total power consumption for the computing device to satisfy a power consumption policy for the device is determined. Power usage of each component of the computing device is controlled in a holistic manneru2014i.e., balancing the power usage of the component against the power usage of other componentsu2014so that the total power usage of the computing device falls within the projected total power consumption needed to satisfy the power consumption policy. How the user is currently utilizing the computing device may be periodically detected, based at least on a power consumption distribution of the components of the computing device. A current usage model is determined based on how the user is currently utilizing the computing device. The power usage of each component of the computing device is controlled based on the current usage model.",
	"url": null,
	"owner": "Lenovo (Singapore) Pte. Ltd.",
	"publication_number": "07383451",
	"publication_date": "2008-06-03",
	"application_number": "11062147",
	"application_date": "2005-02-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Encrypted file system using TCPA",
	"summary": "",
	"abstract": "A method for restricting access to an encryption key of an encrypted file system (EFS), whereby access is provided only when a computer system is booted in a trusted state. The EFS encrypts the files within a TPM chip according to TCPA specifications and simultaneously creates the encryption key, which is also stored in the TPM. The key is sealed to one or more platform control register (PCR) states (i.e., the TPM will export the key only when the PCRs are in a pre-defined state.). The original PCR states are modified during boot up of the computer system via a secure hashing algorithm, which extends a value of one PCR to a next PCR at each stage of the boot process and then hashes the value with the remaining content of the next PCR. When the system boot process is completed and before control passes to the user, the values within the PCRs are compared to values stored in a PCR table within the TPM, and the encryption key is exported to the OS kernel only when the PCR values match the table values. The control code of the TPM chip decrypts and exports the key only if the value of each and every PCR matches its corresponding table value. A complete match indicates that the computer system has completed a trusted boot sequence.",
	"url": null,
	"owner": "Lenovo (Singapore) Pte. Ltd.",
	"publication_number": "07343493",
	"publication_date": "2008-03-11",
	"application_number": "10108600",
	"application_date": "2002-03-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for data versioning and recovery using delta content save and restore management",
	"summary": "",
	"abstract": "A method, apparatus, and computer instructions for managing versioning data for memory segments. Responsive to a request from a requester to allocate a memory segment, the memory segment is allocated. A versioning data structure is created for the memory segment. The versioning data structure is used to store changes in data for the memory segment, and the memory segment includes a pointer to the versioning data structure. When a change in the data is detected for the memory segment, wherein the change in the data forms the delta data. Responsive to detecting the change in the data for the memory segment, the delta data is stored in the versioning data structure, wherein the versioning data structure is used to return the data in the memory segment to a prior state.",
	"url": null,
	"owner": "Lenovo (Singapore) Pte. Ltd.",
	"publication_number": "07395386",
	"publication_date": "2008-07-01",
	"application_number": "11037157",
	"application_date": "2005-01-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Scrollbar enhancement for browsing data",
	"summary": "",
	"abstract": "A graphical user interface for browsing information displayed to a user. The information displayed includes zero or more elements and may be displayed in a display window. The display window has a perimeter and a scrollbar is positioned along the perimeter. The scrollbar may have a first end and a second end and a slider located between the ends. The slider may be configured such that movement of the slider causes information in the display area to be scrolled. In one embodiment, the size of the slider is based on the size of the one more elements of information displayed in the display window. A data-line may be positioned adjacent the scrollbar and may have a plurality of tick marks. A graphical element, which may be displayed in phantom, may be used to associate the slider to the data-line.",
	"url": null,
	"owner": "Lexmark International, Inc.",
	"publication_number": "07328411",
	"publication_date": "2008-02-05",
	"application_number": "10804630",
	"application_date": "2004-03-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for providing banking services by use of mobile communication system",
	"summary": "",
	"abstract": "A method of providing banking services by use of a mobile communication system having a removable built-in integrated circuit (IC) card chip in which personal identification number (PIN) information and related information on financial accounts of a user are stored. The method includes selecting an electronic bankbook service and selecting any one from financial transactions for the electronic bankbook service and comparing the PIN information input at the mobile communication system with the PIN information stored in the IC card chip, and authenticating access to data stored in the IC card chip on the mobile communication system. The method further includes displaying financial account information of the user stored in the IC card chip in a display window of the mobile communication system and forming a financial transaction request message using the related information of the selected financial account through a banking application built in the mobile communication system, and transmitting the financial transaction request message to the banking server. The method further includes performing a predetermined customer authentication process with respect to the financial transactions and financial accounts at the banking server, and transmitting a financial transaction response message to the mobile communication system and displaying the resulting transaction history in the display window of the mobile communication system.",
	"url": null,
	"owner": "LG Telecom, Ltd.",
	"publication_number": "07374079",
	"publication_date": "2008-05-20",
	"application_number": "10872444",
	"application_date": "2004-06-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hardware acceleration system for logic simulation using shift register as local cache",
	"summary": "",
	"abstract": "A logic simulation processor stores in a shift register intermediate values generated during the logic simulation. The simulation processor includes multiple processor units and an interconnect system that communicatively couples the processor units to each other. Each of the processor units includes a processor element configurable to simulate at least a logic gate, and a shift register associated with the processor element. The shift register includes multiple entries to store the intermediate values, and is coupled to receive the output of the processor element. Each of the processor units further includes one or more multiplexers for selecting one of the entries of the shift register as outputs to be coupled to the interconnect system. Each of the processor units may further include a local memory for storing data from, and loading the data to, the simulation processor.",
	"url": null,
	"owner": "Liga Systems, Inc.",
	"publication_number": "07444276",
	"publication_date": "2008-10-28",
	"application_number": "11238505",
	"application_date": "2005-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "High bandwidth data transport system",
	"summary": "",
	"abstract": "The present invention provides for a methods, system, and apparatus relating to data transmission. One method of the present invention includes representing data using at least one pulse based on a Gaussian wave form, sending the at least one pulse over an electrically conductive guided media, and recovering the data from the at least one pulse. The present invention can be used in conjunction with telephony applications, cable tv applications, and data bus applications.",
	"url": null,
	"owner": "Lightwaves Systems, Inc.",
	"publication_number": "07376191",
	"publication_date": "2008-05-20",
	"application_number": "10427039",
	"application_date": "2003-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for controlling unmanned vehicles",
	"summary": "",
	"abstract": "A system ensures safety and security of teams of collaborative autonomous unmanned vehicles in executing a mission plan. The system includes a plurality of components, a first device, a second device, and a third device. The plurality of components perform situation analysis, mission planning, mission replanning, mission plan execution, and collaboration between the autonomous unmanned vehicles. The first device identifies safety critical components of the plurality of components. The second device identifies security sensitive components of the plurality of components. The third device isolates the safety critical components from contamination by other components of the plurality of components. The third device isolates security sensitive data from contaminating non-security sensitive components of the plurality of components.",
	"url": null,
	"owner": "Lockheed Martin Corporation",
	"publication_number": "07415331",
	"publication_date": "2008-08-19",
	"application_number": "11188829",
	"application_date": "2005-07-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Proton beam therapy control system",
	"summary": "",
	"abstract": "A tiered communications architecture for managing network traffic in a distributed system. Communication between client or control computers and a plurality of hardware devices is administered by agent and monitor devices whose activities are coordinated to reduce the number of open channels or sockets. The communications architecture also improves the transparency and scalability of the distributed system by reducing network mapping dependence. The architecture is desirably implemented in a proton beam therapy system to provide flexible security policies which improve patent safety and facilitate system maintenance and development.",
	"url": null,
	"owner": "Loma Linda University Medical Center",
	"publication_number": "07398309",
	"publication_date": "2008-07-08",
	"application_number": "10433817",
	"application_date": "2001-12-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for calculating business process durations",
	"summary": "",
	"abstract": "Provided is a system and method for calculating a time duration for a process or portion of a process. A timing interval based upon a single business process view can function regardless of multiple execution process paths. The claimed subject matter separates the business process definition from the execution process definition such that tracking points, which do not depend upon any particular execution process definition, may be inserted into the business process. Also provided is a timing interval calculation based upon two or more tracking points corresponding to a start point of the timing interval and/or two or more tracking points corresponding to an ending point of the timing interval. A user can arbitrarily select timing point within a process and employ those timing points to collect data and populate reports in a manner that is zero-code, i.e. does not require the user to write computer code.",
	"url": null,
	"owner": "Lombardi Software, Inc.",
	"publication_number": "07454310",
	"publication_date": "2008-11-18",
	"application_number": "11117763",
	"application_date": "2005-04-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and structure for improved testing of embedded systems",
	"summary": "",
	"abstract": "Methods and structure for standardized communication between a test operator, a host system, and an embedded system under test. Test program instructions are designed, written for, and executed on, an embedded system under test in accordance with standard API functions for message exchange. Still further, the invention provides for standards in the user interface to select a desired test, to start the test with defined parameters and to present reply and status information to the test operator. These user interactions are defined in a test configuration language of the present invention and preferably incorporated with the executable image file to define an integral test vehicle file. The present invention thereby reduces test sequence development time by providing standard API functions for message exchange between a host system test application and the system under test and provides for standardized user interaction in a flexible, easily maintained design language.",
	"url": null,
	"owner": "LSI Logic Corporation",
	"publication_number": "07385927",
	"publication_date": "2008-06-10",
	"application_number": "10178323",
	"application_date": "2002-06-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Adaptive classification of network traffic",
	"summary": "",
	"abstract": "Rules for classifying traffic in a communications network are set by collecting traffic data related to traffic that is input into a network node, processing the traffic data that is collected, and setting classification rules in response to the processed traffic data, wherein the set classification rules are used to classify subsequent input traffic. In an embodiment, subsequent traffic is classified according to the set classification rules. In another embodiment, traffic conditioning rules are also set in response to the processed traffic data and subsequent input traffic is conditioned according to the set traffic conditioning rules.",
	"url": null,
	"owner": "Lucent Technologies Inc.",
	"publication_number": "07366174",
	"publication_date": "2008-04-29",
	"application_number": "10321924",
	"application_date": "2002-12-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Destination call routing apparatus and method",
	"summary": "",
	"abstract": "A Destination Call Router network element is provided for Internet Protocol dial-up congestion relief, providing Public Switched Telephone Network off-load. The network element, a combination of an Asynchronous Transfer Mode switch and a Broadband Interworking Call Router with application software, is interposed as a node within the conventionally arranged PSTN. Call data is interworked to destination locations based upon call types associated with called directory numbers. Signaling messages for voice-type calls are forwarded over the standard telephony signaling network to destination End. Offices. Signaling for Internet Protocol calls is routed to a Remote Access Server via a Primary Rate Interface after translation to an applicable ISDN protocol, thereby bypassing destination End Offices for IP calls. For both call types, the network element controls its constituent ATM switch to direct ensuing call communications to the appropriate destination. Call Detail Records are collected for IP calls and forwarded to the existing call accounting system of the conventionally arranged PSTN.",
	"url": null,
	"owner": "Lucent Technologies Inc.",
	"publication_number": "07436851",
	"publication_date": "2008-10-14",
	"application_number": "09280618",
	"application_date": "1999-03-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed software application software component recovery in an ordered sequence",
	"summary": "",
	"abstract": "A distributed software application comprises a plurality of software components within a plurality of executables. A manager component for the distributed software application performs a recovery of two or more software components, of the plurality of software components, in an ordered sequence based on one or more dependency relationships among the plurality of software components.",
	"url": null,
	"owner": "Lucent Technologies Inc.",
	"publication_number": "07366949",
	"publication_date": "2008-04-29",
	"application_number": "10867590",
	"application_date": "2004-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Manager component resource addition and/or resource removal on behalf of distributed software application",
	"summary": "",
	"abstract": "A distributed software application comprises a plurality of software components within a plurality of executables. A manager component for the distributed software application handles: an addition of one or more first resources to the distributed software application on behalf of the distributed software application and/or a removal of one or more second resources from the distributed software application on behalf of the distributed software application.",
	"url": null,
	"owner": "Lucent Technologies Inc.",
	"publication_number": "07406678",
	"publication_date": "2008-07-29",
	"application_number": "10868144",
	"application_date": "2004-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for operating an open API network having a proxy",
	"summary": "",
	"abstract": "A telecommunication system, method, apparatus, and computer readable media that implements an open application program interface (API) system in which open API servers pass and receive API commands to applications through a novel proxy. The proxy assists implementing various management functions, such as assigning open API servers to application and monitoring the overall system, and service contract control, all beneficially in a transparent manner. The proxy enables the telecommunication system to handle geographically diverse applications and open API servers. All API command can, but need not, pass through the proxy.",
	"url": null,
	"owner": "Lucent Technologies Inc.",
	"publication_number": "07426737",
	"publication_date": "2008-09-16",
	"application_number": "10764754",
	"application_date": "2004-01-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Rule-based system and method for managing the provisioning of user applications on limited-resource and/or wireless devices",
	"summary": "",
	"abstract": "A system and a method for charging for directed provisioning and using of dynamic content to limited resource devices, through an integrated platform which handles all aspects of aggregation and management of such dynamic content. The integrated platform features a billing system for performing billing actions. The billing system of the present invention interacts with other components of the integrated platform in order to be able to determine the charge for particular triggering events, such as downloading dynamic content, and/or events which are actually triggered by the application itself. The charge is preferably determined according to one of a plurality of rules, as applied by a rules engine of the billing system. These rules are part of a charging policy, which may optionally be determined by the content provider.",
	"url": null,
	"owner": "Lucent Technologies Inc.",
	"publication_number": "07330717",
	"publication_date": "2008-02-12",
	"application_number": "10431437",
	"application_date": "2003-05-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Shutting down a plurality of software components in an ordered sequence",
	"summary": "",
	"abstract": "An apparatus in one example comprises a manager component in communication with a distributed software application. The distributed software application comprises a plurality of software components that run within one or more executables. The manager component shuts down the plurality of software components in an ordered sequence based on one or more dependency relationships among the plurality of software components.",
	"url": null,
	"owner": "Lucent Technologies Inc.",
	"publication_number": "07426715",
	"publication_date": "2008-09-16",
	"application_number": "10868142",
	"application_date": "2004-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Substitute manager component that obtains state information of one or more software components upon failure of a first manager component",
	"summary": "",
	"abstract": "An apparatus in one example comprises a substitute manager component that upon failure of a first manager component, obtains management responsibility for a distributed software application from the first manager component and queries one or more software components of the distributed software application for state information of the one or more software components. The substitute manager component employs the state information to determine whether one or more recovery actions are needed for the distributed software application to recover from the failure of the first manager component.",
	"url": null,
	"owner": "Lucent Technologies Inc.",
	"publication_number": "07386556",
	"publication_date": "2008-06-10",
	"application_number": "10868472",
	"application_date": "2004-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Speech recognition concept confidence measurement",
	"summary": "",
	"abstract": "Systems and methods for determining a confidence score associated with a decoding output of a speech recognition engine. In one embodiment, a method of determining the confidence score comprises arranging time frame and acoustic score data into an array, determining a phoneme sequence in the array that yields the highest sum of acoustic scores under certain constraints, e.g., minimum number of time frames and order of phonemes in a phoneme string. A relative score is derived by applying a functional relationship between the acoustic score and different sums comprising acoustic scores from the array. The confidence score, in some embodiments, depends at least in part on the relative score and a measure of ambiguity associated with similar sounding phrases being included in different concepts of a specified grammar.",
	"url": null,
	"owner": "Lumen Vox, LLC",
	"publication_number": "07324940",
	"publication_date": "2008-01-29",
	"application_number": "10789389",
	"application_date": "2004-02-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for analyzing data related to possible online fraud",
	"summary": "",
	"abstract": "Various embodiments of the invention provide methods, systems and software for analyzing data. In particular embodiments, for example, a set of data about a web site may be analyzed to determine whether the web site is likely to be illegitimate (e.g., to be involved in a fraudulent scheme, such as a phishing scheme, the sale of gray market goods, etc.). In an exemplary embodiment, a set of data may be divided into a plurality of components (each of which, in some cases, may be considered a separate data set). Merely by way of example, a set of data may comprise data gathered from a plurality of data sources, and/or each component may comprise data gathered from one of the plurality of data sources. As another example, a set of data may comprise a document with a plurality of sections, and each component may comprise one of the plurality of sections. Those skilled in the art will appreciate that the analysis of a particular component may comprise certain tests and/or evaluations, and that the analysis of another component may comprise different tests and/or evaluations. In other cases, the analysis of each component may comprise similar tests and/or evaluations. The variety of tests and/or evaluations generally will be implementation specific.",
	"url": null,
	"owner": "Markmonitor Inc.",
	"publication_number": "07457823",
	"publication_date": "2008-11-25",
	"application_number": "10997626",
	"application_date": "2004-11-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application integration testing",
	"summary": "",
	"abstract": "Application testing is disclosed. A definition of a test to be performed on a subject application is received in a generic form not specific to the subject application. The test is performed by exchanging data with the subject application, as required to perform the test, using a test connector application associated with the subject application to do at least one of (1) convert an input data to be supplied to the subject application during the test from a generic data format not specific to the subject application into an application-specific data format associated with the subject application, if the application-specific data format is different than the generic data format and (2) normalize an output data received from the subject application in the application-specific data format into the generic data format not specific to the subject application, if the application-specific data format is different than the generic data format.",
	"url": null,
	"owner": "Matador Technologies Corp.",
	"publication_number": "07421621",
	"publication_date": "2008-09-02",
	"application_number": "10943778",
	"application_date": "2004-09-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer system, compiler apparatus, and operating system",
	"summary": "",
	"abstract": "A compiler apparatus for a computer system capable of improving the hit rate of a cache memory, which includes a prefetch target extraction device, a thread activation process insertion device, and a thread process creation device. The compiler apparatus creates threads for performing prefetch and prepurge. Prefetch and prepurge threads created by this compiler apparatus perform prefetch and prepurge in parallel with the operation of the main program, by taking into consideration program priorities and the usage ratio of the cache memory.",
	"url": null,
	"owner": "Matsushita Electric Industrial Co., Ltd.",
	"publication_number": "07424578",
	"publication_date": "2008-09-09",
	"application_number": "10885708",
	"application_date": "2004-07-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure device and mobile terminal which carry out data exchange between card applications",
	"summary": "",
	"abstract": "A secure device comprises a data exchange card application carrying out data exchange between card applications isolated by a fire wall, card application plug-in data defining authentication processing of the data exchange card application, in such a manner that authentication processing between the card application and the data exchange card application is carried out in the same manner as authentication processing between the card application and a dedicated host terminal, and authentication key data used for this authentication processing. Data exchange and tie-up processing between card applications are possible in a secure device, or under the mediation of a mobile terminal, and rapid processing can be done. The card application has only to carry out the same operation as data exchange with a related dedicated host terminal. Also, tie-up processing between card applications can be carried out by only a mobile terminal side in which a secure device is loaded.",
	"url": null,
	"owner": "Matsushita Electric Industrial Co., Ltd.",
	"publication_number": "07360691",
	"publication_date": "2008-04-22",
	"application_number": "11049482",
	"application_date": "2005-02-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web map tool",
	"summary": "",
	"abstract": "A method of mapping at least a part of one or more web sites having web objects and web links is provided, whereby web objects and links are mapped as nodes and edges, respectively, in one or more web maps, each object being mapped to at least one corresponding node. The method allows a user to re-display selected items in a web map such that the item are distinguished from other items in the web map and are displayed in a clarified form. This enables a web map to be de-cluttered.",
	"url": null,
	"owner": "Maxamine International Pyt Ltd",
	"publication_number": "07428705",
	"publication_date": "2008-09-23",
	"application_number": "10148495",
	"application_date": "2000-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods of populating data structures for use in evolutionary simulations",
	"summary": "",
	"abstract": "In particular, this invention provides novel methods of populating data structures for use in evolutionary modeling. In particular, this invention provides methods of populating a data structure with a plurality of character strings. The methods involve encoding two or more a biological molecules into character strings to provide a collection of two or more different initial character strings; selecting at least two substrings from the pool of character strings; concatenating the substrings to form one or more product strings about the same length as one or more of the initial character strings; adding the product strings to a collection of strings; and optionally repeating this process using one or more of the product strings as an initial string in the collection of initial character strings.",
	"url": null,
	"owner": "Maxygen, Inc.",
	"publication_number": "07430477",
	"publication_date": "2008-09-30",
	"application_number": "11210239",
	"application_date": "2005-08-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program product for performing one or more tasks on a remotely located computer connected to a server computer via a data network",
	"summary": "",
	"abstract": "A method and computer executable program code are disclosed for performing one or more maintenance tasks on a remotely located computer connected to a server computer via a data network.",
	"url": null,
	"owner": "McAfee, Inc.",
	"publication_number": "07472419",
	"publication_date": "2008-12-30",
	"application_number": "11855970",
	"application_date": "2007-09-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for scoring queued frames for selective transmission through a switch",
	"summary": "",
	"abstract": "A method for selective transmission of through a switch according to a quality of service level includes providing one or more switches in a fibre channel fabric, particularly one or more fibre channel switches. The method includes assigning an initial score to the content of the one or more frames of data. The initial score may be adjusted by one or more alternative score components to determine one or more adjusted scores. The adjusted scores are compared. The method also provides for selecting frames having the highest adjusted scores and transmitting through the switches the frames having the highest adjusted scores.",
	"url": null,
	"owner": "McData Corporation",
	"publication_number": "07382736",
	"publication_date": "2008-06-03",
	"application_number": "10613627",
	"application_date": "2003-07-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for processing claims in real-time",
	"summary": "",
	"abstract": "Claim processing system providing an interface to permit pharmacy and medical management systems to use the Internet to transmit third-party insurance claims on a claim-by-claim basis in real-time or near-real-time to one or more claim servers that receive insurance claim requests over the Internet in an encrypted form. The one or more claim servers decrypt the claim requests and forward them to a health network application which facilitates the submission of the claims to insurance payers and the response of the insurance payers to the requests. Payer responses are received by the claim servers, encrypted and forwarded to the pharmacy and medical management systems in real-time or near real-time.",
	"url": null,
	"owner": "McKesson Financial Holdings Limited",
	"publication_number": "07370018",
	"publication_date": "2008-05-06",
	"application_number": "10133001",
	"application_date": "2002-04-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Real-time media captioning subscription framework for mobile devices",
	"summary": "",
	"abstract": "A subscription-based system for providing caption information for one or more mobile devices includes a communication network. Some techniques employed feature a system for providing subscription services for near-real time caption information for one or more mobile devices. The system includes a communication network for communicating to the one or more mobile devices, a transcriber connected with the communication network and configured for transcribing an event to generate caption data. The caption data includes transcribed data and control code data. The system includes a subscription gateway configured for near real time transfer of the transcribed data over the communication network to the one or more mobile devices. The subscription gateway is configured to provide access for the transcribed data to the one or more mobile devices.",
	"url": null,
	"owner": "Media Captioning Services",
	"publication_number": "07421477",
	"publication_date": "2008-09-02",
	"application_number": "11087023",
	"application_date": "2005-03-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Cross-platform framework-independent synchronization abstraction layer",
	"summary": "",
	"abstract": "This invention allows content providers to use plug-ins or compatible software objects (such as Javau2122 applets) to build, for example, interactive streaming media content that is fully interactive but independent of the particular underlying hardware and software technologies, such as RealNetworksu2122 G2, Microsoft Corporation's NetShowu2122, a desktop PC, or a television.",
	"url": null,
	"owner": "Mediaplatofrm On-Demand, Inc.",
	"publication_number": "07404194",
	"publication_date": "2008-07-22",
	"application_number": "10719641",
	"application_date": "2003-11-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for delivery of targeted video programming",
	"summary": "",
	"abstract": "A system residing preferably in a television set-top box monitors the television watching habits of one or more viewers and creates one or more profiles for each viewers descriptive of various characteristics of each viewers, including television watching preferences and demographics. The set-top box is able to select among various available video programming segments to create customized and/or targeted video programs for delivery to the viewer or viewers as a linear program. The customized linear video programs may include targeted content, advertising, and other video programming.",
	"url": null,
	"owner": "Metabyte Networks, Inc.",
	"publication_number": "07370342",
	"publication_date": "2008-05-06",
	"application_number": "11438928",
	"application_date": "2006-05-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Internet-based system for enabling information-related transactions over the internet",
	"summary": "",
	"abstract": "A novel transaction-enabling method and system are disclosed, wherein a transaction-enabling Java-Applet is embedded within an HTML-encoded document stored in an HTTP server at predetermined URL. When a code symbol (e.g., magstripe or bar code) encoded with the URL is read using a code symbol reader interfaced with a Java-enabled Internet terminal, the corresponding HTTP document is automatically accessed and displayed at the terminal, and the transaction-enabling Java-Applet initiated for execution so that the customer, consumer or client desiring the transaction can simply and conveniently conduct the information-related transaction over the Internet. The transaction-enabling Internet terminal can be in the form of an Internet kiosk installed in a public location, in the manner as conventional ATMs. By virtue of the present invention, universal transaction machine (UTMs) can be easily deployed for use by the mass population so that they can easily conduct various types of transaction over the Internet.",
	"url": null,
	"owner": "Metrologic Instruments, Inc.",
	"publication_number": "07341191",
	"publication_date": "2008-03-11",
	"application_number": "11337820",
	"application_date": "2006-01-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for identifying programming object attributes",
	"summary": "",
	"abstract": "The present invention provides a method and computer-readable medium for searching for programming objects on a computer system. Under one aspect of the invention, optional search attributes are used to order a list of references to found programming objects. Under a second aspect of the invention, object attributes that are stored outside of a static attribute storage area are inspected during the search for programming objects.",
	"url": null,
	"owner": "Micosoft Corporation",
	"publication_number": "07451159",
	"publication_date": "2008-11-11",
	"application_number": "11078567",
	"application_date": "2005-03-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Techniques for generating serial presence detect contents",
	"summary": "",
	"abstract": "Techniques are presented for automatically generating Serial Presence Detect (SPD) contents. Standards for specific values associated with SPD contents are electronically represented with SPD tokens and rules. When a memory module is identified, a string of needed SPD tokens are acquired for that memory module. The SPD tokens are searched for in the standards and specific SPD values are assembled for the memory module based on the defined rules. The resulting SPD values which are associated with the rules form the needed SPD contents for the memory module. The SPD contents are used to configure an Electrically Erasable Programmable Read-Only Memory (EEPROM) on a memory module.",
	"url": null,
	"owner": "Micron Technology, Inc.",
	"publication_number": "07472248",
	"publication_date": "2008-12-30",
	"application_number": "11458053",
	"application_date": "2006-07-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Text based markup language resource interface",
	"summary": "",
	"abstract": "A software control method and apparatus for displaying a text based markup language interface. The interface can interact with a computer to provide reference documents, install system drivers and perform various system utilities. The interface can reference optical drives, hard disk drives or other storage medium and files available over a network, such as a local area network (LAN) or a wide area network (WAN) including the Internet. A graphical user interface using a text markup language such as hypertext markup language (HTML) can allow for activation of a user interactive control such as an icon or a hyperlink. Activation of an interactive control can hook onto a hypertext link target associated with the activated user interactive control result in the performance of an initial action responsive to variables including the control, a uniform resource locator associated with the interactive control and the hypertext link target.",
	"url": null,
	"owner": "Micron Technology, Inc.",
	"publication_number": "07366985",
	"publication_date": "2008-04-29",
	"application_number": "09349735",
	"application_date": "1999-07-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Access driven filtering",
	"summary": "",
	"abstract": "A test domain configuration module generates graphical user interfaces for identifying information about desired tests such as data types and domain configurations, and collects information used by other modules to generate tests. The identified information may include, for example, an abstract syntax, a static semantic, max counts on instances of data types, or costs of field accesses or data types for max path costs or max expression costs. A test input generator, generates test input for the identified and configured data types. In one case, the generated test inputs are generated as tree data structures. A predicate determines whether a generated test input follows semantic conditions. A test input evaluator counts instances of data types in, sums paths through, or sums total costs of, the generated test inputs. A test acceptance module saves test inputs acceptable to the predicate and the test input evaluator.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07444622",
	"publication_date": "2008-10-28",
	"application_number": "10650297",
	"application_date": "2003-08-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Accessibility system and method",
	"summary": "",
	"abstract": "A method and system providing a client with user interface information are described. An accessibility system for providing user interface information to a client. The accessibility system comprises an accessibility system core including user interface automation services and APIs. The user interface automation tools filter information based on whether the user interface information is interesting to the client. The accessibility system additionally comprises a client side interface including a logical tree for revealing user interface information that is interesting to the client and for hiding user interface information that is not interesting to the client. The accessibility system also comprises a server side interface for facilitating information transfer from a server side regardless of the server side technology.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07434167",
	"publication_date": "2008-10-07",
	"application_number": "10367226",
	"application_date": "2003-02-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Adaptive flow control protocol",
	"summary": "",
	"abstract": "A method and system for directing data transfers between applications and devices residing on different computers or devices using an adaptive flow control protocol has been described. When an application or device requests to transfer data with another application or device, adaptive flow control protocol adapts the way data is transferred by observing when an application that is receiving data posts a receive buffer and detects the receive buffer's size. Based upon the application's or device's behavior, the adaptive flow control protocol transfers the data in a mode that is best suited for the application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07418516",
	"publication_date": "2008-08-26",
	"application_number": "11248061",
	"application_date": "2005-10-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Adaptive machine translation service",
	"summary": "",
	"abstract": "An adaptive machine translation service for improving the performance of a user's automatic machine translation system is disclosed. A user submits a source document to an automatic translation system. The source document and at least a portion of an automatically generated translation are then transmitted to a reliable modification source (i.e., a human translator) for review and correction. Training material is generated automatically based on modifications made by the reliable source. The training material is sent back to the user together with the corrected translation. The user's automatic translation system is adapted based on the training material, thereby enabling the translation system to become customized through the normal workflow of acquiring corrected translations from a reliable source.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07383542",
	"publication_date": "2008-06-03",
	"application_number": "10600297",
	"application_date": "2003-06-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Address book clearinghouse interface system and method",
	"summary": "",
	"abstract": "The present invention provides an application programming interface (u201cAPIu201d) to address book management functions for accessing and managing an integrated online address book clearinghouse. The API receives function calls from applications and executes one or more functions in response to the function calls. The address book functions manage address books of the integrated online address book clearinghouse by adding, deleting, updating, and finding address books, contacts, and groups of contacts of the address books. The API also verifies identity information to assure that each function call has authorization to access the desired address book. The API further includes a parameter processing module for processing function-specific parameters passed in data envelopes to the API by the applications. The API also includes a response generating module for responding to the application that sent a function call to the API.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07337448",
	"publication_date": "2008-02-26",
	"application_number": "10606991",
	"application_date": "2003-06-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Analyzing tabular structures in expression recognition",
	"summary": "",
	"abstract": "A mechanism for recognizing and inputting handwritten mathematical expressions into a computer by providing part of a multi-path framework is described. The part of the multi-path framework is tabular structure analysis component that is designed to determine tabular structures, such as ones defined by brackets, within handwritten mathematical expressions. A method for determining tabular structures in a handwritten mathematical expression includes determining whether a symbol representative of input strokes corresponds to a tabular structure associated with a mathematical expression. The tabular structure may be a matrix or multi-line expression. The method includes dividing input strokes into rows and columns and determining the existence of one or more brackets that define a tabular structure.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07447360",
	"publication_date": "2008-11-04",
	"application_number": "11155783",
	"application_date": "2005-06-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "API schema language and transformation techniques",
	"summary": "",
	"abstract": "An API schema language and transformation techniques allow an application programming interface to be defined in a markup language. This interface definition can then be transformed into a non-markup language source file. Examples of transformation techniques include techniques to transform the interface definition into a component object model (COM) header file, a documentation file that describes the contents of the non-markup language source file, and a proxy object code file.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07363619",
	"publication_date": "2008-04-22",
	"application_number": "11038548",
	"application_date": "2005-01-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for automatically manipulating software products",
	"summary": "",
	"abstract": "A manipulation tool (e.g., u201cthe XABLE toolu201d) provides a user interface (UI) automation library that allows a tool user to find existing UI objects and then perform a UI action on such UI objects. In one exemplary application, the manipulation tool can be used by script writers to automatically drive the UI of an application under test. A plurality of selectable search strategies are provided for searching for UI objects. Further, an event handling object is provided for monitoring the firing of UI objects.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07451455",
	"publication_date": "2008-11-11",
	"application_number": "10609229",
	"application_date": "2003-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application identification and license enforcement",
	"summary": "",
	"abstract": "The restriction of particular resources includes providing a digital signature for unauthorized resources based on a structure-related parameter of the resource. Thus, attempts at circumventing recognition of such resource will likely result in altering the overall functionality of the resource. Further, such digital signatures are encoded in a critical file required for loading of a resource, thus ensuring that the identity of the resource is considered before execution thereof. Enforcement of the resource restriction includes generating a verification signature for a resource that requests loading. The verification signature is compared to the signature coded into the critical file, and a positive match results in the resource being blocked from loading.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07464270",
	"publication_date": "2008-12-09",
	"application_number": "10625312",
	"application_date": "2003-07-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application program interfaces and structures in a resource limited operating system",
	"summary": "",
	"abstract": "A set of Application Program Interfaces (APIs) for a resource-limited environment are disclosed. The APIs provide a mechanism for a computer application to interface with various components and modules of an operating system for a resource-limited environment. The APIs further provide a mechanism to interface with input/output devices commonly found in embedded systems running in a resource-limited environment.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07472067",
	"publication_date": "2008-12-30",
	"application_number": "10985806",
	"application_date": "2004-11-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application programming interface that maps input device controls to software actions",
	"summary": "",
	"abstract": "A system for using computer input devices with software applications is disclosed. The system includes an input device mapper API, which uses a language of semantics as an interface between input devices and software applications. The input device mapper receives information about which semantics the devices connected to the computer are able to implement, and which semantics correspond to actions that a user can request the software to perform. The input device mapper maps controls on the available devices into user-requestable software actions by matching, as closely as possible, device controls and software actions that correspond to the same semantic. The system thus makes input devices and software applications transparent to each other, and permits a software application to be designed to operate without regard to which input device is being used to control its actions.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07369117",
	"publication_date": "2008-05-06",
	"application_number": "11146824",
	"application_date": "2005-06-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Audio buffer configuration",
	"summary": "",
	"abstract": "An audio buffer configuration file is a data structure of configuration information that includes an audio buffer identifier to uniquely identify audio buffers that are instantiated from the configuration information. The information can include a buffer identifier to identify the buffer as a sink-in audio buffer that receives a stream of audio data from an audio data source, or as a mix-in audio buffer that receives one or more streams of audio data from other audio buffers. Further, the information can include logical bus identifiers to uniquely identify one or more logical buses that correspond to the audio buffer, where an individual logical bus streams audio data to the audio buffer when the audio buffer is created. The configuration information can also include an audio effects list to identify one or more audio effects that are instantiated as components of the audio buffer when the audio buffer is instantiated.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07376475",
	"publication_date": "2008-05-20",
	"application_number": "10093069",
	"application_date": "2002-03-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Audio buffers with audio effects",
	"summary": "",
	"abstract": "An audio buffer includes one or more audio effect resources that modify audio data received from an audio data source. A first audio effect resource in the audio buffer receives audio data from the audio data source and modifies the audio data to generate a stream of audio data. Subsequent audio effect resource(s) in the audio buffer receives the stream of audio data from the first audio effect and further modifies the audio data to generate a stream of modified audio data. The stream of modified audio data can then routed from the audio buffer to a second audio buffer, or communicated to an audio rendering component that produces an audio rendition corresponding to the modified audio data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07444194",
	"publication_date": "2008-10-28",
	"application_number": "11467829",
	"application_date": "2006-08-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automated business software application integration",
	"summary": "",
	"abstract": "Automatic business software application is provided. Aspects of business, including objects and activities are classified and described in a comprehensive, standard manner. When a business software component is installed, a discovery manager identifies capabilities and requirements of the software based upon information describing the software in accordance with the standardized classification. The software component is selectively bound to one or more roles of a model-driven bus. In some aspects, a standardized software adapter is able to facilitate use of embodiments of the present invention with prior art software systems. Additional software layers and overhead facilitate the management and operation of multiple software components.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07395540",
	"publication_date": "2008-07-01",
	"application_number": "10726879",
	"application_date": "2003-12-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automated recovery of computer appliances",
	"summary": "",
	"abstract": "Aspects of the invention provide methods and architectures for enhancing the reliability of computer appliances and reducing the possibilities that human intervention is necessary in the event of a system failure or failure condition. The provided architecture is extensible and provides a generalized framework that is adaptable to many different types of computer appliances. One aspect of the invention provides a boot up redundancy component to ensure that a computer appliance can be appropriately booted. In the described embodiment the appliance hard drive is configured with multiple partitions that can be utilized to boot the appliance thereby reducing the chances that the appliance will not boot. In addition, an architecture is disclosed that comprises one or more resource monitoring components that monitor an associated appliance resource for a failure condition. The resource monitoring components are programmed to attempt to remedy certain failure conditions that they detect. An appliance monitoring service is also provided and is programmed to attempt to remedy failure conditions that are not remedied by one or more of the resource monitoring objects.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07409584",
	"publication_date": "2008-08-05",
	"application_number": "11383789",
	"application_date": "2006-05-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automated response to computer user's context",
	"summary": "",
	"abstract": "Techniques are described for providing information about a current state that is modeled with multiple state attributes. In some situations the providing includes receiving from a first client an indication of an interest in receiving values for an indicated one of the state attributes of the modeled current state, receiving from a second client an indication of an interest in receiving values for another of the state attributes of the modeled current state, and, in response to receiving a value for the indicated one attribute from a first source, determining that the first client has an interest in receiving the received value and supplying the received value to the first client.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07346663",
	"publication_date": "2008-03-18",
	"application_number": "11567695",
	"application_date": "2006-12-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automated system that tests software on multiple computers",
	"summary": "",
	"abstract": "A system by which a software product may be tested on multiple client computers on various platforms. Product developers submit requests for tests on their products, in the form of test packets, to a test component, via an API. For each platform and language (i.e., group) on which a product developer wants a product tested, the product developer provides a test packet that defines tests that the product developer wants conducted on the product in that group. The test component searches, via an autolab component, for an available client machine for performing the tests in the test packet. The autolab component finds an available client computer, and the client machine is assigned the test packet. The client machine performs the tasks in the test packet, and forwards the results back to the test component.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07437713",
	"publication_date": "2008-10-14",
	"application_number": "10043792",
	"application_date": "2002-01-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic batching of tasks in a build process",
	"summary": "",
	"abstract": "Re-useable build tasks are analyzed and tasks with identical attribute values are grouped together into batches, and the task is executed once for each batch, eliminating the need for consideration of looping constructs in the build process.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07337428",
	"publication_date": "2008-02-26",
	"application_number": "10772791",
	"application_date": "2004-02-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic compiling of address filter information",
	"summary": "",
	"abstract": "Automatic compilation of address filter information permits a cable modem to route incoming data packets to destination devices. A cable modem uses address filter information, such as for example, a list of addresses of communication devices that have previously registered with the cable modem, to identify incoming data packets that are addressed to communication devices associated with the cable modem. Incoming data packets with addresses that are not in the address filter information are filtered out. However, the cable modem may have insufficient filter information, when, for instance, a new communication device is associated with the cable modem. In order to automatically register communication devices associated with the cable modem, the cable modem inspects the source addresses of outgoing data packets. If the source address is not included in the address filter information, the source address is added.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07433349",
	"publication_date": "2008-10-07",
	"application_number": "11050578",
	"application_date": "2005-02-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic discovery and configuration of external network devices",
	"summary": "",
	"abstract": "An improved system and method for discovering and configuring secure network topologies responds to existing networking environments and encompasses the dynamic detection and configuration of an appropriate hardware or software solution. In an embodiment of the invention, a broadcast mechanism is used to provide hardware device discovery while application programming interfaces provide discovery of software firewalls. In a further embodiment, a polling technique is used to ensure that the configuration of a gateway device does not change, endangering the protected network.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07418486",
	"publication_date": "2008-08-26",
	"application_number": "10456068",
	"application_date": "2003-06-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic serialization for event driven multi-threaded programs in an object structured system",
	"summary": "",
	"abstract": "The present invention relates to a system and methodology to facilitate automatic interactions between a client component and an object supported by an operating system framework. Various components provide automatic locking, or serialization of code execution during selected processing of events that are generated by the object and directed to the client component. The system framework provides automated synchronization services for processing events to a client program. Automated event processing can be configured such that, automated processing can be turned off for all or portions of some tasks and turned on for other tasks. In one aspect, a computer-based event handling system is provided having a framework component that supplies classes of objects that can raise events. A synchronization component automatically controls in part synchronization of access to data based on categorization of objects and/or instances defined by the framework.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07386864",
	"publication_date": "2008-06-10",
	"application_number": "10706776",
	"application_date": "2003-11-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Bandwidth sharing in advanced streaming format",
	"summary": "",
	"abstract": "Modulated data signal having data fields encoded in a data structure defining a bandwidth sharing object for transmission over communications channels. A first data field contains a first stream of first information having a first bandwidth. A second data field contains a second stream of second information having a second bandwidth. The first stream is transmitted simultaneously with the second stream. One or more additional data fields each contain an additional stream of information having an additional bandwidth. The additional streams are transmitted simultaneously with the first and second stream. A bandwidth number indicated in the object is a function of the bandwidth of the first stream, the second stream, and the one or more additional streams. A bandwidth value indicated in the object is less than the total of the first bandwidth, the second bandwidth, and the total bandwidths of the one or more additional streams.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07457312",
	"publication_date": "2008-11-25",
	"application_number": "10175230",
	"application_date": "2002-06-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Binary cache file format for themeing the visual appearance of a computer system",
	"summary": "",
	"abstract": "A binary theme file format provides optimized access to retrieve graphical component theme property data. The binary format includes data structures storing a set of defined visual characteristics for graphical component classes, parts, and states. The data structure includes a hierarchy of theme data. A theme manager quickly retrieves theme property data by indexing into the binary file with a unique theme handle. The theme manager accesses state, part, class, and global property sections to retrieve theme data. Jump tables and jump-to-parent references allow for quickly traversing property data sections. Packed data sections have packed objects having the necessary property data for frequently used graphical components. A custom image region data section provides border data for nontransparent image borders. A sampled colors section facilitates rendering of images with solid sections. The binary file format can be constructed using a text theme file and is loaded into shared process memory.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07376906",
	"publication_date": "2008-05-20",
	"application_number": "10918032",
	"application_date": "2004-08-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Boxed and lined input panel",
	"summary": "",
	"abstract": "A method and apparatus for receiving strokes of electronic ink in more than one language is provided. An input device is used to enter at least one stroke of electronic ink into a processing device. The processing device stores a language indication associated with the electronic ink, such that the language indication provides a way to associate a handwriting recognizer with the ink. The user may change the language or recognizer associated with the ink by flipping over a pen and using another tip of the pen or may use another pen or other input device. Aspects of the described system and method accommodate various optional interfaces to associate a pen tip or click of a button to one or more languages. Other aspects of the system and method include language switching of a displayed software keyboard when a pen input device is within a predetermined distance from a display.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07424154",
	"publication_date": "2008-09-09",
	"application_number": "10704121",
	"application_date": "2003-11-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Calibration of a device location measurement system that utilizes wireless signal strengths",
	"summary": "",
	"abstract": "An architecture for minimizing calibration effort in an IEEE 802.11 device location measurement system. The calibration technique is based upon a regression function that produces adequately accurate location information as a function of signal strength regardless of gaps in the calibration data or minimally available data. The algorithm takes a set of signal strengths from known room locations in a building and generates a function giving (x,y) as a function of signal strength, which function may then be used for the estimation of new locations. Radial basis functions, which are simple to express and compute, are used for regression. The fact that the algorithm maps signal strength to continuous location makes it possible to skip rooms during calibration, yet still evaluate the location in those rooms.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07411549",
	"publication_date": "2008-08-12",
	"application_number": "11763422",
	"application_date": "2007-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Category partitioning markup language and tools",
	"summary": "",
	"abstract": "A system for testing software modules is provided. A user enters parameter values that will be tested into a spreadsheet. The spreadsheet application generates an XML data file including the parameter values arranged into a table. A test shell extracts test cases from the XML data file and converts the data into a testing object for use by a test engine.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07437714",
	"publication_date": "2008-10-14",
	"application_number": "10700995",
	"application_date": "2003-11-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Centralized configuration data management for distributed clients",
	"summary": "",
	"abstract": "System and method for managing a plurality of clients. A request to implement a change in configuration data is received from a user. The configuration data relates to an operation of a client. The received request is stored in a memory area. Computer-executable instructions request topology data from the memory area based on the configuration data to identify the client. The requested topology data is received from the memory area. Computer-executable instructions identify a notification service associated with the client and notify the identified notification service of the change in the configuration data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07383271",
	"publication_date": "2008-06-03",
	"application_number": "10820181",
	"application_date": "2004-04-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Color management system that enables dynamic balancing of performance with flexibility",
	"summary": "",
	"abstract": "A method and system for allowing a computer system platform the ability to intervene in the content workflow and perform additional color management based upon the content state and any color management policies in place is provided. Profile data from a source is converted to an intermediate color space upon entry into the platform at a choke point. In response to the current color content, profile data, and/or policy controls of the platform, color management input can be managed to change color management data immediately, change color management data at a later point, and/or ignore color management data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07466447",
	"publication_date": "2008-12-16",
	"application_number": "10683153",
	"application_date": "2003-10-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Common query runtime system and application programming interface",
	"summary": "",
	"abstract": "A query runtime architecture and an exemplary application programming interface suitable for the architecture are presented. The architecture inputs one or more XML queries and views and enables the queries to be translated wherein the queries and views may be run over multiple data sources of different data models. The architecture incorporates front-end compilers which convert input queries and views into an intermediate language representation which represents the meaning of the respective query or view. The architecture may then allow the back-end compiling of the intermediate language representation to target languages compatible with the data sources desired to be queried. The architecture also allows the execution of those target compilations to extract the data requested of the queries. The invention also discloses an example application programming interface for the query runtime system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07383255",
	"publication_date": "2008-06-03",
	"application_number": "10601445",
	"application_date": "2003-06-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Communication protocol for synchronizing animation systems",
	"summary": "",
	"abstract": "A communications protocol is described that governs asynchronous exchange of data between a high level animation system and a low level animation system. The high level animation system has a variable, medium-frequency frame rate and is optimized for interactivity. The low level animation system has a constant, high frequency frame rate and is optimized for high refresh frame rate. The communications protocol includes messages that can be sent by the high-level animation system to the low-level animation system to designate an animation and how the animation is to change over a specified period of time. As a result, the low-level system can display the animation at the high refresh rate even if animation data is not received from the high-level system for every frame.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07436409",
	"publication_date": "2008-10-14",
	"application_number": "11267388",
	"application_date": "2005-11-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Compressing language models with Golomb coding",
	"summary": "",
	"abstract": "A list of integer values is generated from n-grams of a user input. The list of integer values is sorted. Differences between adjacent integer values in the list are calculated. Each calculated difference is encoded using a Golomb code. A Golomb compressed language model is accessed to identify likely matches.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07363225",
	"publication_date": "2008-04-22",
	"application_number": "11159712",
	"application_date": "2005-06-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer security management, such as in a virtual machine or hardened operating system",
	"summary": "",
	"abstract": "A security scheme provides security to one or more self-contained operating environment instances executing on a computer. The security scheme may include implementing a set of security applications that may be controlled by a supervisory process, or the like. Both the set of security applications and the supervisory process may operate on a host system of the computer, which may also provide a platform for execution of the one or more self-contained operating environments. The security scheme protects processes running in the one or more self-contained operating environment and processes running on the computer outside of the self-contained operating environments.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07409719",
	"publication_date": "2008-08-05",
	"application_number": "11019094",
	"application_date": "2004-12-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer software and services license processing method and system",
	"summary": "",
	"abstract": "Integrated computer services and software licensing processing methods and systems are provided. A license processing service (LPS) receives a services or software license request from a user via a client computer. The LPS communicates the request to a billing system for the services or software provider to obtain an expiration date for use of a desired service or software product. The LPS receives and forwards the expiration date from the billing system to a licensing clearinghouse operated by the provider of the desired service or software product. The clearinghouse, in turn, provides a use license for the desired service or software application to the client computer via the LPS.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07346585",
	"publication_date": "2008-03-18",
	"application_number": "10376742",
	"application_date": "2003-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Concurrent arbitration of multidimensional requests for interrupt resources",
	"summary": "",
	"abstract": "The present invention relates to a system and methodology to facilitate negotiation, assignment, and management of interrupt resources in a flexible and dynamic manner. An interrupt arbitration system is provided to process at least one request associated with an interrupt resource, wherein the request includes at least two dimensions related to an interrupt and an interrupt service component. An arbiter processes the request and returns a subset of interrupt resource ranges in view of available system resources. This multi-dimensional mapping of resources enables coordination across resource pools, processors, buses, and/or other components while mitigating possible run-time problems attributed to one-dimensional systems that may find that suitable resources are unavailable.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07363407",
	"publication_date": "2008-04-22",
	"application_number": "10673805",
	"application_date": "2003-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Configurable event handling for an interactive design environment",
	"summary": "",
	"abstract": "An API and method for processing a user interface event is provided. The user interface event may take place in any environment of a software application, and may result from any type of user or software action. An embodiment also provides a framework for customizing the processing of a user interface event without the need to maintain accountability of computer states. In the method, an application process user interface event is processed using an operating system process. A user interface event is received by the application process by way of a user interface. A software component adapted to process the user interface event is pushed onto a memory stack by the operating system process. The operating system process processes the user interface event using the software component, and pops the software component from the memory stack.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07458081",
	"publication_date": "2008-11-25",
	"application_number": "10918170",
	"application_date": "2004-08-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Configuring and managing resources on a multi-purpose integrated circuit card using a personal computer",
	"summary": "",
	"abstract": "The systems and methods provide for configuring and managing resources on a multi-purpose IC card. In one aspect, a user interface (UI) for an application is presented on a display device. A user is enabled via at least one graphical dialog screen of the UI to configure a communicatively coupled IC card. Management of one or more resources on the IC card is facilitated via at least one graphical dialog screen of the UI.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07366918",
	"publication_date": "2008-04-29",
	"application_number": "10845690",
	"application_date": "2004-05-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Consent mechanism for online entities",
	"summary": "",
	"abstract": "A method, system, and computer-readable medium are provided for managing consent between online entities to perform tasks. The consent mechanism uses an asynchronous protocol for submitting consent requests, managing consent requests, and resolving consent requests. An application that requires consent to perform a task submits a request for consent to the consent mechanism. The resolving authority obtains pending request information from the consent mechanism and sends the consent mechanism request resolution information. The application obtains resolved request information from the consent mechanism. If the resolved request is approved, the consent mechanism allows the application to perform the task. If the resolved request is denied, the consent mechanism does not allow the application to perform the task.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07454508",
	"publication_date": "2008-11-18",
	"application_number": "10346885",
	"application_date": "2003-01-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Contact picker interface",
	"summary": "",
	"abstract": "An interface for enabling a user to quickly access contact information automatically displays a list of expected contacts that are most likely to be selected by the user when attention is directed to an appropriate object requiring contact information. When a contact is selected, the corresponding and appropriate contact information is automatically entered. If a user does not select a listed contact, but instead begins manually typing in the contact information then the interface performs a search and displays a list of unexpected contacts having contact information matching the typed input from the user. Various criteria can be used to identify which contacts will be presented to the user and how they will be presented.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07418663",
	"publication_date": "2008-08-26",
	"application_number": "10845464",
	"application_date": "2004-05-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Contact text box",
	"summary": "",
	"abstract": "A contact text box interface for resolving user input with contact information selected from contact directories and compared against usage patterns. Users are provided with a list of potentially relevant contacts from which a selection can be made. When a contact is selected, the corresponding and appropriate contact information is automatically provided to the application. Various criteria can be used to identify which contacts will be presented to the user and how they will be presented.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07430719",
	"publication_date": "2008-09-30",
	"application_number": "10885974",
	"application_date": "2004-07-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Context-free document portions with alternate formats",
	"summary": "",
	"abstract": "Self-describing portions of text or data are provided for associating with or inserting in a computer-generated document. Portions of a document, such as individual paragraphs or groups of paragraphs or fragments of text, are provided self-describing properties, such as file format type associated with the portion, style, font, list type, and the like. If such a portion of a document is subsequently linked to or copied or moved to a second document or to a different location in a first document, the self-describing properties provided for the portion travel with the portion to the second document or to the different location in the first document. An application receiving the content portion may consume and display the portion according to the properties provided for the portion.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07464330",
	"publication_date": "2008-12-09",
	"application_number": "11018405",
	"application_date": "2004-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Control object and user interface for controlling networked devices",
	"summary": "",
	"abstract": "A system for including a set of software components and an application programming interface for the logical networked representation and implementation of a system of smart devices within a home or small office environment. The software components include a control object component and a user interface component. The control object is a software object capable that carries out communication, accepts and issues control messages. The control object allows a user to remotely control or query a physical device for which the specific control object has responsibility and for maintaining logical and physical connections and control of the device. The user interface supplies a coherent and transparent interface across all network media and topologies. The user interface is capable of communicating with any control object that it identifies as being controllable in a given system. The communication may be across a logical network or may be local to a particular device. The user interface takes on the u201cpersonalityu201d of the physical device for which the attendant control object carries a logical and physical mapping and control responsibility.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07404187",
	"publication_date": "2008-07-22",
	"application_number": "10977809",
	"application_date": "2004-10-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Controlled relay of media streams across network perimeters",
	"summary": "",
	"abstract": "The invention provides an apparatus and method to establish media sessions for media streams crossing a network boundary. The system includes a media relay controlled by a media configurator control module. The media relay reserves media paths (that include ports in the network boundary), opens the media paths, closes the media paths, and provides information about the media paths. A media configurator is adapted to communicate with the media configurator control module and the media relay. The control module has an event handler handling multimedia session events, a local address resolver that determines if an address identifier of the media session belongs to a private address space and a control element used to establish the media path. The control element manages resources for the media relay. A state-refresh timer is used to maintain state consistency between all media relays controlled by a proxy engine and control elements.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07454510",
	"publication_date": "2008-11-18",
	"application_number": "10447615",
	"application_date": "2003-05-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Converting data between a front end schema node and a back end schema node",
	"summary": "",
	"abstract": "Automatically converting data between different schemas. A client request to read data from a front end schema node to a back end schema node is received. The nodes may be constructed according to different schemas, whereby a front end data object and a back end data object are created with a common interface and a common set of property types for wrapping around respective front end and back end data objects. The data is then read from the front end schema node to the back end schema node via the front end data object and the back end data object according to the common interface and the common set of property types. A SchemaState Object provides a listing of property pairs for constructing the front end and back end data objects, each with at least one property from the listing of property pairs.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07330855",
	"publication_date": "2008-02-12",
	"application_number": "11136876",
	"application_date": "2005-05-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Coordinating animations and media in computer display output",
	"summary": "",
	"abstract": "Described is a method and system in which storyboard objects coordinate the animation of multiple elements and/or media displayed on a computer graphics display. Storyboards relate properties of elements in an element tree to a timeline, such that the properties associated with a storyboard are animated/play together as a group by starting, stopping, seeking or pausing the storyboard. Triggers, such as controlled by user interaction with the displayed information, including property triggers that change values in response to a state change, and event triggers that fire events, may cause the storyboard to start, stop, pause and seek. Storyboards may be used in XAML-based programs, and may be directly associated with elements, or indirectly associated with elements via styles. Complex properties and changeables are supported. Media playback may be controlled via storyboards, and thereby coordinated with other media playback and/or animations.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07336280",
	"publication_date": "2008-02-26",
	"application_number": "10992462",
	"application_date": "2004-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data centric and protocol agnostic workflows for exchanging data between a workflow instance and a workflow host",
	"summary": "",
	"abstract": "Providing data bound workflow activities to model messaging between a workflow instance and a workflow host. The workflow author associates a data source with each data bound activity in a workflow without specifying details of the underlying messaging technology. The data bound activity in the workflow instance communicates with a data source service in the workflow host to exchange data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07363628",
	"publication_date": "2008-04-22",
	"application_number": "11167472",
	"application_date": "2005-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data controls architecture",
	"summary": "",
	"abstract": "Systems and methods for data controls architecture are described. In one aspect, a data source control exposes an interface for generic access to a data store. A data-bound control implements the interface to automatically databind to the data store at an appropriate time during runtime operations of the data-bound control.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07464386",
	"publication_date": "2008-12-09",
	"application_number": "10847648",
	"application_date": "2004-05-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data driven test automation of web sites and web services",
	"summary": "",
	"abstract": "A system, method and data structure for testing a web location including a web site or web service. A test generator or user generates an XML test case and a driver interprets the XML test case into an http request to be sent to the web location as a test.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07334220",
	"publication_date": "2008-02-19",
	"application_number": "10798658",
	"application_date": "2004-03-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data flow chasing",
	"summary": "",
	"abstract": "Existing systems use interprocedural data flow to analyze the source code of an entire program thereby requiring significant resources. Instead forward and backward chase components reference data structures (e.g., state machines) that identify instructions within a intraprocedural data flow graph. Based on how states of the state machine correspond to instructions in the data flow, the state machines direct the data flow chase to other procedures in a call graph, to instructions indicated in a global reference list, to instructions indicated in a field reference list, to instructions indicated by a pointer dereference, or to another instruction in the present procedure. Then, the chase continues in the data flow graph of the procedure containing the instruction.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07392514",
	"publication_date": "2008-06-24",
	"application_number": "10609188",
	"application_date": "2003-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Debugging an application that employs rights-managed content",
	"summary": "",
	"abstract": "A system debugs a computer application that employs rights-managed (RM) content. A first, non-isolated process has the application and a shell version of the trusted component, where such shell version receives each request by the application for RM services. The shell version is unconcerned whether a debugger is monitoring the first process. A second, isolated process is separate from the first process and has a debugging version of the trusted component. The shell version in the first process forwards the received request to the debugging version in the second process, and such debugging version acts upon same. The debugging version ensures that the debugger is not monitoring the second process, but is unconcerned whether the debugger is monitoring the first process.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07383537",
	"publication_date": "2008-06-03",
	"application_number": "10644359",
	"application_date": "2003-08-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Delegated administration of namespace management",
	"summary": "",
	"abstract": "A system and method for delegating at least one administrative duty associated with namespace management from an authentication system to at least one administration system. An application programming interface provides communication between the authentication system and the administration system. The authentication system receives a request from the administration system, verifies the authority of the request, and performs the action(s) specified in the request to manage a namespace.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07330971",
	"publication_date": "2008-02-12",
	"application_number": "10675255",
	"application_date": "2003-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Demosaicing graphical content",
	"summary": "",
	"abstract": "Demosaicing of graphical content is provided. In an illustrative implementation a demosaicing engine executing one or more demosaicing algorithms is employed to operate on graphical content to provide better quality and higher resolution images. In operation, the demosaicing engine operates in two modes, a training/learning mode, and a run time mode. During training, training-images are analyzed to generate a codebook of mosaic filter table entries, such that each table entry has an associated list of similar training pixel blocks and their associated filters. During run time, a run-time image is broken into pixel blocks. Each pixel block is then compared with the entries of the codebook to find the closest match filter. The list associated with the entry is then processed using a least-squares algorithm to locate the optimal mosaic filter. As a result, higher resolution is achieved without requiring more pixels.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07346225",
	"publication_date": "2008-03-18",
	"application_number": "11541114",
	"application_date": "2006-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Deriving a symmetric key from an asymmetric key for file encryption or decryption",
	"summary": "",
	"abstract": "One aspect relates to a process and associated device that provides a private key of an asymmetric key pair in a key device. A symmetric master key is derived from the private key of the asymmetric key pair. The symmetric master key is stored in a computer memory location. The symmetric master key is used to encrypt or decrypt a file encryption key. The file encryption key can encrypt or decrypt files. In another aspect, the user can still access the files even if a user deactivates the key device by encrypting or decrypting the file encryption key directly from the symmetric master key.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07382883",
	"publication_date": "2008-06-03",
	"application_number": "11611051",
	"application_date": "2006-12-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Design of application programming interfaces (APIs)",
	"summary": "",
	"abstract": "A first exemplary method implementation for designing an application programming interface (API) includes: preparing multiple code samples for a core scenario, each respective code sample of the multiple code samples corresponding to a respective programming language of multiple programming languages; and deriving the API from the core scenario responsive to the multiple code samples. A second exemplary method for designing an API includes: selecting a core scenario for a feature area; writing at least one code sample for the core scenario; and deriving an API for the core scenario responsive to the at least one code sample. A third exemplary method for designing an API includes: deriving an API for a scenario responsive to at least one code sample written with regard to the scenario; performing one or more usability studies on the API utilizing multiple developers; and revising the API based on the one or more usability studies.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07430732",
	"publication_date": "2008-09-30",
	"application_number": "10692320",
	"application_date": "2003-10-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Detecting sexually predatory content in an electronic communication",
	"summary": "",
	"abstract": "A system and method for detecting an electronic communication such as an email, an instant messaging session, or a chat session that relates to an unsafe behavior directed to or engaged by a user. Instructions are adapted to analyze one or more features of the electronic communication, which is sent or received by the user. Instructions are adapted to categorize the electronic communication as relating to the unsafe behavior based on the analyzed features. A report is generated if the electronic communication is categorized as relating to the unsafe behavior. Instructions are adapted to send the report to a responsible person such as a parent, guardian, or other responsible person of the user. The report informs the responsible person that the electronic communication possibly relates to the unsafe behavior.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07444403",
	"publication_date": "2008-10-28",
	"application_number": "10721977",
	"application_date": "2003-11-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Deterministic system and method for implementing software distributed between a desktop and a remote device",
	"summary": "",
	"abstract": "Software running on a desktop device determines whether or not binaries (executables) need to be pushed to a remote device. If binaries need to be pushed to the remote device, the desktop determines which particular binaries need to be pushed to the remote device, and pushes the needed binaries to the remote device. Once all needed binaries are loaded onto the remote device, functions on the remote device can be executed via remote procedure calls.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07331047",
	"publication_date": "2008-02-12",
	"application_number": "10721396",
	"application_date": "2003-11-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed computing services platform",
	"summary": "",
	"abstract": "A server federation cooperatively interacts to fulfill service requests by communicating using data structures that follow a schema in which the meaning of the communicated data is implied by the schema. Thus, in addition to the data being communicated, the meaning of the data is also communication allowing for intelligent decisions and inferences to be made based on the meaning of the data. Cooperative interaction is facilitated over a wide variety of networks by messaging through a common API that supports multiple transport mechanisms. Also, mid-session transfer between client devices is facilitated by schema and the transport-independent messaging structure. The user interfaces of the client devices will appear consistent even if the client devices have different user interface capabilities.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07454462",
	"publication_date": "2008-11-18",
	"application_number": "11047209",
	"application_date": "2005-01-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed internet user experience monitoring system",
	"summary": "",
	"abstract": "Geographically distributed data-gathering client computers are connected to the Internet in the same manner as typical users (for example, via local dial-up connections). The data-gathering client computers poll a central server (the u201cUserMonu201d server) for a target site to access. After receiving the address of a target site from the UserMon server, the data-gathering client computers access the target site and obtain performance-parameter values indicative of the quality of their respective Internet connections to the target site and/or the performance of the target site itself. Each data-gathering client computer then pushes the performance-parameter values back to the u201cUserMonu201d server for analysis.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07379427",
	"publication_date": "2008-05-27",
	"application_number": "10979460",
	"application_date": "2004-11-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed query engine pipeline method and system",
	"summary": "",
	"abstract": "A distributed query engine pipeline architecture comprises cascaded analysis engines that accept an input query and each identifies a portion of the input query that it can pass on to an execution engine. Each stage rewrites the input query to remove the portion identified and replaces it with a placeholder. The rewritten query is forwarded to the next analysis engine in the cascade. Each engine compiles the portion it identified so that an execution engine may process that portion. Execution preferably proceeds from the portion of the query compiled by the last analysis engine. The execution engine corresponding to the last analysis engine executes the query and makes a call to the next higher execution engine in the cascade for data from the preceding portion. The process continues until the results from the input query are fully assembled.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07472112",
	"publication_date": "2008-12-30",
	"application_number": "10601730",
	"application_date": "2003-06-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Driver-specific context for kernel-mode shimming",
	"summary": "",
	"abstract": "The kernel is a shared environment. Accordingly, many different kernel-mode drivers utilize services provided by the kernel. Furthermore, when shimming of drivers is necessary, it is desirable to support shim reuse amongst drivers with similar problems or issues, rather than generating a customized shim for each driver. To facilitate kernel-mode shimming and shim reuse, context information needs to be retrieved and maintained so that shims can identify particular driver calls and preserve driver specific linkage information. The present invention accomplishes the forgoing by employing an intermediate structure, a content component, between a client or driver call and a common shared shim to provide the shim with contextual information.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07392527",
	"publication_date": "2008-06-24",
	"application_number": "10732746",
	"application_date": "2003-12-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "DVD navigator and application programming interfaces (APIs)",
	"summary": "",
	"abstract": "In accordance with certain aspects of the present invention, enhancements have been developed to further extend the performance of a generic DVD navigator component. Here, the DVD navigator program has been enhanced to better synchronize with DVD player applications. As such, better control mechanisms for the player application are provided. For example, improved enforcement of restricted/parental controlled content viewing, generation and assignment of unique identifiers to the content source, and an improved user and player application environment for starting and stopping playback are provided.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07451453",
	"publication_date": "2008-11-11",
	"application_number": "09721402",
	"application_date": "2000-11-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic audio buffer creation",
	"summary": "",
	"abstract": "An audio generation system includes a buffer manager that creates audio buffers to receive streams of audio data from an audio data source, such as from a synthesizer component for example. The audio buffers include sink-in audio buffers that receive one or more streams of audio data when the streams of audio data are requested by the buffer manager for input to the sink-in audio buffers. The audio buffers also include mix-in audio buffers that receive streams of audio data from one or more of the sink-in audio buffers, and from any number of other mix-in audio buffers. The audio generation system includes an audio component, such as a speaker for example, that receives audio data from the sink-in audio buffers and produces an audio rendition corresponding to the audio data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07386356",
	"publication_date": "2008-06-10",
	"application_number": "10093099",
	"application_date": "2002-03-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic filtering in a database system",
	"summary": "",
	"abstract": "A dynamic filtering module receives a request to perform an operation on data in the database and a input. The dynamic filtering module provides as an output a modified request to a data access system. The modified request can include one or more restrictions added to the original request pertaining to which data will be accessed as a function of the input.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07376668",
	"publication_date": "2008-05-20",
	"application_number": "11340128",
	"application_date": "2006-01-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic reflective highlighting of a glass appearance window frame",
	"summary": "",
	"abstract": "Aspects for changing a reflective highlight on a glass appearance window frame of an application window are described. An illustrative method includes steps of displaying a first reflective highlight on a glass appearance window frame of an application window, calculating a second reflective highlight in response to detection of an event, and changing the displayed first reflective highlight on the glass appearance window frame of the first application window to the second reflective highlight. The event may correspond to a command to move and/or resize the application window, determination of a time of day event, determination of a change in active/inactive status of the application window, or to a command to change a reflective highlight configuration. Reflective highlights may be changed automatically and/or in response to receipt of an input from a user to change one or more portions of a reflective highlight configuration.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07412663",
	"publication_date": "2008-08-12",
	"application_number": "11289510",
	"application_date": "2005-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic ink processing",
	"summary": "",
	"abstract": "An application programming interface instantiates an ink analyzer object that receives document data for a document containing electronic ink content from a software application hosting the document and running on a first processing thread. The ink analyzer object then employs the first thread to make a copy of the document data, provides the copy of the document data to an electronic ink analysis process, and returns control of the first processing thread to the analysis process. After the analysis process has analyzed the electronic ink, the ink analyzer object reconciles the results of the analysis process with current document data for the document.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07468801",
	"publication_date": "2008-12-23",
	"application_number": "10646473",
	"application_date": "2003-08-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Encoding conversion fallback",
	"summary": "",
	"abstract": "A system and method for converting a source data sequence to a target encoding is disclosed. A fallback technique, specifiable by a user program component, is applied to data in the source data sequence that cannot be mapped to the target encoding. A particular embodiment involves methods for encoding a Unicode string as a sequence of bytes in a target encoding, and decoded the encoded bytes back to Unicode.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07468683",
	"publication_date": "2008-12-23",
	"application_number": "10969279",
	"application_date": "2004-10-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enhanced tabular data stream protocol",
	"summary": "",
	"abstract": "Systems and methodologies are provided as part of a computing environment that implements an enhanced tabular data stream (TDS) protocol. Such enhanced TDS protocol can mitigate synchronization inconsistencies between client and servers, improve robustness of the data transfer, facilitate password specification as part of login procedures, and reduce administration overhead. Various headers are provided as part of the data stream protocol, and a versioning scheme is established that facilitates proper communication between servers and clients having different release dates and versions of the TDS protocol.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07318075",
	"publication_date": "2008-01-08",
	"application_number": "10773724",
	"application_date": "2004-02-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Error notification handling",
	"summary": "",
	"abstract": "A system and process for ensuring the smooth flow of electronic ink is described. Dynamic rendering is give priority over other event handlers. Priority may be the use of one or more queues to order when events occur and may be performing dynamic rendering prior to other steps.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07453585",
	"publication_date": "2008-11-18",
	"application_number": "10986892",
	"application_date": "2004-11-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Event consumers for an event management system",
	"summary": "",
	"abstract": "An event management system includes an email consumer for handling email, a paging consumer, an active scripting consumer, a log file consumer, an event log consumer, and a command line consumer. The events in the event management system are represented as objects and each consumer is represented as a class. The system also includes an event forwarding consumer to forward events. The event management system allows the creation of an instance of an event filter which filters events based on event filter properties. The system also allows the creation of an instance of an event consumer which defines an action and creation of a binding between the instance of the event filter and the instance of the event consumer such that the binding includes properties identifying the instance of the event filter and the instance of the event consumer.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07412501",
	"publication_date": "2008-08-12",
	"application_number": "09875775",
	"application_date": "2001-06-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Event-based system and process for recording and playback of collaborative electronic presentations",
	"summary": "",
	"abstract": "An event-based system and process for recording and playback of collaborative electronic presentations is presented. The present system and process includes a technique for recording collaborative electronic presentations by capturing and storing the interactions between each participant and presentation data where each interaction event is timestamped and linked to a data file comprising the presentation data. The present system and process also includes a technique for playing back the recorded collaborative electronic presentation, which involves displaying the presentation data in an order it was originally presented and reproducing the recorded interactions between each participant and the displayed presentation data at the same point in the presentation that they were originally performed, based on the aforementioned timestamps.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07379848",
	"publication_date": "2008-05-27",
	"application_number": "11390895",
	"application_date": "2006-03-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Execution context infrastructure",
	"summary": "",
	"abstract": "Described herein is an implementation for exposing an u201cexecution contextu201d to a logical execution flow of procedures as it executes. An u201cexecution contextu201d is a set of data and/or sub-procedures that might be useful at some point during a logical execution flow (to manage and control the execution flow and provide additional services to the execution flow) of computer-executable instructions though the often complex, intertwined, and interconnected conglomeration of procedures of software product(s).",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07458072",
	"publication_date": "2008-11-25",
	"application_number": "10959812",
	"application_date": "2004-10-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Extensible configuration handlers",
	"summary": "",
	"abstract": "In accordance with certain aspects of extensible configuration handlers, a method of using a configuration file to generate one or more components that are accessible to an application comprises a two-phase process. In a first phase, a plurality of components defined in a configuration file are created. In the second phase, one or more of the plurality of components are notified of the presence of the other components in the plurality of components. In accordance with certain other aspects of the extensible configuration handlers, the configuration handlers defined in a configuration file are nested configuration handlers.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07428735",
	"publication_date": "2008-09-23",
	"application_number": "10773382",
	"application_date": "2004-02-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Extensible data mining framework",
	"summary": "",
	"abstract": "The subject disclosure pertains to extensible data mining systems, means, and methodologies. For example, a data mining system is disclosed that supports plug-in or integration of non-native mining algorithms, perhaps provided by third parties, such that they function the same as built-in algorithms. Furthermore, non-native data mining viewers may also be seamlessly integrated into the system for displaying the results of one or more algorithms including those provided by third parties as well as those built-in. Still further yet, support is provided for extending data mining languages to include user-defined functions (UDFs).",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07383234",
	"publication_date": "2008-06-03",
	"application_number": "11157602",
	"application_date": "2005-06-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Extensible markup language markup cloning on table rows and cells in a software application document",
	"summary": "",
	"abstract": "Methods and systems are provided for automatically replicating table rows and cells marked up with Extensible Markup Language (XML) data (markup) to create new table rows and cells containing the same XML markup as a selected row and cells from which the new row and cells are replicated. A table row with one or more cells may be selected for replication. The selected row (source row) is parsed to determine XML markup (XML elements (tags)) applied to the row or cells contained therein. A new row(s) and corresponding cell(s) is created. XML markup applied to the source row and its cells is automatically applied to the new row and cells contained therein.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07426690",
	"publication_date": "2008-09-16",
	"application_number": "10731897",
	"application_date": "2003-12-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Extensible productivity tool for exposing common classes in application building",
	"summary": "",
	"abstract": "Architecture for developing an application. The architecture provides an entry point to commonly used classes of an application development framework. A developer begins a project which predefines a set of collection classes. An exposer component includes an identifier component and a compiler for generating accessors to the collected classes. The identifier uses an attribute on a collection class which a compiler dynamically extracts in order to generate accessors to the desired collected classes and compiles the generated collection classes for use in the namespace.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07383531",
	"publication_date": "2008-06-03",
	"application_number": "10767543",
	"application_date": "2004-01-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Extensible wireless framework",
	"summary": "",
	"abstract": "An extensible wireless framework for connecting to a wireless network is provided. The extensible wireless framework includes a network roaming service with a registration component and a network service component. The registration component registers extensible service modules and extensible drivers for providing non-standard (i.e., extensible) capabilities to the wireless network. The extensible service module provides a service not provided by a native component of the extensible wireless framework, and the extensible driver may implement a media access control sub-layer of a wireless network protocol and provide a media access control interface. The network service component identifies available wireless networks, selects to join the wireless network when available, requests the extensible driver for the wireless network via its media access control interface to connect to the selected network, and notifies the extensible service module to provide services to the extensible driver.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07426550",
	"publication_date": "2008-09-16",
	"application_number": "10930684",
	"application_date": "2004-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Facilitating interaction between video renderers and graphics device drivers",
	"summary": "",
	"abstract": "Facilitating interaction may be enabled through communication protocols and/or APIs that permit information regarding image processing capabilities of associated graphics hardware to be exchanged between graphics device drivers and video renders. In a first exemplary media implementation, electronically-executable instructions thereof for a video renderer precipitate actions including: issuing a query from a video render towards a graphics device driver, the query requesting information relating to process amplifier (ProcAmp) capabilities; and receiving a response at the video renderer from the graphics device driver, the response including the requested information relating to ProcAmp capabilities. In a second exemplary media implementation, a graphics device driver precipitates actions including: receiving a query at the graphics device driver from a video renderer, the query requesting information relating to ProcAmp capabilities; and sending a response to the video renderer from the graphics device driver, the response including the requested information that relates to ProcAmp capabilities.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07451457",
	"publication_date": "2008-11-11",
	"application_number": "10400040",
	"application_date": "2003-03-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Fast booting an operating system from an off state",
	"summary": "",
	"abstract": "Described is a fast boot mechanism that generally operates by persisting static data and/or code for a system component, and then providing the system component with access to the static data and/or code during a subsequent device boot. For example, the static data and/or code of one or more components may be restored from non-volatile memory to volatile memory, whereby subsequent reboots need not have the components re-compute their persisted static data, making subsequent reboots faster. A fast boot infrastructure may include an interface set, and provides first mechanism that persists static data and/or code for a system component, and a second mechanism that provides the system component with access to the static data and/or code. The fast boot infrastructure may also provide the component with a way to invalidate static data and/or code, along with a background mechanism that collects static data and/or code from the system component.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07409537",
	"publication_date": "2008-08-05",
	"application_number": "11245629",
	"application_date": "2005-10-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Fast data breakpoint emulation",
	"summary": "",
	"abstract": "A technique to implement software debugging capability using breakpoints includes creating breakpoints, storing them in a watchlist, and paging out a virtual address (VA) to physical address (PA) page entry in a translation look-aside buffer (TLB). When software under test is run at full speed, memory is accessed via the TLB VA to PA page translations. When a translation is missing, an exception is generated. Handling the exception includes determining if the page missing from the TLB matches a breakpoint address in the watchlist. The address and operation type are compared to the watchlist. If the operation matches the address and not the specified data, then the software under test is single stepped, the TLB page is removed and the software under test continues to execute. If the breakpoint and data type matches, then a debugger is notified and debugger action to service the breakpoint occurs.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07447942",
	"publication_date": "2008-11-04",
	"application_number": "11184224",
	"application_date": "2005-07-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Fault injection selection",
	"summary": "",
	"abstract": "A system and method for injecting faults are described. Faults may be injected into a process to determine if a given module handles the fault properly.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07404107",
	"publication_date": "2008-07-22",
	"application_number": "11011603",
	"application_date": "2004-12-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "File locker and mechanisms for providing and using same",
	"summary": "",
	"abstract": "A file locker manages the storage and use of protected data for software objects. A protected environment maintains the cryptographic and isolative infrastructure to support sealing of data items for use by a trusted agent. The file locker uses the protected environment's sealing functionality to seal data items for the file locker's exclusive access. The file locker seals, to itself, files received from software objects, and provides those files upon request, and upon sufficient proof of the requestor's trustworthiness, authenticity, and/or identity. The file locker may be used to extend the protected environment's sealing functionality to legacy applications, without the legacy applications having to implement agents that can run in the protected environment and access the sealing functionality directly.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07330981",
	"publication_date": "2008-02-12",
	"application_number": "10831596",
	"application_date": "2004-04-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "File system operation and digital rights management (DRM)",
	"summary": "",
	"abstract": "File system interaction with digital rights management (DRM) is facilitated by enabling one or more file system components to be DRM-aware. These one or more file system components may be part of a computer operating system. An exemplary system implementation includes: one or more processors; and one or more media in operative communication therewith, the media storing one or more file system components that are configured to provide content having DRM controls to a requesting program in either a raw form or a decrypted form in dependence on whether the DRM controls comprise simple DRM content controls or complex DRM content controls. In another exemplary system implementation, the one or more file system components are configured to provide files with simple DRM content controls to requesting applications in a decrypted form and to provide files with complex DRM content controls to requesting applications in an unaltered form.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07383586",
	"publication_date": "2008-06-03",
	"application_number": "10346429",
	"application_date": "2003-01-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "File system represented inside a database",
	"summary": "",
	"abstract": "The subject invention provides a system and/or a method that facilitates adapting at least two disparate file systems. A file system adapter can provide uniformity and/or seamless integration between a first file system and a second file system. The file system adapter can employ a file-backed item that is enriched by a file to provide at least one of a property to an item and a file stream associated with the item. The file-backed item can allow a manipulation by at least one of an API for the first file system and an API for the second file system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07392263",
	"publication_date": "2008-06-24",
	"application_number": "11155428",
	"application_date": "2005-06-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Filestream data storage attribute",
	"summary": "",
	"abstract": "Large, unstructured objects can be manipulated within a relational database management system (RDBMS). A u201cfilestreamu201d data storage attribute is provided that can be used to tag a column in a relational table. The filestream attribute identifies the data for that column will be stored as a file in the file system in the operating system. The RDBMS manages the creation and deletion of the file in the file system. There is a 1:1 reference between the file in the file system and a cell (intersection of row and column). The data in the filestream column can be manipulated the same way as the data in other columns using a programming language, such as SQL or MICROSOFTu00ae's T-SQL.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07421443",
	"publication_date": "2008-09-02",
	"application_number": "10353730",
	"application_date": "2003-01-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Floating debugger",
	"summary": "",
	"abstract": "Floating or movable windows are provided to display information during debugging, either above the source code, or attached to the source code in the locations that they are relevant to. The floating windows can be semi-transparent in order to allow visibility to both the information in the window and the underlying information such as source code. The windows have different behavior, location, and look, depending on the type of information displayed in window and its relation to the underlying code.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07434207",
	"publication_date": "2008-10-07",
	"application_number": "10188885",
	"application_date": "2002-07-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Folder synchronization",
	"summary": "",
	"abstract": "A method is provided for synchronizing folders between a mobile device and a second computing device. The method includes initiating a folder synchronization request between the mobile device and the second computing device and comparing the folder hierarchy of the mobile device with the folder hierarchy of the second computing device to ascertain differences. Information is sent to at least one of the mobile device and the second computing device as a function of the ascertained differences between the folder hierarchies. The mobile device or second computing device uses the information to modify its folder hierarchy.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07359991",
	"publication_date": "2008-04-15",
	"application_number": "10648099",
	"application_date": "2003-08-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Framework for ordered handling of information",
	"summary": "",
	"abstract": "A system and process for ensuring the smooth flow of electronic ink is described. Dynamic rendering is give priority over other event handlers. Priority may be the use of one or more queues to order when events occur and may be performing dynamic rendering prior to other steps.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07428736",
	"publication_date": "2008-09-23",
	"application_number": "11626613",
	"application_date": "2007-01-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Full-form lexicon with tagged data and methods of constructing and using the same",
	"summary": "",
	"abstract": "A lexicon stored on a computer readable medium and used by language processing systems. The lexicon can store word information in a plurality of data fields associated with each entered word. The data fields can include information on spelling and grammar, parts of speech, steps that the entered word can be transformed into another word, a word description, and a segmentation for a compound word. Information that cannot be stored in the lexicon can be stored in an intermediate indexes table. Associated methods of constructing, updating and using the lexicon are introduced.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07421386",
	"publication_date": "2008-09-02",
	"application_number": "10804998",
	"application_date": "2004-03-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generating 2D transitions using a 3D model",
	"summary": "",
	"abstract": "A system and method for generating a 2D transition between a first media object and a second media object. A 3D model is defined corresponding to a desired 2D transition pattern. A graphics processing unit (GPU) or a set of instructions generates a transition between the first media object and the second media object as a function of the defined 3D model. A transition generator maps a plurality of vertices of the first media object to a first mesh creating a first mapped media object where the first mesh relates to the 3D model. The transition generator maps a plurality of vertices of the second media object to a transition pattern mesh creating a second mapped media object where the transition pattern mesh relates to the 3D model. The GPU or the set of instructions renders the transition from the first mapped media object and the second mapped media object.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07450124",
	"publication_date": "2008-11-11",
	"application_number": "11083378",
	"application_date": "2005-03-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generating and monitoring a multimedia database",
	"summary": "",
	"abstract": "A computer readable medium and method to generate a multimedia database that represents a collection of files having different file extensions is provided. The method includes receiving the collection of files from a file system, extracting and storing metadata in multimedia objects stored in the multimedia database. The metadata includes fast and slow metadata associated with the collection of files, which are extracted from the collection of files. Policies associated with the file extensions are applied to the collection of files to determine the fast metadata that should be extracted before the slow metadata. The multimedia objects are created to store the fast metadata and references to the collection of files. After extracting the fast metadata from the collection of files, the slow metadata is extracted and stored in the multimedia objects.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07469257",
	"publication_date": "2008-12-23",
	"application_number": "11220705",
	"application_date": "2005-09-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generating and supplying user context data",
	"summary": "",
	"abstract": "Techniques are described for providing information about a context that is modeled with multiple context attributes. In some situations, at least some of the context attributes have values used by modules for generating values of other context attributes, and the providing includes determining that a first module is generating a first value of a first of the context attributes of the modeled context and determining that a circular reference exists when it is determined that a module is to generate another value of the first context attribute such that the generating of the another value is caused by the generating of the first value of the first context attribute.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07464153",
	"publication_date": "2008-12-09",
	"application_number": "09724799",
	"application_date": "2000-11-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Glass appearance window frame colorization",
	"summary": "",
	"abstract": "A method for changing a color value and/or level of opacity value of a glass appearance window frame for an application window is described. The method includes steps of determining a defined color value and a defined level of opacity value to apply to a glass appearance window frame and displaying the glass appearance window frame in accordance with the defined color value and the defined level of opacity value. A command may be received to apply the defined color value and the defined level of opacity value to the glass appearance window frame, thereby applying the defined color value and level of opacity value to the glass appearance window frame. Color values and/or level of opacity values may be changed automatically, be application specific, and/or be changed in response to receipt of an input from a user to change one or more portions of a default configuration.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07418668",
	"publication_date": "2008-08-26",
	"application_number": "11289514",
	"application_date": "2005-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Group security",
	"summary": "",
	"abstract": "A system and method for providing security to a graph of interconnected nodes includes a grouping multiplexing layer configured to monitor calls to the system, a graphing dynamic link layer configured to transmit and receive data to and from the graph, and a group security manager coupled to the grouping multiplexing layer and coupled to the graphing dynamic link layer; the group security manager is configured to perform security-related acts via interacting with a group database to propagate security-related information to members of a group within the graph. The group security manager is configured to provide role-based authorization on publication of one or more records and provide membership control for admission to a graph of interconnected nodes. The group security manager provides membership control by providing credentials to potential members of the graph to enable a connection and by providing a governed system for renewal and revocation of members.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07397922",
	"publication_date": "2008-07-08",
	"application_number": "10608768",
	"application_date": "2003-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Handling wake events in a device driver",
	"summary": "",
	"abstract": "The present invention provides a unified layer for Plug and Play (PnP) components and power management components while relieving device drivers from system-level complexities associated with implementing PnP and/or power management functionality. The layer operates at a level between low-level device drivers and more complex operating system tasks. The subject invention simplifies designing device drivers having proper power management support by creating an infrastructure that allows a device driver to operate within a driver framework or model and without having to process Plug-and-Play or Power Management VO Request Packets (IRPs) directly.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07412609",
	"publication_date": "2008-08-12",
	"application_number": "10953306",
	"application_date": "2004-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Heavyweight and lightweight instrumentation",
	"summary": "",
	"abstract": "An instrumentation system performs operations such as profiling an application and partitioning and distributing units of the application using different versions of metadata describing the application. Performing an operation on an executing application generates overhead. Detailed metadata used in operations such as profiling create unnecessary overhead during other operations. By removing metadata detail unnecessary for a particular operation, an instrumentation system using reduced metadata generates less overhead for that particular operation. Different instrumentation packages include different versions of metadata for performing operations on the application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07415712",
	"publication_date": "2008-08-19",
	"application_number": "11172337",
	"application_date": "2005-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hierarchical in-place menus",
	"summary": "",
	"abstract": "A hierarchical menu system displays submenus in place of parent menus, and vice versa, when appropriate menu items are selected from within parent menus and submenus. Parent menu items selected from within parent menus are displayed within submenus as links back to previous parent menus. Benefits of the disclosed hierarchical menu system include the ability to implement a hierarchical menu on devices having varying screen sizes, including small-screen devices, while maintaining a history of previously selected menu items that enable a user to navigate within the hierarchical menu to any previously displayed menu.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07418670",
	"publication_date": "2008-08-26",
	"application_number": "10678806",
	"application_date": "2003-10-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hierarchical user interface query automation",
	"summary": "",
	"abstract": "A query can request user interface information from a user interface element hierarchy. Calls from a client program seeking user interface information related target user interface can be handled by a broker module. The broker module can operate across process boundaries and assemble efficient high-level user interface information queries to reduce the number of cross-process calls needed to collect the user interface information. Reducing the number of cross-process calls can result in better performance through improved speed of response to queries seeking user interface information across process boundaries.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07349893",
	"publication_date": "2008-03-25",
	"application_number": "10837412",
	"application_date": "2004-04-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "High performance counter for realistic measurement of computer system load",
	"summary": "",
	"abstract": "The present invention leverages high-frequency interrupts and/or low priority threads to accurately determine which computing resources are available. This provides a computing asset (CPUs and/or software applications) with a means to accurately compensate for resource utilization in order to increase its performance. By utilizing the present invention, the computing asset can optimize its performance in a real-time, self-tuning manner. In one instance of the present invention, high intensity, low priority threads are initiated on available CPUs (logical and/or physical) to effectively replace a CPU's idle time with the low priority thread. This thread generally constitutes a computationally-intensive and/or a memory-intensive thread which permits a highly accurate performance measurement to be obtained for available CPU resources. In another instance of the present invention, high-frequency interrupts are initiated on CPUs to compensate for processes that are shorter than a thread's time quantum, providing a more accurate performance counter.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07421592",
	"publication_date": "2008-09-02",
	"application_number": "10779299",
	"application_date": "2004-02-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Highly componentized system architecture with loadable virtual memory manager",
	"summary": "",
	"abstract": "The present invention is directed to a loadable virtual memory manager, and generally to a computer operating system capable of supporting application programs running in a computer having a working memory, the computer operating system including a kernel resident in the working memory at run time, and a loadable virtual memory manager resident at link time outside of the working memory and dynamically loadable into the working memory at run time upon demand of one of the application programs. The kernel includes a loader for loading the virtual memory manager into the working memory in response to a demand from one of the application programs. The computer is able to access a storage memory separate from the working memory, the loadable virtual memory manager residing at link time in the storage memory. The loader loads the virtual memory manager from the storage memory to the working memory. The loadable virtual memory manager is removable from the working memory upon lack of demand therefor by the application programs.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07409694",
	"publication_date": "2008-08-05",
	"application_number": "10754112",
	"application_date": "2004-01-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hooking of replacement and augmented API functions",
	"summary": "",
	"abstract": "Hooking replacement and augmented API functions is disclosed. In one embodiment, an alternative implementation of one or more API functions is hooked into the operating system through utilization of a replacement API table. The functions that have been replaced, augmented, or otherwise modified have entries in the table pointing to their new implementation. The entries for functions that have not been change continue to point to their existing implementation. A bit array is also disclosed to track desired messages, as compared to undesired messages, where each bit of the array corresponds to a type of message. The table can be variably sized, and can support nested and re-entrant calls.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07401339",
	"publication_date": "2008-07-15",
	"application_number": "11021225",
	"application_date": "2004-12-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Identifying a code library from the subset of base pointers that caused a failure generating instruction to be executed",
	"summary": "",
	"abstract": "The present invention is generally directed to improving the stability of computing devices by identifying plug-in modules and other programs that cause failures. More specifically, the present invention provides a method that traces program execution from an instruction that ultimately generated a failure to a code library that caused the failure generating instruction to be executed. The method traces execution of the computing device by obtaining the contents of memory at the time of the failure and traversing the stack data structure that stores data items necessary to execute function calls.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07321988",
	"publication_date": "2008-01-22",
	"application_number": "10880819",
	"application_date": "2004-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "In-context security advisor in a computing environment",
	"summary": "",
	"abstract": "Provided is an in-context security advisor that unifies computer system security, and generally improves computer system security by proactively and reactively monitoring for changes to security settings made by users and programs. By operating in real time, advice comprising meaningful feedback is given for any intrusion, thus giving a user the proper context about the consequences of changes to security settings that negatively affect the level of protection on computer systems, and allowing automated correction. Files can also be monitored, e.g., to prevent certain files from being remotely accessed or transmitted. The security advisor may adjust its operation based on user preferences, policy information, and via a connection to a remote source such as a backend server. The security advisor can also output security-related information, such as to a log and/or to components that evaluate the overall health of the machine.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07437763",
	"publication_date": "2008-10-14",
	"application_number": "10456606",
	"application_date": "2003-06-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Increasing software fault tolerance by employing surprise-removal paths",
	"summary": "",
	"abstract": "The subject invention relates to systems and methods for automatic recovery from errors in a computing environment. A system is provided to facilitate failure recovery in the computing system. The system includes at least one driver component that enumerates at least one layer of a driver stack. A module associated with the driver component requests re-enumeration of the driver stack upon detection of an error in the computing system. When an error is detected by a driver or operating system component, a protocol can be established whereby a new copy of the driver's stack or system resources is re-enumerated in parallel to existing resources that may be in an unknown or error state. The new copy of the stack may allow the driver to become operational in lieu of the previous stack which can be reclaimed for other system uses over time.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07366944",
	"publication_date": "2008-04-29",
	"application_number": "11036803",
	"application_date": "2005-01-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Instrumentation injection for common language runtime",
	"summary": "",
	"abstract": "An exemplary media implementation precipitates a device to perform actions including: determining if an instruction of a line of common intermediate language (CIL) code meets a predetermined exception-related criterion; and if so, injecting a decision point in association with the instruction of the line of CIL code, the decision point enabling a decision as to whether an exception is to be thrown with respect to the instruction. An exemplary device implementation includes: instrumented CIL code that includes a test couplet corresponding to a decision point and an associated instruction, the associated instruction capable of causing a fault; a decision runtime library that is adapted to evaluate the test couplet to selectively decide whether to throw an exception with respect to the associated instruction; and a common language runtime component that interprets the decision point so as to call the decision runtime library prior to executing the associated instruction.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07421682",
	"publication_date": "2008-09-02",
	"application_number": "10705754",
	"application_date": "2003-11-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integrated software test framework for performance testing of a software application",
	"summary": "",
	"abstract": "In accordance with the present invention, the above and other problems are solved by an integrated test framework that can receive measurement commands from a test script, automatically configure and execute any performance metrics required to effectuate the measurements and further manage the operation of the software to be tested. The integrated test framework can interpret script commands directed at any testing tool in a testing tool library accessible to the framework. Furthermore, the integrated test framework can identify and utilize code markers during the testing of software applications that utilize embedded code markers as well as identifying script markers. Thus, the integrated framework allows testing scenarios to be created incorporating both code markers and script markers to control performance testing of the executing software application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07415635",
	"publication_date": "2008-08-19",
	"application_number": "11013503",
	"application_date": "2004-12-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integrating external voices",
	"summary": "",
	"abstract": "Integrating voice communication into a game console to minimize or eliminate voice data processing by a primary processor. Input voice data from a microphone or a network is processed by a secondary processor and stored in a circular buffer. Drift between storing and reading the processed voice data may result from differing data rates, interrupts, and other latencies. If the circular buffer, accumulates an amount of data that exceeds a predefined threshold corresponding to a human perceptible latency, a pointer in the circular buffer is reset, so that only a portion of the processed voice data is output. A stream of packet contexts each indicate a location and length of voice data in the circular buffer to be output. Preferably, the output voice data is encoded in a standard digital format, such as universal serial bus. The output voice data may be communicated to a network or a sound transducer.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07395208",
	"publication_date": "2008-07-01",
	"application_number": "10260184",
	"application_date": "2002-09-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interprocess buffer management using a buffer delay time",
	"summary": "",
	"abstract": "Interprocess buffer management is described. In an implementation, a method includes determining an amount of time to communicate a message and receive a response to the message by a first process from a second process. A buffer delay time is computed from the amount of time. Data from the first process is stored in a buffer. When the buffer delay time is reached, the buffer is sent to the second process.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07421700",
	"publication_date": "2008-09-02",
	"application_number": "10801929",
	"application_date": "2004-03-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Issuing a publisher use license off-line in a digital rights management (DRM) system",
	"summary": "",
	"abstract": "A publishing user publishes digital content and issues to itself a corresponding digital publisher license to allow itself to render the published digital content. The publishing user is supplied with a publishing certificate from a digital rights management (DRM) server, where the publishing certificate allows the publishing user to so publish the digital content and to so issue the publisher license.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07370212",
	"publication_date": "2008-05-06",
	"application_number": "10373621",
	"application_date": "2003-02-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Lossless recovery for computer systems with map assisted state transfer",
	"summary": "",
	"abstract": "Described are systems and techniques for losslessly restarting subsystems in a distributed file system. By partitioning functionality and logging appropriately across the kernel and user-level boundaries on a client, the user-level subsystem may be made losslessly restartable. In particular, a map assisted state transfer may include receiving one or more state updates, marshaling one or more active data-structures into a marshaled shadow, applying the received state updates to the marshaled shadow and re-instantiating the active data-structures by unmarshaling the marshaled shadow.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07472129",
	"publication_date": "2008-12-30",
	"application_number": "10978280",
	"application_date": "2004-10-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Lossless recovery for computer systems with remotely dependent data recovery",
	"summary": "",
	"abstract": "An architecture and implementation for losslessly restarting subsystems in a distributed file system is described. By partitioning functionality and logging appropriately across the kernel and user-level boundaries on a client, the user-level subsystem may be made losslessly restartable. Practical mechanisms for supporting state-based recovery in replicated state machines and like replica are described. In particular, each client daemon may include an operations log and an applied log sequence number. Each client driver may include a potentially different operations log. Each client daemon may be configured to request logged operations associated with log sequence numbers in one or more ranges specified by a specification that includes the applied log sequence number. The requested logged operations may reside in the operations log maintained by a client driver. Each client daemon may operate in accordance with user-level constraints and each client driver may operate in accordance with kernel-level constraints.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07360111",
	"publication_date": "2008-04-15",
	"application_number": "10977795",
	"application_date": "2004-10-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Machine translation using learned word associations without referring to a multi-lingual human authored dictionary of content words",
	"summary": "",
	"abstract": "A method and computer-readable medium are provided that perform a series of steps associated with machine translation. These steps include using a first text in a first language and a second text in a second language, to produce an association list where words in the first language are associated with words in the second language. A first syntactic structure for a sentence from the first text is aligned with a second syntactic structure for a sentence in the second text based on the association list without referring to a bilingual dictionary of content words. The association list is also used during translations. Specifically, a word in the first language is translated into a word in the second language based on an entry in the association list without referring to a bilingual dictionary that contains content words. Thus, training and translation are performed without the need for a bilingual dictionary of content words.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07356457",
	"publication_date": "2008-04-08",
	"application_number": "10376743",
	"application_date": "2003-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Manipulating a telephony media stream",
	"summary": "",
	"abstract": "Systems, methods, and data structures for pluggable terminals are provided. Pluggable terminals are part of client and server TAPI communications systems. Pluggable terminal allow third parties to provide their own media processing devices and implement control methods for those devices. Methods for plugging in a pluggable terminal and conducting a communications session using the new pluggable terminal are described. A data structure for a pluggable terminal type has a wrapper around a media processing device control method. A data structure for registering a pluggable terminal has a terminal class name, a unique identifier, and a set of media types supported by the pluggable terminal. A data structure for a terminal base class has an interface for plugging in a pluggable terminal and another interface for a TAPI application component.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07356409",
	"publication_date": "2008-04-08",
	"application_number": "11055033",
	"application_date": "2005-02-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Markup language and object model for vector graphics",
	"summary": "",
	"abstract": "An element object model and a vector graphics markup language for using that element object model in a manner that allows program code developers to consistently interface with a scene graph data structure to produce graphics. The vector graphics element object model generally corresponds to shape elements and other elements including image and video elements that correlate with a scene graph object model of the scene graph. Markup may be parsed into data including elements in an element tree that is translated into the objects of a scene graph data structure. Other markup may be translated directly into data and calls that create the scene graph objects. The markup language provides distinct ways to describe an element, including a simple string format or complex property syntax, which may be named, enabling reuse in other locations in the markup.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07417645",
	"publication_date": "2008-08-26",
	"application_number": "10693633",
	"application_date": "2003-10-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Media streaming of web content data",
	"summary": "",
	"abstract": "Methods for streaming web content data via a computer-readable medium. The web content data comprises one or more media samples. The media samples are encoded in a streaming media format as a web component stream. The web component stream is combined with other component streams comprising additional data other than web content data into a presentation stream. The presentation stream is transmitted via a media server to a client. Rendering commands, which are included in one or more rendering samples encoded in the web component stream along with the media samples, coordinate synchronization between the media samples and the additional data when the client renders the presentation stream.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07415529",
	"publication_date": "2008-08-19",
	"application_number": "11464439",
	"application_date": "2006-08-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mediating conflicts in computer user's context data",
	"summary": "",
	"abstract": "Techniques are described providing mediated information about a current state that is modeled with multiple state attributes. In some situations, the providing includes receiving from a first source an indication of a first value for an indicated one of the state attributes of the modeled current state, receiving from a second source an indication of a second value for the indicated state attribute, and, after an indication from a client for a value for the indicated state attribute, sending to the client a mediated value for the indicated state attribute that is produced by mediating between available values for the indicated state attribute including at least the first and second values.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07444594",
	"publication_date": "2008-10-28",
	"application_number": "10824636",
	"application_date": "2004-04-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for applying policies",
	"summary": "",
	"abstract": "A policy handling system creates multiple policies and associates each of the multiple policies with at least one target node in an enterprise. The system then applies each of the multiple policies to the appropriate target node. The multiple policies can be event-handling policies. Each policy can be associated with a group of target nodes in which the group of target nodes share a common relationship. Domain controllers receive the multiple policies and apply the policies to the appropriate target nodes. A meta-policy is used to control the application of the multiple policies to the proper target nodes.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07418489",
	"publication_date": "2008-08-26",
	"application_number": "09875374",
	"application_date": "2001-06-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for building metadata driven software development kit",
	"summary": "",
	"abstract": "A metadata driven software development system provides various functionalities related to an entity of an application in the metadata format. Specifically, the system provides a set of base classes related to the entity and a set of methods and application programming interfaces for various operations to be performed on the entities in the metadata format. Defining such functionalities in the metadata format allows the system to dynamically generate XML messages matching any customized schema for that entity. Because such functionality is metadata driven, this system can be used with customized versions of the application without requiring any additional code or recompilation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07321894",
	"publication_date": "2008-01-22",
	"application_number": "11025322",
	"application_date": "2004-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for event handling in an enterprise",
	"summary": "",
	"abstract": "An event-handling system assigns multiple devices in an enterprise to a group. At least one event-handling policy is assigned to the group of devices. The event-handling policy assigned to the group is associated with each of the multiple devices in the group. A current state of each device is evaluated before the event-handling policy is applied to the device. A particular device may be assigned to two or more groups. The event-handling policy may define how the device is configured or the types of events that are provided to each device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07444395",
	"publication_date": "2008-10-28",
	"application_number": "09875798",
	"application_date": "2001-06-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for generating user interfaces based upon automation with full flexibility",
	"summary": "",
	"abstract": "A method, computer readable medium and system are provided which generate a model driven form user interface to represent an application model. The method includes selecting which of multiple different logical form types to use to generate the form user interface to represent the application model. The method also includes providing a first map. A display target independent logical form is generated using the application model, the selected form type and the first map.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07424485",
	"publication_date": "2008-09-09",
	"application_number": "10860306",
	"application_date": "2004-06-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for high-performance rendering and hit testing of a window tree",
	"summary": "",
	"abstract": "A method and apparatus for high-performance rendering and hit-testing of a window tree is provided. A window tree may be rendered using an application programming interface provided by the present invention. The application programming interface provides support for world-transforms, enabling entire sub-trees of the window tree to be rotated and scaled during rendering. In order to quickly render and hit-test the transformed nodes of the window tree, a stack-based implementation of the u201cpainter's algorithmu201d is utilized to achieve fast rendering. By storing all state information on a stack regarding each node in the window tree and building new data structures containing rendering information for each node and its children, any portion of the sub tree may be rendered on demand.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07453473",
	"publication_date": "2008-11-18",
	"application_number": "11035640",
	"application_date": "2005-01-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for identifying programming object attributes",
	"summary": "",
	"abstract": "The present invention provides a method and computer-readable medium for searching for programming objects on a computer system. Under one aspect of the invention, optional search attributes are used to order a list of references to found programming objects. Under a second aspect of the invention, object attributes that are stored outside of a static attribute storage area are inspected during the search for programming objects. Under a third aspect of the invention, different sets of object data are allowed to reference the same programming object class, and different objects of a single programming object class may be initialized in different ways so that they exhibit different attributes.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07457821",
	"publication_date": "2008-11-25",
	"application_number": "11180147",
	"application_date": "2005-07-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for maintaining consistency of a shared space across multiple endpoints in a peer-to-peer collaborative computer system",
	"summary": "",
	"abstract": "In a peer-to-peer collaboration system, deltas containing data change commands are organized in a persistent data structure called a delta log. The delta log is organized into blocks, which are the largest division in the delta log. In turn, blocks contain groups, groups contain chains and chains contain deltas. Delta blocks are used to implement priority deltas that are used to limit the collection of data change commands that must be transferred. Within a block the deltas are organized by groups, each of which is a set of deltas organized into chains. The delta group in used to determine which deltas to purge. The chains are ordered by increasing creator ID of the endpoint that created the chain. Organizing the delta log in this fashion allows the log to be u201cwalkedu201d to detect convergence problems. To achieve causality-preservation, each delta has a list of dependencies representing other deltas that must be executed before the current delta can be executed. The dynamics manager uses the ability to do (execute) and undo commands to perform roll back and roll forward operations on deltas in order to achieve convergence.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07340502",
	"publication_date": "2008-03-04",
	"application_number": "10279785",
	"application_date": "2002-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for managing input focus and z-order",
	"summary": "",
	"abstract": "An improved system for managing user inputs and z-order in a graphic user interface (GUI) environment is disclosed. A GUI element may include a plurality of keys corresponding to keys on a typical keyboard, and may serve as a replacement for the keyboard. The system permits an application having an input focus to retain the input focus while inputs are received in the GUI element, and even transient user interface elements (e.g., menus) will remain displayed in those applications after the user inputs are entered. Input pen and mouse events may first be forwarded to the input area application, which may remove the events from the normal circulation, preventing other applications from learning of the events, and then post those events to the input panel application separately.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07386803",
	"publication_date": "2008-06-10",
	"application_number": "11034749",
	"application_date": "2005-01-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for managing input focus and Z-order",
	"summary": "",
	"abstract": "An improved system for managing user inputs and z-order in a graphic user interface (GUI) environment is disclosed. A GUI element may include a plurality of keys corresponding to keys on a typical keyboard, and may serve as a replacement for the keyboard. The system permits an application having an input focus to retain the input focus while inputs are received in the GUI element, and even transient user interface elements (e.g., menus) will remain displayed in those applications after the user inputs are entered. Input pen and mouse events may first be forwarded to the input area application, which may remove the events from the normal circulation, preventing other applications from learning of the events, and then post those events to the input panel application separately.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07389475",
	"publication_date": "2008-06-17",
	"application_number": "11034743",
	"application_date": "2005-01-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for managing power in network interface modules",
	"summary": "",
	"abstract": "A method and system for managing power consumption in a portable computing device having a network interface module is presented. A power management module receives inputs from other modules and determines when the network interface module is to be put in a doze state for a predetermined number of beacon intervals to conserve power consumption in the network interface module. The network interface module in a device that is associated with a network is put in the doze state after an event has occurred including when a scan has been performed, after a delayed sleep timer has expired, and after a beacon transmission has been completed and no traffic is buffered for the device. The delayed sleep time is set based on the estimated round trip time of a packet.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07340615",
	"publication_date": "2008-03-04",
	"application_number": "10355412",
	"application_date": "2003-01-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for managing power in network interface modules",
	"summary": "",
	"abstract": "A method and system for managing power consumption in a portable computing device having a network interface module is presented. A power management module receives inputs from other modules and determines when the network interface module is to be put in a doze state for a predetermined number of beacon intervals to conserve power consumption in the network interface module. The network interface module in a device that is associated with a network is put in the doze state after an event has occurred including when a scan has been performed, after a delayed sleep timer has expired, and after a beacon transmission has been completed and no traffic is buffered for the device. The delayed sleep time is set based on the estimated round trip time of a packet.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07451331",
	"publication_date": "2008-11-11",
	"application_number": "11330785",
	"application_date": "2006-01-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for managing secure collaborative transactions",
	"summary": "",
	"abstract": "Different levels of security are provided in a security system so that users can decide the security level of their own communications. Users can choose a low level of security and maintain the security overhead as low as possible. Alternatively, they can choose higher levels of security with attendant increases in security overhead. The different levels of security are created by the use of one or more of two keys: an encryption key is used to encrypt plaintext data in a delta and a message authentication key is used to authenticate and insure integrity of the data. Two keys are used to avoid re-encrypting the encrypted data for each member of the telespace. In one embodiment, the security level is determined when a telespace is created and remains fixed through out the life of the telespace. For a telespace, the security level may range from no security at all to security between the members of the telespace and outsiders to security between pairs of members of the telespace. In another embodiment, subgroups called u201ctribesu201d can be formed within a telespace and each tribe adopts the security level of the telespace in which it resides.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07415606",
	"publication_date": "2008-08-19",
	"application_number": "11257479",
	"application_date": "2005-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for mapping a data model to a user interface model",
	"summary": "",
	"abstract": "A method, computer readable medium and system are provided which generate a model driven form user interface. In accordance with the method, a data model is mapped to a user interface model using at least one declarative map. The one or more declarative maps used to map the data model to the user interface model can be explicit maps which are external to a mapping engine used to generate the user interface model and any intermediate models.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07363578",
	"publication_date": "2008-04-22",
	"application_number": "10860225",
	"application_date": "2004-06-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for multi-sensory speech enhancement",
	"summary": "",
	"abstract": "A method and system use an alternative sensor signal received from a sensor other than an air conduction microphone to estimate a clean speech value. The estimation uses either the alternative sensor signal alone, or in conjunction with the air conduction microphone signal. The clean speech value is estimated without using a model trained from noisy training data collected from an air conduction microphone. Under one embodiment, correction vectors are added to a vector formed from the alternative sensor signal in order to form a filter, which is applied to the air conductive microphone signal to produce the clean speech estimate. In other embodiments, the pitch of a speech signal is determined from the alternative sensor signal and is used to decompose an air conduction microphone signal. The decomposed signal is then used to determine a clean signal estimate.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07447630",
	"publication_date": "2008-11-04",
	"application_number": "10724008",
	"application_date": "2003-11-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for performing network diagnostics",
	"summary": "",
	"abstract": "A network diagnostics system allows determining a root cause for a network problem caused by a local or a remote component of the network, wherein the network diagnostic system may receive the symptoms of such a problem from an application. The network diagnostic system uses a plurality of helper classes, each of the plurality of helper classes providing diagnostic information about an object or a class of objects on the network. Moreover, the network diagnostic system may also use one or more extensible helper classes that are designed to receive information from third party helper classes.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07350107",
	"publication_date": "2008-03-25",
	"application_number": "11118206",
	"application_date": "2005-04-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for synchronizing multiple versions of digital data",
	"summary": "",
	"abstract": "A method and system for synchronizing multiple versions of multimedia objects is provided. Each multimedia object may be identified by a unique identifier. In addition, a history graph may be generated and maintained for each object, where the history graph includes nodes that store unique identifiers and whose vectors describe the relationship between the multimedia objects. Metadata may be used to describe the transformations of objects.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07454444",
	"publication_date": "2008-11-18",
	"application_number": "11020216",
	"application_date": "2004-12-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus utilizing speech grammar rules written in a markup language",
	"summary": "",
	"abstract": "The present invention provides a method and apparatus that utilize a context-free grammar written in a markup language format. The markup language format provides a hierarchical format in which grammar structures are delimited within and defined by a set of tags. The markup language format also provides grammar switch tags that indicate a transitions from the context-free grammar to a dictation grammar or a text buffer grammar. In addition, the markup language format provides for the designation of code to be executed when particular grammar structures are recognized from a speech signal.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07389234",
	"publication_date": "2008-06-17",
	"application_number": "09759474",
	"application_date": "2001-01-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and computer-readable medium for installing an upgrade to an application program",
	"summary": "",
	"abstract": "A method and computer-readable medium for upgrading an application program, and making an installer program aware that an application has been upgraded is disclosed. The method recognizes that an upgrade to the application has been initiated. The upgrade includes an identifier for the application to be upgraded, as well as information required for the installer to perform the upgrade. The installer program accesses the upgrade information, which includes instructions necessary for installing the upgrade. The installer program also accesses information related to the installed state of the application and related applications. The installer program determines whether or not the upgrade should be performed. If the upgrade should be performed, the installer program performs the upgrade and stores the fact that the application has been upgraded. If the application should not be upgraded, the installer program stores information reflecting the fact that the upgrade is available but not installed.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07472385",
	"publication_date": "2008-12-30",
	"application_number": "10843267",
	"application_date": "2004-05-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and levels of ping notification",
	"summary": "",
	"abstract": "A method is provided for sending notifications to a mobile device to indicate that there is data on a computing device to be synchronized. Under one embodiment, the notification is sent as a short message service message. Multiple levels of notification are possible with the lowest level indicating only that there is data to be synchronized and the highest level identifying the object that changed and the content of the change.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07366796",
	"publication_date": "2008-04-29",
	"application_number": "10645793",
	"application_date": "2003-08-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for a digital device menu editor",
	"summary": "",
	"abstract": "A method of creating a menu for a handheld digital device in a development environment includes selecting a target device which has an associated operating system available to the development environment. An editor is called for creation of the menu. The editor uses the constraints of the associated target device operating system so that actual behavior of the target device can be viewed as the development occurs. The developer defines functionality for the menu and can verify its operation. The menu editor can be customized for new digital devices with new operating system. Code may be generated as a result of completing the development process and saving the design. The resulting code is assured to run properly on the target device operating system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07398474",
	"publication_date": "2008-07-08",
	"application_number": "11047235",
	"application_date": "2005-01-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for a guest physical address virtualization in a virtual machine environment",
	"summary": "",
	"abstract": "A method of sharing pages between virtual machines in a multiple virtual machine environment includes initially allocating a temporary guest physical address range of a first virtual machine for sharing pages with a second virtual machine. The temporary range is within a guest physical address space of the first virtual machine. An access request, such as with a DMA request, from a second virtual machine for pages available to the first virtual machine is received. A reference count of pending accesses to the pages is incremented to indicate a pending access and the ages are mapped into the temporary guest physical address range. The pages are accessed and the reference count is decremented. The mapping in the temporary guest physical address range is then removed if the reference count is zero.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07334076",
	"publication_date": "2008-02-19",
	"application_number": "11075219",
	"application_date": "2005-03-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for a second level address translation in a virtual machine environment",
	"summary": "",
	"abstract": "A method of performing a translation from a guest virtual address to a host physical address in a virtual machine environment includes receiving a guest virtual address from a host computer executing a guest virtual machine program and using the hardware oriented method of the host CPU to determine the guest physical address. A second level address translation to a host physical address is then performed. In one embodiment, a multiple tier tree is traversed which translates the guest physical address into a host physical address. In another embodiment, the second level of address translation is performed by employing a hash function of the guest physical address and a reference to a hash table. One aspect of the invention is the incorporation of access overrides associated with the host physical address which can control the access permissions of the host memory.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07428626",
	"publication_date": "2008-09-23",
	"application_number": "11075211",
	"application_date": "2005-03-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for accurately calculating latency variation on an end-to-end path in a network",
	"summary": "",
	"abstract": "A high-resolution, per-packet measurement tool for analyzing a computer network that operates by sending a predetermined number of packets from a sender machine to a receiver machine with measurement information inserted into the packet. The system kernel at the sending machine stamps a sequence number and the sender's local time into the data section of each packet. When packets arrive at the receiver machine, they are similarly stamped by the receiving machine's kernel with the receiving machine's local time. The maintained packet information serves as the basis for latency analysis. For example, one set of latencies can be obtained with QoS mechanisms turned on, and another set with QoS mechanisms turned off, whereby the benefits of the QoS mechanisms can be accurately determined. To analyze the latencies, the present invention normalizes each time and each latency into relative latency information. Clock skew and timer jumps may be handled as part of the normalization.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07333517",
	"publication_date": "2008-02-19",
	"application_number": "11203474",
	"application_date": "2005-08-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for applying user interface elements to data",
	"summary": "",
	"abstract": "Systems and methods for providing and associating or combining visual style information with data content. The present invention relates to associating a shared set of style information with two or more objects or items that are to be displayed as part of a list or some other visual grouping of the items. By sharing the style information, i.e., the visual representation characteristics information, a program developer need only define the style information or style once. Upon defining the style, the developer can declaratively associate all the items in the list or group with the defined style.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07409642",
	"publication_date": "2008-08-05",
	"application_number": "10717024",
	"application_date": "2003-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for automatic insertion of context information into an application program module",
	"summary": "",
	"abstract": "Context information surrounding an application program can be inserted into an electronic document in order to increase accuracy and efficiency in note taking. For example, in a meeting scenario where a slide presentation is being displayed, the present invention can automatically insert information relating to the slide presentation into an application program such as a document editing module. Specifically, in this example, the information relating to the slide information can be inserted into the document editing module in one of four different formats: (1) as editable text derived from each slide; (2) an editable image for each slide; (3) a thumbnail image for each slide; (4) a hypertext link to each slide; and (5) any combination thereof.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07392475",
	"publication_date": "2008-06-24",
	"application_number": "10444585",
	"application_date": "2003-05-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for caching address translations from multiple address spaces in virtual machines",
	"summary": "",
	"abstract": "A method of virtualizing memory through shadow page tables that cache translations from multiple guest address spaces in a virtual machine includes a software version of a hardware tagged translation look-aside buffer. Edits to guest page tables are detected by intercepting the creation of guest-writable mappings to guest page tables with translations cached in shadow page tables. The affected cached translations are marked as stale and purged upon an address space switch or an indiscriminate flush of translations by the guest. Thereby, non-stale translations remain cached but stale translations are discarded. The method includes tracking the guest-writable mappings to guest page tables, deferring discovery of such mappings to a guest page table for the first time until a purge of all cached translations when the number of untracked guest page tables exceeds a threshold, and sharing shadow page tables between shadow address spaces and between virtual processors.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07363463",
	"publication_date": "2008-04-22",
	"application_number": "11128982",
	"application_date": "2005-05-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for configuring a timer",
	"summary": "",
	"abstract": "The present invention facilitates access to timers in a computing device. In particular, a timer system facilitates configuring a hardware interrupt timer in a computing device, the timer being guaranteed to expire at a specific time in a non-real-time environment. A calling application passes parameters to a hardware independent application programming interface (API) to the hardware interrupt timer. The hardware independent API validates the parameters and relays them to a hardware dependent API. The hardware dependent API establishes a connection with the timer in accordance with the validated parameters, and executes a service routine associated with the application upon expiration of the timer.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07383460",
	"publication_date": "2008-06-03",
	"application_number": "11089957",
	"application_date": "2005-03-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for handling streaming information",
	"summary": "",
	"abstract": "One aspect of the present invention leads to a method of handling streaming information. The method includes receiving the streaming information and analyzing the streaming information to locate one or more points of interest in the streaming information. An index of the one or more points of interest are generated. The index is delivered to a user separate from the streaming information. Rendering of the streaming information is controlled based on the points of interest.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07334078",
	"publication_date": "2008-02-19",
	"application_number": "11096733",
	"application_date": "2005-04-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for importing data",
	"summary": "",
	"abstract": "A method of transferring batches of data to a target database includes receiving ordered rows of data and loading the ordered rows into batch tables. Each batch table being either a parent table, a child table or a no dependency table. The parent batch tables and no dependency batch tables are entered into a ready queue and the child batch tables are entered into a into a waiting pool. Any batch table in the ready queue may be transferred to the database using one or more processors. Any child batch table is moved to the ready queue if no corresponding parent table is in the ready queue. A dependency count of a child table is maintained and decremented if a parent table is imported to a database. In one embodiment, the corresponding child table in the waiting pool is transferred to the ready queue if the dependency count is zero.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07421440",
	"publication_date": "2008-09-02",
	"application_number": "10925181",
	"application_date": "2004-08-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for improved reliability in storage devices",
	"summary": "",
	"abstract": "A method of preventing data loss in a data storage system includes supplying write data to a high speed volatile write buffer and supplying electrical power from an energy storage device upon detection of a primary power loss event. The backup electrical power is supplied to the write buffer and nonvolatile cache. Under backup power, the write data is transferred into the nonvolatile cache and the backup power is removed. Upon regaining main power, a data presence indication triggers a transfer of the write data from the nonvolatile cache to the long term storage media. The method may be implemented for a system to protect it from inadvertent power losses or it may implemented in a system where the long term storage device is power cycled to save power. The energy storage device is not necessarily needed in the power cycled system unless power failure protection is also desired.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07395452",
	"publication_date": "2008-07-01",
	"application_number": "10949154",
	"application_date": "2004-09-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for limiting software updates",
	"summary": "",
	"abstract": "A method of detecting pirated software includes receiving a request for a software update by a client computer and providing to the client computer a test to be performed. The test is performed on the client computer against the client software application. The client computer may be denied a software update as a result of the test finding an illegitimate copy of the client software. The invention may be practiced in a network environment where a server transfers a test program for a client to execute upon request of a software update. The test performs an integrity check and denies the request for a software update if the client software is found to be illegitimate.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07331063",
	"publication_date": "2008-02-12",
	"application_number": "10836409",
	"application_date": "2004-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for managing data transfer over a network",
	"summary": "",
	"abstract": "A method, system, and computer-readable media are provided for managing the transfer of data over a network. In accordance with one method of the invention, the level of actual network bandwidth utilization is monitored. A timestamp indicating when the level of actual network bandwidth utilization was monitored is then provided. In addition, the quantity of data that had passed through the network interface at the time corresponding to the timestamp is determined.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07325068",
	"publication_date": "2008-01-29",
	"application_number": "10988073",
	"application_date": "2004-11-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for managing graphics objects in a graphics display system",
	"summary": "",
	"abstract": "A method and system for controlling the algorithmic elements in 3D graphics systems via an improved 3D graphics API is provided. In one aspect, in a 3D graphics system having privatized formats with privatized drivers used to increase the efficiency of display, existing problems are eliminated that are associated with multiple redundant copies of the publicly formatted graphics data made in host system memory pursuant to various graphics operations e.g., lock and unlock operations. The ability to make a system copy of publicly formatted data is exposed to the developer, eliminating the creation of unnecessary, and redundant copies. Efficient switching between the privatized and public format remains hidden from the developers so that applications execute efficiently while removing consideration thereof from the developers. Thus, developers are free to consider other tasks. In the event that a developer wishes to make a copy of the data, the data is copied pursuant to an operation that the developer calls and over which the developer has control, ensuring that multiple redundant copies of the graphics data are not made in host system memory.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07466317",
	"publication_date": "2008-12-16",
	"application_number": "10899646",
	"application_date": "2004-07-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for managing image files",
	"summary": "",
	"abstract": "A method and system for managing image files is provided. The image files include a plurality of streams such as a control stream, a data stream, a bitmap stream, and a cluster map stream. An audit trail stream, properties stream and fix-up stream may also be provided. An image driver translates requests from the operating system so that the image can be read, edited or otherwise manipulated.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07334099",
	"publication_date": "2008-02-19",
	"application_number": "10184257",
	"application_date": "2002-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for obtaining personal aliases through voice recognition",
	"summary": "",
	"abstract": "Methods and systems for recognizing a spoken alias are disclosed. The present invention includes generating a plurality of alias variations based on a discoverable name and creating a phonetic representation for each of the alias variations. The present invention also includes capturing a phonetic pronunciation of the spoken alias. At least one of the created alias variations that has a phonetic representation that corresponds to the captured phonetic pronunciation is selected.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07428491",
	"publication_date": "2008-09-23",
	"application_number": "11009925",
	"application_date": "2004-12-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for packing and unpacking web pages",
	"summary": "",
	"abstract": "A method for packing the multiple files and folders of an HTML Web page into a single MHTML file. The packing process begins by determining whether the user has write privileges to the current location. If not, the user is prompted to save the MHTML file in an alternate location (e.g., the desktop). If the user has write privileges to the current location, the process opens the main HTML Web page and searches for supporting resource files. In short, the supporting resource files are identified by searching for known, common resource file references in the main HTML source file. When the resource file references have been identified, the process packages the main HTML document and all of the supporting resource files into a single file in MHTML format. The unpacking process opens the MHTML file and identifies the main HTML document portion, as well as the portions of the MHTML file containing the supporting resource files. Once all of the components have been identified, the Web page's folder structure is determined by referring to the content location field contained in each separate portion of the MHTML file. The individual MHTML components are converted into files and the main HTML file is stored. The resource files are stored in locations relative to the main HTML file, as identified by the unpacked folder structure.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07464328",
	"publication_date": "2008-12-09",
	"application_number": "10962018",
	"application_date": "2004-10-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for processing HTTP requests creating a new map for an entire namespace that is associated with the request and that maps the name extension to the further content type within namespace",
	"summary": "",
	"abstract": "Various embodiments of the invention are directed to closely integrating functionality between an internet server and a WebDAV tool. Areas of specific focus in this document include delegation of duties between the internet server and the WebDAV tool, efficient management of a resource's content-type, support for segregation of a namespace into separate virtual roots, and determinations of whether to invoke certain processing extensions to handle requests for a given HTTP verb.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07457805",
	"publication_date": "2008-11-25",
	"application_number": "10382943",
	"application_date": "2003-03-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for providing service listings in electronic yellow pages",
	"summary": "",
	"abstract": "A method and system for allowing a regional service merchant that is outside of a given geographical boundary, but services inside the geographical boundary, to be included in a result set of a search directed to a location inside the geographical boundary. Text and/or glyphs are returned along with the regional service merchant's business listing so as to explain to a user why a business not physically residing in the search area has been included in the result set. An application programming interface ensures that, if a business is listed as a regional service merchant, then the text and/or glyph is stored in association with the business listing.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07437357",
	"publication_date": "2008-10-14",
	"application_number": "11203472",
	"application_date": "2005-08-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for single reactivation of software product licenses",
	"summary": "",
	"abstract": "A method for reactivation of software products includes activating a first software product associated with a reactivation policy group. A hardware identifier derived from the computer hardware configuration is bound with the first software product activation. A second software product is activated having an associated reactivation binding list. Reactivation is requested for the first software product and an updated hardware identifier is associated with a reactivation policy group of the first software product. The second software product may be spared the request for reactivation if the second product can be associated with the reactivation of the first software product given the binding list is compatible with the reactivation policy group.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07379918",
	"publication_date": "2008-05-27",
	"application_number": "10903942",
	"application_date": "2004-07-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for supporting multiple independent transactional resource managers on a single logical volume",
	"summary": "",
	"abstract": "A system and method supporting multiple independent transactional resource managers on a single logical volume, in which each resource manager is a unit of storage management. Each resource manager independently maintains metadata associated with a collection of files that are contained within the scope of a resource manager, such as the files within a subdirectory corresponding to the resource manager. A general architecture allows databases or other entities to integrate with a transactional file system volume via the resource managers, whereby each database has its files independently associated with a transactional resource manager such that database operations do not affect other operations on the volume. Having independent resource managers allows different levels of performance, reliability, feature availability, and manageability to be specified within a single volume. Functions to create, start, and shut down a resource manager are also provided, along with other functions that facilitate resource manager usage.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07389303",
	"publication_date": "2008-06-17",
	"application_number": "10611683",
	"application_date": "2003-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for URL based filtering of electronic communications and web pages",
	"summary": "",
	"abstract": "A system and method for handling an electronic communication such as an email, an instant message or a chat room statement. Instructions receive and parse the electronic communication. URLs within the parsed electronic communication are identified and categorized as appropriate or inappropriate. The electronic communication is routed as a function of the categorized URLsu2014appropriate electronic communications are routed to the addressee; inappropriate electronic communications have controlled access. Also included is a system and method for controlling access by third parties to web pages including instructions for parsing a web page, identifying URLs within the parsed web page, categorizing the identified URLs, and permitting third parties to access the web page as a function of the categorized URLs.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07421498",
	"publication_date": "2008-09-02",
	"application_number": "10647824",
	"application_date": "2003-08-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for verifying rule compliance of an application object",
	"summary": "",
	"abstract": "A verification tool applies a set of rules to determine whether an application object is rule compliant when a condition associated with the object is met. The verification tool determines whether the object is associated with a rule compliant property value. If the property value does not comply with the rule, then the rule has been violated and an error message is issued. The rule corresponds to settings implemented by a developer on the component. Thus, the developer is informed when at least one property value associated with the object does not comply with the corresponding rule. Feedback is provided about which specific object is not rule compliant such that the component may be modified to be rule compliant.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07448023",
	"publication_date": "2008-11-04",
	"application_number": "11067515",
	"application_date": "2005-02-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for zooming in and out of paginated content",
	"summary": "",
	"abstract": "A method and system for changing the zoom applied to a document. A request is received to change the zoom of a document displayed in a viewing area. A focal point is determined based on whether an insertion point or active selection is currently displayed in the viewing area. Then, the viewable area of the document is displayed in the viewing area based on the focal point and the zoom change.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07434174",
	"publication_date": "2008-10-07",
	"application_number": "11073266",
	"application_date": "2005-03-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system of integrating instant messaging with other computer programs",
	"summary": "",
	"abstract": "Described is a system and method by which client programs such as desktop applications can use instant messaging functionality. An application program interface is provided that allows a client program (e.g., an application program) to interact with an instant messaging infrastructure, such as via event calls to initiate conversations, send messages and/or obtain presence information. This enables other programs to create new user experiences that integrate the messaging infrastructure, such as displaying presence, or enabling instant messages to be sent from within an application program. Document collaboration is also facilitated, by allowing users to send instant messages (or the document) to other users, including sending an instant message directly to a user associated with a specific comment or change to the document.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07451186",
	"publication_date": "2008-11-11",
	"application_number": "10916297",
	"application_date": "2004-08-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system to shut down and control computer radios",
	"summary": "",
	"abstract": "A system and method that facilitates control of the power states of a mobile device's wireless radios. Radios can be collectively turned off in a straightforward, intuitive operation, and can be restored to a powered-on state in a similar manner. In addition to collective powering down and restoring, the power states of individual radios can be controlled in a selective manner. When any radio is on, a connectivity dialog provides a link for collectively turning wireless devices off. When no radios are on, the connectivity dialog provides a corresponding link to turn wireless radios on, which may be only those that were on prior to the collective shutdown. A settings user interface, such as accessible via a link on the connectivity dialog, provides on/off radio buttons and checkboxes that enable the selective control of radio power state.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07460891",
	"publication_date": "2008-12-02",
	"application_number": "10405866",
	"application_date": "2003-04-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for dynamic application of rights management policy",
	"summary": "",
	"abstract": "Disclosed is a method for dynamically applying a rights management policy to a message by allowing an administrator to associate certain rights management policies with certain senders and recipients of messages, with groups of users possessing certain common criteria which define the users and groups of users, with certain attributes of the message, and with certain environmental attributes. Also disclosed is a method for allowing an administrator to automatically update a rights management protected message as it passes through a message transfer agent. The administrator may determine either on a regular interval or an ad-hoc basis that the message transfer agent scan the messages stored to determine whether or not the content has expired. If the content has indeed expired the administrator may take steps to have the expired content deleted entirely, refreshed with more current content, or replaced with a tombstone indicating that the original content has expired.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07430754",
	"publication_date": "2008-09-30",
	"application_number": "10807063",
	"application_date": "2004-03-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for managing network filter based policies",
	"summary": "",
	"abstract": "A method and system are provided for adding, removing, and managing a plurality of network policy filters in a network device. Filters are installed in a framework and designated as active or disabled. Each filter has a priority. When a new filter is to be installed into the framework, it is compared to installed filters to determine if a conflict exists. If no conflict exists, the new filter is added as an active filter. If a conflict exists, a higher priority conflicting filter is added as active and a lower priority filter is added as inactive.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07409707",
	"publication_date": "2008-08-05",
	"application_number": "10456433",
	"application_date": "2003-06-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for providing feedback responsive to sensing a physical presence proximate to a control of an electronic device",
	"summary": "",
	"abstract": "In a computer system, a touch sensitive input device having touch sensitive auxiliary controls can be used to provide a user with information regarding the functionality of an auxiliary control. When a user's hand approaches a touch sensitive input device, feedback can be displayed on a display screen. A user can receive feedback without activating the input device by touching or being extremely proximate to an auxiliary control. The feedback may take the form of a tool tip related to the auxiliary control or a combination of auxiliary controls simultaneously touched. When the hand of a user is moved away from the touch sensitive input device, the feedback brought on by sensing the user's hand may disappear.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07358956",
	"publication_date": "2008-04-15",
	"application_number": "09804383",
	"application_date": "2001-03-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for scoped services",
	"summary": "",
	"abstract": "Described is a mechanism for providing scoped modular services (SMS) through an API. A common set of services is provided by the API that may be enabled or disabled by each component. The services are managed using a property system in the same manner as element properties are used, such as properties relating to text formatting. This helps to ensure fine control and a high degree of customization for a user interface. The use of the services is not limited to editing in the common sense of the word. The SMS is a mechanism for controlling access to implementation of services contained within a tree of components. Services may also be created by developers that are managed by a service manager along with the common services.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07334236",
	"publication_date": "2008-02-19",
	"application_number": "10396805",
	"application_date": "2003-03-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for serving third party software applications from servers to client computers",
	"summary": "",
	"abstract": "An application serving system is disclosed that comprises a target client computer that connects to a server system and subscribing institution host Web Server, over a network. Both the client computer Web server and server system implement a network protocol layer to communicate across the network. In a preferred embodiment, the network is the Internet, or other public or private networks, and the network protocol layers are implemented on top of TCP/IP or UDP/IP. Other network configurations and network protocols layers, however, could be implemented in place or in addition to the Internet such as wireless CDPD, GPRS, or other networks. The target, client computer is preferably a PC.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07370071",
	"publication_date": "2008-05-06",
	"application_number": "09859208",
	"application_date": "2001-05-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for synchronously binding an external behavior to a web page element",
	"summary": "",
	"abstract": "A new form of DHTML behaviors, called u201cElement Behaviors,u201d wherein a behavior component is bound to an HTML element, and not just attached to the element as with attached behaviors. A special processing instruction is used to import the Element Behavior into a Web page. Upon parsing the Web page, the Element Behavior is initialized as soon as it has been downloaded and parsed. This immediate initialization makes the Element Behavior declaratively available to bind synchronously to the element(s) it is modifying. A viewLink is a feature of Element Behaviors that permits encapsulation of a behavior component file (e.g., an HTC file) so that the structure of the HTC file is transparent to a Web page (u201cprimary documentu201d) to which the HTC file is linked, but the content of the HTC file may be displayed in the primary document. The viewLink provides a pointer to the content in the encapsulated HTC file, and renders that content in the primary document, without incorporating the elements of the encapsulated HTC file into the primary document structure.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07383512",
	"publication_date": "2008-06-03",
	"application_number": "09677445",
	"application_date": "2000-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of noise reduction using instantaneous signal-to-noise ratio as the principal quantity for optimal estimation",
	"summary": "",
	"abstract": "A system and method are provided that accurately estimate noise and that reduce noise in pattern recognition signals. The method and system define a mapping random variable as a function of at least a clean signal random variable and a noise random variable. A model parameter that describes at least one aspect of a distribution of values for the mapping random variable is then determined. Based on the model parameter, an estimate for the clean signal random variable is determined. Under many aspects of the present invention, the mapping random variable is a signal-to-noise ratio variable and the method and system estimate a value for the signal-to-noise ratio variable from the model parameter.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07363221",
	"publication_date": "2008-04-22",
	"application_number": "10643370",
	"application_date": "2003-08-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of operation of an intelligent transpartent gateway during an ftp session",
	"summary": "",
	"abstract": "A transparent gateway having increased throughput during a file transfer protocol (ftp) session is provided. This increase is enabled through generalized network address translator (gNAT) at the kernel level that is under user-mode proxy control through an application programming interface (API). Initially, the proxy commands the API to generate a dynamic port-redirect in the gNAT for all connection requests for a port twenty-one to itself at the local port to which it is bound. The proxy may then establish a session on the client's behalf with the ftp server, establish a session on the client's behalf with a different ftp server, etc. The proxy then requests that the API command an address translation in the gNAT to open an ftp data session so that data from the ftp server need not pass up to the user-mode, but may be dynamically redirected within the kernel-mode.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07412523",
	"publication_date": "2008-08-12",
	"application_number": "10843280",
	"application_date": "2004-05-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of pattern recognition using noise reduction uncertainty",
	"summary": "",
	"abstract": "A method and apparatus are provided for using the uncertainty of a noise-removal process during pattern recognition. In particular, noise is removed from a representation of a portion of a noisy signal to produce a representation of a cleaned signal. In the meantime, an uncertainty associated with the noise removal is computed and is used with the representation of the cleaned signal to modify a probability for a phonetic state in the recognition system. In particular embodiments, the uncertainty is used to modify a probability distribution, by increasing the variance in each Gaussian distribution by the amount equal to the estimated variance of the cleaned signal, which is used in decoding the phonetic state sequence in a pattern recognition task.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07460992",
	"publication_date": "2008-12-02",
	"application_number": "11435254",
	"application_date": "2006-05-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of speech recognition using variables representing dynamic aspects of speech",
	"summary": "",
	"abstract": "A method and computer-readable medium are provided that determine predicted acoustic values for a sequence of hypothesized speech units using modeled articulatory or VTR dynamics values and using the modeled relationship between the articulatory (or VTR) and acoustic values for the same speech events. Under one embodiment, the articulatory (or VTR) dynamics value depends on articulatory dynamics values at pervious time frames and articulation targets. In another embodiment, the articulatory dynamics value depends in part on an acoustic environment value such as noise or distortion. In a third embodiment, a time constant that defines the articulatory dynamics value is trained using a variety of articulation styles. By modeling the articulatory or VTR dynamics value in these manners, hyper-articulated, hypo-articulated, fast, and slow speech can be better recognized and the requirement for the training data can be reduced.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07346510",
	"publication_date": "2008-03-18",
	"application_number": "10100717",
	"application_date": "2002-03-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and computer program products for providing network quality of service for world wide web applications",
	"summary": "",
	"abstract": "Methods and computer program products are disclosed for providing QoS for Web applications via an internet service application programming interface u201cISAPIu201d) filter running on an internet information server, wherein the ISAPI filter uses a traffic control application programming interface to manage bandwidth for individual HTTP requests. Responses to HTTP requests can be prioritized based on policies defined by the Web application developer, wherein policy decisions may be made based on many different parameters, such as, for example, the IP address of the Web browser making the request, the type of browser being used, HTTP u201ccookies,u201d the uniform resource locator being requested, an authenticated user ID, or any other information that is exposed from the internet information server through server variables. The present invention accomplishes this with no modifications to the internet information server, and u2022with very minimal changes to the Web application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07359986",
	"publication_date": "2008-04-15",
	"application_number": "11627887",
	"application_date": "2007-01-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for authentication of components in a graphics system",
	"summary": "",
	"abstract": "Methods and systems are provided for authenticating component(s) in connection with the use of a trusted graphics system. Techniques are provided for authenticating a graphics card in connection with a system that cryptographically secures content routed through a graphics pipeline, such that an application or device can indicate to the trusted graphics platform that the application or device is a trusted user of the trusted graphics platform, and such that the graphics platform can communicate to the trusted application or device that the graphics platform may be trusted by the application or device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07380130",
	"publication_date": "2008-05-27",
	"application_number": "10125170",
	"application_date": "2002-04-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for cooperative scheduling of hardware resource elements",
	"summary": "",
	"abstract": "Cooperatively scheduling hardware resources by providing information on shared resources within processor packages to the operating system. Logical processors may be included in packages in which some or all processor execution resources are shared among logical processors. In order to better schedule thread execution, information regarding which logical processors are sharing processor execution resources and information regarding which system resources are shared among processor packages is provided to the operating system. Extensions to the SRAT (static resource affinity table) can be used to provide this information.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07337442",
	"publication_date": "2008-02-26",
	"application_number": "10309524",
	"application_date": "2002-12-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for protecting information in paging operating systems",
	"summary": "",
	"abstract": "The inventive methods and systems provide an approach to protecting unencrypted sensitive information from being paged out to secondary storage, such as a hard disk, during paging operations. In the described embodiment, a key is provided and is maintained in the main memory of a virtual memory system. Measures are taken to protect the key such as page-locking the key in the main memory to ensure that it never gets paged out to the secondary storage. The described key is a desirably large key that is randomly generated by the operating system. When sensitive information is to be placed in the main memory, it is encrypted with the page-locked key. The encrypted sensitive information can then be paged out to secondary storage without concern about its security. When the encrypted sensitive information is needed by a process or application, it is retrieved from secondary storage and decrypted using the page-locked key. For further protection, the sensitive information can be decrypted into a page-locked page of main memory. More than one key can be used to encrypt and/or decrypt the sensitive information.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07330970",
	"publication_date": "2008-02-12",
	"application_number": "09489192",
	"application_date": "2000-01-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Middleware layer between speech related applications and engines",
	"summary": "",
	"abstract": "The present invention provides an application-independent and engine-independent middleware layer () between applications () and engines (). The middleware provides speech-related services to both applications () and engines (), thereby making it far easier for application vendors and engine vendors to bring their technology to consumers.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07379874",
	"publication_date": "2008-05-27",
	"application_number": "11634212",
	"application_date": "2006-12-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mobile communication device dynamic service application and dynamic service application scripting",
	"summary": "",
	"abstract": "A dynamic service application is stored and executed on a mobile or wireless communication device (e.g., a cellular telephone) to enable it to be programmed without specialized hardware, software, and other proprietary information. For example, dynamic service application programs or scripts may be entered directly by a user or may be received as a wireless or radiated digital message transmission. The dynamic service application executes the dynamic service application script, which is of a format to accommodate wireless or radiated transmission and storage on the device. The dynamic service application script may be written directly by a user on a computer or a mobile communication device or may be written with the aid of scripting u201cwizardu201d software that runs on a computer and guides the writing of script without the user having to work directly with the dynamic service application script. In addition to being received as radiated transmissions, dynamic service application scripts may also be sent as radiated transmissions from mobile communication devices to other devices or computers.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07418254",
	"publication_date": "2008-08-26",
	"application_number": "09789432",
	"application_date": "2001-02-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multi-application tabbing system",
	"summary": "",
	"abstract": "A method for displaying a plurality of windows on a display screen is described. The method includes steps of associating a first window with at least one second window, the at least one second window being independent of and external to the first window, and combining the first window and the at least one second window into a common window on a display screen, the first window and the at least one second window being configured to share a common window frame. An indicator may appear on the display as a target region when a user desires to associate the first and the second windows. Subsequent operations performed on the common window are performed automatically on any underlying window. For example, when a user chooses to save the contents of the common window, the contents of all of the windows of the common window may be saved.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07426697",
	"publication_date": "2008-09-16",
	"application_number": "11036614",
	"application_date": "2005-01-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multi-sensory speech enhancement using a clean speech prior",
	"summary": "",
	"abstract": "A method and apparatus determine a channel response for an alternative sensor using an alternative sensor signal, an air conduction microphone signal. The channel response and a prior probability distribution for clean speech values are then used to estimate a clean speech value.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07346504",
	"publication_date": "2008-03-18",
	"application_number": "11156434",
	"application_date": "2005-06-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multi-sensory speech enhancement using synthesized sensor signal",
	"summary": "",
	"abstract": "A synthesized alternative sensor signal is produced from an alternative sensor signal. The synthesized alternative sensor signal is computed using vocal tract resonances estimated based on the alternative sensor signal, and using a waveform synthesis technique that converts the estimated vocal tract resonance sequence into a spectral magnitude sequence. The synthesized alternative sensor signal and the alternative sensor signal are used to estimate a clean speech value.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07406303",
	"publication_date": "2008-07-29",
	"application_number": "11228710",
	"application_date": "2005-09-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multilevel online tournament",
	"summary": "",
	"abstract": "A multilevel online tournament is provided. The first tournament round has a single bracket and each subsequent tournament round has a winners bracket and a losers bracket corresponding to a bracket in the previous tournament round. The tournament format allows players to match-up against any other player located within the same bracket. The online tournament format also allows participants to start playing match in a round of the tournament prior to the official start of that round. Thus, players are able to more quickly advance through the tournament and spend less time waiting for a suitable opponent. The tournament format also allows for players to request available tournament byes and to automatically progress when they are unable to connect with other players due to quality of service issues.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07354345",
	"publication_date": "2008-04-08",
	"application_number": "10852659",
	"application_date": "2004-05-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multiple queues handling information",
	"summary": "",
	"abstract": "A system and process for ensuring the smooth flow of electronic ink is described. Dynamic rendering is give priority over other event handlers. Priority may be the use of one or more queues to order when events occur and may be performing dynamic rendering prior to other steps.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07443531",
	"publication_date": "2008-10-28",
	"application_number": "10986803",
	"application_date": "2004-11-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multiple-level graphics processing with animation interval generation",
	"summary": "",
	"abstract": "Described is a method and system in which timing intervals are generated from clock properties, and used to interpolate values for smooth animation. A high-level component maintains a set of clocks related to animated objects and/or linear media in a scene graphs. The clocks correspond to clock properties received from an application program. The clocks are processed into event lists at the higher level, from which timing interval data is generated and passed to a low-level component. The low-level component, which generally operates at a faster rate than the high-level component, uses the timing interval data to rapidly calculate current values for an animated object. Interaction, such as to pause an animation or resume a paused animation, causes the high-level component to re-compute the event list and regenerate new animation intervals for affected clocks. The new animation intervals are passed and used by the lower-level component.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07443401",
	"publication_date": "2008-10-28",
	"application_number": "10693822",
	"application_date": "2003-10-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Named entity (NE) interface for multiple client application programs",
	"summary": "",
	"abstract": "The present invention is a named entity (NE) interface to a linguistic analysis layer. The interface exposes each input sentence to the NE recognizers of all applications and returns all recognized NEs. Thus, the present invention can accommodate NEs which dynamically change in the applications, because each input string will be handed to the applications for NE recognition. The present invention also includes a data structure which is a normalized form of recognized NEs.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07315810",
	"publication_date": "2008-01-01",
	"application_number": "10041516",
	"application_date": "2002-01-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Natural language processing interface",
	"summary": "",
	"abstract": "The present invention provides an interface and associated object model that exposes a comprehensive set of natural language processing features to an application developer. In one embodiment, the features include lexicon management services and proofing services.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07409337",
	"publication_date": "2008-08-05",
	"application_number": "10813652",
	"application_date": "2004-03-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network emulator architecture",
	"summary": "",
	"abstract": "A network emulator provides both per-connection and non-connection-based emulation. The emulator includes a host computer, and a kernel-mode emulator driver and user-mode application component running on the host computer. The application component supplies configuration parameters to the driver. The driver includes a packet filter list that filters a captured packet, a virtual network link that receives the packet from the packet filter list, a link group list that applies an emulation procedure to the packet, a timer management component that manages a timer associated with the emulation procedure, and a packet dispatcher component that sends out the packet. A connection pool component facilitates per-connection emulation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07433814",
	"publication_date": "2008-10-07",
	"application_number": "10955993",
	"application_date": "2004-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network fingerprinting",
	"summary": "",
	"abstract": "A network fingerprinting component for a computerized system issues network identifiers (NID) for computer networks. Identity confidences may be determined for each issued network identifier with respect to current computer networks. Computer network attributes may include passive network attributes and active network attributes. Retrieving values for active network attributes involves generating network traffic. As a result passive network attributes may be available to the network fingerprinting component before active network attributes. Learned identity confidence modifiers may be applied to identity confidences determined independent of active network attributes to achieve more accurate identity confidence sooner. Better learned identity confidence modifiers may be obtained by comparing identity confidences for a particular computer network determined independently of active network attributes with identity confidences for the computer network determined once active network attributes become available and then adjusting the learned identity confidence modifiers so as to minimize any differences.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07448070",
	"publication_date": "2008-11-04",
	"application_number": "10688656",
	"application_date": "2003-10-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Noise robust speech recognition with a switching linear dynamic model",
	"summary": "",
	"abstract": "A unified, nonlinear, non-stationary, stochastic model is disclosed for estimating and removing effects of background noise on speech cepstra. Generally stated, the model is a union of dynamic system equations for speech and noise, and a model describing how speech and noise are mixed. Embodiments also pertain to related methods for enhancement.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07418383",
	"publication_date": "2008-08-26",
	"application_number": "10933763",
	"application_date": "2004-09-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Obtaining a signed rights label (SRL) for digital content and obtaining a digital license corresponding to the content based on the SRL in a digital rights management system",
	"summary": "",
	"abstract": "Content is encrypted according to a content key (CK) ((CK(content))), (CK) is protected according to a license server public key (PU-DRM), and rights data associated with the content is protected according to (PU-DRM). The protected items are submitted as a rights label to the license server for signing. The license server validates the rights label and, if valid, digitally signs based on the protected rights data to result in a signed rights label (SRL), and returns same. The SRL is concatenated with (CK(content)) and both are distributed to a user. To render the content, the user submits the SRL to the license server to request a license. The license server verifies the SRL signature and reviews the SRL protected rights data to determine whether the user is entitled to the license, and if so issues the license, including (CK) in a protected form accessible to the user.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07353402",
	"publication_date": "2008-04-01",
	"application_number": "10185527",
	"application_date": "2002-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Online storage volume shrink",
	"summary": "",
	"abstract": "Described is a technology by which a new volume or partition may be created on a disk, e.g., by running a shrink program and then reclaiming freed space. Shrink occurs online, while the user or system processes may be otherwise using the disk for reads and writes. Further, the technology operates while protecting snapshot versions of the volume. To shrink, upon receiving a request to shrink a volume to within a boundary, new allocations are restricted such that any allocation is to a volume area within the boundary. Data is moved from outside the boundary to within the boundary, and the shrink is committed when no volume data remains outside the boundary. A reduced-size volume or partition that does not include the specified region is committed when the data has been moved out of the specified region. A new volume or partition may be freed that corresponds to the region.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07409523",
	"publication_date": "2008-08-05",
	"application_number": "11303419",
	"application_date": "2005-12-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Operating system application programming interfaces and methods of using operating systems",
	"summary": "",
	"abstract": "Operating system functions are defined as objects that are collections of data and methods. The objects represent operating system resources. The resource objects can be instantiated and used across process and machine boundaries. Each object has an associated handle that is stored in its private state. When an application requests a resource, it is given a second handle or pseudo handle that corresponds with the handle in the object's private state. The second handle is valid across process and machine boundaries and all access to the object takes place through the second handle. This greatly facilitates remote computing. In preferred embodiments, the objects are COM objects and remote computing is facilitated through the use of Distributed COM (DCOM) techniques. Other embodiments of the invention provide legacy and versioning support by identifying each resource, rather than the overall operating system, with a unique identifier that can specified by an application. Different versions of the same resource have different identifiers. This ensures that applications that need a specific version of a resource can receive that version. This also ensures that an application can specifically request a particular version of a resource by using its unique identifier, and be assured of receiving that resource. Other embodiments of the invention provide legacy support by intercepting calls for operating system functions and transforming those calls into object calls that can be understood by the resource objects. This is accomplished in preferred embodiments by injecting a level of indirection between an application and an operating system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07334235",
	"publication_date": "2008-02-19",
	"application_number": "10385381",
	"application_date": "2003-03-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Optimized recovery logging",
	"summary": "",
	"abstract": "A system, method and computer-readable medium for optimizing recovery logging is provided. A calling component stably logs a message from a called component only when sending a second message or sending a second message after a log force that writes the return message from the first message to the stable log. The called component stably logs its return message before the return message is sent.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07418462",
	"publication_date": "2008-08-26",
	"application_number": "10720622",
	"application_date": "2003-11-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Ordering of events between different input sources",
	"summary": "",
	"abstract": "A system and process for ensuring the smooth flow of electronic ink is described. Dynamic rendering is give priority over other event handlers. Priority may be the use of one or more queues to order when events occur and may be performing dynamic rendering prior to other steps.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07463371",
	"publication_date": "2008-12-09",
	"application_number": "10986882",
	"application_date": "2004-11-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Organization-based content rights management and systems, structures, and methods therefor",
	"summary": "",
	"abstract": "A method is disclosed for a recipient to receive rights management (RM) protected content. The protected content is encrypted and decryptable according to a content key (KD), where (KD) is found in a corresponding license. In the method, the protected content is received while connectively coupled to a network through which the protected content may be obtained, and it is recognized that the received protected content is in fact protected content. In response to receiving the protected content and recognizing same, the license for the protected content is obtained from an RM server while still connectively coupled to the network and in an automatic manner. Thus, the license is available to the recipient even when such recipient is not connectively coupled to the RM server by way of the network at a later time. In one particular embodiment of the present invention, the protected content is received within an email.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07392547",
	"publication_date": "2008-06-24",
	"application_number": "10607896",
	"application_date": "2003-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Organization-based content rights management and systems, structures, and methods therefor",
	"summary": "",
	"abstract": "A document store delivers a document requested therefrom from a folder having rights information associated therewith. In response to a request for a copy of the document, rights data for the copy of the document is defined based on the rights information of the folder, and the copy of the document and the defined rights data thereof are published to result in a package with the rights data and the copy of the document encrypted according to a content key (KD) to result in (KD(copy)). The formed package is then delivered to the requester. The rights data can be discovered upon the requester attempting to render the package and such discovery triggers a request for a corresponding license based on such rights data. The license includes (KD) therein in a form available to the requester to decrypt (KD(copy)) if the requester satisfies the rights data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07469050",
	"publication_date": "2008-12-23",
	"application_number": "10632356",
	"application_date": "2003-08-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "OS mini-boot for running multiple environments",
	"summary": "",
	"abstract": "An intra-operating system isolation mechanism called a silo provides for the grouping and isolation of processes running on a single computer using a single instance of the operating system. The operating system enables the controlled sharing of resources by providing a view of a system name space to processes executing within an isolated application called a server silo. A server silo is created by performing a separate u201cmini-bootu201d of user-level services within the server silo. The single OS image serving the computer employs the mechanism of name space containment to constrain which server silos can use which resource(s). Restricting access to resources is therefore directly based on the process or application placed in the server silo rather than who is running the application because if a process or application is unable to resolve a name used to access a resource, it will be unable to use the resource.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07447896",
	"publication_date": "2008-11-04",
	"application_number": "11301066",
	"application_date": "2005-12-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Padding management for content files",
	"summary": "",
	"abstract": "Described is the adding of padding to a content file (e.g., image and/or audiovisual file) for anticipated subsequent use such that the content file need not be re-encoded to add metadata and other data to it. For example, padding may be added to an image file directly after an image file directory, whereby the directory can grow as needed into the padded space. Metadata can likewise be added to the padding, e.g., from the opposite direction that the directory extends into the padding. The padding may be added on the first re-encoding of the file, reducing or eliminating the need for subsequent re-encoding. The padding also may be used to track dead space in the file, with adjacent regions of dead space coalesced into a single region of dead space.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07421451",
	"publication_date": "2008-09-02",
	"application_number": "11214636",
	"application_date": "2005-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Page function architectural framework",
	"summary": "",
	"abstract": "An architectural software framework is provided for creating Web-style application software incorporating protocols and means for expansion and interfacing with other Web-style programs, as well as a reusable basic programming structure, consisting of abstract and concrete data types, that assist in building Web-style applications. The architectural software framework includes a page function and frame. Each Web-style application includes one or more page functions which communicate via the frame.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07404004",
	"publication_date": "2008-07-22",
	"application_number": "10716188",
	"application_date": "2003-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Peer to peer network",
	"summary": "",
	"abstract": "A system and method for data distribution is disclosed. A bulletin board is employed to maintain a list of requests from nodes in the system. The requests indicate data requested and identify the node making the request. Nodes are able to post requests for data as long as they maintain a minimum performance level. Additionally, the nodes periodically check in with the bulletin board and receive the list of requests from the bulletin board. On determining to satisfy a particular request by a node, the node (serving node) contacts a requesting node (identified in the request) and transfers the requested data to the requesting node. After successful completion of the transfer, the requesting node reports to the bulletin board that the node has filled the request and the request is removed from the list of requests.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07343418",
	"publication_date": "2008-03-11",
	"application_number": "10161428",
	"application_date": "2002-06-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Peer-to peer graphing interfaces and methods",
	"summary": "",
	"abstract": "Application programming interfaces and methods that provide graph management in a peer-to-peer (P2P) network are provided. More specifically, new and improved P2P application programming interfaces (APIs) and methods for the creation and access of graphs, the retrieval of node and graph information, the addition, modification, deletion and management of records (data), the importation and exportation of graph data, the direct communication between graph nodes, the addition of a security provider to a graph, the setting and retrieval of presence information, the registering for event notifications, and other utility and support functions are presented. Each of these interfaces utilize various parameters that are passed in from an application program that uses these interfaces to manage and utilize graphs. The interfaces return a value that indicates the success or failure of the function. For failures, the interfaces provide an indication as to the problem resulting in the failure.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07430747",
	"publication_date": "2008-09-30",
	"application_number": "10309865",
	"application_date": "2002-12-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Peer-to-peer networking framework application programming interfaces",
	"summary": "",
	"abstract": "A managed class peer networking framework and associated object-oriented application programming interfaces are presented. An application uses the framework API to communicate with the various peer networking subsystem interfaces. These subsystems utilize lower level Win32 interfaces and services to provide access to the group database, security, and data transfer to other machines. Managed classes are provided for the peer name, identity, cloud, invitation, group, policy, data store, peer and record collections, peer, and record classes. Peer name resolution objects and record search objects are also provided. The peer networking framework of the present invention is particularly applicable to Microsoft's .NET Framework.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07437440",
	"publication_date": "2008-10-14",
	"application_number": "10351727",
	"application_date": "2003-01-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Pen data capture and injection",
	"summary": "",
	"abstract": "A tool that allows a user, such as a software developer, to create test data that can consistently be employed to simulate the operation of a hardware pen or stylus. Raw pen data, such as position coordinates, pen angle and pen properties, is captured. This data is then later injected into a system being tested in place of pen data from a device driver. The raw pen data may be captured through an application programming interface invoked by a host application. The captured data can then subsequently be injected through another application programming interface invoked by a host application, such as a software testing application for testing a variety of operations of another software application. Alternately, a stand-alone utility may be used for capturing and then injecting raw pen data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07345681",
	"publication_date": "2008-03-18",
	"application_number": "10778346",
	"application_date": "2004-02-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Persistent authorization context based on external authentication",
	"summary": "",
	"abstract": "Methods and systems are provided to allow users that are authenticated by a trusted external service to gain controlled levels of access to selected local computing resources without requiring the user to also have conventional access control capabilities for the resources.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07401235",
	"publication_date": "2008-07-15",
	"application_number": "10144059",
	"application_date": "2002-05-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Persistent client-server database sessions",
	"summary": "",
	"abstract": "A client-server database system enables persistent client-server database sessions, without modification to a client-side application, a database system, or native client-side database drivers. The client is implemented with a driver manager to facilitate communication between the native database drivers and the database application. The driver manager wraps the native drivers, intercepting queries passed from the database application to the database drivers. The driver manager modifies the queries to form modified queries that direct the database server to render result sets produced from processing the queries persistent at the database server. Upon recovery following a server crash, the driver manager directs the drivers to reestablish a connection with the database server. The driver manager then finds the persistent result set table and, using logged data, returns to the same operation on the result set table just prior to the crash. The driver manager then reassociates the application context to the new database session without the database application being aware that a failure occurred. The recovery is thus transparent to the client-side application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07386557",
	"publication_date": "2008-06-10",
	"application_number": "10920629",
	"application_date": "2004-08-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Playback control methods and arrangements for a DVD player",
	"summary": "",
	"abstract": "In accordance with certain aspects of the present invention, enhancements have been developed to further extend the performance of a generic DVD navigator. The methods and arrangements herein provide a mechanism that allows a player application to precisely u2018bookmarku2019 locations during playback, and later resume playback at the selected bookmarked locations.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07469410",
	"publication_date": "2008-12-23",
	"application_number": "11255053",
	"application_date": "2005-10-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Point-to-point data communication implemented with multipoint network data communication components",
	"summary": "",
	"abstract": "A data communication system is configured to communicatively link a host device and a client device with a point-to-point data communication link, where the point-to-point data communication link is configured with multipoint network data communication components designed for data communication over a distributed network. A data communication interface at the host device is communicatively linked with a data communication interface driver via the point-to-point data communication link between the host device and the client device. The data communication interface driver communicates with a virtual driver component for the client device via a virtual network at the client device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07433913",
	"publication_date": "2008-10-07",
	"application_number": "11027103",
	"application_date": "2004-12-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Policies for secure software execution",
	"summary": "",
	"abstract": "A system and method that automatically, transparently and securely controls software execution by identifying and classifying software, and locating a rule and associated security level for executing executable software. The security level may disallow the software's execution, restrict the execution to some extent, or allow unrestricted execution. To restrict software, a restricted access token may be computed that reduces software's access to resources, and/or removes privileges, relative to a user's normal access token. The rules that control execution for a given machine or user may be maintained in a restriction policy, e.g., locally maintained and/or in a group policy object distributable over a network. Software may be identified/classified by a hash of its content, by a digital signature, by its file system or network path, and/or by its URL zone. For software having multiple classifications, a precedence mechanism is provided to establish the applicable rule/security level.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07350204",
	"publication_date": "2008-03-25",
	"application_number": "09877710",
	"application_date": "2001-06-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Policy setting for client-side caching",
	"summary": "",
	"abstract": "An improved method and system for client-side caching that transparently caches suitable network files for offline use. A cache mechanism in a network redirector transparently intercepts requests to access server files, and if the requested file is locally cached, satisfies the request from the cache when possible. Otherwise the cache mechanism creates a local cache file and satisfies the request from the server, and also fills in a sparse cached file as reads for data in ranges that are missing in the cached file are requested and received from the server. A background process also fills in local files that are sparse, using the existing handle of already open server files, or opening, reading from and closing other server files. Security is also provided by maintaining security information received from the server for files that are in the cache, and using that security information to determine access to the file when offline.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07392345",
	"publication_date": "2008-06-24",
	"application_number": "11500275",
	"application_date": "2006-08-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Port reservation application programming interface",
	"summary": "",
	"abstract": "A port reservation API for an intelligent transparent gateway is provided. The API creates one or more port pools that contain port numbers reserved from the gateway's TCP and UDP port numbers. The API then allows the proxy to reserve and release port numbers from the created pools. The API may create and destroy a port reservation, and acquire and release a port number. The creation of a port reservation returns a handle to the network application that can be used for requesting port numbers. The destroying of a port reservation destroys a handle supplied by the previous operation, returning all outstanding port numbers to the network gateway. The acquiring of a port number from a reservation requests one or more port numbers from the network gateway. Finally, the releasing of a port number to a reservation returns one or more previously acquired port numbers to the network gateway.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07424539",
	"publication_date": "2008-09-09",
	"application_number": "10842892",
	"application_date": "2004-05-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Prediction and pre-selection of an element in syntax completion",
	"summary": "",
	"abstract": "A system, method and computer-readable medium supports a feature that predicts a selection based on history of use and uses this information to pre-select an item in a list for syntax completion in a source program editor.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07346892",
	"publication_date": "2008-03-18",
	"application_number": "10446232",
	"application_date": "2003-05-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Preservation of source code formatting",
	"summary": "",
	"abstract": "Documents before and after editing are compared. Changes are applied to the original document, thus preserving the existing formatting.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07325191",
	"publication_date": "2008-01-29",
	"application_number": "10730386",
	"application_date": "2003-12-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Probability estimate for K-nearest neighbor",
	"summary": "",
	"abstract": "Systems and methods are disclosed that facilitate producing probabilistic outputs also referred to as posterior probabilities. The probabilistic outputs include an estimate of classification strength. The present invention intercepts non-probabilistic classifier output and applies a set of kernel models based on a softmax function to derive the desired probabilistic outputs. Such probabilistic outputs can be employed with handwriting recognition where the probability of a handwriting sample classification is combined with language models to make better classification decisions.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07451123",
	"publication_date": "2008-11-11",
	"application_number": "11296919",
	"application_date": "2005-12-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Programmable object model for extensible markup language markup in an application",
	"summary": "",
	"abstract": "A programmable object model allows a user/programmer to programmatically access the Extensible Markup Language (XML) functionality of a software application. The programmable object model is comprised of a plurality of object-oriented message calls or application programming interfaces for allowing a user to access the XML functionality of an application by sending one or more object-oriented message calls or application programming interfaces to the XML functionality of a given application along with any required parameters for customizing or otherwise manipulating XML markup applied to a document.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07404195",
	"publication_date": "2008-07-22",
	"application_number": "10731634",
	"application_date": "2003-12-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Programmable object model for namespace or schema library support in a software application",
	"summary": "",
	"abstract": "A programmable object model allows a user to programmatically access and utilize a Namespace or schema library containing XML schema files and related XML-based resources for associating the schema files and XML-based resources with one or more documents and for customizing the functionality associated with the schema files and XML-based resources. The programmable object model also allows the user/programmer to remove schema files and other XML-based resources from association with previously associated documents.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07434157",
	"publication_date": "2008-10-07",
	"application_number": "10731597",
	"application_date": "2003-12-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Programming interface for a componentized and extensible workflow model",
	"summary": "",
	"abstract": "Building a componentized workflow model via an application programming interface. Each step of the workflow is modeled as an activity that has metadata to describe design time aspects, compile time aspects, and runtime aspects of the workflow step. A user selects and arranges the activities to create the workflow via the application programming interfaces. The metadata associated with each of the activities in the workflow is collected to create a persistent representation of the workflow. Users extend the workflow model by authoring custom activities. Users also compile the workflow via the application programming interface.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07464366",
	"publication_date": "2008-12-09",
	"application_number": "11063954",
	"application_date": "2005-02-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Property and object validation in a database system",
	"summary": "",
	"abstract": "Property and object validation is provided in a framework for authoring database systems. The framework treats a property as an object and provides a mechanism to allow constraints to be enforced on the values entered in the properties. Some objects of an application have properties that have dependencies on other properties for setting. The framework of the present invention also allows easy enforcement of such dependency constraints.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07426521",
	"publication_date": "2008-09-16",
	"application_number": "10623168",
	"application_date": "2003-07-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Protocol agnostic web listener",
	"summary": "",
	"abstract": "A system and method for facilitating exposing a resource over a protocol is provided. The system includes a class factory that holds identifiers associated with determining which, if any, registered listener object creator should be employed to create a listener object. The listener object implements an abstract network protocol base class. The listener object is employed to abstract details of exposing a resource over a protocol and to provide a byte stream interface to communications occurring over the protocol, while removing protocol specific code from a server program. The method includes creating an instance of a listener object from a source of registered protocol handlers based on a request to expose a resource over a protocol and using a base class API to communicate over the protocol through the listener object.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07437742",
	"publication_date": "2008-10-14",
	"application_number": "11011859",
	"application_date": "2004-12-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Protocol-independent client-side caching system and method",
	"summary": "",
	"abstract": "A system and method that automatically and transparently handle client-side caching of network file data, independent of any remote file handling protocol. A protocol-independent client-side caching mechanism is inserted as a service that handles file-related requests directed to a network, and attempts to satisfy the requests via a client-side caching persistent store. By way of pre-process and post-process calls on a file create request, the caching mechanism creates file-related data structures, and overwrites the information in those structures that a buffering service uses to call back to a network redirector, whereby the client-side caching mechanism inserts itself into the communication flow between the network redirector and the buffering service. Once in the flow of communication, network-directed file read and write requests may be transparently handled by the client-side caching mechanism when appropriate, yet the redirector may be instructed to communicate with the server when needed to satisfy the request.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07349943",
	"publication_date": "2008-03-25",
	"application_number": "10387972",
	"application_date": "2003-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Providing 3D graphics across partitions of computing device",
	"summary": "",
	"abstract": "A computing device has a graphics hardware device employed to display graphics on a display, and is partitioned to include a video services partition (VSP) instantiated at least in part to provide graphics capabilities, and also to include a video client partition (VCP) instantiated at least in part to consume such graphics capabilities. The graphics hardware device is assigned to and controlled by the VSP. A shared video memory module is shared by the VCP and the VSP such that graphics information placed in the pages shared by the video memory module by the VCP is directly available to the VSP for further action such that graphics commands from the VCP are shunted by way of the pages shared by the video memory module across partitions from the VCP to the VSP to be acted upon by the graphics hardware device as controlled by the VSP.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07463268",
	"publication_date": "2008-12-09",
	"application_number": "11227629",
	"application_date": "2005-09-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Providing contextually sensitive tools and help content in computer-generated documents",
	"summary": "",
	"abstract": "A method and system are provided for creation, implementation, and use of computer-generated u201csmartu201d documents to which functionality is attached for providing contextually sensitive tools, controls and help content to users of those documents. Portions of documents are annotated with Extensible Markup Language (XML) tags and structure so that when a user enters those portions, such as by placing a computer cursor in those portions, the user is provided contextually sensitive tools, controls and/or help content. A document tools pane may open on the user's computer screen adjacent to the document being edited for providing the document tools, controls or help content related to the context of the text or data in which the cursor is located. If the user moves the cursor to another portion of the document, the user may obtain information associated with the context of the new portion of the document in which the cursor is located.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07356537",
	"publication_date": "2008-04-08",
	"application_number": "10164960",
	"application_date": "2002-06-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Quasi-particle interferometry for logical gates",
	"summary": "",
	"abstract": "A quantum computer can only function stably if it can execute gates with extreme accuracy. u201cTopological protectionu201d is a road to such accuracies. Quasi-particle interferometry is a tool for constructing topologically protected gates. Assuming the corrections of the Moore-Read Model for u03bd=5/2's FQHE (Nucl. Phys. B 360, 362 (1991)) we show how to manipulate the collective state of two e/4-charge anti-dots in order to switch said collective state from one carrying trivial SU(2) charge, |1>, to one carrying a fermionic SU(2) charge |u2208>. This is a NOT gate on the {|1>, |u2208>} qubit and is effected by braiding of an electrically charged quasi particle a which carries an additional SU(2)-charge. Read-out is accomplished by u03c3-particle interferometry.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07394092",
	"publication_date": "2008-07-01",
	"application_number": "11544492",
	"application_date": "2006-10-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Real-time collaboration and communication in a peer-to-peer networking infrastructure",
	"summary": "",
	"abstract": "Methods that enable real-time communication and collaboration in a peer-to-peer (P2P) network are provided. More specifically, methods for the creation and access of an underlying graph and/or group structure to pass collaboration/real-time communication data and other functions such as the retrieval of node/member and graph/group information, the addition, modification, deletion and management of records (data), the direct communication between graph/group nodes/members, the registering for event notifications, and other functions are used to pass real-time communication/collaboration data between nodes in a graph or members of a group.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07454465",
	"publication_date": "2008-11-18",
	"application_number": "10810381",
	"application_date": "2004-03-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Real-time inking",
	"summary": "",
	"abstract": "A system and process for ensuring the smooth flow of electronic ink is described. Dynamic rendering is give priority over other event handlers. Priority may be the use of one or more queues to order when events occur and may be performing dynamic rendering prior to other steps.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07436535",
	"publication_date": "2008-10-14",
	"application_number": "10879527",
	"application_date": "2004-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Reclaiming application isolated storage",
	"summary": "",
	"abstract": "Relatively-temporary applications may be installed. As a result of the installation and/or execution of such an application, an associated application isolated storage unit may be established. When established, the application isolated storage unit is designated for private storage use by the associated application. Additionally, a linkage between the application isolated storage unit and the associated application is created. Upon initiation of a reclamation procedure, the linkage from the application isolated storage unit is traced to the indicated location of the associated application. If the associated application no longer exists, the application isolated storage unit is deleted so as to reclaim the memory space.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07380087",
	"publication_date": "2008-05-27",
	"application_number": "10925545",
	"application_date": "2004-08-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Registering and storing dependencies among applications and objects in a computer system and communicating the dependencies to a recovery or backup service",
	"summary": "",
	"abstract": "An application programming interface protocol is provided for making requests to registered applications regarding applications' dependency information so that a table of dependency information relating to a target object can be recursively generated. When all of the applications' dependencies are captured at the same time for given volume(s) or object(s), the entire volume's or object's program and data dependency information may be maintained for the given time. With this dependency information, the computer system advantageously knows not only which files and in which order to freeze or flush files in connection with a backup, such as a snapshot, or restore of given volume(s) or object(s), but also knows which volume(s) or object(s) can be excluded from the freezing process. After a request by a service for application dependency information, the computer system can translate or process dependency information, thereby ordering recovery events over a given set of volumes or objects.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07363633",
	"publication_date": "2008-04-22",
	"application_number": "09557250",
	"application_date": "2000-04-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Relational schema format",
	"summary": "",
	"abstract": "A Relational Schema Definition (RSD) language that uses metadata of the relational database to generate an implementation-neutral or implementation-specific format that represents the precise database structure and data. The RSD language is a declarative description language such that an RSD file can then be used offline in a disconnected environment to reconstruct and use the database.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07403956",
	"publication_date": "2008-07-22",
	"application_number": "10652258",
	"application_date": "2003-08-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Removing noise from feature vectors",
	"summary": "",
	"abstract": "A method and computer-readable medium are provided for identifying clean signal feature vectors from noisy signal feature vectors. One aspect of the invention includes using an iterative approach to identify the clean signal feature vector. Another aspect of the invention includes using the variance of a set of noise feature vectors and/or channel distortion feature vectors when identifying the clean signal feature vectors.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07451083",
	"publication_date": "2008-11-11",
	"application_number": "11185522",
	"application_date": "2005-07-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Rendering with GPU during screen saver activation",
	"summary": "",
	"abstract": "Pausing a graphic processing operation in order to continue processing a thread on a different desktop. When a graphic processing unit (GPU) is lost when a screen saver desktop is activated, the buffer containing the video frame that is currently being processed is discarded and a device is attempted to be created on the screen saver desktop which enables continued graphic processing.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07383506",
	"publication_date": "2008-06-03",
	"application_number": "11170958",
	"application_date": "2005-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Replication-based propagation mechanism for pipelines",
	"summary": "",
	"abstract": "Processing database objects via a database pipeline having a plurality of stages. The invention provides a replication mechanism for propagating selected data from a database in one stage to a database in another stage without accessing a file system. Each database stage may have a plurality of input and output pipes. The invention enables a user to select a subset of the database objects in each stage for propagation to a subsequent stage.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07424493",
	"publication_date": "2008-09-09",
	"application_number": "11055946",
	"application_date": "2005-02-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Request bits estimation for a Wyner-Ziv codec",
	"summary": "",
	"abstract": "Request bits estimation for a Wyner-Ziv codec is described. In one aspect, and prior to communicating Wyner-Ziv parity bits to a Wyner-Ziv decoder, an estimated total number of parity bits to send to the Wyner-Ziv decoder are determined. This estimated number of parity bits allows the Wyner-Ziv decoder to reconstruct a frame of different coded content using the Wyner-Ziv parity bits such that the reconstructed frame will meet particular quality criteria. This estimated number of parity bits is determined independent of a request-bits feedback loop between the Wyner-Ziv coder and the Wyner-Ziv decoder. The estimated number of parity bits is communicated to the Wyner-Ziv decoder for reconstruction and presentation of the frame to a user.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07388521",
	"publication_date": "2008-06-17",
	"application_number": "11537947",
	"application_date": "2006-10-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Resolving metadata matched to media content",
	"summary": "",
	"abstract": "Managing a plurality of states of metadata. Each of the states stores one or more items of metadata that have been automatically matched and obtained for media content (e.g., for rendering by a media player). The invention resolves the matched metadata by selectively applying some or all of the matched metadata items without user intervention (e.g., based on a user-specified threshold). In one embodiment, the invention selectively applies some or all of the matched metadata items based on a trustworthiness rating associated with the metadata match. The invention displays the remaining metadata items to the user for review and acceptance or rejection.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07392477",
	"publication_date": "2008-06-24",
	"application_number": "10623471",
	"application_date": "2003-07-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Result set formatting and processing",
	"summary": "",
	"abstract": "The select list for the query is thus constructed such that it produces a result set having a predefined structure. Columns representing identifier properties of an entity are added to the select list. If the entity is an inheritance entity or a collection, then entities from a least derived entity to all descendants are identified and columns representing their identifiers are added to the select list and columns representing non-inherited properties for those entities are added. If the entity is not an inheritance entity or a collection, then columns representing properties of the entity are added to the select list.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07359912",
	"publication_date": "2008-04-15",
	"application_number": "11030643",
	"application_date": "2005-01-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Rich object model for diverse Auto-ID tags",
	"summary": "",
	"abstract": "A system and method allowing one application to implement diverse AutoID tags interchangeably, by unifying all AutoID technologies into a single object model. The single object model interacts with all AutoID technologies, with only a lowest level device tailored to the specific AutoID technology, the single object model thereby persisting through the middleware, up to an application, carrying all necessary information from any AutoID technology. The single object model can interact with a tag many times, as necessary to complete an operation. A reader interface allows an application to communicate with multiple readers of diverse AutoID tags, and to communicate with individual servers communicating with individual readers of diverse AutoID tags. The reader interface also provides a single interface for hardware communication with a radio, for an application interacting with an entire network of readers, sensors, interpretation steps, product lookup, and information storage providing a single virtual reader.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07420466",
	"publication_date": "2008-09-02",
	"application_number": "11167021",
	"application_date": "2005-06-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Role-based authorization of network services using diversified security tokens",
	"summary": "",
	"abstract": "A mechanism for performing role-based authorization of the one or more services using security tokens associated with received service request messages. This role-based authentication is performed regardless of the type of security token associated with the received service request messages. Upon receiving a service request message over the network for a particular service offered by the service providing computing system, the service providing computing system accesses a security token associated with the received service request message. Then, the computing system identifies one or more roles that include the identity associated with the security token, and correlates the roles with the security token. These correlated roles are then used to authorize the requested service. This mechanism is performed regardless of the type of the security token.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07434252",
	"publication_date": "2008-10-07",
	"application_number": "10891884",
	"application_date": "2004-07-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Scalable virtual partitioning of resources",
	"summary": "",
	"abstract": "Resources are partitioned via a virtual partitioning system to distribute the resources over a plurality of resource servers. A virtual partition table can be kept at each of a set of resource managers handling requests for resources in tandem. When a resource is requested, a virtual partition value is calculated algorithmically, and the value is mapped to a resource component via the virtual partition table. The resource component encapsulates information indicating on which of the resource servers the resource resides and can provide a component for performing operations on the resource even though the requestor does not have information about where the resource resides. The resources can be repartitioned by modifying the virtual partition table, thus allowing the addition of additional resource servers to the system while the resources remain available. Additional resource types can be added without reengineering the system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07454516",
	"publication_date": "2008-11-18",
	"application_number": "09632382",
	"application_date": "2000-08-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Schemaless dataflow within an XML storage solution",
	"summary": "",
	"abstract": "A relational database management system having an XML storage implementation to reduce overhead associated with consuming data from multiple data providers, where each having proprietary database schemas. The XML storage solution allows data from any arbitrary relational database schema to be loaded, rearranged and retrieved. The present invention is directed to an implementation of an edge table such that large volumes of XML data of any structure can be stored effectively. The edge table may be designed as one large XML document where the schema information is stored separately from the instances, and relationships and constraints are expressed using foreign keys. The edge table further provides for full type support and validation. Indices and clustering provide efficient data access and query execution.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07346598",
	"publication_date": "2008-03-18",
	"application_number": "10185019",
	"application_date": "2002-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Selectively authorizing software functionality after installation of the software",
	"summary": "",
	"abstract": "Controlling access to functionality within an installed software product. The invention includes an authorization module that dynamically references authorization information when specific functionality is requested by a requesting entity such as a user or an application program to determine if the requested functionality is authorized to be executed. Further, the invention dynamically provides an opportunity to the requesting entity to purchase unauthorized functionality. In this manner, functionality within the software product may be enabled or disabled at any time (e.g., during installation, post-installation, and re-installation).",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07472286",
	"publication_date": "2008-12-30",
	"application_number": "10653041",
	"application_date": "2003-08-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Self-contained computer servicing device",
	"summary": "",
	"abstract": "Servicing a computer using a self-contained computer servicing device. The device includes a memory storing an operating system. The device includes a first interface for connecting the device to the computer and a second interface for connecting the device to a network. A driver for the second interface is also stored in the memory. The device accesses a bootable image of an operating system of the computer on the network via the second interface or stored on the memory. The device boots the computer by executing the operating system stored in the memory of the device and services operations of the computer according to the bootable image.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07401212",
	"publication_date": "2008-07-15",
	"application_number": "10978625",
	"application_date": "2004-11-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Self-describing artifacts and application abstractions",
	"summary": "",
	"abstract": "Described herein is at least one implementation employing multiple self-describing software artifacts persisted on one or more computer-storage media of a software-based computer. In this implementation, each artifact is representative of at least part of the software components (e.g., load modules, processes, applications, and operating system components) of the computing system and each artifact is described by at least one associated u201cmanifest,u201d which include metadata declarative descriptions of the associated artifact.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07451435",
	"publication_date": "2008-11-11",
	"application_number": "11007808",
	"application_date": "2004-12-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Session-state manager",
	"summary": "",
	"abstract": "Without actually storing session-state information, the described exemplary implementations of session-state manager identify a user, validate the user's current logon state, and determine whether the user's session should expire. User identification and logon validation are checked by a server in a stateless network by generating a mathematically session-state token and sending that token to a user. Subsequently, the server receives a mathematically session-state token from the user and checks that token. If that token checks out, then the user is allowed continuing access under the same session. If it doesn't check out, then the user may be forced to start a new session by logging-on again. Alternatively, the server may check to see if the token would check out if it had come at an earlier time block. The session-state tokens are mathematical encoded and are generated using a one-way encryption scheme. Such a one-way encrypted token is scientifically impossible to reverse-engineer. Furthermore, logon expiration is checked by the server using the same mathematically session-state token. The token is checked to determine whether a predetermined number of time blocks have past. If so, then the server will terminate the user's session.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07428641",
	"publication_date": "2008-09-23",
	"application_number": "10975723",
	"application_date": "2004-10-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Simplified device drivers for hardware devices of a computer system",
	"summary": "",
	"abstract": "A computer system uses simplified device drivers for operating hardware devices. A simplified device driver for a hardware device of a given device type, such as a flatbed scanner, works with a system-supplied common driver for that given device type. The common driver and the simplified driver together function like a regular device driver. The simplified device driver implements a small number of entry point functions corresponding to a pre-selected set of operation commands u201cgenericu201d to hardware devices of that given device type. When an application makes a request for an operation by the device, the request is passed through a device driver interface (DDI) to the common driver. The common driver then calls the entry point functions in the simplified device driver to carry out the requested operation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07322035",
	"publication_date": "2008-01-22",
	"application_number": "11276481",
	"application_date": "2006-03-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software component execution management using context objects for tracking externally-defined intrinsic properties of executing software components within an execution environment",
	"summary": "",
	"abstract": "A run-time executive of an object management system for managing execution of software components in an object execution environment uses a component context object to store intrinsic context properties related to an associated component. The run-time executive maintains an implicit association of the component context object with the application component. For example, the context properties can include a client id, an activity id, and a transaction reference. The component context object also provides an interface accessible to the associated component, with member functions for use in transaction processing, in creating additional other application components inheriting component's context properties, and in access control based on abstract user classes (roles).",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07389514",
	"publication_date": "2008-06-17",
	"application_number": "10855052",
	"application_date": "2004-05-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software memory access control",
	"summary": "",
	"abstract": "Software memory access control is provided by associating instruction areas with memory areas such that instruction areas are not permitted to access memory areas with which they are not associated. Checks may be inserted in the instruction areas to ensure that data provided by a memory group is provided by an associated memory area. Additionally, control flow integrity for the instruction areas may be provided by embedding identifying bit patterns within computed control flow instructions contained in the instruction groups. In this way, control flow of the instruction areas may be provided, thus preventing diversion of control flow and minimizing required checks.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07337291",
	"publication_date": "2008-02-26",
	"application_number": "11036801",
	"application_date": "2005-01-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Source throttling using CPU stamping",
	"summary": "",
	"abstract": "A method and system for managing one or more web requests provided to a web application from a client computer. An application is responsive to a web request to generate verification data. The application sends a reply to the client to calculate a stamp as a function of the generated verification data. The application is responsive to an additional request from the client including the calculated stamp to determine if it corresponds to the generated verification data. If the calculated stamp corresponds to the generated verification data, the additional web request is submitted to the web application for processing. A Web server subject to a DOS attack will be able to distinguish between genuine users(who generate stamps) and malicious users(who will not generate stamps) and over a period of time be able to restore service to the former and deny to the latter.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07430607",
	"publication_date": "2008-09-30",
	"application_number": "11137613",
	"application_date": "2005-05-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Standard graphics specification and data binding",
	"summary": "",
	"abstract": "A standard graphics specification for use by both developers of graphics files as well as of applications developed to execute in a runtime environment is disclosed. The graphics files are developed to conform to the graphics specification and therefore will be executable by applications in any runtime environment that likewise conform to the graphics specification. The specification includes program syntax standards and standards for metadata in the form of semantics and annotations that further describe the code. The specification additionally includes standards to which applications may conform to ensure that the applications will be capable of executing any graphics files that conform to the graphics specification.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07444583",
	"publication_date": "2008-10-28",
	"application_number": "11139935",
	"application_date": "2005-05-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Storage platform for organizing, searching, and sharing data",
	"summary": "",
	"abstract": "Various embodiments of the present invention are directed to a storage platform comprising a database engine, a data store, an application programming interface. The data store is implemented on the database engine for storing data therein, and the data store implements a data model that supports the organization, searching, sharing, synchronization, and security of data stored in the data store. Specific types of data are described in schemas. The application programming interface enables application programs to access services and capabilities of the storage platform and to access the data described in the schemas. The storage platform supports interoperability with existing file systems, enables users and systems to synchronize data stored in different instances of the data store, and provides the ability for application programs to be notified about and to track changes made to the data in the data store.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07349913",
	"publication_date": "2008-03-25",
	"application_number": "10646646",
	"application_date": "2003-08-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Strategies for providing just-in-time user assistance",
	"summary": "",
	"abstract": "Help functionality is described for integrating help information into a primary application in a just-in-time fashion. The help functionality can perform this task by providing a see-through panel which is presented on top of an application interface provided by the primary application. A user can move a mark on the see-through panel to identify features of the application interface concerning which he or she may have questions. The help functionality responds by presenting potentially context-sensitive help information to the user in audio mode and/or visual mode. If the visual mode is selected, the help functionality can present the help information on the see-through panel itself, and/or can dynamically move parts of the application interface to accommodate the display of the help information. The help functionality can supply the help information from a local source and/or a remote source, in an automated manner and/or a manual manner (e.g., using a remote human assistant).",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07346846",
	"publication_date": "2008-03-18",
	"application_number": "10857543",
	"application_date": "2004-05-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Stream class driver for computer operating system",
	"summary": "",
	"abstract": "A stream class driver for use in a computer operating system functions together with a minidriver. The minidriver is associated with a particular design for an adapter, which is a hardware device that generates or receives streaming data. The stream class driver deals with common operating system tasks such as direct memory access, scatter/gather memory use and Plug n Play. The stream class driver is independent of the hardware design and can therefore function with any type of streaming device or external buses such as USB or IEEE 1394. the minidriver functionality is limited to only those functions required by the unique aspects of the hardware and for the minimum requirements of operation, thereby minimizing the complexity and burden of designing minidrivers for hardware devices.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07444647",
	"publication_date": "2008-10-28",
	"application_number": "11290985",
	"application_date": "2005-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Structured indexes on results of function applications over data",
	"summary": "",
	"abstract": "Indexed views or materialized views are used as a secondary index on a base table with multi-valued attributes. This provides for using the index to search in the nested data. Moreover, indexing is provided on the result of an unnest operation. Indexing a view on the result of an unnesting operation provides the ability to index the contents of a nested collection. One such unnesting operation is u201ccross apply unnestu201d. This provides additional options for a query execution plan, leading to a more optimized query. A back-join is provided from the indexed view to the base table to allow fields from the base table that are not present in the indexed view to be included in a result of a query on the table which is processed using the indexed view as an access path. This provides a means of including columns in the query result that are not in the indexed view but are in the base table. The back-join is supported from a single-table indexed view to the base table via a unique clustering key which acts as a logical row locator. Thus, the system can back-join to the base table from an indexed view via the unique clustering key. These features allow the use of indexed views to index a table on the contents of multi-set or multi-valued attributes.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07349897",
	"publication_date": "2008-03-25",
	"application_number": "11051447",
	"application_date": "2005-02-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Structured indexes on results of function applications over data",
	"summary": "",
	"abstract": "Indexed views or materialized views are used as a secondary index on a base table with multi-valued attributes. This provides for using the index to search in the nested data. Moreover, indexing is provided on the result of an unnest operation. Indexing a view on the result of an unnesting operation provides the ability to index the contents of a nested collection. One such unnesting operation is u201ccross apply unnestu201d. This provides additional options for a query execution plan, leading to a more optimized query. A back-join is provided from the indexed view to the base table to allow fields from the base table that are not present in the indexed view to be included in a result of a query on the table which is processed using the indexed view as an access path. This provides a means of including columns in the query result that are not in the indexed view but are in the base table. The back-join is supported from a single-table indexed view to the base table via a unique clustering key which acts as a logical row locator. Thus, the system can back-join to the base table from an indexed view via the unique clustering key. These features allow the use of indexed views to index a table on the contents of multi-set or multi-valued attributes.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07340445",
	"publication_date": "2008-03-04",
	"application_number": "11051360",
	"application_date": "2005-02-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Structuring an operating system using a service architecture",
	"summary": "",
	"abstract": "An operating system architecture is based on a service model in which active entities (services) are containers for objects having a number of interfaces specified through a contract language that is a subset of the language in which the service is coded. Services may reside in the same address space or may reside in separate address spaces, without changing the programming model or compiled binaries. The location of a service is independent of the location of the service's clients and of services the service calls.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07434228",
	"publication_date": "2008-10-07",
	"application_number": "11129847",
	"application_date": "2005-05-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Synchronization of plugins",
	"summary": "",
	"abstract": "A system and process for ensuring the smooth flow of electronic ink is described. Dynamic rendering is give priority over other event handlers. Priority may be the use of one or more queues to order when events occur and may be performing dynamic rendering prior to other steps.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07446894",
	"publication_date": "2008-11-04",
	"application_number": "11197551",
	"application_date": "2005-08-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and interface for manipulating a database",
	"summary": "",
	"abstract": "An interface exposes methods for use in manipulating a database. The interface receives requests in terms of entities (or objects).",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07412436",
	"publication_date": "2008-08-12",
	"application_number": "10199490",
	"application_date": "2002-07-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and interface for manipulating a database",
	"summary": "",
	"abstract": "An interface exposes methods for use in manipulating a database. The interface receives requests in terms of entities (or objects).",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07461053",
	"publication_date": "2008-12-02",
	"application_number": "11037101",
	"application_date": "2005-01-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method adapted to facilitate dimensional transform",
	"summary": "",
	"abstract": "Systems and methods that facilitate dimensional transformations of data points are disclosed. In particular, the subject invention provides for a system and methodology that simplifies dimensional transformations while mitigating variations of a distance property between pairs of points. A set of n data points in d dimensional space is represented as an nu00d7d input matrix, where d also corresponds to the number of attributes per data point. A transformed matrix represents the n data points in a lower dimensionality k after being mapped. The transformed matrix is an nu00d7k matrix, where k is the number of attributes per data point and is less than d. The transformed matrix is obtained by multiplying the input matrix by a suitable projection matrix. The projection matrix is generated by randomly populating the entries of the matrix with binary or ternary values according to a probability distribution. Unlike previous methods, the projection matrix is formed without obtaining an independent sample from a Gaussian distribution for each entry in the projection matrix, without applying a linear algebraic technique to generate the projection matrix and without employing arbitrary floating point numbers. Processes and/or algorithms can utilize the reduced transformed matrix instead of the larger input matrix to facilitate computational efficiency and data compression.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07318078",
	"publication_date": "2008-01-08",
	"application_number": "11074547",
	"application_date": "2005-03-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for adding hardware registers to a power management and configuration system",
	"summary": "",
	"abstract": "A system for adding multiple GPE blocks (in addition to the system/root GPE block device) to a computing system by creating a device entry in the ACPI namespace, and using a _CRS object to describe the system resources consumed by the device is described. The GPE block device may then access associated hardware devices through a well known mechanism (either I/O or Memory Mapped accesses). By creating additional GPE block devices within the ACPI namespace, general purpose events may be delivered using more traditional hardware interrupt mechanisms than with existing systems (e.g., wiring GPE blocks together). Moreover, by putting GPE block devices in the ACPI namespace, hardware components having hardware registers may be u201chot pluggedu201d to the computing system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07328279",
	"publication_date": "2008-02-05",
	"application_number": "11099189",
	"application_date": "2005-04-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for aggregating and extending parental controls auditing in a computer network",
	"summary": "",
	"abstract": "A system and method for aggregating and extending parental controls auditing in an unmanaged computing network are provided. A parental control system, including a parental control database, logging interface, and audit process, resides on each host computing device in an unmanaged computing network that is capable of synchronizing data residing on one of the host computing devices with data residing on the other devices in the network. The parental control system facilitates the logging and reporting of parental control audit information in a manner that allows parents to aggregate the audit information to obtain a comprehensive audit report of their children's use of all computers in the home, and is extensible and customizable by the applications from which the parental control audit information originates.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07389346",
	"publication_date": "2008-06-17",
	"application_number": "10823277",
	"application_date": "2004-04-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for applying color management on captured images",
	"summary": "",
	"abstract": "A system and method for image acquisition enables selective automated application of color management to color image data generated by an image-capturing device by the device driver for the device. In the image acquisition system, each image-capturing device has properties or operation parameters that can be set to control the operation of the device. During an image acquisition operation, color image data generated by the image-capturing device are transmitted to the device driver. If the operation parameters of the device are set to indicate that color management is to be performed, the device driver calls color management functions provided by the operating system to perform the desired color operation, such as a color space conversion, on the received color image data. The processed color image data are then sent to the image-processing application for further processing or editing.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07365754",
	"publication_date": "2008-04-29",
	"application_number": "11143214",
	"application_date": "2005-06-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for automatic conversion from WAP client provisioning XML represented objects to OMA DM tree structure represented objects",
	"summary": "",
	"abstract": "A method and system automatically converts a Wireless Internet Protocol (WAP) Client Provisioning (CP) objects to Open Mobile Alliance (OMA) Device Management (DM) objects. WAP CP is enabled according to XML (eXtensible Markup Language) and defines a standard way to bootstrap mobile device's connectivity settings and application protocol access parameters using XML. OMA DM is also enabled according to XML and provides similar functionality, but is organized according to a mandated tree structure. The present invention automatically converts vendor specific parameters from WAP CP to OMA DM such that the vendor specific parameters are more easily managed by an OMA DM server and client.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07392512",
	"publication_date": "2008-06-24",
	"application_number": "10856432",
	"application_date": "2004-05-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for backing up and restoring data",
	"summary": "",
	"abstract": "Described is a system and method for allowing applications to interact with a common backup program in a uniform way. The system and method provides a communication mechanism for one or more applications to exchange information with the backup program regarding components of the applications. The information exchanged may include an identification of the components of each application. A component may be considered a group of files or resources that should be backed up or restored together. In this way, when a backup operation is initiated, each application may provide to the common backup program instructions describing the specific components to be backed up. In addition, each application may add other application-specific information useful during a restore of the backed up data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07395387",
	"publication_date": "2008-07-01",
	"application_number": "11058681",
	"application_date": "2005-02-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for blending the results of a classifier and a search engine",
	"summary": "",
	"abstract": "A method to produce a list of documents retrieved from a search engine, ranked according to their relevance to search terms, includes interleaving the lists resulting from two searches. The first search is one that occurs over documents where the list is ranked using a first probabilistic ranking algorithm. The second list is a list of documents obtained by searching over a query log of prior searches using the same search terms. The second list is ranked according to a second probabilistic algorithm. Interleaving of the two lists includes eliminating duplicate occurrences of documents and appending the remaining documents to the end of the interleaved list if the two lists of individual search results differ in length. The interleaved list may then be presented to a user for review.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07424469",
	"publication_date": "2008-09-09",
	"application_number": "10752901",
	"application_date": "2004-01-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for building a target operating system from a source operating system",
	"summary": "",
	"abstract": "Systems and methods are described herein for determining which components of a source operating system are required to be included in a target operating system to support selected source operating system features in the target operating system. Data objects are constructed to represent each component and feature of the source operating system, each data object identifying Exports and References for the component or feature it represents. The dependency model identifies, for each component, other components that must be included in a target operating system having the component. A target operating system builder program receives input from a user as to the features the user desires to include in the target operating system. The dependency model is utilized to identify and select the components from the source operating system necessary to support the selected features. The selected components are then linked to create the target operating system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07418707",
	"publication_date": "2008-08-26",
	"application_number": "10999055",
	"application_date": "2004-11-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for CPU bandwidth allocation",
	"summary": "",
	"abstract": "An automatic resource management service implements a policy to automatically control resource usage by processes running on a computer. A policy expresses criteria for identifying process sets, and imposes allocations and sub-allocations or resource amounts to be used by given process sets and subsets. Exclusion lists are used in an embodiment of the invention to exclude processes from management by the management service. In an embodiment of the invention the resources whose use is managed are CPU resources, although in further embodiments the managed resources include memory resources as well.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07437728",
	"publication_date": "2008-10-14",
	"application_number": "10460527",
	"application_date": "2003-06-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for customizing the visual layout of screen display areas",
	"summary": "",
	"abstract": "A target acquisition model is used to position the screen display areas. An area is docked by acquiring the screen display area to be docked and dragging a representation of the screen display area towards the desired location. As the mouse pointer enters the boundaries of the target area, a target group appears within the area. A target group represents the five behaviors that can be triggered: dock to left, dock to top, dock to right, dock to bottom and dock together or tab dock. Touching the desired docking target with the mouse acquires the target.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07362341",
	"publication_date": "2008-04-22",
	"application_number": "10452395",
	"application_date": "2003-06-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for displaying a user interface object using an associated style",
	"summary": "",
	"abstract": "An improved system and method for displaying a user interface object using an associated style is provided. To this end, an application may include style declarations that may associate a style resource with a user interface object. The style resource may define property values that may be selectively applied to a user interface object, may specify a visual representation for the user interface object, such as a visual subtree, and may specify additional property values to be conditionally applied to a user interface object. A styling engine may be provided for applying a style resource to a user interface object. A visual representation of the user interface objects with the applied property values may be generated and then a display representation may be rendered for presentation on a user interface display.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07447993",
	"publication_date": "2008-11-04",
	"application_number": "10964174",
	"application_date": "2004-10-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for dynamically controlling gamut mapping functions",
	"summary": "",
	"abstract": "A method and system for controlling gamut mapping algorithm parameters and exposing those parameters as user interface elements to allow users to interactively control the gamut mapping algorithm parameters is provided. A request to modify a user interface is received and a modified gamut mapping algorithm parameter element is loaded into the user interface in response. The request to modify can be a request to modify a pre-existing gamut mapping algorithm parameter element or a format of a corresponding gamut mapping algorithm parameter. User specified requests to adjust gamut mapping algorithm parameter elements are received and color management operations are adjusted in response. A three dimensional representation of a device color gamut can be displayed and modified by a user, and an input image that is being processed by the color management operations is displayed and modified dynamically in response to user specific adjustments.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07394565",
	"publication_date": "2008-07-01",
	"application_number": "10747614",
	"application_date": "2003-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for dynamically creating a destination template",
	"summary": "",
	"abstract": "The techniques and mechanisms described herein are directed to a method for dynamically creating a destination template based on content within a source document. The destination template may be published in a variety of mediums including as a body of an email message, a web site, and a print-friendly document. A portion of content objects within the source document are grouped into content objects based on a relationship between the content objects, such as a physical relationship, a functional relationship, or a combination of both. For each content block, one of several module templates is dynamically selected and arranged to create the destination template. The module templates may be stretchable and designed to render in an email client using HTML.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07383499",
	"publication_date": "2008-06-03",
	"application_number": "11027186",
	"application_date": "2004-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for economizing trace operations",
	"summary": "",
	"abstract": "A system and method of creating trace information of an application. Trace data of the application is stored in a trace heap. Processing of stored trace data including a hard-coded string is deferred.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07447947",
	"publication_date": "2008-11-04",
	"application_number": "11144335",
	"application_date": "2005-06-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for enabling client applications to interactively obtain and present taxonomy information",
	"summary": "",
	"abstract": "A system and method for enabling UDDI client applications to interactively obtain taxonomy information from a UDDI server and thereby present that information to a user, such as to enable navigation through the taxonomy. An application programming interface is provided by which a client application sends a unique taxonomy identifier and a relationship qualifier (e.g., root, parent and/or child) to a server. The client may also identify a reference node within the taxonomy. The server receives the (e.g., XML) request message, and extracts the data to query a database based on the relationship qualifier (or qualifiers) and the taxonomy/reference node. Based on the query results, the server returns a response that provides relationship information to the client, such as information on root, parent and/or child nodes that satisfy the request. The client interprets the response to present the taxonomy, such as for user navigation through the taxonomy.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07447677",
	"publication_date": "2008-11-04",
	"application_number": "10607812",
	"application_date": "2003-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for executing an arbitrary function from an external process",
	"summary": "",
	"abstract": "A first process executes a function in a second process. The second process may be a remote or local process. The first process may control the second process by executing a specified function in the second process. The first process may allocate space in the second process and create a stub function in the allocated space. The first process then may create a thread which runs the stub function. When the stub function is called from the first process, the stub function may call the arbitrary function, passing it the required parameters, thus enabling the first process to execute the desired function in the second process. The desired process may require any number and type of additional parameters and return any number and type of results.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07424723",
	"publication_date": "2008-09-09",
	"application_number": "10697604",
	"application_date": "2003-10-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for exposing instant messenger presence information on a mobile device",
	"summary": "",
	"abstract": "A cross-process layer is generally directed to exposing instant messenger (IM) presence information on a mobile device. An application program interface (API) is provided that allows clients to retrieve IM presence information for display regardless of the IM service provider providing the IM presence information. The IM service providers therefore interoperate with any application on the mobile device and enables any application to show presence for any IM contact.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07317928",
	"publication_date": "2008-01-08",
	"application_number": "10811232",
	"application_date": "2004-03-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for generating message notification objects on dynamically scaled timeline",
	"summary": "",
	"abstract": "A system and related techniques to collect and manage a set of incoming message notification objects, such as instant message notifications, email notifications, download notifications, transaction notifications and others and present those objects to the user with an icon, tile or other representation on a dynamically scaled timeline. According to embodiments, the dynamically scaled timeline may present the most recently received object farthest to the right on a notifications bar or facility and slide objects to the left to represent passage of time as those objects age. Instead of presenting those objects on a linear scale, according to the invention, the time intervals in which objects may be presented may be scaled to cause the oldest message objects to be presented on a relatively compressed dimension. The most recently received messages may be presented on wider intervals, to permit the user to perceive differences in arrival of items more clearly.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07353466",
	"publication_date": "2008-04-01",
	"application_number": "10855630",
	"application_date": "2004-05-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for improved electronic mail processing with introductory text",
	"summary": "",
	"abstract": "An envelope provides the integration of the functionality of an email application program and the functionality of a document editor so that a sender can send introductory text to the recipient of an email message constituting a document without corrupting the original document. Users of document editors can generate and edit documents for email transmission by first creating the document with the document editor and then invoking an envelope to send the document as the message body with introductory text. The envelope has its own user interface that is fully functional within the confines of the document editor's user interface to provide the user with the functionality of the email client application program. The envelope includes an introduction field for the entry of introductory text by the sender. The introduction field in the envelope is a rich edit control in plain text mode, similar to the subject field of the envelope. When the user sends the document, the document editor prepends the introductory text to the body of the message. The document editor then converts the introductory text and the body of the document to an HTML message, and the email client sends the email message to the recipient.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07424676",
	"publication_date": "2008-09-09",
	"application_number": "09595734",
	"application_date": "2000-06-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for n-way authentication in a network",
	"summary": "",
	"abstract": "A method of controlling information exposure in a multiparty transaction includes an originating transaction participant cryptographically encoding all information for each of the transaction participants such that a unique data content and encryption are used for each of the messages destined to the other transaction participants. The cryptographically encoded messages are transmitted to the transaction participants such that each may decrypt their message and respond to a primary transaction participant with status concerning their portion of the transaction. After reception of affirmative status messages from the transaction participants, the primary transaction participant may transmit messages to the responding transaction participants to execute the multiparty transaction. The originating transaction participant may also be provided an indication that the multiparty transaction is executed.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07370199",
	"publication_date": "2008-05-06",
	"application_number": "10766060",
	"application_date": "2004-01-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for obtaining accurate image content",
	"summary": "",
	"abstract": "A method and system for allowing a computer system platform the ability to create image content is provided. Captured image data of an original image is received and information corresponding to colorimetric points is measured. Automatic determinations are made as to whether information of additional colorimetric points need to be measured to reproduce an accurate color representation of the original image. In response, the computer system platform can identify portions of a displayed image where information of colorimetric points needs to be measured. In addition, the system can automatically measure information of the additional colorimetric points needed. An image and color gamut representation are displayed allowing a user to manipulate measured information of colorimetric points and change the view of the color gamut representation, thereby allowing a user to create an accurate color representation of the original image.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07348993",
	"publication_date": "2008-03-25",
	"application_number": "10703448",
	"application_date": "2003-11-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for performing analysis on word variants",
	"summary": "",
	"abstract": "A computer-readable medium stores a first lexicon data structure for lexicon words. The first data structure includes a host form variant field containing a host form variant such as a clitic host form variant, a host form field containing the host form of the host form variant (only present if the forms differ) such as a clitic host verbal form, and a verification field indicative of whether the host form variant is a valid word. The first data structure also includes a segment association field containing data or segmentation bits associating the host form variant with certain types of attachment entries in the lexicon, which also contain data or segmentation bits, to define valid combinations between the host form variant and at least one of the attachment entries in the lexicon. A second lexicon data structure for each of the attachment entries in the lexicon is also stored.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07398210",
	"publication_date": "2008-07-08",
	"application_number": "10804883",
	"application_date": "2004-03-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for performing remote tracking and reporting of computing system performance, usage, and security data",
	"summary": "",
	"abstract": "A computing systems data reporting system is comprised of a processing component and a reporting component. The processing component includes a configuration file and a system analysis and aggregation executable program module. The system analysis and aggregation executable module utilizes the input and output directory information from the configuration file to collect performance, usage and security data from sources such as those described above. The reporting component comprises an XML output memory component for storing aggregated data received from the executable module of the processing component. As XML data is passed to the reporting component, the XML data is transformed for publication via an Internet-based web page such that the data is viewable by interested users on a near real-time basis.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07376654",
	"publication_date": "2008-05-20",
	"application_number": "10426070",
	"application_date": "2003-04-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for personalization of handwriting recognition",
	"summary": "",
	"abstract": "An improved system and method for personalizing recognition of an input method is provided. A trainable handwriting recognizer may be personalized by using ink written by the user and text authored by the user. The system includes a personalization service engine and a framework with interfaces for collecting, storing, and accessing user ink and authored information for training recognizers. The trainers of the system may include a text trainer for augmenting a recognizer's dictionary using text content and a shape trainer for tuning generic recognizer components using ink data supplied by a user. The trainers may load multiple trainer clients, each capable of training one or more specific recognizers. Furthermore, a framework is provided for supporting pluggable trainers. Any trainable recognizer may be dynamically personalized using the harvested information authored by the user and ink written by the user.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07379596",
	"publication_date": "2008-05-27",
	"application_number": "10693259",
	"application_date": "2003-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for proactive computer virus protection",
	"summary": "",
	"abstract": "A system, method, and computer readable medium for the proactive detection of malware in operating systems that receive application programming interface (API) calls is provided. A virtual operating environment for simulating the execution of programs and determining if the programs are malware is created. The virtual operating environment confines potential malware so that the systems of the host operating environment will not be adversely effected. During simulation, a behavior signature is generated based on the API calls issued by potential malware. The behavior signature is suitable for analysis to determine whether the simulated executable is malware.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07376970",
	"publication_date": "2008-05-20",
	"application_number": "10783275",
	"application_date": "2004-02-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for producing and communicating requested data among networked application programs",
	"summary": "",
	"abstract": "Delivering document fragments from a web server to a server-deployed client application. The invention includes a data structure of a request for data including a namespace field, an event handler field, and a parameter field. A first process sends a populated data structure to a second process. The second process executes logic maintained by the second process and identified in the populated data structure to generate result data. The second process sends the result data to the first process for display to a user or other processing by the first process.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07418715",
	"publication_date": "2008-08-26",
	"application_number": "11102039",
	"application_date": "2005-04-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing context to an input method by tagging existing applications",
	"summary": "",
	"abstract": "An improved system and method for providing context information of executable code to an input method is provided. Advanced text input methods may be made aware of the type of text expected to be received as input so that input methods may achieve a higher accuracy in recognition of text input. Generic interfaces provide a framework for supporting application authoring platforms to allow application developers to easily specify context information to the system and have it reliably forwarded to the correct input methods. Additionally, a context tagging tool may associate specific text input fields of an existing application with an input scope without modifying the application itself. The context tagging tool may create a manifest that contains tags associating the specific text input fields with an input scope. Any advanced input methods use by the application may be updated with instructions for accessing the context information stored in the manifest.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07370275",
	"publication_date": "2008-05-06",
	"application_number": "10850844",
	"application_date": "2004-05-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing transparent access to distributed authoring and versioning files including encrypted files",
	"summary": "",
	"abstract": "Access to WebDAV (Distributed Authoring and Versioning) servers is provided in a manner that is essentially transparent to applications. A WebDAV redirector and related components support file system I/O requests and network requests directed to WebDAV servers identified by URI (Universal Resource Identifier) names, or by a drive may be mapped to a WebDAV share. An application's create or open I/O requests directed to a WebDAV server are detected, and result in a local copy of the file being downloaded and cached for local access. When closed, the local file is uploaded to the WebDAV server. Network-related requests such as for browsing that are directed to a WebDAV server are also handled transparently. WebDAV files may be locally encrypted and decrypted at the file system level, transparent to applications and the WebDAV server, via an encrypting file system that performs local encryption and decryption at the local file system level.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07437429",
	"publication_date": "2008-10-14",
	"application_number": "10052039",
	"application_date": "2002-01-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for recognizing handwritten music notations",
	"summary": "",
	"abstract": "A method and system for recognizing handwritten music notations is described. The method includes steps of recognizing notations within a notation category and receiving a plurality of input strokes corresponding to handwritten music notations. Nearby strokes may be grouped to a first input stroke of the plurality of input strokes to make a stroke set and the stroke set is compared with the notations in the notation category. A determination is made as to whether the stroke set is recognized as at least one candidate notation within the notation category, a candidate list of recognized candidate notations is provided, and a music score is generated based upon the recognized candidate notations.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07432432",
	"publication_date": "2008-10-07",
	"application_number": "11087617",
	"application_date": "2005-03-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for recovery units in databases",
	"summary": "",
	"abstract": "The creation of multiple recoverable units within a database allows a database partition to be reconstructed during maintenance and disaster recovery operations. A method of creating a recovery unit includes partitioning a database into at least two recovery units. A primary catalog of metadata relating to the logical elements of a database such as tables, indexes, and file groups is created. A secondary catalog of metadata relating to the physical elements of a database such as pages, files, B-Trees, and log streams is created for each recovery unit. The primary and secondary metadata catalogs are linked such that only one log stream is associated with any one recovery unit. A single recovery unit may then be exercised to perform recovery or maintenance operations while the remaining recovery units of the database remain online.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07334002",
	"publication_date": "2008-02-19",
	"application_number": "10789244",
	"application_date": "2004-02-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for register allocation using SSA construction",
	"summary": "",
	"abstract": "The construction of Static Single Assignment form (SSA) is used as a dynamic conflict graph so that while constructing SSA in linear time, the program being analyzed is simultaneously register allocated. When allocating a register for the symbol, the conflict set is examined so that the register chosen for the symbol is not used by a symbol in the conflict set. When a symbol is register-allocated, the symbol is added to all the conflict set of all live symbols. A live symbol is determined by keeping two counters, called herein a use counter and a use threshold counter. Both counters are initialized when a definition of a symbol is encountered in a block. Both counters are incremented when a use of the symbol is encountered when traversing a block in a depth-first downward traversal. The use count is decremented when a use is detected when traversing the block in an upward traversal. A symbol is live when the use count is less than the use count threshold and the use count is greater than zero when a register is allocated. The register-allocated symbol is added to the conflict set of all live symbols.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07389501",
	"publication_date": "2008-06-17",
	"application_number": "10368746",
	"application_date": "2003-02-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for retrieving registry data",
	"summary": "",
	"abstract": "Information is retrieved from the registry by creating a registry interface database containing information regarding registry data and uniquely identifying every registry entry for a registry interface. Source header files are generated using information about a program module, such as an application, contained in the registry interface database. The source header files are compiled with the application to generate the application's executable file. During run-time of the application, the registry interface is called by the application to retrieve registry data. If available, the registry interface retrieves the registry data and forwards this information to the application. In the event that the registry data is not available, the registry interface retrieves a default value in place of the registry data and forwards that default data to the application. A policy may be implemented by checking a policy area of the registry for the registry data and invoking the policy.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07379948",
	"publication_date": "2008-05-27",
	"application_number": "10924533",
	"application_date": "2004-08-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for searching multiple disparate search engines",
	"summary": "",
	"abstract": "Described is a system and method for searching multiple disparate search engines. More particularly, a search system provides search engine manager that operates to provide a standard interface with which one or more search engines may be queried through a search client. The search system being extensible, allows for the addition of search engines beyond the time of the initial construction of the search system. Each search engine, being wrapped around a COM (component object model) object, first registers with the search system through the wrapper, the wrapper providing communication between the search engine manager and the search engine. When initiated by a client, a query is transmitted to the search engines in series, the search engines execute the query in parallel, and the results are returned asynchronously to the client.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07451136",
	"publication_date": "2008-11-11",
	"application_number": "09927096",
	"application_date": "2001-08-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for selecting test case execution behaviors for reproducible test automation",
	"summary": "",
	"abstract": "A system and method for separating execution behaviors from test cases and consolidating execution behaviors in an execution behavior manager comprising or in communication with an execution behavior library. The method includes selecting an execution behavior for executing a step or action in a test case and sending the execution behavior to the test case for execution. Additionally, the system and method provide for applying global and local weightings to the execution behavior selection process and allow for replaying a test case with previously executed behaviors.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07457989",
	"publication_date": "2008-11-25",
	"application_number": "10953238",
	"application_date": "2004-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for supporting new and existing extensions to application programming interfaces",
	"summary": "",
	"abstract": "A component, such as a Component Object Model (COM) object, operates as an intermediary between an Application Programming Interface (API) extension or plug-in and a driver. The component allows additional objects to be aggregated onto the component, and/or sets one or more setting values for a received request so that an I/O call associated with the request can be completed in a manner that is compatible with other I/O calls. The component may also return, in response to a particular request, a stream index associated with the component.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07467392",
	"publication_date": "2008-12-16",
	"application_number": "10938399",
	"application_date": "2004-09-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for supporting non-native data types in a database API",
	"summary": "",
	"abstract": "A database API is presented that can expose data of non-native data-types, i.e., types that are unknown at API design-time. A broad type-system is used that is understood by both a server and a client. The API can dynamically discover, at run-time, data types that were defined using this broad type-system. The API can retrieve metadata that references a non-native data type in a client type library. A retrieved instance of the non-native data type, in serialized form, may be deserialized using the metadata.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07325007",
	"publication_date": "2008-01-29",
	"application_number": "11074951",
	"application_date": "2005-03-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for transferring a compressed data file to a peripheral device",
	"summary": "",
	"abstract": "An image passthrough extension structure and method facilitating the transfer of compressed data image files from a software application to a device via the computer system operating system. The application determines whether the device is capable of decoding the specific compressed data file by polling the device driver. If the driver returns a u201cno supportu201d message, the application processes the compressed data file in a conventional manner. If the driver returns a u201csupportu201d message, the application transfers the compressed data file, along with the additional processing information, to the device driver utilizing the conventional file transfer operating system data structures modified to incorporate the compressed data file passthrough function. By allowing an application to transfer a compressed image file directly to a device driver, the present invention improves image fidelity and improves overall computer system efficiency by reducing the size of data files transferred between the application, the operating system and the hardware device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07437483",
	"publication_date": "2008-10-14",
	"application_number": "09520435",
	"application_date": "2000-03-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for transferring data over a network",
	"summary": "",
	"abstract": "A method is provided for transferring a set of data over a network by monitoring the level of actual network bandwidth utilization. The method identifies a maximum monitored level of actual utilization and calculates a threshold level of utilization as a function of the maximum monitored level of utilization. The threshold level represents a level below which a set of data, such as a software update, may be transferred or downloaded over the network without interfering with other network activity at the network interface. If the actual level of utilization is less than the threshold level, at least a portion or segment of the data is received over the network. If the actual level of utilization remains below the threshold level for an extended period of time, data may be transferred over the network in progressively larger segments to take advantage of unused bandwidth.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07437428",
	"publication_date": "2008-10-14",
	"application_number": "09505735",
	"application_date": "2000-02-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for unified sign-on",
	"summary": "",
	"abstract": "A mechanism is provided for signing on a user of a first domain into an affiliate application in a second domain. When the user needs access to the affiliate application, the request for access causes a ticket to be generated. The ticket identifies the user and is passed to an adapter. The adapter, which ultimately will perform the sign on in the affiliate application, redeems the ticket for the user's credentials (e.g., a valid userID/password combination for the affiliate application), and then presents the credentials to the affiliate application. A service is provided that issues tickets, redeems tickets, manages the registration and de-registration of affiliate applications, manages the correlation between a user and the user's credentials with an affiliate application, and manages encryption of stored records.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07392536",
	"publication_date": "2008-06-24",
	"application_number": "10464648",
	"application_date": "2003-06-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method of identifying the source of an attack on a computer network",
	"summary": "",
	"abstract": "The present invention provides a system and method of tracing the spread of computer malware in a communication network. One aspect of the present invention is a method that traces the spread of computer malware in a communication network. When suspicious data characteristic of malware is identified in a computing device connected to the communication network, the method causes data that describes the state of the computing device to be stored in a database. After a specific attack against the communication network is confirmed, computing devices that are infected with the malware are identified. Then, the spread of the malware between computing devices in the communication network is traced back to a source.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07434261",
	"publication_date": "2008-10-07",
	"application_number": "10951173",
	"application_date": "2004-09-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method of pipeline data access to remote data",
	"summary": "",
	"abstract": "A pipeline I/O mechanism in a network redirector that breaks up large files into sections, and sends write (or read) requests for each section in a pipeline fashion to a network file server, without waiting for a response for a previously-sent section. The pipeline I/O mechanism tracks the returned status of each section for which a request was made, so that success or failure of the request is determined as a whole. The pipeline I/O system and method dramatically increase the performance of network remote I/O operations, particularly with file write operations directed to a file on a network file server.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07359903",
	"publication_date": "2008-04-15",
	"application_number": "11252684",
	"application_date": "2005-10-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method utilizing test notifications",
	"summary": "",
	"abstract": "A system and method utilizing test notifications. An application is able to construct a test notification that is sent to a user context system and which receives back an indication whether the notification would draw or not draw on the screen at the present time, in accordance with the user's current context. In another embodiment, the calling application receives back richer indications, such as details as to whether the notification would have been deferred or routed, the sound level at which it would have played, etc. In a polling implementation, an application may periodically re-send test notifications to re-poll the system to determine if changes have occurred. In a subscription implementation, an application may subscribe to the system to receive updates that are provided when there are changes.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07469272",
	"publication_date": "2008-12-23",
	"application_number": "10402179",
	"application_date": "2003-03-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methods for providing dynamic authorization in a computer system",
	"summary": "",
	"abstract": "A dynamic authorization callback mechanism is provided that implements a dynamic authorization model. An application can thus implement virtually any authorization policy by utilizing dynamic data and flexible policy algorithms inherent in the dynamic authorization model. Dynamic data, such as client operation parameter values, client attributes stored in a time-varying or updateable data store, run-time or environmental factors such as time-of-day, and any other static or dynamic data that is managed or retrievable by the application may be evaluated in connection with access control decisions. Hence, applications may define and implement business rules that can be expressed in terms of run-time operations and dynamic data. An application thus has substantial flexibility in defining and implementing custom authorization policy, and at the same time provides standard definitions for such dynamic data and policy.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07434257",
	"publication_date": "2008-10-07",
	"application_number": "09849093",
	"application_date": "2001-05-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for enhancing a query interface",
	"summary": "",
	"abstract": "A system for enhancing searching of a network has an architecture that supports a search tool component capable of soliciting a search query from a user and of invoking an instance of an Internet browser in which to display search results. A further embodiment of the invention providing at least one search option suggesting changing at least one search parameter and at least one option allowing the user to indicate that their search was successful.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07444348",
	"publication_date": "2008-10-28",
	"application_number": "10106274",
	"application_date": "2002-03-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for refining network utilization and data block sizes in the transfer of data over a network",
	"summary": "",
	"abstract": "A system and computer-readable media are provided for refining network utilization determination and download data block sizes in the transfer of a set of data over a network. In accordance with one aspect of the invention, the system includes a monitoring component, which obtains a network utilization rate at a plurality of intervals. The system also determines an average of the network utilization rates and calculates a block size of data to transfer during the intervals as a function of the average. The average may be weighted by allocating a higher ratio to the more recently obtained network utilization rate. The calculated block size may be directly proportional to the product of the average, the size of the interval, and network availability. Alternatively, the size of the intervals may be adjusted based on the calculated block size.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07436771",
	"publication_date": "2008-10-14",
	"application_number": "10987666",
	"application_date": "2004-11-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and apparatus for supporting a kernel mode driver",
	"summary": "",
	"abstract": "An invention is disclosed that provides a set of common software routines that may be accessed by device drivers in support of the Windows Management Instrumentation system. The set of common routines includes typical routines that would ordinarily be executed by device drivers designed in accordance with WMI. The common routines may reside in a library, dynamically accessible by the device drivers. When a device driver receives a message from the WMI system, the device driver may pass the message to the library to be handled in a common manner. In this manner, the developers of device drivers in accordance with the WMI system need only develop so much code as is necessary to support any unique features or data storage of its associated hardware. The result is shortened development time and fewer programming errors. In addition, the overall system performance may be improved because fewer instances of similar code are loaded in memory to support the WMI system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07421711",
	"publication_date": "2008-09-02",
	"application_number": "10945646",
	"application_date": "2004-09-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program product for general environment mapping",
	"summary": "",
	"abstract": "A reflection image and an environment map are loaded into memory. During rendering of an object, an environment texture sample is retrieved from the environment map based on a reflection vector stored in a pixel of the reflection image. The retrieved environment texture sample is then applied to the object. The object thus rendered is stored in a frame buffer.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07394467",
	"publication_date": "2008-07-01",
	"application_number": "11275422",
	"application_date": "2005-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method, and computer program product for parsing packetized, multi-program transport stream",
	"summary": "",
	"abstract": "Systems, methods, and computer program products for parsing a packetized, multi-program transport stream are disclosed. A packetized, multi-program transport stream is received in a demultiplexer. Program specific information is extracted from the program stream and displayed on a user interface. A user may select a program from the program stream for further processing. The user interface generates a signal indicative of the selected program, and the demultiplexer output is configured based on the selection signal.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07349395",
	"publication_date": "2008-03-25",
	"application_number": "10602415",
	"application_date": "2003-06-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for data modeling in an item-based storage platform",
	"summary": "",
	"abstract": "Various embodiments of the present invention are directed to a data store comprising Items, Elements, and Relationships. An Item is a unit of data storable in a data store and further comprises said Element and said Relationship. An Element is an instance of a type comprising one or more fields. A Relationship is a link between at least two Items. The data store further comprising a Core Schema to define a set of Core Items by which a hardware/software interface system understands and directly processes said set of Core Items in a predetermined and predictable way. The Core Items are derived (directly or indirectly) from a common single Base Item which, in turn, is a foundational Item in a Base Schema.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07428546",
	"publication_date": "2008-09-23",
	"application_number": "10646580",
	"application_date": "2003-08-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for determining remote device media capabilities",
	"summary": "",
	"abstract": "Systems and methods for providing a media device capabilities determination mechanism in a networked computing environment are provided. Some of today's operating systems and applications deliver a set of remoting features to enable a networked ecosystem of remote media consumption devices. These devices connect to the host and display a remoted media experience via remoting protocols and technologies. In this regard, the device capabilities determination mechanism of the invention enables a remote device to specify a custom set of media capabilities that should be remoted from the host to the remote device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07418472",
	"publication_date": "2008-08-26",
	"application_number": "10674706",
	"application_date": "2003-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for deterring software piracy in a volume license environment",
	"summary": "",
	"abstract": "A unique volume license key (VLK) is provided to a volume license holder. A signed file containing the VLK and the data derived from volume license holder's submitted computing environment information is provided to the volume license holder along with the licensed software. The license file is stored in a central location, such as on an installation server, or locally on client machines, in a rather large file of any type. Upon logon, the license file is read, the data authenticated and the system is activated. If license data cannot be authenticated, a connected system either fully functions in grace period or run in reduced functionality mode until authentication succeeds. If the system is disconnected, the system is functional only with disconnected features until it joins a network again. In a completely off-line installation, the license file is generated by the volume license holder using software vendor assigned specific VLK and software vendor provided security hardware device. The distribution methods of software package, the VLK, and the license file can be flexible, including, but not limited to, single or multiple media.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07356709",
	"publication_date": "2008-04-08",
	"application_number": "10356225",
	"application_date": "2003-01-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for deterring theft of electronic devices",
	"summary": "",
	"abstract": "Systems and methods for remotely shutting down or preventing operation of device via a wireless network infrastructure are provided. The device may be disabled using a defined command the device receives on a wide area network, such as a SPOT network or wireless carrier network. In various embodiments, the device responds to pre-defined command(s) and operation is disabled locally. Override codes may be used to locally re-enable the device. In a u201ckeep aliveu201d embodiment, the device operates as long as it continues to receive u201ckeep aliveu201d messages from the intended environment.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07355506",
	"publication_date": "2008-04-08",
	"application_number": "10676967",
	"application_date": "2003-10-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for device simulation",
	"summary": "",
	"abstract": "In an implementation, a system includes a simulation engine that is executable to simulate actions performed by a plurality of devices in a distributed system. The system also includes a plurality of pluggable device models that are accessible by the simulation engine via an interface. Each of the device models represents one of the devices and is configured to map a cost of performing at least one of the actions to an action latency by the corresponding device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07383161",
	"publication_date": "2008-06-03",
	"application_number": "11105251",
	"application_date": "2005-04-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for displaying and editing hierarchical data",
	"summary": "",
	"abstract": "Systems and methods for displaying hierarchical data are described. In an implementation, a method includes processing hierarchical data describing a distributed computing environment. The hierarchical data includes a plurality of levels, in which, at least one of the levels includes a plurality of containers, each of the containers includes one or more items, and each of the items is disposed in another level that is a child of the at least one level. The processed hierarchical data is output for display in a single window on a display device such that the hierarchical data indicates a relationship between each of the items and a respective one of the containers and is configured such that each of the items may be edited without interacting with another window.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07383516",
	"publication_date": "2008-06-03",
	"application_number": "11105254",
	"application_date": "2005-04-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for efficiently storing and accessing data storage system paths",
	"summary": "",
	"abstract": "The subject invention provides a system and/or a method that facilitates providing a compact representation of a file path associated to a file storage system. A path component can provide seamless integration and/or transition between the file path associated to the file storage system and an item and/or item ID within the data storage system. The path component can utilize a tabular format, wherein such tabular format allows the cross-reference between the file path and item. The compact representation can facilitate at least one of storing, renaming, and searching.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07383274",
	"publication_date": "2008-06-03",
	"application_number": "11084911",
	"application_date": "2005-03-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for interacting with a user interface of a media player",
	"summary": "",
	"abstract": "Systems and methods for interfacing with playback of media by a media player are provided. By combining the functionality of fast forward and skip forward into a single button control, the invention reduces the numbers of control buttons that need be included on a device, reducing device costs and consumer u201cbutton overload.u201d In one embodiment, by pressing (and releasing) a forward button, media being rendered by a media player skips to a predetermined location in the media. By pressing and holding (and then releasing) the forward button, the media being rendered is fast forwarded according to algorithms for fast forwarding. A backward button covers skipping backward and fast reversing in a similar fashion. A device including a play/pause button and the described forward and backward buttons advantageously reduces the number of buttons required by two buttons.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07421656",
	"publication_date": "2008-09-02",
	"application_number": "10751846",
	"application_date": "2004-01-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for managing multiple grammars in a speech recognition system",
	"summary": "",
	"abstract": "Systems and methods are described for a speech system that manages multiple grammars from one or more speech-enabled applications. The speech system includes a speech server that supports different grammars and different types of grammars by exposing several methods to the speech-enabled applications. The speech server supports static grammars that do not change and dynamic grammars that may change after a commit. The speech server provides persistence by supporting persistent grammars that enable a user to issue a command to an application even when the application is not loaded. In such a circumstance, the application is automatically launched and the command is processed. The speech server may enable or disable a grammar in order to limit confusion between grammars. Global and yielding grammars are also supported by the speech server. Global grammars are always active (e.g., u201ccall 9-1-1u201d) while yielding grammars may be deactivated when an interaction whose grammar requires priority is active.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07363229",
	"publication_date": "2008-04-22",
	"application_number": "11267550",
	"application_date": "2005-11-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for mapping e-mail records between a client and server that use disparate storage formats",
	"summary": "",
	"abstract": "An e-mail application program operating on a client stores e-mail records in a hierarchical database. The client is linked to a server that stores e-mail records in a flat database. The e-mail records stored in the hierarchical database are mapped to the e-mail records stored in the flat database and vice versa. The mapped e-mail records are then stored in a mapping table.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07428544",
	"publication_date": "2008-09-23",
	"application_number": "10170041",
	"application_date": "2002-06-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for operating a computing device having image capture capabilities",
	"summary": "",
	"abstract": "Systems and methods for operating a portable computing device having a broad set of functionality, such as image or audio/video capture capabilities, are provided. One or more specialized modes are provided in a portable computing device, such as a smart phone, for intelligently disabling any distracting functionality of the portable computing device with respect to a target subset of functionality possessed by the device and invoked during operation of a specialized mode. In various embodiments, the special mode for operation of a portable computing device in accordance with the invention is such that functionality that is likely to interfere with a time capture event of the device is disabled or mitigated during operation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07386323",
	"publication_date": "2008-06-10",
	"application_number": "11102527",
	"application_date": "2005-04-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for pagination and co-pagination",
	"summary": "",
	"abstract": "Methods and systems are provided for controlling pagination in computer software applications. Abstract classes and methods are provided with programming interfaces to improve the ease with which developers can create applications that allow for co-pagination with arbitrary object types, and can create arbitrary object types that can co-paginate with arbitrary applications.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07412646",
	"publication_date": "2008-08-12",
	"application_number": "10692111",
	"application_date": "2003-10-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for prioritized data-driven software testing",
	"summary": "",
	"abstract": "Systems and methods for a test harness that are provided that allow for effective control over both the data records and the test methods that are used in a software test run. Data records and/or test methods can be associated with a priority, such that a level of priority may be selected for a particular test run, and substantially only data records and test methods of the selected priority are used in the test. The invention may be implemented as a data driven test pattern class library. The data driven test pattern class library may generate concrete prioritized test cases dynamically using code document object model (code DOM) for substantially each data record by using a class decorated with known custom attributes. The invention can be used to help testers implement data driven tests effectively and in an easily maintainable fashion with minimal code.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07363616",
	"publication_date": "2008-04-22",
	"application_number": "10941602",
	"application_date": "2004-09-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for providing automatic network optimization with application variables",
	"summary": "",
	"abstract": "Systems and methods for automatic network optimization with application variables are provided. Operation of a protocol stack, such as an SCP stack, relies upon a number of persistent variables, which are remembered over power and reset cycles, used in connection with controlling protocol timing and behavior. These application variables are handled at the network layer of the protocol and may be assigned values by an address space arbitrator, which is an entity responsible for managing the logical network. Each node member of a logical network maintains a set of values for its application variables. This set can be handled by the protocol's network layer, and can be saved in persisted storage. Since the variable values may be modified asynchronously, they are treated as volatile and thus, when a variable is used, its value is obtained through an application interface exposed by a network layer, e.g., through polling. An exception to this procedure is a data link layer, which obtains some operating parameters on every call by the network layer. Optimization of application variables enables reliable operation of a logical network operating under low bandwidth network conditions, etc.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07453906",
	"publication_date": "2008-11-18",
	"application_number": "10251457",
	"application_date": "2002-09-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for providing controllable texture sampling",
	"summary": "",
	"abstract": "Systems and methods are provided for controlling texture sampling in connection with computer graphics in a computer system. In various embodiments, improved mechanisms for controlling texture sampling are provided that enable 3-D accelerator hardware to greatly increase the level of realism in rendering, including improved mechanisms for (1) motion blur; (2) generating anisotropic surface reflections (3) generating surface self-shadowing (4) ray-cast volumetric sampling (4) self-shadowed volumetric rendering and (5) self-shadowed volumetric ray-casting. In supplementing existing texture sampling techniques, parameters for texture sampling may be replaced and/or modified.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07324116",
	"publication_date": "2008-01-29",
	"application_number": "10176811",
	"application_date": "2002-06-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for providing power-loss protection to sleeping computers systems",
	"summary": "",
	"abstract": "Transitioning to a suspend to RAM sleeping state while also protecting against power losses while sleeping is provided. System state context data is saved to non-volatile storage and components in the computer system prepare to transition to a suspend to disc sleeping. A transition to the suspend to RAM sleeping state is then effected. Alternatively, after the system context is saved and the components are prepared to transition, the system may wake to a working state. The components may be directed to prepare for transitioning to a suspend to RAM sleeping state, and then the BIOS may be directed to execute the transition. In either embodiment, if power to the system is lost while the system is in the suspend to RAM system state, then the system may resume to a working state by reading the context file stored to non-volatile storage.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07373530",
	"publication_date": "2008-05-13",
	"application_number": "11083256",
	"application_date": "2005-03-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for providing secure server key operations",
	"summary": "",
	"abstract": "A key management interface that allows for different key protection schemes to be plugged into a digital rights management system is disclosed. The interface exposes the functionality of signing data, decrypting data encrypted using a public key, and re-encrypting data encrypted using the public key exported by the interface to a different authenticated principal (i.e., a different public key). Thus, a secure interface can be provided such that the data does not enter or leave the interface in the clear. Such an interface exports private key operations of signing and decryption, and provides security and authentication for the digital asset server in licensing and publishing. During publishing, a client can encrypt asset keys such that only a specified entity can decrypt it, using a plug-in, for example, that implements the aforementioned interface. During licensing, the license issuing entity can use the interface to decrypt keys for assets and to sign licenses and rights labels such that the asset is protected and consumable by a host digital rights management platform. The interface thus provides an abstraction for key operations.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07443985",
	"publication_date": "2008-10-28",
	"application_number": "11508437",
	"application_date": "2006-08-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for providing signal-specialized parametrization",
	"summary": "",
	"abstract": "Systems and methods are provided for optimizing a parametrization scheme in accordance with information about the surface signal. A surface parametrization is created to store a given surface signal into a texture image. The signal-specialized metric of the invention minimizes signal approximation error, i.e., the difference between the original surface signal and its reconstruction from the sampled texture. A signal-stretch parametrization metric is derived based on a Taylor expansion of signal error. For fast evaluation, the metric of the invention is pre-integrated over the surface as a metric tensor. The resulting parametrizations have increased texture resolution in surface regions with greater signal detail. Compared to traditional geometric parametrizations, the number of texture samples can often be reduced by a significant factor for a desired signal accuracy.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07425954",
	"publication_date": "2008-09-16",
	"application_number": "11145196",
	"application_date": "2005-06-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for scheduling coprocessor resources in a computing system",
	"summary": "",
	"abstract": "Systems and methods for scheduling coprocessing resources in a computing system are provided without redesigning the coprocessor. In various embodiments, a system of preemptive multitasking is provided achieving benefits over cooperative multitasking by any one or more of (1) executing rendering commands sent to the coprocessor in a different order than they were submitted by applications; (2) preempting the coprocessor during scheduling of non-interruptible hardware; (3) allowing user mode drivers to build work items using command buffers in a way that does not compromise security; (4) preparing DMA buffers for execution while the coprocessor is busy executing a previously prepared DMA buffer; (5) resuming interrupted DMA buffers; and (6) reducing the amount of memory needed to run translated DMA buffers.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07444637",
	"publication_date": "2008-10-28",
	"application_number": "10777797",
	"application_date": "2004-02-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for sharing dynamic content among a plurality of online co-users",
	"summary": "",
	"abstract": "Systems and methods for establishing a shared dynamic content experience are disclosed. A method for sharing a dynamic content experience according to the invention includes an inviter computer communicating, via a first communication path between an invitee computer and a network based communication server, an invitation to establish a shared dynamic content experience between the inviter computer and the invitee computer. If the invitation is accepted, a content sharing communication path is established between the inviter computer and the invitee computer. Information relating to a current dynamic content experience at the inviter computer is communicated, via the content sharing communication path, to the invitee computer. Information relating to a current dynamic content experience at the invitee computer is communicated, via the content sharing communication path, to the inviter computer.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07426537",
	"publication_date": "2008-09-16",
	"application_number": "10160846",
	"application_date": "2002-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for synchronizing computer systems through an intermediary file system share or device",
	"summary": "",
	"abstract": "The invention is directed to systems and methods for the synchronization of two clients both utilizing a common storage platform (e.g., the new storage platform of the related inventions) to synchronize through an intermediary that is not using the same common storage platform (e.g., instead using a legacy storage platform that does not itself support synchronization for the new storage platform). Data is synchronized using the existing capabilities of the intermediary but where the data structure of the clients is preserved. An u201cadapteru201d is used to enable a client to interact with an intermediary by compensating for the intermediaries inability to preserve the data structure elements inherent to the client's storage platform. Specific embodiments are directed to either or both upload-syncing data from a client to a intermediary and/or download-syncing data from an intermediary to a client. Certain additional embodiments are further directed to compaction of data on the intermediary.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07401104",
	"publication_date": "2008-07-15",
	"application_number": "10889423",
	"application_date": "2004-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods to read, optimize, and verify byte codes for a multiplatform jit",
	"summary": "",
	"abstract": "A byte code reader provides verification while optimizing and creating an internal SSA form to allow efficient machine code generation. Many functions are combined in one component honoring the difficult time constraints of just-in-time translation. This reader is engineered for retargeting and thus expedites the implementation of a JIT for any platform. The reader takes two single passes over the byte codes: a first pass that builds a flow graph using any set of rules for node creation, and maps definitions from the byte codes onto the flow graph nodes, and a second pass that translates whatever is in the byte codes into optimized machine code (or a traditional compiler intermediate form) with an embedded SSA graph. Global verification and global optimization are implemented while reading. Two data structures and a main program loop are provided. The data structures are used to allow the creation of a flow graph, and an exception handling (EH) graph.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07370321",
	"publication_date": "2008-05-06",
	"application_number": "10294362",
	"application_date": "2002-11-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems, methods, and apparatus for indicating processor hierarchical topology",
	"summary": "",
	"abstract": "The present invention utilizes a topology application programming interface (API) to provide relation information describing processor and platform topology to an executable program via a standardized interface. By providing topology information, the topology API allows the program to optimize its performance based upon the information without having to be explicitly aware of the actual platform architecture. The present invention also provides an expandable topology API that allows for future expansion of information type, without altering the standardized interface. In another instance of the present invention, the topology API collects, processes, and provides topology information about an underlying hardware architecture.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07451459",
	"publication_date": "2008-11-11",
	"application_number": "10429316",
	"application_date": "2003-05-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Template-driven XML digital signature",
	"summary": "",
	"abstract": "An XML digital signature standard is applied to an XML document to sign it. The XML digital signature is an XML fragment with a specified schema that includes (a) data to describe how the signature should be calculated (e.g., digest methods, filters, and data sources) and (b) actual signature data (e.g., digests and signature values). The data describing how the signature should be calculated (i.e., the u201cgroup (a)u201d data) is placed inside an XML digital signature template, which is then used (e.g., by an API (application programming interface)) to create the actual digital signature containing the u201cgroup (b)u201d data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07340611",
	"publication_date": "2008-03-04",
	"application_number": "10352527",
	"application_date": "2003-01-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Test automation stack layering",
	"summary": "",
	"abstract": "Separation of aspects of automated testing into architectural layers enables automated testing to occur sooner and faster and to provide more comprehensive testing. A physical layer provides an object model over the user interface of an application. A logical layer provides an object model around the functions of an application. A test case executor may execute a test case. A data manager may ensure variability in test data. A behavior manager may determine execution details appropriate for a particular test case. A verification manager may perform the verification processing after the test case has executed.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07398514",
	"publication_date": "2008-07-08",
	"application_number": "10953402",
	"application_date": "2004-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Tool for selecting ink and other objects in an electronic document",
	"summary": "",
	"abstract": "A note-taking application is provided which includes a free-form selection tool. In certain embodiments, a particular selection may be based in part on the speed or velocity of a user selection. The free-form selection tool is configured to provide more or less precise selections based in part on the speed of a selection. The free-form selection tool is further operable to recognize when a user is attempting to retry a selection.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07454702",
	"publication_date": "2008-11-18",
	"application_number": "11085735",
	"application_date": "2005-03-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Training wideband acoustic models in the cepstral domain using mixed-bandwidth training data and extended vectors for speech recognition",
	"summary": "",
	"abstract": "A method and apparatus are provided that generate values for a first set of dimensions of a feature vector from a speech signal. The values of the first set of dimensions are used to estimate values for a second set of dimensions of the feature vector to form an extended feature vector. The extended feature vector is then used to train an acoustic model.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07454338",
	"publication_date": "2008-11-18",
	"application_number": "11053151",
	"application_date": "2005-02-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transactional file system",
	"summary": "",
	"abstract": "A transactional file system wherein multiple file system operations may be performed as a transaction. An application specifies that file system-related operations are to be handled as a transaction, and the application is given a file handle associated with a transaction context. For file system requests associated with a transaction context, a file system component manages the operations consistent with transactional behavior. The component provides data isolation by providing multiple versions of a file by tracking copies of changed pages, such that transactional readers do not receive changes to a file made by transactional writers, until the transactional writer commits the transaction and the reader reopens the file. The component handles namespace logging operations in a multiple-level log that facilitates logging and recovery. Page data is logged separate from the main log, with a unique signature that enables the log to determine whether a page was fully flushed to disk.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07418463",
	"publication_date": "2008-08-26",
	"application_number": "11010820",
	"application_date": "2004-12-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transferring metadata to a client",
	"summary": "",
	"abstract": "Methods providing clients with a full contextual metadata experience. Metadata include multiple forms of property data, or information, relating to media accessed by a media player, such as a CD in a CD-ROM drive of a computer. Metadata is transferred from a server to a client. Identification parameters associated with the accessed media file are submitted by the client to a server, and property data is retrieved and forwarded to the client. The metadata provides the user with integrated, contemporaneous property data directly related to the media file being played, providing automatic, integrated access to data from multiple databases, simply by accessing a related media file through a media player, without further direction from the user.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07428572",
	"publication_date": "2008-09-23",
	"application_number": "11222312",
	"application_date": "2005-09-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transformation of componentized and extensible workflow to a declarative format",
	"summary": "",
	"abstract": "Building a componentized workflow model. Each step of the workflow is modeled as an activity that has metadata to describe design time aspects, compile time aspects, and runtime aspects of the workflow step. A user selects and arranges the activities to create the workflow via user interfaces or application programming interfaces. The metadata associated with each of the activities in the workflow is collected to create a persistent representation of the workflow. Users extend the workflow model by authoring custom activities. The workflow may be compiled and executed.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07451432",
	"publication_date": "2008-11-11",
	"application_number": "11047017",
	"application_date": "2005-01-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transparent authentication using an authentication server",
	"summary": "",
	"abstract": "A user, by way of a computing device, requests and receives content from a first server at the computing device. An authentication response is also received from the first server at the computing device of the user. The authentication response includes an address of the second server and an executable script. The computing device of the user executes the executable script by issuing a request to the second server for state information corresponding to the user, receiving the state information from the second server; and determining, based on the state information, whether the user is authenticated to the second server. If the user is not authenticated to the second server, the computer device of the user displays a login module that is visually associated with the first server. Such login module collects login information for authenticating the user to the second server. If the user is authenticated in the second server, the computing device of the user issues a request to the second server for vouching information for authenticating the user to the first server.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07421731",
	"publication_date": "2008-09-02",
	"application_number": "09792359",
	"application_date": "2001-02-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Two-stage implementation for phonetic recognition using a bi-directional target-filtering model of speech coarticulation and reduction",
	"summary": "",
	"abstract": "A structured generative model of a speech coarticulation and reduction is described with a novel two-stage implementation. At the first stage, the dynamics of formants or vocal tract resonance (VTR) are generated using prior information of resonance targets in the phone sequence. Bi-directional temporal filtering with finite impulse response (FIR) is applied to the segmental target sequence as the FIR filter's input. At the second stage the dynamics of speech cepstra are predicted analytically based on the FIR filtered VTR targets. The combined system of these two stages thus generates correlated and causally related VTR and cepstral dynamics where phonetic reduction is represented explicitly in the hidden resonance space and implicitly in the observed cepstral space. The combined system also gives the acoustic observation probability given a phone sequence. Using this probability, different phone sequences can be compared and ranked in terms of their respective probability values. This then permits the use of the model for phonetic recognition.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07409346",
	"publication_date": "2008-08-05",
	"application_number": "11069474",
	"application_date": "2005-03-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Type path indexing",
	"summary": "",
	"abstract": "Efficient hierarchical searching is based on object type. By pre-computing additional information and storing it in a fast-lookup structure, it is possible to quickly identify objects that satisfy an object retrieval request. Furthermore, it is also possible to use this technique to avoid object hydration for operations in the store. Moreover, it is possible to leverage database statistical structures such as histograms to estimate the number of qualifying objects without having to examine each object.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07379927",
	"publication_date": "2008-05-27",
	"application_number": "11244018",
	"application_date": "2005-10-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Type server caching the proxy/stub generation",
	"summary": "",
	"abstract": "A type server provides the proxy and stub code needed by client and server programs on demand (dynamically), when the code is needed during execution. When an interface for a resource is defined, the proxy code and the stub code for the type of resource is generated and stored within the type server. The client and server programs each keep a local table of type identifiers/resource type translations for each resource referenced. The local table acts like a cache: when a type identifier is not found in the table, the type server is contacted, and the type identifier for that resource type is retrieved and stored in the cache. Another local table acting as a cache stores type ID and associated proxy and stub code for the resource type. When a program needs the proxy code for a resource type, it checks its cache and it the proxy code is not found the type server is contacted, the proxy (and stub) code is retrieved from the type server and is stored in the cache.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07434235",
	"publication_date": "2008-10-07",
	"application_number": "11130293",
	"application_date": "2005-05-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Uniform resource discovery and API layering",
	"summary": "",
	"abstract": "In response to receiving a request for function instances, underlying function instances are identified using API layer data. The requested function instances are then created based on the underlying function instances.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07461054",
	"publication_date": "2008-12-02",
	"application_number": "11060913",
	"application_date": "2005-02-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Uniform resource discovery with multiple computers",
	"summary": "",
	"abstract": "Data associated with a function instance corresponding to a resource on one computer system is published for use on another computer system. A function instance is created on the other computer system using the published data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07467384",
	"publication_date": "2008-12-16",
	"application_number": "11120441",
	"application_date": "2005-05-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Universal gates for ising TQFT via time-tilted interferometry",
	"summary": "",
	"abstract": "Experiments suggest that the mathematically weakest non-abelian TQFT may be physically the most robust. Such TQFT'su2014the u03bd=5/2 FQHE state in particularu2014have discrete braid group representations, so one cannot build a universal quantum computer from these alone. Time tilted interferometry provides an extension of the computational power (to universal) within the context of topological protection. A known set of universal gates has been realized by topologically protected methods using u201ctime-tilted interferometryu201d as an adjunct to the more familiar method of braiding quasi-particles. The method is u201ctime-tilted interferometry by quasi-particles.u201d The system is its use to construct the gates {g1, g2, g3}.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07321131",
	"publication_date": "2008-01-22",
	"application_number": "11245964",
	"application_date": "2005-10-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Universal media player",
	"summary": "",
	"abstract": "A universal media player designed to improve a user's online media experience that is preferably embedded in an Internet browser is disclosed. The universal media player allows a user to navigate between different sources of media without requiring the downloading of the media player associated with the format of the media source. The universal media player includes an interface with user-actuable control buttons, the universal media player determining whether incoming media is playable by the universal media player. If the incoming media is playable by the universal media player, the media is intercepted as the media is downloaded and redirected to the universal media player. Determining if the media is playable is accomplished by identifying the type of incoming media and searching a table of MIME media types.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07360152",
	"publication_date": "2008-04-15",
	"application_number": "11083860",
	"application_date": "2005-03-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Universal media player",
	"summary": "",
	"abstract": "A universal media player designed to improve a user's online media experience that is preferably embedded in an Internet browser is disclosed. The universal media player allows a user to navigate between different sources of media without requiring the downloading of the media player associated with the format of the media source. The universal media player includes an interface with user-actuable control buttons, the universal media player determining whether incoming media is playable by the universal media player. If the incoming media is playable by the universal media player, the media is intercepted as the media is downloaded and redirected to the universal media player. Determining if the media is playable is accomplished by identifying the type of incoming media and searching a table of MIME media types.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07386784",
	"publication_date": "2008-06-10",
	"application_number": "11083684",
	"application_date": "2005-03-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Using wildcards in semantic parsing",
	"summary": "",
	"abstract": "A method and apparatus perform semantic parsing by designating one or more words in an input text stream as wildcards. Under some embodiments, partially constructed parses formed from other words in the text stream are used to control when a later word will be identified as a wildcard. In particular, if a partial parse is expecting a semantic token that begins with a wildcard, the next word in the input text segment is designated as a wildcard term. If none of the existing partial parses are expecting a semantic token that begins with a wildcard, the next word is not designated as a wildcard",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07464032",
	"publication_date": "2008-12-09",
	"application_number": "11152717",
	"application_date": "2005-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Virtual resource serving of consolidated server shares",
	"summary": "",
	"abstract": "A system includes a server registry having one or more registered server names of associated network servers, an alias registry having one or more alias server names associated with each of the one or more registered server names, and a name resolution module resolving a requested server and share name to a destination server. Resolving the requested server and share names involves determining whether a requested server is registered and if the requested server is not registered, determining an alias server name corresponding to the requested server name.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07418507",
	"publication_date": "2008-08-26",
	"application_number": "10740974",
	"application_date": "2003-12-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Visual and scene graph interfaces",
	"summary": "",
	"abstract": "A method and system implemented in an application programming interface (API) and an object model allows program code developers to interface in a consistent manner with a scene graph data structure to output graphics. Via the interfaces, program code writes drawing primitives such as geometry data, image data, animation data and other data to visuals that represent a drawing surface, including validation visual objects, drawing visual objects and surface visual objects. The code can also specify transform, clipping and opacity properties on visuals, and add child visuals to other visuals to build up a hierarchical scene graph. A visual manager traverses the scene graph to provide rich graphics data to lower-level graphics components.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07466315",
	"publication_date": "2008-12-16",
	"application_number": "10693673",
	"application_date": "2003-10-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Volume migration",
	"summary": "",
	"abstract": "Systems and methods for performing an on-demand determination of a correct set of volumes to be exported are described. A disk platter is defined to be the unit of volume migration. Volumes are added to the platter based on whether or not the volume coexists on a disk containing a volume to be exported.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07334007",
	"publication_date": "2008-02-19",
	"application_number": "10738110",
	"application_date": "2003-12-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "VPN enrollment protocol gateway",
	"summary": "",
	"abstract": "A virtual private network (VPN) enrollment protocol gateway is described herein. The protocol gateway is implemented as a registration authority that operates as an intermediary between routers and a certificate authority, allowing routers operating in accordance with one protocol to obtain and maintain certificates for a VPN from a certificate authority operating in accordance with another protocol. In accordance with one aspect, the gateway protocol supports various requests from the router, including router enrollment requests, get certificate revocation list request, get certificate requests, get certificate authority certificate requests, and password requests.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07350073",
	"publication_date": "2008-03-25",
	"application_number": "11278063",
	"application_date": "2006-03-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web access to secure data",
	"summary": "",
	"abstract": "Controlling access to secure data and services by versatile computers outside a secure environment, which communicates with limited dedicated devices such as game consoles, over a secure network such as a virtual private network. The versatile computing devices obtain access over an insecure network, such as the Internet, through a trusted partner Web site that authenticates users of the site and relays requests to the secure environment. The Web site uses a certificate for a predefined level of secure access to the secure environment. A link is established between a user's Web ID authenticated by the Web site and a gamer tag used within the secure environment. Access is limited as a function of the Web ID, gamer tag, and a Web site partner ID. A Web cache stores and provides some secure data, minimizing disruption to the secure environment's primary function to service the dedicated devices.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07452278",
	"publication_date": "2008-11-18",
	"application_number": "10434569",
	"application_date": "2003-05-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web store events",
	"summary": "",
	"abstract": "Systems and methods for web store events. A web store event occurs whenever an item is accessed. When an item is accessed, both synchronous and asynchronous events can fire. If a synchronous event fires, then an event object that has registered for the synchronous event is called and executed before the transaction involving the item is allowed to complete. The synchronous event also has the ability to either commit or abort the transaction. Importantly, the synchronous event has complete control over the item. An asynchronous event is called and executed after the transaction involving the item is already committed to the store and after any synchronous events have executed. Because more than one event object can register for a web store event, synchronous event objects are called according to their priority. Synchronous events fire before asynchronous events and synchronous event objects execute before asynchronous event objects.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07451127",
	"publication_date": "2008-11-11",
	"application_number": "11040341",
	"application_date": "2005-01-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web store events",
	"summary": "",
	"abstract": "Systems and methods for web store events. A web store event occurs whenever an item is accessed. When an item is accessed, both synchronous and asynchronous events can fire. If a synchronous event fires, then an event object that has registered for the synchronous event is called and executed before the transaction involving the item is allowed to complete. The synchronous event also has the ability to either commit or abort the transaction. Importantly, the synchronous event has complete control over the item. An asynchronous event is called and executed after the transaction involving the item is already committed to the store and after any synchronous events have executed. Because more than one event object can register for a web store event, synchronous event objects are called according to their priority. Synchronous events fire before asynchronous events and synchronous event objects execute before asynchronous event objects.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07433875",
	"publication_date": "2008-10-07",
	"application_number": "10997463",
	"application_date": "2004-11-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Wet ink",
	"summary": "",
	"abstract": "A system and process for ensuring the smooth flow of electronic ink is described. Dynamic rendering is give priority over other event handlers. Priority may be the use of one or more queues to order when events occur and may be performing dynamic rendering prior to other steps.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07450261",
	"publication_date": "2008-11-11",
	"application_number": "10985920",
	"application_date": "2004-11-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Wireless database environment for a small device",
	"summary": "",
	"abstract": "The wireless environment includes an object processing module to process objects obtained from a wireless receiver on the mobile device. The object processing module processes the object to alter data stored in memory on the mobile device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07444143",
	"publication_date": "2008-10-28",
	"application_number": "10996205",
	"application_date": "2004-11-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Wireless internet services billing",
	"summary": "",
	"abstract": "Wireless internet services billing enables a telecommunications company to bill internet service events on a transaction level. In a described implementation, an internet service event, which occurs at least partially within an internet environment, is detected. An internet services proxy injects event billing information related to the detached event into an event billing information communication that is sent to a telecommunications billing gateway. At the telecommunications billing gateway, the event billing information is logged into an event billing log in association with an identity of a telecommunications user. By way of example, the event billing information may comprise an action indicator and an entity identifier. The action indicator indicates an action corresponding to the event, and the entity identifier identifies an entity that is associated with the event. The internet services proxy may be located at a telecommunications device of a user, at a provider of internet services, or both.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07453997",
	"publication_date": "2008-11-18",
	"application_number": "11118719",
	"application_date": "2005-04-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Workflow management based on an integrated view of resource identity",
	"summary": "",
	"abstract": "The described arrangements and procedures use a directory, with its integrated view of resource identity across a distributed system to dynamically execute and manage workflow solutions responsive to changes in the directory. Specifically, a state change to an object in a directory is detected. Responsive to detecting the state change, the state change is mapped to a corresponding workflow, which includes sequences of tasks. The identified sequences of tasks are then executed to achieve a desired state in the directory. The desired state is based on the detected state change.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07389335",
	"publication_date": "2008-06-17",
	"application_number": "09995004",
	"application_date": "2001-11-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "XML-based template language for devices and services",
	"summary": "",
	"abstract": "A universal plug and play (UPnP) device makes itself known through a set of processesu2014discovery, description, control, eventing, and presentation. Following discovery of a UPnP device, an entity can learn more about the device and its capabilities by retrieving the device's description. The description includes vendor-specific manufacturer information like the model name and number, serial number, manufacturer name, URLs to vendor-specific Web sites, etc. The description also includes a list of any embedded devices or services, as well as URLs for control, eventing, and presentation. The description is written by a vendor, and is usually based on a device template produced by a UPnP forum working committee. The template is derived from a template language that is used to define elements to describe the device and any services supported by the device. The template language is written using an XML-based syntax that organizes and structures the elements.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07437434",
	"publication_date": "2008-10-14",
	"application_number": "10981057",
	"application_date": "2004-11-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Printer driver identification for a remote printer",
	"summary": "",
	"abstract": "In a multi-user server-client environment, a printer can be attached to a client computer. The server selects a corresponding printer driver to install on the server in order to allow applications executing on the server to print to the printer attached to the remote client computer. The selection process allows the server to intelligently identify closely matching printer drivers in the event that a particular printer driver that the server is notified of is not available for installation.",
	"url": null,
	"owner": "Microsoft Corporations",
	"publication_number": "07401113",
	"publication_date": "2008-07-15",
	"application_number": "09454221",
	"application_date": "1999-12-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Rich object model for diverse Auto-ID tags",
	"summary": "",
	"abstract": "A system and method allowing one application to implement diverse AutoID tags interchangeably, by unifying all AutoID technologies into a single object model. The single object model interacts with all AutoID technologies, with only a lowest level device tailored to the specific AutoID technology, the single object model thereby persisting through the middleware, up to an application, carrying all necessary information from any AutoID technology. The single object model can interact with a tag many times, as necessary to complete an operation. A reader interface allows an application to communicate with multiple readers of diverse AutoID tags, and to communicate with individual servers communicating with individual readers of diverse AutoID tags. The reader interface also provides a single interface for hardware communication with a radio, for an application interacting with an entire network of readers, sensors, interpretation steps, product lookup, and information storage providing a single virtual reader.",
	"url": null,
	"owner": "Microsoft Corproation",
	"publication_number": "07455218",
	"publication_date": "2008-11-25",
	"application_number": "11156952",
	"application_date": "2005-06-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for obtaining feedback from delivery of informational and transactional data",
	"summary": "",
	"abstract": "A system for a personal intelligence network provides informational and transactional data. Data distribution servers provide e-mail and other messages of topical interest to a subset of the subscribers. The content may be generated by an On-Line Analytical Processing (OLAP) based channel database system, and the output may also be communicated to individuals via spreadsheet programs data, pager, telephone, mobile phone, fax, personal digital assistants, Hypertext Markup Language (HTML) e-mail and other formats, including a workbook file attachment. Reports generated may enable a subscriber to act upon the content within the report, thereby providing an interactive component to the report. Subscriber actions or inaction to the report and content may be obtained and analyzed, including analysis in connection with the other informational and transactional data.",
	"url": null,
	"owner": "Microstrategy, Incorporated",
	"publication_number": "07415438",
	"publication_date": "2008-08-19",
	"application_number": "09878205",
	"application_date": "2001-06-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Universal gates for ising TQFT via time-tilted interferometry",
	"summary": "",
	"abstract": "Experiments suggest that the mathematically weakest non-abelian TQFT may be physically the most robust. Such TQFT'su2014the v=5/2 FQHE state in particularu2014have discrete braid group representations, so one cannot build a universal quantum computer from these alone. Time tilted interferometry provides an extension of the computational power (to universal) within the context of topological protection. A known set of universal gates has been realized by topologically protected methods using u201ctime-tilted interferometryu201d as an adjunct to the more familiar method of braiding quasi-particles. The method is u201ctime-tilted interferometry by quasi-particles.u201d The system is its use to construct the gates {g1, g2, g3}.",
	"url": null,
	"owner": "Mircosoft Corporation",
	"publication_number": "07427771",
	"publication_date": "2008-09-23",
	"application_number": "11942518",
	"application_date": "2007-11-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mechanism for sharing of guaranteed resources",
	"summary": "",
	"abstract": "A method for service allocation among a plurality of entities requiring service allocation in a communications or computing environment comprising the steps of initializing a supply of services of one or more holding entities, endowing one or more bidding entities with an adjustably fixed amount of utility and a requirement for an amount of the supply of services, wherein the fixed amount of utility is a measure representative of the possibility of failure due to lack of resources, negotiating the supply of services of the holding entities, with each bidding entity bidding a selected amount of its fixed amount of utility, and redistribution of the supply of the holding entities among the bidding entities based on the negotiating.",
	"url": null,
	"owner": "Mitel Networks Corporation",
	"publication_number": "07330832",
	"publication_date": "2008-02-12",
	"application_number": "09611054",
	"application_date": "2000-07-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Magnified machine vision user interface",
	"summary": "",
	"abstract": "Improved user interface methods facilitate navigation and programming operations for a magnified machine vision inspection system. Large composite images are determined and stored. The composite images include workpiece features that are distributed beyond the limits of a single magnified field of view of the machine vision system. Despite their size, the composite images may be recalled and displayed in a user-friendly manner that approximates a smooth, real-time, zoom effect. The user interface may include controls that allow a user to easily define a set of workpiece features to be inspected using a composite image, and to easily position the machine vision system to view those workpiece features for the purpose of programming inspection operations for them.",
	"url": null,
	"owner": "Mitutoyo Corporation",
	"publication_number": "07394926",
	"publication_date": "2008-07-01",
	"application_number": "11241780",
	"application_date": "2005-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for automatically recovering video tools in a vision system",
	"summary": "",
	"abstract": "Methods and systems for automatically recovering a failed video inspection tool in a precision machine vision inspection system are described. A set of recovery instructions may be associated or merged with a video tool to allow the tool to automatically recover and proceed to provide an inspection result after an initial failure. The recovery instructions include operations that evaluate and modify feature inspection parameters that govern acquiring an image of a workpiece feature and inspecting the feature. The set of instructions may include an initial phase of recovery that adjusts image acquisition parameters. If adjusting image acquisition parameters does not result in proper tool operation, additional feature inspection parameters, such as the tool position, may be adjusted. The order in which the multiple feature inspection parameters and their related characteristics are considered may be predefined so as to most efficiently complete the automatic tool recovery process.",
	"url": null,
	"owner": "Mitutoyo Corporation",
	"publication_number": "07454053",
	"publication_date": "2008-11-18",
	"application_number": "10978227",
	"application_date": "2004-10-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for excluding extraneous features from inspection operations performed by a machine vision inspection system",
	"summary": "",
	"abstract": "Systems and methods are provided for excluding extraneous image features from inspection operations in a machine vision inspection system. The method identifies extraneous features that are close to image features to be inspected. No image modifications are performed on the u201cnon-excludedu201d image features to be inspected. A video tool region of interest provided by a user interface of the vision system can encompass both the feature to be inspected and the extraneous features, making the video tool easy to use. The extraneous feature excluding operations are concentrated in the region of interest. The user interface for the video tool may operate similarly whether there are extraneous features in the region of interest, or not. The invention is of particular use when inspecting flat panel display screen masks having occluded features that are to be inspected.",
	"url": null,
	"owner": "Mitutoyo Corporation",
	"publication_number": "07324682",
	"publication_date": "2008-01-29",
	"application_number": "10808948",
	"application_date": "2004-03-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interactive video tour system editor",
	"summary": "",
	"abstract": "A computer system, method, and apparatus for editing an interactive image video tour. The system may include a computer including an image editor for providing a visual program interface for editing an interactive image video tour; a database in communication with the computer containing data associated with a plurality of images comprising a portion of the interactive image video tour; and a viewer in communication with the computer for displaying the plurality of images. The method may include selecting a data file that includes image data and displaying an image associated therewith on a computer, the data file being stored in an image database containing a plurality of images for creating an interactive image video tour; and modifying one aspect of the image data contained in the selected data file. The apparatus may include a computer-readable medium containing instructions for controlling a computer system to perform a method for editing an interactive image video tour.",
	"url": null,
	"owner": "MJW Corporation Inc.",
	"publication_number": "07334190",
	"publication_date": "2008-02-19",
	"application_number": "10608761",
	"application_date": "2003-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for monitoring host to tool communications",
	"summary": "",
	"abstract": "An aspect of the present invention includes a method and device for listening to communications between processes and tools, recording report and report trigger definitions, matching reports from tools with the recorded definitions, and translating messages into a context-insensitive format. Other aspects of the present invention include dynamically enhancing tool status reports, migrating processes form tool control hosts to distributed processors, and screening requests for tool status information from hosts and distributed processors. More detailed descriptions of aspects of the present invention are described in the claims, specification and drawings.",
	"url": null,
	"owner": "MKS Instruments, Inc.",
	"publication_number": "07437204",
	"publication_date": "2008-10-14",
	"application_number": "11565209",
	"application_date": "2006-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic access scheduling memory controller",
	"summary": "",
	"abstract": "Bus transactions in a memory controller are scheduled by storing a set of configuration parameters that define a bus scheduling policy, generating values of a set of dynamic cost functions for each bus transaction, ordering the bus transactions in accordance with the bus scheduling policy to produce ordered bus transactions and generating a memory transaction that is derived from the ordered bus transactions. The memory controller includes one or more control registers for storing the set of configuration parameters, a bus interface operable to capture bus transactions from applications, a set of buffers operable to store the bus transactions and the set of dynamic cost functions and one or more registers operable to store the statistical data and a cost policy. The memory controller selects the order of the bus transactions based on an arbitration and selection policy and generates memory transactions to an external memory.",
	"url": null,
	"owner": "Motorola, Inc.",
	"publication_number": "07363406",
	"publication_date": "2008-04-22",
	"application_number": "11007704",
	"application_date": "2004-12-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic allocation of internal memory at runtime",
	"summary": "",
	"abstract": "The invention provides a method of allocating memory in a wireless communication system. The method includes the steps of loading an application into a wireless communication device, compiling at least a portion of the application into native instructions, determining a runtime sensitivity of the native instructions, determining availability of internal memory, and inserting at least a portion of the native instructions into the internal memory at runtime based on the determined availability of internal memory and the runtime sensitivity determination. An associated computer usable medium and a wireless communication device are disclosed.",
	"url": null,
	"owner": "Motorola, Inc.",
	"publication_number": "07328436",
	"publication_date": "2008-02-05",
	"application_number": "10662690",
	"application_date": "2003-09-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for transmission-based billing of applications",
	"summary": "",
	"abstract": "Computer- and network-based methods and systems for transmission-based billing are provided. Example embodiments provide a Packet-Based Billing System (u201cPBBSu201d), which enables application providers, such as carriers and content providers, to bill subscribers for the use of content on mobile subscriber devices, such as wireless devices, on a per-application, per-user basis based upon the extent of the usage. Embodiments of the present invention can also be used to bill subscribers for the use of content on a per-application, per-user basis for wired subscriber devices as well, using the same techniques. In operation, the PBBS provides modified content by inserting billing and tracking code into content returned to a requesting device. The modified content, when executed, tracks the amount of data sent and received between the content and a network and posts the accumulated data to a proxy/billing server according to business rules for an interval/frequency to post such data. The proxy/billing server stores the raw billing data and an accounting program retrieves the billing data to generate customer (call) data records. Business rules that specific different charges for different content or users can be incorporated into the system.",
	"url": null,
	"owner": "Motorola, Inc.",
	"publication_number": "07436816",
	"publication_date": "2008-10-14",
	"application_number": "10085981",
	"application_date": "2002-02-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Service framework with local proxy for representing remote services",
	"summary": "",
	"abstract": "In an information appliance system , a user device  comprises a client platform (, FIG. ) that includes a service framework (, FIG. ) to discover and connect with a variety of services, both remote and local, transient and persistent, and to disconnect from them when they are no longer of interest or become unavailable. The service framework  provides a standard, consistent, simplified way for services to make themselves available and for service-using entities to locate and connect with the services of interest to them. From the perspective of the client platform , all services, whether local or remote, are presented as local services to the application. Each remote service is represented as a local service through the use of a local proxy that insulates the service user from the complexities of communicating with a remote server. Various methods of operating a service framework are also described.",
	"url": null,
	"owner": "Motorola, Inc.",
	"publication_number": "07315885",
	"publication_date": "2008-01-01",
	"application_number": "10805878",
	"application_date": "2004-03-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for supporting production, management and delivery of media content for wireless devices",
	"summary": "",
	"abstract": "In a system for providing media content to a communication device, a device capabilities determination is made by a rules engine that compares content attributes with constraints on those attributes for a device. Metadata describing the content is derived and entered into a database. As the specifications of different devices are entered into the system, corresponding constraints are associated with the devices that tell the engine the valid range of values for the content attributes. The engine creates an available content library for each class of devices by excluding all instances of content that have attributes outside the range of values prescribed in the constraints. A similar rule set determines whether the content can be distributed through a particular delivery channel, based on the distribution channel capacity to support a media type. The subset of content that passes both the device capabilities tests and the distribution capability tests is viable for delivery to a device over a particular distribution channel.",
	"url": null,
	"owner": "Motricity, Inc.",
	"publication_number": "07461067",
	"publication_date": "2008-12-02",
	"application_number": "10243883",
	"application_date": "2002-09-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for controlled media sharing in a network",
	"summary": "",
	"abstract": "A method for controlling media sharing among a plurality of nodes in a network. The present method is comprised of availing to the network an instance of media content for sharing among the plurality of nodes by a source node communicatively coupled to the network. The present method further includes decrypting the instance of media content from an encryption local to the source node. The present method further includes encrypting the instance of media content into an intermediate encryption. The present method further includes transferring the instance of media content to a node while the instance of media content is in the intermediate encryption. The node is associated with the network. The decrypting and the encrypting and the transferring are in response to receiving a request for the instance of media content from the node.",
	"url": null,
	"owner": "Music Public Broadcasting, Inc.",
	"publication_number": "07426637",
	"publication_date": "2008-09-16",
	"application_number": "10443929",
	"application_date": "2003-05-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hybrid digital watermarking for video authentication",
	"summary": "",
	"abstract": "A hybrid digital watermarking system for video authentication includes an authenticated acquisition subsystem for digitally watermarking video data and a video management subsystem in signal communication with the authenticated acquisition subsystem for verifying the digitally watermarked video data, where the authenticated acquisition subsystem may include a watermarking device for applying each of an identity signature and a control signature to the video data within a hybrid digital watermark, and the hybrid digital watermark may achieve progressively varying robustness by means of error-correcting signature coding and/or rate-distortion guided bit embedding.",
	"url": null,
	"owner": "MY EZ Communications, LLC",
	"publication_number": "07409556",
	"publication_date": "2008-08-05",
	"application_number": "10717069",
	"application_date": "2003-11-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for providing fault-tolerant application cluster service",
	"summary": "",
	"abstract": "A method for providing an application cluster service (APCS) with fault-detection and failure-recovery capabilities. This method is composed of the steps of nodes clustering, invoking and detecting applications, fault-recovery of applications, detection of nodes, and node replacement. This method is applicable in a clustered environment to detect if a slave node is failed by sending a heartbeat periodically from a master node; and to detect if the master node still exists by checking if the master node stops sending the heartbeat (i.e. the master node may be failed).",
	"url": null,
	"owner": "National Cheng Kung University",
	"publication_number": "07457236",
	"publication_date": "2008-11-25",
	"application_number": "11106892",
	"application_date": "2005-04-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application programming interface for synchronizing multiple instrumentation devices",
	"summary": "",
	"abstract": "An application programming interface (API) for synchronizing multiple devices in a system. The API includes a plurality of functions invocable in a program to synchronize multiple devices, where each function is executable to perform a respective functionality related to synchronizing the devices, and at least one of the functions is executable to access a plurality of instrument drivers corresponding respectively to the plurality of devices to synchronize the plurality of devices. In synchronizing the plurality of devices, the functions determine a trigger clock signal for each of the plurality of devices, and synchronize the plurality of devices based on the determined trigger clock signals. The API also includes a plurality of attributes corresponding to respective properties of the system related to synchronization of the devices, including one or more trigger attributes and/or one or more trigger clock attributes for each of the devices. The API representations may be text-based and/or graphical.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07315791",
	"publication_date": "2008-01-01",
	"application_number": "10781447",
	"application_date": "2004-02-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic generation of programs with GUI controls for interactively setting or viewing values",
	"summary": "",
	"abstract": "A system and method for automatically (i.e., programmatically) generating a computer program based on program information, such as a prototype, wherein the program includes a graphical user interface (GUI) for specifying input values to or viewing output values from the program. The prototype may comprise a series of functional operations. One or more input and/or output parameters may be associated with each functional operation. In response to a user's request for a program implementing the prototype to be automatically generated, a list of parameters associated with the operations included in the prototype may be displayed. The user may select from the displayed list the input parameters which are desired to be interactively changeable. In response, the program may be generated such that the program has a graphical user interface including a user interface control associated with each selected input parameter.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07376904",
	"publication_date": "2008-05-20",
	"application_number": "09726779",
	"application_date": "2000-11-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Program-development environment for use in generating application programs",
	"summary": "",
	"abstract": "The present invention relates to a program-development environment that allows developers to seamlessly switch between a visual programming paradigm and a textual programming paradigm, thereby permitting developers to choose the paradigm best suited for creating each aspect of the desired program. A graphical user interface (GUI) may be generated by the program-development environment, and displayed on the screen of a computer system. The GUI has several elements including a form window and a designer window. The form window is configured to receive one or more control objects selected by the developer, and the designer window is configured to display a symbolic representation of those control objects placed in the form window. According to the invention, these symbols can be linked together by the developer in the form of a data flow or block diagram that logically represents the flow of data and control information into, out of, and between the selected control objects, and that corresponds to the application program being generated. In response to such graphical inputs, the program-development environment generates event handler procedures or code for use with the application program being developed. The program-development environment additionally affords the developer, preferably through the use of a selectively displayable code window, the ability to provide or modify event handlers textually.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07340721",
	"publication_date": "2008-03-04",
	"application_number": "10759918",
	"application_date": "2004-01-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Programmable hardware element with cartridge controllers for controlling modular cartridges that convey interface information",
	"summary": "",
	"abstract": "System and method for measurement, DAQ, and control operations which uses small form-factor measurement modules or cartridges with a re-configurable carrier unit, sensors, and a computer system to provide modular, efficient, cost-effective measurement solutions. The measurement module includes measurement circuitry, e.g., signal conditioner and/or signal conversion circuitry, and interface circuitry for communicating with the carrier unit. The module communicates interface information to the carrier unit, which informs the computer system how to program or configure a functional unit on the carrier unit to implement the communicated interface, or sends the information directly to the computer system. The computer system programs the carrier unit with the interface, and the programmed carrier unit and measurement module together function as a DAQ, measurement, and/or control device. The carrier unit may receive multiple cartridges, each having a respective interface protocol, where the carrier unit is configurable to support the respective protocols sequentially and/or in parallel.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07366631",
	"publication_date": "2008-04-29",
	"application_number": "11759079",
	"application_date": "2007-06-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for programmatically generating a second graphical program based on a first graphical program",
	"summary": "",
	"abstract": "System and method for programmatically generating a second graphical program associated with a second programming development environment based on a first graphical program associated with a first programming development environment. The second graphical program may be generated programmatically, without relying on user input, or may prompt for user input to determine various options to use in generating the second graphical program. The second graphical program may implement the functionality of, or a portion of the functionality of, the first graphical program. The method preferably generates the second graphical program such that the second programming development environment is operable to treat the second graphical program identically to a graphical program interactively developed by a user using the second programming development environment. Thus, once the second graphical program has been generated, the user may use the second programming development environment to edit the second graphical program, execute the second graphical program, etc.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07340684",
	"publication_date": "2008-03-04",
	"application_number": "10978995",
	"application_date": "2004-11-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Test executive system with automatic expression logging and parameter logging",
	"summary": "",
	"abstract": "A test executive sequence may be created by including a plurality of test executive steps in the test executive sequence in response to user input to a sequence editor. At least a subset of the test executive steps in the test executive sequence may be configured to call user-supplied code modules. In one embodiment, one or more expressions may be configured for one or more steps in the test executive sequence, where the one or more expressions evaluate to result values to be logged when the step is executed during execution of the test executive sequence. In another embodiment, one or more parameters of one or more user-supplied code modules called by steps in the test executive sequence may be configured to be logged when the test executive sequence is executed.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07451358",
	"publication_date": "2008-11-11",
	"application_number": "11101326",
	"application_date": "2005-04-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for asynchronously clocking the processing of a wireless communication signal by multiple processors",
	"summary": "",
	"abstract": "The invention is directed to an apparatus, method and system for providing reduced power consumption, fast processing of digitized communication signals and relatively easy reconfiguration for different applications, such as communication protocols/standards. The invention recognizes that the processing of signals associated with different types of communication standards can be recharacterized as deterministic data flows. Also, for each deterministic data flow, several of the same categories of computation are performed in substantially the same manner, albeit in a different order or somewhat differently, that is unique to a particular application. Based on this recharacterization, the invention divides the processing of the deterministic data flow for a communication signal among several Class processors that are separately configurable to optimize their particular category/class of computation in the asynchronous processing of the signal.",
	"url": null,
	"owner": "National Semiconductor Corporation",
	"publication_number": "07380151",
	"publication_date": "2008-05-27",
	"application_number": "10318282",
	"application_date": "2002-12-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for processing a deterministic data flow associated with a wireless communication signal",
	"summary": "",
	"abstract": "The invention is directed to an apparatus, method and system for providing reduced power consumption, fast processing of digitized communication signals and relatively easy reconfiguration for different applications, such as communication protocols/standards. The invention recognizes that the processing of signals associated with different types of communication standards can be recharacterized as deterministic data flows. Also, for each deterministic data flow, several of the same categories of computation are performed in substantially the same manner, albeit in a different order or somewhat differently, that is unique to a particular application. Based on this recharacterization, the invention divides the processing of the deterministic data flow for a communication signal among several Class processors that are separately configurable to optimize their particular category/class of computation in the processing of the signal.",
	"url": null,
	"owner": "National Semiconductor Corporation",
	"publication_number": "07373121",
	"publication_date": "2008-05-13",
	"application_number": "11378674",
	"application_date": "2006-03-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for content profiling and activation",
	"summary": "",
	"abstract": "The present disclosed system is directed toward a communication and management system that dynamically targets network devices for content deployment, such as application programs, device drivers, configuration files, and registry subhives. Moreover, the present system targets users of network devices for promotions, such as advertisements offered by Internet e-commerce sites. Promotions are generally icons or graphic images with links to host web servers overlaying a video display, but also includes audio and video clips or data streams. Network devices and their users are targeted through user profiles. User profiles are created when network devices register with the system server and are continually updated with information provided by user activity and event logs that are periodically uploaded from each device. A scalable messaging system is provided for data transmission between the system server and among the network devices such that it is neutral as to the specific hardware platforms on which it is implemented.",
	"url": null,
	"owner": "Navic Systems, Inc.",
	"publication_number": "07330824",
	"publication_date": "2008-02-12",
	"application_number": "09519245",
	"application_date": "2000-03-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing guaranteed delivery of messages to embedded devices over a data network",
	"summary": "",
	"abstract": "The present disclosed system is directed toward a communication and management system that dynamically targets network devices for content deployment, such as application programs, device drivers, configuration files, and registry subhives. Moreover, the present system targets users of network devices for promotions, such as advertisements offered by Internet e-commerce sites. Promotions are generally icons or graphic images with links to host web servers overlaying a video display, but also includes audio and video clips or data streams. Network devices and their users are targeted through user profiles. User profiles are created when network devices register with the system server and are continually updated with information provided by user activity and event logs that are periodically uploaded from each device. A scalable messaging system provides for data transmission between the system server and among the network devices such that it is neutral as to the specific hardware platforms on which it is implemented.",
	"url": null,
	"owner": "Navic Systems, Inc.",
	"publication_number": "07392281",
	"publication_date": "2008-06-24",
	"application_number": "09519221",
	"application_date": "2000-03-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for dynamic information exchange",
	"summary": "",
	"abstract": "The communication bridge enables trading partner customers to mass customize their interactions with their affiliated trading partners by controlling workflow and data presentation. A method and system allows the integration of standard and proprietary content, such as data and u201clook-and-feelu201d elements, from trading partners to be presented via a standard interface for the purpose of conducting mass customized interactions (transactions, communications). There is a high degree of variability in screen and workflow presentation. A particular Application Programming Interface (API) facilitates the dynamic exchange of information between disparate trading partners and end users.",
	"url": null,
	"owner": "NaviMedix, Inc.",
	"publication_number": "07325076",
	"publication_date": "2008-01-29",
	"application_number": "09711618",
	"application_date": "2000-11-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method of tracking bill payment methods",
	"summary": "",
	"abstract": "A system and method of tracking bill payment methods which stores details about payment to develop promotions. The system includes a touch screen, keyboard, or other device for recording customer identification information. A display displays payment method options based upon the customer identification information. A touch screen or keyboard for records bill payer selection of one of the payment options. A cash acceptor, check reader, or card reader receives payment in accordance with the one payment option. Finally, a processor determines predetermined details about the payment and stores the details.",
	"url": null,
	"owner": "NCR Corporation",
	"publication_number": "07437324",
	"publication_date": "2008-10-14",
	"application_number": "09950178",
	"application_date": "2001-09-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Public wireless LAN connection servicing device and method",
	"summary": "",
	"abstract": "A utilization ticket is provided with a wireless IC (Integrated circuit) interface section for performing bi-directional communication with a portable terminal and a first communication program transmission section, a ticket issuing device is connected to an authentication server via a communication network and provided with a communication program and a first utilization ticket issuing section, the portable terminal is provided with a wireless IC interface section for performing bi-directional communication with the utilization ticket, a wireless LAN (Local Area Network) interface section for performing bi-directional communication with an access point, a first terminal information transmission section, and a communication-related settings making section, and the access point is provided with a wireless LAN interface section for performing bi-directional communication with the portable terminal, an authentication requesting section, and an authentication result information transmitting section.",
	"url": null,
	"owner": "NEC Corporation",
	"publication_number": "07352734",
	"publication_date": "2008-04-01",
	"application_number": "11081637",
	"application_date": "2005-03-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Wireless file transmission",
	"summary": "",
	"abstract": "A computer system which includes one or more wireless interface devices that are adapted to communicate with a remote host over a radio link. Each of the wireless interface devices is a pen-based device which includes an ink field in which pen events are translated into pen data packets and transmitted to the remote host over the radio link. Local inking is provided at the wireless interface device in order to maintain the pen paradigm in essentially real time.",
	"url": null,
	"owner": "NEC Corporation",
	"publication_number": "07423637",
	"publication_date": "2008-09-09",
	"application_number": "10199475",
	"application_date": "2002-07-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for diagnosing connectivity problems from a network management station",
	"summary": "",
	"abstract": "A network management station manages multiple devices on a network, which may include storage appliances, caching appliances, and other devices. The network management station includes software that assists a network administrator by diagnosing a connectivity problem relating to a device on the network. To diagnose the connectivity problem, the software attempts to communicate with the device from the management station by separately using each of multiple communication protocols, including one or more device type-specific protocols. The software identifies possible causes for the connectivity problem based on the results of using the different protocols. The software generates a graphical user interface indicating the individual results of attempting to communicate with the device using the different protocols and the possible causes for the connectivity problem. Based on the information presented, the administrator can more effectively troubleshoot the connectivity problem.",
	"url": null,
	"owner": "NetApp, Inc.",
	"publication_number": "07457866",
	"publication_date": "2008-11-25",
	"application_number": "10396935",
	"application_date": "2003-03-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Authentication and authorization mapping for a computer network",
	"summary": "",
	"abstract": "A method and apparatus for a network-wide authentication and authorization mapping system for a network is provided. The global authentication and authorization mapping system enables a seamless transition from one web-based application in the network configuration to another web-based application in the network configuration, including a single sign-on capability for users. There are no localized security enforcement processes required to further authenticate a user.",
	"url": null,
	"owner": "Netegrity, Inc.",
	"publication_number": "07350229",
	"publication_date": "2008-03-25",
	"application_number": "09972226",
	"application_date": "2001-10-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Optimized database appliance",
	"summary": "",
	"abstract": "A system from processing database queries allows for cost and locale based distribution for execution of database queries. The database queries are executed on execution engines that provide flexible configuration and overlapping functionality. The system reduces various costs, including elapsed time, required to perform database queries. The system provides processing of a database query using a database catalog comprising database table locality information, record locality information and execution engine information. A query optimizer receives the query and accesses the database catalog to create a query execution plan comprising locality-based database operations. A central database operation processor providing a first execution engine executes the query execution plan by performing at least a portion of the locality-based database operations and distributing at least a portion of the locality-based database operations as a subplan. A second database operation processor providing a second execution engine executes the subplan received from the central database operation processor. At least one of the database operations can be executed on either the first execution engine or the second execution engine. A storage unit stores at least a portion of database tables and records. A data communications network connects the central database processor to the second database processor.",
	"url": null,
	"owner": "Netezza Corporation",
	"publication_number": "07464106",
	"publication_date": "2008-12-09",
	"application_number": "11332704",
	"application_date": "2006-01-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Architecture for network search engines with fixed latency, high capacity, and high throughput",
	"summary": "",
	"abstract": "An improved architecture for a network search engine (NSE) is disclosed herein as including an interface manager, one or more levels of a splitting engine, an array of data processing units (DPUs), and a cascade block. A method for using the improved NSE architecture to form an efficient pointer entry database is also provided. As described herein, the improved NSE architecture simultaneously provides high speed, search throughput, update rate and capacity, coupled with low power and fixed latency searches for all search key widths.",
	"url": null,
	"owner": "NetLogic Microsystems, Inc.",
	"publication_number": "07437354",
	"publication_date": "2008-10-14",
	"application_number": "10841607",
	"application_date": "2004-05-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data placement technique for striping data containers across volumes of a storage system cluster",
	"summary": "",
	"abstract": "A technique places content, such as data, of one or more data containers on volumes of a striped volume set (SVS). The placement of data across the volumes of the SVS allows specification of a deterministic pattern of fixed length. That is, the pattern determines a placement of data of a data container that is striped among the volumes of the SVS. The placement pattern is such that the stripes are distributed exactly or nearly equally among the volumes and that, within any local span of a small multiple of the number of volumes, the stripes are distributed nearly equally among the volumes. The placement pattern is also substantially similar for a plurality of SVSs having different numbers of volumes.",
	"url": null,
	"owner": "Network Appliance, Inc.",
	"publication_number": "07366837",
	"publication_date": "2008-04-29",
	"application_number": "11118298",
	"application_date": "2005-04-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "File folding technique",
	"summary": "",
	"abstract": "A method for reducing duplicate data of an active file system, where the data is stored on a storage device of a storage system, is disclosed. A persistent image of the active file system is generated at a first point in time. At a later time, a sequence of steps to compare the active file system with the persistent image is initiated. Then, if a block of data of the active file system is identical to the data in the persistent image, the active file system is directed to refer to the persistent image for data of the file. Alternatively, if the block of data of the active file system is not identical to the data in the persistent image, the active file system is directed to refer to the data of the active file system. A file folding command may be issued to start the comparison.",
	"url": null,
	"owner": "Network Appliance, Inc.",
	"publication_number": "07444361",
	"publication_date": "2008-10-28",
	"application_number": "11393543",
	"application_date": "2006-03-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Lightweight coherency control protocol for clustered storage system",
	"summary": "",
	"abstract": "A lightweight coherency control protocol ensures consistency of data containers, such as a file, and associated data buffers stored on one or more volumes served by a plurality of nodes, e.g., storage systems, connected as a cluster. Each data buffer is associated with a current cache sequence number comprising a load generation value and an update count value. The load generation value is incremented every time an inode of a file is loaded into a memory of the storage system. Once the inode is loaded and its load generation value is set, then the appropriate buffer of a buffer tree for the file is loaded into the memory. The update count value is incremented each time the buffer is updated with a write request/operation. Therefore, each buffer loaded into memory is tagged with the load generation value and an update count from the time that buffer is loaded.",
	"url": null,
	"owner": "Network Appliance, Inc.",
	"publication_number": "07376796",
	"publication_date": "2008-05-20",
	"application_number": "11264601",
	"application_date": "2005-11-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for single pass volume scanning for multiple destination mirroring",
	"summary": "",
	"abstract": "A mirroring application running on a primary server in a multiple destination mirroring environment is provided. The mirroring application configures a scanner with snapshots that are registered. The scanner calculates a logical age for each snapshot. The scanner scans a flexible volume once for data blocks that are newer than a predetermined snapshot. The scanner tags each such block with a logical age that is equivalent to the oldest snapshot that refers to that block. The scanner loads the tagged blocks in a queue. A sender module associated with each destination in the mirroring environment inspects blocks in the queue and retrieves only those blocks younger than a destination reference snapshot. The sender sends those blocks to the destination and filters out older blocks, thus bringing the destination mirror up to date with the current active file system.",
	"url": null,
	"owner": "Network Appliance, Inc.",
	"publication_number": "07325111",
	"publication_date": "2008-01-29",
	"application_number": "11264837",
	"application_date": "2005-11-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mirror split brain avoidance",
	"summary": "",
	"abstract": "A data storage system has two computers. Each computer is assigned to a set of data. Two copies of each set of data are maintained. A first copy is stored on a first set of disks and a second copy is stored on a second set of disks. Each time that a data is written by a computer, a label is written to each set of disks, the label having fields for a status of each computer, a first ordinal which is increased each time that a new data is written, and a time stamp giving a time at which the last write was performed. After failure of a computer, a processor determines, in response to reading the labels of the first set of disks and the second set of disks, the most up to date copy of the data assigned to the failed computer.",
	"url": null,
	"owner": "Network Appliance, Inc.",
	"publication_number": "07392425",
	"publication_date": "2008-06-24",
	"application_number": "11485544",
	"application_date": "2006-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for efficiently guaranteeing data consistency to clients of a storage system cluster",
	"summary": "",
	"abstract": "A system and method efficiently guarantees data consistency to clients for one or more data containers stored on a plurality of volumes configured as a striped volume set (SVS) and served by a plurality of nodes connected as a cluster. Data consistency guarantees of data containers stored on the SVS is generally provided by delegating to data volumes (DVs) sufficient authority to autonomously service input/output (I/O) requests directed to the containers using attributes, such as timestamps, of the containers. Specifically, a DV is only allowed to service I/O requests, e.g., read and write operations, to a data container, such as a file, if it has a valid ticket book for the file. A DV requests and is granted the ticket book from a container attribute volume (CAV) on a per-file basis.",
	"url": null,
	"owner": "Network Appliance, Inc.",
	"publication_number": "07409497",
	"publication_date": "2008-08-05",
	"application_number": "11261007",
	"application_date": "2005-10-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for multiplexing channels over multiple connections in a storage system cluster",
	"summary": "",
	"abstract": "A system and method multiplexes channels over multiple connections between one or more nodes. Each node includes a cluster fabric interface module adapted to implement a novel network protocol that enables intra-cluster communication among the nodes. The network protocol is a multi-layered protocol that integrates a session infrastructure and an application operation set into a session layer. The network protocol is illustratively a request/response protocol wherein a node (requester) receiving a data access request from a client redirects that request to another node (responder) that services the request and, upon completion, returns a response.",
	"url": null,
	"owner": "Network Appliance, Inc.",
	"publication_number": "07443872",
	"publication_date": "2008-10-28",
	"application_number": "11118466",
	"application_date": "2005-04-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for performing version negotiation of a network protocol and associated interfaces",
	"summary": "",
	"abstract": "A system and method efficiently performs version negotiation of a network protocol executing on storage systems or nodes of a cluster. A session layer of a network protocol executing on the nodes manages the creation and termination of sessions between a pair of nodes in the cluster. Notably, session version negotiation occurs during session creation and, as such, is accomplished using a single request/response u201ccreate sessionu201d exchange. Session version negotiation is effected using contents of protocol tag and version fields of headers associated with the request and response messages exchanged between the nodes. The version field contains a proposed version of the protocol for use by the nodes in the session. The protocol tag field contains values or tags that define the context in which the request and response messages are used during the create session exchange. Interface version negotiation is performed after session version negotiation. The session layer version negotiation includes negotiation of the version of a small set of operations. One of these operations can be used to subsequently negotiate the versions of many additional sets of operations, even though these operations co-exist at the same level of encapsulation in the protocol.",
	"url": null,
	"owner": "Network Appliance, Inc.",
	"publication_number": "07466659",
	"publication_date": "2008-12-16",
	"application_number": "11119119",
	"application_date": "2005-04-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for record retention date in a write once read many storage system",
	"summary": "",
	"abstract": "This invention provides a specified retention date within a data set that is locked against deletion or modification within a WORM storage implementation. This retention date scheme does not utilize any proprietary application program interfaces (APIs) or protocols, but rather, employs native functionality within conventional file (or other data containers, data sets or block-based logical unit numbers) properties available in commonly used operating systems. In an illustrative embodiment, the retention date/time is calculated by querying the file's last-modified time prior to commit, adding the retention period to this value and thereby deriving a retention date after which the file can be released from WORM. Prior to commit, the computed retention date is stored in the file's u201clast access timeu201d property/attribute field, or another metadata field that remains permanently associated with the file and that, in being used for retention date, does not interfere with file management in a WORM state. Since this field is not utilized in a WORM context, it can be adapted to store this date. Once stored, the retention date in this field is locked against modification. Where extension (never reduction) of a retention period is desired, the last access time field be updated, wherein the new retention period is added to the existing last access time value to derive a new, later retention date for the file. Upon expiry of the retention date, the system allows deletion of the expired WORM file/data set.",
	"url": null,
	"owner": "Network Appliance, Inc.",
	"publication_number": "07366834",
	"publication_date": "2008-04-29",
	"application_number": "11653701",
	"application_date": "2007-01-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for supporting file and block access to storage object on a storage appliance",
	"summary": "",
	"abstract": "A technique enables application data stored on storage devices of a storage system to be accessible by a client as either a file or logical unit number (lun). The storage system is illustratively embodied as a multi-protocol storage appliance having a storage operating system that implements a file system. The file system logically organizes the application data as a virtual disk (vdisk) comprising a plurality of inodes including a prefix stream inode, a lun inode (storing the application data) and a suffix stream inode. The prefix and suffix stream inodes allow the vdisk to be shared over a block-based protocol or a file-based protocol by enabling apportionment of client operating system dependent storage device contents from application data contents of the vdisk.",
	"url": null,
	"owner": "Network Appliance, Inc.",
	"publication_number": "07383378",
	"publication_date": "2008-06-03",
	"application_number": "10412051",
	"application_date": "2003-04-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Technique for coherent suspension of I/O operations in a RAID subsystem",
	"summary": "",
	"abstract": "A technique coherently suspends input/output (I/O) operations in a RAID subsystem of a storage system. A configuration tree of the RAID subsystem has a plurality of objects representing a logical configuration of storage devices coupled to the system. According to the technique, a u201cfreezeu201d condition may be imposed on an object of the configuration tree to suspend I/O operations directed to that object. In order to freeze, I/O operations underway (u201cin flightu201d) in the RAID subsystem and directed to the object need to complete sufficiently so as to reach a recoverable state in the event the subsystem subsequently fails prior to an I/O restart procedure. Once a freeze condition has been imposed, new I/O requests directed to the object are inserted onto a freeze list of pending requests at the RAID subsystem and are blocked from processing until the object is u201cunfrozenu201d (i.e., the freeze condition is lifted).",
	"url": null,
	"owner": "Network Appliance, Inc.",
	"publication_number": "07328364",
	"publication_date": "2008-02-05",
	"application_number": "10394917",
	"application_date": "2003-03-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Writable virtual disk of read-only snapshot file objects",
	"summary": "",
	"abstract": "A technique enables creation and use of a writable, read-only snapshot of an active file system operating on a storage system, such as a multi-protocol storage appliance. The writable, read-only snapshot comprises a read-only u201cimageu201d (file) residing in a snapshot and a writable virtual disk (vdisk) residing in the active file system. The writable vdisk is a u201cshadowu201d image of the snapshot file image and, as such, includes an attribute that specifies the snapshot file as a backing store.",
	"url": null,
	"owner": "Network Appliance, Inc.",
	"publication_number": "07457982",
	"publication_date": "2008-11-25",
	"application_number": "10412478",
	"application_date": "2003-04-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Zero copy write datapath",
	"summary": "",
	"abstract": "A technique enhances a write data path within a storage operating system executing on a storage system. As used herein, the write data path defines program logic used by a file system of the storage operating system to process write requests directed to data served by the file system. The technique enhances the write data path of the storage system by providing a u201czero copyu201d write data path embodied as a function of the storage operating system that eliminates a copy operation for a write request received at the storage system. The eliminated operation is a data copy operation from a list of input buffers to buffers used by the file system.",
	"url": null,
	"owner": "Network Appliance, Inc.",
	"publication_number": "07330862",
	"publication_date": "2008-02-12",
	"application_number": "10423381",
	"application_date": "2003-04-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program product for analyzing data from network-based structured message stream",
	"summary": "",
	"abstract": "A system, method and computer program product for analyzing data from a message stream are disclosed. Data in an structured format is captured from a message stream. The captured data is processed to conform to a data model format so that one or more events can be identified from an analysis of the processed data. Once an event has been identified, the message stream is monitored to detect the identified event. When detected, the event is exported via a network.",
	"url": null,
	"owner": "Network Resonance, Inc.",
	"publication_number": "07464154",
	"publication_date": "2008-12-09",
	"application_number": "09861281",
	"application_date": "2001-05-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program product for providing an efficient trading market",
	"summary": "",
	"abstract": "A system, method and computer program product for providing a trading exchange are disclosed. A request for conducting trade of a security is received from a user. The security associated with requested trade is evaluated to generate a derivative security. A trade is then executed for the user using the derivative security. Information relating to the executed trade is captured utilizing a network so that the captured information can be utilized to adjust an account of the user in accordance with the executed trade.",
	"url": null,
	"owner": "Network Resonance, Inc.",
	"publication_number": "07451110",
	"publication_date": "2008-11-11",
	"application_number": "09861080",
	"application_date": "2001-05-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Technique for managing addition of disks to a volume of a storage system",
	"summary": "",
	"abstract": "A technique manages the addition of disks to a volume of a storage system. A disk addition procedure is encapsulated into a DISKADD object conforming to a configuration management framework used to implement a RAID subsystem of the storage system. The DISKADD object is responsible for determining a set of available disks required to satisfy a disk addition request issued by an operator through a user interface of a storage operating system executing on the storage system. Furthermore, the DISKADD object is responsible for monitoring the state of the disks, including preparation/initialization of the disks (e.g., disk zeroing) and possible disk failures, as well as placing those disks into RAID groups of the volume once preparation completes. Persistent storage of the state of a pending disk addition is then accomplished using an implementation of the configuration management framework.",
	"url": null,
	"owner": "Networks Appliance, Inc.",
	"publication_number": "07424637",
	"publication_date": "2008-09-09",
	"application_number": "10394810",
	"application_date": "2003-03-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for the use of information in an auxiliary data system in relation to automated testing of graphical user interface based applications",
	"summary": "",
	"abstract": "A system and method for using information in an auxiliary data system to enhance the capability of automated testing of graphical user interface (GUI) based applications. Embodiments of the invention establish a method to map auxiliary data to automated tests of the GUI in order to map out all tests that need to be created, which tests need to be changed as this auxiliary data changes, and how each automated test needs to be updated to handle these changes.",
	"url": null,
	"owner": "Newmerix Corpu00a3",
	"publication_number": "07421683",
	"publication_date": "2008-09-02",
	"application_number": "10766613",
	"application_date": "2004-01-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Fibonacci heap for use with internet routing protocols",
	"summary": "",
	"abstract": "In accordance with an aspect of the invention, one or more shortest paths is determined through a portion of a computer network, from a source vertex to one or more destination vertices according to a link-state protocol. A graph representation of the network portion is processed. The graph representation includes nodes and edges representing the vertices and connections therebetween. The processing includes operating on the graph representation according to a Djkstra-like algorithm. A subset of the Djkstra-like algorithm processing includes candidate list processing, to maintain and operate upon a candidate list (OSPF, IS-IS) of nodes that have been visited in the Djkstra-like algorithm processing. Finally, the candidate list processing is optimized relative to standard Djkstra algorithm processing for the link-state protocol. The optimized candidate list processing may be, for example, such that the candidate list processing operates on a candidate list of nodes that is stored in a generic format, as a Fibonacci heap of Fibonacci nodes in a generic format that is independent of the link-state protocol. Furthermore, the candidate list processing may be accessible via a generic application programming interface (API). As a result, the candidate list processing is useable for various link-state protocols, including various link-state routing protocols such as OSPF and IS-IS.",
	"url": null,
	"owner": "NextHop Technologies, Inc.",
	"publication_number": "07343424",
	"publication_date": "2008-03-11",
	"application_number": "10506596",
	"application_date": "2003-06-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Video game distribution network",
	"summary": "",
	"abstract": "A video game distribution network for use in airlines, trains, hotels, cruise ships, set top boxes, cable television systems, satellite and other wireless systems or other communications systems, distributes special purpose game binary image files to general purpose computing/display devices. Software emulators running on the general purpose computing/display devices model the game source platform and interpret and/or compile the game files to provide interactive video game play. Software emulators for emulating a handheld video game platform such as GAME BOYu00ae, GAME BOY COLORu00ae and/or GAME BOY ADVANCEu00ae on a low-capability target platform (e.g., a seat-back display for airline or train use, a personal digital assistant, a cell phone) may provide any number of features and optimizations to provide high quality graphics and sound that nearly duplicates the game playing experience on the native platform.",
	"url": null,
	"owner": "Nintendo Co., Ltd.",
	"publication_number": "07338376",
	"publication_date": "2008-03-04",
	"application_number": "10989459",
	"application_date": "2004-11-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Bandwidth adaptation",
	"summary": "",
	"abstract": "The invention relates to a method for packet switched streaming of media, such as video and/or audio, from a streaming server () to a mobile client device () over an air-interface. The method comprises noticing a change in a downlink air-interface bandwidth, sending from the mobile client device () to the streaming server () a request for adapting streaming server transmission bit rate, receiving the request at the streaming server () and adapting the streaming server transmission bit rate in accordance with the request. According to the method, the request indicates to the streaming server () a current downlink air-interface bandwidth and that said adapting of the streaming server transmission bit rate is performed in accordance with said current downlink air-interface bandwidth.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07346007",
	"publication_date": "2008-03-18",
	"application_number": "10369098",
	"application_date": "2003-02-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Communication system and method providing a mode selection procedure",
	"summary": "",
	"abstract": "A method and a communication system which includes a first network element, e.g. portable terminal, connectable to a second network element. One of selectable modes is used for communication. A network element is adapted to perform a mode selection procedure for selecting the same mode for bidirectional communication between the network elements. The mode selection ensures the use of one and the same mode in uplink and downlink direction and thus enables e.g. IP telephony in UMTS using SIP protocol. The invention provides for facilitating a VoIP communication session by way of a radio link with a mobile station. The mobile station forms a QoS (Quality of Service) information element for communication to a radio access network portion. The QoS information element is indicating whether to remove packet header information of the data packets to be communicated upon the radio link pursuant to the communication session.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07394807",
	"publication_date": "2008-07-01",
	"application_number": "10344573",
	"application_date": "2001-08-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Implementation of multiple simultaneous calls in a mobile communication system",
	"summary": "",
	"abstract": "In an implementation of multiple simultaneous calls for a mobile station in a mobile communication system, a common traffic channel is allocated to several simultaneous calls of the mobile station, so that the calls share capacity of the common channel. Logical links are established for each call inside a common radio link protocol or link access control protocol, established over the common traffic channel between the mobile station and an interworking function. The common traffic channel is allocated when the first call or calls are set up, and the capacity of the traffic channel is adjusted dynamically during the calls. The common traffic channel capacity is increased or the allocated capacity is reallocated when a new call is added to the traffic channel. Correspondingly, the capacity is decreased or reallocated when a call is cleared from the common traffic channel.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07466677",
	"publication_date": "2008-12-16",
	"application_number": "11180647",
	"application_date": "2005-07-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for keyhole video frame transmission during a communication session",
	"summary": "",
	"abstract": "A method and apparatus allows keyhole frame images to be transmitted to a receiving terminal during a communication session. The keyhole frame is movable and resizable throughout the display of the hosting terminal, whereby the image captured by the keyhole frame is transmitted to the receiving terminal during the communication session. The transmitted image may be combined at the receiving terminal with voice or other transmissions from other independent sources to form an integrated communication session. Modifications to the image may be directed by the receiving terminal either through voice commands sent to the hosting terminal from the receiving terminal, or alternatively through cursor/pointing device commands actuated from the receiving terminal itself. All modifications effected on the keyhole frame image at the hosting terminal are viewed in real time at the receiving terminal.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07398316",
	"publication_date": "2008-07-08",
	"application_number": "10789448",
	"application_date": "2004-02-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for reducing synchronization delay in packet switched voice terminals using speech decoder modification",
	"summary": "",
	"abstract": "A device is disclosed that makes packetized and encoded speech data audible to a listener, as is a method for operating the device. The device includes a unit for generating a synchronization request for reducing an amount of synchronization delay, and further includes a speech decoder that is responsive to the synchronization delay adjustment request for executing a time-warping operation for one of lengthening or shortening a duration of a speech frame. In one embodiment the speech decoder comprises a code excited linear prediction (CELP) speech decoder, and the CELP decoder time-warping operation is applied to a reconstructed excitation signal u(k) to derive a time-warped reconstructed signal u(k). The time-warped reconstructed signal u(k) is input to a Linear Predictor (LP) synthesis filter to derive a CELP decoder time-warped output signal y(k). In another embodiment the speech decoder comprises a parametric speech decoder, and where an adaptation of the frame length N in the parametric speech decoder results in the use of a modified frame length N.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07394833",
	"publication_date": "2008-07-01",
	"application_number": "10364588",
	"application_date": "2003-02-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for reducing synchronization delay in packet-based voice terminals by resynchronizing during talk spurts",
	"summary": "",
	"abstract": "Circuitry, embodied in a media subsystem (A), reproduces a speech or other type of audio signal, and is operable when playing back audio data for reducing synchronization delay. A method operates by, when a frame containing audio data is sent to a decoder (), measuring the synchronization delay; determining by how much the synchronization delay should be adjusted; and adjusting the synchronization delay in a content-aware manner by adding or removing one or more audio samples in a selected current frame or in a selected subsequent frame so as not to significantly degrade the quality of the played back audio data. When the synchronization delay is adjusted by more than one audio sample, the adjustment can be made by all of the determined audio samples in one adjustment, or the adjustment is made by less than all of the determined audio samples by a plurality of adjustments. The step of adjusting selects, if possible, an unvoiced frame and discriminates against a transient frame. The step of determining includes measuring an average amount of time that a frame resides in a jitter buffer (), and adjusting the synchronization delay so that the average duration approaches a desired jitter buffer residency duration.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07319703",
	"publication_date": "2008-01-15",
	"application_number": "10189068",
	"application_date": "2002-07-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for location based group formation",
	"summary": "",
	"abstract": "In one embodiment, a method and system allows organization terminal () to define a group session based upon location and other criteria associated with participating terminals (). Location criteria may include cell definition (), group definition (), and/or sub-group definition (). Various components (-) may be utilized to perform application/location/management functions to determine the qualifications of each terminal of terminal group () to join the group. Once terminals () have been pre-qualified based upon their location and other group criteria, terminals () may accept an invitation to join the location based group session and begin application sharing, group chat sessions, and downloading as required to facilitate the location based group session.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07359724",
	"publication_date": "2008-04-15",
	"application_number": "10717992",
	"application_date": "2003-11-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of implementing secure access",
	"summary": "",
	"abstract": "A mobile or other device connects to a server via a publicly accessible network such as the Internet. After installation upon the device, a virtual private network (VPN) client connects to the server and downloads a VPN profile. In one embodiment the device creates public/private key pairs and requests enrollment of a digital certificate. In another embodiment a digital certificate and public/private key pairs are provided. The device also receives a digital certificate from the server and verifies the server certificate by requesting the user to supply a portion of a fingerprint for the certificate. The invention further includes an automatic content updating (ACU) client that downloads a user profile for the VPN, requests certificate enrollment, and updates the VPN client and other applications when new content is available. A security service manager (SSM) server includes, or is in communication with, a Web server, multiple databases, an enrollment gateway and an internal certification authority (CA). A VPN policy manager application creates and manages VPN profiles and/or policies and communicates with the SSM server. The SSM server, which may reside on an enterprise intranet, may further communicate with one or more external CAs.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07444508",
	"publication_date": "2008-10-28",
	"application_number": "10608818",
	"application_date": "2003-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, apparatus and system for hosting a group of terminals",
	"summary": "",
	"abstract": "A method, apparatus, and system allowing terminal hosted group activities is provided, whereby proximity and non-proximity connections between a hosting mobile terminal and participating terminals enables group hosting activity. The hosting mobile terminal guides information flow between itself, the participating terminals, and optionally, with network servers that may assist the hosting mobile terminal. The hosting mobile terminal provides group management, profiling, downloading, presence, gaming, payment/charging, and authentication functions either in terminal only mode, or alternatively in conjunction with server assistance.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07352997",
	"publication_date": "2008-04-01",
	"application_number": "10641329",
	"application_date": "2003-08-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network element and method for controlling access to low level computer system services",
	"summary": "",
	"abstract": "A solution for controlling activities to be carried out in a network element in a flexible and safe manner. A data transmission network includes a network element, which includes data transfer means for transmitting and receiving data from the data transmission network, which data includes one or more commands: processing means for processing the data provided in a specified format; and control means for modifying the received command into a format required by the processing means. The control means includes a driver the origin of which can be verified with the help of an electronic signature; and one or more functions that control the operation of the processing means, which can only be initiated by the driver the origin of which has been verified with the help of the electronic signature.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07315942",
	"publication_date": "2008-01-01",
	"application_number": "09546439",
	"application_date": "2000-04-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Quality of service definition for data streams",
	"summary": "",
	"abstract": "The invention relates to a device, system and method a method for applying a certain Quality of Service (QoS) to a data stream () of an application () communicating data over a sockets connection. The method comprises providing a uniquely identifiable identifier (UID, Stream Type) the application () or to the data stream () from or to the application, and associating said identifier (UID, Stream Type) with a particular QoS in order to apply the particular QoS to the particular application () or to the particular data stream (), which application or data stream is identified by the identifier.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07320029",
	"publication_date": "2008-01-15",
	"application_number": "09896607",
	"application_date": "2001-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Security element commanding method and mobile terminal",
	"summary": "",
	"abstract": "The invention relates to a method for commanding a security element of a mobile terminal, and to a mobile terminal. An installed application of the mobile terminal issues a command to a platform library of the mobile terminal. Then the platform library reads information from an access control file of the security element. After this, the platform library obtains an access code for the security element from a user according to the access control file information, and inputs the obtained access code and the command to the security element. An action is performed according to the command in the security element, if the access code is approved by the security element.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07395049",
	"publication_date": "2008-07-01",
	"application_number": "10548282",
	"application_date": "2004-03-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Selecting data for synchronization and for software configuration",
	"summary": "",
	"abstract": "According to a first aspect of the invention metadata between user data items and software data items is maintained. The utility of at least one user data item is determined on the basis of the properties of one or more software data items related to the user data item in the metadata. The user data item and one or more software data items related thereto are selected to the data set for synchronization in response to the utility of the user data item meeting a predetermined criterion.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07320011",
	"publication_date": "2008-01-15",
	"application_number": "10309570",
	"application_date": "2002-12-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Signaling transport converter",
	"summary": "",
	"abstract": "For transmitting data in a communication network between a signaling entity and a peer signaling entity through a transport layer, such as TCP, a signaling transport converter STC on TCP is disclosed. The STC on TCP provides a signaling transport service for a connection between the signaling entity and the transport layer and comprises an interface to the signaling entity and an interface to the transport layer. The STC on TCP processes data to be exchanged between the signaling entity and the transport layer for a transparent transfer of the data to the peer signaling entity by means of the TCP transport layer. For providing a transaction-oriented data transport service, the STC on TCP may include a Message Wrapper which delineates a TCP based message stream and encapsulates/decapsulates the data to be exchanged.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07433368",
	"publication_date": "2008-10-07",
	"application_number": "10852485",
	"application_date": "2004-05-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for specifying virtual machines",
	"summary": "",
	"abstract": "The techniques described include a method and system for allowing applications which require or work better with different virtual machines to be successfully installed on a device in such a way that different applications may be executed in different virtual machines. The method comprises identifying an application and based on the identification, identifying the virtual machine which is best suited to execute the application. The application is installed such that the application is executed in the identified virtual machine when the application is launched.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07454748",
	"publication_date": "2008-11-18",
	"application_number": "10900472",
	"application_date": "2004-07-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, apparatus, and method for providing generic internet protocol authentication",
	"summary": "",
	"abstract": "Generic Internet Protocol (IP) authentication is provided by authentication server (). Application Programming Interface (API) () detects the protocol type of an incoming authentication request and invokes one of a number of authentication mechanisms (-) depending on the protocol type detected. A localized repository () is provided to store Subscriber Identity Module (SIM) information and other algorithm data as required to facilitate the authentication session.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07421732",
	"publication_date": "2008-09-02",
	"application_number": "10429918",
	"application_date": "2003-05-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Unbroken primary connection switching between different communication services",
	"summary": "",
	"abstract": "A method allows a user of a mobile terminal to switch from a communication service currently active between that mobile terminal and another mobile terminal to a different communication service in such a manner that the end to end connection between terminals appears unbroken to the user. The user initiates the switch by inputting an appropriate command at the mobile terminal. The mobile terminal then transfers a request to the other mobile terminal. The request invokes a user interface on the other mobile terminal and prompts the user of the other mobile terminal to indicate whether or not they agree to switch from the currently active communication service to the other communication service. After receiving the user's response to the prompt, the other mobile terminal sends back a reply indicating the user's response. Signaling to perform the switch is initiated in response to the reply. The active communication service is terminated at the first and second mobile terminal at substantially the same time that the second communication service is initiated at the first and second mobile terminal.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07317924",
	"publication_date": "2008-01-08",
	"application_number": "11061618",
	"application_date": "2005-02-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "USB application adopting bluetooth profile with a sharing implementation",
	"summary": "",
	"abstract": "A Short Range Connectivity Server (SRCS) is provided to manage transport connections. The SRCS is a standalone server that runs multiple service controllers using OBEX over Bluetooth and USB. The SRCS manages all transports enabling a transport plug in strategy to be adopted. This architecture provides a generic management mechanism to create and manage the transport layer connections. Modular design components enable Bluetooth and USB application development to be undertaken without requiring knowledge of the details of the individual transport protocols. This results in a completely transparent mechanism for application development regardless of transport. The SRCS is in charge of the higher layer services controllers. Additionally, a Service Controller framework is provided for Object Exchange Protocol (OBEX) related services.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07415525",
	"publication_date": "2008-08-19",
	"application_number": "10674843",
	"application_date": "2003-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for implementing secure corporate communication",
	"summary": "",
	"abstract": "A mobile or other device connects to a server via a publicly accessible network such as the Internet. After installation upon the device, a virtual private network (VPN) client connects to the server and downloads a VPN profile. In one embodiment the device creates public/private key pairs and requests enrollment of a digital certificate. In another embodiment a digital certificate and public/private key pairs are provided. The device also receives a digital certificate from the server and verifies the server certificate by requesting the user to supply a portion of a fingerprint for the certificate. The invention further includes an automatic content updating (ACU) client that downloads a user profile for the VPN, requests certificate enrollment, and updates the VPN client and other applications when new content is available. A security service manager (SSM) server includes, or is in communication with, a Web server, multiple databases, an enrollment gateway and an internal certification authority (CA). A VPN policy manager application creates and manages VPN profiles and/or policies and communicates with the SSM server. The SSM server, which may reside on an enterprise intranet, may further communicate with one or more external CAs.",
	"url": null,
	"owner": "Nokia, Inc.",
	"publication_number": "07448080",
	"publication_date": "2008-11-04",
	"application_number": "10609011",
	"application_date": "2003-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for accessing network information on a network device",
	"summary": "",
	"abstract": "A computer-implemented method and system of distributing management of network resources on a network to network devices is provided. During execution, the system receives a request on a network device to execute a task that performs a set of operations related to managing the network, receives an application over the network wherein the application includes operations for performing the task, processes operations on the network device that requests network parameters from a remote network device, transmits the request for the network parameter over the network to the remote network, and receives the requested network parameter over the network from the remote network device.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "07433941",
	"publication_date": "2008-10-07",
	"application_number": "09522332",
	"application_date": "2000-03-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Optimal dynamic agent state assignment",
	"summary": "",
	"abstract": "The present invention is directed toward determining an optimal mix of agents, subject to a grade of service (GOS) constraint, for handling outbound and inbound calls in a blended call center environment. Optimality is achieved through the ability to capture real time data via a real time interface (RTI) for each skill-set.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "07424108",
	"publication_date": "2008-09-09",
	"application_number": "10661362",
	"application_date": "2003-09-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Providing telephony services in a communications network",
	"summary": "",
	"abstract": "A communications network includes packet-based networks that are coupled to various network elements. A method and apparatus is provided to implement telephony services in the communications network. The architecture for providing the telephony services may include several layers, including a network elements layer, an interface layer, and a services/application layer. The services/application layer is decoupled from the specific implementations of the network element layer so that a more flexible and convenient mechanism is provided to create telephony services. The telephony services may be implemented in software modules written in one of several possible languages, such as a telephony scripting language (TSL) or other language. The interface layer includes various components, including translation components to interpret and execute the modules that are in the services/application layer, communications components to provide mechanisms to send commands to network elements layer to perform the specified telephony services, and representation components that describe the functions, tasks, and other details associated with network elements.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "07433954",
	"publication_date": "2008-10-07",
	"application_number": "10927643",
	"application_date": "2004-08-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for virtualization of the network management and control planes to provide an abstracted view and control of underlying network resources",
	"summary": "",
	"abstract": "A method and system for providing a common network service interface to one or more application programs. A network service interface provides application programs with a high level, application specific view of the communication network, and functional access to management plane and control plane functions and protocols. The system generates an abstracted, u201cvirtualizedu201d view of the network and network services that is specific to an individual application program, and that is provided within the execution scope of that application program. Thus the view of the network is contextualized for the application program, and supports network service designations at a functional level relevant to the application user's view of the application services and network elements in the communication network.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "07426580",
	"publication_date": "2008-09-16",
	"application_number": "10842591",
	"application_date": "2004-05-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Technique for synchronizing redundant network elements",
	"summary": "",
	"abstract": "A technique for synchronizing redundant network elements is disclosed. In one particular exemplary embodiment, the technique may be realized as a method that comprises: transmitting a checkpoint indication signal to a primary element and at least one backup element, wherein each of the primary element and the at least one backup element has one or more connections to a network; generating a first checkpoint that is indicative of a first status of the primary element associated with a first arrival time of the checkpoint indication signal at the primary element; generating a second checkpoint that is indicative of a second status of the at least one backup element associated with a second arrival time of the checkpoint indication signal at the at least one backup element; and comparing the first checkpoint and the second checkpoint to determine a synchronization between the primary element and the backup element.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "07394832",
	"publication_date": "2008-07-01",
	"application_number": "10657214",
	"application_date": "2003-09-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed dynamic security for document collaboration",
	"summary": "",
	"abstract": "Techniques are provided for dynamically managing security for document collaboration. A document is associated with a list of collaborators, which can access the document. One collaborator is an identity service. The identity service is capable of dynamically encrypting versions of an access key needed by a collaborator to access the document and capable of dynamically adding or removing collaborators from the list of collaborators.",
	"url": null,
	"owner": "Novell, Inc.",
	"publication_number": "07467415",
	"publication_date": "2008-12-16",
	"application_number": "10813505",
	"application_date": "2004-03-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Nested strong loader apparatus and method",
	"summary": "",
	"abstract": "An apparatus and method provides one or more controlled, dynamically loaded, modular, cryptographic fillers. Fillers may be loaded by a single loader, multiple independent loaders, or nested loaders. Loaders may be adapted to load other loaders, within cryptographic controls extant and applicable thereto. Integration into a base executable having one or more slots, minimizes, controls, and links the interface between the fillers and base executables. The filler may itself operate recursively to load another filler in nested operations, whether or not the fillers are in nested relation to one another. An ability of any filler to be loaded may be controlled by the base executable verifying the integrity, authorization, or both for any filler. The base executable may rely on an integrated loader to control loading and linking of fillers and submodules. A policy may limit each module function, access, and potential for modification or substitution. Dynamically loaded modules (loaders, other fillers, and submodules thereof), typically represent a relatively small portion of the overall coding required by the base executable, and may provide strong controls limiting integration by providing access that is nested, layered, or both between modules excluding direct access to or by them from the base executable or supported applications.",
	"url": null,
	"owner": "Novell, Inc.",
	"publication_number": "07383442",
	"publication_date": "2008-06-03",
	"application_number": "10279517",
	"application_date": "2002-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Techniques for serializing events",
	"summary": "",
	"abstract": "Techniques are provided for serializing events of a data stream. Meta information defines information unit separators and context for events within the data stream. The data stream is parsed according to the instructions of the meta information and event data associated with the events of the data stream are retained. The event data is packaged into selective groupings of event data and transmitted to one or more services in data formats used by the services. The services perform one or more actions based on the received selective groupings of event data.",
	"url": null,
	"owner": "Novell, Inc.",
	"publication_number": "07363577",
	"publication_date": "2008-04-22",
	"application_number": "10848343",
	"application_date": "2004-05-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transformation of platform specific graphical user interface widgets migrated between heterogeneous device platforms",
	"summary": "",
	"abstract": "A scalable graphical user interface system may dynamically transform platform specific graphical user interface widgets migrated within an application graphical user interface between any of a plurality of heterogeneous device platforms. The scalable graphical user interface system includes a platform independent presentation model that is mapped to platform specific graphical user interface widgets. The platform independent presentation model includes platform independent graphical user interface widgets. The platform independent graphical user interface widgets may be selectively transformed with transformation rules to generate a platform specific presentation for use by the application graphical user interface on one of the heterogeneous device platforms. Applicable transformation rules may be prioritized for each selected platform independent graphical user interface widget. A highest priority transformation rule may be applied to transform the selected platform independent graphical user interface widget.",
	"url": null,
	"owner": "NTT DoCoMo, Inc,",
	"publication_number": "07392483",
	"publication_date": "2008-06-24",
	"application_number": "10271203",
	"application_date": "2002-10-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Autonomous integrated-circuit card",
	"summary": "",
	"abstract": "An autonomous integrated circuit card includes a logic external communication interface which directly communicates with a communication device connected to an integrated circuit card terminal main body via a network, in addition to a host device interface connected to an integrated card reader/writer via a physical layer. A communication control unit includes a software module which directly communicates with the communication device via the external communication interface. A central processing unit performs authentication via the communication control unit and reads value information stored in a nonvolatile memory. Further, the central processing unit encrypts the read value information by use of an encryption processing unit and directly transmits the encrypted value information to the communication device via the communication control unit and the external communication interface.",
	"url": null,
	"owner": "NTT DoCoMo, Inc.",
	"publication_number": "07346718",
	"publication_date": "2008-03-18",
	"application_number": "10457512",
	"application_date": "2003-06-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Communication device, control method of communication device, program and communication method",
	"summary": "",
	"abstract": "The present invention provides a means for reflecting modifications made in a server to data with regard to a scope of rights, which are granted to an application program operable in a communication device such as a mobile station, on data stored in the communication device. To achieve the aim, in a system according to the present invention, Java-AP software is provided to a mobile station by transmitting an ADF, a SDF and a JAR file from servers to the mobile station in that order. The SDF is a file containing data indicating restrictions of behavior of a Java-AP in a mobile station. The SDF also contains data indicating a validity state of the SDF, namely u2018validu2019 or u2018invalidu2019, which is managed by management server device . Before a mobile station runs a Java-APP which is installed in the mobile station, the mobile station accesses management server device  and checks whether a SDF corresponding to the Java-APP is valid. When the SDF is valid, the mobile station runs the Java-APP following the restrictions indicated in the SDF.",
	"url": null,
	"owner": "NTT DoCoMo, Inc.",
	"publication_number": "07421577",
	"publication_date": "2008-09-02",
	"application_number": "10815106",
	"application_date": "2004-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Asynchronous conditional graphics rendering",
	"summary": "",
	"abstract": "A graphics processing unit implements conditional rendering by putting itself in a state in which it does not execute any rendering commands. Once the graphics processing unit is placed in this state, all subsequent rendering commands are ignored until another rendering command explicitly removes the graphics processing unit from this state. Conditional rendering commands enable the graphics processing unit to place itself in and out of this state based upon the value of a flag in memory. Conditional rendering commands can include conditions that must be satisfied by the flag value in order to change the state of the graphics processing unit. The value of the flag can be set by the graphics processing unit itself, a second graphics processing unit, a graphics coprocessor, or the central processing unit. This enables a wide variety of conditional rendering methods to be implemented.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07388581",
	"publication_date": "2008-06-17",
	"application_number": "10652608",
	"application_date": "2003-08-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Communications processor",
	"summary": "",
	"abstract": "A communication processor of a class, such as an Internet tuner, provides such desirable features (FIG. ) as LAN support, an SPI interface (), a dedicated port (), and ADPCM () for audio applications. The invention provides a low-cost, low-power, easily manufactured, small form-factor network access module which has a low memory demand and provides a highly efficient protocol decode. The invention comprises a hardware-integrated system that both decodes multiple network protocols in a streaming manner concurrently and processes packet data in one pass, thereby reducing system memory and form factor requirements, while also eliminating software CPU overhead.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07379475",
	"publication_date": "2008-05-27",
	"application_number": "10470365",
	"application_date": "2002-01-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Internet protocol (IP) router residing in a processor chipset",
	"summary": "",
	"abstract": "A novel network architecture that integrates the functions of an internet protocol (IP) router into a network processing unit (NPU) that resides in a host computer's chipset such that the host computer's resources are perceived as separate network appliances. The NPU appears logically separate from the host computer even though, in one embodiment, it is sharing the same chip.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07324547",
	"publication_date": "2008-01-29",
	"application_number": "10319780",
	"application_date": "2002-12-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for modifying depth values using pixel programs",
	"summary": "",
	"abstract": "A method and apparatus for generating depth values in a programmable graphics system. Depth values are calculated under control of a pixel program using a variety of sources as inputs to programmable computation units (PCUs) in the programmable graphics system. The PCUs are used to compute traditional interpolated depth values and modified depth values. The PCUs are also used to compute arbitrary depth values which, unlike traditional interpolated depth values and modified depth values, are not dependent on the coordinates of the geometry primitive with which the arbitrary depth values are associated. Several sources are available as inputs to the PCUs. Clipping with optional clamping is performed using either interpolated depth values or calculated depth values, where calculated depth values are arbitrary depth values or modified depth values. Final depth values, used for depth testing, are selected from interpolated depth values and arbitrary depth values after clipping is performed.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07358970",
	"publication_date": "2008-04-15",
	"application_number": "10951498",
	"application_date": "2004-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for performing network processing functions",
	"summary": "",
	"abstract": "A novel network architecture that integrates the functions of an internet protocol (IP) router into a network processing unit (NPU) that resides in a host computer's chipset such that the host computer's resources are perceived as separate network appliances. The NPU appears logically separate from the host computer even though, in one embodiment, it is sharing the same chip.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07397797",
	"publication_date": "2008-07-08",
	"application_number": "10319791",
	"application_date": "2002-12-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing an integrated network of processors",
	"summary": "",
	"abstract": "A novel network architecture that integrates the functions of an internet protocol (IP) router into a network processing unit (NPU) that resides in a host computer's chipset such that the host computer's resources are perceived as separate network appliances. The NPU appears logically separate from the host computer even though, in one embodiment, it is sharing the same chip.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07383352",
	"publication_date": "2008-06-03",
	"application_number": "11473832",
	"application_date": "2006-06-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Neighbor and edge indexing",
	"summary": "",
	"abstract": "Method and apparatus for neighbor and edge indexing is described. A vertex is identified and assigned a reference. One-ring neighbor vertices of the vertex are identified. The reference is assigned to each of the one-ring neighbor vertices identified. An index to one of the one-ring neighbor vertices is assigned. The index is successively incremented to provide indices for each of the one-ring neighbor vertices remaining. Edge indexing follows as described above, with the vertex and its one-ring neighbors defining end points of edges. Additionally, offset indexing is described, and may be used for a consistent order of computation.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07324105",
	"publication_date": "2008-01-29",
	"application_number": "10727679",
	"application_date": "2003-12-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network processing pipeline chipset for routing and host packet processing",
	"summary": "",
	"abstract": "A novel network architecture that integrates the functions of an internet protocol (IP) router into a network processing unit (NPU) that resides in a host computer's chipset such that the host computer's resources are perceived as separate network appliances. The NPU appears logically separate from the host computer even though, in one embodiment, it is sharing the same chip.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07362772",
	"publication_date": "2008-04-22",
	"application_number": "10319798",
	"application_date": "2002-12-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Parallel LCP solver and system incorporating same",
	"summary": "",
	"abstract": "A Linear Complementarity Problem (LCP) solver is characterized by multiple execution units operating in parallel to implement a competent computational method adapted to resolve physics-based LCPs in real-time.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07421303",
	"publication_date": "2008-09-02",
	"application_number": "10815721",
	"application_date": "2004-04-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Planar z representation for z compression",
	"summary": "",
	"abstract": "A z buffer stores compressed z data represented in a planar format for one or more tiles. The compressed format includes a set of tile specific coefficients defining a plane equation for each z tested primitive intersecting the tile. The z buffer stores a maximum number of sets of tile specific coefficients for each tile, and when the maximum number of sets is exceeded for a particular tile, an uncompressed format is used to store the z data for the particular tile.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07382368",
	"publication_date": "2008-06-03",
	"application_number": "10878460",
	"application_date": "2004-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Surrogate stencil buffer clearing",
	"summary": "",
	"abstract": "Methods and apparatuses for effectively clearing stencil buffers at high speed using surrogate stencil buffer clearing. A hardware register tracks the number of surrogate clears of the stencil buffer since the last actual clear. Bits are reserved in each stencil register for storing the surrogate clear number that cleared other stencil registers the last time the stencil register held an assigned value. A comparison between the contents of the hardware register and the reserved bits in each stencil register determines if each stencil register should be assigned a cleared value. If the numbers do not match the stencil register is assigned a predetermined surrogate clear value. In some applications the number of reserved bits is fixed, while in other applications the number of reserved bits can be set, either by a designer or by software.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07355602",
	"publication_date": "2008-04-08",
	"application_number": "10985699",
	"application_date": "2004-11-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for single-sample virtual coverage anti-aliasing",
	"summary": "",
	"abstract": "A graphics system has a mode of operation in which primitive coverage information is generated for real sample locations and virtual sample locations for use in anti-aliasing pixels. An individual pixel has a single real sample with color information and at least one virtual sample. In one implementation each virtual sample within a pixel is a pointer that identifies whether the virtual sample belongs to the single real sample within the pixel or to a proximate neighboring pixel. The virtual sample information permits a blending weight to be determined for blending color values of a partially covered pixel with color values of neighboring pixels.",
	"url": null,
	"owner": "Nvidia Corporation",
	"publication_number": "07372471",
	"publication_date": "2008-05-13",
	"application_number": "11171816",
	"application_date": "2005-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for virtual coverage anti-aliasing",
	"summary": "",
	"abstract": "A graphics system has a mode of operation in which real samples and virtual samples are generated for anti-aliasing pixels. Each virtual sample identifies a set of real samples associated with a common primitive that covers a virtual sample location within a pixel. The virtual samples provide additional coverage information that may be used to adjust the weights of real samples.",
	"url": null,
	"owner": "Nvidia Corporation",
	"publication_number": "07333119",
	"publication_date": "2008-02-19",
	"application_number": "10980078",
	"application_date": "2004-11-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Translation of register-combiner state into shader microcode",
	"summary": "",
	"abstract": "An apparatus and method for translating fixed function state into a shader program. Fixed function state is received and stored and when a new shader program is detected the fixed function state is translated into shader program instructions. Registers specified by the program instructions are allocated for processing in the shader program. The registers may be remapped for more efficient use of the register storage space.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07324106",
	"publication_date": "2008-01-29",
	"application_number": "10899603",
	"application_date": "2004-07-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Object-oriented operating system",
	"summary": "",
	"abstract": "An apparatus for enabling an object-oriented application to access in an object-oriented manner a procedural operating system having a native procedural interface is disclosed. The apparatus includes a computer and a memory component in the computer. A code library is stored in the memory component. The code library includes computer program logic implementing an object-oriented class library. The object-oriented class library comprises related object-oriented classes for enabling the application to access in an object-oriented manner services provided by the operating system. The object-oriented classes include methods for accessing the operating system services using procedural function calls compatible with the native procedural interface of the operating system. The computer processes object-oriented statements contained in the application and defined by the class library by executing methods from the class library corresponding to the object-oriented statements.",
	"url": null,
	"owner": "Object Technology Licensing Corporation",
	"publication_number": "07424704",
	"publication_date": "2008-09-09",
	"application_number": "10648471",
	"application_date": "2003-08-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method, and article of manufacture for using a replaceable component to select a replaceable quality of service capable network communication channel component",
	"summary": "",
	"abstract": "A system, method and article of manufacture for communication in a network application. A connection or communication path to a replaceable transport is initiated in a network application. After the initiation, the network application creates an object to accept the connection or communication path. Once the connection or communication path is established, the network application provides QoS information for the replaceable transport to the replaceable transport, and to at least one object corresponding to the connection or communication path.",
	"url": null,
	"owner": "Objective Interface Systems, Inc.",
	"publication_number": "07424549",
	"publication_date": "2008-09-09",
	"application_number": "10118157",
	"application_date": "2002-04-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Adaptive content platform and method of using same",
	"summary": "",
	"abstract": "An adaptive content platform includes one or more content-enabled, dependent applications, each of which includes a user interface and business logic. A services layer, which is interfaced with the dependent applications and a software infrastructure, provides one or more services that are usable by the dependent applications.",
	"url": null,
	"owner": "Openpages",
	"publication_number": "07356771",
	"publication_date": "2008-04-08",
	"application_number": "10256613",
	"application_date": "2002-09-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Asynchronous messaging based system for publishing and accessing content and accessing applications on a network with mobile devices",
	"summary": "",
	"abstract": "An MMS publishing system comprises a management tool, an authoring tool, a storage facility, a message router, and a rendering server. The management tool authenticates a first user by using a telephone number of the first user as a user ID. The authoring tool allows the first user to associate rich media content with his telephone number. The content is then stored in the storage facility in association with his telephone number. Subsequently, the message router intercepts an MMS message sent from a mobile device over a wireless network when the MMS message includes a predetermined indicator and indicates the telephone number of the first user as a destination. The rendering server then accesses the stored content associated with the telephone number and sends the content to the mobile device, for output to a user of the mobile device.",
	"url": null,
	"owner": "Openwave Systems Inc.",
	"publication_number": "07343168",
	"publication_date": "2008-03-11",
	"application_number": "10364896",
	"application_date": "2003-02-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mobility extended telephone application programming interface and method of use",
	"summary": "",
	"abstract": "A system and method of for exchanging information between a wireless network and an external system is disclosed. The wireless network detects trigger events related to communications with wireless subscribers. Certain event triggers cause the wireless system to create a message to send to the external system. In response the external system may send information to the wireless system. The wireless system may create messages upon detection of handoff, origination, status, registration or other activity by the wireless subscriber. The invention may also detect trigger events related one mass media broadcasts. An interface translates between the different protocols of the wireless and the external or wireline networks to allow for automatic call redirection. The application can be utilized between many networks and facilitates the utilization of the architecture of a wirelined network and the home location register of the wireless network for various applications on the wireless network.",
	"url": null,
	"owner": "Openwave Systems Inc.",
	"publication_number": "07359720",
	"publication_date": "2008-04-15",
	"application_number": "09973479",
	"application_date": "2001-10-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for adjusting the distribution of an asset over a multi-tiered network",
	"summary": "",
	"abstract": "A system and method for adjusting the distribution of an asset over a multi-tiered network is provided. An asset may represent network and/or application components (e.g., data, objects, applications, program modules, etc.) that may be distributed among the various resources of the network. In an embodiment, a performance metric is received and input to a performance model. The model determines a network optimization and at least one change requirement based on the metric. A package specification is changed to reflect the requirement, which may specify that at least one asset should be packaged in at least one package. The change requirement is implemented and the package is distributed over the network.",
	"url": null,
	"owner": "OPYO, Inc.",
	"publication_number": "07430610",
	"publication_date": "2008-09-30",
	"application_number": "09947095",
	"application_date": "2001-09-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Techniques for debugging computer programs involving multiple computing machines",
	"summary": "",
	"abstract": "Techniques for debugging a computer program that includes multiple modules executing on multiple machines include receiving, at a unifying component, first data from a first machine. The first data indicates debugging information generated by the first machine. Second data is also received at the unifying component from a second machine. The second data indicates debugging information generated by the second machine. Based on the first data and the second data, third data is formed indicating a single integrated representation of debugging information for the computer program. The unifying component allows debugging information from several machines to be integrated and then presented to a user through a single debugger client.",
	"url": null,
	"owner": "Oracle Corporation",
	"publication_number": "07350194",
	"publication_date": "2008-03-25",
	"application_number": "10143890",
	"application_date": "2002-05-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network data model for relational database management system",
	"summary": "",
	"abstract": "A shareable application program interface (API) and network data model infrastructure which is used in combination with a relational database to provide data storage and processing functions for network data. The network data model is stored in relational tables that describe a set of nodes and links forming a network wherein each node represents an object of interest and each link represents a relationship between two nodes. A generic node table contains a row describing each node in the network, and a generic link table contains row data describing each link. In addition, a path table whose contents are commonly generated by network analysis procedures contains rows which describe corresponding paths each consisting of an alternating sequence of nodes and links. The sequence of links in each path are identified in a separate path-link table. The system provides two application program interfaces, a PL/SQL API and a Java API, which permit executing application programs to use stored procedures for creating the node and link tables, store data describing nodes and links in the tables, and perform standard operations on the network data.",
	"url": null,
	"owner": "Oracle International Corp.",
	"publication_number": "07454428",
	"publication_date": "2008-11-18",
	"application_number": "10696482",
	"application_date": "2003-10-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Structured datatype expansion framework",
	"summary": "",
	"abstract": "One embodiment of the present invention provides a system that expands a symbolic representation of a data item into a locale-specific textual representation of the data item. The system operates by first receiving a locale-independent symbolic representation of the data item. Next, the system obtains a locale attribute that identifies a version of a language that is spoken in a locale, and then expands this symbolic representation of the data item into the locale-specific textual representation of the data item.",
	"url": null,
	"owner": "Oracle International Corp.",
	"publication_number": "07360155",
	"publication_date": "2008-04-15",
	"application_number": "10449203",
	"application_date": "2003-05-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for instant messaging collaboration",
	"summary": "",
	"abstract": "An apparatus and method for instant message transmission includes a message center coupled to one or more servers and to an event engine by a network. An instant message is transmitted to the message center by the event engine over the network. An algorithm determines the optimum path for the transmission of the instant message. Users may share identical data via instant messaging, and may make changes to the data as it is streamed in real-time to designated users over the network. It is emphasized that this abstract is provided to comply with the rules requiring an abstract that will allow a searcher or other reader to quickly ascertain the subject matter of the technical disclosure. It is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims. 37 CFR 1.72(b).",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07401158",
	"publication_date": "2008-07-15",
	"application_number": "10289162",
	"application_date": "2002-11-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data presentation methods and apparatus to facilitate printing and reviewing",
	"summary": "",
	"abstract": "A method of creating a printable representation of data elements as displayed in a browser, including a set of frames. The method includes determining an optimal height distance X of each frame of the set of frames, wherein the frame can be printed without a page break. The method further includes retrieving from a data source a first set of data rows, from a row 1 to a row N, wherein each row further comprises a set of data elements; determining a row height for each row of the first set of data rows, based in part, on a set of device display configuration indicia; and determining a row M from the first set of data rows, wherein a summation of the row height of the row 1 to the row M is smaller than X, and a summation of the row height of the row 1 to a row M+1 is larger than X. The method also includes discarding from the row M+1 to the row N; rendering the row 1 to the row M in the browser frame; and, if necessary, retrieving a second set of data rows beginning with the row M+1.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07426059",
	"publication_date": "2008-09-16",
	"application_number": "10390945",
	"application_date": "2003-03-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Determining group membership",
	"summary": "",
	"abstract": "The present invention is directed to technology for determining the members of groups. A group can have static members, dynamic members and/or nested members. An entity is a nested member of a first group if that entity is a member of a second group and the second group is a member of the first group. There can be multiple levels of nesting. For example, an entity can be a nested member of a first group if that entity is a member of a second group, which is a member of a third group, which is a member of a fourth group, . . . , which is a member of the first group. The present invention can determine the membership of a group, including the static members, dynamic members and/or nested members. Furthermore, the present invention can be used to expand one or more groups so that future requests to view the membership of a group can be performed in a more efficient manner.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07363339",
	"publication_date": "2008-04-22",
	"application_number": "09998926",
	"application_date": "2001-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic services infrastructure for allowing programmatic access to internet and other resources",
	"summary": "",
	"abstract": "A dynamic services infrastructure accepts data describing data resources and stores that data in a relational database from which it may be retrieved to handle service requests issued by application programs. The database stores Service Definition data which is initially supplied in the form of XML Service Descriptor documents which are then mapped into the database from which they may be accessed. Each Service Definition includes an input specification which identifies the address of a resource as well as the nature of the input data to be supplied to the resource with the request, and further includes an output specification which describes the nature of the output information which is supplied by the resource in response to the request. The Service Definition further includes information describing the service provider which supplies the resource, test information including fixed input and output values which permit the operability of the resource to be verified, update information which permits the infrastructure to insure that the Service Definition information is kept current, and security information which permits the system to validate users and provide secure encrypted information exchanges. When a client sends a request for services to the infrastructure, obtains the service description for the desired resource from the database, transmits an output information request to the address specified in said the service description, supplying input information meeting the specification contained in said particular service description to said particular resource, and receives and routs output information provided by said particular resource in response to said output information request to the executing application program.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07472349",
	"publication_date": "2008-12-30",
	"application_number": "09584318",
	"application_date": "2000-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enabling relational databases to incorporate customized intrusion prevention policies",
	"summary": "",
	"abstract": "A method for preventing intrusions in a database system is provided. When the database system receives a request to execute a database command, the database command is parsed to generate parsed information. Before executing the database command, the parsed information is evaluated against a set of rules. If the parsed information satisfies the conditions associated with a rule, the database system performs an action associated with the rule. The action may be an action designed to prevent intrusions, and may be performed instead of or in addition to executing the database command.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07356545",
	"publication_date": "2008-04-08",
	"application_number": "11023112",
	"application_date": "2004-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enterprise link for a software database",
	"summary": "",
	"abstract": "An enterprise link for a software database is coupled to existing enterprise systems within an organization and also to an active data cache. The enterprise link contains an active designer whereby a user is able to create one or more data flow definitions on how to operate on data stored in the enterprise systems as the data in those systems changes. The transformed data is transmitted to a data flow service in the enterprise link in real-time where it is made available to end-users in the active data cache.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07454423",
	"publication_date": "2008-11-18",
	"application_number": "10237559",
	"application_date": "2002-09-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for distributed rule evaluation in a near real-time business intelligence system",
	"summary": "",
	"abstract": "A method for optimally monitoring a set of data elements for an event. The method includes determining a set of data elements, each of which further comprises a state. An event is commonly a change in this state. The method further includes creating a rule for monitoring the event, wherein the rule comprises an event identification portion resident on a first computer and an action portion resident on a second computer. The method also includes monitoring the set of data elements for the event based, in part, on the event identification portion, and determining if the event has occurred. If so, the method further includes sending the set of data elements to the second computer. The method also includes executing a set of actions, based in part, on the action portion. Thereafter, the method further includes monitoring the set of data elements based, in part, on the rule.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07412481",
	"publication_date": "2008-08-12",
	"application_number": "10289142",
	"application_date": "2002-11-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for facilitating globalization of voice applications",
	"summary": "",
	"abstract": "One embodiment of the present invention provides a system that generates voice output for an application. During operation, the system receives a symbolic representation of data to be outputted from the application, wherein the symbolic representation is locale-independent. The system also obtains a locale attribute that identifies a version of a language that is spoken in the locale. Next, the system expands the symbolic representation into a fully articulated locale-specific textual representation of the data, and then associates the textual representation with one or more audio files containing locale-specific voice output corresponding to the textual representation.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07373598",
	"publication_date": "2008-05-13",
	"application_number": "10449243",
	"application_date": "2003-05-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for an operation capable of updating and inserting information in a database",
	"summary": "",
	"abstract": "A Structured Query Language (SQL) adapter business service that converts data from a data set to a common representation format used for all data sets with which the SQL adapter business service interacts. Hence the SQL adapter business service can communicate with various internal and external systems independently of the native format in which those systems maintain and store data. The SQL adapter business service optimizes operations to update data in the data sets by combining operations when possible and by using result sets from executing previous SQL statements to construct subsequent SQL statements. SQL adapter business service takes advantage of parent/child relationships between tables to construct SQL statements in an order such that the SQL statements process only a minimum amount of data, thereby making retrieval of data as efficient as possible.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07373357",
	"publication_date": "2008-05-13",
	"application_number": "10751236",
	"application_date": "2004-01-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multi-model access to data",
	"summary": "",
	"abstract": "Techniques are provided for accessing data stored in a database. According to one technique, an application makes one or more calls to an operating system to access a file. The operating system includes routines that implement an operating system file system. The one or more calls are made to the routines that implement the operating system file system. In response to the one or more calls, one or more database commands are issued to a database server that manages the database. The database server executes the database commands to retrieve the data from the database. The file is generated from the data, and provided to the application.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07418435",
	"publication_date": "2008-08-26",
	"application_number": "09571508",
	"application_date": "2000-05-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Obtaining and maintaining real time certificate status",
	"summary": "",
	"abstract": "An Identity System obtains and maintains real time certificate status. The Identity System retrieves real time status information for the System's certificates and stores a record of the status. The Identity System also stores validation information for the certificate, including the time the real time status was retrieved and a validation interval of time extending from the status retrieval time. Smaller validation intervals reduce the potential for the real time status changing during the validation interval. When the Identity System exports or displays a certificate for a user, the Identity System can employ the stored validation information and certificate status to ensure the certificate's validity.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07415607",
	"publication_date": "2008-08-19",
	"application_number": "09998914",
	"application_date": "2001-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Proxy system",
	"summary": "",
	"abstract": "The present invention is directed to technology for using a proxy in an Identity System. When a first entity is on vacation, on a business trip or otherwise unavailable to perform certain actions on an Identity System, a second entity can act as a proxy for the first entity. The Identity System will provide the second entity, acting as a proxy, with the privileges, access and rights of the first entity. In one embodiment, Identity System is part of an integrated Identity and Access System, and the second entity is a proxy in the Identity System but not in the Access System.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07380008",
	"publication_date": "2008-05-27",
	"application_number": "09998916",
	"application_date": "2001-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Reducing memory requirements needed to represent XML entities",
	"summary": "",
	"abstract": "Described herein are approaches that allow an XML entity to be accessed in a way that requires less memory. These approaches involve dynamically generating and maintaining an in-memory representation of only a portion of an XML tree. The in-memory representation of an XML tree is herein referred to as a node tree. The node tree contains data from the XML tree, and is generated by extracting data from a compressed form of an XML entity. In addition, the node tree contains information about the location of specific elements within the compressed XML entity. The approaches described herein allow an XML tree to be accessed without having to generate an in-memory representation of the whole XML tree, thus reducing the amount of memory needed to access the data in the XML tree.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07321900",
	"publication_date": "2008-01-22",
	"application_number": "10173466",
	"application_date": "2002-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Registration of solved cubes within a relational database management system",
	"summary": "",
	"abstract": "Performing operations on multidimensional data managed by a relational database system is facilitated by registration of solved cubes with a RDBMS. A solved cube is an abstract construct likened to a view or a table on relational data and contains not only base data, but also aggregated measure data that is base data that has been processed across multiple levels of a hierarchical dimension. In an embodiment, a solved cube may provide all the pre-computed aggregated data for a particular context that the solved cube represents. In another embodiment, a solved cube may not provide any pre-computed data, but may provide several procedures, operations and/or instructions that can be executed to compute aggregated data for a particular context that the solved cube represents. A solved cube is registered with a RDBMS by providing metadata that defines a given solved cube. Therefore, a database server is able interpret the metadata, and to perform operations on the given solved cube based on the metadata.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07366730",
	"publication_date": "2008-04-29",
	"application_number": "10445113",
	"application_date": "2003-05-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Runtime modification of entries in an identity system",
	"summary": "",
	"abstract": "The present invention is directed to technology for modifying groups or other types of entries after those entries have been created. In one embodiment, the invention includes modifying group objects that have already been instantiated by adding and/or removing auxiliary classes and their associated attributes. The present invention can be used with an Identity System that stores group objects in a directory. Alternatively, the present invention can be used with other types of entries, other types of systems and/or other types of data stores.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07349912",
	"publication_date": "2008-03-25",
	"application_number": "09997409",
	"application_date": "2001-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for actively managing an enterprise of configurable components",
	"summary": "",
	"abstract": "A system and method for actively managing an enterprise of configurable components is described. A configuration for at least one individual component in a managed domain is stored. The configuration includes a set of configuration parameters and type definitions. A mapping of the configurations is defined between at least two of the individual components. Each mapping specifies a configuration parameter with a relationship dependent on at least one other such configuration parameter. Each such individual component is registered. The configuration parameters and type definitions are validated based on a master set of configuration parameters and type definitions defined for an enterprise. The mappings within the enterprise are enforced by dynamically probing the validated configurable parameters for each such individual component.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07418484",
	"publication_date": "2008-08-26",
	"application_number": "09998095",
	"application_date": "2001-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for converting an electronically stored document",
	"summary": "",
	"abstract": "A system and method for producing a document formatted according to Hypertext Markup Language (HTML) from an electronically stored original document while preserving the visual presentation properties of the original document as characterized by the document-authoring application used to create the original document. The system comprises a document converter, which includes a conversion engine and an interface for a document-authoring application. The document-authoring application interface generates a set of raw conversion data from the original document. The conversion engine assembles the raw conversion data into the HTML document. The raw conversion data may comprise a set of files formatted according to Hypertext Markup Language (HTML).",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07398464",
	"publication_date": "2008-07-08",
	"application_number": "10158969",
	"application_date": "2002-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for efficiently performing memory intensive computations including a bidirectional synchronization mechanism for maintaining consistency of data",
	"summary": "",
	"abstract": "A system and method for efficiently performing memory intensive computations including a bidirectional synchronization mechanism for maintaining consistency of data on which computations will be performed. This can be used to solve various problems such as those in a business context. Synchronization occurs in a near-real-time fashion between data in a database and data stored in memory. The synchronization is accomplished by periodically scanning the database to see if any data has changed. If any data has changed, the changes are copied over to memory so that the data in memory is current. This update is accomplished without copying the entire database into memory each time data in the database changes.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07444477",
	"publication_date": "2008-10-28",
	"application_number": "11679040",
	"application_date": "2007-02-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for managing object to relational one-to-many mapping",
	"summary": "",
	"abstract": "Instructions are generated to manipulate target objects and relationships in a relational database when a source object having a one-to-many relationship of privately owned type with the target objects is manipulated. To generate instructions, mapping meta-data is used which contains information as to how object classes of the object model map to tables in the database and how relationships map to foreign keys.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07383273",
	"publication_date": "2008-06-03",
	"application_number": "11062014",
	"application_date": "2005-02-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for providing application services",
	"summary": "",
	"abstract": "A network interface system is provided with an addressable application device and a processor. The addressable application device is adapted to interface with a transport medium internal to a customer premises. The processor is adapted to selectively process telecommunication information originating from a transport medium external to the customer premises. The processor is further adapted to transmit the processed telecommunication information to the addressable application device for implementation of an application over the transport medium internal to the customer premises in accordance with a state of the addressable application device. The addressable application device and the processor are disposed external to the customer premises.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07433465",
	"publication_date": "2008-10-07",
	"application_number": "10367597",
	"application_date": "2003-02-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Techniques for changing XML content in a relational database",
	"summary": "",
	"abstract": "Techniques are provided for changing data for an XML construct in an SQL/XML compliant database management system (DBMS). The DBMS allows instances of XML type to represent XML constructs, such as XML documents, XML elements, XML attributes, and fragments of XML documents. An SQL statement is received that includes an XML operator that operates on a particular component in an instance of XML type. During execution of the SQL statement, the XML operator is evaluated by modifying content for the component without modifying the entire instance. For example, an XML delete operator deletes the particular component from the instance. Other XML operators include an insert operator, an insert-before operator, an append-child operator, and an update operator. During execution, these operators may be rewritten to operate on existing SQL constructs, or evaluated by updating only some of the existing SQL constructs, or both.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07386567",
	"publication_date": "2008-06-10",
	"application_number": "10956300",
	"application_date": "2004-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Techniques for supporting multiple devices in mobile applications",
	"summary": "",
	"abstract": "Techniques for interacting with a client process on a mobile device connected to a network over a wireless link includes managing information at a mobile applications server executing on a platform connected to the network. The information includes device profile information about the mobile device. First data is received from an application. The first data describes graphical elements for display on the mobile device. It is determined whether the first data exceeds a capacity of the mobile device based on the device profile information. If it is determined that the first data exceeds the capacity, then a subset of the first data is formed that does not exceed the capacity of the mobile device. The subset of the first data is sent to the client process. If it is determined that an external converter does not convert using a particular format, then a first description of graphical elements is converted internally into a second description using the particular format. Second data including the second description is sent to the client process. These techniques allow network-based services to be made readily available to a wide range of mobile devices without having to explicitly program each application for providing one or more network-based services to support all forms of mobile devices.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07373422",
	"publication_date": "2008-05-13",
	"application_number": "09872566",
	"application_date": "2001-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for facilitating communications in a network using on demand distribution",
	"summary": "",
	"abstract": "A system using a touch-point specific stub in communication with a stub specific object provides efficient and effective communications between a server operation running the stub specific object and a touch-point running the touch-point specific stub. An On Demand Distribution Service (ODD) distributes the stub to a touch-point and selects and initializes the object such that communications between the stub and the object is established.",
	"url": null,
	"owner": "OutlookSoft Corporation",
	"publication_number": "07434234",
	"publication_date": "2008-10-07",
	"application_number": "10138136",
	"application_date": "2002-05-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamically categorizing entity information",
	"summary": "",
	"abstract": "A set of criteria is acquired that defines a category of entities. The set of criteria is dynamically applied to identify an entity that meets the criteria. It is determined that the entity is registered as having control over at least a portion of a World-Wide Web address. The at least a portion of a World-Wide Web address is associated with the entity in a presentation that indicates that the entity belongs to the category of entities. In the presentation, a link may be included to a set of computer data about the entity. The set of computer data includes information other than information provided at a World-Wide Web site corresponding to the World-Wide Web address.",
	"url": null,
	"owner": "Overture Services, Inc.",
	"publication_number": "07398266",
	"publication_date": "2008-07-08",
	"application_number": "10693667",
	"application_date": "2003-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for improved online auction",
	"summary": "",
	"abstract": "Methods and systems for improving auction-based online commerce are provided, including methods and systems for facilitating advance, rapid, accurate estimation of shipping costs between a seller and the winner of an online auction. Methods and systems include an application for facilitating seller estimation of shipping costs, including various components of shipping costs, and for providing to the buyer a shipping estimate based on the circumstances of the buyer and the auction.",
	"url": null,
	"owner": "Paid, Inc.",
	"publication_number": "07324968",
	"publication_date": "2008-01-29",
	"application_number": "10106476",
	"application_date": "2002-03-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Self-configuring server and server network",
	"summary": "",
	"abstract": "A self-configuring server system is disclosed. In this system, a plurality of nodes are linked together in a primary loop. Each node includes an external communication interface coupled to the loop, a command module for controlling the node and an internal interface. The internal interface, for each node, is in turn coupled to an internal loop associated with that node, the internal loop defining operation of that node. Messages and data circulate around the primary loop until reaching an appropriate node, where the message or data is acted upon. In some instances the messages or data is client-related, and in other instances the messages or data provide for dynamic reconfiguration of the system. In yet other instances, the messages or data is transmitted from one or more nodes in order to provide operational data about the node/nodes to a plurality of system controllers. Components in the loop also may receive information from components not in the loop but associated with the system, such as virile entities, that are used for monitoring and control.",
	"url": null,
	"owner": "Palladia Systems, Inc.",
	"publication_number": "07315903",
	"publication_date": "2008-01-01",
	"application_number": "10200721",
	"application_date": "2002-07-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for notification on an electronic handheld device using an attention manager",
	"summary": "",
	"abstract": "A method and system for notification in a palm-sized computer system. Specifically, the present invention discloses an Attention Manager that manages application demand for a user's attention. The Attention Manager receives multiple attention requests from varying applications. With each new attention request received that indicates a record needs a user's attention, the Attention Manager stores the request in memory and determines if there are other outstanding attention requests that have not been cleared. Depending on the number of outstanding requests, the Attention Manager sends a request for record information in list or detail format. If there are multiple outstanding attention requests, the Attention Manager displays a notification dialog in a list format. If there is only one outstanding attention request, the Attention Manager displays the notification dialog in detail format. Additionally, a simple user interface to navigate to the application and record entry requiring attention is provided.",
	"url": null,
	"owner": "PalmSource, Inc.",
	"publication_number": "07370289",
	"publication_date": "2008-05-06",
	"application_number": "09801983",
	"application_date": "2001-03-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for optimizing testing of memory stores",
	"summary": "",
	"abstract": "One embodiment of the present invention keeps a record of memory accesses by an operating system. The records can indicate which memory locations do not need to be checked in a later test. In one embodiment, memory blocks that have been accessed since a predetermined time are not checked in a later memory test. This reduces the time required for the later memory test.",
	"url": null,
	"owner": "PC-Doctor, Inc.",
	"publication_number": "07356744",
	"publication_date": "2008-04-08",
	"application_number": "11127590",
	"application_date": "2005-05-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for survey processing",
	"summary": "",
	"abstract": "Certain embodiments of the present invention provide a system and method for improved, real-time survey data processing and analysis. Certain embodiments use distributed computing techniques to perform statistical calculations for survey data, such as general purpose and multi-rater feedback data. Certain embodiments use a matrix structure coupled with hash tables for efficient processing of survey statistics across an entire survey. Certain embodiments use a criteria parser based on externally definable lexical rules to determine which survey responses belong to which groups. Certain embodiments allow coalescing of summarization requests between summarization servers to allow for peak performance across any number of surveys. Certain embodiments provide a scalable, adaptable survey processing system and method that processes survey results in real time, allowing for immediate feedback during the survey process.",
	"url": null,
	"owner": "Personnel Research Associates, Inc.",
	"publication_number": "07418496",
	"publication_date": "2008-08-26",
	"application_number": "10844067",
	"application_date": "2004-05-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for processing speech signal features for streaming transport",
	"summary": "",
	"abstract": "Speech signal information is formatted, processed and transported in accordance with a format adapted for TCP/IP protocols used on the Internet and other communications networks. NULL characters are used for indicating the end of a voice segment. The method is useful for distributed speech recognition systems such as a client-server system, typically implemented on an intranet or over the Internet based on user queries at his/her computer, a PDA, or a workstation using a speech input interface.",
	"url": null,
	"owner": "Phoenix Solutions, Inc.",
	"publication_number": "07376556",
	"publication_date": "2008-05-20",
	"application_number": "10792678",
	"application_date": "2004-03-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Speech based learning/training system using semantic decoding",
	"summary": "",
	"abstract": "An intelligent query system for processing voiced-based queries is disclosed, which uses a combination of both statistical and semantic based processing to identify the question posed by the user by understanding the meaning of the user's utterance. Based on identifying the meaning of the utterance, the system selects a single answer that best matches the user's query. The answer that is paired to this single question is then retrieved and presented to the user. The system, as implemented, accepts environmental variables selected by the user and is scalable to provide answers to a variety and quantity of user-initiated queries.",
	"url": null,
	"owner": "Phoenix Solutions, Inc.",
	"publication_number": "07392185",
	"publication_date": "2008-06-24",
	"application_number": "10603998",
	"application_date": "2003-06-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Reliable method and system for efficiently transporting dynamic data across a network",
	"summary": "",
	"abstract": "A data networking system designed to provide efficient, yet reliable, transportation of data across a time division multiplexed network. This invention allows for redundantly sending data segments wherein if bad data segments are received, they can be resent in a dynamic manner depending on the network condition and segments can be fragmented, resized and sent with low overhead due to dynamic header sizes, segment sizes, forward error correction, and cyclic redundancy checks. The result is a very adaptive network that meets the demanding requirements of networks such as power line and wireless while still being able to transport data for voice, audio, video, computer, control, and the like.",
	"url": null,
	"owner": "Phonex Broadband Corporation",
	"publication_number": "07451381",
	"publication_date": "2008-11-11",
	"application_number": "10772034",
	"application_date": "2004-02-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Comprehensive front end method and system for automatically generating and processing photomask orders",
	"summary": "",
	"abstract": "The present invention relates to a comprehensive front-end method and system for automatically generating and processing photomask orders. This method and system includes two separate, but related software components. The first software component of the present invention is used to generate a photomask order in a specified format. The second software component of the present invention processes at least a portion of the photomask order (which was generated using the first software component) into a substantially ready-to-write jobdeck file and/or a substantially ready-to-write inspection file, which in turn is transferred to a remote photomask manufacturer's system to manufacture a photomask. These software components can be installed as separate programs on a computer system or operate as a single software package performing multiple functions.",
	"url": null,
	"owner": "Photronics, Inc.",
	"publication_number": "07356374",
	"publication_date": "2008-04-08",
	"application_number": "11140004",
	"application_date": "2005-05-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data storage and retrieval system with intensional category representations to provide dynamic categorization of information items",
	"summary": "",
	"abstract": "A system and method for applying intensional category representations to provide dynamic categorization of information items in a data storage and retrieval system is disclosed. The disclosed system may apply pattern recognition techniques during information storage and retrieval to provide dynamic categorization of information items. Information items are categorized as they are observed. Information items may each be associated with one or more categories. An information item may become a member of a category either initially, when it is created, or subsequently by dynamic acquisition of certain properties. Category membership may be further be acquired or lost when property values are changed, and/or as a result of changes to properties or property values of referenced or referring information items. The disclosed information storage and retrieval system operates to categorize objects as they evolve over time. Properties may be added to information items, thus changing the structure of the information item, with the result that new functionality is dynamically associated with the information items.",
	"url": null,
	"owner": "PI Corporation",
	"publication_number": "07412452",
	"publication_date": "2008-08-12",
	"application_number": "11039191",
	"application_date": "2005-01-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Concurrent code loading mechanism",
	"summary": "",
	"abstract": "A platform independent binary object (PIBO) operable on disparate computing environments that have a selected hardware architecture without requiring rebuilding or reloading is provided. The PIBO can be parsed to generate source-code stub file. The PIBO can be loaded and linked with a cooperating computing application by an exemplary linker/loader employing the stub file. Also, the PIBO can be used in various contexts, including but not limited to, as a mechanism for dynamically linking shared objects on platforms that do not offer such native facility; in utilizing pre-written code components on platforms that otherwise would be incompatible due to a violation of platform constraints within particular code; as a mechanism for loading non object-oriented code that circumvents restrictions of multiple execution instances and repeat execution inherent in the code; and as mechanism that allows for the use of a binary object to add on functionality on a closed platform.",
	"url": null,
	"owner": "Picsel (Research) Limited",
	"publication_number": "07444625",
	"publication_date": "2008-10-28",
	"application_number": "10964231",
	"application_date": "2004-10-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "User interface systems and methods for manipulating and viewing digital documents",
	"summary": "",
	"abstract": "Systems, including handheld computing devices that include system code stored within the memory and adapted to be executed by the processor. The system code can process an input byte stream that is representative of contents to be displayed on the touch sensitive display and can generate a content document file representative of an internal representation of the content. A tool document file may also be stored in the memory and may provide an internal representation of a document providing an image that is representative of a graphical tool. Associated with a tool document can be tool code that is capable of processing the content document file to create an internal representation of the contents that presents the content in a manner that achieves a display effect associated with the tool. The device will also include parsing code that processes the content document file, the tool document file, and the processed internal representation to generate a screen document for display on the touch sensitive display in a manner that portrays the display effect.",
	"url": null,
	"owner": "Picsel (Research) Limited",
	"publication_number": "07450114",
	"publication_date": "2008-11-11",
	"application_number": "09835458",
	"application_date": "2001-04-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Autonomic monitoring in a grid environment",
	"summary": "",
	"abstract": "A system for performing autonomic monitoring in a computing grid is described. The system includes a plurality of modules, which when implemented into a computing grid, are operable to analyze objects of the grid and identify exception conditions associated with the objects. The system includes a configuration module for receiving information on specified objects to be monitored and exception conditions for the objects, an information collection module to collect job execution data associated with the objects, and an exception module to evaluate the job execution data associated with the objects and identify existing exception conditions. Related methods of performing autonomic monitoring in a grid system are also described.",
	"url": null,
	"owner": "Platform Computing Corporation",
	"publication_number": "07340654",
	"publication_date": "2008-03-04",
	"application_number": "10871350",
	"application_date": "2004-06-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Identifying energy drivers in an energy management system",
	"summary": "",
	"abstract": "An application for determining energy drivers is disclosed. The application analyzes quantity metadata and energy usage data to determine at least one relationship. The quality of the relationship between quantity metadata and energy usage data is further assessed. Based on the determined relationship and the assessed quality, the energy driver is identified.",
	"url": null,
	"owner": "Power Measurement Ltd.",
	"publication_number": "07409303",
	"publication_date": "2008-08-05",
	"application_number": "10775761",
	"application_date": "2004-02-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for power quality analytics",
	"summary": "",
	"abstract": "A power quality analysis system includes a combination of at least one of a power quality parameter value, power quality event properties, non-power quality properties, and time properties. The parameter value and other properties is used to create power quality information that is descriptive of power quality events. The power quality information is easily configured and organized based on the desired options in order to make it more understandable and usable.",
	"url": null,
	"owner": "Power Measurement Ltd.",
	"publication_number": "07369950",
	"publication_date": "2008-05-06",
	"application_number": "11113728",
	"application_date": "2005-04-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for controlling and monitoring an array of point-of-load regulators by a host",
	"summary": "",
	"abstract": "A power control system comprises a plurality of POL regulators, at least one serial data bus operatively connecting the plurality of POL regulators, and a system controller connected to the serial data bus and adapted to send and receive digital data to and from the plurality of POL regulators. The serial data bus further comprises a first data bus carrying programming and control information between the system controller and the plurality of POL regulators. The serial data bus may also include a second data bus carrying fault management information between the system controller and the plurality of POL regulators. The power control may also include a front-end regulator providing an intermediate voltage to the plurality of POL regulators on an intermediate voltage bus.",
	"url": null,
	"owner": "Power-One, Inc.",
	"publication_number": "07456617",
	"publication_date": "2008-11-25",
	"application_number": "11165798",
	"application_date": "2005-06-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Opening price process for trading system",
	"summary": "",
	"abstract": "A system for determining an opening price for products traded over a distributed, networked computer system is described. The system includes a plurality of workstations for entering orders for financial products into the distributed, networked computer system, said orders specifying a quantity of the financial product. A plurality of workstations for entering orders and a server computer coupled to the workstations, said server computer executing a server process that determines an opening price for the product. The opening price process posting an allocation message to market maker participants to communicate an expected allocation of the imbalance for execution at an initial opening of the market in the event that the imbalance exists at the opening.",
	"url": null,
	"owner": "Primex Holdings, LLC",
	"publication_number": "07424454",
	"publication_date": "2008-09-09",
	"application_number": "11243951",
	"application_date": "2005-10-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for reducing network latency in data communication",
	"summary": "",
	"abstract": "Methods and systems for accelerating data communication by reducing network latency particularly by data compression in which requested data is recursively compressed by an encoder and sent to the requester in codes which may or may not be understood by the requester. The requester can subsequently request data corresponding to unknown codes. The request-reply sequence is also recursive and continues until the requested data is present at the requester. To further accelerate communication, a persistently connected network is employed, together with a new socket layer capable of combining multiple messages from different machines, threads, and/or processes into single TCP/IP packets to be relayed along message hubs in the persistent network. These features are introduced singly and combined to create a new caching network. A new content distribution network can take advantage of these data communication improvements since requested content can be distributed in caches in a caching network.",
	"url": null,
	"owner": "Propel Software Corporation",
	"publication_number": "07370120",
	"publication_date": "2008-05-06",
	"application_number": "10012743",
	"application_date": "2001-12-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for translating programming languages",
	"summary": "",
	"abstract": "A computer language translator that translates all or any portion thereof of source code in an original computer language to source code in a target computer language, which may then be translated back to the original language while still maintaining concept, syntax, form of expression, and formatting of the original source code.",
	"url": null,
	"owner": "PureNative Software Corporation",
	"publication_number": "07346897",
	"publication_date": "2008-03-18",
	"application_number": "10716099",
	"application_date": "2003-11-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for establishing a new user interface via an intermingled user interface",
	"summary": "",
	"abstract": "A method of separating a function of the business logic of an application from a user interface of the application where the business logic and user interface of the application are intermingled is provided. The method includes providing a wrapper interface for the application. The method also includes providing a function of the business logic of the application separated from the user interface of the application through the wrapper interface.",
	"url": null,
	"owner": "QAD Corporation",
	"publication_number": "07461385",
	"publication_date": "2008-12-02",
	"application_number": "10430045",
	"application_date": "2003-05-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for creating media presentations of computer software application programs",
	"summary": "",
	"abstract": "A system for producing presentations of computer application programs that also allows the inclusion of advertising, or other information, into a presentation and which can be updated by a central ad server. When the presentation is viewed offline, default ads are kept in the presentation. Authoring software is used to create a sequence of screenshot images of an application program to be presented. Each screenshot is a slide in the presentation and is displayed for an interval of time during playback of the presentation. Text description in the form of u201cbubble text,u201d u201cmemo text,u201d u201cquestions,u201d etc. can be specified along with the position, size and other properties of the text. Characteristics such as cursor shape, speed of movement, starting and ending positions, alignment, etc. can be set, and a u201cclick areau201d in association with a question, or prompt, to the viewer of the presentation can be specified. After a sequence has been completed, the sequence is compressed into a small self-contained package which includes two files that can be played back without a dedicated engine or specialized application that requires a separate download.",
	"url": null,
	"owner": "Qarbon.com, Inc.",
	"publication_number": "07360159",
	"publication_date": "2008-04-15",
	"application_number": "10665886",
	"application_date": "2003-09-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for processing asynchronous event notifications",
	"summary": "",
	"abstract": "Method and system for managing asynchronous event notifications (AENs) including comparing an AEN sequence number at a shared memory location with an AEN sequence number at a local memory location controlled by a application; acquiring an AEN from the shared memory, if the sequence number of the AEN in the local memory is different from the sequence number of the AEN in shared memory; determining if a version number of the AEN is current; and generating an AEN if the version number is not current, wherein the generated AEN allows other applications to update AEN version numbers. The system includes firmware code executed in an adapter; an adapter driver executed on a host computing system stores the AENs in a memory buffer; and a plurality of applications that use a shared memory where AENs and a version number associated with the AENs are stored.",
	"url": null,
	"owner": "QLOGIC, Corporation",
	"publication_number": "07457887",
	"publication_date": "2008-11-25",
	"application_number": "11502282",
	"application_date": "2006-08-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for processing network data packets",
	"summary": "",
	"abstract": "A system for transmitting and receiving TCP/IP data packets using a hardware engine is provided. The system includes an inbound MAC Receive state machine for processing MAC frames received from a network; an inbound IP verifier state machine for verifying IP packet headers; an inbound IP fragment processing state machine for processing and reassembling IP fragments; and an inbound TCP state machine for processing TCP segments received from an IP layer. The system also includes an outbound MAC Transmit state machine that sends MAC frames to a network; an outbound IP state machine that processes IP data to be passed to a MAC layer for transmission; and an outbound TCP state machine that processes TCP data to be passed to the IP layer for transmission.",
	"url": null,
	"owner": "QLOGIC, Corporation",
	"publication_number": "07403542",
	"publication_date": "2008-07-22",
	"application_number": "10620040",
	"application_date": "2003-07-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure virtual interface",
	"summary": "",
	"abstract": "A network interface for secure virtual interface data communication includes a doorbell circuit, a processor, memory, and a bridge circuit. The doorbell circuit responds to physical I/O addresses of the host that are mapped by a memory management unit by a registration process. An application program seeking to use a channel of a virtual interface must register the virtual address of host memory where data for communication is or will be stored and register the virtual address of a page of I/O addresses. Access to the doorbell functions and to the host memory via the memory management unit are therefore denied when the requesting process identifier does not successfully compare with the process identifier for the process that performed the registrations. A password may be stored in the network interface in association with a virtual interface (VI) channel identifier and stored in association with the virtual to physical map used for VI communication. The network interface may abandon a requested or implied data communication when passwords so not successfully compare. Methods for virtual interface (VI) communication performed by an application program may include one or more of the steps of (a) establishing a VI channel where physical I/O addresses of a network controller are secured; (b) registering host memory for use with a VI channel where physical memory addresses are secured; (c) describing blocks of host memory with reference to a memory handle; and (d) accomplishing data communication of a described block of host memory via an established VI channel where the data and controls of the VI channel are secured and the data and controls of other VI channels are secured. Security is provided against both erroneous operations and operations intentionally effected by rouge processes.",
	"url": null,
	"owner": "QLOGIC, Corporation",
	"publication_number": "07389399",
	"publication_date": "2008-06-17",
	"application_number": "11070858",
	"application_date": "2005-03-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "TCP time stamp processing in hardware based TCP offload",
	"summary": "",
	"abstract": "A method for sending/receiving a TCP segment is provided. The sending process includes, determining if a TCP port can be offloaded; saving a host system's time stamp value; replacing a host system's time stamp value with a TCP offload engine (u201cTOEu201d) adapter's time stamp value; and sending the TCP segment via the TOE adapter. The receiving process includes verifying if a TCP port is being offloaded by a host system to the TOE adpter; retrieving the host system's time stamp value; and inserting the host system's time stamp value in the received TCP segment before the forwarding the received TCP segment to the host system.",
	"url": null,
	"owner": "QLOGIC, Corporation",
	"publication_number": "07420991",
	"publication_date": "2008-09-02",
	"application_number": "11097024",
	"application_date": "2005-04-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer file management system",
	"summary": "",
	"abstract": "Computer systems with multiple users will typically store various versions of the same software; different versions being required for different platforms and to maintain compatibility with other software applications. These computer files are generally organized in a hierarchical structure to make their location and access easier, but this still results in a very complicated and inefficient system. The invention provides a custom file system which allows each user, node or system, to identify and manage only the files that are pertinent to it. This custom filesystem provides a custom hierarchical structure of files and folders, and links back to the real file locations in the main file system. The custom file system has priority over the main file system, in that a process manager will attempt to address requests on the custom filesystem before trying to place them on the main filesystem.",
	"url": null,
	"owner": "QNX Software Systems GmbH & Co. KG",
	"publication_number": "07461098",
	"publication_date": "2008-12-02",
	"application_number": "11436965",
	"application_date": "2006-05-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Custom filesystem having file mappings to files of a real filesystem",
	"summary": "",
	"abstract": "A computer system having a computer, a custom filesystem, and a real filesystem is disclosed. The custom filesystem is comprised of virtual files that may be mapped to a subset of real files of the real filesystem. The custom filesystem may provide an arrangement of the virtual files to a user through the user interface. This limited arrangement may present the virtual files in a hierarchical arrangement that may be easily navigated and customized for a particular computer, group of computers, computer user, or group of computer users. The custom filesystem may maintain its own metafile information for the virtual files.",
	"url": null,
	"owner": "QNX Software Systems GmbH & Co. KG",
	"publication_number": "07433900",
	"publication_date": "2008-10-07",
	"application_number": "11336421",
	"application_date": "2006-01-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and methods for associating a geographical position with an event occurring on a wireless device",
	"summary": "",
	"abstract": "Apparatus and methods for estimating a geographical position corresponding to an event associated with operation of a wireless device communicating in a wireless communications network. The time and distance between the occurrence of the event and the related time and speed of the wireless device of at least one of a first and second geographical position, respectively measured before and after the event, are analyzed. These analyses includes comparing those metrics to predetermined time and distance thresholds to associate and/or estimate a geographic position of the wireless device with the event.",
	"url": null,
	"owner": "Qualcomm Incorporated",
	"publication_number": "07400884",
	"publication_date": "2008-07-15",
	"application_number": "11139301",
	"application_date": "2005-05-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data channel resource optimization for devices in a network",
	"summary": "",
	"abstract": "A system, method, and program for optimizing the data channel availability on a computer device through selectively delaying the closing of an open channel on a computer network having expensive bandwidth, such as a cellular telecommunication network. The device has a plurality of device resources that utilize an open channel to communicate across the network, and optimally delays the closing of an open communication channel after cessation of usage thereof by a device resource such that other device resources can utilize the open communication channel prior to closure while still minimizing the duration of the expensive open channel.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "07472194",
	"publication_date": "2008-12-30",
	"application_number": "10187220",
	"application_date": "2002-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Remote interaction with a wireless device resident diagnostic interface across a wireless network",
	"summary": "",
	"abstract": "A system, method, and program for remotely interacting with a diagnostic interface resident on wireless computer devices. The wireless device provides an accessible diagnostic interface that allows reads and/or writes to device resident diagnostic data and tools. Through use of the interaction, wireless device status data and network status data can be gathered and utilized, and if so embodied, the diagnostic tools resident on the wireless devices can be manipulated to alter wireless device operation.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "07324815",
	"publication_date": "2008-01-29",
	"application_number": "10413702",
	"application_date": "2003-04-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for temporary application component deletion and reload on a wireless device",
	"summary": "",
	"abstract": "A system and method for managing the deleting and reloading of software application components on a wireless device, such as a cellular telephone, personal digital assistant, pager, or other computer platform. The wireless device has one or more resident executable software applications wherein each application has one or more application components and application-associated data, such as software licenses and user-specific data. The wireless device selectively deletes one or more application components of the resident software applications without loss of the application-associated data to clear resources on the wireless device, and selectively prompts an application download server across a wireless network to transmit deleted application components needed to be reinstalled on the wireless device to execute the application.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "07454199",
	"publication_date": "2008-11-18",
	"application_number": "11221091",
	"application_date": "2005-09-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems, devices and methods for providing a reward based upon use of a mobile communications device",
	"summary": "",
	"abstract": "The disclosed embodiments provide systems, devices and methods for providing a reward to a user of a mobile communications device. The described embodiments, for example, may include a mobile communications device that exchanges query data and response data with a computer system over a communications network. The computer system includes an evaluation application operable to determine a predetermined reward based on, at least in part, the received response data. The response data is received by the mobile communications device from the user in response to query data presented to the user by the mobile communications device. The predetermined reward, for example, may affect an operational characteristic of the mobile communications device on the wireless network. Also disclosed are systems, devices and methods that include an outcome application, associated with the computer system, that generates an outcome determination based on, at least in part, the response data.",
	"url": null,
	"owner": "Qualcomm Incorporated",
	"publication_number": "07359723",
	"publication_date": "2008-04-15",
	"application_number": "11196756",
	"application_date": "2005-08-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Wireless multiprocessor system-on-chip with unified memory and fault inhibitor",
	"summary": "",
	"abstract": "Wireless mobile communication device includes unified memory portion; processing units coupled with, and communicating through, unified memory; fault inhibitor coupled with unified memory inhibiting operational fault from nocent informon. Memory, fault inhibitor, and processing units fabricated on monolithic integrated circuit as system-on-chip disposed in wireless mobile personal host. Multiprocessor module includes fault inhibitor and applications and communications processing units and buses, coupled with unified memory. Integrated functional constituent can include coprocessor, accelerator, operational control unit, interprocessor controller, memory controller, bus management unit, bridge, arbiters, and transceiver. Method inhibits operational fault from nocent informon, setting device in operational or fallback state.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "07450959",
	"publication_date": "2008-11-11",
	"application_number": "10841739",
	"application_date": "2004-05-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for distributing content objects in a telecommunication system",
	"summary": "",
	"abstract": "The present invention provides systems and methods for distributing content objects to a requester. Some of the systems include at least one content object origination, and two or more content object destinations. The two or more content object destinations are associated with customer premises. Communication links communicably couple the content object origination and at least one of the content object destinations, and at least two of the content object destinations. Local storage is associated with at least one of the content object destinations. A content object from the content object origination is maintained on a local storage associated with one of the content object destinations, and the content object is accessible via the local storage to another content object destination. The methods provide various ways for distributing content objects using systems similar to that previously described.",
	"url": null,
	"owner": "Qwest Communications International Inc",
	"publication_number": "07376386",
	"publication_date": "2008-05-20",
	"application_number": "10452996",
	"application_date": "2003-06-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems, methods and apparatus for providing a plurality of telecommunication services",
	"summary": "",
	"abstract": "Embodiments of the invention provide network interface devices, as well as system and methods for using them. For example, in accordance with one embodiment of the invention, a system is provided for allowing a plurality of telecommunication information providers to transmit telecommunication information to a customer premises. The system can include a network interface device operable to receive a plurality of sets of telecommunication information. Each of the information sets can be associated with a particular telecommunication service and/or all of the information sets can be associated with the same telecommunication service.",
	"url": null,
	"owner": "Qwest Communications International Inc.",
	"publication_number": "07454006",
	"publication_date": "2008-11-18",
	"application_number": "10356688",
	"application_date": "2003-01-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for developing user interfaces purely by modeling as meta data in software application",
	"summary": "",
	"abstract": "A system, method and computer program that enables an application designer to automate the process of development of user interfaces (UIs). The designer develops UIs by modeling. The process of development of UI applications by modeling does not require any coding. The modeling activity is accomplished by using the visual modeling environment, which among other tools comprises a set of pre-built reusable components. Each component represents a dimension of functionality that is commonly required in UI applications. The designer specifies application-specific context for the components. Components when provided with application specific context become tasks. The tasks are then connected together in a logical order to develop an application. The applications thus developed are then visually verified. These applications are then executed by an Engine.",
	"url": null,
	"owner": "Rage Frameworks, Inc.",
	"publication_number": "07451403",
	"publication_date": "2008-11-11",
	"application_number": "10742342",
	"application_date": "2003-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Modular and expandable irrigation controller",
	"summary": "",
	"abstract": "Described herein are several embodiments relating to modular irrigation controllers. In many implementations, the irrigation controllers are modular in that various functional components of the irrigation controller are implemented in removable modules that when inserted into position within the controller, expand the capabilities of the controller. Also described are various different types of expansion modules that may be coupled to the modular controller, having as variety of functions and features, as well as related methods of use and configuration of these modules in the controller. In one implementation, an expansion module is provided that includes a microcontroller capable of sending and receiving data communications to and from the a main microcontroller of the controller that executed irrigation programs, the data communications relating to an irrigation program.",
	"url": null,
	"owner": "Rain Bird Corporation",
	"publication_number": "07444207",
	"publication_date": "2008-10-28",
	"application_number": "11022179",
	"application_date": "2004-12-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Scene graph based display for desktop applications",
	"summary": "",
	"abstract": "A method and apparatus for rapidly displaying air traffic control (ATC) information on an ATC display provides a two-dimensional (2D) scene graph and associated 2D scene graph display commands in conjunction with a thee-dimensional graphic card. In other embodiments, any desktop application software can make use of a 2D scene graph and associated 2D scene graph display commands in order to rapidly render a 2D display.",
	"url": null,
	"owner": "Raytheon Company",
	"publication_number": "07436406",
	"publication_date": "2008-10-14",
	"application_number": "10617599",
	"application_date": "2003-07-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of providing a financial event identification service",
	"summary": "",
	"abstract": "A method of providing a financial event identification service using a database of fundamental event data or technical event data comprises: receiving a request for fundamental event data or technical event data from a from a client application; querying the database based on the request and client application specific selection criteria to obtain suitable fundamental event data or technical event data; and transmitting the fundamental event data or technical event data to the client application.",
	"url": null,
	"owner": "Recognia Incorporated",
	"publication_number": "07469226",
	"publication_date": "2008-12-23",
	"application_number": "10316031",
	"application_date": "2002-12-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of rule constrained statistical price formation recognition",
	"summary": "",
	"abstract": "A method of developing a rule-constrained statistical pattern recognizer applicable to price formation recognition includes assembling input data containing examples of patterns to be recognized and establishing mandatory recognition rules. The recognition rules are programmed to construct an underspecified or underconstrained recognition model which is applied to the assembled data to produce candidate patterns. The candidate patterns are reviewed and identified as valid or invalid and for each pattern type a residual statistical model is produced based on the candidate patterns identified as valid. A filter is used to ensure that custom conditions such as duration relationships, height relationships and volume requirements are met.",
	"url": null,
	"owner": "Recognia Incorporated",
	"publication_number": "07469238",
	"publication_date": "2008-12-23",
	"application_number": "10316015",
	"application_date": "2002-12-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for international roaming and call bridging",
	"summary": "",
	"abstract": "Disclosed is an enhanced system and method for bridging calls across telecommunications networks, including an illustrative application of the invention as it relates to international roaming among prepaid wireless subscribers. For instance, whenever wireless subscribers roam internationally they may invoke the system by keying in an Unstructured Supplementary Service Data (USSD) short code followed by the number to be dialed. Said subscriber's prepaid account is then decremented in real-time (until such account is fully depleted). A key feature of the disclosure generally is the bridging of the call legs between the wireless subscriber initiating the telephone communication and that of the receiving party through a series of general purpose databases and computers without requiring modifications to existing core network or handset infrastructure.",
	"url": null,
	"owner": "RedKnee Inc.",
	"publication_number": "07330725",
	"publication_date": "2008-02-12",
	"application_number": "11335636",
	"application_date": "2006-01-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for the prevention of unwanted wireless telecommunications",
	"summary": "",
	"abstract": "The invention of present speaks to a method and system for the prevention of unwanted wireless telecommunications which is implemented as part of a computer program product in (preferentially) the telecommunications operator's network, which meets and/or exceeds much of current, proposed and even academically anticipated legislative (and by necessity, technical) criteria, and indeed, thereby complies with the broader body of prima facie consumer requirements associated with wireless telecommunications spam filtering. Indeed, the invention provides for a remarkably flexible and customizable advance in the art through the utilization of a progressive filtering algorithm. This algorithm offers both the subscriber and the service provider with the capability to block and/or extract potentially harmful or unsolicited SMS, MMS and other such messages on the basis of an extensive range of parameters and rules.",
	"url": null,
	"owner": "Redknee Inc.",
	"publication_number": "07369867",
	"publication_date": "2008-05-06",
	"application_number": "11318931",
	"application_date": "2005-12-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for the prevention of unwanted wireless telecommunications",
	"summary": "",
	"abstract": "The invention of present speaks to a method and system for the prevention of unwanted wireless telecommunications which is implemented as part of a computer program product in (preferentially) the telecommunications operator's network, which meets and/or exceeds much of current, proposed and even academically anticipated legislative (and by necessity, technical) criteria, and indeed, thereby complies with the broader body of prima facie consumer requirements associated with wireless telecommunications spam filtering. Indeed, the invention provides for a remarkably flexible and customizable advance in the art through the utilization of a progressive filtering algorithm. This algorithm offers both the subscriber and the service provider with the capability to block and/or extract potentially harmful or unsolicited SMS, MMS and other such messages on the basis of an extensive range of parameters and rules.",
	"url": null,
	"owner": "Redknee Inc.",
	"publication_number": "07409203",
	"publication_date": "2008-08-05",
	"application_number": "10704735",
	"application_date": "2003-11-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for implementing an internet protocol (IP) charging and rating middleware platform and gateway system",
	"summary": "",
	"abstract": "A method and a system for enabling a telecommunication network operators to transparently intermediate P data flow, by providing a highly scalable, and superior data classification method for implementing policy based filtering, forwarding, accounting and/or monitoring of informational packets of interest; and indeed, is intended to exploit the resiliency of open network architecture and lessen the requisite dependency on proprietary network elements services and other such systems.",
	"url": null,
	"owner": "Redknee Inc.",
	"publication_number": "07457865",
	"publication_date": "2008-11-25",
	"application_number": "10348972",
	"application_date": "2003-01-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Telecommunications subscriber profile management system",
	"summary": "",
	"abstract": "The invention herein discloses technological advancements as they pertain to telecommunications technologies and subscriber profile management systems. In particular, the invention relates to a vendor independent mediation layer utilizing subscriber management objects articulated through certain methods, systems, algorithms and logical steps outlined herewith. Thus, the invention presents a computer program product implemented secure transactional-based system and method of accessing subscriber information distributed among a base of heterogeneous (multi-vendor) HLRs, and other such multi-vendor telecommunications network elements.",
	"url": null,
	"owner": "Redknee Inc.",
	"publication_number": "07379737",
	"publication_date": "2008-05-27",
	"application_number": "10638377",
	"application_date": "2003-08-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mobile device with integrated camera operations",
	"summary": "",
	"abstract": "A mobile device with an integrated camera responsive to signals from a camera activator. The mobile device includes application programs capable of editing documents. The user triggers the device operating system to switch from an active application program in which the user is editing a document to a camera application by activating the camera activator. The user then captures an image by again triggering the camera activator, whereupon the active application is restored and the image data is inserted within the document. The captured image is directly inserted into an input field within the open document in the active application.",
	"url": null,
	"owner": "Research in Motion Limited",
	"publication_number": "07365787",
	"publication_date": "2008-04-29",
	"application_number": "10786002",
	"application_date": "2004-02-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for configuring access to electronic mailboxes",
	"summary": "",
	"abstract": "A system and method for configuring access to an electronic mailbox based on limited configuration parameters received from a user. A database stores configuration conventions for a mail domain. A mailbox interface module receives configuration information from a user that is limited in the configuration parameters required for accessing the electronic mailbox. The module retrieves configuration conventions for the mail domain from the database and generates sets of potentially valid configuration parameters based on the retrieved configuration conventions and user supplied configuration information for accessing the mailbox.",
	"url": null,
	"owner": "Research In Motion Limited",
	"publication_number": "07373386",
	"publication_date": "2008-05-13",
	"application_number": "10778590",
	"application_date": "2004-02-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for developing and deploying radio frequency identification enabled software applications",
	"summary": "",
	"abstract": "A system, method and related software architecture are disclosed as a platform for developing and deploying RFID-enabled software applications. The platform is a framework between these applications and their connected physical RFID devices. The runtime version of this platform can be thought of as a logical RFID device. The platform allows RFID-enabled applications securely communicate with physical RFID devices to monitor their status and to access their tag data. The platform includes externalized APIs for accessing tag data, an event manager to alert applications of events coming from RFID devices and tags, data manager to filter and reconcile data returned from physical RFID readers before relaying them to applications, device manager to monitor the RFID device status for network management, and secured communication channels with data encryption. The deployed RFID-enabled applications can recognize user identification via the RFID tags then access data of selected RFID tags within a secured infrastructure.",
	"url": null,
	"owner": "RFCyber Corp.",
	"publication_number": "07317394",
	"publication_date": "2008-01-08",
	"application_number": "11029867",
	"application_date": "2005-01-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for communicating with a device attached to a computer using electronic mail messages",
	"summary": "",
	"abstract": "A method, system, and computer program product for communicating with machines connected to a network. Information sent to or from the machines is transmitted using electronic mail. The electronic mail may be transmitted over the Internet, but also may remain within a local or wide area network. When receiving electronic mail, the electronic mail message may be sent to a user who reads information regarding the purpose of the electronic mail message in the body of the message. When the user is satisfied that it is safe to perform the functions requested by the email, the user may execute a file which is attached to the incoming email message in order to perform the appropriate diagnostic or control operations. Alternatively, the incoming email message may contain a code or is sent to an address which causes automatic execution of the desired functions. In this embodiment, it may not be necessary for the user to manually perform any action in order to allow the appropriate processing to begin. Email messages may also be transmitted from the computer which is attached to the device which is being monitored or controlled and include information regarding the status or capabilities of the attached device.",
	"url": null,
	"owner": "Ricoh Americas Corporation",
	"publication_number": "07428575",
	"publication_date": "2008-09-23",
	"application_number": "09192583",
	"application_date": "1998-11-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for remote diagnostic, control and information collection based on various communication modes for sending messages to a resource manager",
	"summary": "",
	"abstract": "A method, system, and program product for communicating with machines connected to a network. Information sent to or from the machines is transmitted using electronic mail or a via a direct connection. The electronic mail may be transmitted over the Internet to a service center or from a service center to a resource administrator, but also may remain within a local or wide area network for transmission between a machine and a resource administrator. E-mail messages may be transmitted from a computer which is attached to a device which is being monitored or controlled and include information regarding the status, usage or capabilities of the attached device. The device may send status messages and usage information of the device to either a resource administrator or to a service center on the Internet through a firewall. The message may be sent directly to the resource administrator station if urgent service is needed by the device. For routine information, the service center may manage all the resources on an intranet and may send predetermined types of information to the resource administrator using e-mail.",
	"url": null,
	"owner": "Ricoh Co., Ltd.",
	"publication_number": "07383359",
	"publication_date": "2008-06-03",
	"application_number": "10638540",
	"application_date": "2003-08-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for remote diagnostic, control and information collection based on various communication modes for sending messages to users",
	"summary": "",
	"abstract": "A method, system, and program product for communicating with machines and end users connected to a network. Information sent to or from the machines is transmitted using electronic mail or a via a direct connection. The electronic mail may be transmitted over the Internet to a service center or from a service center to a resource administrator, but also may remain within a local or wide area network for transmission between a machine and an end user or a resource administrator. E-mail messages may be transmitted from a computer which is attached to a device which is being monitored or controlled and include information regarding the status, usage or capabilities of the attached device. The device may send status messages and usage information of the device by an end user to either a resource administrator or to a service center on the Internet through a firewall. The message may be sent directly to the resource administrator station if an urgent need of the end user is indicated, so that a communication may be sent either directly to the end user or to a device driver so that the device driver may communicate the message to the end user. For example, an end user may have exceeded a predetermined limit of resource usage, and needs to be informed. For routine information, the service center may manage all the resources on an intranet and may send predetermined types of information such as summary information regarding usage of network resources to the end user using e-mail.",
	"url": null,
	"owner": "Ricoh Co., Ltd.",
	"publication_number": "07353273",
	"publication_date": "2008-04-01",
	"application_number": "11390198",
	"application_date": "2006-03-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system of remote diagnostic, control and information collection using a shared resource",
	"summary": "",
	"abstract": "A system, method and program product for diagnosing, controlling and collecting information from devices. Information regarding events of a target application executing in an application unit is collected and formatted into one of multiple data formats for transmission through one of multiple communication protocols using at least one shared system resource. The formatted data is transmitted through, e.g., e-mail or FTP to a predetermined destination or may be saved to local storage, e.g., a local disk. By sharing resources, code duplication is reduced or eliminated.",
	"url": null,
	"owner": "Ricoh Co., Ltd.",
	"publication_number": "07392307",
	"publication_date": "2008-06-24",
	"application_number": "09782187",
	"application_date": "2001-02-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system of remote diagnostic, control and information collection using multiple formats and multiple protocols with verification of formats and protocols",
	"summary": "",
	"abstract": "A system, method and program product for diagnosing, controlling and collecting information from devices. Information regarding events of each one of a plurality of target applications executing in an application unit is collected and formatted into one of multiple data formats for transmission through one of multiple communication protocols at the request of each of the target applications, through an interface. A combination of a data format and communication protocol requested by a target application is verified for validity. If the requested combination is invalid, a valid combination is substituted for more reliable transmission. The formatted data is transmitted through, e.g., e-mail or FTP to a predetermined destination or may be saved to local storage, e.g., a local disk. By sharing resources, code duplication is reduced or eliminated.",
	"url": null,
	"owner": "Ricoh Co., Ltd.",
	"publication_number": "07363627",
	"publication_date": "2008-04-22",
	"application_number": "11437627",
	"application_date": "2006-05-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Image processing apparatus and method of automatic reboot",
	"summary": "",
	"abstract": "An image processing apparatus is disclosed that, when falling in failures possibly being fixable by switching off/on electric power, is able to be automatically and appropriately rebooted and does not involve disagreement in counts of different counters used for management actions in the course of rebooting process. The image processing apparatus, which has hardware resources used for image formation and programs used for controlling the image formation, includes a failure detection unit to detect a rebooting failure from type A or D failures which are possibly fixable by switching off/on electric power of the image processing apparatus, and a reboot unit to reboot the hardware resources and the programs. The image processing apparatus may further include an operation halting unit to halt operations of the hardware resources and the programs when the rebooting failure is detected.",
	"url": null,
	"owner": "Ricoh Company, Ltd.",
	"publication_number": "07391979",
	"publication_date": "2008-06-24",
	"application_number": "11045353",
	"application_date": "2005-01-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Imaging apparatus and print control method for an imaging apparatus",
	"summary": "",
	"abstract": "An imaging apparatus comprises a plurality of different types of imaging means, each associated with one of a plurality of different types of imaging applications, each imaging application producing a print job containing image data; an engine configured to cause the image data to be reproduced on a recording medium; and an image data regulation manager used in common among the different types of applications and configured to interface the image data from said different types of applications between the engine and said different types of applications.",
	"url": null,
	"owner": "Ricoh Company, Ltd.",
	"publication_number": "07349109",
	"publication_date": "2008-03-25",
	"application_number": "10251833",
	"application_date": "2002-09-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information processing apparatus and session management method",
	"summary": "",
	"abstract": "An information processing apparatus is provided, in which information processing apparatus communicates with a terminal connected to a network by using an HTTP protocol and performs processes requested by the terminal, and the information processing apparatus includes: a cookie information setting part for setting a predetermined string, as cookie information, in an HTTP response corresponding to a first HTTP request sent from the terminal; and a cookie information determining part for determining whether a second HTTP request includes the predetermined string as cookie information, wherein the second HTTP request is sent from the terminal after the first HTTP request is sent and indicates a start of a session between the terminal and the information processing apparatus.",
	"url": null,
	"owner": "Ricoh Company, Ltd.",
	"publication_number": "07395338",
	"publication_date": "2008-07-01",
	"application_number": "10823565",
	"application_date": "2004-04-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus, method and system for providing automated services to heterogenous devices across multiple platforms",
	"summary": "",
	"abstract": "A system to provide automated services to heterogeneous devices in a network environment, which includes a device agent residing on each of the heterogeneous devices, a device communicator to register and synchronize the devices via each of the device agents, and a portal server to interface multiple content sources on behalf of the devices, wherein the devices communicate with the portal server via each of the device agents and the device communicator.",
	"url": null,
	"owner": "Robert Bosch GmbH",
	"publication_number": "07398327",
	"publication_date": "2008-07-08",
	"application_number": "10723747",
	"application_date": "2003-11-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Embedded database systems and methods in an industrial controller environment",
	"summary": "",
	"abstract": "The present invention relates to systems and processes that provide network database interactions in an industrial controller environment. A database protocol component operating in a control environment is provided to convert control or factory protocols to a native language format associated with a network database. Such databases may be accessed in a structured format, wherein one or more control components may be adapted in a client and/or server configuration to freely exchange data in the structured format associated with the database. The database protocol component sends commands and/or data in the structured format when exchanging data with the database while converting the structured format to one or more protocols associated with an industrial control system when receiving commands and/or data therefrom.",
	"url": null,
	"owner": "Rockwell Automation Technologies, Inc.",
	"publication_number": "07467018",
	"publication_date": "2008-12-16",
	"application_number": "10298852",
	"application_date": "2002-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods that facilitate management of add-on instruction generation, selection, and/or monitoring during execution",
	"summary": "",
	"abstract": "The subject invention relates to systems and methods that facilitate display, selection, and management of context associated with execution of add-on instructions. The systems and methods track add-on instruction calls provide a user with call and data context, wherein the user can select a particular add-on instruction context from a plurality of contexts in order to observe values and/or edit parameters associated with the add-on instruction. The add-on instruction context can include information such as instances of data for particular lines of execution, the add-on instruction called, a caller of the instruction, a location of the instruction call, references to complex data types and objects, etc. The systems and methods further provide a technique for automatic routine selection based on the add-on instruction state information such that the add-on instruction executed corresponds to a current state.",
	"url": null,
	"owner": "Rockwell Automation Technologies, Inc.",
	"publication_number": "07457671",
	"publication_date": "2008-11-25",
	"application_number": "10955692",
	"application_date": "2004-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Intellectual asset protocol for defining data exchange rules and formats for universal intellectual asset documents, and systems, methods, and computer program products related to same",
	"summary": "",
	"abstract": "An intellectual asset protocol for defining data exchange rules and formats for universal intellectual asset data objects, and systems, methods, and computer program products related to same. The system includes an intellectual asset protocol system that acts as an engine in the definition of data exchange rules and formats for universal intellectual asset documents. Also included is a front end system that preferably provides a graphical user interface to enable users to access the intellectual asset protocol system. In addition, an intellectual asset database is included that stores collections of intellectual asset objects (and information related to same), one or more embodiments of an intellectual asset protocol, and so forth. The intellectual asset protocol system interacts with an Intellectual Property Asset Manger (IPAM) server.",
	"url": null,
	"owner": "Rose Blush Software LLC",
	"publication_number": "07437471",
	"publication_date": "2008-10-14",
	"application_number": "11178367",
	"application_date": "2005-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for avoiding base address collisions",
	"summary": "",
	"abstract": "Processes are monitored as components are loaded into memory. Relocation of a component to an alternate base address instead of its preferred base address, causes an alternate component to be created corresponding to the relocated component. The alternate component is a copy of the relocated component, but the preferred base address of the alternate component is reset to be the alternate base address of the relocated component. Additional alternate components may be created for each relocated component, with each additional alternate component being optimized in a different manner. Alternate components may be implemented as alternate data stream of the corresponding relocated components. In response to subsequent requests to load a selected component into memory, it is determined whether the selected component has at least one corresponding alternate component. If so, one of the corresponding alternate components is loaded into memory instead of the selected component.",
	"url": null,
	"owner": "RTO Software, Inc.",
	"publication_number": "07461228",
	"publication_date": "2008-12-02",
	"application_number": "11376705",
	"application_date": "2006-03-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for building a database defining a plurality of communication interfaces",
	"summary": "",
	"abstract": "A system and method for providing seamless communication with threads executing on an embedded computer. Using a DAT system, a programmer can test the communication interfaces of a thread via either a scripting program, any COM-compliant program, or a graphical test utility. The DAT system automatically formats a block of data that is transmitted between the embedded computer and a host computer and accounts for machine specific enumeration sizes, machine specific pointer sizes, machine specific structure alignment boundaries, machine specific integer sizes, and machine specific byte ordering.",
	"url": null,
	"owner": "S2 Technologies, Inc.",
	"publication_number": "07359911",
	"publication_date": "2008-04-15",
	"application_number": "10104989",
	"application_date": "2002-03-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for formatting data for transmission between an embedded computer and a host computer having different machine characteristics",
	"summary": "",
	"abstract": "A system and method for providing seamless communication with threads executing on an embedded computer. Using a DAT system, a programmer can test the communication interfaces of a thread via either a scripting program, any COM-compliant program, or a graphical test utility. The DAT system automatically formats a block of data that is transmitted between the embedded computer and a host computer and accounts for machine specific enumeration sizes, machine specific pointer sizes, machine specific structure alignment boundaries, machine specific integer sizes, and machine specific byte ordering.",
	"url": null,
	"owner": "S2 Technologies, Inc.",
	"publication_number": "07392526",
	"publication_date": "2008-06-24",
	"application_number": "11500616",
	"application_date": "2006-08-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for accessing information from multiple remote sources",
	"summary": "",
	"abstract": "In accordance with the present invention a process is provided for interfacing a legacy application and internet-based application and for displaying information from each application in a frame of a multi-frame browser on a client workstation. Further, the interface system enables users to transact business with the legacy application based on information retrieved from the internet-based application, and to retrieve information from the internet-based application based on information retrieved from the legacy application.",
	"url": null,
	"owner": "Sabre Inc.",
	"publication_number": "07350150",
	"publication_date": "2008-03-25",
	"application_number": "10677469",
	"application_date": "2003-10-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software protection method utilizing hidden application code in a protection dynamic link library object",
	"summary": "",
	"abstract": "A system and method in which the operating system of the user computer loads the software application and a DLL having a portion of the application execution code stored therein into memory is disclosed. At selected points during its execution, the software application calls the DLL to execute a portion of the application code that was saved into the DLL before delivery to the end user. Since this code is encrypted and the encryption key is stored in a hardware security device and not in the DLL or the software application, the application code portion cannot be executed without recovering the key.",
	"url": null,
	"owner": "SafeNet, Inc.",
	"publication_number": "07320075",
	"publication_date": "2008-01-15",
	"application_number": "10298701",
	"application_date": "2002-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for performing an online software upgrade of resource servers",
	"summary": "",
	"abstract": "A switch for handling call connections between calling devices and called devices. The switch comprises: 1) at least one system management node associated with a configuration management controller, the configuration management controller for performing an online upgrade of software in the switch by loading upgraded software in a new partition while original software is executed in a reference partition; and 2) a plurality of computing nodes for executing primary-backup resource server applications. Each of the primary-backup resource server applications comprises a primary resource server application and a secondary resource server application residing on a different node than the primary resource server application. A plurality of the primary-backup resource server applications form a resource group and an address of the resource group is known in the reference partition and in the new partition.",
	"url": null,
	"owner": "Samsung Electronics Co., Ltd.",
	"publication_number": "07379419",
	"publication_date": "2008-05-27",
	"application_number": "10641336",
	"application_date": "2003-08-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing an online software upgrade",
	"summary": "",
	"abstract": "A system and method is disclosed for providing an online software upgrade in a switch in a telecommunications system. The switch comprises: 1) a main processing unit for executing call process client applications associated with call connections; and 2) call application nodes for executing call process server applications; and 3) system management nodes. A configuration management controller associated with a system management node executes an online software upgrade for the software in the switch while the switch is executing the software that is being upgraded. Each new software upgrade is tested before the software upgrades are made operational in the switch.",
	"url": null,
	"owner": "Samsung Electronics Co., Ltd.",
	"publication_number": "07463610",
	"publication_date": "2008-12-09",
	"application_number": "10439256",
	"application_date": "2003-05-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing an online software upgrade in load sharing servers",
	"summary": "",
	"abstract": "A system and method are disclosed for providing an online software upgrade in a switch in a telecommunications system. The switch includes: 1) a main processing unit for executing call process client applications associated with call connections; 2) call application nodes for executing call process server applications; and 3) system management nodes. A configuration management controller associated with a system management node executes an online software upgrade for the software in the switch while the switch is executing the software that is being upgraded. At least one load sharing policy is capable of associating at least one of the call process client applications with at least one of the call process server applications and to throttle new associations involving the call process server applications.",
	"url": null,
	"owner": "Samsung Electronics Co., Ltd.",
	"publication_number": "07356577",
	"publication_date": "2008-04-08",
	"application_number": "10459748",
	"application_date": "2003-06-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Telecommunication switch using generic API to support multiple protocol-specific signal control functions",
	"summary": "",
	"abstract": "A switch for use in a telecommunication network is provided that includes a plurality of call control agent functions and a call control function. At least two of the call control agent functions are associated with different signaling protocols. The signaling protocols define a plurality of signaling control primitives. The call control function is operable to control routing of telephone calls through the switch. The call control function is accessed using an application programming interface (API). The API includes a plurality of classes defining objects representing the signaling control primitives.",
	"url": null,
	"owner": "Samsung Electronics Co., Ltd.",
	"publication_number": "07454007",
	"publication_date": "2008-11-18",
	"application_number": "10810493",
	"application_date": "2004-03-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed processor allocation for launching applications in a massively connected processors complex",
	"summary": "",
	"abstract": "A compute processor allocator architecture for allocating compute processors to run applications in a multiple processor computing apparatus is distributed among a subset of processors within the computing apparatus. Each processor of the subset includes a compute processor allocator. The compute processor allocators can share a common database of information pertinent to compute processor allocation. A communication path permits retrieval of information from the database independently of the compute processor allocators.",
	"url": null,
	"owner": "Sandia Corporation",
	"publication_number": "07454595",
	"publication_date": "2008-11-18",
	"application_number": "11110466",
	"application_date": "2005-04-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for frame-based knowledge representation in the unified modeling language (UML)",
	"summary": "",
	"abstract": "According to an embodiment of the present invention, there is provided a method and system for emulating a knowledge representation in a Unified Modeling Language (UML) environment. A Meta-Object Facility metamodel and UML profile are grounded in a foundation ontology. The elements representing the knowledge representation ontology are mapped to elements of UML, based on the grounded Meta-Object Facility metamodel and UML profile, thereby emulating the knowledge representation in a UML environment.",
	"url": null,
	"owner": "Sandpiper Software, Inc.",
	"publication_number": "07424701",
	"publication_date": "2008-09-09",
	"application_number": "10499961",
	"application_date": "2003-02-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for delivering messages to a mobile information terminal",
	"summary": "",
	"abstract": "A mobile information terminal receives the delivery of a message from a message delivery server that generates messages that indicate identifiers for mobile applications and processing commands executed by the mobile applications. In one embodiment, a mobile service driver receives a message sent from the message delivery server; a push driver control unit receives the message reception notification from the message service driver and notifies message receiving units that have been registered in advance for message notification about the message reception. The message receiving unit notifies relevant mobile applications among the plurality of mobile applications about the received message based on the identifier of the mobile application indicated by the received message, where notification is provided by the push driver control unit.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07366505",
	"publication_date": "2008-04-29",
	"application_number": "11148353",
	"application_date": "2005-06-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic testing of graphics programs",
	"summary": "",
	"abstract": "A method and system to automatically test graphical output. A graphical output is generated in a format that permits automatic comparison with a reference graphic. The reference graphic is created and retained in the test format. The test format reference graphic is compared with the test format output graphic. The results of the comparison are used to generate a report of the discrepancies between the reference graphic and the output graphic.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07417632",
	"publication_date": "2008-08-26",
	"application_number": "11003818",
	"application_date": "2004-12-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Byte code modification for testing, debugging and/or monitoring of virtual machine based software",
	"summary": "",
	"abstract": "A method is disclosed that comprises modifying a method's byte code instructions for purposes of testing, debugging and/or monitoring. Additional byte code instructions are inserted into the method's byte code instructions at an entry point of the method and at an exit point of the method. The first additional byte code instruction causes a first output function to be executed for the method as a consequence of the entry point being reached during runtime. The second additional byte code instruction causes a second output function to be executed for the method as a consequence of the exit point being reached during runtime. The Application of the method to Distributed Statistical Record (DSR) keeping is also disclosed.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07367025",
	"publication_date": "2008-04-29",
	"application_number": "10750067",
	"application_date": "2003-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Centralized cache storage for runtime systems",
	"summary": "",
	"abstract": "Described herein are methods and apparatus, including computer program products, that implement a centralized cache storage for runtime systems. A computer program product can include instructions operable to receive a request at a centralized shared cache framework to store an entity; cache the entity in a shared memory in response to the request, where the shared memory is operable to store the entity such that the entity is accessible to runtime systems, and caching the entity in the shared memory comprises storing the entity for one of the runtime systems; receive a request at the centralized shared cache framework to retrieve the entity from the shared memory; and if the entity is stored in the shared memory, retrieve the stored entity from the shared memory, where the centralized shared cache framework is operable to retrieve the entity for any of the runtime systems.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07418560",
	"publication_date": "2008-08-26",
	"application_number": "10949538",
	"application_date": "2004-09-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Classfile conversion into an organization of objects, and modification thereof, to effect bytecode modification",
	"summary": "",
	"abstract": "A classfile modification method is described. The classfile modification method entails converting a classfile into a collection of objects whose organization is derived from the classfile's organization. The collection of objects comprise unique objects for each method information structure found in the classfile. Each of the unique objects reference other objects in the organization. The other objects represent their corresponding unique object's method information structure's byte code instructions. The classfile modification method also entails adding at least one additional other object to an arrangement of other objects that are referenced to a unique object. The at least one additional other object corresponds to at least one byte code instruction that causes a plug-in module's handler method to provide output function treatment for the unique object's method. The classfile modification method also entails converting the resulting collection of objects into a modified version of the classfile.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07426723",
	"publication_date": "2008-09-16",
	"application_number": "10750396",
	"application_date": "2003-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Content-based routing system and method",
	"summary": "",
	"abstract": "Systems and methods for routing messages between applications in a network are disclosed. Messages are routed from a sending application to one or more receiving applications according to one or more routing rules. Each routing rule is used for determining the one or more receiving applications, and is associated with at least one routing object. The routing object is configured to associate the routing rule to the message based on content of the message. The routing objects are stored in a repository of design-time descriptions of the applications. The routing rules are stored in a directory of runtime descriptions of applications in the runtime landscape, and are accessed by a runtime engine for executing the routing.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07428597",
	"publication_date": "2008-09-23",
	"application_number": "10402862",
	"application_date": "2003-03-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Creating and using nested context structures",
	"summary": "",
	"abstract": "Methods and apparatus, including computer program products, for developing and executing applications include using an extended version of the model-view-controller (MVC) paradigm. The techniques include a model for an application, the model including multiple model elements, at least one view for presenting data from the model, the view including multiple user interface (UI) elements, and at least one controller for manipulating the model and the view. The techniques also can include a structure for storing application data according to a predetermined structure for at least one storage area relating to the controller. The predetermined structure can include multiple context elements and directed relationships connecting the context elements, the directed relationships forming at least one cycle between the context elements. The techniques further can include and at least one binding between one of the UI elements and one of the context elements.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07404176",
	"publication_date": "2008-07-22",
	"application_number": "10858856",
	"application_date": "2004-06-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enterprise multi-agent software system with services able to call multiple engines and scheduling capability",
	"summary": "",
	"abstract": "A system and techniques are disclosed to provide a multi-agent software environment. The system provides several service modules that may be used by software programs to accomplish specific tasks. In one illustrative example, a first program module includes instructions to call core service software modules. The exemplary system further includes a second program module including instructions to call one of multiple intelligent service software modules. In some examples, an intelligent service software module includes program instructions that when executed perform an intelligent service function that includes execution of an intelligent engine. In some examples, the intelligent engine is callable by at least two of the intelligent service software modules.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07437703",
	"publication_date": "2008-10-14",
	"application_number": "10631664",
	"application_date": "2003-07-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Exchange infrastructure system and method",
	"summary": "",
	"abstract": "An exchange infrastructure for message-based exchange and integration of a collection of heterogeneous software components is disclosed. The exchange infrastructure includes a repository for storing design-time collaboration descriptions of a plurality of software components, and a directory for storing configuration-specific collaboration descriptions of a runtime system landscape. The exchange infrastructure further includes a runtime engine configured for message-based exchange of information based on the configuration-specific collaboration descriptions. At runtime, the runtime engine receives messages, and resolves intended or required receivers based on message content and parameters provided by the configuration-specific collaboration descriptions from the directory.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07346893",
	"publication_date": "2008-03-18",
	"application_number": "10402349",
	"application_date": "2003-03-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generic data persistence application program interface",
	"summary": "",
	"abstract": "A method and system to make data persistent in data storage using a generic application interface. An embodiment of the method may include providing the generic data persistence interface to store data independent of data storage mechanisms. The interface may include generic routines commonly shared by the data storage mechanisms. The method may further include calling the generic routines as a function of a particular data storage mechanism upon receiving an request and executing the called routines. The interface provides a unique identifier associated with the data to store with the data in persistent storage. Exemplary applications include persistent file storage and persistent JDBC database storage.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07350210",
	"publication_date": "2008-03-25",
	"application_number": "10720285",
	"application_date": "2003-11-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generic search engine framework",
	"summary": "",
	"abstract": "One implementation provides a method that includes receiving a first identification of one of several knowledge bases of electronically stored content, receiving a second identification of one of several executable software applications for which user-initiated knowledge base content searching services will be provided for the identified one of the knowledge bases, and receiving a third identification of one of several different search engines to be used in performing index searches when a request for a search is received from the identified software application and the request is directed to the identified one of the several knowledge bases. Received identifications are stored for later access to determine which of the several search engines is to execute a request to perform an index search that is received from the identified one of the several software applications and which index search request is directed to the identified one of the several knowledge bases.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07373351",
	"publication_date": "2008-05-13",
	"application_number": "10920045",
	"application_date": "2004-08-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interface for series of tests",
	"summary": "",
	"abstract": "Methods and apparatus, including computer program products, for an interface that generates a report including a series of load test results. An interface can generate such a report that includes a series of load test results by initiating load testing of a first and second application during a first and second test run, and initiating combining of test results of the first and second test runs. The report can individually characterize the test results as members of a series of test runs. Load testing and combining of test results can be initiated at a single interface.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07412349",
	"publication_date": "2008-08-12",
	"application_number": "11298960",
	"application_date": "2005-12-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Local data repository generation",
	"summary": "",
	"abstract": "Systems and techniques relating to local data repository generation facilitate analysis of business activity information. In general, in one implementation, a technique includes: receiving results of an analysis query applied against a business information warehouse, the results including at least one key performance indicator generated in response to the analysis query by an analytical engine of the business information warehouse from other information stored in underlying databases of the business information warehouse; transforming the results such that the results appear to be obtained directly from an underlying relational database source; and sending the transformed results to a software component that generates from the transformed results a local data repository, a self-describing collection of integrated records, wherein the local data repository supports dynamic analytical processing operations on the results of the analysis query.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07424470",
	"publication_date": "2008-09-09",
	"application_number": "10843958",
	"application_date": "2004-05-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Meta Object Facility compliant interface enabling",
	"summary": "",
	"abstract": "Systems and methods for enabling a Meta Object Facility (MOF) compliant service for a metadata resource. The systems and methods employ a connector adapted to receive metadata from the metadata resource via a resource-specific application programming interface, and a metamodel repository storing one or more MOF models. The systems and methods further employ a persistence interface between the connector and metamodel repository. The persistence interface is configured to instantiate at least one MOF compliant service for the connector based on one of the MOF models in the metamodel repository.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07426523",
	"publication_date": "2008-09-16",
	"application_number": "10799364",
	"application_date": "2004-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Portable business information content and management system",
	"summary": "",
	"abstract": "A system and method for generating business content portable across multiple software applications is described. In one embodiment, a universal object model (UOM) is employed to art as an abstraction layer between business content and the application used to create the business content. The UOM generates portable business content from objects and operations uncovered by a descriptive language such as extendable mark-up language (XML). The UOM objects and/or properties are mapped to an application object model (AOM) which is capable of extending the properties and/or operations of the original business application. The portable business content is mapped from the AOM to another application in accordance to the applications application programming interface (API). The business content created by the UOM may be configured for other applications without rewriting the business content by modifying the AOM.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07434227",
	"publication_date": "2008-10-07",
	"application_number": "10260092",
	"application_date": "2002-09-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Process attachable virtual machines",
	"summary": "",
	"abstract": "Methods and apparatus, including computer program products, for using process attachable virtual machines to provide isolation between user sessions in a scalable manner, enabling a server to robustly process requests corresponding to a large number of user sessions. The methods and apparatus include initializing a process attachable virtual machine for a user session, receiving a request corresponding to the user session, and binding the process attachable virtual machine to an operating system process to process the request.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07325233",
	"publication_date": "2008-01-29",
	"application_number": "10290087",
	"application_date": "2002-11-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Processing index action requests for search engines",
	"summary": "",
	"abstract": "One implementation provides a method included in performing an action on a searchable index of content that is electronically stored in a knowledge base. The method includes receiving an input indicating a request that a computer-implemented process be performed that acts upon a specified index of content that is searchable using a predefined one of multiple search engines, wherein the content resides within a specified one of multiple electronic knowledge bases. The method further includes performing a computer-implemented process that composes, using the received request, a request to perform the computer-implemented process, wherein the request has a format that is compatible with the predefined one search engine. The composed request is submitted to the predefined one search engine for execution.",
	"url": null,
	"owner": "Sap AG",
	"publication_number": "07340454",
	"publication_date": "2008-03-04",
	"application_number": "10920046",
	"application_date": "2004-08-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Sharing objects in runtime systems",
	"summary": "",
	"abstract": "Methods and apparatus, including computer systems and program products, for sharing data objects in runtime systems. An identification of a first data object in a first runtime system is received. The first data object references zero or more referenced data objects. A shared closure of data objects, which consists of the first data object and a transitive closure of the referenced data objects, is identified, and a determination is made as to whether the shared closure of data objects is usable in a second runtime system. In some implementations, determining whether a shared closure is usable in a second runtime system includes determining whether each data object in the shared closure is serializable without execution of custom code, or determining whether the runtime class of each object instance in the shared closure is shareable. Using shared closures to share objects between runtime systems can provide isolation between user sessions.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07415704",
	"publication_date": "2008-08-19",
	"application_number": "10851795",
	"application_date": "2004-05-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software component architecture",
	"summary": "",
	"abstract": "Methods and apparatus, including computer program products, implement techniques for structuring applications into reusable components. A reusable software component is implemented. The component encapsulates functionality, where multiple instances of the component are usable at the same time. The component has at least one visual representation. The component has a programming interface for programmatic interaction with the component, a data-binding interface for data communication with the component, and a visual interface to access the at least one visual representation of the component.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07409692",
	"publication_date": "2008-08-05",
	"application_number": "10676844",
	"application_date": "2003-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software logistics for pattern-based applications",
	"summary": "",
	"abstract": "Methods and apparatus including computer program products implement techniques for developing and deploying applications using configurable patterns. Configuration data is received for a pattern, and the configuration data is stored in a design store. The pattern defines an arrangement of user interface elements and specifies predefined actions that can be performed using the user interface elements. The configuration data specifies associations between one or more of the user interface elements or one or more objects in a back-end system. The configuration data is transferred from the design store to a design time repository, and the application is deployed corresponding to the configuration data.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07434203",
	"publication_date": "2008-10-07",
	"application_number": "10843716",
	"application_date": "2004-05-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Unified rendering",
	"summary": "",
	"abstract": "Systems, methods, and apparatus, including computer program products, for abstracting rendering logic and automatically generating platform-specific renderers from the abstracted rendering logic for multiple platforms. A platform-independent description of rendering logic for a control is specified. The platform-independent description is used to generate a platform-specific renderer for the control. The platform-specific renderer is operable to be executed on a specific platform to produce code that can be used in rendering the control on a client computer. Some implementations enable code for platform-specific renderers to be generated automatically based on centrally defined rendering logic. Rendering logic can thus be modified once and used to automatically update code and libraries for platform-specific renderers on multiple platforms.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07340718",
	"publication_date": "2008-03-04",
	"application_number": "10435276",
	"application_date": "2003-05-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Visual query modeling for configurable patterns",
	"summary": "",
	"abstract": "Methods, systems, and computer program products, implementing techniques for visual query modeling. In one aspect, the techniques include displaying in a web browser a visual model of a database, the visual model including one or more graphical objects representing one or more tables in the database and relations between the tables, receiving in the web browser user input creating a visual model of a query into the database, and generating code for the query based on the visual model of the query.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07366723",
	"publication_date": "2008-04-29",
	"application_number": "10959244",
	"application_date": "2004-10-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatically upgradeable extension of software",
	"summary": "",
	"abstract": "Methods and apparatus, including computer program products, for implementing extensions for computer program applications. A program according to one aspect of the invention has instructions to receive an application call to an extension method defined in an extension object definition, the extension object definition having associated extension object implementations, the extension object implementations providing extension method implementations of the extension method; instructions operable to obtain results by calling multiple extension method implementations of the extension method; and instructions operable to respond to the application call using the results obtained from the extension method implementations. A method according to another aspect includes the steps of deploying multiple extension method implementations for an extension method; and executing the multiple extension method implementations to determine the results of calling the extension method.",
	"url": null,
	"owner": "SAP Aktiengesellschaft",
	"publication_number": "07406695",
	"publication_date": "2008-07-29",
	"application_number": "10347112",
	"application_date": "2003-01-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Flexible access to metamodels, metadata, and other program resources",
	"summary": "",
	"abstract": "A system and method for enabling a Meta Object Facility (MOF) and a Java Metadata Interface (JMI) compliant service to access program resources. A system includes a metamodel repository and an application server. The metamodel repository is configured to store the program resources including metadata and one or more metamodels. The application server includes at least one application providing a first portion of the program resources. A first portion of the program resources are stored in a database associated with the application server. A second portion of the program resources are provided in at least one application of the application server, and programming language instances of the program resources are received by one or more applications independent of where the program resources are stored or provided.",
	"url": null,
	"owner": "SAP Aktiengesellschaft",
	"publication_number": "07428552",
	"publication_date": "2008-09-23",
	"application_number": "10888074",
	"application_date": "2004-07-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Identifying interfaces related to a service",
	"summary": "",
	"abstract": "A method in a computing device for identifying interfaces related to a service provider includes receiving a call identifier as an explicit parameter in a call or as an implicit parameter contained within input data to request a service provided by the service provider, the call identifier representing a version of the service.",
	"url": null,
	"owner": "SAP Aktiengesellschaft",
	"publication_number": "07406520",
	"publication_date": "2008-07-29",
	"application_number": "10903498",
	"application_date": "2004-07-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Inventory management",
	"summary": "",
	"abstract": "Methods and apparatus, including computer program products, implementing and using techniques for inventory management. Managing data items in an inventory management system. A request to add a data item to the inventory management system is received. The data item has an associated set of attributes to be represented in the inventory management system. It is determined whether the inventory management system includes a structure in which the data item and the sets of attributes associated with the data item can be represented. If no structure exists in which the data item and the set of attributes associated with the data item can be represented, a new structure is automatically defined in which the data item and the set of attributes associated with the data item can be represented. The data item and the set of attributes associated with the data item is added to the defined new structure.",
	"url": null,
	"owner": "SAP Aktiengesellschaft",
	"publication_number": "07383284",
	"publication_date": "2008-06-03",
	"application_number": "10159599",
	"application_date": "2002-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and computer program for rendering assemblies objects on user-interface to present data of application",
	"summary": "",
	"abstract": "A user-interface of a device renders a first object and a second object, each object with data of a business application. The device is either of a first type or of a second type. In the device, an interpreter receives an application specification document with a statement. The statement indicates to render the first and second objects in an assembly. The interpreter identifies a presentation pattern for the assembly from predefined first and second presentation patterns according to the type of the device so that the assembly is rendered according to the presentation pattern.",
	"url": null,
	"owner": "Sap Aktiengesellschaft",
	"publication_number": "07418696",
	"publication_date": "2008-08-26",
	"application_number": "10729228",
	"application_date": "2003-12-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and computer program for rendering assemblies objects on user-interface to present data of application",
	"summary": "",
	"abstract": "A user-interface of a device renders a first object and a second object, each object with data of a business application. The device is either of a first type or of a second type. In the device, an interpreter receives an application specification document with a statement. The statement indicates to render the first and second objects in an assembly. The interpreter identifies a presentation pattern for the assembly from predefined first and second presentation patterns according to the type of the device so that the assembly is rendered according to the presentation pattern.",
	"url": null,
	"owner": "SAP Aktiengesellschaft",
	"publication_number": "07380236",
	"publication_date": "2008-05-27",
	"application_number": "10646428",
	"application_date": "2003-08-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Programming with shared objects in a shared memory",
	"summary": "",
	"abstract": "A shared memory technology where shared objects can be used by any of multiple users, applications, or program sessions with programming language support during development and at runtime. The developer can declare shared memory behaviors at design time to cause one or more area classes to be generated for use at runtime. A shared objects memory is managed by the runtime environment. Content is stored at runtime in an area instance of an area class. Class methods to be generated that include methods for attaching and detaching a running session to and from an area instance, and for detaching a session from a change request on an area instance with a commit or a rollback. The runtime environment manages locks for area instances. There are programming language constructs for creating area instances and for creating data objects of arbitrary data type within area instances.",
	"url": null,
	"owner": "SAP Aktiengesellschaft",
	"publication_number": "07451434",
	"publication_date": "2008-11-11",
	"application_number": "10938754",
	"application_date": "2004-09-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transferring data in a diverse file system landscape",
	"summary": "",
	"abstract": "Methods and apparatus, including computer program products, relating to transferring data in a diverse file system landscape. In one general aspect, a computer program product can cause a data processor to extract a first one or more file system objects from a self-extracting program, where the first file system objects include file system objects converted from a first type of file system object of a first file system to a second type of file system object of a second file system; and convert the first file system objects to file system objects in the first file system. The second file system can store file system objects of the second type and cannot store file system objects of the first type. The file systems can be the library and root file systems of IBM's iSeries computing system, and the self-extracting program can initiate execution of an Integrated Language Environment program.",
	"url": null,
	"owner": "SAP Aktiengesellschaft",
	"publication_number": "07386533",
	"publication_date": "2008-06-10",
	"application_number": "11112242",
	"application_date": "2005-04-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "XML based architecture for controlling user interfaces with contextual voice commands",
	"summary": "",
	"abstract": "A voice-enabled user interface includes a first user interface. A voice extension module is associated with the first user interface and is configured to voice-enable the first user interface. The voice extension module includes a speech recognition engine, an XML configuration repository, a preprocessor, and an input handler. The XML configuration repository includes one or more XML files specifying one or more voice commands for signaling for execution of one or more semantic operations that may be performed using the first user interface. The preprocessor is configured to register with the speech recognition engine the one or more voice commands. The input handler is configured to receive a first voice command and to communicate with the preprocessor to execute a semantic operation from the one or more semantic operations that may be performed using the first user interface. The first voice command is one of the one or more voice commands registered with the speech recognition engine by the preprocessor, and the first voice command signals for execution of the semantic operation.",
	"url": null,
	"owner": "SAP Aktiengesellschaft",
	"publication_number": "07409344",
	"publication_date": "2008-08-05",
	"application_number": "11074082",
	"application_date": "2005-03-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer-implemented system and method for generating embedded code to add functionality to a user application",
	"summary": "",
	"abstract": "A computer-implemented system and method for generating code. The system and method receive source code that includes a higher order computer language statement. Machine code is generated from the received source code. The generated machine code is placed directly into volatile memory for access by a computer program.",
	"url": null,
	"owner": "SAS Institute Inc.",
	"publication_number": "07320121",
	"publication_date": "2008-01-15",
	"application_number": "10210831",
	"application_date": "2002-08-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer-implemented system and method for handling database statements",
	"summary": "",
	"abstract": "A computer-implemented system and method for handling a database statement from a first database system. The database statement is formatted according to a language format used by the first database system. Database language difference data is accessed so that a database specific statement may be generated which is operational within a different type of database system.",
	"url": null,
	"owner": "SAS Institute Inc.",
	"publication_number": "07447686",
	"publication_date": "2008-11-04",
	"application_number": "10303106",
	"application_date": "2002-11-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network-based voice activated auto-attendant service with B2B connectors",
	"summary": "",
	"abstract": "In a particular embodiment, a method of processing enterprise information system data for use by a voice activated auto-attendant service network is disclosed. The method includes provisioning a network-based voice activated auto-attendant service via a web interface including downloading a platform independent business to business (B2B) connector package, interacting with the connector package via a sequence of data modeling steps, selecting a connector based on an enterprise information system data source, and configuring the selected connector. The method also includes encrypting XML data files using an encryption key issued by a network based voice activated auto-attendant service provider, uploading the encrypted XML data files to a secured website hosted on a voice activated auto-attendant service provider network, and parsing the encrypted XML data files at a data processor within the network based voice activated auto-attendant service system to construct a voice directory and to create a first database and to create a second database. The first database and the second database are configured for run-time access of the voice activated auto-attendant system.",
	"url": null,
	"owner": "SBC Knowledge Ventures, LP",
	"publication_number": "07415106",
	"publication_date": "2008-08-19",
	"application_number": "10796400",
	"application_date": "2004-03-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Self-booting software defined radio module",
	"summary": "",
	"abstract": "The invention in the simplest form is a self-booting software defined radio (SDR) module which may be embodied as a PCMCIA, Compact Flash, or other plug in form factor module. The performance characteristics of the module, may include the radio frequency (RF) carrier frequency, instantaneous RF bandwidth, carrier modulation and demodulation, symbol coding and decoding, security, and network protocol that can be altered and saved by means of computer software transferred to the module from a host device such as a cellular telephone, personal digital assistant, lap top computer or other programming device.",
	"url": null,
	"owner": "SCA Technica, Inc.",
	"publication_number": "07404074",
	"publication_date": "2008-07-22",
	"application_number": "10618950",
	"application_date": "2003-07-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for graphically visualizing an automatism application and computer terminal for carrying out said method",
	"summary": "",
	"abstract": "A method of visualizing or graphically printing an automatism application programmed on a programming station with the aid of a graphic automatism languages on a computer terminal. The method includes storing a source program associated with an application program formulated in one of the graphic automatism languages on the terminal, the source program being translated into a single, hierarchical object oriented language (XML); and storing at least one style sheet associated with a graphic language on the computer in order to generate a graphic vector file containing drawing instructions enabling the automatism application to be displayed graphically on the terminal.",
	"url": null,
	"owner": "Schneider Automation",
	"publication_number": "07325229",
	"publication_date": "2008-01-29",
	"application_number": "10474191",
	"application_date": "2002-04-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing user-defined media presentations",
	"summary": "",
	"abstract": "A media system including memory to store media information that characterizes the media and a processor configured by the memory to provide a user interface to enable a user to define a media presentation from the media information. The processor is configured by the memory to continually and automatically segue media stream changes among a plurality of the media streams containing the media to present the user defined media presentation.",
	"url": null,
	"owner": "Scientific Atlanta, Inc.",
	"publication_number": "07395547",
	"publication_date": "2008-07-01",
	"application_number": "09827470",
	"application_date": "2001-04-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatuses and methods to enable the simultaneous viewing of multiple television channels and electronic program guide content",
	"summary": "",
	"abstract": "A Digital Home Communication Terminal (DHCT) including a plurality of tuners, each of which can select one of a plurality of transmission channels provided by a Digital Broadband Delivery System (DBDS). The multiple tuners enable the DHCT to tune to a plurality of downstream media and data transmissions, thereby allowing a subscriber to tune simultaneously to multiple channels and content transmitted in the downstream transmission via the DBDS, an advantage over conventional DHCTs. The present invention enables subscribers to receive and view multiple channels and associated content, including electronic program guide information, at will. Furthermore, using the multiple-tuner DHCT of the present invention, subscribers can view multiple television stations and program content simultaneously, without degradation to television signals or pictures.",
	"url": null,
	"owner": "Scientific-Atlanta, Inc.",
	"publication_number": "07373650",
	"publication_date": "2008-05-13",
	"application_number": "09558556",
	"application_date": "2000-04-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Broadcast carousel system access for remote home communication terminal",
	"summary": "",
	"abstract": "Systems and methods are disclosed for providing objects to a remote digital home communication terminal (remote DHCT) via a gateway device located at a customer premises. One such method, among others, includes receiving a message from a remote DHCT requesting a carousel object, receiving the carousel object from a server device, and transmitting the carousel object to the remote DHCT.",
	"url": null,
	"owner": "Scientific-Atlanta, Inc.",
	"publication_number": "07360233",
	"publication_date": "2008-04-15",
	"application_number": "10235201",
	"application_date": "2002-09-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Channel buffering and display management system for multi-tuner set-top box",
	"summary": "",
	"abstract": "A system is provided that resources media content of multiple display channels. The system includes a memory with logic, tuning resources to receive media content of a plurality of display channels, buffering resources for buffering the media content, display resources for displaying the media content from at least one of the display channels, and a processor configured with the logic to determine when the resources are unavailable to receive media content of a newly requested display channel. The processor is further configured with the logic to, responsive to a determination of insufficient resources, determine the lowest priority display channel using at least one user configurable rule, wherein the processor is further configured with the logic to effect discontinuing the receipt of media content of a display channel designated as having the lowest priority among a plurality of received display channels.",
	"url": null,
	"owner": "Scientific-Atlanta, Inc.",
	"publication_number": "07409140",
	"publication_date": "2008-08-05",
	"application_number": "10143123",
	"application_date": "2002-05-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Disk driver cluster management of time shift buffer",
	"summary": "",
	"abstract": "A file allocation system for a hard disk drive includes a memory with driver logic and a processor configured with the driver logic to receive a request to allocate hard disk space of a defined size for a buffer file. In some embodiments, the processor is configured with the driver logic to allocate clusters for the buffer file from a plurality of clusters on the hard disk, wherein the clusters for the buffer file store media content instances. In some embodiments, the processor is configured with the driver logic to designate a portion of the clusters of the buffer file for at least one non-buffer file such that the non-buffer file is permitted to share the portion of the clusters of the buffer file with the buffer file.",
	"url": null,
	"owner": "Scientific-Atlanta, Inc.",
	"publication_number": "07380029",
	"publication_date": "2008-05-27",
	"application_number": "11381889",
	"application_date": "2006-05-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Management of television advertising",
	"summary": "",
	"abstract": "A method for providing television advertising includes receiving user input for selecting an advertising parameter and providing a user with an advertisement corresponding to the advertising parameter.",
	"url": null,
	"owner": "Scientific-Atlanta, Inc.",
	"publication_number": "07334251",
	"publication_date": "2008-02-19",
	"application_number": "10073842",
	"application_date": "2002-02-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integrated computer security management system and method",
	"summary": "",
	"abstract": "The present invention is generally directed to a computer security management system that integrates a firewall with an intrusion detection system (IDS). In other words, the firewall and IDS of the present invention can be designed to communicate process or status information and packets with one another. The present invention can facilitate centralized control of the firewall and the IDS and can increase the speed at which packets are passed between a secured computer network and an external network. Increased packet processing speed can be achieved in several ways. For example, the firewall and IDS can process packets in series, in parallel, and sometimes singularly when one of the components is not permitted to process a packet. Alternatively, singular processing can also be performed when one component is permitted to pass a packet to the secured computer network without checking with the other component.",
	"url": null,
	"owner": "Secureworks, Inc.",
	"publication_number": "07331061",
	"publication_date": "2008-02-12",
	"application_number": "09949095",
	"application_date": "2001-09-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure data parser method and system",
	"summary": "",
	"abstract": "The present invention provides a method and system for securing sensitive data from unauthorized access or use. The method and system of the present invention is useful in a wide variety of settings, including commercial settings generally available to the public which may be extremely large or small with respect to the number of users. The method and system of the present invention is also useful in a more private setting, such as with a corporation or governmental agency, as well as between corporation, governmental agencies or any other entity.",
	"url": null,
	"owner": "Security First Corporation",
	"publication_number": "07391865",
	"publication_date": "2008-06-24",
	"application_number": "10458928",
	"application_date": "2003-06-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Server-centric search function in an interactive program guide",
	"summary": "",
	"abstract": "Techniques for searching a program guide database. In accordance with a method, one or more search criteria (e.g., keywords) are received and a request for a search is then sent, along with the search criteria, to a head end of an information distribution system. In response, one or more search results are received from the head end. In this server-centric system, the program guide database is searched at the head end. The search results can be displayed on one search result IPG page (or more, if necessary) or displayed one at a time on the respective IPG page that includes the search result. Upon receiving an indication that a particular search result has been selected, one or more streams associated with the selected search result can be retrieved and decoded to recover the selected program, which can then be displayed.",
	"url": null,
	"owner": "Sedna Patent Services, LLC",
	"publication_number": "07373652",
	"publication_date": "2008-05-13",
	"application_number": "09653381",
	"application_date": "2000-09-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data processing method",
	"summary": "",
	"abstract": "A data processing method is provided whereby, even if communication delay occurs between computer game devices connected through a communication network, data is processed practically simultaneously between the respective computer game devices. When a computer game contest is carried out through a network having communication delay, before the game is started, the delay times between the game devices are found and, using these, synchronization of the time counted by the individual game devices is obtained. Then, during the progress of the game, the operating data signal is processed after the lapse of the longest delay time of the delay times between the game devices measured beforehand after it is generated. In this way, the operating data signal can be processed simultaneously in a plurality of game devices.",
	"url": null,
	"owner": "Sega Enterprises, Ltd.",
	"publication_number": "07431651",
	"publication_date": "2008-10-07",
	"application_number": "10694741",
	"application_date": "2003-10-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Print portal system on network",
	"summary": "",
	"abstract": "The technique of the present invention intermediates between an arbitrary client and an arbitrary printer connecting with a network to actualize practical printing works. A print portal system utilizing a server connected to the network intermediates between the client and the printer to execute a printing operation. The client outputs a printing requirement, which specifies print data of interest and a printer as an output resource, to the print portal system. The print portal system converts the input print data into data of a general purpose format, which does not depend upon the type of the printer, and transfers the converted print data to the specified printer.",
	"url": null,
	"owner": "Seiko Epson Corporation",
	"publication_number": "07370090",
	"publication_date": "2008-05-06",
	"application_number": "11528634",
	"application_date": "2006-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for mediating printing on network",
	"summary": "",
	"abstract": "A print portal system utilizing a server connected to the network intermediates between the client and the printer to execute a printing operation. The client outputs a printing requirement, which specifies print data of interest and a printer as an output resource, to the print portal system. The print portal system converts the input print data into data of a general purpose format, which does not depend upon the type of the printer, and transfers the converted print data to the specified printer.",
	"url": null,
	"owner": "Seiko Epson Corporation",
	"publication_number": "07461138",
	"publication_date": "2008-12-02",
	"application_number": "09959010",
	"application_date": "2001-02-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and methods for texture mapping",
	"summary": "",
	"abstract": "The invention provides texture mapping techniques that facilitate interactive painting of a three-dimensional virtual surface by a user in object space, without requiring global parameterization. The texture mapping techniques feature rendering texture for a given virtual object using a plurality of composite textures, each formed by blending collapsible texture layers. Texture coordinates in texture space are derived using information determined at the time of surface mesh generation. The invention features dynamic texture allocation and deallocation, allowing a user to interactively modify the shape of a painted, three-dimensional model. Finally, the invention features an architecture for combined graphical rendering and haptic rendering of a virtual object, allowing a user to experience force feedback during the painting of the object in object space.",
	"url": null,
	"owner": "SensAble Technologies, Inc.",
	"publication_number": "07400331",
	"publication_date": "2008-07-15",
	"application_number": "11474920",
	"application_date": "2006-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and methods for providing communication between systems having different protocol versions",
	"summary": "",
	"abstract": "A system for enabling an IPv4 (Internet Protocol version 4) application to communicate across a computer network with an IPv6 (Internet Protocol version 6) system. The system includes a computing device and executable instructions. Executable instructions are configured to make a function call to an IPv4 socket Application Programming Interface (API). The instructions translate the function call to a translated function call wherein the translated function call uses raw sockets. Another function call is made to the IPv4 socket API for the translated function call that uses raw sockets. A packet is passed to an IPv4 stack.",
	"url": null,
	"owner": "Sharp Laboratories of America, Inc.",
	"publication_number": "07340746",
	"publication_date": "2008-03-04",
	"application_number": "10637408",
	"application_date": "2003-08-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Non-destructive testing and imaging",
	"summary": "",
	"abstract": "A method of non-destructive testing includes non-destructively testing an object over a range of test levels, directing coherent light onto the object, directly receiving the coherent light substantially as reflected straight from the object, and capturing the reflected coherent light over the range of test levels as a plurality of digital images of the object. The method also includes calculating differences between pixel values of a plurality of pairs of digital images of the plurality of digital images, and adding the pixel value differences of the plurality of pairs of digital images to yield at least one cumulative differential image.",
	"url": null,
	"owner": "Shear Graphics, LLC",
	"publication_number": "07436504",
	"publication_date": "2008-10-14",
	"application_number": "11066672",
	"application_date": "2005-02-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Acceptance of inputs from various interfaces to a telephony system",
	"summary": "",
	"abstract": "A telephony system that accepts inputs, such as account codes, from a variety of devices and interfaces. The system includes a server with a telephony management software (TMS) unit, a telephony application programming interface (TAPI) unit, and an application unit. The application unit includes a control module, a call status module, an endpoint interface module, a storage interface module, a call transfer module, a TAPI interface module, a configuration module, and an extension library module. A server is capable of prompting several devices for an input and then accepting an input from any of the devices. Thus, a server enables a user to initiate a phone call on one device and then input information using a different device.",
	"url": null,
	"owner": "Shoretel, Inc.",
	"publication_number": "07450703",
	"publication_date": "2008-11-11",
	"application_number": "10807967",
	"application_date": "2004-03-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed session-based data",
	"summary": "",
	"abstract": "Session-based data, such as call detail accounting information, is tracked and distributed to a plurality of servers in a distributed telephony environment. One type of session is a telephone call between participants. Session-based data includes information about a session provided by the switches along the media path. Session-based data further includes information related to the session obtained from the application layer (e.g., user input metadata). A network proxy maintains a participant list to which the session data is distributed. The network proxy sends updates to the participants and determines the network status to implement fault tolerance of data distribution.",
	"url": null,
	"owner": "Shortel, Inc.",
	"publication_number": "07386114",
	"publication_date": "2008-06-10",
	"application_number": "10754424",
	"application_date": "2004-01-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Server with backup capability for distributed IP telephony systems",
	"summary": "",
	"abstract": "A system for providing voice mail backup on a secondary server including two or more distributed voice mail servers. Each distributed voice mail server includes a telephony management software (TMS) unit, a telephony application programming interface (TAPI) unit, and an application unit. The application unit includes a voice mail control module, a call status module, a call transfer module, a voice mail migration module, a storage module, an audio encoding/decoding module, a configuration module, an extension library module, and a telephony application programming interface (TAPI) interface module. Each server is capable of storing a voice message for an extension serviced by a remote server if the remote server is unavailable.",
	"url": null,
	"owner": "Shortel, Inc.",
	"publication_number": "07379540",
	"publication_date": "2008-05-27",
	"application_number": "10671269",
	"application_date": "2003-09-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for dynamic information connection search engine",
	"summary": "",
	"abstract": "A method and apparatus are provided for a dynamic information connection engine. User actions are detected on at least one client system. In response, a determination is made whether the user is searching for supported information. When the user is searching for supported information, information is extracted electronically from third party web sites, direct supplier connections, and intermediate databases. Potential information suppliers are automatically selected in response to the detected user search. Queries are formulated from the user search and transferred to each selected supplier over a network coupling. The queries include a request for information. Responses are received from the suppliers, and the responses are used to generate a result list for the user. The result list includes information and query status information. Further, an electronic link may be provided to a web site of each supplier from which the information was derived.",
	"url": null,
	"owner": "Sidestep, Inc.",
	"publication_number": "07349894",
	"publication_date": "2008-03-25",
	"application_number": "10903623",
	"application_date": "2004-07-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for searching data based on identified subset of categories and relevance-scored text representation-category combinations",
	"summary": "",
	"abstract": "A method and system for analyzing natural language text to identify a set of categories of data in a knowledge base associated with the natural language text and selecting a category from the set of categories is provided. The method and system further provides automatically providing a single category if the set of categories only contains the single category. The method and system also provides that each category in the knowledge base is associated with a stored text representation of a sample natural language text and a score for the text representation-category combination, wherein the score is representative of a relative relevance of the text representation-category combination. The method and system further provide for modifying the score associated with the text representation-category combination of a selected category using feedback provided upon the selection.",
	"url": null,
	"owner": "Siebel Systems, Inc.",
	"publication_number": "07409336",
	"publication_date": "2008-08-05",
	"application_number": "10465338",
	"application_date": "2003-06-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, apparatus, and system for implementing a framework to support a web-based application",
	"summary": "",
	"abstract": "According to one aspect of the present invention, a system is provided to support a web-based application. The system comprising a set of server-side objects managed by an object manager (OM), the set of server-side objects including a global session object providing access to a repository, a server-side business object, and server-side business components contained in the server-side business object. The system further comprises a set of browser-side objects running on a browser, the set of browser-side objects including a browser-side application object that exists throughout a user-session to manage other browser-side objects. The system also comprises a remote procedure call (RPC) mechanism and a notification mechanism to facilitate communication and synchronization between the browser-side objects and the server-side objects.",
	"url": null,
	"owner": "Siebel Systems, Inc.",
	"publication_number": "07454759",
	"publication_date": "2008-11-18",
	"application_number": "10991632",
	"application_date": "2004-11-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, apparatus, and system for managing status of requests in a client server environment",
	"summary": "",
	"abstract": "According to one aspect of the present invention, a method is provided in which a request submitted by a user via a user-interface is sent from a client to a server for processing. Upon being notified by the server that the request may take a long time to process, inform the user of the status of the request. The user is informed of the progress of the request based upon progress information received from the server.",
	"url": null,
	"owner": "Siebel Systems, Inc.",
	"publication_number": "07461119",
	"publication_date": "2008-12-02",
	"application_number": "09970007",
	"application_date": "2001-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for maintaining real-time agent information for multi-channel communication queuing",
	"summary": "",
	"abstract": "An apparatus and method for maintaining data for multi-channel communication queuing associated with different media formats such as telephone, email, and fax. A list of agent data includes information related to types of communication media an agent can access. The data can further include information related to an agent's skills, a list of media routes, statistics for communication channels of specified media types, statistics for an agent, and journals for work items. Priority values for the media routes, the maximum number of queued items for the media routes, and times for escalating a work item can also be included.",
	"url": null,
	"owner": "Siebel Systems, Inc.",
	"publication_number": "07315616",
	"publication_date": "2008-01-01",
	"application_number": "09823770",
	"application_date": "2001-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data capture for electronically delivered automation services",
	"summary": "",
	"abstract": "Content is generated on a host system based on real-time data from a controlled process collected over an internet from a customer's client machine tool control system. The real-time data is captured from the client machine tool by downloading software that manipulates controller functionality to perform a data capture trace predefined events and triggers. The captured data is retrieved by the host, which may generate content based on the data, or provide selective, authorized access to the data by others.",
	"url": null,
	"owner": "Siemens Aktiengesellschaft",
	"publication_number": "07395122",
	"publication_date": "2008-07-01",
	"application_number": "09950848",
	"application_date": "2001-09-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and configuration for controlling and/or monitoring a terminal connected to a communications system",
	"summary": "",
	"abstract": "The invention relates to a method and configuration for controlling and/or monitoring terminals connected to a communications system. In order to control and/or monitor terminals, which are connected to a communications system and which have at least one controllable/monitorable function, an application sends a first message with the call number of a terminal, which is to be controlled and/or monitored thereby, to a telephony server. This telephony server conveys this call number to the communications system that, as a response, conveys terminal information via the controllable/monitorable functions of the relevant terminal. The telephony server comprises a database with data records that describe controllable/monitorable terminals, and comprises at least one data record which can be supplemented and which contains an identification number. This data record can be supplemented with the call number and the information concerning said terminal, whereby the telephony server generates another supplementable data record with another identification number. The telephony server conveys the call number and the terminal information to the application from the supplemented data record. The terminal can thus be controlled/monitored by the application.",
	"url": null,
	"owner": "Siemens Aktiengesellschaft",
	"publication_number": "07415103",
	"publication_date": "2008-08-19",
	"application_number": "10542444",
	"application_date": "2003-12-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for monitoring or installing new program codes in an industrial installation",
	"summary": "",
	"abstract": "A method of installing a mobile program code for the control of an industrial automation system with a central computer and a plurality of actors and sensors coupled via a bus system with said central installation computer, has the steps of transmitting the mobile program code from a remote location to the central computer of the industrial automation system, installing and commissioning the mobile program code independently on the industrial automation system, and generating by means of the mobile program code further mobile program codes having a defined task, and transmitting the further mobile program codes at least to said actors and sensors within the industrial automation system.",
	"url": null,
	"owner": "Siemens Aktiengesellschaft",
	"publication_number": "07318227",
	"publication_date": "2008-01-08",
	"application_number": "10019719",
	"application_date": "2000-07-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus to abstract events in software applications or services",
	"summary": "",
	"abstract": "According to some embodiments, a system may be monitored to detect change events. A sequence associated with the detected change events may then be stored. The sequence may then be modified by deleting information associated with a detected change event. The sequence might also (or instead) be modified by adding information associated with a non-detected change event. Information associated with the normalized sequence may then be provided.",
	"url": null,
	"owner": "Siemens Aktiengesellschaft",
	"publication_number": "07461043",
	"publication_date": "2008-12-02",
	"application_number": "11304415",
	"application_date": "2005-12-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for obtaining service related information about equipment located at a plurality of sites",
	"summary": "",
	"abstract": "A method and system is provided for communicating service and maintenance information about equipment located at distributed building sites. A customer web portal is provided with a database for storing the equipment service information. The web portal provides an efficient way of determining the service activity for equipment located at distributed sites without the need for maintaining service related information at each site. The user can also obtain information about individual service orders and service agreements for individual pieces of equipment.",
	"url": null,
	"owner": "Siemens Building Technologies, Inc.",
	"publication_number": "07337191",
	"publication_date": "2008-02-26",
	"application_number": "10628978",
	"application_date": "2003-07-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for easily restoring a connection to a telephone",
	"summary": "",
	"abstract": "A method, system, and article of manufacture for restoring a telephone connection between a first communication device and at least one other communication device. In some embodiments, the method includes establishing a first telephone call between a first communication device associated with a telecommunication system and at least one other communication device, initiating a call to the telecommunication system from the first communication device using a predetermined number, and automatically initiating, in response to the call to the predetermined number, a reconnect call by the telecommunication system to establish a second call between the first communication device and the at least one other communication device. In some embodiments, the first call and the second call may be between a first communication device and at least two other communication devices.",
	"url": null,
	"owner": "Siemens Communications, Inc.",
	"publication_number": "07437141",
	"publication_date": "2008-10-14",
	"application_number": "11010787",
	"application_date": "2004-12-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for analyzing and generating supplementary service data units in packet based multimedia communications systems",
	"summary": "",
	"abstract": "A supplementary service, such as H.450 in a specific embodiment, test client is provided. The H.450 test client can send and receive H.450 application protocol data units in any H.225 message. The test client allows for the setting of desired H.450 parameters and allows for the display of the H.450 message itself.",
	"url": null,
	"owner": "Siemens Communications, Inc.",
	"publication_number": "07401135",
	"publication_date": "2008-07-15",
	"application_number": "09745091",
	"application_date": "2000-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for global positioning system enhanced presence rules",
	"summary": "",
	"abstract": "A telecommunications system includes a plurality of remote clients () including a positioning controller () and a communications controller (), the positioning controller receiving position information and the communications controller communicating the position information; and a server () including a coordinating controller () for maintaining a database of location-presence rules for remote clients that are being tracked. The location-presence rules are user-configurable from a network client (). In certain embodiments of the present invention, the position information is received from a global positioning system and the communications controller is a cellular telephone controller.",
	"url": null,
	"owner": "Siemens Communications, Inc.",
	"publication_number": "07333819",
	"publication_date": "2008-02-19",
	"application_number": "10672899",
	"application_date": "2003-09-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for in-building presence system",
	"summary": "",
	"abstract": "A telecommunications system includes a plurality of network clients () including a positioning controller () and a communications controller (); and a positioning server () including a coordinating controller () for maintaining a database of network clients to be tracked and provide updates of position-related information to a presence server (). The plurality of network clients () are configured to transmit position information received via the positioning controller () to the positioning server via the communications controller (), the positioning information including information related to loss of a position signal.",
	"url": null,
	"owner": "Siemens Communications, Inc.",
	"publication_number": "07403786",
	"publication_date": "2008-07-22",
	"application_number": "10672337",
	"application_date": "2003-09-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for presence perimeter rule downloading",
	"summary": "",
	"abstract": "A telecommunications system includes a plurality of network clients () including a positioning controller () and a communications controller (); and a positioning server () including a coordinating controller () for maintaining a database of network clients to be tracked and provide updates of position-related information to a presence server (); wherein an associated network client is configured to transmit position information received via said positioning controller () to said positioning server () via said communications controller () when said associated network client is determined to be outside a predetermined range.",
	"url": null,
	"owner": "Siemens Communications, Inc.",
	"publication_number": "07428417",
	"publication_date": "2008-09-23",
	"application_number": "10672364",
	"application_date": "2003-09-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for speed-based presence state modification",
	"summary": "",
	"abstract": "A telecommunications system includes a plurality of network clients () including a positioning controller () and a communications controller (); and a positioning server () including a coordinating controller () for maintaining a database of network clients to be tracked and provide updates of position-related information to a presence server; wherein said plurality of network clients are configured to transmit position information received via said positioning controller () to said positioning server via said communications controller (), said positioning information including information related to a speed of movement.",
	"url": null,
	"owner": "Siemens Communications, Inc.",
	"publication_number": "07315746",
	"publication_date": "2008-01-01",
	"application_number": "10672621",
	"application_date": "2003-09-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for third-party call control",
	"summary": "",
	"abstract": "The present invention may include a call controller for initiating third-party call control requests. The invention may also include an endpoint control manager for determining whether a remote endpoint is a simple endpoint or intelligent endpoint. The invention may further include an intelligent device manager for coordinating third-party call control requests from the call controller for endpoints determined to be intelligent by the endpoint control manager, and a simple device manager for coordinating third-party call control requests from the call controller for endpoints determined to be simple by the endpoint control manager.",
	"url": null,
	"owner": "Siemens Communications, Inc.",
	"publication_number": "07418084",
	"publication_date": "2008-08-26",
	"application_number": "10918992",
	"application_date": "2004-08-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for processing objects for storage in a document or other storage system",
	"summary": "",
	"abstract": "The invention is directed to a system for processing data to be stored in a document-imaging system that includes a posting processor programmed for receiving at least one object containing the data; a bursting processor programmed for bursting the object to create at least one bursted object; an index extraction processor programmed for extracting indexing information on the bursted object; and a communication processor programmed for transmitting the transformed bursted object and the indexing information to the document-imaging system. The invention may further include a transformation processor for transforming the bursted object and a user interface for configuring the system.",
	"url": null,
	"owner": "Siemens Medical Solutions USA, Inc.",
	"publication_number": "07343385",
	"publication_date": "2008-03-11",
	"application_number": "11222591",
	"application_date": "2005-09-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Gaming board set and gaming kernel for game cabinets",
	"summary": "",
	"abstract": "The present invention is a method and apparatus enabling a low cost hardware upgrade path and low cost processor board retrofit for gaming machines. The enabling features include a two-board set made up of an industry standard form factor processor board (a single board system, able to support an operating system) coupled to an I/O adapter board, and further having a specially architected game kernel based on a UNIX-compatible operating system. The game kernel provides a consistent API to game applications, enabling quick and easy use of new hardware features while providing backward compatibility for existing game applications.",
	"url": null,
	"owner": "Sierra Design Group",
	"publication_number": "07351151",
	"publication_date": "2008-04-01",
	"application_number": "10224026",
	"application_date": "2002-08-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for 3D radar image rendering",
	"summary": "",
	"abstract": "A 3D rendered image of a radar-scanned terrain surface is provided from a radar return signal from the surface, wherein the return signal includes data indicative of azimuth, elevation, and range of a radar-illuminated area of the surface. The data are processed for transformation into X, Y, and Z coordinates. The X and Y coordinates corresponding to each illuminated area are triangulated so as to create a mesh of triangles representing the terrain surface, each of the triangles in the mesh being defined by a vertex triplet. 3D imaging information (grey scale shading and/or coloring information) is added to each triangle in the mesh, based on the amplitude of the radar return signal from the coordinates represented by each vertex in the triplet and the value of the Z coordinate at each vertex, so as to form the 3D rendered image.",
	"url": null,
	"owner": "Sierra Nevada Corporation",
	"publication_number": "07456779",
	"publication_date": "2008-11-25",
	"application_number": "11469400",
	"application_date": "2006-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Compact flat panel color calibration system",
	"summary": "",
	"abstract": "A compact flat panel color calibration system includes a lens prism optic able to pass a narrow, perpendicular, and uniform cone angle of incoming light to a spectrally non-selective photodetector. The calibration system also includes a microprocessor operable to determine the luminance of the display based upon the information gathered by the photodetector. A software module included in the calibration system is then operable to process the luminance information in order to adjust the flat panel display.",
	"url": null,
	"owner": "Silicon Graphics, Inc.",
	"publication_number": "07405742",
	"publication_date": "2008-07-29",
	"application_number": "11426469",
	"application_date": "2006-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Global pointers for scalable parallel applications",
	"summary": "",
	"abstract": "Mapping of cacheable memory pages from other processes in a parallel job provides a very efficient mechanism for inter-process communication. A trivial address computation can then be used to look up a virtual address that allows the use of cacheable loads and stores to directly access or update the memory of other processes in the job for communication purposes. When an interconnection network permits the cacheable access of one host's memory from another host in the cluster, kernel and library software can map memory from processes on other hosts, in addition to the memory on the same host. This mapping can be done at the start of a parallel job using a system library interface. A function in an application programming interface provides a user-level, fast lookup of a virtual address that references data regions residing on all of the processes in a parallel job running across multiple hosts.",
	"url": null,
	"owner": "Silicon Graphics, Inc.",
	"publication_number": "07451278",
	"publication_date": "2008-11-11",
	"application_number": "10365658",
	"application_date": "2003-02-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Scalable method and system for streaming high-resolution media",
	"summary": "",
	"abstract": "A system and method for distributing data (e.g., imaging data such as pixels, or 3D graphics data such as points, lines, or polygons) from a single or a small number of data sources to a plurality of graphical processing units (graphics processors) for processing and display is presented. The system and method provide a pipelined and multithreaded approach that prioritizes movement of the data through a high-speed multiprocessor system (or a high-speed system of networked computers), according to the system topology. Multiple threads running on multiple processors in shared memory move the data from a storage device (e.g., a disk array), through the high-speed multiprocessor system, to graphics processor memory for display and optional processing through fragment programming. The data can also be moved in the reverse direction, back through the high-speed multiprocessor system, for storage on the disk array.",
	"url": null,
	"owner": "Silicon Graphics, Inc.",
	"publication_number": "07460126",
	"publication_date": "2008-12-02",
	"application_number": "11209765",
	"application_date": "2005-08-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for graphics culling",
	"summary": "",
	"abstract": "A method is disclosed for culling an object database in a graphics processing system. In one embodiment, the method comprises encoding per-object parameters and culling parameters. The per-object parameters are encoded in texture format thereby creating at least one per-object texture containing the encoded per-object parameters. Next, a fragment program used in a fragment processor of the GPU is optionally updated. The updated fragment program embodies a culling operation. A polygon is then rendered, wherein the rendering step includes per-fragment operations. During the per-fragment operations, the updated fragment program is executed. The culling operation embodied therein (i) accesses the culling parameter, (ii) samples the per-object textures, and (iii) produces cull results for a set of database objects. In this fashion, the fragment processor in the GPU is leveraged to perform computationally intensive culling operations.",
	"url": null,
	"owner": "Silicon Graphics, Inc.",
	"publication_number": "07388582",
	"publication_date": "2008-06-17",
	"application_number": "11790648",
	"application_date": "2007-04-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for image-based rendering with object proxies",
	"summary": "",
	"abstract": "A system and method for rendering with an object proxy. In one embodiment, a method includes forming a set of view textures corresponding to a set of viewing directions; selecting a viewing direction for rendering; selecting at least two view textures from the formed set based on the selected viewing direction; and rendering the object proxy at the selected viewing direction. The rendering step includes applying texture from the selected view textures onto the selected object proxy. The view texture set forming step includes: calculating texture coordinates for the object proxy based on the level of obstruction at different portions of the object proxy and texture packing data; and drawing portions of the object based on the level of obstruction data for the object proxy and based on the texture packing data to obtain a view texture at the selected viewing direction.",
	"url": null,
	"owner": "Silicon Graphics, Inc.",
	"publication_number": "07362335",
	"publication_date": "2008-04-22",
	"application_number": "10197845",
	"application_date": "2002-07-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer monitor",
	"summary": "",
	"abstract": "A computer monitor houses a display for displaying to a user display data received from a computer system and a printer including a pagewidth printhead. The printhead is disposed behind the display as viewed by the user and prints the display data onto print media. In the preferred embodiments, the pagewidth printhead extends across the entire width of the display.",
	"url": null,
	"owner": "Silverbrook Research Pty Ltd",
	"publication_number": "07364378",
	"publication_date": "2008-04-29",
	"application_number": "11513386",
	"application_date": "2006-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Display device having print media path parallel to plane of flat panel display in at least one direction",
	"summary": "",
	"abstract": "A display device for use as a computer monitor, the display device including: a flat panel display for displaying images from a computer, the flat panel defining plane; a printer, including a pagewidth print head for printing onto print media; and a print media print path along witch print media supplied to the printer, wherein at least a majority of the print path is parallel to the plane in at least one direction.",
	"url": null,
	"owner": "Silverbrook Research Pty Ltd",
	"publication_number": "07419259",
	"publication_date": "2008-09-02",
	"application_number": "10922843",
	"application_date": "2004-08-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Inkjet printhead incorporating staggered rows of nozzle arrangements",
	"summary": "",
	"abstract": "A printhead is provided for an inkjet printer. The printhead includes a substrate assembly defining rows of ink inlet channels. Rows of nozzle arrangements are disposed on the substrate assembly and include rows of nozzles, in turn, defining nozzle chambers in fluid communication with respective ink inlet channels. The nozzle arrangements include respective actuators, arranged in rows, and which are configured to eject ink from corresponding nozzles. The rows of nozzle arrangements are staggered and the rows of nozzles are interposed between rows of actuators to form a desirable packing arrangement.",
	"url": null,
	"owner": "Silverbrook Research Pty Ltd",
	"publication_number": "07465019",
	"publication_date": "2008-12-16",
	"application_number": "11753559",
	"application_date": "2007-05-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Printer unit employing vertically disposed media storage and collection areas",
	"summary": "",
	"abstract": "A printer is provided comprising substantially vertically disposed print media supply and collector. The print media supply supplies print media for printing by a printhead and the collector collects the printed print media. A transport device comprises rollers is provided to transport the print media through a delivery path which passes through an angle of at least 140u00b0, and preferably 180u00b0, from the supply to the collector via the printhead.",
	"url": null,
	"owner": "Silverbrook Research Pty Ltd",
	"publication_number": "07377635",
	"publication_date": "2008-05-27",
	"application_number": "11014728",
	"application_date": "2004-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for tracking mobile telemetry devices",
	"summary": "",
	"abstract": "An approach is provided for tracking a telemetry device over a wireless network. A determination is made whether the telemetry device is operating in a first mode requiring assisted Global Positioning System (A-GPS) data from the wireless network to determine location of the telemetry device. The A-GPS data is transmitted to the telemetry device if the telemetry device is operating in the first mode, wherein the telemetry device operates in a second mode to obtain GPS data autonomously for determining the location when the telemetry device is outside of the coverage area of the wireless network.",
	"url": null,
	"owner": "Skyguard, LLC",
	"publication_number": "07460871",
	"publication_date": "2008-12-02",
	"application_number": "10758770",
	"application_date": "2004-01-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Location beacon database",
	"summary": "",
	"abstract": "A location beacon database and server, method of building location beacon database, and location based service using same. Wi-Fi access points are located in a target geographical area to build a reference database of locations of Wi-Fi access points. At least one vehicle is deployed including at least one scanning device having a GPS device and a Wi-Fi radio device and including a Wi-Fi antenna system. The target area is traversed in a programmatic route to avoid arterial bias. The programmatic route includes substantially all drivable streets in the target geographical area and solves an Eulerian cycle problem of a graph represented by said drivable streets. While traversing the target area, periodically receive the GPS coordinates of the GPS device. While traversing the target area, detecting Wi-Fi signals from Wi-Fi access points in range of the Wi-Fi device and recording identity information of the detected Wi-Fi access point in conjunction with GPS location information of the vehicle when the detection of the Wi-Fi access point was made. The location information is used to reverse triangulate the position of the detected Wi-Fi access point; and the position of the detected access point is recorded in a reference database. A user-device having a Wi-Fi radio may be located. A reference database of calculated locations of Wi-Fi access points in a target area is provided.",
	"url": null,
	"owner": "Skyhook Wireless, Inc.",
	"publication_number": "07433694",
	"publication_date": "2008-10-07",
	"application_number": "11261848",
	"application_date": "2005-10-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for building a location beacon database",
	"summary": "",
	"abstract": "A location beacon database and server, method of building location beacon database, and location based service using same. Wi-Fi access points are located in a target geographical area to build a reference database of locations of Wi-Fi access points. At least one vehicle is deployed including at least one scanning device having a GPS device and a Wi-Fi radio device and including a Wi-Fi antenna system. The target area is traversed in a programmatic route to avoid arterial bias. The programmatic route includes substantially all drivable streets in the target geographical area and solves an Eulerian cycle problem of a graph represented by said drivable streets. While traversing the target area, periodically receive the GPS coordinates of the GPS device. While traversing the target area, detecting Wi-Fi signals from Wi-Fi access points in range of the Wi-Fi device and recording identity information of the detected Wi-Fi access point in conjunction with GPS location information of the vehicle when the detection of the Wi-Fi access point was made. The location information is used to reverse triangulate the position of the detected Wi-Fi access point; and the position of the detected access point is recorded in a reference database. A user-device having a Wi-Fi radio may be located. A reference database of calculated locations of Wi-Fi access points in a target area is provided. In response to a user application request to determine a location of a user-device having a Wi-Fi radio, the Wi-Fi device is triggered to transmit a request to all Wi-Fi access points within range of the Wi-Fi device. Messages are received from the Wi-Fi access points within range of the Wi-Fi device, each message identifying the Wi-Fi access point sending the message. The signal strength of the messages received by the Wi-Fi access points is calculated. The reference database is accessed to obtain the calculated locations for the identified Wi-Fi access points. Based on the number of Wi-Fi access points identified via received messages, choosing a corresponding location-determination algorithm from a plurality of location-determination algorithms, said chosen algorithm being suited for the number of identified Wi-Fi access points. The calculated locations for the identified Wi-Fi access points and the signal strengths of said received messages and the chosen location-determination algorithm are used to determine the location of the user-device. The database may be modified with newly added position information to improve quality of previously determined positions, and error prone information is avoided.",
	"url": null,
	"owner": "Skyhook Wireless, Inc.",
	"publication_number": "07403762",
	"publication_date": "2008-07-22",
	"application_number": "11261987",
	"application_date": "2005-10-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Server for updating location beacon database",
	"summary": "",
	"abstract": "A location beacon database and server, method of building location beacon database, and location based service using same. Wi-Fi access points are located in a target geographical area to build a reference database of locations of Wi-Fi access points. At least one vehicle is deployed including at least one scanning device having a GPS device and a Wi-Fi radio device and including a Wi-Fi antenna system. The target area is traversed in a programmatic route to avoid arterial bias. The programmatic route includes substantially all drivable streets in the target geographical area and solves an Eulerian cycle problem of a graph represented by said drivable streets. While traversing the target area, Wi-Fi identity information and GPS location information is detected. The location information is used to reverse triangulate the position of the detected Wi-Fi access point; and the position of the detected access point is recorded in a reference database.",
	"url": null,
	"owner": "Skyhook Wireless, Inc.",
	"publication_number": "07414988",
	"publication_date": "2008-08-19",
	"application_number": "11261898",
	"application_date": "2005-10-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Call intercept methods, such as for customer self-support on a mobile device",
	"summary": "",
	"abstract": "A method for intercepting calls from a remote or mobile device for customer self-support detects when users or subscribers dial one or more predetermined numbers. If the number corresponds to one of the predetermined numbers (such as a customer support number), the phone may intercept the call and display a list of potential solutions to the subscriber's problems. Various other features and embodiments art disclosed.",
	"url": null,
	"owner": "SNAPin Software Inc.",
	"publication_number": "07353016",
	"publication_date": "2008-04-01",
	"application_number": "11063663",
	"application_date": "2005-02-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Damage containment by translation",
	"summary": "",
	"abstract": "Interface elements of a logic module are translated by renaming, adding dummy elements, and/or associating traps with dummy elements. Trusted parties are made aware of renamed interface elements and thereby allowed to properly communicate with logic module. Untrusted parties are kept unaware of the interface translation, with attempts to guess correct interface elements likely to fail, instead resulting in communication attempts with dummy elements and subsequent trapping of the untrusted parties.",
	"url": null,
	"owner": "Solidcore Systems, Inc.",
	"publication_number": "07464408",
	"publication_date": "2008-12-09",
	"application_number": "10651588",
	"application_date": "2003-08-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing content-owner control in a networked device",
	"summary": "",
	"abstract": "An apparatus and methods for providing content-owner control in a device is optionally networked. A method for accessing media content has steps of initiating a first view providing access to at least a portion of a first content within the first view, initiating a second view providing access to a second content within the second view and preventing the second content from being accessed with the first content in the first view. Additionally, access to a third content with the first content is allowed in the first view. An apparatus includes a first view configured to provide access to a first content, a second view configured to provide access to a second content, and a graphical subsystem configured to prevent the second content from being access in the first view. In one variation, the first view is a media content view, and the second view is a web view.",
	"url": null,
	"owner": "Sonic Solutions, a California corporation",
	"publication_number": "07392481",
	"publication_date": "2008-06-24",
	"application_number": "10190307",
	"application_date": "2002-07-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Presentation of media content",
	"summary": "",
	"abstract": "A method of reproducing an interactive recording medium in a reproducing apparatus, comprising the steps of: checking attribute information for auxiliary contents data of A/V data recorded on the interactive recording medium; and determining a presentation method for the auxiliary contents data based on the attribute information and presenting the auxiliary contents data accordingly.",
	"url": null,
	"owner": "Sonic Solutions, a California corporation",
	"publication_number": "07379661",
	"publication_date": "2008-05-27",
	"application_number": "11154092",
	"application_date": "2005-06-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Presentation of media content",
	"summary": "",
	"abstract": "A media services interface for use in a readable medium playback device enables synchronization of disparate media playback, network directed playback of media, media playback control via displayed html/javascript file, logging of consumer identifier, media identifier, and playback device identifier in a cookie or log file. The media services comprises a command handler, a properties handler, an event generator, a cookie manager, a navigator state module, an identifier engine, an initialization module, and a bookmark manager. The command handler executes commands received from a connected network, a displayed html/javascript file, etc. The properties handler provides information relating to system states in response to queries including the status of any network connections. The event generator generates events in response to predetermined system occurrences. The cookie manager records information for later reading including the tracking of consumer identifier, playback device identifier, and readable medium identifier triples. The navigator state module maintains information regarding the state of the playback device and the interaction with the readable medium. The identifier engine carries out determination of the identity of the readable medium. The initialization module controls system initialization. The bookmark manager generates bookmarks which preserve positions in the playback of the readable medium for later recall. Network sources can provide media content and issue commands which synchronize the playback of both network and readable medium originated content over multiple playback devices through the use of the synchronization abilities of the media services.",
	"url": null,
	"owner": "Sonic Solutions, A California corporation",
	"publication_number": "07454515",
	"publication_date": "2008-11-18",
	"application_number": "11134794",
	"application_date": "2005-05-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and article of manufacture for a business layer component in a multimedia synchronization framework",
	"summary": "",
	"abstract": "A system, method and article of manufacture are provided for identifying a plurality of events which are played back simultaneously on a plurality of networked client apparatuses. First, a plurality of events are stored in memory on a plurality of client apparatuses. The events each have a unique identifier associated therewith and which are stored in the memory. In operation, the client apparatuses are adapted to be coupled to a host computer via a network. The identifier of the event which is stored in the memory of the client apparatuses is then retrieved utilizing the network. Such identifier is subsequently compared with an identifier of a scheduled event. If the comparison renders a match, the playback of the event is begun on each of the client apparatuses.",
	"url": null,
	"owner": "Sonic Solutions, A California Corporation",
	"publication_number": "07458091",
	"publication_date": "2008-11-25",
	"application_number": "09489601",
	"application_date": "2000-01-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and article of manufacture for a common cross platform framework for development of DVD-Video content integrated with ROM content",
	"summary": "",
	"abstract": "A method for providing enhanced content for play across multiple play platforms employs steps of delivering media content to a client device; delivering HTML content to a client device, the HTML content being accessible and usable by a plurality of client device platforms; activating a browser to access the HTML content, the browser being located on and compatible for use with the client device; activating firmware on the client device to access the media content; and incorporating the accessed HTML content with the accessed media content.",
	"url": null,
	"owner": "Sonic Solutions, a California corporation",
	"publication_number": "07346920",
	"publication_date": "2008-03-18",
	"application_number": "09898479",
	"application_date": "2001-07-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Image mastering API",
	"summary": "",
	"abstract": "When recording data to optical media, data to be recorded is selected using a client application. An image mastering application programming interface is provided which is comprised of a collection of COM objects and integrated into the operating system. The plurality of COM objects includes a disc master, a file, a disc recorder, and a burn engine. The data selected for recording is sent through an application format interface to the file that is part of the image mastering application interface. The selected data in the file is recorded to optical media directly from Kernel Mode of the operating system.",
	"url": null,
	"owner": "Sonic Solutions, Inc.",
	"publication_number": "07359626",
	"publication_date": "2008-04-15",
	"application_number": "11083647",
	"application_date": "2005-03-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Violations in a peer-to-peer relay network",
	"summary": "",
	"abstract": "Methods and apparatus for implementing peer-to-peer relay. In one implementation, a method of detecting and recovering from violations in a peer-to-peer relay network includes: receiving a message at a peer system from a sending peer system connected to said peer system in a peer-to-peer relay network detecting a violation in said received message; and sending an alert message to each peer system connected to said peer system in said peer-to-peer relay network; wherein each peer system in said peer-to-peer relay network stores a connection limit defining a number of other peer systems up to which that peer system is permitted to connect, and each peer system stores a set of one or more relay rules for relaying data to other peer systems connected to that peer system.",
	"url": null,
	"owner": "Sony Computer Entertainment America Inc.,",
	"publication_number": "07392422",
	"publication_date": "2008-06-24",
	"application_number": "10700797",
	"application_date": "2003-11-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Broadcast messaging in peer to peer overlay network",
	"summary": "",
	"abstract": "Broadcast messages are efficiently directed to nodes of an overlay network. Broadcast messages include an End ID parameter specifying the range of key values for nodes that should receive the broadcast message. Each node of an overlay network maintains a list of finger nodes and their respective key values. Upon receiving a broadcast message, a node assigns a finger node a new End ID value based upon the End ID value of the broadcast message or the key value of an adjacent finger node. The node compares a finger node's new End ID value with the finger node's key value to determine whether to forward the broadcast message to that finger node. A broadcast message forwarded to a finger node includes an End ID parameter equal to the new End ID value determined for the finger node. Nodes can aggregate response messages from its finger nodes.",
	"url": null,
	"owner": "Sony Computer Entertainment Inc.",
	"publication_number": "07468952",
	"publication_date": "2008-12-23",
	"application_number": "11291121",
	"application_date": "2005-11-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for improving processing performance by controlling latch points",
	"summary": "",
	"abstract": "Methods and apparatus provide for performing pre-execution processes to prepare instructions of an instruction set for further processing; executing the instructions in a pipeline of execution stages using digital logic for processing data in accordance with the instructions within one clock cycle per stage; latching the data each clock cycle for delivery to a next execution stage using one or more of a plurality of latch point circuits; and controlling each of the latch point circuits to operate as a buffer or as a latch.",
	"url": null,
	"owner": "Sony Computer Entertainment Inc.",
	"publication_number": "07395411",
	"publication_date": "2008-07-01",
	"application_number": "11079565",
	"application_date": "2005-03-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Peer-to-peer networking system using interconnectivity framework and peer library for interacting with applications",
	"summary": "",
	"abstract": "An interconnectivity framework, method, and system for communicating in a peer-to-peer network is disclosed. A peer of the interconnectivity framework includes a peer library for publishing, messaging and locating component blocks over the peer-to-peer network and a telespace framework for managing component blocks in response to a requirement of an application to be executed at the peer. The component blocks being obtained by the peer library enable execution of the application at the peer in accordance with the requirement. The requirement defines the type of application so that the appropriate component blocks can be obtained from the peer-to-peer network. A networker is further included to enable communication with specific grids of the peer-to-peer network and to enable the publishing, messaging, and locating of objects published by specific peers of a grid of the peer-to-peer network.",
	"url": null,
	"owner": "Sony Computer Entertainment Inc.",
	"publication_number": "07421708",
	"publication_date": "2008-09-02",
	"application_number": "10859430",
	"application_date": "2004-06-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data distribution method and apparatus, and data reception method and apparatus",
	"summary": "",
	"abstract": "Information matching output attributes and/or content attributes is contained in a single data content for distribution and is divided by tags for separation during processing. The expression format is prescribed by style sheets, so that the receiving system side selectively stores style sheets matching the content attributes of the distribution content or matching the output attributes of the output apparatus.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "07380206",
	"publication_date": "2008-05-27",
	"application_number": "09856039",
	"application_date": "2000-09-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data recording apparatus and method, data reproducing apparatus and method, data recording/reproducing apparatus and method, and transmission medium",
	"summary": "",
	"abstract": "Video data and audio data inputted respectively from a camera system and a microphone are compressed and encoded in a video compressor/expander-encoder/decoder and an audio compressor/expander-encoder/decoder respectively, and then are multiplexed in a multiplexer. Subsequently the multiplexed data are supplied to a hard disk drive via an AV interface, a host bus, an interface adaptor and an interface. Information representing the kind of the data is written in a register. The data supplied to the hard disk drive are recorded in a disk, on the basis of such information, by a method conforming with the data. And in a reproduction mode, the data are reproduced, on the basis of such information, by a method conforming with the data. Thus, the data can be recorded or reproduced efficiently by the relevant method conforming with the kind of the data.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "RE040044",
	"publication_date": "2008-02-05",
	"application_number": "10809913",
	"application_date": "2004-03-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dispatching application steps of an application running on an application server in a client/server environment",
	"summary": "",
	"abstract": "A method for dispatching steps of an application running on an application server which can be accessed from client terminals. Users select user interaction elements on client terminals, and the interactions are transmitted to the application server executing a main part of an application, which creates output that contains the next set of possible user interactions. Calling application steps can be addressed and invoked by other application steps in order to reuse software components necessary for processing said other application steps. Nesting programming commands used to call another application step are arbitrarily nested and serve as a called sub-routine within the calling application step. Values are returned to the calling application step, and nesting paths of called application steps are discarded in case a user switches to another application.",
	"url": null,
	"owner": "Sony Deutschland GmbH",
	"publication_number": "07398527",
	"publication_date": "2008-07-08",
	"application_number": "10437678",
	"application_date": "2003-05-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and an apparatus for the integration of IP devices into a HAVi network",
	"summary": "",
	"abstract": "A method and an apparatus for integrating IP devices into a HAVi network An Internet Protocol (IP) and HAVi compliant device acts as a controller in the HAVi network and communicates with at least on HAVi compliant device using HAVi application programming interfaces (APIs). A server on the controller communicates with at least one IP device having a proxy and an IP and HAVi API. The server includes at least one IP device device control module (IP device DCM) corresponding to the IP device. The IP device providing API support to translate and relay calls between the proxy and the server so that at least one HAVi compliant device can communicate with the IP device.",
	"url": null,
	"owner": "Sony Electronics Inc.",
	"publication_number": "07343427",
	"publication_date": "2008-03-11",
	"application_number": "09875670",
	"application_date": "2001-06-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Process control manager for audio/video file system",
	"summary": "",
	"abstract": "A system and method for managing file system processes is provided. In an exemplary embodiment, the system includes a global process module to handle and monitor the file system processes within a file system. The global process module includes a process status monitor, a pointers control, process size indicator, and a number of local process objects. The process status monitor is used to maintain and monitor information pertaining to the status of file system processes running on the file system. The pointers control is used to point to the various local process objects. The process size indicator is used to maintain an inventory of size information for each file system process. Each local process object is associated with a file system process. Each local process object further includes a progress monitor, a callback function, a process phase monitor, and a set of application specific process properties. The progress monitor is used to monitor the state of a particular process. Process states include an inactive state, a first-call state, a going-on state, and a last-call state. The callback function is used to provide a way to signify the completion of a particular process. The process phase monitor is used to monitor the various phases, if any, of a state of a particular process. Finally, the set of application specific process properties are parameters which are associated with each particular process. In an exemplary embodiment, the global process module handles and monitors the file system processes in accordance with a process management method. The process management method uses the state of a particular process to facilitate its execution.",
	"url": null,
	"owner": "Sony Electronics, Inc.",
	"publication_number": "07382970",
	"publication_date": "2008-06-03",
	"application_number": "10005206",
	"application_date": "2001-12-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Request event manager and event lists for home and office systems and networks",
	"summary": "",
	"abstract": "A request event manager for a network of consumer electronic devices. In one embodiment, the request event manager maintains a database of home network services, and allows the home network services to be scheduled for execution over time. Home network services herein refer to high-level abstractions of a consumer electronic device's functionalities, and also content that is available from the consumer electronic device. The request event manager of the present invention also creates and maintains a service request list (SRL) which details the service actions in a hierarchical fashion. By maintaining a database of home network services, the request event manager of the present invention allows user applications to specify and schedule concatenated or hierarchical events such that different network activity across interconnected heterogeneous consumer electronic devices can be synchronized without requiring complicated logic to be implemented. The request event manager of the present invention may be implemented as part of a middleware infrastructure for a home network, and may reside within a home server.",
	"url": null,
	"owner": "Sony Electronics, Inc.",
	"publication_number": "07412538",
	"publication_date": "2008-08-12",
	"application_number": "09594227",
	"application_date": "2000-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application cache management",
	"summary": "",
	"abstract": "A cache management system including an in-memory database system for managing cached data is provided. The cache management system includes an application, a wrapper and an engine. The application utilizes data and has a rule related to the cache management of the data. The wrapper is operable to receive data from the application and provide at least a portion of the data and a component of the rule to the in-memory database system. The engine is operable to monitor the in-memory database system and apply the rule to the cached data. A method for managing cache data is also provided.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "07409379",
	"publication_date": "2008-08-05",
	"application_number": "10628151",
	"application_date": "2003-07-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Business-to-business security integration",
	"summary": "",
	"abstract": "A system for controlling access to computing resources within an enterprise. The system can consist of a web server and a web security agent controlling access to URLs, a security gatekeeper and an access server controlling access to APIs, and a core security framework used by both the web server and web security agent and the security gatekeeper and access server to store security data and policies and make security decisions. The access server can be a SOAP server. The core security framework can consist of a policy store, a data store, and a policy server, where the data store can be a relational database or a directory. A session token can be attached to an approved request for access to an API and can provide access to the API for the duration of a session.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "07334254",
	"publication_date": "2008-02-19",
	"application_number": "10631984",
	"application_date": "2003-07-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer software method for administering batch jobs",
	"summary": "",
	"abstract": "The present invention discloses a method for processing batch jobs. A batch job is wrapped to create an application programming interface for communication with a batch framework. The batch framework comprises a batch dispatcher class, and the batch dispatcher class further comprises a method to execute the batch job. The batch framework is invoked according to a predetermined schedule. The batch job may reside locally with the batch framework remotely from the batch framework. In a preferred embodiment, the batch framework is invoked by a scheduling service, preferably the AutoSys scheduling service on Unix platform. The AutoSys scheduling service further executes a command line parameter, either a Unix shell script or a Windows NT batch file.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "07353514",
	"publication_date": "2008-04-01",
	"application_number": "09698729",
	"application_date": "2000-10-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed large-scale application benchmark system",
	"summary": "",
	"abstract": "A system for testing computer software is provided that comprises a client module having a first interface to promote communication with software to be tested, the client module having instructions operable to test the software, an agent module operable on a first computer system to initiate the client module on the first computer system, a user interface adapted to receive input including test information, and a manager module coupled to the receive the input from the user interface and generate at least a portion of the instructions of the client module using a portion of the test information, the manager module operable to communicate the portion of the test instructions and the first interface to the first computer and further operable to communicate with the agent module to initiate the client module to test the software. A method for testing software is also provided.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "07337431",
	"publication_date": "2008-02-26",
	"application_number": "10745212",
	"application_date": "2003-12-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enterprise integration test tool",
	"summary": "",
	"abstract": "A system for load testing an integrated enterprise computer system is provided. The system uses a forecast that predicts future use of the integrated enterprise computer system. The forecast maintains a predicted volume of transactions and a predicted mix of transactions for the integrated enterprise computer system. The system includes an application list that details front-end applications of the integrated enterprise computer system. The application list identifies whether the front-end applications will participate in the load testing. The system further includes a generator to generate a test data file having transactions randomly used by scripts to test the integrated enterprise computer system. The generator produces the test data file using the predicted volume and mix of transactions maintained by the forecast and based on the front-end applications participating in the load test. A method for load testing using the test data file is also provided.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "07328134",
	"publication_date": "2008-02-05",
	"application_number": "10787709",
	"application_date": "2004-02-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information service layer",
	"summary": "",
	"abstract": "An information service layer for data retrieval is provided. The information service layer includes a control system having a registry and is operable to receive a request for data from a requester. The request includes a source identifier and a data identifier. A client service is operable to register with the control system and receive the request for data. The client service is further operable to communicate a requested data related to the data identifier to the requester. A retrieval service is operable to utilize at least a portion of the source identifier to retrieve the requested data related to the data identifier and communicate the requested data to the client service. A method for obtaining data using an information service layer is also provided.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "07349952",
	"publication_date": "2008-03-25",
	"application_number": "10682505",
	"application_date": "2003-10-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Messaging bridge that facilitates communication with a mainframe environment",
	"summary": "",
	"abstract": "A system for communication between a mainframe environment and a Java environment. The system can consist of a mainframe messaging system resident in the mainframe environment having an outbound and an inbound queue, a Java messaging system resident in the Java environment having an outbound and an inbound queue, and an intermediate messaging system coupled to the outbound and inbound queues of the mainframe messaging system and coupled to the outbound and inbound queues of the Java messaging system. The Java environment may be a J2EE environment. The mainframe messaging system may be an MQSeries messaging system and the Java messaging system may be a JMS messaging system. The outbound queue of the mainframe messaging system may communicate only messages directed to the Java environment and the inbound queue of the mainframe messaging system may communicate only messages directed from the Java environment.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "07418711",
	"publication_date": "2008-08-26",
	"application_number": "10424622",
	"application_date": "2003-04-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Optimizing transaction data for load testing",
	"summary": "",
	"abstract": "A system to load test a computer system is provided. The system comprises a test script to generate transactions including a basis transaction, the basis transaction operable to initiate a conversation with a stateful enterprise java bean, and a non-basis transaction. The system also comprises a forecast and a transaction iteration calculator, the transaction iteration calculator operable to determine how often the non-basis transaction executes relative to the basis transaction. For a non-basis transaction having a forecast less than the forecast of the basis-transaction, the non-basis transaction executes once if the number given by a randomly selected number between zero and the basis transaction forecast is less than the forecast of the non-basis transaction forecast and zero times otherwise. For a non-basis transaction having a forecast more than the forecast of the basis-transaction, the non-basis transaction may execute according to another calculation. A script controller is also provided.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "07346807",
	"publication_date": "2008-03-18",
	"application_number": "10885814",
	"application_date": "2004-07-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Security framework bridge",
	"summary": "",
	"abstract": "The present disclosure is a method for bridging requests for access to resources between requesters in a distributed network and an authenticator servicing the distributed network. The bridging mechanism has security features including a naming service for machine authentication and machine process rules to authorize what process machines can perform. The security proxy bridge intercepts an access request, and checks the IP address for machine authentication as well as the machine process rules and if both verifications are successful, the bridge then forwards the request for access to the authenticator. The security proxy framework utilizes a data structure that provides a method for storing selected security information stored as data records supporting an authentication and authorization system for users to access resources on multiple components of a distributed network supporting multiple business units of an enterprise. Primary authentication information stored herein includes general user information, security information, and contact information.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "07346930",
	"publication_date": "2008-03-18",
	"application_number": "10284680",
	"application_date": "2002-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method of measuring the reliability of a software application",
	"summary": "",
	"abstract": "A computer automated system for measuring software reliability is provided. The system comprises a data store including mean-time-between-failure and mean-time-to-repair metrics for applications and an analysis component. The analysis component determines a reliability index for an application and generates a report associating the reliability index with the application. The reliability index is determined based on dividing the mean-time-between-failure of the application by the mean-time-to-repair of the application. An embodiment of the computer automated system further includes a maintenance financial index that is used to evaluate the development plan, where the maintenance financial index is based on the product of the reliability index multiplied by a delivery rate metric. The delivery rate metric is proportional to a software size metric and inversely proportional to a software development effort metric.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "07464119",
	"publication_date": "2008-12-09",
	"application_number": "11191282",
	"application_date": "2005-07-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Telecommunications device for use between analog telephones and a packet network",
	"summary": "",
	"abstract": "A communication device is coupled to a packet network and includes two ports coupled to two analog telephones. The communication device receives a message from the packet network indicating a called number and processes the called number to select one of the ports and to transfer a ring signal through the selected port to ring the analog telephone. The communication device transfers a message to the packet network indicating that a called party is being alerted, detects an off-hook condition for the analog telephone and stops the transfer of the ring signal, transfers a message to the packet network indicating packet routing information for the communication session, exchanges analog voice signals with the analog telephone through the selected port, exchanges voice packets with the packet network using the packet routing information, and interworks between the analog voice signals and the voice packets.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "07443840",
	"publication_date": "2008-10-28",
	"application_number": "11060235",
	"application_date": "2005-02-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for accessing a universal message handler on a mobile device",
	"summary": "",
	"abstract": "A mobile information device may execute a Java MIDlet or a non-MIDlet application. The mobile information device may further include an object-oriented application program interface that allows one or more object-oriented object classes to allow input and output data to be communicated between Java MIDlets in different MIDlet Suites and between non-MIDlet applications. The application program interface may be used to allow applications to access a universal message handler executing on the mobile information device.",
	"url": null,
	"owner": "Sprint Spectrum L.P.",
	"publication_number": "07471947",
	"publication_date": "2008-12-30",
	"application_number": "11455370",
	"application_date": "2006-06-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for exchanging data between portable applications for mobile devices",
	"summary": "",
	"abstract": "A mobile information device may execute a Java MIDlet or a non-MIDlet application. The mobile information device may further include an application management system that allows one or more object-oriented object classes to allow input and output data to be communicated between Java MIDlets in different MIDlet Suites and between non-MIDlet applications.",
	"url": null,
	"owner": "Sprint Spectrum L.P.",
	"publication_number": "07437149",
	"publication_date": "2008-10-14",
	"application_number": "10808120",
	"application_date": "2004-03-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for push launching applications with context on a mobile device",
	"summary": "",
	"abstract": "A mobile information device may execute a Java MIDlet or a non-MIDlet application. The mobile information device may further include an object-oriented application program interface that allows one or more object-oriented object classes to allow input and output data to be communicated between Java MIDlets in different MIDlet Suites and between non-MIDlet applications. The application program interface may be used to push launch applications with context on the mobile information device.",
	"url": null,
	"owner": "Sprint Spectrum L.P.",
	"publication_number": "07469140",
	"publication_date": "2008-12-23",
	"application_number": "11455380",
	"application_date": "2006-06-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Push-to talk over Ad-Hoc networks",
	"summary": "",
	"abstract": "The invention proposes a network system comprising a plurality of network nodes (), each of the network nodes comprising means () for temporarily forming a group with at least one of the plurality of network nodes, sending means () for sending information (which may include voice, text message, images etc.) to the group and receiving means () for receiving information from the group, wherein the sending means and the receiving means are configured to provide a direct contact via a radio connection () between at least two network nodes of the group. The invention also proposes a corresponding method, a corresponding network node and network control nodes for assisting in forming temporary groups.",
	"url": null,
	"owner": "Spyder Navigations, L.L.C.",
	"publication_number": "07394798",
	"publication_date": "2008-07-01",
	"application_number": "10962694",
	"application_date": "2004-10-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic system having modular expansion function facilities",
	"summary": "",
	"abstract": "An electronic system supporting modular expansion of its functions is of a type including a portable host electronic device associated with an expansion module adapted for quick-connect engagement and disengagement in/from the portable device. The expansion module includes a series of peripheral devices adapted to serve different classes of functions; a non-volatile memory storing information that pertains to configuring the different functions in the module; a re-configurable device adapted to establish connections, implement functional portions, and control all the system components; a control device adapted to cooperate with the host device in guiding the steps for re-configuring the whole system; and a software algorithm adapted to instruct the system to re-configure itself on which function and with which characteristics.",
	"url": null,
	"owner": "STMicroelectronics S.r.l.",
	"publication_number": "07350008",
	"publication_date": "2008-03-25",
	"application_number": "11508533",
	"application_date": "2006-08-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Access control over dynamic intellectual capital content",
	"summary": "",
	"abstract": "Methods, systems, and articles of manufacture consistent with the present invention provide for access control over dynamic intellectual capital content. A subscriber subscribes to a datatype, the datatype having a predetermined runtime property that restricts use of the datatype. The datatype is associated with a data referenced in the datatype and maintained separate from the datatype. The datatype is received responsive to the subscription. A determination is made whether the runtime properties are valid. If the runtime properties are valid, a determination is made whether a user of the subscriber has permission to access the data referenced in the datatype. If the user has permission to access the data, the user is provided access to the data.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07428756",
	"publication_date": "2008-09-23",
	"application_number": "10691283",
	"application_date": "2003-10-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application programming interface for provisioning services",
	"summary": "",
	"abstract": "An invention is provided for provisioning services to client devices. In one embodiment, discovery transactions are included that allow an adapter software component to retrieve information regarding services available to a client device from a provisioning application. A service comprises a plurality of content files capable of being installed on the client device. Also included are subscription transactions that allow an adapter software component to manage content in service directories. A service directory comprises a plurality of services. In addition, delivery transactions are included that allow an adapter to facilitate downloading of data related to services to the client device.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07444386",
	"publication_date": "2008-10-28",
	"application_number": "10600119",
	"application_date": "2003-06-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Approach for allocating resources to an apparatus based on optional resource requirements",
	"summary": "",
	"abstract": "An approach for allocating resources to an apparatus based on resource requirements generally involves a resource allocator receiving a request that specifies resource requirements for the apparatus. A resource allocator determines whether resources are available that satisfy the resource requirements. If resources are available that satisfy a resource requirement, the resource allocator indicates that the resource requirement is fulfilled and the resources are allocated to the apparatus. If resources are not available that satisfy a resource requirement, the resource allocator indicates that the resource requirement is not fulfilled and the resources are not allocated to the apparatus. The apparatus is implemented based on the allocated resources. A resource requirement can be optional so that if the optional resource requirement is not fulfilled, the apparatus can still be implemented. Conversely, a resource requirement can be necessary so that if the necessary resource requirement is not fulfilled, the apparatus is not implemented.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07463648",
	"publication_date": "2008-12-09",
	"application_number": "11042813",
	"application_date": "2005-01-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Approach for determining an amount to bill a customer for the use of resources",
	"summary": "",
	"abstract": "A novel approach for determining an amount to be billed to a customer for the use of resources is based upon usage data and value data. The usage data indicates usage, by the customer, of a set of one or more resources during a specified period of time. The set of one or more resources may be dynamically selected and de-selected from a plurality of resources at any time. For example, the set of one or more resources may comprise a VSF as described herein. The value data indicates generally value provided by each resource from the set of one or more resources used during the specified period of time. The value provided by each resource may be expressed in service units per unit time and a charge may be applied for each service unit consumed during a specified period of time. Example billing schemes to which the approach is applicable include, without limitation, basic billing, flex billing, event flex billing and open flex billing.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07370013",
	"publication_date": "2008-05-06",
	"application_number": "09911925",
	"application_date": "2001-07-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Blocking access to selected APIs",
	"summary": "",
	"abstract": "A method for testing operation of a computer application. An emulator is provided to run on a development platform subject to limitations of multiple different target devices, the emulator including a set of emulator APIs corresponding to target Application Program Interfaces (APIs) available on the different target devices. A subset of the target APIs that are supported by one of the target devices is specified. Access by the emulator to the emulator APIs that correspond to one or more of the target APIs that are not in the specified subset is blocked. The application is run on the emulator subject to the blocked access.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07319948",
	"publication_date": "2008-01-15",
	"application_number": "10339305",
	"application_date": "2003-01-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Bridging between a data representation language message-based distributed computing environment and other computing environments using proxy service",
	"summary": "",
	"abstract": "Various embodiments of mechanisms for bridging data representation language messaging based distributed computing environments to foreign environments are described. A device proxy may implement a device protocol and a distributed computing environment protocol to bridge devices into the distributed computing environment. A client proxy is described that implements the distributed computing environment protocol on behalf of a foreign client such as a browser. A service proxy is described that implements the distributed computing environment protocol on behalf of a foreign service. A transport proxy is described that routes data representation language messages between two different message transports. A distributed computing environment client proxy may allow distributed computing environment clients to access Remote Method Invocation (RMI)-based environment services. An RMI-based environment client proxy may allow RMI-based environment clients to access distributed computing environment services.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07458082",
	"publication_date": "2008-11-25",
	"application_number": "09693672",
	"application_date": "2000-10-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Collaborative content coherence using mobile agents in peer-to-peer networks",
	"summary": "",
	"abstract": "A mobile agent may be provided for collaborative content control in peer-to-peer networks. A peer may launch a mobile agent including an itinerary of peers to be visited and indications of one or more documents that the peers are collaboratively editing. The mobile agent may visit peers indicated by the itinerary to collect version information for the document(s). The mobile agent may return the version information to the initiating peer, which may coordinate each of the document(s) on the peer to a most recent version in accordance with the version information provided by the mobile agent. Visited peers may use the payload to determine if their version of the document(s) are up to date and, if not, may add a version update request to the payload. The initiating peer may send the most recent version information to peers that added version update requests to the payload.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07328243",
	"publication_date": "2008-02-05",
	"application_number": "10285066",
	"application_date": "2002-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Conflictless replication in a multi-master directory system",
	"summary": "",
	"abstract": "A directory server system may include master servers and a non-master server, each server storing directory server data that includes updates, each update having a creation time. The master servers exchange replicate updates through update communications. Each master server may include an update state builder for maintaining local update state items including an estimate time indication related to update communications received by the local master server about the directory server data stored by the designated master server. A master server may also include an upper time builder for evaluating an upper time value that is the earliest one of the estimate time indications in the local update state items. A master server may also include a master-to-non-master replicate function, for sending to the non-master server the updates in the local directory server data which have an associated creation time no later than the upper time value.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07340488",
	"publication_date": "2008-03-04",
	"application_number": "10837316",
	"application_date": "2004-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Cross platform locale data name mapping interfaces and methods of use thereof",
	"summary": "",
	"abstract": "A method of mapping locale data names stored in a cross platform database is disclosed. In the described embodiment, the database is formatted and the attributes are loaded in the formatted database. An attribute associated with a source platform is selected and the database is queried for the selected attribute. The selected attribute is then provided to the target platform.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07343380",
	"publication_date": "2008-03-11",
	"application_number": "10301523",
	"application_date": "2002-11-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic downloading of keyboard keycode data to a networked client",
	"summary": "",
	"abstract": "The present invention is directed toward dynamic downloading of keyboard keycode data to a networked client. According to one or more embodiments of the present invention, a user logs into a networked client by presenting a smart card to a card reader attached to the client (or by some other authentication mechanism) and enters a PIN into the keyboard. The keycodes entered by the user logging into the client are obtained, translated into ASCII characters, and presented to the smart card. If the PIN is correct, the user is able to log in, otherwise the log in fails. In one embodiment, when the user enters the PIN, a translation table is downloaded from the server into the client. The client uses the translation table to convert the keycodes to ASCII text and presents the ASCII text to the smart card for authentication.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07448071",
	"publication_date": "2008-11-04",
	"application_number": "11245316",
	"application_date": "2005-10-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic location storage and retrieval in a wireless portal server",
	"summary": "",
	"abstract": "Embodiments of the present invention relate to a method and mechanism for managing location information in a wireless portal environment. The method consists of acquiring the location information from a user's location-enabled wireless device which is in communication with a wireless network, storing the location information in a storage device in the wireless network, retrieving the location information from the storage device in the wireless network, and disseminating the location information to a client which is also in communication with the wireless network. A client can be any type of network presence that is enabled to provide services that are enhanced with knowledge of a user's physical location in a wireless portal environment. The location information can be geophysical information derived from global positioning system (GPS) or any other location-specific information from a suitable source.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07328254",
	"publication_date": "2008-02-05",
	"application_number": "10116388",
	"application_date": "2002-04-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Framework to facilitate Java testing in a security constrained environment",
	"summary": "",
	"abstract": "A method for testing an implementation of a specification is provided. The method includes providing a security manager capable of being configured to test compliance of an implementation of a specification, and installing the security manager. The method further includes constructing a security policy corresponding to a desired security environment that a test requires. The method also includes executing the test with the security manager using the security policy.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07389495",
	"publication_date": "2008-06-17",
	"application_number": "10452664",
	"application_date": "2003-05-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generation of Administration framework for server systems",
	"summary": "",
	"abstract": "A generator mechanism for generating an administration framework for server systems. In one embodiment, the administration framework may be generated from meta-information that describes elements of configuration data and relationships among the elements. The mechanism may provide automatic generation of the administration framework. In one embodiment, the administration framework may be a stack on an administration server that includes several layers each including one or more generated components. In one embodiment, the generation mechanism may generate management beans of a management layer, representing business logic of the server; configuration beans of a data representation layer; and a presentation layer for accessing and administering generated components. The data representation layer may provide transparency to the persistent store for the other layers. A production generation of the administration framework may be performed and instances of generated components may be deployed on other servers.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07412497",
	"publication_date": "2008-08-12",
	"application_number": "10205058",
	"application_date": "2002-07-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hashing based messaging approach to a cluster",
	"summary": "",
	"abstract": "In a system and method for distributing and processing messages, a message may be sent to a message middleware component by a message producer. The message middleware component may provide the message to a cluster of nodes (such as a cluster of application servers or a cluster of application components). The node may implement a message verifier to determine if it is the node responsible for processing the message. The node that is responsible for processing the message may process the message and communicate the result to the other nodes. The other nodes not responsible for processing the message may ignore the message.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07400624",
	"publication_date": "2008-07-15",
	"application_number": "10445746",
	"application_date": "2003-05-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Heuristic cache tuning",
	"summary": "",
	"abstract": "In some embodiments, a computer system comprises a cache configured to cache data. The computer system is configured to monitor the cache and data that is potentially cacheable in the cache to accumulate a plurality of statistics useable to identify which of a plurality of data lifecycle patterns apply to the data. The computer system is also configured to modify a cache configuration of the cache dependent on which of the plurality of data lifecycle patterns apply to the data.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07454571",
	"publication_date": "2008-11-18",
	"application_number": "10838488",
	"application_date": "2004-05-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hot plug and hot pull system simulation",
	"summary": "",
	"abstract": "In one embodiment, a distributed simulation system may include a first node configured to participate in a simulation and a second node configured to transmit a hot pull command designating the first node. The first node does not participate in the simulation responsive to the hot pull command. In another embodiment, A distributed simulation system may include a first node configured to participate in a simulation and a second node configured to transmit a hot plug command designating the first node. The first node does not participate in the simulation prior to the hot plug command. Additionally, the first node begins participation in the simulation responsive to the hot plug command.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07464016",
	"publication_date": "2008-12-09",
	"application_number": "10008271",
	"application_date": "2001-11-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Inter-object communication interface bridge",
	"summary": "",
	"abstract": "System and method for bridging between inter-object communication interfaces, such as RMI and IIOP, may include in one embodiment a bridge mechanism that maintains a cache of reference objects. The key used for hashing in the cache may be based on the object identifier (OID) of the reference objects. In one embodiment, the integer value of the OID is generated and then converted to a string for use in caching the object. In one embodiment, objects are not marked for deletion from the cache until a client calls a remove method. In one embodiment, object references in the cache include a reference to an exported object. In one embodiment, unexport of the exported object is performed by a post-invoke mechanism of the bridge mechanism after the remove method has completed.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07424721",
	"publication_date": "2008-09-09",
	"application_number": "10440599",
	"application_date": "2003-05-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interfacing hardware emulation to distributed simulation environments",
	"summary": "",
	"abstract": "A system for interfacing hardware emulation to software simulation environments may include a simulation node configured to simulate a first portion of a system under test and a hardware emulation node configured to emulate a second portion of the system under test. The hardware emulation node may also be configured to exchange simulation information (such as representations of signal values obtained as output from the emulated portion of the system under test) with the simulation node. The hardware emulation node may contain a field programmable gate array devices (FPGA) configured to perform the hardware emulation. The FPGA may be mounted on an expansion board, such as a PCI (Peripheral Component Interconnect) board.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07424416",
	"publication_date": "2008-09-09",
	"application_number": "10984335",
	"application_date": "2004-11-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Lookup facility in distributed computer systems",
	"summary": "",
	"abstract": "In an embodiment of the present invention, at a Deployer level, an application software component is provided with a tree representation  of objects it contains. An object is a leaf node, with the attributes of the object being in nexus between the root and the leaf node. An accessor object  has methods to access the tree . In one embodiment of the present invention, at an administrator level, a handler object  in turn accesses accessor object . Handler object  may be part of a handler home object . Client applications  have lookup services  to access handler objects like , e.g. via a lookup home object , and handler home object ",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07346899",
	"publication_date": "2008-03-18",
	"application_number": "10700101",
	"application_date": "2003-11-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mechanism for caching dynamically generated content",
	"summary": "",
	"abstract": "A mechanism for caching dynamically generated content is disclosed, wherein initially, a server receives a request from a client for a set of dynamically generated content. In response to the request, the server accesses a cached version of the requested content, which was generated previously, and determines whether the cached version is still valid. If the cached version is no longer valid (e.g. is out of date), then the requested content is dynamically generated and stored in a cache, replacing the outdated version. In addition, the freshly generated content is provided to the client in response to the request. The client is thus provided with the most current information. On the other hand, if the cached version is still valid, then the server foregoes generating the content. Instead, it provides the cached version of the content to the client. By doing so, the server reduces the time required to return the content to the client, and significantly improves system performance.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07320023",
	"publication_date": "2008-01-15",
	"application_number": "09792811",
	"application_date": "2001-02-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for integration of URL into standard file systems",
	"summary": "",
	"abstract": "Embodiments of the present invention are directed to a method and apparatus for integration of URL's into standard file systems of a local computer. In one embodiment of the present invention, the file system (e.g., a Uniform File System (UFS)) of a local computer is integrated with an Internet protocol, such as the Hyper Text Transport Protocol (HTTP). Once the protocol has been integrated into the file system of the local computer, applications running on local computer can access any Web based documents under that protocol. Thus, the local applications (and/or users) can access these Web based documents (and/or files) as if they are local files even though the documents are actually located on the Internet (and away from the local computer). In a further embodiment, the applications (and/or users) are able to access these Web based documents by utilizing a relating apparatus that relates the applications (and/or users) to their corresponding Web based documents.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07448032",
	"publication_date": "2008-11-04",
	"application_number": "10155406",
	"application_date": "2002-05-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for modeling topology objects",
	"summary": "",
	"abstract": "The invention relates to a method for modeling a device in a topology including defining a managed object corresponding to the device, defining a managed resource using the managed object, and creating a node in the topology, wherein creating the node comprises associating the node with the managed resource.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07363211",
	"publication_date": "2008-04-22",
	"application_number": "10792668",
	"application_date": "2004-03-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for obtaining space advertisements",
	"summary": "",
	"abstract": "A distributed computing environment may employ spaces to provide a rendezvous mechanism that brokers services or content to clients. Services may advertise themselves in a space. Clients may find the advertisements in a space and use the information from an advertisement to access a service using a messaging mechanism. A space discovery protocol may be provided to find a space. A client may instantiate a discovery service to locate spaces. A listener agent may be configured associated with one or more spaces to listen for discovery requests. The listener agent may listen on various network interfaces, and may receive requests from clients looking for a space(s). The listener agent then responds with the service advertisement(s) or URIs for the service advertisements of the requested space(s). In one embodiment, the listener agent may be separate from the space and its functionality orthogonal to the functionality of the space.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07370091",
	"publication_date": "2008-05-06",
	"application_number": "09698791",
	"application_date": "2000-10-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for performing address translation in a computer system",
	"summary": "",
	"abstract": "An address translation unit is provided for use in a computer system. The unit contains a set of page table entries for mapping from a virtual address to a packet address. Each page table entry corresponds to one page of virtual memory, and typically includes one or more specifiers. Each specifier relates to a different portion of the page, and maps from that portion of the page to a corresponding range of packet addresses. Accordingly, the unit allows for address translation to be performed with a sub-page granularity.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07356667",
	"publication_date": "2008-04-08",
	"application_number": "10850676",
	"application_date": "2004-05-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for processing an application identifier from a smart card",
	"summary": "",
	"abstract": "An application identifier (AID) for an application installed on a smart card comprises a registered application provider identifier (RID). The AID may be processed by determining the RID for an application from the AID of the application, generating an identifier for a network resource from the RID, transmitting a request to the network resource using the identifier, and receiving a response to the request. The response comprises material for use in handling the application on the smart card.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07374099",
	"publication_date": "2008-05-20",
	"application_number": "10786312",
	"application_date": "2004-02-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for proximity discovery of services",
	"summary": "",
	"abstract": "A service discovery protocol may allow clients to discover services on a proximity basis. A service device that provides one or more computing services may support a proximity communication link. A client device may form a proximity communication link with the service device. The client device may directly request from the service device a document that describes an interface to access a service provided by the service device. The service device may provide the document directly to the client device over proximity communication link. The document may include a service advertisement for the service, and the service advertisement may include a schema specifying an interface to at least a portion the service. The client device may use the information from the document to access the service. The client device may support a transport connection in addition to the proximity communication link, and the client device may make the document available to other devices over the transport connection. Thus, the client device may provide a bridge from the transport connection to the proximity communication link so that other devices from a distributed computing environment may access the service.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07412518",
	"publication_date": "2008-08-12",
	"application_number": "09656588",
	"application_date": "2000-09-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus to obtain negotiated service advertisement",
	"summary": "",
	"abstract": "A service discovery mechanism may allow clients in a distributed computing environment to search for services. The service discovery mechanism may allow a client to request a capability credential from a service. The distributed computing environment may include a mechanism for a client to negotiate service access rights and to then obtain a capability credential that may be used to obtain the service's access interface to the set or subset of the service's capabilities that were requested or negotiated by the client. In one embodiment, the client may present to the service a set of desired capabilities. The service may then respond with a capability credential that may convey to the client the rights to use the requested capabilities. A complete service advertisement may be needed to create a message endpoint for accessing the service. In an embodiment, the capability credential may be used by a client to obtain a complete advertisement for only the requested or negotiated capabilities. The capability credential may provide an additional level of security for the service provider. The capability credential that may be used to receive the complete advertisement may also be used to construct a message gate to communicate with the service where the gate embeds the capability credential in each message to the service.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07395333",
	"publication_date": "2008-07-01",
	"application_number": "09653610",
	"application_date": "2000-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for detecting deprecated elements during runtime",
	"summary": "",
	"abstract": "A method for controlling access to deprecated methods of an implementation is provided. The method includes receiving a request to access a method that has been marked as deprecated and building a call stack for the request. Also included is inspecting the call stack to determine if the request is from an application outside of the implementation. The method further includes acting on the request in accordance with a control policy defined by a pluggable policy.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07320123",
	"publication_date": "2008-01-15",
	"application_number": "10350436",
	"application_date": "2003-01-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for messaging to a cluster",
	"summary": "",
	"abstract": "A system and method for distributing and processing messages in a clustered environment may have a message producer, a message middleware component, and at a clustered message consumer coupled to the message middleware component through a router. The router may be configured to receive messages, select a node of the clustered consumer to handle each message, and send each message to a queue for the selected node. The router may balance a message load across the clustered nodes. The router of the clustered consumer may ensure that each message is processed by only one message consumer node of the cluster.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07352762",
	"publication_date": "2008-04-01",
	"application_number": "10445701",
	"application_date": "2003-05-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for voice control of software applications",
	"summary": "",
	"abstract": "In one embodiment of the present invention, a voice control application transmits data to a voice server about a first execution state of an application program resident in the memory of an electronic device having a first graphical display. The voice control application also transmits an audio waveform encoding of a voice command defining a second execution state of the application program. The voice server performs a speech recognition process upon the audio waveform encoding and transmits a reply to the electronic device for causing the second execution state of the application program. The voice control program, in response to the response, automatically causes the second execution state of the application program having a second graphical display.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07421390",
	"publication_date": "2008-09-02",
	"application_number": "10244131",
	"application_date": "2002-09-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for monitoring heap for memory leaks",
	"summary": "",
	"abstract": "A low overhead method for identifying memory leaks is provided. The low overhead method includes a) detecting completion of a garbage collection cycle; and b) identifying a boundary between used objects in memory and free memory space. The steps of a) and b) are repeated and then it is determined if there is an existing memory leak based upon evaluation of boundary identifiers. A computer readable media and a system for identifying memory leaks for an object-oriented application are also provided.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07325106",
	"publication_date": "2008-01-29",
	"application_number": "10893090",
	"application_date": "2004-07-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, program, and computer readable medium for providing a database for object oriented objects",
	"summary": "",
	"abstract": "Provided is a method, system, program, and computer readable medium for maintaining a database of objects. At least one structured document is received representing an instance of an object including attributes and attribute values defined for a class. Content of the structured document representing the object is added into the database, wherein the database is capable of storing multiple structured documents representing multiple objects. In another implementation, an instance of at least one object including attributes and attribute values defined for a class is generated. For each generated object, a structured document is generated representing the object and including a representation of the attributes and attribute values in the object. Each structured document is transferred to the database to maintain.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07434156",
	"publication_date": "2008-10-07",
	"application_number": "09722923",
	"application_date": "2000-11-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Optimization of n-base typed arithmetic expressions",
	"summary": "",
	"abstract": "A method for arithmetic expression optimization includes receiving a first instruction defined for a first processor having a first base, the first instruction including an operator and at least one operand, converting the first instruction to a second instruction optimized for a second processor having a second base when all operands do not carry potential overflow or when the operator is insensitive to overflow, the second base being smaller than the first base, and converting to a wider base a third instruction that is the source of the overflow when the at least one operand the potential for overflow and when the operator is sensitive to overflow. An apparatus for arithmetic expression optimization includes at least one memory having program instructions and at least one processor configured to use the program instructions to receive a first instruction defined for a first processor having a first base, convert the first instruction to a second instruction optimized for a second processor having a second base when every one of the at least one operand does not carry potential overflow or when the operator is insensitive to overflow, the second base being smaller than the first base, and convert to a wider base a third instruction that is the source of the overflow when the at least one operand the potential for overflow and when the operator is sensitive to overflow.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07316007",
	"publication_date": "2008-01-01",
	"application_number": "10686513",
	"application_date": "2003-10-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Remote function invocation with messaging in a distributed computing environment",
	"summary": "",
	"abstract": "An interface between clients and services in a distributed computing environment is described. Method gates may provide an interface to remotely invoke functions of a service. A method gate may be generated from an advertisement that may include definitions for one or more messages for remotely invoking functions of the service. A client may generate messages containing representations of method calls. The service may invoke functions that correspond to the set of messages. A method gate on the service may unmarshal the message and invoke the function. The client may receive the results of the function directly. Alternatively, the results may be stored, an advertisement to the results may be provided, and a gate may be generated to access the results. Message gates may perform the sending and receiving of the messages between the client and service. In one embodiment, functions of the service may be computer programming language (e.g. Java) methods. In one embodiment, a message including a representation of a method call may be generated when no actual method call was made. In one embodiment, a method call may be transformed into messages that may be sent to the service; the service may not know that the messages were generated from a method call. In one embodiment, a service may transform messages requesting functions into method calls; the client may not know that the service is invoking methods to perform the functions.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07398533",
	"publication_date": "2008-07-08",
	"application_number": "09672200",
	"application_date": "2000-09-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "RMI-IIOP request failover mechanism",
	"summary": "",
	"abstract": "Embodiments of a request failover mechanism may be used to failover requests from clients of server instances in a cluster to alternative server instances. One embodiment may use cluster-aware remote references that include the IIOP endpoints at which the application server instances forming the cluster listen to IIOP requests. Using a cluster-aware remote reference to an object on an application server instance, a request to the object may be failed-over to an alternate endpoint in the cluster when the primary endpoint is unreachable. In one embodiment, once a request for a referenced object is failed over to a new server instance, all the subsequent requests to that object will continue to go to the same server instance even if the original server instance becomes available. One embodiment may provide client-side IIOP request load balancing in clustered application server environments through a load balancer subsystem using the cluster-aware remote references.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07444536",
	"publication_date": "2008-10-28",
	"application_number": "10919049",
	"application_date": "2004-08-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure access of objects generated from data representation language representations of the objects in a distributed computing environment",
	"summary": "",
	"abstract": "A mechanism for securely decompiling representations of objects into copies of the objects is described. A virtual machine may include extensions for decompiling data representation language representations of objects into objects. The decompiler API may accept a data stream, which includes a representation of the object, and output a copy of the object. In one embodiment, during the decompilation of the representation of objects on a client, each message may be checked to verify that the user has access rights to the object. Access right information for the object may be embedded in the message(s) containing the representation of the object. In one embodiment, when the user is done using the client, the user may log off or otherwise signal the user is finished with the client. The client may detect that the user is finished, and may then proceed to delete objects created by decompilation of representations.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07444644",
	"publication_date": "2008-10-28",
	"application_number": "09663665",
	"application_date": "2000-09-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Slowing network connection for application optimization",
	"summary": "",
	"abstract": "A developer is provided with an emulation tool, which approximates speed conditions of an application executing on a target device, for example a MIDlet executing on a mobile information device, by matching network operations of a development platform to the lesser performance capabilities of the target device. The developer is thereby enabled to optimize an application's network usage early in its development. The time required to perform communications operations in the development environment is increased sufficiently to permit an application developer to more accurately emulate the target device.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07346896",
	"publication_date": "2008-03-18",
	"application_number": "10420970",
	"application_date": "2003-04-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Smart card framework",
	"summary": "",
	"abstract": "A mechanism is disclosed for allowing an application to perform specified operations in response to occurrences of a specified event relative to a specified Smart Card-accessing device. A customized API is exposed to the application. The application invokes an u201caddEventListeneru201d method of the API. The invocation of the method specifies, as parameters of the method, at least a Smart Card-accessing device, a type of event, and a function. The server computer executing the application detects the invocation of the u201caddEventListeneru201d method. In response to detecting the invocation, the server determines the type of the event specified by the invocation, and starts a mechanism that executes the specified function each time that an event of the specified type occurs relative to the specified Smart Card-accessing device. Consequently, the application does not need to be programmed to poll the specified Smart Card-accessing device at specific times during the application's execution.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07418717",
	"publication_date": "2008-08-26",
	"application_number": "10678472",
	"application_date": "2003-10-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software transactional memory for dynamically sizable shared data structures",
	"summary": "",
	"abstract": "We propose a new form of software transactional memory (STM) designed to support dynamic-sized data structures, and we describe a novel non-blocking implementation. The non-blocking property we consider is obstruction-freedom. Obstruction-freedom is weaker than lock-freedom; as a result, it admits substantially simpler and more efficient implementations. An interesting feature of our obstruction-free STM implementation is its ability to use of modular contention managers to ensure progress in practice.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07328316",
	"publication_date": "2008-02-05",
	"application_number": "10621072",
	"application_date": "2003-07-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Synchronization of documents between a server and small devices",
	"summary": "",
	"abstract": "Converting document formatted for use on servers to and from documents formatted for use on small devices, including synchronizing two or more versions of the document. A user may edit documents formatted for use on small devices and the documents may be synchronized with documents on the server to keep the documents up to date. In one embodiment, an n-way merge process may restore document formatting, styles and/or data features that may have been lost from one or more documents when converting from an office format to a small device format. In one embodiment, the server may provide an office productivity environment, and the documents on the server may be office documents.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07340534",
	"publication_date": "2008-03-04",
	"application_number": "10090893",
	"application_date": "2002-03-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for block-based concurrentization of software code",
	"summary": "",
	"abstract": "A method for inducing multi-threading in software code may use blocks of code as the basis for scheduling and to suggest concurrent execution for each block. The method may comprise marking one or more blocks of code in an application coded for sequential execution to generate marked code. The marking may comprise inserting a marker at each of the one or more blocks to suggest that block for potential concurrent execution. Concurrent code may be generated from the marked code. Generating the concurrent code may comprise analyzing the marked code to estimate performance benefits of concurrently executing the marked blocks of code and determine which marked blocks would meet a performance benefit threshold if executed concurrently. Generating the concurrent code may also comprise transforming one or more of the marked blocks into corresponding concurrently executable tasks. The method may include scheduling one or more of the concurrently executable tasks.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07346902",
	"publication_date": "2008-03-18",
	"application_number": "10277504",
	"application_date": "2002-10-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for developing and using a request for transaction framework",
	"summary": "",
	"abstract": "A system for developing and using a request for transaction framework including a framework engine configured to enable a market maker to develop a request for transaction for a particular market, and a request for transaction engine configured to enable an organization within the relevant market to prepare a request for transaction relating to a resource requirement and select a response relating to the resource requirement. In a preferred embodiment, the market maker creates a request for transaction framework by manipulating attribute parameters and identifying an analysis framework. A request for transaction framework may be a request for proposal framework, a request for quote framework, or other type of framework in which there is a request followed by a plurality of responses and a selection of one of the responses.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07373326",
	"publication_date": "2008-05-13",
	"application_number": "09711945",
	"application_date": "2000-11-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing exceptional flow control in protected code through memory layers",
	"summary": "",
	"abstract": "A system and method for providing exceptional flow control in protected code through memory layers. Code is generated. The generated code includes a sequence of normal operations and is subject to protection against copying during execution of the generated code. The generated code is instantiated as a master process into a master layer in a memory space. The master process is cloned by instantiating a copy of the master process as a child layer in the memory space. Execution points within the generated code are identified. A copy of at least a portion of the generated code containing each execution point as an exception layer is instantiated in the memory space. The generated code in the exception layer is patched at each identified execution point with operations exceptional to the normal operations sequence and which are performed upon a triggering of each execution point during execution of the generated code.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07472383",
	"publication_date": "2008-12-30",
	"application_number": "10918130",
	"application_date": "2004-08-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for scenario generation in a distributed system",
	"summary": "",
	"abstract": "A system and method may emulate scenarios for testing a distributed system. The distributed system may include a plurality of nodes, each having one or more resources. The system may include a resource driver for each type of the one or more resources in the distributed system, as well as one or more agents configured to access each resource through the corresponding resource driver. At least one node in the distributed system may be configured to run on a different platform than another node in the distributed system. The system may further include a central controller configured to communicate with each agent. The central controller may further execute a test scenario script containing one or more test scenarios for the distributed system.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07401259",
	"publication_date": "2008-07-15",
	"application_number": "10464945",
	"application_date": "2003-06-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for submitting and performing computational tasks in a distributed heterogeneous networked environment",
	"summary": "",
	"abstract": "System and method for submitting and performing computational tasks in a distributed heterogeneous networked environment. Embodiments may allow tasks to be submitted and run in parallel on a network of heterogeneous computers implementing a variety of operating environments. In one embodiment, a user on an originating node may advertise code on the network. Peer nodes that respond to the advertisement may receive the code. A job to be executed by the code may be split into separate tasks to distributed to the peer nodes that received the code. These tasks may be advertised on the network. Tasks may be assigned to peer nodes that respond to the task advertisements. The peer nodes may then work on the assigned tasks. Once a peer node's work on a task is completed, the peer node may return the results of the task to the originating node.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07395536",
	"publication_date": "2008-07-01",
	"application_number": "10294073",
	"application_date": "2002-11-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method including a merging driver for accessing multiple data sources",
	"summary": "",
	"abstract": "A method enables access of a plurality of data sources by a single access operation where each data source in the plurality of data sources requires a different driver to access the data source so that there is a plurality of different drivers. The method includes using an application programming interface (API) for each driver in the plurality of different drivers. The API is substantially identical for each of the drivers in the plurality of different drivers. A merging driver receives the single access operation, and in response to the single access operation, the merging driver accesses the plurality of different drivers through the API.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07406697",
	"publication_date": "2008-07-29",
	"application_number": "09738464",
	"application_date": "2000-12-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method of intelligent queuing",
	"summary": "",
	"abstract": "An intelligent queue may be used to facilitate communication among a set business application programs. In one embodiment, the intelligent queue may interact with a variety of business application programs providing consistent service behaviors across a variety of data store products. The intelligent queue provides extended message storage, efficient journalling, interoperability with other intelligent queues, load balancing, once-only processing, as well as detailed message state information that tracks the status of each message from both the sender and the recipient's perspective.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07363630",
	"publication_date": "2008-04-22",
	"application_number": "11189225",
	"application_date": "2005-07-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methods for aggregating data from multiple sources",
	"summary": "",
	"abstract": "Computer systems often strive to retrieve and process data from multiple sources. Integration and processing of data from multiple data sources tends to increase processing demands and decrease throughput due to the additional deployment of computational resources for handling multiple sources. An executable entity, such as a bean, which accesses each data source by the location of the data objects, and retrieves data objects corresponding to rows of data, is operable to access a plurality of data sources independently of the storage medium (i.e. DBMS), or format, and aggregate multiple objects from each of the data sources into a set of compound objects, in which each compound object includes associated fields from the accessed objects of the individual data sources. The attributes of the rows (objects) from different data sources are matched according to a common attribute in each object, and the resulting compound object is aggregated into a compound object set, which represents each of objects from each of the data sources joined according to the common attribute.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07386565",
	"publication_date": "2008-06-10",
	"application_number": "10852520",
	"application_date": "2004-05-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Techniques for permitting access across a context barrier in a small footprint device using global data structures",
	"summary": "",
	"abstract": "A small footprint device can securely run multiple programs from unrelated vendors by the inclusion of a context barrier isolating the execution of the programs. The context barrier performs security checks to see that principal and object are within the same namespace or memory space and to see that a requested action is appropriate for an object to be operated upon. Each program or set of programs runs in a separate context. Access from one program to another program across the context barrier can be achieved under controlled circumstances by using a global data structure.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07395535",
	"publication_date": "2008-07-01",
	"application_number": "10995926",
	"application_date": "2004-11-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transformation of objects between a computer programming language and a data representation language",
	"summary": "",
	"abstract": "A virtual machine (e.g. the Java Virtual Machine (JVM)) may include extensions for compiling objects (e.g. Java Objects) into data representation language (e.g. XML) representations of the objects, and for decompiling representations of objects into objects. The virtual machine may supply an API to the compilation/decompilation extensions. The compiler/decompiler API may accept an object as input, and output a data representation language representation of the object and all its referenced objects (the object graph) in a data stream. In addition, the compiler/decompiler API may accept a data stream, which includes a representation of the object and all its referenced objects (the object graph), and output the object (and all the objects in its object graph). In one embodiment, an intermediary format may be used to represent a data representation language document and may be dynamically processed to generate a class instance from the data representation language document.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07426721",
	"publication_date": "2008-09-16",
	"application_number": "09663563",
	"application_date": "2000-09-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "UI aware method invocation transferring to java event dispatch thread",
	"summary": "",
	"abstract": "Methods and apparatuses are disclosed for transferring a method call from an invoke thread to an event dispatch thread. The invoke thread and the event dispatch thread may execute independent of one another and the event dispatch thread may have an associated queue. The method may include defining a new call on the invoke thread. The new call may include identification of a method, identification of an object, one or more arguments, and a coalescing indicator indicating a type of coalescing for the call. The method may further include sending, during execution of the invoke thread, the new call to the queue, one or more previous calls being stored in the queue, and coalescing the new call with one of the previous calls in the queue according to the type of coalescing indicated by the coalescing indicator.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07464382",
	"publication_date": "2008-12-09",
	"application_number": "11054058",
	"application_date": "2005-02-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Valuing and optimizing scheduling of generation assets for a group of facilities",
	"summary": "",
	"abstract": "The present invention provides methods and systems for determining anticipated profit from facilities such as electrical power generation facilities, for determining values for assets based on profitability of facilities, and for determining optimal operational scheduling options for facilities. Methods and systems are provided which utilize a dynamic programming algorithm and a decision tree based model in which one or more operating constraints are implicitly modeled, facilitating computational tractability. Additionally, methods and systems are provided that utilize a dynamic programming algorithm and a decision tree based model that accounts for a combined effect of price paths with specified uncertainty as well as operational constraints. Furthermore, methods and systems are provided that address profitability, valuation, and scheduling in relation to a group, or portfolio, of facilities, accounting for liquidity factors as well as group, or global, constraints.",
	"url": null,
	"owner": "Sungard Energy Systems Inc.",
	"publication_number": "07389209",
	"publication_date": "2008-06-17",
	"application_number": "10336542",
	"application_date": "2003-01-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hierarchical repository for configuration-related and performance-related information related to computerized systems",
	"summary": "",
	"abstract": "Method allowing a computerized manager to transparently allocate computational resources to a plurality of users. A plurality of computers or servers are provided for accommodating the computational resources or for storing data. These computational resources and the data are arranged as a hierarchical repository. A root computer is used as an interface between the users and the computers or servers. The root computer is capable of communicating with the users, with the computers or with servers. The computers or servers are controlled and the manager is allowed to allocate computer resources to the users. Information is stored in the computers or servers, in a local repository or in the system files of the computers or servers. Whenever desired, stored information is retrieved from the computers or servers and then the manager dynamically allocates computational resources that are required for each of the users through the root computer, essentially without interfering with the continuous operation of the users.",
	"url": null,
	"owner": "SWsoft Holdings, Ltd.",
	"publication_number": "07433872",
	"publication_date": "2008-10-07",
	"application_number": "11115095",
	"application_date": "2005-04-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Database system providing methodology for extended memory support",
	"summary": "",
	"abstract": "A database system providing methodology for extended memory support is described. In one embodiment, for example, a method is described for extended memory support in a database system having a primary cache, the method comprises steps of: creating a secondary cache in memory available to the database system; mapping a virtual address range to at least a portion of the secondary cache; when the primary cache is full, replacing pages from the primary cache using the secondary cache; in response to a request for a particular page, searching for the particular page in the secondary cache if the particular page is not found in the primary cache; if the particular page is found in the secondary cache, determining a virtual address in the secondary cache where the particular page resides based on the mapping; and swapping the particular page found in the secondary cache with a page in the primary cache, so as to replace a page in the primary cache with the particular page from the secondary cache.",
	"url": null,
	"owner": "Sybase, Inc.",
	"publication_number": "07421562",
	"publication_date": "2008-09-02",
	"application_number": "10710381",
	"application_date": "2004-07-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer code intrusion detection system based on acceptable retrievals",
	"summary": "",
	"abstract": "Methods, apparati, and computer-readable media for protecting computer code () from malicious retrievers (). A method embodiment of the present invention comprises the steps of generating () retrieval information characteristic of data sent to a retriever () by the computer code () in response to a retrieval command () issued by the retriever (); accessing at least one rule () using at least some of said retrieval information as an input to said at least one rule (); and, when said at least one rule () informs that the retrieval is not acceptable, flagging () the retrieval command () as suspicious.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07406714",
	"publication_date": "2008-07-29",
	"application_number": "10632857",
	"application_date": "2003-07-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Countering malicious code infections to computer files that have been infected more than once",
	"summary": "",
	"abstract": "Methods, apparati, and computer-readable media for countering malicious code infections to computer files (). A preferred embodiment comprises selecting () an invariant section of each file (), wherein said invariant section is invariant to malicious code infections and to repair thereof; for each of a set of known malicious code files, using an algorithm to generate () a template corresponding to the invariant section; using said algorithm to define a target (), corresponding to said invariant section, within a test file (); comparing () the target () with the templates; and declaring () the presence of malicious code in the test file () when the target () matches a template.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07367056",
	"publication_date": "2008-04-29",
	"application_number": "10162732",
	"application_date": "2002-06-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Heuristic detection of malicious computer code by page tracking",
	"summary": "",
	"abstract": "To detect a computer virus in a host file (), an emulating module () emulates the host file () in a virtual machine () having a virtual memory (). While emulating the host file (), the system () tracks the host file's access of the virtual memory (). Responsive to an access in a non-normal address range of the virtual memory () by the host file (), a flag recording module () sets a flag. A virus reporting module () declares a potential virus based on whether the flag is set.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07418729",
	"publication_date": "2008-08-26",
	"application_number": "10264922",
	"application_date": "2002-10-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "In memory heuristic system and method for detecting viruses",
	"summary": "",
	"abstract": "Characteristics of a call module originating a critical operating system function call are analyzed for indications of suspicious content and a virus threshold counter is incremented appropriately. For example, the memory image to the file image of the call module are compared for indications of suspicious content. If a determination is made that the virus threshold counter exceeds a virus threshold, there is a significant probability that malicious code is executing on the host computer system. Thus, the user of the host computer system and/or an administrator are notified that malicious code is possibly executing on the host computer system.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07340777",
	"publication_date": "2008-03-04",
	"application_number": "10404167",
	"application_date": "2003-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus to define the scope of a search for information from a tabular data source",
	"summary": "",
	"abstract": "A method and apparatus for defining the scope of a search is described. In one embodiment, user input is received, and the scope is defined, based on the user input, for a search of free-form text for information from any random rows within a tabular structure of source data. In one embodiment, the search is intended for finding, in the free-form text, a sub-set of data fragments that matches information from any single row within the tabular structure of the source data.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07472114",
	"publication_date": "2008-12-30",
	"application_number": "10833538",
	"application_date": "2004-04-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, computer software, and system for providing end to end security protection of an online transaction",
	"summary": "",
	"abstract": "A method for implementing an online transaction security product includes downloading an online transaction security product program from a web site to an information handling system. The security product program includes an anti-malicious code program configured to detect malicious code on the information handling system. Lastly, the security product program is executed, wherein the anti-malicious code program of the security product program operates to detect malicious code on the information handling system.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07331062",
	"publication_date": "2008-02-12",
	"application_number": "10357868",
	"application_date": "2003-02-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Preventing e-mail propagation of malicious computer code",
	"summary": "",
	"abstract": "Computer-implemented methods, systems, and computer-readable media for detecting the presence of malicious computer code in an e-mail sent from a client computer () to an e-mail server (). An embodiment of the inventive method comprises the steps of: interposing () an e-mail proxy server () between the client computer () and the e-mail server (); allowing () the proxy server () to intercept e-mails sent from the client computer () to the e-mail server (); enabling () the proxy server () to determine when a file () is attempting to send itself () as part of an e-mail; and declaring () a suspicion of malicious computer code when the proxy server () determines that a file () is attempting to send itself () as part of an e-mail.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07380277",
	"publication_date": "2008-05-27",
	"application_number": "10255658",
	"application_date": "2002-09-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Proactive prevention of polymorphic SMTP worms",
	"summary": "",
	"abstract": "A method includes establishing a SMTP proxy, defining an application that forms a connection with the SMTP proxy as a SMTP client application, emulating the SMTP client application including generating at least one SMTP client application dirty page, intercepting an executable application sent from the SMTP client application with the SMTP proxy, emulating the executable application including generating at least one executable application dirty page. If a determination is made that the at least one SMTP client application dirty page is a match of the at least one executable application dirty page, a determination is made that the SMTP client application is polymorphic malicious code that is attempting to send itself and protective action is taken.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07334262",
	"publication_date": "2008-02-19",
	"application_number": "10763731",
	"application_date": "2004-01-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Security management system including feedback and control",
	"summary": "",
	"abstract": "A system uses automatic feedback and control to secure a network infrastructure by iterative convergence of the network's security structure to meet a security policy. Following initialization, a security feedback control system of the security management system makes dynamic adjustments to the system using bi-directional services that are controlled via policy decision components, without user intervention.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07472422",
	"publication_date": "2008-12-30",
	"application_number": "10660225",
	"application_date": "2003-09-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Vulnerability assessment of disk images",
	"summary": "",
	"abstract": "Images are used to safeguarding machines by assessing vulnerabilities in the image. Where assessing vulnerabilities includes both detection and repair, vulnerabilities are detected, a security definition/update is determined for use in repairing the vulnerability, which may include elimination, patching, fixing, writing data to a file or file system associated with the image, or modifying configuration settings. The security definition/update is tested to determine whether to implement the definition and, if test criteria are successfully passed, to permit a system application of the image such as a system restoration following a catastrophic system failure (i.e., disk or drive crash, reboot, etc.).",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07437764",
	"publication_date": "2008-10-14",
	"application_number": "10714550",
	"application_date": "2003-11-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Conveying causal relationships between at least three dimensions of recovery management",
	"summary": "",
	"abstract": "In one embodiment, a method is contemplated. The method includes exposing at least three dimensions of a protection system to a user. The three dimensions are interrelated. The method further includes receiving user input indicating a modification in a first dimension of the at least three dimensions; and determining an effect of the modification in each other dimension of the at least three dimensions. A computer accessible medium comprising a plurality of instructions which, when executed, implement the method and a system implementing the method are also contemplated.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07360123",
	"publication_date": "2008-04-15",
	"application_number": "10881220",
	"application_date": "2004-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Detecting and breaking cycles in a computer network",
	"summary": "",
	"abstract": "Various embodiments of a system and method related to a computer network capable of detecting and breaking cycles are disclosed. First routing information usable to send messages to a first address may be created. The first address may be associated with multiple nodes in the network. When sending a message from a first node to the first address according to the first routing information, a cycle may be detected. The first routing information may be changed to break the cycle.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07327741",
	"publication_date": "2008-02-05",
	"application_number": "10324872",
	"application_date": "2002-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic symbolic link resolution",
	"summary": "",
	"abstract": "To achieve the foregoing, and in accordance with the purpose of the present invention, a system or network is disclosed which provides for a dynamic symbolic link (DSL) and the resolution of that DSL. The invention provides a method and apparatus that renames a first pathname to a target pathname, determines a variable within the target pathname, defines the first pathname as a symbolic link and associates the symbolic link with a virtual pathname. The present invention further defines a specification associated with the virtual pathname including associating the variable with the virtual pathname. In associating the symbolic link with the virtual pathname, the present invention further define a declaration within the virtual pathname.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07340444",
	"publication_date": "2008-03-04",
	"application_number": "10887514",
	"application_date": "2004-07-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Language for expressing storage allocation requirements",
	"summary": "",
	"abstract": "A method, system, and language to express storage requirements. The language provides keywords and rules corresponding to commands for configuring a set of storage devices to provide requested capabilities of a logical volume. The language also has keywords and constructs for defining capabilities. The language supports direct inheritance of a capability, where a template specifies another template that contains rules to be used to provide a given capability. The language also supports indirect inheritance of a capability, where a template requires a capability but does not provide an implementation of the capability. In addition, the language is processed to u201cmergeu201d rules by selecting a single storage device that conforms to more than one rule when possible. Merging rules enables a minimum number of storage devices to be used to meet a given logical volume configuration and set of capabilities.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07383410",
	"publication_date": "2008-06-03",
	"application_number": "10327558",
	"application_date": "2002-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Masterless locks in a multi-node environment",
	"summary": "",
	"abstract": "A method, system, application programming interface, computer system, and computer program product to provide locks for controlling access to data by nodes in a multi-node environment while minimizing messages sent between nodes. Based upon knowledge of lock usage in the multi-node environment, a multi-node knowledge agent can determine when no other node is accessing data protected by a given lock, as well as when an event has occurred that precedes a request by another node to access data protected by the given lock. When no other node is accessing data and no such event has occurred, the multi-node knowledge agent can designate that given lock as u201cmasterless.u201d A lock agent on the node hosting the multi-node knowledge agent is authorized to subsequently grant access to the data protected by the masterless lock to clients on that node without communicating with a lock master, which may reside at another node.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07340743",
	"publication_date": "2008-03-04",
	"application_number": "10423146",
	"application_date": "2003-04-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for improved storage system performance using cloning of cached data",
	"summary": "",
	"abstract": "A method for improving storage system performance is disclosed. The method includes cloning information stored in a first unit of storage in a second unit of storage. The first unit of storage is stored in a first cache maintained by an upper-level system, while the second unit of storage is stored in a second cache.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07426611",
	"publication_date": "2008-09-16",
	"application_number": "10642862",
	"application_date": "2003-08-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for computing data signatures",
	"summary": "",
	"abstract": "A method and mechanism for generating object signatures within a file system. A file system is configured to generate signatures for objects such as files. The file system periodically scans objects to identify those which require computation of a new signature. Upon identifying such an object, the file system divides the object into partitions. A transient signature value is then generated for each partition of the object and stored. Upon a subsequent access to the object, a determination may be made as to whether or not a valid signature exists for the object. If a valid signature does not exist for the object, a new signature may be generated for the object by using one or more previously stored valid transient signature values which correspond to particular partitions of the object. The transient signature values which are used may serve as a seed for computation of those transient signature values for object partitions which follow the particular partition. Both object signatures and transient signature values may be cached by the file system and returned in response to requests from user space processes.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07373520",
	"publication_date": "2008-05-13",
	"application_number": "10464687",
	"application_date": "2003-06-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Parameterization of dimensions of protection systems and uses thereof",
	"summary": "",
	"abstract": "In one embodiment, a method is contemplated. A first parameterization is generated, which describes a desired result in at least a first dimension of a plurality of dimensions of a protection system. The first parameterization is evaluated over a plurality of parameterizations. Each of the plurality of parameterizations corresponds to a respective one of a plurality of instances of a second dimension of the plurality of dimensions. A computer readable medium comprising instructions that implement the method and a system implementing the method are also contemplated.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07360110",
	"publication_date": "2008-04-15",
	"application_number": "10881615",
	"application_date": "2004-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Publishing a network address in a computer network",
	"summary": "",
	"abstract": "A system and method for publishing a network address on a computer network. A first node in a plurality of nodes may initiate a publish operation to publish a first instance of the network address. Initiating the publish operation may comprise the first node sending a publish message to one or more other nodes in the plurality of nodes. The publish message may be propagated from at least a subset of the nodes that receive the publish message from the first node to still other nodes in the plurality of nodes, which in turn may further propagate the publish message. Each node that receives the publish message from another node may create routing information useable to route messages to the first instance of the network address on the first node.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07404006",
	"publication_date": "2008-07-22",
	"application_number": "10403564",
	"application_date": "2003-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Re-mapping a location-independent address in a computer network",
	"summary": "",
	"abstract": "A system and method for re-mapping location-independent addresses in a computer network. A first node may send a first message addressed to a location-independent address, where the first message comprises a request to host an instance of the location-independent address. A second node with which the location-independent address is associated may receive the first message, possibly after the first message was propagated through a path of intermediate nodes. The second node may send a response message to the first node, where the response message indicates whether the second node is granting permission to the first node to host an instance of the location-independent address. The response message may also specify whether the second node is giving up its own instance of the location-independent address.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07467194",
	"publication_date": "2008-12-16",
	"application_number": "10609985",
	"application_date": "2003-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Role-based message addressing for a computer network",
	"summary": "",
	"abstract": "Various embodiments of a system and method related to location-independent message addressing for a computer network are disclosed. According to one embodiment, a plurality of nodes, e.g., computer systems, may be connected to a network. The plurality of nodes may include a first node which is operable to send a message addressed using a u201croleu201d. The role may be associated with one or more other nodes coupled to the network. The message may be sent to each of the one or more nodes with which the role is associated without specifying locations of the one or more nodes. For example, the role may have an associated name, and the message may be addressed using the role name.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07406535",
	"publication_date": "2008-07-29",
	"application_number": "10326683",
	"application_date": "2002-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for an access layer application programming interface for managing heterogeneous components of a storage area network",
	"summary": "",
	"abstract": "Embodiments of an application programming interface (API) for a Storage Area Network (SAN) access layer. A SAN may include a SAN access layer as an interface between SAN components and client applications. A SAN access layer API may be provided which enables a client application to access SAN access layer functionality such as storage management and configuration services. Through the SAN access layer API, a client application may invoke some or all of the functionalities of the SAN access layer. The SAN access layer may provide SAN information gathered from the SAN to the client application through the SAN access layer API. Embodiments of the SAN access layer API may provide security and licensing restrictions to client applications. Embodiments of the SAN access layer API may encapsulate message conversion and network transport functions so that client application developers are not required to implement these functions.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07401338",
	"publication_date": "2008-07-15",
	"application_number": "10256419",
	"application_date": "2002-09-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for application discovery in a computing environment",
	"summary": "",
	"abstract": "A system and method for application discovery in a computing environment. In one embodiment, a system may include a plurality of applications configured to operate in a distributed computing environment, where the distributed computing environment may include multiple computing platforms, and an application discovery manager configured to detect the presence of the plurality of applications. In one specific implementation of the system, the application discovery manager may be further configured to identify individual components of a given application subsequent to detecting the presence of the given application. In another specific implementation of the system, the application discovery manager may be further configured to identify a dependency of a given application on one or more other applications subsequent to detecting the presence of the given application.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07418478",
	"publication_date": "2008-08-26",
	"application_number": "10741842",
	"application_date": "2003-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for communicating file system events using a publish-subscribe model",
	"summary": "",
	"abstract": "A system and method for communicating file system events using a publish-subscribe model. In one embodiment, the system may include a storage device configured to store data and a file system configured to manage access to the storage device and to store file system content. The file system may be further configured to detect a file system content access event, and in response to detecting the file system content access event, to publish a record of the file system content access event to a publish-subscribe channel accessible by one or more applications.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07437375",
	"publication_date": "2008-10-14",
	"application_number": "10919855",
	"application_date": "2004-08-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for cooperative application quiescence in a computing environment",
	"summary": "",
	"abstract": "A system and method for cooperative application quiescence in a computing environment. In one embodiment, a system may include a storage device configured to store data, a plurality of applications each of which is configured to issue input/output (I/O) requests to the storage device, and a quiescence manager configured to coordinate quiescence of at least a portion of the plurality of applications in response to receiving a quiescence request, where quiescence of a given application may include completing outstanding I/O requests issued by the given application.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07421714",
	"publication_date": "2008-09-02",
	"application_number": "10741353",
	"application_date": "2003-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for detecting and storing file identity change information within a file system",
	"summary": "",
	"abstract": "A system and method for detecting and storing file identity change information within a file system. In one embodiment, the system may include a storage device configured to store a plurality of files and a file system configured to manage access to the storage device. The file system may be configured to detect an operation to modify an identity of a first file stored on the storage device and, subsequent to detecting the operation, store a record of the operation associated with the first file, where the record includes a signature corresponding to the first file.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07328217",
	"publication_date": "2008-02-05",
	"application_number": "10723704",
	"application_date": "2003-11-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for distributed discovery and management of frozen images in a storage environment",
	"summary": "",
	"abstract": "A system for distributed discovery and management of frozen images includes a first and a second computer host, a first and a second frozen image agent and a frozen image server. Each of the first and second frozen image agents may be configured to identify one or more storage hierarchies hosted at a respective computer host, and to provide an encoding representing the identified storage hierarchies to the frozen image server. The frozen image server may be configured to aggregate the encodings provided by the frozen image agents into a system-level storage hierarchy catalog.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07366742",
	"publication_date": "2008-04-29",
	"application_number": "10938037",
	"application_date": "2004-09-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for identifying third party copy devices",
	"summary": "",
	"abstract": "Systems, methods, apparatus and software can be implemented to discover third-party copy devices in a distributed computing environment, determine which of the third-party copy devices is best suited for a particular data moving application, and thereby better utilize network and computing system resources. Moreover, environment changes (e.g., device failure, network traffic changes, new device addition) can be dynamically incorporated into the information used for third-party copy device discovery and selection. These systems, methods, apparatus and software help to reduce human errors which can cause failures in critical data protection operations.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07469274",
	"publication_date": "2008-12-23",
	"application_number": "10742221",
	"application_date": "2003-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing programming-language-independent access to file system content",
	"summary": "",
	"abstract": "A system and method for providing programming-language-independent access to file system content. In one embodiment, the system may include a storage device configured to store a plurality of files and a file system configured to manage access to the storage device and to store file system content. The file system may include a programming-language-independent interface whereby an application accesses the file system content.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07415480",
	"publication_date": "2008-08-19",
	"application_number": "10732727",
	"application_date": "2003-12-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System pre-allocating data object replicas for a distributed file sharing system",
	"summary": "",
	"abstract": "A system and method for pre-allocating replicas for a distributed file sharing system. Creating a new file may involve creating a plurality of replicas for the file on a plurality of nodes. In one embodiment nodes in the system may pre-allocate sets of file replicas, where the pre-allocated replicas can be used to satisfy requests to create new files. Pre-allocating the file replicas may decrease the latency of file creation requests by enabling the requests to be satisfied without performing replica allocation in response to the requests.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07433928",
	"publication_date": "2008-10-07",
	"application_number": "10749267",
	"application_date": "2003-12-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Technique to monitor application behavior and tune replication performance",
	"summary": "",
	"abstract": "A method and mechanism for modifying computing resources in response to application behavior. A computing system includes a replication component configured to replicate data storage from a first data volume to a second data volume. In addition, the replication component is configured to monitor application I/O characteristics and store related statistics. I/O characteristics may include size, concurrency, locality, and frequency. I/O characteristics which are stored, and guidelines for modifying system resources based on those characteristics, may be displayed for use by an administrator in tuning system resources. Periodically, or in response to detecting an event, the replication component may automatically access the statistics and modify the system resources used by the replication system to better accommodate the application's behavior.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07334062",
	"publication_date": "2008-02-19",
	"application_number": "10624396",
	"application_date": "2003-07-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transactional SAN management",
	"summary": "",
	"abstract": "System and method for performing transactional management tasks on a Storage Area Network (SAN). A user may initiate a SAN management task. A transaction may be generated that includes one or more operations to perform the SAN management task. In one embodiment, stored SAN information may be accessed to determine the operations to be performed. The one or more operations may be executed to perform the transaction. The operations may be directed at the stored SAN information and/or at one or more objects of the SAN. Results of the operations may be examined to determine if the transaction completed successfully. The initiator of the SAN management task may be notified of the status of the transaction. If the transaction did not completed successfully, the stored SAN information and/or SAN objects may be restored to a state prior to the transaction.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07403987",
	"publication_date": "2008-07-22",
	"application_number": "10180826",
	"application_date": "2002-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Undoable volume using write logging",
	"summary": "",
	"abstract": "In one embodiment, a method is contemplated. The method includes creating a copy of a volume, wherein the copy corresponds to a first point in time. Write operations to the volume are logged separate from the volume. The method also includes recovering a state of the volume to a second point in time subsequent to the first point in time using the copy of the volume from the first point in time and at least a subset of the write operations from the log. The subset of write operations occurs subsequent to the first point in time and prior to the second point in time. In some embodiments, an end marker may be included in the log, and recovery to a write operation that is indicated as the end of a transaction (by the end marker) may be performed.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07383465",
	"publication_date": "2008-06-03",
	"application_number": "10873844",
	"application_date": "2004-06-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Using asset dependencies to identify the recovery set and optionally automate and/or optimize the recovery",
	"summary": "",
	"abstract": "In one embodiment, a computer accessible medium stores a plurality of instructions including instructions which, when executed: track dependencies among a plurality of assets; and responsive to an identification of an asset for potential recovery (the u201cselected assetu201d), identify an asset dependency set corresponding to the selected asset. The asset dependency set comprises at least a subset of the plurality of assets, wherein each asset in the subset has a dependency with the selected asset. In some embodiments, one or more of the following may be provided: tracking asset dependencies and presenting the asset dependency set to the user; pruning the asset dependency set to a recovery set identifying the asset dependency set; generating the recovery order (optionally optimized); initiating the recovery according to the recovery order; performing recovery steps; generating the recovery plan and/or executing recovery plans.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07386752",
	"publication_date": "2008-06-10",
	"application_number": "10881218",
	"application_date": "2004-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Virtual resource ID mapping",
	"summary": "",
	"abstract": "The present invention provides virtual mapping of system resource identifiers in use by a software application for the purpose of making the running state of an application node independent. By adding a layer of indirection between the application and the resource, new system resources are reallocated and then can be mapped to the application's existing resource requirements while it is running, without the application detecting a failure or change in resource handles. This layer of indirection makes the application's system resource identifier(system RID) transparent to the application. RID's are usually numeric in form, but can also be alphanumeric. RID's are unique to a machine, and can be reused once all claims to a specfic RID have been given up.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07415709",
	"publication_date": "2008-08-19",
	"application_number": "10912828",
	"application_date": "2004-08-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software method for emulating a serial port between applications for enabling communications by mobile bar code readers and computer terminals in wireless networks",
	"summary": "",
	"abstract": "An application program interface in a computer for allowing application programs executing in the computer to access a wireless RF input/output facility or port in the computer, which emulates a serial port in the computer by the steps of opening a handle to a virtual COM port from an application program executing in the computer; opening and configuring a serial port by the application program; starting a thread to receive characters to be communicated through the RF facility; and utilizing the virtual COM port to open a component interface to allow communications through wireless RF communications.",
	"url": null,
	"owner": "Symbol Technologies, Inc.",
	"publication_number": "07461384",
	"publication_date": "2008-12-02",
	"application_number": "10079972",
	"application_date": "2002-02-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software method for maintaining connectivity between applications during communications by mobile computer terminals operable in wireless networks",
	"summary": "",
	"abstract": "A method of maintaining connectivity and synchronization of data from a first application resident in a first mobile computer to a second application resident in a second computer wherein the data is transmitted over a data communications network including a plurality of stationary access points, determining, in said first mobile computer, that communications between the first mobile computer and the second computer has been impeded, and that association with a different access point or use of a different radio channel should be attempted in order to continue communications; storing and queuing the messages while a new link is established; and re-establishing a link between first and second virtual sockets in the respective computers in order to continue a session between the first and second applications in the first and second computer respectively.",
	"url": null,
	"owner": "Symbol Technologies, Inc.",
	"publication_number": "07424542",
	"publication_date": "2008-09-09",
	"application_number": "11787985",
	"application_date": "2007-04-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for coexistence in wireless networks",
	"summary": "",
	"abstract": "A computing arrangement may include a first radio transceiver operating in accordance with a first communication protocol using a frequency band and a second radio transceiver operating in accordance with a second communication protocol using the frequency band. An access point operates in accordance with the first communication protocol and transmits a communication signal that has a frame including a first time interval indicative of when communications using the first communication protocol via the frequency band are permitted to the computing arrangement. The computing arrangement determines if the frame includes a second time interval, which is indicative of and is reserved for exclusive communications in accordance with the second communication protocol. If the second time interval is absent from the frame, the computing arrangement inserts the second time interval into the frame. The computing arrangement communicates with a further device only during the second time interval.",
	"url": null,
	"owner": "Symbol Technologies, Inc.",
	"publication_number": "07447505",
	"publication_date": "2008-11-04",
	"application_number": "11852605",
	"application_date": "2007-09-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for digital radio communication between a wireless LAN and a PBX",
	"summary": "",
	"abstract": "A wireless local area network for digital radio communication between remote devices and a PBX telephone system, wherein the remote devices can access and use the voice message features in the PBX and the data bases on a host computer and servers. A wireless phone is provided for voice and data communication through the PBX or a CO telephone line with remote locations or the Internet using digital data packets and standard Internet Protocol. In a preferred embodiment of the invention, the remote device is a cash register comprising a bar code scanner and a phone. Radio communication between the register and a host computer is carried out over two channels, a first channel for data communication and a second channel for voice communication.",
	"url": null,
	"owner": "Symbol Technologies, Inc.",
	"publication_number": "07327711",
	"publication_date": "2008-02-05",
	"application_number": "10161876",
	"application_date": "2002-06-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Wireless communication system for telephonic calls",
	"summary": "",
	"abstract": "Multi-tier system for digital radio communication. The multi-tier system has a first-tier base station with relatively long-range radio and has a second-tier base station with relatively short-range, low power and cheaper radios. The system can be more versatilely configured to meet demands of various applications. The application may include data capture using bar code readers, radio frequency readers and other automatic data capture devices. The system may also be used to control hotel door locks, individual room temperature control, remote video monitoringu2014all without having to wire and with much flexibility given the two types of radios employed.",
	"url": null,
	"owner": "Symbol Technologies, Inc.",
	"publication_number": "07339905",
	"publication_date": "2008-03-04",
	"application_number": "11515313",
	"application_date": "2006-09-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generation of engineering change order (ECO) constraints for use in selecting ECO repair techniques",
	"summary": "",
	"abstract": "Static timing and/or noise analysis are performed on a netlist of an integrated circuit, to estimate behavior of the netlist and to identify at least one violation by said behavior of a corresponding requirement thereon, such as setup time, hold time or bump height in a quiescent net. Thereafter, effect of engineering change order (ECO) to correct the violation are automatically analyzed, based on the layout, the parasitics, the timing and/or noise behavior, and the violation, followed by generation of a constraint on the behavior (called u201cECOu201d constraint), such as a timing constraint and/or a noise constraint. Next, the ECO constraint is automatically used, e.g. in a place and route tool, to select an ECO repair technique, from several ECO repair techniques that can overcome the violation. The selected ECO repair technique is automatically applied to the layout, to generate a modified layout which does not have the violation.",
	"url": null,
	"owner": "Synopsys, Inc.",
	"publication_number": "07454731",
	"publication_date": "2008-11-18",
	"application_number": "11525578",
	"application_date": "2006-09-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Model of sensitivity of a simulated layout to a change in original layout, and use of model in proximity correction",
	"summary": "",
	"abstract": "A memory is encoded with a model of sensitivity of a distorted layout generated by simulation of a wafer fabrication process, with respect to a change in an original layout that is input to the simulation. The sensitivity model comprises an expression of convolution of the original layout with spatial functions (u201ckernelsu201d) that are identical to kernels of a process model used in the simulation. A difference between the distorted layout and the original layout is computed, and the difference is divided by a sensitivity value which is obtained directly by evaluating the kemel-based sensitivity model, and the result is used to identify a proximity correction (such as serif size or contour movement) to be made to the original layout. Use of a sensitivity model based on a process model's kernels eliminates a second application of the process model to evaluate sensitivity, thereby to reduce memory and computation requirements.",
	"url": null,
	"owner": "SYNOPSYS, Inc.",
	"publication_number": "07458059",
	"publication_date": "2008-11-25",
	"application_number": "11264298",
	"application_date": "2005-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software application development environment facilitating development of a software application",
	"summary": "",
	"abstract": "The invention relates to a method for developing a software application including the step of creating a software application having one or more classes, each class comprising one or more metadata describing characteristics defining the class. The method also includes the step of enabling any number of additional metadata to be added to the metadata of the class to facilitate the development of the software application. Also, the metadata and the additional metadata are organized in a tabular fashion.",
	"url": null,
	"owner": "TableCode Software Corporation",
	"publication_number": "07318216",
	"publication_date": "2008-01-08",
	"application_number": "10869979",
	"application_date": "2004-06-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Inter-carrier digital message with user data payload service providing phone number only experience",
	"summary": "",
	"abstract": "A phone number only messaging experience is provided in an Inter-Carrier Messaging System service. Subscriber to subscriber digital messages containing user data are routed between carrier's networks using an Inter-Carrier messaging module with appropriate MIN/carrier/carrier routing look-up capabilities. Digital messages containing user data (e.g., short messages, email, digital messages in general, etc.) may be sent to a subscriber in another carrier's network addressed only with a phone number. If the recipient is outside of the sender's carrier network, the Inter-Carrier messaging module of the Inter-Carrier service provider (ICSP) determines the appropriate carrier for the recipient, appends the appropriate syntax to the digital message containing user data to allow internet protocol (IP) or other standardized communication techniques between message service centers of the two carriers, and routes the digital message containing user data to the destination carrier. The recipient in the other carrier's network may reply back to the ICSP's sender using only the subscriber's directory number.",
	"url": null,
	"owner": "TeleCommunication Systems, Inc.",
	"publication_number": "07430425",
	"publication_date": "2008-09-30",
	"application_number": "11516593",
	"application_date": "2006-09-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method to publish information from servers to remote monitor devices",
	"summary": "",
	"abstract": "To assist in monitoring the intelligent messaging network, a system and method for publishing logging and status information from the servers is provided. A list of available servers accessible for monitoring by persons, devices, and applications via a remote monitor device can be provided. The remote monitor device may forward selected servers from the list of available servers in which they are interested. Also, particular information about the selected servers can be requested. Access to certain servers and information may be restricted to those with authorization. Authorization can be verified by the use of digital certificates. The requested information can then be gathered and provided to authorized persons or devices. Typically, the information includes logging and status information from the servers. The information can be provided as an XML page and viewed using, for example, a standard web browser. Further, if the information is provided to the remote monitor device as an XML page, a standard XML parser may be used to extract particular information from the XML page.",
	"url": null,
	"owner": "TeleCommunication Systems, Inc.",
	"publication_number": "07418498",
	"publication_date": "2008-08-26",
	"application_number": "11366009",
	"application_date": "2006-03-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Middleware services layer for platform system for mobile terminals",
	"summary": "",
	"abstract": "A middleware services layer for a platform system for a mobile terminal for a wireless telecommunications system, the platform system including a mobile terminal platform assembly having a software services component, and application software loaded, installed and run in said mobile terminal platform assembly. The middleware services layer comprises at least one application programming interface (API) for providing access to the mobile terminal platform assembly for loading, installing and running application software in said mobile terminal platform assembly; and, at the same time, isolates the platform assembly from the applications via the at least one API.",
	"url": null,
	"owner": "Telefonaktiebolaget L M Ericsson (PUBL)",
	"publication_number": "07415270",
	"publication_date": "2008-08-19",
	"application_number": "10359772",
	"application_date": "2003-02-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network device driver architecture",
	"summary": "",
	"abstract": "The invention proposes a network device driver architecture with functionality distributed between kernel space and user space. The overall network device driver comprises a kernel-space device driver () and user-space device driver functionality (). The kernel-space device driver () is adapted for enabling access to the user -space device driver functionality () via a kernel-space-user-space interface (). The user-space device driver functionality () is adapted for enabling direct access between user space and the NIC () via a user-space-NIC interface (), and also adapted for interconnecting the kernel-space-user-space interface () and the user-space-NIC interface () to provide integrated kernel -space access and user-space access to the NIC (). The user-space device driver functionality () provides direct, zero-copy user-space access to the NIC, whereas information to be transferred between kernel space and the NIC will be u201ctunneledu201d through user space by combined use of the kernel-space device driver (), the user-space device driver functionality () and the two associated interfaces ().",
	"url": null,
	"owner": "Telefonaktiebolaget L M Ericsson (Publ)",
	"publication_number": "07451456",
	"publication_date": "2008-11-11",
	"application_number": "10517724",
	"application_date": "2002-06-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Arrangement and method of execution of code",
	"summary": "",
	"abstract": "The present invention relates to systems () and a method for executing code. According to the method a non-critical code portion is executed on a computer (). When an application () on the computer detects a critical code portion to be executed, the application sends a request to a secure execution unit () connected to the computer to execute the critical code portion. The secure execution unit () executes the critical code portion in response to the request. Thereafter the secure execution unit authenticates the result of the execution of the critical code portion using a secret key (). The authentication allows for another party () to verify that the execution was carried out in a trusted way. An advantage of the present invention is that it provides a reliable execution environment that can be trusted to execute critical code.",
	"url": null,
	"owner": "Telefonaktiebolaget LM Ericsson (publ)",
	"publication_number": "07370211",
	"publication_date": "2008-05-06",
	"application_number": "10490227",
	"application_date": "2001-09-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for mapping an IP address to an MSISDN number within a wireless application processing network",
	"summary": "",
	"abstract": "In one embodiment, there is disclosed a system and method for providing access to an IP number or a subscriber identity number associated with a mobile device in a network, the method comprising associating a mobile device with a subscriber identity number; generating a temporary IP number for the mobile device; linking the subscriber identity number with the temporary IP number; storing the subscriber identity number and the temporary IP number in a database; and providing a pull application program interface to extract from the database either the subscriber identity number or the IP address for mobile device when requested by an application program.",
	"url": null,
	"owner": "Telefonaktiebolaget LM Ericsson (publ)",
	"publication_number": "07339920",
	"publication_date": "2008-03-04",
	"application_number": "10891641",
	"application_date": "2004-07-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of and system for testing equipment during manufacturing",
	"summary": "",
	"abstract": "A platform system for a mobile terminal for a wireless telecommunications system includes a mobile-terminal platform assembly. The mobile-terminal platform assembly includes a software services component having at least one functional software unit, a hardware component having at least one hardware unit associated with and controlled by the at least one functional software unit, and an interface component having at least one interface for providing access to the mobile-terminal platform assembly. The platform system also includes test application software loaded, installed, and run on the mobile-terminal platform assembly via the interface component. The test application software tests both software and hardware of the mobile terminal during both production testing and testing performed during a lifecycle of the mobile terminal. The test application software may be located in an unprotected code space of the mobile terminal in order to allow the test application software to be overwritten as needed to make space for other applications.",
	"url": null,
	"owner": "Telefonaktiebolaget LM Ericsson (publ)",
	"publication_number": "07363033",
	"publication_date": "2008-04-22",
	"application_number": "10606684",
	"application_date": "2003-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Middleware application environment",
	"summary": "",
	"abstract": "A software application framework includes a framework interface domain for interfacing a platform domain with application domain software of an application domain. The framework also includes a software application domain that includes a first application entity. The first application entity is adapted to interact with at least one of a second application entity, the framework interface domain, at least one utility entity, and at least one plug-in entity.",
	"url": null,
	"owner": "Telefonaktiebolaget LM Ericsson (publ)",
	"publication_number": "07350211",
	"publication_date": "2008-03-25",
	"application_number": "10664618",
	"application_date": "2003-09-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Supplementary call grabber service for mobile networks",
	"summary": "",
	"abstract": "A method and arrangement in a telecommunication network according to u201cGSM on the Netu201d or u201cIPTu201d intercepts an incoming call for a user registered at an access node for which an intercept service is active. Depending on the type of called party identifier provided with the incoming call, the call is routed to the Service Node. The service node identifies an alias of the access node and sends the access node alias with called party data to the application node. The application node returns to the service node a divert-to identifier associated with the access node, and the service node delivers the call to a different access node identified by the divert-to identifier.",
	"url": null,
	"owner": "Telefonaktiebolaget LM Ericsson (publ)",
	"publication_number": "07369844",
	"publication_date": "2008-05-06",
	"application_number": "10101088",
	"application_date": "2002-03-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Fiber to the home broadband home unit",
	"summary": "",
	"abstract": "According to one embodiment, an optical network terminal (ONT) for providing communication services to a single residential unit comprises a passive optical network interface (PI) circuit, a residential service interface (RSI) circuit, and a power unit. The PI circuit receives optical signals from an optical fiber and transmits optical signals onto the optical fiber. The PI circuit is adapted to convert received optical signals containing voice information to electrical voice ATM cells, received optical signals containing data information to electrical data ATM cells, and received optical signals containing video signals to electrical video signals. The PI circuit is also adapted to convert electrical voice ATM cells and electrical data ATM cells to optical signals for transmission over the optical fiber.",
	"url": null,
	"owner": "Tellabs Bedford, Inc.",
	"publication_number": "07454140",
	"publication_date": "2008-11-18",
	"application_number": "11865180",
	"application_date": "2007-10-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Autonomous service backup and migration",
	"summary": "",
	"abstract": "A service appliance is installed between a production server running a service applications and service users. Upon being connected with the production server, the service appliance contacts the production server and/or service application and automatically replicates the service data from the service application. As additional service data is added to or modified by the service application of the production server, the service appliance automatically updates its replica of the data. In the event that a production server is unable to provide its service to users, the service appliance can transparently intervene to maintain service availability using the replica of the data. When an operational production server is connected with the service appliance, the service appliance can automatically copy its service data to the service application of the operational production server. The operational production server can be the same as the original production server or a new production server.",
	"url": null,
	"owner": "Teneros Inc.",
	"publication_number": "07363365",
	"publication_date": "2008-04-22",
	"application_number": "11166043",
	"application_date": "2005-06-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network traffic routing",
	"summary": "",
	"abstract": "A service appliance is installed between production servers running service applications and service users. The production servers and their service applications provide services to the service users. In the event that a production server is unable to provide its service to users, the service appliance can transparently intervene to maintain service availability. To maintain transparency to service users and service applications, service users are located on a first network and production servers are located on a second network. The service appliance assumes the addresses of the service users on the second network and the addresses of the production servers on the first network. Thus, the service appliance obtains all network traffic sent between the production server and service users. While the service application is operating correctly, the service appliance forwards network traffic between the two networks using various network layers.",
	"url": null,
	"owner": "Teneros Inc.",
	"publication_number": "07363366",
	"publication_date": "2008-04-22",
	"application_number": "11166359",
	"application_date": "2005-06-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for power profiling of tasks",
	"summary": "",
	"abstract": "Systems and methods for improved power profiling of embedded applications are presented. These inventions provide the ability to measure the power consumption of an embedded application at the task level as the application is executing on the target hardware. Methods and apparatus are provided to permit such measurements in both real-time and non-real-time.",
	"url": null,
	"owner": "Texas Instruments Incorporated",
	"publication_number": "07337433",
	"publication_date": "2008-02-26",
	"application_number": "10326436",
	"application_date": "2002-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for securing the initialization of an inherently non-secure Smartcard controller",
	"summary": "",
	"abstract": "A system and method for securing the initialization of a Smartcard controller and a Smartcard terminal incorporating the system or the method. In one embodiment, the system includes: (1) a firmware loader associated with a Smartcard controller and configured to receive and authenticate firmware and provide an associated Smartcard driver digital signature and (2) a Smartcard driver associated with the Smartcard controller and configured to be authenticated using the Smartcard driver digital signature and authenticate the firmware.",
	"url": null,
	"owner": "Texas Instruments Incorporated",
	"publication_number": "07374080",
	"publication_date": "2008-05-20",
	"application_number": "10986102",
	"application_date": "2004-11-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for controlling an image generator to define, generate, and view geometric images of an object",
	"summary": "",
	"abstract": "Methods, systems, and articles of manufacture consistent with the present invention allow a user operating on a data processing computer to view geometry of an object model produced by an image generator hosted on an image processing computer by allowing the user to define a zone associated with the object model, slices of each zone, and viewpoints associated with the slices, controlling the graphics image generator to produce geometric images of the object model in accordance with the zone, slices, and viewpoints, and selectively navigating the images in accordance with the zone, slices, and viewpoints.",
	"url": null,
	"owner": "The Boeing Company",
	"publication_number": "07365747",
	"publication_date": "2008-04-29",
	"application_number": "11006801",
	"application_date": "2004-12-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic latch of signal attributes in modeling and execution environments",
	"summary": "",
	"abstract": "Methods and systems for automatically locking down the attributes of signals in modeling and execution systems are disclosed. Signal attributes automatic latch components are placed on the path of the signals. The signal attributes automatic latch components automatically collect all of the information on the attributes of the signals and lock down the attributes of the signals. Alternatively, automatic signal attributes latch functions may be implemented in components, such as input and output port components. The components perform the automatic signal attributes latch functions that enable the components to automatically collect all of the information on the attributes of the signals and lock down the attributes of the signals. If the attributes of the signals are locked down, even if the design of a target system is changed, the locked attributes of the signals do not change.",
	"url": null,
	"owner": "The MathWorks, Inc.",
	"publication_number": "07350189",
	"publication_date": "2008-03-25",
	"application_number": "10719904",
	"application_date": "2003-11-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed systems in test environments",
	"summary": "",
	"abstract": "A method, system and computer program product is disclosed for conducting a test in a distributed fashion in a test environment. A host or client may define a test for testing units under test to evaluate the parameters and characteristics of the units under test. The host or client can distribute at least a portion of the test to a remote instrument that includes a worker. The worker enables the instrument to perform at least portion of the test defined in the host or client. The instrument conduct the at least a portion of the test and may provide the results of the at least a portion of the test for the host or client. As such, the present invention allows the use of multiple resources on a network to conduct the test in a distributed fashion.",
	"url": null,
	"owner": "The MathWorks, Inc.",
	"publication_number": "07454659",
	"publication_date": "2008-11-18",
	"application_number": "11028171",
	"application_date": "2004-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generating code for data references",
	"summary": "",
	"abstract": "A method includes specifying a model, the model including data having internal pre-defined data storage classes and external custom data storage classes and generating software source code for the model with a code generator using the internal predefined data storage classes and the external custom data storage classes. A system includes an application programming interface (API), the API adapted to receive user input for generating an external custom data storage class and an interpreted programming language process, the interpreted programming language process generating a set of instructions from the user input to an automatic code generator to generate code corresponding to data declared as the external custom data storage class in the automatic code generator.",
	"url": null,
	"owner": "The MathWorks, Inc.",
	"publication_number": "07367012",
	"publication_date": "2008-04-29",
	"application_number": "09876487",
	"application_date": "2001-06-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integrated instrument driver network",
	"summary": "",
	"abstract": "A mechanism for transparently identifying and retrieving an instrument driver to an application development environment tat is associated with a user-selected instrument is disclosed. Following a user selection of an instrument through a user interface generated by the application development environment, an instrument driver associated with the selected instrument is programmatically identified. If the required instrument driver for the selected instrument is missing from the application development environment, an embodiment of the present invention retrieves the instrument driver from a remote location and installs the instrument driver in the application development environment without the involvement of the user. The present invention also generates a user interface from the application development environment which enables a user to see currently installed instrument drivers as well as available instrument drivers that are located both locally and remotely.",
	"url": null,
	"owner": "The MathWorks, Inc.",
	"publication_number": "07400997",
	"publication_date": "2008-07-15",
	"application_number": "11140137",
	"application_date": "2005-05-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Registering rules for entity attributes for validation and inference",
	"summary": "",
	"abstract": "The present invention provides a method and system for registering rules for attributes of an entity with an entity validation and inference unit. The entity validation and inference unit can further validate input values for an entity and/or infer attributes of an entity using the associated registered rules. The entity validation and inference unit can also provide information regarding attributes, relations, and behaviors of an entity using the associated registered rules in response to a query. The present invention also provides a mechanism for a user to query an entity or the entity validation and inference unit regarding valid values for an entity. The mechanism also allows the user to query the registered rule associated with the entity.",
	"url": null,
	"owner": "The MathWorks, Inc.",
	"publication_number": "07472103",
	"publication_date": "2008-12-30",
	"application_number": "11317927",
	"application_date": "2005-12-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Reporting of aspects and partitioning of automatically generated code according to a partitioning scheme",
	"summary": "",
	"abstract": "A method and system are described for generating a performance prediction report to assist finalizing a partitioning scheme of a block diagram model. Providing a user-defined partitioning scheme and information describing a target hardware platform used in that partitioning scheme, the present invention can generate a performance prediction report by analyzing the computational characteristics of the block diagram model.",
	"url": null,
	"owner": "The MathWorks, Inc.",
	"publication_number": "07350172",
	"publication_date": "2008-03-25",
	"application_number": "11025747",
	"application_date": "2004-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for real-time volume processing and universal three-dimensional rendering",
	"summary": "",
	"abstract": "An apparatus and method for real-time volume processing and universal three-dimensional rendering. The apparatus includes a plurality of three-dimensional (3D) memory units; at least one pixel bus for providing global horizontal communication; a plurality of rendering pipelines; at least one geometry bus; and a control unit. The apparatus includes a block processor having a circular ray integration pipeline for processing voxel data and ray data. Rays are generally processed in image order thus permitting great flexibility (e.g., perspective projection, global illumination). The block processor includes a splatting unit and a scattering unit. A method for casting shadows and performing global illumination in relation to light sources includes sweeping a two dimensional array of rays through the volume can also be implemented with the apparatus. A method for approximating a perspective projection includes using parallel projection.",
	"url": null,
	"owner": "The Research Foundation of State University of New York",
	"publication_number": "07471291",
	"publication_date": "2008-12-30",
	"application_number": "11556993",
	"application_date": "2006-11-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods, systems, and computer program products for modeling and simulating application-level traffic characteristics in a network based on transport and network layer header information",
	"summary": "",
	"abstract": "Methods, systems, and computer program products are disclosed for determining application-level traffic characteristics in a network based on transport and network layer header information. Transport and network layer header information is collected from packet traffic in a network. Packets are classified to different connections based on the transport and network layer header information. Each connection is modeled using an abstract syntax for characterizing bidirectional interactions between endpoints of each connection and delays between the interactions. Application-level characteristics of the packet traffic are determined based on the modeled connections. Simulated traffic that models application-level traffic behavior in a real network may also be generated by simulating traffic connections based on the modeled connections.",
	"url": null,
	"owner": "The University of North Carolina",
	"publication_number": "07447209",
	"publication_date": "2008-11-04",
	"application_number": "11075992",
	"application_date": "2005-03-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed commerce system",
	"summary": "",
	"abstract": "A computer-implemented networked commercial interaction management method distributes information bundles that include values for a plurality of content attribute descriptors and information fields characterizing commercial interactions. The content attribute descriptors include business language definition descriptors that specify the descriptive metadata of each of the information bundles, having at least one keyword having at least one value. The method monitors the distribution, response and manages the commercial interactions between networked users. Based on the keyword and the business language definition descriptors, the method derives traffic statistics based on the distribution and the response from the networked users via a statistics engine.",
	"url": null,
	"owner": "Thomson Financial Inc.",
	"publication_number": "07330830",
	"publication_date": "2008-02-12",
	"application_number": "09696754",
	"application_date": "2000-10-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for universal data exchange gateway",
	"summary": "",
	"abstract": "A universal gateway that allows data to be transferred between one or more network protocols and one or more control protocols is described. The various protocols can coexist on the same physical network medium or on separate networks. The gateway also provides tunneling of network protocols through a selected protocol, and centralized control of network nodes. By using the gateway, end-users can mesh together traditionally standalone, incompatible, networks into a universally accessible, centrally administered, u201csuper-network.u201d The gateway provides a centralized node database, support for legacy protocols, a rules engine, and an object-oriented class library interface. Configuration is simplified through automatic device discovery. The centralized node database is managed by an active server node. High reliability access to the centralized node database is enhanced by the system fault tolerance provided by standby server nodes. When used in connection with a power line network, the gateway provides the ability to distribute various types of data streams over the power line. Routing handlers provided by the gateway allow virtually any of the legacy data networking services such as TCP/IP to be routed over the power-line.",
	"url": null,
	"owner": "Thomson Licensing",
	"publication_number": "07401120",
	"publication_date": "2008-07-15",
	"application_number": "11478504",
	"application_date": "2006-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data referencing system",
	"summary": "",
	"abstract": "This application describes a method of referencing content in an application. The method comprises, for a content element, creating a reference to the content element and associating that reference with the content element. This enables the content (for example, text or images) to be dissociated from other features related to content; for example, its presentation on the screen. In this way, control over presentation may be achieved separately from control of the content itself. In an example, a Content Provider  provides referenced content to an Operator . A Programme Provider  sends referenced scenarios to the Operator . The Operator  resolves the reference and sends data for broadcast by the Broadcaster ",
	"url": null,
	"owner": "Thomson Licensing S.A.",
	"publication_number": "07340528",
	"publication_date": "2008-03-04",
	"application_number": "10472398",
	"application_date": "2002-03-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "MPEG table structure",
	"summary": "",
	"abstract": "A MPEG table data structure includes a data portion and a header. The header includes an action identifier field, and the action identifier field relates to data that identifies an action to be carried by a receiver/decoder receiving the MPEG table data structure.",
	"url": null,
	"owner": "Thomson Licensing S.A.",
	"publication_number": "07342966",
	"publication_date": "2008-03-11",
	"application_number": "10344923",
	"application_date": "2002-06-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Graphical user interface for 3d virtual display browser using virtual display windows",
	"summary": "",
	"abstract": "A graphical user interface comprising a main pane, a web button or interactive content button area, an input area, a mini map area, and a three-dimensional view area is disclosed. There are three main view that are displayed (a) three-dimensional perspective view of a virtual three-dimensional space that comprises a plurality of virtual display windows, wherein each of the virtual display windows is allocated a specific position in the space and is associated with a network location identifier of a content provider, or (b) an interactive content view of network content associated with the network location identifier, or (c) a map view comprising a map of the virtual three-dimensional space. Various map display, path generation, and navigation functions are provided. The graphical user interface provides a flexible and intuitive way to navigate a complex three-dimensional virtual space in which web pages or other interactive content are mapped to virtual display windows of virtual buildings in a virtual three-dimensional space.",
	"url": null,
	"owner": "Three-B International Limited",
	"publication_number": "07467356",
	"publication_date": "2008-12-16",
	"application_number": "10864906",
	"application_date": "2004-06-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing set associative cache memory according to entry type",
	"summary": "",
	"abstract": "Managing memory includes: mediating access to a first memory as a cache for a second memory; and associating one of a plurality of entry types with entries in the cache. Data from the second memory associated with a first type is not allowed to evict a cache entry associated with a second type.",
	"url": null,
	"owner": "Tilera Corporation",
	"publication_number": "07461210",
	"publication_date": "2008-12-02",
	"application_number": "11404654",
	"application_date": "2006-04-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for distributing trusted time",
	"summary": "",
	"abstract": "Systems and methods for distributing trusted time, including trusted dates with digital data files, which are accessed, created, modified, received, or transmitted by devices that include a trusted time source in a tamperproof environment. The system includes one or more subsystems for providing trusted time for a moment in time. The trusted time source may be a real time clock, which is not resettable, is independent of any system clock of the devices, and where one or more devices may contribute to the distribution of trusted time among each other.",
	"url": null,
	"owner": "Time Certain, LLC",
	"publication_number": "07409557",
	"publication_date": "2008-08-05",
	"application_number": "11129651",
	"application_date": "2005-05-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for software development",
	"summary": "",
	"abstract": "This invention relates to a method and apparatus for developing software. In one embodiment, a method for facilitating the distributed development of software components includes providing a skill rating for software developers, communicating specifications for a software component to a subset of the developers, receiving submissions from the developers, scoring the submissions, and selecting one submission to be included in a software repository. In another embodiment, a method for compensating a software developer includes soliciting software developers for the submission of computer software components, receiving software components in response to the solicitation from the developers, evaluating the received software components, selecting one or more of the submissions for potential distribution to the public, and allotting the proceeds from the distribution to the developers.",
	"url": null,
	"owner": "TopCoder, Inc.",
	"publication_number": "07401031",
	"publication_date": "2008-07-15",
	"application_number": "11448471",
	"application_date": "2006-06-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of providing continuous feedback",
	"summary": "",
	"abstract": "A feedback component which adds on to a spooler and utilizes the spooler's connectivity with the network clients for communications. The network clients connect to the feedback component through the spooler's application programming interface (API) by making a request to register for feedback. Once the request is received, the feedback component continuously provides the network components with status of jobs in readable text and codes as the jobs progress in the underlying printing system. These status messages are not limited to just print status messages like printing, paused, printed, etc., but may include customized status messages for any device in the printing system such as scheduled, dialing, sending-fax, etc. In addition, a time delay may be introduced between messages in order to prevent excessive traffic being sent during times of heavy traffic.",
	"url": null,
	"owner": "Toshiba Tec Kabushiki Kaisha",
	"publication_number": "07460260",
	"publication_date": "2008-12-02",
	"application_number": "10626378",
	"application_date": "2003-07-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Home digital audiovisual information recording and playback system",
	"summary": "",
	"abstract": "A digital home audiovisual Information recording and playback apparatus includes a microprocessor associated, through a digital interface, with a display, through another interface with sound playback structure and through a telecommunications interface with structure for loading audio selection or visual selection digital information. The system includes structure for controlling the display, enabling an operating mode to be selected from a menu of three modes, in which the device either plays back information stored in its mass memory, records new digitized information in its mass memory or combines analog information from a microphone with digitizer information received from the mass memory.",
	"url": null,
	"owner": "TouchTunes Music Corporation",
	"publication_number": "07424731",
	"publication_date": "2008-09-09",
	"application_number": "09642928",
	"application_date": "2000-08-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for mapping a voice identity across multiple telephony networks with time attributes",
	"summary": "",
	"abstract": "A system and method for routing voice communication to an end user across multiple telephony networks are disclosed. In one embodiment of the present invention, when a caller dials a voice identity number of a user, a policy processor checks a database for information on that number. Depending on whether or not that voice identity number has an associated mapping policy attached to it, the policy processor will determine how and where the call should be routed. If there is no mapping policy associated with the number dialed, the call will be routed to that same number dialed, however, if a mapping policy does exist, the policy processor will determine to which target number the call should be routed based on a mapping of possible numbers and rules based on date and time.",
	"url": null,
	"owner": "TPLAB",
	"publication_number": "07391858",
	"publication_date": "2008-06-24",
	"application_number": "10980046",
	"application_date": "2004-11-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for effecting straight-through-processing of trades of various financial instruments",
	"summary": "",
	"abstract": "A Straight-Through-Processing (STP) trading platform provides a fully electronic and seamless solution to all substantially aspects of the trading cycle for fixed income instruments and other financial instruments. In an exemplary embodiment, all participants to a trade transaction have access to computer software that facilitates trade order management, trade order generation, trade execution (including electronic axes), trade allocation, allocation acknowledgement, trade confirmation, and finally acquisition of settlement instructions. In said exemplary embodiment, the STP trading platform includes computer software modules including at least an account management module and an electronic trading module to handle the various stages of executing a trade, confirming the trade, and facilitating settlement of the trade.",
	"url": null,
	"owner": "Tradeweb Markets LLC",
	"publication_number": "07433842",
	"publication_date": "2008-10-07",
	"application_number": "10808820",
	"application_date": "2004-03-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for calculating and displaying volume to identify buying and selling in an electronic trading environment",
	"summary": "",
	"abstract": "A system and method are provided for calculating and displaying volume to identify aggressive buying or selling activity. In a preferred embodiment, market information such as the inside market, last traded price, and last traded quantity is received from the electronic exchange and is used to assist a trader in determining the initiative side of a trade, either bid side or ask side. Once a determination is made, the result may be used to assist a trader analyzing the market volume. Other features and advantages are described herein.",
	"url": null,
	"owner": "Trading Technologies International Inc.",
	"publication_number": "07403921",
	"publication_date": "2008-07-22",
	"application_number": "11417483",
	"application_date": "2006-05-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Graphical display with integrated recent period zoom and historical period context data",
	"summary": "",
	"abstract": "A system and method are provided for displaying a data series. In one embodiment, a graphical interface is provided including at least one axis that is divided into a plurality of axis regions. Preferably, each axis region uses a different linear scale, and the plurality of axis regions forms a continuous non-linear scale. The graphical interface also displays the data series in relation to the plurality of axis regions, and the data series is plotted in relation to each axis region based on a scale resolution corresponding to each respective axis region.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07348981",
	"publication_date": "2008-03-25",
	"application_number": "11415977",
	"application_date": "2006-05-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for trading and displaying market information in an electronic trading environment",
	"summary": "",
	"abstract": "A system and method for trading and displaying market information along a static axis are described to ensure fast and accurate execution of trades. The static axis, whether is a straight axis or a curved one, can be oriented in any direction. Regardless of how the axis is oriented, a first region may display price levels that are arranged along the static axis. A second region, which overlaps the first region, may display one or more indicators for highlighting one of the price levels associated with the lowest offer and one of the price levels associated with the highest bid. Moreover, a third region, which overlaps the first region, may be included for initiating placement of an order to buy or an order to sell the tradeable object through an action of a user input device. Other overlapping regions may also be displayed so that additional market information may be viewed by a trader.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07389258",
	"publication_date": "2008-06-17",
	"application_number": "11417534",
	"application_date": "2006-05-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for variably regulating order entry in an electronic trading system",
	"summary": "",
	"abstract": "A system and method are provided to intelligently limit the frequency at which automated or semi-automated trading tools move or re-price orders in an exchange order book. A tolerance may be input that limits when one or more orders in the exchange order book are moved from one price to another. The system and method assist in reducing the number of orders that are entered into the system which can lead to reduced exchange transaction fees, lost queue position, and reduce network bandwidth consumption.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07392219",
	"publication_date": "2008-06-24",
	"application_number": "11418495",
	"application_date": "2006-05-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for the secure enrollment of devices with a clearinghouse server for internet telephony and multimedia communications",
	"summary": "",
	"abstract": "Enrolling devices with a clearinghouse server for Internet telephony and multimedia communications. Enrollment can be the process of taking a network device (such as a router, gateway, gatekeeper, etc.) and exchanging encrypted information with the clearinghouse server, so that later communications with that device can be secured. The enrollment is done with levels of security and verification that ensures the devices and clearinghouse server is legitimate.",
	"url": null,
	"owner": "TransNexus, Inc.",
	"publication_number": "07398551",
	"publication_date": "2008-07-08",
	"application_number": "11503852",
	"application_date": "2006-08-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus of storage anti-piracy key encryption (SAKE) device to control data access for networks",
	"summary": "",
	"abstract": "An apparatus and method of modular manufacturing process for a transmitter, receiver and/or transceiver is disclosed. The modular process assembles an array of optoelectronic devices to an array header to form an optoelectronic array package. Once the optoelectronic array package is assembled, it is tested and verified the functionality and alignment between the optoelectronic devices and optical fibers. The optoelectronic array package is subsequently coupled to an optical lens array to form an array optical subassembly. After the array optical subassembly is tested, it is coupled to an optical fiber connector to form an optical module. The optical module is then tested to verify its functionality and alignment.",
	"url": null,
	"owner": "Trek 2000 International Ltd.",
	"publication_number": "07353399",
	"publication_date": "2008-04-01",
	"application_number": "10339696",
	"application_date": "2003-01-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for authentication",
	"summary": "",
	"abstract": "An authentication system () to verify a password is provided. The authentication system includes a first storage unit () to store an authentication sequence () and a read-only memory unit () on which an authentication algorithm () is programmed. A microcontroller () is coupled to the first storage unit, the read-only memory unit and a web server. The microcontroller receives the password and executes the authentication algorithm to verify the password with the authentication sequence. A second storage unit () is coupled to the microcontroller to store data from the web server. Access to a second storage unit is permitted by the microcontroller only if the password has been verified.",
	"url": null,
	"owner": "Trek 2000 International Ltd.",
	"publication_number": "07434251",
	"publication_date": "2008-10-07",
	"application_number": "10502005",
	"application_date": "2002-10-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Protection of processes running in a computer system",
	"summary": "",
	"abstract": "In one embodiment, a protected process is monitored by one or more watchdog processes. Upon detection that the protected process has been abnormally terminated, the watchdog processes may initiate actions to identify and/or terminate one or more malicious processes terminating the protected process. For example, the watchdog processes may inject a detector in processes running in the computer. The detector may listen for an activity that would terminate the protected process, and report such activity to the watchdog processes. The watchdog processes may be configured to terminate malicious processes identified as abnormally terminating the protected process. Thereafter, the watchdog processes may restart the protected process.",
	"url": null,
	"owner": "Trend Micro Incorporated",
	"publication_number": "07472288",
	"publication_date": "2008-12-30",
	"application_number": "10845650",
	"application_date": "2004-05-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Technique for intercepting data in a peer-to-peer network",
	"summary": "",
	"abstract": "In one embodiment, in a peer-to-peer network, data intended to be transferred directly from a first peer node to a second peer node are first redirected to an interception node. In the interception node, the data may be processed prior to being forwarded to the second peer node. The data may be scanned for virus detection and removal, for example.",
	"url": null,
	"owner": "Trend Micro Incorporated",
	"publication_number": "07426574",
	"publication_date": "2008-09-16",
	"application_number": "10737389",
	"application_date": "2003-12-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Homogeneous monitoring of heterogeneous nodes",
	"summary": "",
	"abstract": "A distributed and scalable architecture is described to facilitate reactive detection of operational state changes in diverse, heterogeneous objects, logging of detected state-changes, and generating alerts in response to detected state-changes for the purpose of remediation. Such heterogeneous objects include but are not limited to stand-alone workstations, network appliances, files and directories, as well as embedded micro-systems such as digital assistants, cellular devices, and even remotely controlled peripherals such as environmental sensors, effectors and actuators. In one embodiment, user interaction with such diverse objects is facilitated through a homogeneous user-interface metaphor through which, the rules of interaction remain constant independent of the object being monitored.",
	"url": null,
	"owner": "Tripwire, Inc.",
	"publication_number": "07316016",
	"publication_date": "2008-01-01",
	"application_number": "10188430",
	"application_date": "2002-07-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Semantic analysis based compression of interpreted code by replacing object instruction groups with special instruction specifying a register representing the object",
	"summary": "",
	"abstract": "The invention concerns a method for compressing program code for execution in a system with few physical resources. This method comprises a semantic analysis of the code as to identify the objects accessed at each program point and to replace in this program groups of instructions used to access the objects by more compact specialised instructions.",
	"url": null,
	"owner": "Trusted Logic",
	"publication_number": "07467376",
	"publication_date": "2008-12-16",
	"application_number": "10484849",
	"application_date": "2002-07-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for generating a language independent document abstract",
	"summary": "",
	"abstract": "A method of extracting significant phrases from one or more documents stored in a computer-readable medium. A sequence of words is read from the one or more documents and a score is determined for each word in the sequence based on the length of the word. The score for each word in the sequence is compared against a threshold score. The sequence of words is indicated to be a significant phrase if the number of words in the sequences that have a score greater than the threshold score equals or exceeds a predetermined number. A sentence containing the sequence of words is retrieved from the document, if the sequence of words is a significant phrase. An abstract of the document is searched to determine if the sentence has been previously included in the abstract. If not, the sentence is added to the abstract.",
	"url": null,
	"owner": "UDICO Holdings",
	"publication_number": "07447626",
	"publication_date": "2008-11-04",
	"application_number": "11018045",
	"application_date": "2004-12-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dialogue flow interpreter development tool",
	"summary": "",
	"abstract": "A computer software product is used to create applications for enabling a dialogue between a human and a computer. The software product provides a programming tool that insulates software developers from time-consuming, technically-challenging programming tasks by enabling the developer to specify generalized instructions to a Dialogue Flow Interpreter, which invokes functions to implement a speech application, automatically populating a library with dialogue objects that are available to other applications. The speech applications created through the DFI may be implemented as COM (component object model) objects, and so the applications can be easily integrated into a variety of different platforms. In addition, u201ctranslatoru201d object classes are provided to handle specific types of data, such as currency, numeric data, dates, times, string variables, etc. These translator object classes have utility either as part of the DFI library or as a sub-library separate from dialogue implementation.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "07389213",
	"publication_date": "2008-06-17",
	"application_number": "11325678",
	"application_date": "2006-01-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Document processing system with improved image quality assurance",
	"summary": "",
	"abstract": "A document processing system comprising an image capture subsystem for capturing selected image metrics and at least one image rendition from a plurality of documents and for determining if at least one of the selected image metrics for any of the at least one image rendition does not successfully compare against preselected image quality metric threshold values. An image quality flag is generated for any of the at least one image rendition if it does not successfully compare, and a record entry for each imaged document having at least one flagged image rendition is created in an image quality flag file. An image index file for individually accessing the image renditions is modified to include a reference to the corresponding image quality flag file record entry The document processing system may optionally compare selected document metrics against preselected document metrics in a similar manner. Image defects in the plurality of documents can be identified by examining the record entries in the image quality flag file.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "07433098",
	"publication_date": "2008-10-07",
	"application_number": "10837344",
	"application_date": "2004-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generation of Java language application programming interface for an object-oriented data store",
	"summary": "",
	"abstract": "An embodiment of the present invention is a technique to interface to a repository. A connection between a client and a repository database is established. The repository database has a repository application programming interface (API). The repository database contains objects related to a project management process. The repository API is communicated with to perform an operation based on parameters passed from the client via the connection. A return value associated with the operation is returned to the client.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "07437740",
	"publication_date": "2008-10-14",
	"application_number": "10636924",
	"application_date": "2003-08-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Image quality assurance system and methodologies in a post-image capture document processing environment",
	"summary": "",
	"abstract": "An image quality assurance method for identifying image defects in a plurality of previously-imaged documents, where each previously-imaged document includes at least one image rendition stored in at least one image rendition file according to type of image rendition. The image renditions are analyzed to provide selected image metrics, the latter of which are compared against preselected image quality metric threshold values. An image quality flag is generated for any image rendition if at least one of the selected image metrics for that image rendition does not successfully compare against the preselected image quality metric threshold values. A record entry is created in an image quality flag file for those documents having at least one flagged image rendition, the record entry including information about the selected image metrics of the at least one flagged image rendition for that imaged document. Image defects in a plurality of imaged documents can be identified by examining the record entries in the image quality flag file.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "07376258",
	"publication_date": "2008-05-20",
	"application_number": "10837345",
	"application_date": "2004-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for a telemetry warehouse for storing, retrieving and analyzing data",
	"summary": "",
	"abstract": "A telemetry warehouse provides a consolidated system log in the form of a data warehouse which contains data collected from traditional sources such as system management tools, performance monitoring tools, and various system logs while allowing analysis across the entire range of management data.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "07340477",
	"publication_date": "2008-03-04",
	"application_number": "10737675",
	"application_date": "2003-12-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for verifying the integrity of a database",
	"summary": "",
	"abstract": "A method for verifying the integrity of a database for use by an application. A process is applied to obtain () initial schema metadata () from the database (). As a reference a reduced representation () is created () from the initial schema metadata () using an algorithm such as a hash function. The reduced representation is stored (), preferably within the application. During execution of the application, the same process is applied to obtain () current schema metadata () from the database (). A second reduced representation () is created () from the current schema metadata () using the same algorithm. The reduced representation () created as a reference is compared () with the second reduced representation (). The result () of the comparison determines execution of the application. A system for implementing the method is disclosed. A system for verifying for a plurality of applications the integrity of one or more databases is also disclosed.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "07343377",
	"publication_date": "2008-03-11",
	"application_number": "10614527",
	"application_date": "2003-07-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for protecting the program environment of a microsoft component object model (COM) client",
	"summary": "",
	"abstract": "An apparatus for and method of creating a standardized interface between Microsoft Component Object Model environment and a non-compatible legacy environment. The technique is equally effective for both object oriented and non-object oriented scripting protocols. The interface is scripted in the native legacy command language thereby freeing the interface developer from the need to create script in both the legacy command language and a Microsoft COM compatible language, such as Visual Basic. A determination is made upon an attempt to instantiate a COM server whether the server is local or in-process. If in-process and registered, the server is instantiated within a surrogate server to isolate the calling client from potential corruption of its memory space or copying of its sensitive data by the registered in-process server. This apparatus and method operates transparently to users and administrators, such that the client memory space and sensitive data is protected without requiring special COM server registration.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "07363377",
	"publication_date": "2008-04-22",
	"application_number": "10268243",
	"application_date": "2002-10-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Synchronizing data between a data store and a project management client tool",
	"summary": "",
	"abstract": "An embodiment of the present invention is a technique to synchronize data between a data store and a project management client tool. An element in a project file is updated according to an event generated by a project tool in a client. A server is communicated by a request to request synchronization of the element. The server has a data store which contains an object corresponding to the element. The request is processed to synchronize the element with the object in the data store.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "07437739",
	"publication_date": "2008-10-14",
	"application_number": "10636951",
	"application_date": "2003-08-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for accessing and transforming data, information and data relational rules in a multi-dimensional database",
	"summary": "",
	"abstract": "A mobile integration engine application services component for accessing data and information stored in at least one multi-dimensional database and for presenting the accessed data and information to a browser-based application. The mobile integration engine application services component reads and translates the data and information, which includes data and information relating to critical business metrics as well as the data relational rules that govern the relationship of the data, and then creates markup language describing the accessed data and information for presentation to the browser-based application. An orthogonal drill mechanism creates a u201cdrill-acrossu201d path from a first dimension to any other orthogonal dimension having a related dimension measure, allowing navigation between the orthogonal dimensions.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "07444342",
	"publication_date": "2008-10-28",
	"application_number": "11016255",
	"application_date": "2004-12-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Shared services platform",
	"summary": "",
	"abstract": "A shared services hub is provided that allows a software application that is related to a given postal product, to access, translate, and communicate information related to a second postal service or module. A customer accessing the Postal Service website for a particular postal product, such as for example the Parcel Post or Global Express Mail, can then access further information. A communications link is established from the software application, through a shared services hub, to a software module. Information on the software module, such as for example, postage, shipping rules, or tracking information, is then translated and communicated through the software application in a compatible format. The shared services hub thus allows a plurality of information on software modules to be accessed through a plurality of product applications, regardless of communication protocols used by the software modules.",
	"url": null,
	"owner": "United States Postal Service",
	"publication_number": "07356824",
	"publication_date": "2008-04-08",
	"application_number": "10454227",
	"application_date": "2003-06-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for electronic postmarking including ancillary data background",
	"summary": "",
	"abstract": "An embodiment of the invention provides a method for performing electronic postmarking of data, including ancillary data is provided. The method includes receiving data from a sender. The method further includes selecting ancillary data. The method further includes generating an electronic postmark including the ancillary data. The method further includes forwarding the data with the electronic postmark including the ancillary data to a receiver.",
	"url": null,
	"owner": "United States Postal Service",
	"publication_number": "07451915",
	"publication_date": "2008-11-18",
	"application_number": "11451367",
	"application_date": "2006-06-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for monitoring dynamic cardiovascular function using n-dimensional representations of critical functions",
	"summary": "",
	"abstract": "A method, system, apparatus and device for the monitoring, diagnosis and evaluation of the state of a dynamic system is disclosed. This method and system provides the processing means for receiving sensed and/or simulated data, converting such data into a displayable object format and displaying such objects in a manner such that the interrelationships between the respective variables can be correlated and identified by a user. This invention provides for the rapid cognitive grasp of the overall state of a critical function with respect to a dynamic system. The system provides for displayed objects, which change in real-time to show the changes of the functions of the system. It is a highly flexible system which works with a wide variety of applications, including biological systems, environmental systems, engineering systems, economic systems, mechanical systems, chemical systems and the like. The device of this invention is adapted specifically to providing objects within a frame associated with other objects in a reference grid to provide a graphical representation of cardiovascular function.",
	"url": null,
	"owner": "Univeristy of Utah Research Foundation",
	"publication_number": "07413546",
	"publication_date": "2008-08-19",
	"application_number": "10846956",
	"application_date": "2004-05-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for determining user location in a wireless communication network",
	"summary": "",
	"abstract": "In a wireless communication network, the location of an addressable receiver relative to the locations of a plurality of addressable sources of electromagnetic radiation is found using probabilistic models of the signal strength measured at the addressable receiver. The inventive method provides location determination on a finer spatial scale than was heretofore available. A region of interest is calibrated via a discrete-space radio map storing probability distributions of received signal strength at the measurement locations. The stored probability distributions are compensated for temporal variability and biases, such as through temporal correlations of the sampled received signal strength. A measurement of the signal strength at the addressable receiver from each of the plurality of addressable sources is used in conjunction with the discrete-space radio map to identify one of the coordinates thereof that maximizes the conditional probability P(xls), where x is the radio map location and s is a vector of measured signal strengths.",
	"url": null,
	"owner": "University of Maryland",
	"publication_number": "07406116",
	"publication_date": "2008-07-29",
	"application_number": "10529372",
	"application_date": "2004-03-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System level applications of adaptive computing (SLAAC) technology",
	"summary": "",
	"abstract": "An API (Application Programming Interface) for an adaptive computing system (ACS) may be used to create a system for performing an application on different types of ACS platforms. The API may be used to generate a system object including a host and a number of nodes and channels. A system data structure is created which describes the nodes, which may be FPGA (Field Programmable Gate Array)-based ACS accelerator boards. The API may enable source-code porting and scaling from small research platforms to larger field-deployable platforms.",
	"url": null,
	"owner": "University of Southern California",
	"publication_number": "07404170",
	"publication_date": "2008-07-22",
	"application_number": "11175993",
	"application_date": "2005-07-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Adaptive transparent encryption",
	"summary": "",
	"abstract": "A technique for adaptive encryption of digital assets such as computer files. The system model monitors passage of files to uncontrollable removable storage media or through network connections and the like which may indicate possible abuse of access rights. In accordance with a preferred embodiment, an autonomous independent agent process running at a point of use, such a background process in a client operating system kernel, interrupts requests for access to resources. The agent process senses low level system events, filters, and aggregates them. A policy engine analyzes sequences of aggregate events to determine when to apply encryption.",
	"url": null,
	"owner": "Verdasys, Inc.",
	"publication_number": "07409547",
	"publication_date": "2008-08-05",
	"application_number": "11510891",
	"application_date": "2006-08-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Digital asset usage accountability via event journaling",
	"summary": "",
	"abstract": "A technique for establishing a perimeter of accountability for usage of digital assets such as data files. The accountability model not only tracks authorized users' access to files, but monitors passage of such files to uncontrollable removable storage media or through network connections and the like which may indicate possible abuse of access. In accordance with a preferred embodiment, an autonomous independent agent process running at a point of use, such as in the background of a client operating system kernel, interrupts requests for access to resources. The agent process senses low level system events, filters, aggregates them, and makes reports to a journaling server. The journaling server analyzes sequences of low level events to detect when aggregate events of interest occur, such as u201cFileEditu201d, network file transfers and the like. Reports can be generated to provide an understanding of how digital assets have been accessed, used or communicated by individuals in an enterprise.",
	"url": null,
	"owner": "Verdasys, Inc.",
	"publication_number": "07472272",
	"publication_date": "2008-12-30",
	"application_number": "10716336",
	"application_date": "2003-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for analysing communication streams",
	"summary": "",
	"abstract": "Communications systems are provided, a representative one of which incorporates: a recorder operative to record information associated with a communication; and a first computer application operative to provide a graphical user interface, the graphical user interface being configured such that, responsive to a user input designating a portion of the communication via the graphical user interface, information corresponding to that portion of the communication and recorded by the recorder is presented to the user, the first computer application being further operative to construct an integrated data stream comprising at least some of the information recorded.",
	"url": null,
	"owner": "Verint Americas Inc.",
	"publication_number": "07466816",
	"publication_date": "2008-12-16",
	"application_number": "11565939",
	"application_date": "2006-12-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Aggregrating related events into a single bundle of events with incorporation of bundle into work protocol based on rules",
	"summary": "",
	"abstract": "The aggregator service associates/correlates a primary event with related events and bundles them together, determines what other related information is needed and builds a work document from the bundled events and the other related information, runs rules to determine the cause of the problem, and controls the life of the work to be done. The aggregator service receives an event from an information bus where the event relates to a state change, identifies primary events and correlates primary events with relates lesser events it receives by applying rules that deal with the understanding or categorization of the problem and binds the events together to produce a work document according to a predetermined organization of work integration. The rules are held in an easily-modifiable form in a rules service and runtime loaded to the aggregator service, thus the rules can be updated or modified at any time by expert problem-solving personnel and not developers.",
	"url": null,
	"owner": "Verizon Business Global LLC",
	"publication_number": "07428723",
	"publication_date": "2008-09-23",
	"application_number": "10113543",
	"application_date": "2002-03-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for implementing improved containers in a global ecosystem of interrelated services",
	"summary": "",
	"abstract": "A service container provides a runtime operating environment for services managed remotely, configured remotely, load their code remotely, and found and communicated with remotely. The container scheme is the concept of a generic service container into which arbitrary software services may be homed to a host server at runtime. Each virtual machine runs a small set of code which identifies it as a service container and registers it with registries for making the service container visible and allows for remote communication.",
	"url": null,
	"owner": "Verizon Business Global LLC",
	"publication_number": "07401131",
	"publication_date": "2008-07-15",
	"application_number": "10113691",
	"application_date": "2002-03-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for providing customer controlled notifications in a managed network services system",
	"summary": "",
	"abstract": "An approach for supporting automated fault isolation and recovery is provided. A notification configuration option is transmitted to a browser interface utilized by a user associated with a customer network that is monitored by a service provider, wherein the user selects the notification configuration option to input notification information. The notification information is received, via the browser interface, from the customer. A notification message is received from a platform configured to create a workflow event in response to an alarm indicative of a fault within the customer network, wherein isolation and recovery of the fault is performed according to the workflow event, the notification message including information about the customer network during the fault isolation and recovery process. The notification message is transmitted in accordance with the stored notification information.",
	"url": null,
	"owner": "Verizon Business Global LLC",
	"publication_number": "07426654",
	"publication_date": "2008-09-16",
	"application_number": "11318078",
	"application_date": "2005-12-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for facilitating communications involving hearing-impaired parties",
	"summary": "",
	"abstract": "A method for providing communication services for communications between a hearing-impaired party and a hearing party includes establishing a voice link with the hearing party. The method also includes receiving a voice message from the hearing party via the voice link and generating a text message corresponding to the voice message using voice recognition. The method may also include transmitting the text message to the hearing-impaired party. Optionally, a high speed text input device may also be used with, or instead of, the voice recognition to generate the text message.",
	"url": null,
	"owner": "Verizon Business Global LLC",
	"publication_number": "07315612",
	"publication_date": "2008-01-01",
	"application_number": "10979093",
	"application_date": "2004-11-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and computer program product for managing routing servers and services",
	"summary": "",
	"abstract": "A method, system, and computer program product for routing network traffic (calls in a Voice over Internet Protocol (VoIP)), which expands the capabilities of existing systems by providing faster and more efficient direction of network traffic, is disclosed. A routing management system includes a routing manager which maintains a list of local routes, establishes and manages connections to the routing server(s), exports routes to the routing server(s), imports disseminated routes from the routing server(s), obtains static global and dynamic routes from the routing server(s), caches those routes for future use, finds all matching routes for a particular number dialed by the user, and prioritizing those routes based on timing, access and ordering information. An additional embodiment contains at least one routing server which provides look-up services for gateway server(s), allows export of local routes from gateway server(s), and distributes translation data, and at least one gateway server which handles calls received on either the Internet protocol (IP) or traditional telephony networks. The gateway server bridges calls between the different kinds of networks, interacts with users, interfaces with the routing system.",
	"url": null,
	"owner": "Vertical Communications Acquisition Corp.",
	"publication_number": "07457279",
	"publication_date": "2008-11-25",
	"application_number": "09527920",
	"application_date": "2000-03-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integration of legacy mainframe systems through data stream objectification into finite state machines",
	"summary": "",
	"abstract": "A system and method for integrating terminal-based legacy mainframe applications through data stream objectification into a distributed object system. The mainframe application's terminal data stream is reinterpreted as a set of well-defined state objects representing any identifiable portion or accumulation of either terminal commands or data within the data stream. The state objects are combined with a set of state transition rules to create a finite state machine, which accurately describes the behavior of the application, the application of all existing busing logic, and access to all the data elements. Any required set of data elements can then be defined and either accessed or updated through a variety of methodologies without redefining, re-implementing, or migrating any existing data or business rules.",
	"url": null,
	"owner": "Vestacare, Inc.",
	"publication_number": "07334015",
	"publication_date": "2008-02-19",
	"application_number": "10001521",
	"application_date": "2001-10-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for modeling of system content for businesses",
	"summary": "",
	"abstract": "A method and system of managing content at a network site can allow easier use by business users. A higher level of abstraction can be used to allow business users to create their own objects that may reference or contain other objects or records as managed by a content management system. Business users do not have to learn programming code in order to work those objects, which are content types. A graphical user interface (u201cGUIu201d) can be used to help the business users to create, modify, and delete content types. The GUI and the ability for business users to the create content types greatly shortens the time between receiving software to operate a network site and launching content at that network site.",
	"url": null,
	"owner": "Vignette Corporation",
	"publication_number": "07415484",
	"publication_date": "2008-08-19",
	"application_number": "10434936",
	"application_date": "2003-05-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing a public application program interface",
	"summary": "",
	"abstract": "One embodiment of the system of this invention can include software programming stored in a computer readable memory. The software programming can comprise a public API layer further comprising an object model containing generic software objects representing underlying workflow processes and functionality and an adapter layer comprising one or more adapters operable to map the generic software objects of the public API layer with the vendor-specific APIs of underlying workflow engines. The generic object model maintained by the public API layer can, in one embodiment of the present invention, comprise generic software objects corresponding to the reference model developed by the Workflow Management Coalition. In this manner, the public API layer can present an interface based on industry standards.",
	"url": null,
	"owner": "Vignette Corporation",
	"publication_number": "07370335",
	"publication_date": "2008-05-06",
	"application_number": "10036980",
	"application_date": "2001-12-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed capture and aggregation of dynamic application usage information",
	"summary": "",
	"abstract": "A web-based hosted solution through which application developers create, manage and monitor application usage analytics in an online manner. Preferably, an application under test is one of: application software, a script-enabled web application, or a rich Internet application (RIA). During the development process, a usage monitoring API is integrated into the application and the application is deployed. As users interact with the application, a log file is generated, typically in one of two ways. If the application is able to write to a local file system (in the user's machine), usage information is gathered in a log file local to the deployed application and then dispatched to an upload server for processing in a batch manner. If the application is not able to write to the user machine's local file system, the usage information is sent to a remote logging server, preferably on a just-in-time basis, and then the log file is generated on the logging server. In either case, preferably the usage information that is tracked comprises u201cfeatures,u201d u201cfaultsu201d and u201cfailuresu201d of the application, independent of platform, location, and number of deployed application instances.",
	"url": null,
	"owner": "Visible Measures Corp.",
	"publication_number": "07356590",
	"publication_date": "2008-04-08",
	"application_number": "11481530",
	"application_date": "2006-07-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Asynchronous real-time retrieval of data",
	"summary": "",
	"abstract": "A data retrieval system includes a gateway server and an access client. The gateway server is communicatively connected to the access client through a network. The gateway server provides a presentation service (PS) and a real-time service (RTS), which cooperate with the access client to retrieve data from a data store and then provide the retrieved data to a user's remote communication device. More particularly, when a user wishes to retrieve data from the data store or to send data to the data store, the user establishes a communication connection between his or her remote communication device and the gateway server, and then requests the desired data from the gateway server. In response, the gateway server sends a command to the access client, instructing it to retrieve the requested data. The access client retrieves the requested data from the data store, and returns the retrieved data to the gateway server. The gateway server then relays the requested information back to the user's remote communication device.",
	"url": null,
	"owner": "Visto Corporation",
	"publication_number": "07363349",
	"publication_date": "2008-04-22",
	"application_number": "10770841",
	"application_date": "2004-02-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer image capture, customization and deployment",
	"summary": "",
	"abstract": "A source image of the hardware and software configuration of a source computer, including the state of at least one source disk, is automatically captured. The source computer may remain unprepared and requires no program for facilitating computer cloning and reconfiguration. The source image is automatically analyzed and the hardware configuration of a destination computer is determined. The source image is modified as needed for either compatibility with the destination computer, or for customization, and after possible modification the source image is deployed on the destination computer. Either or both of the source and destination computers may be virtual machines.",
	"url": null,
	"owner": "VMware, Inc.",
	"publication_number": "07356679",
	"publication_date": "2008-04-08",
	"application_number": "10956691",
	"application_date": "2004-10-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "TCP/IP offloading for virtual machines",
	"summary": "",
	"abstract": "An engine (TOE) is provided in a virtualized computer system for offloading I/O tasks using any defined protocol such as TCP/IP. The system includes a virtual machine (VM), which has a guest operating system (OS) that runs via a virtual machine monitor (VMM) on a system-level software platform (vmkernel), which also forms the software interface layer to at least one physical network connection device. A TCP/IP stack is included in vmkernel. During normal I/O operation, for sockets associated with TOE, processes in an application layer in the guest OS are able to communicate directly with vmkernel's TCP/IP stack, thereby bypassing the guest OS kernel.",
	"url": null,
	"owner": "VMware, Inc.",
	"publication_number": "07424710",
	"publication_date": "2008-09-09",
	"application_number": "10741244",
	"application_date": "2003-12-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Utilizing cache information to manage memory access and cache utilization",
	"summary": "",
	"abstract": "In a method of optimizing utilization of a shared cache, a set of locations in the cache is probed. The probing takes place while an observed process is running, descheduled, or interrupted. It is determined which portions of the cache are utilized by the observed process. Utilization of the cache is optimized based on result of the determination of which portions of the cache are utilized by the observed process.",
	"url": null,
	"owner": "VMware, Inc.",
	"publication_number": "07434002",
	"publication_date": "2008-10-07",
	"application_number": "11410474",
	"application_date": "2006-04-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer interface for navigating graphical user interface by touch",
	"summary": "",
	"abstract": "A system for enabling a user to navigate a graphical user interface by touching pads on a touch surface. The arrangement of the pads on the touch surface is static, but the functions associated with each pad dynamically change in correspondence with functions in the graphical user interface. The functions are automatically and dynamically extracted from the software that creates the window display. Certain pads are regularly used for certain user options found in windows.",
	"url": null,
	"owner": "Vortant Technologies, LLC",
	"publication_number": "07379053",
	"publication_date": "2008-05-27",
	"application_number": "10280581",
	"application_date": "2002-10-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Radiocommunication module hosting and executing a client software, and corresponding method for implementing a driving client software",
	"summary": "",
	"abstract": "The invention concerns a radiocommunication module, of the type hosting and executing a main software providing in particular radiocommunication functions. The main software comprises means for executing drive controls, sent to the main software and belonging to a predetermined set of drive controls. The invention is characterised in that the radiocommunication module further hosts and executes at least a client software, called onboard client software. The onboard client software and the main software comprise means enabling the onboard client software acts at least as one of the following: a driver client software, sending drive controls to the main software, and receiving from the main software responses, resulting from the execution of some of the drive controls; a supervising client software, managing the execution if the drive controls sent by a driver client software, called external client software, hosted and executed by a third party equipment co-operating with the radiocommunication module.",
	"url": null,
	"owner": "Wavecom",
	"publication_number": "07454198",
	"publication_date": "2008-11-18",
	"application_number": "10472591",
	"application_date": "2002-03-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Peer-to-peer messaging system",
	"summary": "",
	"abstract": "A system is provided for peer-to-peer messaging. The system includes a first client machine which may transmit a sequence of messages related to a subject. The transmission of each message can be in the form of multicast delivery or reliable unicast delivery. At least one second client machine communicates with the first client machine. Each such second client machine may receive at least a portion of the sequence of messages transmitted in the multicast form of delivery from the first client machine, and determines if there is an interest in the subject of the sequence of messages. The second client machine may determine if any messages in the sequence have not been received if there is an interest, and can transmit a request for re-transmission to the first client machine. The request identifies any messages of the sequence that were not received so that such messages can be re-transmitted by the first client machine to the at least one second client machine in the form of reliable unicast delivery.",
	"url": null,
	"owner": "Webex Communicatons, Inc.",
	"publication_number": "07353253",
	"publication_date": "2008-04-01",
	"application_number": "10266732",
	"application_date": "2002-10-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Value-added network switching and object routing",
	"summary": "",
	"abstract": "The present invention provides a method and apparatus for providing real-time, two-way transactional capabilities on the network. Specifically, one embodiment of the present invention discloses a configurable value-added network switch for enabling real-time transactions on the network. The configurable value added network switch comprises means for switching to a transactional application in response to a user specification from a network application, means for transmitting a transaction request from the transactional application, and means for processing the transaction request. Additionally, a method for enabling object routing is disclosed, comprising the steps of creating a virtual information store containing information entries and attributes associating each of the information entries and the attributes with an object identity, and assigning a unique network address to each of the object identities. Finally, a method is disclosed for enabling service management of the value-added network service, to perform OAM&P functions on the services network.",
	"url": null,
	"owner": "WebXchange, Inc.",
	"publication_number": "07340506",
	"publication_date": "2008-03-04",
	"application_number": "09792323",
	"application_date": "2001-02-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Control and observation of physical devices, equipment and processes by multiple users over computer networks",
	"summary": "",
	"abstract": "A method and system for enabling multiple users from different physical locations to access, observe, control and manipulate physical processes and devices over a computer network such as the Internet is disclosed. A user may visually monitor the physical set up and state of an experiment or environment by receiving live video and data, as well as directly control instrumentation while receiving live feedback regarding the input commands. Measurement data may be collected into a database and computational analysis can be generated and displayed as a physical process is being performed. An online interactive laboratory notebook is also provided that manages items such as collected data, laboratory parameters, u201cto dou201d lists, personal notes, etc.",
	"url": null,
	"owner": "Western Digital Technologies, Inc.",
	"publication_number": "07467187",
	"publication_date": "2008-12-16",
	"application_number": "10268411",
	"application_date": "2002-10-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Document creation system and method using knowledge base, precedence, and integrated rules",
	"summary": "",
	"abstract": "A system that may be used to generate documents and for broader uses such as assembling computer-processable components into computer-processable end products. In one form, the system is a document generation system having an assembly facility configured to be coupled to an origination platform; a knowledge base configured to be coupled to the assembly facility and to store objects in an object-relational hierarchy; and a content management system configured to be coupled to the knowledge base, where the content management system is configured to include an object and a rule. The system may be configured to interact with a knowledge base to create a first set of end products, each end product containing an object; apply precedence to the first set of end products; extract rules from the knowledge base; and assemble a second set of documents based upon applying precedence and rules.",
	"url": null,
	"owner": "Wolters Kluwer Financial Services, Inc.",
	"publication_number": "07472345",
	"publication_date": "2008-12-30",
	"application_number": "10814522",
	"application_date": "2004-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for generalized and adaptive transaction processing between uniform information services and applications",
	"summary": "",
	"abstract": "The system and methods of the present invention provide a processing function that is useful for controlling any type of transaction between providers and consumers of information services. The invention provides a transaction framework that dynamically integrates a plurality of service providers and consumers based on transaction context data. Transactions between services are described using a transaction definition. A transaction definition specifies the details of the transaction using a uniform specification model, where services are classified through a standardized taxonomic structure. The processing function analyzes service classification during a transaction to determine the appropriate configuration and processing strategy.",
	"url": null,
	"owner": "WRE-HOL LLC",
	"publication_number": "07426730",
	"publication_date": "2008-09-16",
	"application_number": "10125794",
	"application_date": "2002-04-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and methods for providing secured communication",
	"summary": "",
	"abstract": "Authentication information is generated for a group where members within a group are able to communicate with each other, but a non-members is not able to participate in that communication. The authentication information provides the determination of whether the member belongs to the group.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07392387",
	"publication_date": "2008-06-24",
	"application_number": "11679166",
	"application_date": "2007-02-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Architecture for software for interactively communicate with a machine and remotely maintenance the machine",
	"summary": "",
	"abstract": "Software in a computer which accesses one or more software-intensive devices, such as a digital copier or printer, is organized in a set of layers. A device-dependent layer converts data transferred over various means, such as a modem or network, to a uniform data format. A protocol layer converts data from a particular accessed machine to a set of function calls. A system interface associated with the computer restricts a user of the computer to seeing only a subset of function calls, depending permissions granted to a particular user. The modular architecture of the software enables a system administrator to restrict a user to viewing machine status for a specific set of machines on a network, or limits the user to viewing only a certain set of functionalities from a particular machine.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07458083",
	"publication_date": "2008-11-25",
	"application_number": "10634930",
	"application_date": "2003-08-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generating a confirmation sheet listing identifiers, thumbnails, and pages associated with page thumbnails",
	"summary": "",
	"abstract": "Typical confirmation sheets include a general job status and a reduced image of the first page of the job. This may be sufficient for a job comprising a single service and a single destination or recipient. The confirmation sheet would be more useful if it provided images of each page of a transmission, such as for a multi-service and/or multi-destination job. In various exemplary embodiments, thumbnail images of one more pages of the transmission are included on the confirmation sheet. The pages to be included as thumbnail images on the confirmation sheet can be selected. The range of pages can be selected. Alternatively, individual ones of the pages can be specified. If the selected set of thumbnail images would not fit onto a single page, the user is given the option to use a multi-page confirmation sheet or to re-select the pages to be included on the confirmation sheet.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07383494",
	"publication_date": "2008-06-03",
	"application_number": "10248386",
	"application_date": "2003-01-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multi-bit output sampled threshold array halftoner",
	"summary": "",
	"abstract": "Xerox Reference No. D/A0639A system and method for improving xerographic halftoning by magnifying a threshold array, interpolating the in-between values, enabling multiple thresholds to be accessed simultaneously and presented to multiple comparators, to cause multi-bit output. A threshold array is sampled at distinct locations separated by the sparse sampling distance to allow warping of the threshold array dots by adjusting the sampling distance in small, fractional portions (deltas) of the magnified distance. By adding more thresholds, amplitude or intensity modulation is used to move dot edges in a process direction for further flexibility in printing irrational or warpable screens.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07359091",
	"publication_date": "2008-04-15",
	"application_number": "10248384",
	"application_date": "2003-01-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method, and program for alternating sheets of media",
	"summary": "",
	"abstract": "Systems, methods, and programs for adjusting marking data for use with alternately stacked multi-thickness media. The systems, methods, and programs input marking data and determine an orientation of sheets of the multi-thickness media that is alternated within a stack. The systems, methods, and programs adjust, for each sheet whose orientation is not consistent with the marking data, the marking data for that sheet such that the marking data for that sheet is consistent with the orientation of that sheet.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07411602",
	"publication_date": "2008-08-12",
	"application_number": "11214915",
	"application_date": "2005-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for compensating for streaks in images",
	"summary": "",
	"abstract": "Defects in an image may give rise to visible streaks, or one-dimensional defects in an image that run parallel to the process direction. One known method for compensating for streaks introduces a separate tone reproduction curve for each pixel column in the process direction. A compensation pattern according to this invention ha alignment marks before and after a halftone compensation region. The alignment marks provide alignment between the printer pixel grid and a scanning pixel grid. The line width of each alignment mark and the gray level in each pixel column of each gray level portion is measured and analyzed to produce a local tone reproduction curve for each pixel column and associated line width. The line widths of the alignment marks can be remeasured to adjust the local tone reproduction curves to compensate for the streak defect when printing.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07347525",
	"publication_date": "2008-03-25",
	"application_number": "11476009",
	"application_date": "2006-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for creating a single electronic scanned job from multiple scanned documents",
	"summary": "",
	"abstract": "This invention provides systems and methods that use a meta job description that combines a number of scan jobs into a single combined job and use a meta job description that incorporates the scan parameters for a plurality of scan. Scanning documents with a meta job description provides user with the ability to scan any number of different documents with different parameters and combine them into a single combined job before the job is sent to its final destination. This allows the user to compose a single electronic document from any number of documents with different parameters.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07443548",
	"publication_date": "2008-10-28",
	"application_number": "10248612",
	"application_date": "2003-01-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for detecting intermittent, weak and missing jets with an inline linear array sensor",
	"summary": "",
	"abstract": "Systems and methods are provided for detecting intermittent, weak or missing jets of a printer. The detection is implemented using a test pattern. Detected failed jets may be confirmed using a verification target. A printhead containing nozzles corresponding to detected failed jets may be wiped or purged.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07427118",
	"publication_date": "2008-09-23",
	"application_number": "10999014",
	"application_date": "2004-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for estimating an image marking process using event mapping of scanned image attributes",
	"summary": "",
	"abstract": "Methods and systems used to automatically identify the marking process used for an image on a substrate based on spatial characteristics and/or color of the image. Image types which are classified and identified include continuous tone images and halftone images. Among halftone images separately identified are inkjet images, xerographic images and lithographic images. Locally adaptive image threshold techniques may be used to determine the spatial characteristics of the image.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07336401",
	"publication_date": "2008-02-26",
	"application_number": "10739176",
	"application_date": "2003-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for estimating an image marking process using scanned image attributes",
	"summary": "",
	"abstract": "Methods and systems used to automatically identify the marking process used for an image on a substrate based on spatial characteristics and/or color of the image. Image types which are classified and identified include continuous tone images and halftone images. Among halftone images separately identified are inkjet images, xerographic images and lithographic images. Locally adaptive image threshold techniques may be used to determine the spatial characteristics of the image.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07453604",
	"publication_date": "2008-11-18",
	"application_number": "10604200",
	"application_date": "2003-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for multi-pick detection",
	"summary": "",
	"abstract": "Detecting a multi-pick in a nip of a media feed mechanism, includes determining a limit of a property of a media feed mechanism that is related to the kinetic properties of one or more rollers that form a nip; monitoring the property of the media feed mechanism; determining a maximum value of the of the monitored property; comparing the maximum value to the limit; and determining, if the maximum value exceeds the operational limit, that a multi-pick has occurred.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07410165",
	"publication_date": "2008-08-12",
	"application_number": "10869889",
	"application_date": "2004-06-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for non-interactive session key distribution with revocation",
	"summary": "",
	"abstract": "Systems and methods that allow the formation and distribution of session keys amongst a dynamic group of users communicating over an unreliable, or lossy, network. The systems and methods according to this invention allow an intermediate session key contained in an intermediate key distribution broadcast to be determined by receiving a preceding key distribution broadcast that precedes the intermediate key distribution broadcast, the preceding key distribution broadcast including a first portion of the intermediate session key; receiving a subsequent key distribution broadcast that follows the intermediate key distribution broadcast, the subsequent key distribution broadcast including a second portion of the intermediate session key that is distinct from the first portion; and combining at least the first portion of the intermediate session key contained within the preceding key distribution broadcast and the second portion of the intermediate session key contained within the subsequent key distribution broadcast to obtain the intermediate session key.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07400732",
	"publication_date": "2008-07-15",
	"application_number": "10255964",
	"application_date": "2002-09-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "User-tailorable romanized Chinese text input systems and methods",
	"summary": "",
	"abstract": "Methods and systems for romanizing Chinese ideograms allow a user to create a personalized spelling dictionary that converts a user's desired roman-alphabet spelling to an equivalent Chinese character. A phonetic combination from a standard Chinese dialect is selected. The user defines a roman alphabet equivalent of the selected phonetic combination that fits the way the user pronounces the phonetic combination in the user's own dialect or idiolect.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07315982",
	"publication_date": "2008-01-01",
	"application_number": "10248880",
	"application_date": "2003-02-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Co-simulation interface",
	"summary": "",
	"abstract": "Method and apparatus for interfacing between a high-level modeling system and a hardware description language (HDL) co-simulation engine. A plurality of HDL co-simulation engine libraries are queried as to the capabilities of the engines. A co-simulation engine is selected based on the capabilities, and an instance of the engine is created. The selected co-simulation engine is configured, input logic vectors are provided to the selected HDL co-simulation engine, and the co-simulation engine is executed accordingly.",
	"url": null,
	"owner": "Xilinx, Inc.",
	"publication_number": "07366651",
	"publication_date": "2008-04-29",
	"application_number": "10388681",
	"application_date": "2003-03-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for memory management in an integrated circuit",
	"summary": "",
	"abstract": "Method and apparatus for managing memory logic is described. In one example, user logic, virtual port logic, and a processor are provided. The user logic is configured to provide allocation requests for the memory logic, access requests for the memory logic, and de-allocation requests for the memory logic. The virtual port logic is coupled to the user logic and the memory logic. The processor is coupled to the virtual port logic. The virtual port logic is configured to forward the allocation requests and de-allocation requests to the processor, and to process the access requests. The processor is configured to allocate space in the memory logic in response to the allocation requests and de-allocate space in the memory logic in response to the de-allocation requests.",
	"url": null,
	"owner": "XILINX, Inc.",
	"publication_number": "07454587",
	"publication_date": "2008-11-18",
	"application_number": "11348731",
	"application_date": "2006-02-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for generating a bitstream view of a design",
	"summary": "",
	"abstract": "A method and system for generating a bitstream view of a programmable logic device (PLD) design are disclosed. The present invention allows for the correlation of a physical circuit description (e.g., one or more of a PLD design's essential configuration bits) and a logical circuit description (e.g., one or more of the logic elements that make up a PLD design), which can also be viewed as correlating one or more of the physical elements of the design's implementation in the PLD with one or more of the design's logical elements.",
	"url": null,
	"owner": "Xilinx, Inc.",
	"publication_number": "07343578",
	"publication_date": "2008-03-11",
	"application_number": "10917064",
	"application_date": "2004-08-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for identifying essential configuration bits",
	"summary": "",
	"abstract": "A method and system are disclosed. The method and system provide the ability to identify a configuration bit as an essential configuration bit. The identifying that is performed uses a configuration bit definition.",
	"url": null,
	"owner": "Xilinx, Inc.",
	"publication_number": "07406673",
	"publication_date": "2008-07-29",
	"application_number": "10917033",
	"application_date": "2004-08-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Shared memory for co-simulation",
	"summary": "",
	"abstract": "Co-simulation of a circuit design includes simulating a first subset of blocks of the circuit design on a software-based co-simulation platform, simulating a second subset of the blocks of the circuit design on a hardware-based co-simulation platform, and maintaining coherency for a memory block of the circuit design between a first representation of data in the memory block on the software-based co-simulation platform and a second representation of the data in the memory block on the hardware-based co-simulation platform. Coherency is maintained by managing mutually exclusive access to the memory block from the first subset of blocks and the second subset of blocks.",
	"url": null,
	"owner": "Xilinx, Inc.",
	"publication_number": "07346482",
	"publication_date": "2008-03-18",
	"application_number": "11075340",
	"application_date": "2005-03-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for architecture and resource specification and methods to compile the specification onto hardware",
	"summary": "",
	"abstract": "Electronic design automation tool specifies an architecture at a system level and its component (which include intellectual property (IP) cores like embedded processors, arithmetic logic units (ALU), multipliers, dividers, embedded memory element, programmable logic cells, etc.); specifies IP-cores and their interface; and understands IP-cores and functions via their interface. Further, techniques are provided for modeling the timing behavior of a function or functional block without drawing a timing diagram; understanding the interface behavior of a function block which captures the timing waveforms; specifying virtual functions which are built using basic functional units and their timing behavior; parsing and creating an internal graphical form for analyzing a specification for compilation; matching the components in the architecture specification and their instantiation to map the computations in the input graph produced from an application; and mapping the specification onto the target's components.",
	"url": null,
	"owner": "Xilinx, Inc.",
	"publication_number": "07376939",
	"publication_date": "2008-05-20",
	"application_number": "10072212",
	"application_date": "2002-02-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Vector interface to shared memory in simulating a circuit design",
	"summary": "",
	"abstract": "A first block, a second block, a shared memory, and a third block are generated in a circuit design in response to user input control. The first block is coupled to the second block, the second block is coupled to the shared memory, and the shared memory is coupled to the third block in response to user input control. During one cycle of a simulation, the second block, in response to the first block, accesses a set of scalar values in the shared memory using scalar accesses. During one cycle of the simulation, the set of scalar values is transferred between the second block and the first block. During the simulation, the shared memory is accessed by the third block using scalar accesses.",
	"url": null,
	"owner": "Xilinx, Inc.",
	"publication_number": "07343572",
	"publication_date": "2008-03-11",
	"application_number": "11096024",
	"application_date": "2005-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, apparatus and program storage device for providing virtual disk service (VDS) hints based storage",
	"summary": "",
	"abstract": "A method, apparatus and program storage device for providing virtual disk service hints based storage. Virtual disk service hints are provided. The virtual disk service hints are analyzed to determine a configuration model to implement. The storage system is then configured according to the configuration model identified using the virtual disk service hint.",
	"url": null,
	"owner": "Xiotech Corporation",
	"publication_number": "07406578",
	"publication_date": "2008-07-29",
	"application_number": "11241176",
	"application_date": "2005-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for controlling a complementary user interface on a display surface",
	"summary": "",
	"abstract": "An alternate display content controller provides a technique for controlling a video display separately from and in addition to the content displayed on the operating system display surface. Where the display is a computer monitor, the alternate display content controller interacts with the computer utility operating system and hardware drivers to control allocation of display space and create and control one or more parallel graphical user interfaces adjacent the operating system desktop. An alternate display content controller may be incorporated in either hardware or software. As software, an alternate display content controller may be an application running on the computer operating system, or may include an operating system kernel of varying complexity ranging from dependent on the utility operating system for hardware system services to a parallel system independent of the utility operating system and capable of supporting dedicated applications. The alternate display content controller may also include content and operating software delivered over the internet or any other LAN. The alternate display content controller may also be included in a television decoder/settop box to permit two or more parallel graphical user interfaces to be displayed simultaneously.",
	"url": null,
	"owner": "xSides Corporation",
	"publication_number": "07340682",
	"publication_date": "2008-03-04",
	"application_number": "10435397",
	"application_date": "2003-05-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web 3D image display system",
	"summary": "",
	"abstract": "A Web-based 3D-image display system that downloads 3D-image files from a Web server and smoothly displays 3D -images on a Web browser. The Web-based 3D-image display system is provided with a Web server storing compressed 3D files that have been edited and created based on 3D-scene information extracted from a VRML file or the like, and a 3DA applet for displaying 3D scenes; and a Web browser for displaying the 3D scene. The Web browser requests and downloads the 3D applet from the Web server and requests and downloads the compressed 3D file from the Web server by executing the 3D applet. After downloading and receiving all information, the Web browser continuously displays an interactive 3D -scene by executing, independently of the Web server, real-time 3D-rendering and 3D-motion algorithms using the 3D applet.",
	"url": null,
	"owner": "Yappa Corporation",
	"publication_number": "07425950",
	"publication_date": "2008-09-16",
	"application_number": "10486690",
	"application_date": "2002-10-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network integrated data compression system",
	"summary": "",
	"abstract": "A data compression system enables user-level applications to compress and decompress files to save storage space even for user-level applications that are not modified to use compressed files. User preferences associated with a user terminal are established for the compression of data, e.g. video data, wherein the user preferences comprise selective enablement of compression for at least one file type. An exemplary system determines the type of a digital data file, e.g. a digital video data file, being output from an application or input to an application, and performs transparent file-type-based compression or decompression of the digital data file, if enabled by the established user preferences. Files of the selected file types are stored with compressed formats and may even have different names, but are shown to user-level applications to have the same file names and file sizes as original uncompressed files. Therefore, the existing applications can perform operations without any disruptions. The transparent compression can be implemented within a variety of dedicated and/or distributed network configurations, as well as on a single workstation.",
	"url": null,
	"owner": "Zaxel Systems, Inc.",
	"publication_number": "07394408",
	"publication_date": "2008-07-01",
	"application_number": "11558873",
	"application_date": "2006-11-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interpreting a script to generate an operational signal on a remote control device",
	"summary": "",
	"abstract": "A script is stored on a remote control device. When a key is pressed, an interpreter on the remote control device interprets the script thereby causing codeset information (for example, key codes and protocol information) stored on the remote control device to be used to output a sequence of marks and spaces. Adjacent marks are combined into a larger mark and adjacent spaces are combined into a larger space. From these marks and spaces, a mark/space table and a string of timing information are generated. The mark/space table and the string of timing information are then used to generate an operational signal that is transmitted from the remote control device. In one embodiment, only one mark/space table and one string of timing information is ever present on the remote control device at one time. This reduces memory requirements, thereby reducing manufacturing cost of the remote control device.",
	"url": null,
	"owner": "ZiLOG, Inc.",
	"publication_number": "07339513",
	"publication_date": "2008-03-04",
	"application_number": "10928520",
	"application_date": "2004-08-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Loading a machine code API onto an 8-bit virtual machine to enable new functionality",
	"summary": "",
	"abstract": "A machine code API can be loaded onto an eight-bit, register-based virtual machine. A higher level script that is interpreted by a script interpreter of the virtual machine can then use the new functionality provided by the added API. The API may, for example, provide access to hardware of the underlying platform that is otherwise inaccessible to a higher level script. The API loading feature sees use where the virtual machine is remotely deployed in the field but can be communicated with via a bidirectional link. The API is communicated to the virtual machine via the bidirectional link and the API is loaded onto the virtual machine. The API is assigned a reference that a higher level script can use to call the API. Using this feature, various APIs can be loaded and their operations tested. Unwanted machine code APIs can also be erased from the virtual machine.",
	"url": null,
	"owner": "ZiLOG, Inc.",
	"publication_number": "07362256",
	"publication_date": "2008-04-22",
	"application_number": "10928830",
	"application_date": "2004-08-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Script instruction for jumping to a location, interpreting a predetermined number of instructions and then jumping back",
	"summary": "",
	"abstract": "A u201ccall relative countedu201d script instruction is interpreted by a script interpreter of an eight-bit, register-based, virtual machine. In one embodiment, the script instruction has a first argument field and a second argument field. Interpreting the script instruction causes a jump to a location identified by a label in the first argument field. After a number of script instructions identified by the second argument have been interpreted, the interpreting of script instructions automatically returns to the next script instruction after the call relative counted script instruction. In one example, the first argument is a label, the label in turn identifying the location to jump to. In another example, the first argument directly indicates the location to jump to. The instruction is useful in allowing multiple higher-level scripts to reuse different parts of a common lower-level block of script. The common block performs a common function required by the higher-level scripts.",
	"url": null,
	"owner": "ZiLOG, Inc.",
	"publication_number": "07436345",
	"publication_date": "2008-10-14",
	"application_number": "10928014",
	"application_date": "2004-08-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for managing memory",
	"summary": "",
	"abstract": "A method and system for accessing data by an application program is disclosed. The application program issues a data request to a data storage system. In response, the data storage system loads into memory a data node corresponding to the data request. The data node is stored as part of a data structure. The data storage system returns a reference to the application program, which is then used to access the node. The application program may further instruct the data storage system to de-allocate a node when available memory is low or when it is no longer using the node.",
	"url": null,
	"owner": "Zoran Corporation",
	"publication_number": "07430586",
	"publication_date": "2008-09-30",
	"application_number": "10123933",
	"application_date": "2002-04-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
}]