
[{
	"name": "Active path menu navigation system",
	"summary": "",
	"abstract": "A method for navigating within a multi-level hierarchical collapsing menu structure is disclosed. Each level in the menu structure contains plural items, each item being at least one of a function, a pointer to a location, and a pointer to another level. The method of the present invention includes a step of providing a graphical user menu system displaying the items of a given level and enabling selection thereof, wherein access of the given level requires sequential access of each of the levels preceding the given level in the hierarchy. An Active Path is dynamically constructed as a sequence of active links as items are selected using the graphical user menu system, with one active link correspond to each of the items selected. The active links provide direct access to a function corresponding level or menu item without the need to navigate using the graphical user menu system.",
	"url": null,
	"owner": "",
	"publication_number": "07640517",
	"publication_date": "2009-12-29",
	"application_number": "11625314",
	"application_date": "2007-01-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application program interface access to hardware services for storage management applications",
	"summary": "",
	"abstract": "A method and device for using a set of APIs are provided. Some of the functions which used to be performed by software are now accelerated through hardware.",
	"url": null,
	"owner": "",
	"publication_number": "07594049",
	"publication_date": "2009-09-22",
	"application_number": "11472677",
	"application_date": "2006-06-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Audio-video data switching and viewing system",
	"summary": "",
	"abstract": "A computer system and method providing for viewing and switching of audio-video data. The system comprises: a plurality of audio/video sources containing information referring to an event; a streaming server, streaming the contents of a first audio signal and a first video signal from the audio and video sources to a user; a feed distributor controllably feeding the first audio signal and first video signal to the streaming server; and a user-operated control unit communicating with the feed distributor and controlling operation of the feed distributor, so as to instruct the feed distributor to switch between audio or video. Switching between audio signals occurs without altering the video signals and switching between video signals occurs without altering the audio signals.",
	"url": null,
	"owner": "",
	"publication_number": "07571244",
	"publication_date": "2009-08-04",
	"application_number": "09897708",
	"application_date": "2001-07-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Cache line replacement with zero latency",
	"summary": "",
	"abstract": "A method for cache management includes assigning a respective cache line in a cache of a processing device to each of a plurality of processing flows in the processing device, and loading respective context data relating to each of the processing flows from a memory into the respective cache line that is assigned thereto. Respective activity levels of the processing flows are monitored. Responsively to detecting an absence of activity of a processing flow, and prior to receiving a request to overwrite the cache line, the context data are written back to the memory from the respective cache line that is assigned to the processing flow.",
	"url": null,
	"owner": "",
	"publication_number": "07620057",
	"publication_date": "2009-11-17",
	"application_number": "11253397",
	"application_date": "2005-10-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer-implemented clipboard",
	"summary": "",
	"abstract": "A note can be generated in a clipboard by detecting an information capture operation performed in an application, creating a clipboard item comprising information collected by the information capture operation, wherein the clipboard item is associated with a clipboard, receiving input from a user defining a note, wherein the note includes at least a portion of the clipboard item, and presenting the note in an output text box of the clipboard. Further, a filter can be applied to the information collected by the information capture operation. The filter also can detect an item of meaningful data in the information collected by the information capture operation and execute one or more instructions that correspond to the filter. Additionally, executing the instructions that correspond to the filter can retrieve supporting information from a second application.",
	"url": null,
	"owner": "",
	"publication_number": "07624353",
	"publication_date": "2009-11-24",
	"application_number": "11537581",
	"application_date": "2006-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computerized prescription system for gathering and presenting information relating to pharmaceuticals",
	"summary": "",
	"abstract": "This invention relates to professional data management systems useful in the production of product specification documents such as prescriptions, service or parts orders, insurance contracts and the like that require detailed product and history information from multiple extensive information sources, especially remote heterogenous sources. More particularly, the invention relates to systems that assist professionals perform their everyday work in specifying customized technical products. A particularly preferred embodiment relates to a computer-implemented prescription management system to assist physicians in prescribing and reviewing drugs.",
	"url": null,
	"owner": "",
	"publication_number": "07606723",
	"publication_date": "2009-10-20",
	"application_number": "10918967",
	"application_date": "2004-08-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computerized prescription system for gathering and presenting information relating to pharmaceuticals",
	"summary": "",
	"abstract": "A wirelessly deployable, electronic prescription creation system for physician use captures into a prescription a patient condition-objective of the prescribed treatment and provides for patient record assembly from source elements, with privacy controls for patient and doctor, adverse indication review and online access to comprehensive drug information including scientific literature. Extensions to novel multi-drug packages and dispensing devices, and an u201cintelligent networku201d remote data retrieval architecture as well as onscreen physician-to-pharmacy and physician-to-physician e-mail are also provided.",
	"url": null,
	"owner": "",
	"publication_number": "07483839",
	"publication_date": "2009-01-27",
	"application_number": "09941681",
	"application_date": "2001-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic circuit implementing knowledge enhanced electronic logic solutions",
	"summary": "",
	"abstract": "An electronic circuit for use in providing computational decision-making capabilities. The circuit implements a hierarchy of decision-making cells, with outputs derived from input signals supplying argument values, configuration signals for controlling the decision making model and wires between cells defining relationships between cells that modify the decision-making model of dependent cells. The cells are primarily characterized by modified values that may represent outputs although they may have a variety of other function features such as importance values and threshold values. The arguments are characterized by argument values that may represent inputs. The arguments are associated with particular cells and the values of the arguments associated with a given cell are combined to determine the value of that cell. The wires between different cells define different types of functional relationships between them. Circuits are developed through the creation and manipulation of the graphical items of the interface using visually oriented processes such as drop down windows and drag and drop techniques.",
	"url": null,
	"owner": "",
	"publication_number": "07512581",
	"publication_date": "2009-03-31",
	"application_number": "10960626",
	"application_date": "2004-10-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Fault tolerant computer system",
	"summary": "",
	"abstract": "A computing hardware and software device called a Meta Mentor Central Processing Unit. The Meta Mentor purpose is to control memory, input/output interfaces, defining the operating system, the scheduling processes and the parsing of individual threads to an array of slave Processing Units that are uniquely connected, thus creating a highly optimized computing core. In effect, the Meta Mentor tells the array of slave processors what to process by controlling all external and internal system input/output and individual processor scheduling.",
	"url": null,
	"owner": "",
	"publication_number": "07484032",
	"publication_date": "2009-01-27",
	"application_number": "11160620",
	"application_date": "2005-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Frequency-dependent voltage control in digital logic",
	"summary": "",
	"abstract": "An electronic circuit comprises at least one digital logic circuit; and a power control circuit. The power control circuit is operable to adjust the voltage of a power signal supplied to the at least one digital logic circuit in response to a change in a clock frequency provided to the at least one digital logic circuit. In a further embodiment, the power controller is operable to increase the voltage of the power signal applied to the digital logic circuit before a frequency increase is made, and is operable to decrease the voltage of the power signal applied to the digital logic circuit after a frequency decrease is made.",
	"url": null,
	"owner": "",
	"publication_number": "07603575",
	"publication_date": "2009-10-13",
	"application_number": "11173218",
	"application_date": "2005-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Geolocation assisted data forwarding storage",
	"summary": "",
	"abstract": "A method includes, in a network of interconnected computer system nodes, receiving a request from a source system to store data, directing the data to a computer memory in conjunction with its geolocation, geolocation enabling selecting nodes that are proximate to each other or a user to increase speed and efficiency, and continuously forwarding the data from one computer memory to another computer memory in the network of interconnected computer system nodes in conjunction with their geolocations without storing on any physical storage device in the network.",
	"url": null,
	"owner": "",
	"publication_number": "07631051",
	"publication_date": "2009-12-08",
	"application_number": "12240925",
	"application_date": "2008-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Internet protocol multimedia subsystem enabled cellular phone accessory device",
	"summary": "",
	"abstract": "A cellular phone accessory device () combined with an IMS client () is implemented to provide real time interactive multimedia applications to low end phones () and middle range phones () without having to re-engineer said phones. Said device behaves as a cellular phone accessory and IMS client that is implemented using client control, protocol components () and IMS client media components (). Said device comprises of general purpose processor () and digital signal processor () connected using a DSP bridge ().",
	"url": null,
	"owner": "",
	"publication_number": "07606595",
	"publication_date": "2009-10-20",
	"application_number": "11583756",
	"application_date": "2006-10-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mechanization of modeling, simulation, amplification, and intelligence of software",
	"summary": "",
	"abstract": "The invention models software as a physical device with causality. It develops interaction between software and user in a software dynamic system that connects software or modeled software with a software controller. The software is modeled with its input/output behavior on a discrete sampling domain and is controlled by the controller in a modeling software dynamic system while its behavior is observed real-time to identify its model. The modeled software is controlled by the same controller in a simulation software dynamic system, which can be augmented programmatically. Augmentations integrated with the controller construct a software amplifier coupling the modeled software and user interactively and automatically. The modeled software represents domain knowledge simulated in the augmented system as software intelligence. A software-2 including the modeled software, the software controller, and augmentations is created. Software-2 integrated with real-time communication distributes over Internet with a Master-Machine-Learner loop as a new interactive media.",
	"url": null,
	"owner": "",
	"publication_number": "07490031",
	"publication_date": "2009-02-10",
	"application_number": "10707295",
	"application_date": "2003-12-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for switching a source of an audiovisual program configured for distribution among user terminals",
	"summary": "",
	"abstract": "A method and apparatus for switching a source of an audiovisual program configured for distribution among a plurality of user terminals is described. In one example, a first real-time digital bitstream and a second real-time digital bitstream are received. The source is mapped to the first real-time digital bitstream. A request is received from a remote controller. The request is operative to switch the source of the audiovisual program. The source of the audiovisual program is switched to the second real-time digital bitstream in response to the request. Time stamp data in the second real-time digital bitstream is adjusted to provide a continuous time base for the audiovisual program.",
	"url": null,
	"owner": "",
	"publication_number": "07502368",
	"publication_date": "2009-03-10",
	"application_number": "10820595",
	"application_date": "2004-04-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for creating reusable software components through a uniform interface",
	"summary": "",
	"abstract": "A method for designing software components for integration into any system without additional coding is provided. The method includes adopting a uniform application programming interface that breaks down external objects to include the characteristics of object, attribute, and method. Ideally, the characteristics include create object, delete object, read attributes, write attributes, and invoke behavior. A software tool is provided for communication between an API and a data source, the tool including a join engine adapted to provide communication between at least one view and at least one base source associated with the data source, the join engine further adapted to update the at least one base source in response to updates to the view. Ideally, the tool is further configured to support on the at least one base source operations of create object and delete object on the at least one view. The software tool is also configured to map events in the at least one base source to the at least one view, and can be configured to create virtual attributes based on the view through operations or expressions performed on the view, including, but not limited to algebraic expressions, names, strings, and functions.",
	"url": null,
	"owner": "",
	"publication_number": "07516439",
	"publication_date": "2009-04-07",
	"application_number": "11398847",
	"application_date": "2006-04-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for optimal pricing and allocation with canceling/modifying of indications of interest",
	"summary": "",
	"abstract": "A method and system for the determination of optimal pricing and allocation of securities in an open, competitive environment. The method and system may also be used in developing pre-markets of other items that are difficult to price and allocate in a competitive manner, such as the underwriting/securitization of contracts for property; future revenue/earning streams from an asset and/or group of assets; underwritten insurance portfolios, intellectual property and other goods and services. The system of price optimization and allocation is accomplished by interactive feedback of information using a display and including competitive participation of individual members of the public (and/or their agents) or institutional buyers over a data network e.g., the Internet, uncovering the nature and identification of demand in a self-organizing fashion. Demand emerges through participants' interaction with the system and with each other, via a graphically-supported, interactive reservation process. Earlier accepted indications of interest (e.g., bids) may be canceled or modified by later bids.",
	"url": null,
	"owner": "",
	"publication_number": "07620590",
	"publication_date": "2009-11-17",
	"application_number": "11651854",
	"application_date": "2007-01-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for building component-software for execution in a standards-compliant programming environment",
	"summary": "",
	"abstract": "Richer programming platforms mean easier application development. In order to achieve richer programming platforms, cooperation between lots of developers is necessary. The optimal situation is when developers can freely use each other's software components, without central management. Traditional programming platforms (COM, XP-COM, Java2 and .NET) almost reached this point, excluding situations when components compatible with different programming platforms must be integrated into the same application. An additional problem of the traditional programming platforms is their dependency on some non-standard runtime support. In a Web-application scenario, it cannot be assumed that support for every traditional programming platform would be available on any client machine. Therefore, the need for a system and a method for building, deploying and running component-software in a standards-compliant programming environment.",
	"url": null,
	"owner": "",
	"publication_number": "07574692",
	"publication_date": "2009-08-11",
	"application_number": "10991493",
	"application_date": "2004-11-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for developing gaming programs compatible with a computerized gaming operating system and apparatus",
	"summary": "",
	"abstract": "The present invention in various embodiments provides a computerized wagering game method and apparatus that features an operating system kernel, a system handler application that loads and executes gaming program shared objects and features nonvolatile storage that facilitates sharing of information between gaming program objects. The system handler of some embodiments further provides an API library of functions callable from the gaming program objects, and facilitates the use of callback functions on change of data stored in nonvolatile storage. The nonvolatile storage also provides a nonvolatile record of the state of the computerized wagering game, providing protection against loss of the game state due to power loss. The system handler application in various embodiments includes a plurality of device handlers, providing an interface to selected hardware and the ability to monitor hardware-related events.",
	"url": null,
	"owner": "",
	"publication_number": "07618317",
	"publication_date": "2009-11-17",
	"application_number": "10241804",
	"application_date": "2002-09-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network-extensible reconfigurable media appliance",
	"summary": "",
	"abstract": "Extensible reconfigurable media appliance for security and entertainment captures images digitally for storage. Digital effects and filters are applied to incoming video stream on-the-fly or to video data stored in memory. Digital effects and filters are dynamically stored, modified, updated or deleted, providing extensible reconfigurable effects studio. Digital media appliance communicates wirelessly with other media appliances, computers, security systems, video storage, email, chat, cellular services or PDAs to provide seamless integration of captured video stream.",
	"url": null,
	"owner": "",
	"publication_number": "07577636",
	"publication_date": "2009-08-18",
	"application_number": "10448202",
	"application_date": "2003-05-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network-extensible reconfigurable media appliance",
	"summary": "",
	"abstract": "Extensible reconfigurable media appliance for security and entertainment captures images digitally for storage. Digital effects and filters are applied to incoming video stream on-the-fly or to video data stored in memory. Digital effects and filters are dynamically stored, modified, updated or deleted, providing extensible reconfigurable effects studio. Digital media appliance communicates wirelessly with other media appliances, computers, security systems, video storage, email, chat, cellular services or PDAs to provide seamless integration of captured video stream.",
	"url": null,
	"owner": "",
	"publication_number": "07599963",
	"publication_date": "2009-10-06",
	"application_number": "11203645",
	"application_date": "2005-08-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Networked application request servicing offloaded from host",
	"summary": "",
	"abstract": "Offloading application level communication functions from a host processor. The offloading apparatus can be configured as either a pre-processor or as a co-processor. An interface is provided for receiving a network message sent to the host. An engine performs processing of the network message above OSI level 4. In one embodiment, in a fast-path, a response to the message is sent back to the network without any involvement by the host, providing a complete offload. For other messages, certain pre-processing can be performed, such as parsing of a header, message authentication, and look-up of meta-data. The results of the look-up are then passed to the host with the processed header, simplifying the tasks the host needs to perform. The messages and data are transferred to the host using control and data buffers.",
	"url": null,
	"owner": "",
	"publication_number": "07596634",
	"publication_date": "2009-09-29",
	"application_number": "10352800",
	"application_date": "2003-01-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Prescription management system",
	"summary": "",
	"abstract": "An electronic prescription creation system for use by professional prescribers at the point of care has a prescription division subsystem permitting creation of a single prescription to be automatically divided into two components for fulfillment of one portion quickly and locally at higher cost and of another portion by remote mail order taking more time but providing a cost saving for a major part of the prescription. The prescription creation system has an ability to access remote source databases for system presentation to the prescriber of relevant, authorized and current drug, drug formulary and patient history information, with dynamic creation of a transient virtual patient record, the information being presented to the prescriber before completion of the prescription, permitting enhancement of the quality of prescribing decisions.",
	"url": null,
	"owner": "",
	"publication_number": "07574370",
	"publication_date": "2009-08-11",
	"application_number": "09941682",
	"application_date": "2001-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Process for selecting a recording on a digital audiovisual reproduction system, and system for implementing the process",
	"summary": "",
	"abstract": "A process of selecting a recording on an audiovisual reproduction system consists of displaying a number of windows on a touch screen as an interface with a user. Items of information are stored in a bulk memory and are representative of an image of the album cover that is associated with each window and whose corresponding musical recording is stored in the bulk memory of the reproduction system. Each zone of a window is associated, via the touch-screen interface software, with at least one address for accessing the items of information in the database that is stored in the bulk memory belonging to the album cover whose image is displayed in the window that is touched by the user.",
	"url": null,
	"owner": "",
	"publication_number": "07500192",
	"publication_date": "2009-03-03",
	"application_number": "09888540",
	"application_date": "2001-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Real life implementation of modern portfolio theory (MPT) for financial planning and portfolio management",
	"summary": "",
	"abstract": "An investment portfolio management method for rebalancing an investor's securities portfolio based on the specified investment parameters is provided. The method utilizes a conventional mean-variance efficient portfolio frontier analysis, which is often cited in Modern Portfolio Theory (MPT), one of the major scholarly developments in modern finance, finds its way into actual rebalancing the investor's security portfolio. A new way of constructing market portfolio is also suggested. The method offers an automatic, mathematical solution for asset allocation and cash management in real time, while managing and trading on portfolios of each asset class, e.g. commercial papers, repurchase agreements, money market funds, bonds, stocks, mutual funds, and other derivatives on an automatic mode.",
	"url": null,
	"owner": "",
	"publication_number": "07536332",
	"publication_date": "2009-05-19",
	"application_number": "09776379",
	"application_date": "2001-02-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Service and method for providing a single point of access for multiple providers' video and audio content",
	"summary": "",
	"abstract": "A method that uses a computer network to provide a single point of access between a plurality of video & audio devices and a plurality of video & audio content provider systems. The present invention is a method for providing a searchable, aggregated directory view of available video & audio content from multiple content providers as well as additional services such as content renting. The present invention includes a method for identifying users as subscribers of content providers' memberships.",
	"url": null,
	"owner": "",
	"publication_number": "07555465",
	"publication_date": "2009-06-30",
	"application_number": "10831836",
	"application_date": "2004-04-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Sitemap access method, product, and apparatus",
	"summary": "",
	"abstract": "When a network request such as a resource location request, search engine request, and WHOIS request to process input having a resource identifier is received a user interface can then be provided to perform a request to access and display at least one sitemap corresponding to said resource identifier while performing the network request.",
	"url": null,
	"owner": "",
	"publication_number": "07565402",
	"publication_date": "2009-07-21",
	"application_number": "11676415",
	"application_date": "2007-02-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Subscription-based services",
	"summary": "",
	"abstract": "The present invention provides a virtual network, sitting u201caboveu201d the physical connectivity and thereby providing the administrative controls necessary to link various communication devices via an Access-Method-Independent Exchange. In this sense, the Access-Method-Independent Exchange can be viewed as providing the logical connectivity required. In accordance with the present invention, connectivity is provided by a series of communication primitives designed to work with each of the specific communication devices in use. As new communication devices are developed, primitives can be added to the Access-Method-Independent Exchange to support these new devices without changing the application source code. A Thread Communication Service is provided, along with a Binding Service to link Communication Points. A Thread Directory Service is available, as well as a Broker Service and a Thread Communication Switching Service. Intraprocess, as well as Interprocess, services are available. Dynamic Configuration Management and a Configurable Application Program Service provide software which can be commoditized, as well as upgraded while in operation.",
	"url": null,
	"owner": "",
	"publication_number": "07535927",
	"publication_date": "2009-05-19",
	"application_number": "11062256",
	"application_date": "2005-02-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for communicating information relating to a network resource",
	"summary": "",
	"abstract": "A system and method for communicating information relating to a network resource. A computer for displaying supplemental information about another document on a display screen for a user. Guiding individuals to places of interest on a network where information is stored, and/or displaying or otherwise presenting useful information to the user.",
	"url": null,
	"owner": "",
	"publication_number": "07536385",
	"publication_date": "2009-05-19",
	"application_number": "11470289",
	"application_date": "2006-09-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for consensus-based knowledge validation, analysis and collaboration",
	"summary": "",
	"abstract": "A consensus-based knowledge validation and analysis system provides a way to increase use of collaboration tools among panels of experts by providing a system for analyzing and validating the responses of such experts to a set of questions. The system uses a set of response data input by a panel of experts with respect to a particular subject matter formatted in accordance with a data model as input. The response data set is used to estimate an empirical point estimate matrix indicative of the amount of agreement in the responses on all items between the panelists. The empirical point estimate matrix is used to estimate the saliency of the subject matter to panelists, the competency of each panelist and a consensus model of correct answers is based on the estimated competency of each panelist and the of responses for each item in the response data set. This consensus model is used to generate a knowledge map to aid visualization of the consensus data and encourage further collaboration and consensus building. The method is implemented in a web-based system that enables users of collaboration tools to send response data sets to the tool via the Internet or virtual private network and to likewise retrieve knowledge maps, panelist information and consensus data. An interactive feature enables users/panelists to collaborate with other panelists using the knowledge map as an interface to one or more collaboration tools such as instant messaging.",
	"url": null,
	"owner": "",
	"publication_number": "07630867",
	"publication_date": "2009-12-08",
	"application_number": "11218015",
	"application_date": "2005-09-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for delivering customized advertisements within interactive communication systems",
	"summary": "",
	"abstract": "Customized advertisements are selected based on consumer profiles and are then integrated with offerings maintained by different content providers. The preferred interactive communication system interconnects multiple consumer computers, multiple content provider computers and multiple Internet provider computers with an advertisement provider computer. Whenever a consumer directs one of the consumer computers to access an offering existing in one of the content provider computers, an advertising request is sent to the advertisement provider computer. Upon receiving the advertising request, the advertising provider computer generates a custom advertisement based on the consumer's profile. The custom advertisement is then combined with the offering from the content provider computer and displayed to the consumer. The advertisement provider computer also credits a consumer account, a content provider account and an internet provider account each time a consumer views a custom advertisement. Furthermore, the advertisement provider computer tracks consumer responses to the customized advertisements.",
	"url": null,
	"owner": "",
	"publication_number": "07636672",
	"publication_date": "2009-12-22",
	"application_number": "10107523",
	"application_date": "2002-03-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for integrated audio stream manager",
	"summary": "",
	"abstract": "A multimedia telecommunications system including an integrated audio stream manager () in association with the digital personal video stream manager. Such an integrated audio stream manager employs a personal computer () to record and store audio such as compact disk tracks. The personal computer () can then contact one or more Internet web sites for CD indices to download a list of the tracks and provide a master list of all CDs stored. The digital personal video stream manager () can then be used to supervise playback of the audio files via the connected audio system.",
	"url": null,
	"owner": "",
	"publication_number": "07525975",
	"publication_date": "2009-04-28",
	"application_number": "10383895",
	"application_date": "2003-03-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for network traffic and I/O transaction monitoring of a high speed communications network",
	"summary": "",
	"abstract": "A network monitoring architecture and methodology enabling performance detection and diagnostics in storage area networks or other networks. The network monitoring is performed using a three-tiered distributed computing system architecture, including a data source tier, a portal tier and a client tier. The data source tier monitors the physical data on the network medium using multiple data collection sources, or data probes, connected to the network. The probes analyze network data and generate metrics that describe attributes of the network data. The metrics are used by the data portal tier, which is the second tier of the system. The portal tier encapsulates the metrics into data containers. The data containers may be requested by the client tier, which is the third tier in the network monitoring system. The client tier provides a user interface for displaying various types of network information derived from the contents of data containers.",
	"url": null,
	"owner": "",
	"publication_number": "07599293",
	"publication_date": "2009-10-06",
	"application_number": "10307272",
	"application_date": "2002-11-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for optimizing network capacity in a cellular wireless network",
	"summary": "",
	"abstract": "A system and method is disclosed for increasing the efficiency of a cellular communication network, reduce ongoing operating costs and increase revenue. According to one aspect, a method is disclosed for increasing the efficiency of a cellular communication network whereby network capacity in the radio access network (RAN) and baseband processing for wireless connections are dynamically adjusted to automatically provision sufficient bandwidth and baseband processing capacity in response to changes in the network. The method is further extended by implementing policy management which allows wireless carriers to develop and implement network based policies to automatically increase or decrease the amount of processing resources and network bandwidth required from any cell site, hub or mobile switching office. According to another aspect, network efficiency is enhanced by utilizing a novel cellular network infrastructure. RF signals from cell site antennas of various technology types are demodulated, digital bit information is extracted from the RF signals, processed, and groomed into Gigabit Ethernet/Resilient Packet Ring (GigE/RPR) or Ethernet over copper traffic flows using specific Quality of Service (QoS) priorities. The GigE/RPR traffic flows are routed to hub sites or mobile switching offices, at which point the packetized information is extracted and converted to RF signals that are equivalent to the signals that were received at the antenna. The RF signals are sent over coaxial cable to a network hub including a pool of Base Transceiver Stations (BTSs) (or Node Bs). The hub is coupled to one or more mobile switching offices via a second fiber optic ring.",
	"url": null,
	"owner": "",
	"publication_number": "07573862",
	"publication_date": "2009-08-11",
	"application_number": "10774181",
	"application_date": "2004-02-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for peer-to-peer internet communication",
	"summary": "",
	"abstract": "Cross IM group chat allows a host user to initiate a group conference between other users each registered on different chat systems (or not registered at all), as long as the host user is registered on each of the chat systems. Each user can participate in a semi-public chat that is viewable by the other participants of the chat, and private chats in which each participant can chat one on one with other participants in the group are also provided.",
	"url": null,
	"owner": "",
	"publication_number": "07639672",
	"publication_date": "2009-12-29",
	"application_number": "11604949",
	"application_date": "2006-11-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing a peer indexing service",
	"summary": "",
	"abstract": "A peer graph is formed by assigning published identifiers to peer nodes that each map to network addresses. A signed number space is defined based on the published identifiers. Given a key, a closest peer node is determined by maintaining data identifying other peer nodes. Index information identifying the key and an associated value are stored as a pair on a storing peer node. Further key and value pairs are maintained in a local indexing database. Hierarchically structured levels are organized in a peer indexing database as a factor of the number space size. A group identifier is stored at a peer indexing database level determined as a function of the storing peer node, level and number space size factor. The key is hashed as a function of the initial group identifier and number space size factor to identify a closest peer node. Key and value pairs are transiently maintained.",
	"url": null,
	"owner": "",
	"publication_number": "07478120",
	"publication_date": "2009-01-13",
	"application_number": "10832657",
	"application_date": "2004-04-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methodology for endurance training",
	"summary": "",
	"abstract": "A method and system for assisting a user in maintaining a predetermined pace along a track with a specific predetermined end goal. The preferred embodiment uses a PDA or similar device to allow a user set a specific course goal and to enter (or download) a previous profile pace target along with checkpoint data for a specified track, detecting start/stop and checkpoints along a course, normalizing the user time at each checkpoint and providing wireless speech u2018behind/aheadu2019 feedback (either time or energy) to a user at each checkpoint along a specified track. The present invention may provide the user with a variable pace along a track or course utilizing upcoming terrain, percentage of work completed and/or user power profiles and may normalize a user goal to other competitors having faster or slower track times.",
	"url": null,
	"owner": "",
	"publication_number": "07572205",
	"publication_date": "2009-08-11",
	"application_number": "11467005",
	"application_date": "2006-08-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for and method of providing priority access service and cell load redistribution",
	"summary": "",
	"abstract": "Systems of and methods for providing cellular priority access and topological guidance information to cellular users are described, employing wireless ad hoc network and cellular logic. A centralized aspect of acquiring cell loading information and geographic coordinates is combine with a distributed scatternet forming aspect to enable guidance information to be computed and indicated to the user. The guidance information is reflective of cell loading and congestion status of neighboring cells, as well as the availability of alternative radio resources in the user's current cell or neighboring cells. The system may also be employed in redistributing cell traffic among cells to optimally balance cell loads.",
	"url": null,
	"owner": "",
	"publication_number": "07623870",
	"publication_date": "2009-11-24",
	"application_number": "11171515",
	"application_date": "2005-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program for an integrated digital workflow for processing a paper form",
	"summary": "",
	"abstract": "A method, system and computer program for creating a digital workflow associated with the completion of a paper form is provided. An electronic clipboard includes a panel for receiving a paper form, a computer including a clipboard computer application, and an input device that completes the paper form with handwritten input data and also created digital signals corresponding to the handwritten input data. The computer application interprets the digital signal data so as to define digital input data, which corresponds to the handwritten input data. The electronic clipboard also includes verification/correction facility that enables the display of the digital input data and verification and correction thereof using a series of input devices provided on the electronic clipboard. The electronic clipboard is linked to a remote computer. The remote computer includes a forms creation and management application for the creation of the electronic forms, and definition of rules for processing digital input data includes in the various fields of the electronic forms. In a server implementation of the invention, the remote computer is an application server that provides access to a plurality of software utilities for processing the digital input data included in the electronic forms. The application server enables processes such as financial transactions associated with electronic forms, transmission of selected digital input data to other computer systems, and field level encryption. Another aspect of the invention is a point of sale device that include the electronic clipboard.",
	"url": null,
	"owner": "",
	"publication_number": "07492946",
	"publication_date": "2009-02-17",
	"application_number": "10851133",
	"application_date": "2004-05-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program for an integrated digital workflow for processing a paper form",
	"summary": "",
	"abstract": "A method, system and computer program for creating a digital workflow associated with the completion of a paper form is provided. An electronic clipboard includes a panel for receiving a paper form, a computer including a clipboard computer application, and an input device that completes the paper form with handwritten input data and also created digital signals corresponding to the handwritten input data. The computer application interprets the digital signal data so as to define digital input data, which corresponds to the handwritten input data. The electronic clipboard also includes verification/correction facility that enables the display of the digital input data and verification and correction thereof using a series of input devices provided on the electronic clipboard. The electronic clipboard is linked to a remote computer. The remote computer includes a forms creation and management application for the creation of the electronic forms, and definition of rules for processing digital input data includes in the various fields of the electronic forms. In a server implementation of the invention, the remote computer is an application server that provides access to a plurality of software utilities for processing the digital input data included in the electronic forms. The application server enables processes such as financial transactions associated with electronic forms, transmission of selected digital input data to other computer systems, and field level encryption. Another aspect of the invention is a point of sale device that include the electronic clipboard.",
	"url": null,
	"owner": "",
	"publication_number": "07606422",
	"publication_date": "2009-10-20",
	"application_number": "12352261",
	"application_date": "2009-01-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Third party authentication of files in digital systems",
	"summary": "",
	"abstract": "A file authentication requesting device that stores a computer program for requesting authentication of files in digital systems, the device comprises a confirmation request system that generates a request for a confirmation receipt from a third party authenticator authenticating the attributes of a file; a transferring system that transfers attributes of at least one file to be authenticated to the third party authenticator from the device that requested the confirmation; and a receiving system that receives the confirmation receipt comprising authenticated file attributes, after authentication by the third party authenticator; wherein, at least one file authentication is received from the third party authenticator. Corresponding processing devices, media, systems and methods are also provided.",
	"url": null,
	"owner": "",
	"publication_number": "07536554",
	"publication_date": "2009-05-19",
	"application_number": "10657221",
	"application_date": "2003-09-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Image display system with visual server",
	"summary": "",
	"abstract": "An image display system with one or more client computers in selective communication with a visual server having image processing capabilities. The client computer generates image modifying data corresponding to a generated image, and transmits the data to the visual server. The visual server receives the image-modifying data, generates a modified image based upon the image-modifying data, and transmits the modified image as compressed data to the client. The client decompresses the modified image data and displays the modified image. In the system, the visual server and client can provide a sequential display of modified frames on client to support animation with complex 3-dimensional graphics.",
	"url": null,
	"owner": "3DLabs Inc. Ltd.",
	"publication_number": "07587520",
	"publication_date": "2009-09-08",
	"application_number": "10037688",
	"application_date": "2002-01-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Centralized management of replacement vehicle labels",
	"summary": "",
	"abstract": "A central labeling data (CLD) management system provides centralized management, assembly, and distribution of labeling data for use in generating replacement labels for damaged vehicles. For example, the CLD management system includes a database that stores label data for a plurality of vehicles produced by a plurality of different manufacturers. The CLD management system presents an interface to receive an electronic communication from a client computing device associated with a repair shop. The electronic communication includes a request for label data associated with an original vehicle label. The CLD management system retrieves the requested label data from the database and communicates the label data to an output device for printing a new vehicle label for use by the repair shop.",
	"url": null,
	"owner": "3M Innovative Properties Company",
	"publication_number": "07540420",
	"publication_date": "2009-06-02",
	"application_number": "11866188",
	"application_date": "2007-10-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Overhead power transmission line conductor selection",
	"summary": "",
	"abstract": "In general the invention is directed to systems and methods to identify conductors that may be used as part of a power transmission line system. In one embodiment, the invention is directed to a computer-implemented method of evaluating an electric conductor for an overhead power transmission line, comprising: receiving requirements data defining requirements for an overhead power transmission line; receiving conductor data that define at least two conductors to be evaluated; after receiving conductor data for the plurality of conductors to be evaluated, automatically modeling expected operating performance for at least two conductors using conductor assessment software running on a computer, wherein modeling at least comprises, for at least one of the conductors to be evaluated, calculating the conductor's maximum ampacity within the constraints defined by the requirements data; and, based on the modeling, identifying at least one conductor that meets the requirements for the power transmission line.",
	"url": null,
	"owner": "3M Innovative Properties Company",
	"publication_number": "07516051",
	"publication_date": "2009-04-07",
	"application_number": "11419365",
	"application_date": "2006-05-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Ontology-driven information system",
	"summary": "",
	"abstract": "An ontology-driven information system includes a plurality of models, each of which expresses an aspect of a business domain using concepts and relationships between concepts. An ontology, which is in communication with each of the plurality of models, provides uniform definitions for the concepts and relationships between concepts used in the plurality of models. A method for executing an interaction flow model includes receiving an event and categorizing the received event. Once the event is categorized, a situation that matches the categorized received event is identified. One or more tasks are then executed for the situation. The execution of the one or more tasks can include either an interpretation of a model or the execution of a method of an object. The information system also includes a user and application interface and a reasoning engine that is in communication with the user and application interface. A knowledge manager is in communication with the user and application interface and is interfaced with the reasoning engine. A distributed information service also is in communication with the reasoning engine, the knowledge manager, and the user and application interface.",
	"url": null,
	"owner": "6100198 Canada Inc.",
	"publication_number": "07567915",
	"publication_date": "2009-07-28",
	"application_number": "11583945",
	"application_date": "2006-10-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing search results based on location",
	"summary": "",
	"abstract": "A method for providing a listing of common searches based on a location. The method includes receiving a location of a mobile computing device, generating a listing of common searches associated with the location, and transmitting the listing of common searches to the mobile computing device.",
	"url": null,
	"owner": "A9.com, Inc.",
	"publication_number": "07565157",
	"publication_date": "2009-07-21",
	"application_number": "11283056",
	"application_date": "2005-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Compressed experiential learning",
	"summary": "",
	"abstract": "A compressed experiential learning system is created by determining high-level goals and objectives, determining roles and objectives for each role, developing a learning environment including physical and technical components, developing an instructional environment, and creating evaluation plans.",
	"url": null,
	"owner": "Accenture Global Services GmbH",
	"publication_number": "07497688",
	"publication_date": "2009-03-03",
	"application_number": "10245715",
	"application_date": "2002-09-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer enabled training of a user to validate assumptions",
	"summary": "",
	"abstract": "A system, method and article of manufacture are disclosed which implement a training session for training a user to validate assumptions. First, a plurality of stimuli are presented to a user in the context of a simulation. The user is then prompted to enter responses to the stimuli which are subsequently recorded. The user is then allowed to enter assumptions that form a basis of the responses. Next, the user is prompted to enter information on how to validate the assumptions which is subsequently received. Feedback is then outputted based on the stimuli and responses. Such feedback relates to appropriate assumptions and information on how to validate the appropriate assumptions. As an option, the feedback may be further based on a number of assumptions entered.",
	"url": null,
	"owner": "Accenture Global Services GmbH",
	"publication_number": "07621748",
	"publication_date": "2009-11-24",
	"application_number": "11749473",
	"application_date": "2007-05-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generic connector between a middleware layer and a server software object",
	"summary": "",
	"abstract": "A method is described for constructing a generalized connector for use in an object-oriented program system, the connector being a middleware service logic mechanism between an event monitor and transmission sub-system and an application system having an application system Application Program Interface (API), wherein the connector can recognize events provided by the event monitor as event objects and can automatically determine which corresponding ENTERPRISE JAVA BEAN (EJB) software object is associated with the event object, and can invoke methods on the EJB software object in a specified order, and can collect the results of the method invocations for return to the event monitor. A connector for performing these functions is also described.",
	"url": null,
	"owner": "Accenture Global Services GmbH",
	"publication_number": "07627853",
	"publication_date": "2009-12-01",
	"application_number": "10278171",
	"application_date": "2002-10-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Goal based system, utilizing a table based architecture",
	"summary": "",
	"abstract": "A system is disclosed that provides a goal based learning system utilizing a rule based expert training system to provide a cognitive educational experience. The system provides the user with a simulated environment that presents a business opportunity to understand and solve optimally. Mistakes are noted and remedial educational material presented dynamically to build the necessary skills that a user requires for success in the business endeavor. The system utilizes an artificial intelligence engine driving individualized and dynamic feedback with synchronized video and graphics used to simulate real-world environment and interactions. Multiple u201ccorrectu201d answers are integrated into the learning system to allow individualized learning experiences in which navigation through the system is at a pace controlled by the learner. A robust business model provides support for realistic activities and allows a user to experience real world consequences for their actions and decisions and entails realtime decision-making and synthesis of the educational material. The system is architected around a table of components to manage and control the system.",
	"url": null,
	"owner": "Accenture Global Services GmbH",
	"publication_number": "07536363",
	"publication_date": "2009-05-19",
	"application_number": "09868695",
	"application_date": "1999-02-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Component based task handling during claim processing",
	"summary": "",
	"abstract": "A computer program for handling insurance-related tasks includes a data component that stores, retrieves and manipulates data utilizing a plurality of functions, a client component that includes: (1) an adapter component that transmits and receives data to/from the data component; (2) a business component that serves as a data cache and includes logic for manipulating the data; and (3) a controller component that is adapted to handle events generated by a user utilizing the business component to cache data and the component to ultimately persist data to a data repository. In use, the client component allows a user to define tasks during execution phase of the program that achieve a goal upon completion. The user is able to input rules which dictate which tasks should be selected based on a set of predetermined events. Tasks are generated based on received events.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "07617240",
	"publication_date": "2009-11-10",
	"application_number": "09305234",
	"application_date": "1999-05-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Verification and printing of a tax return in a network-based tax architecture",
	"summary": "",
	"abstract": "A system, method and article of manufacture are provided for tax form submittal verification. First, a tax form of a user is sent to a third party government entity utilizing a network. Next, a record of the sent tax form is stored in a database. Thereafter, a request for the record is received from the user utilizing the network. An identity of the user is then authenticated utilizing the network. Upon the successful authentication of the identity of the user, the record is sent to the user utilizing the network.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "07603301",
	"publication_date": "2009-10-13",
	"application_number": "09558920",
	"application_date": "2000-04-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Voice recognition system for navigating on the internet",
	"summary": "",
	"abstract": "A system, method and article of manufacture are provided for recognizing voice commands for manipulating data on the Internet. Data is provided on a website. Voice signals are received from a user who is accessing the website, which are interpreted to determine navigation commands. Selected data of the website is output based on the navigation commands. In one embodiment of the present invention, the data includes a voice-activated application. The user may be allowed to access the website from either a computer or a telephone, or both. A language may be determined from the voice signals and the voice signals interpreted in the language being spoken by the user.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "07590538",
	"publication_date": "2009-09-15",
	"application_number": "09387195",
	"application_date": "1999-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Client controllable server-side playlists",
	"summary": "",
	"abstract": "A system and method is disclosed for establishing an interactive multimedia application environment in which server-side streaming media may be controlled by a client using a programming model provided at both a communication server and an interactive multimedia runtime on the client. The application program interface (API) preferably provides methods for the client user to establish a stream of data from the client to the communication server in addition to allowing a stream from the communication server to the client. The API also preferably allows the user at a client to exert control over the broadcasting of the media streams. Streams may be built, edited, paused, stopped, augmented, and the like by the client user. Each function that the client user may operate on the broadcast media stream is preferably viewable by all of the other subscribing clients.",
	"url": null,
	"owner": "Adobe Systems Incorporated",
	"publication_number": "07617278",
	"publication_date": "2009-11-10",
	"application_number": "10353811",
	"application_date": "2003-01-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Element view toggling",
	"summary": "",
	"abstract": "A system and method to allow element toggling in a web-page design application include providing a user with an option to toggle a current view of a selected object, and changing said view of said object in response to the user exercising said option.",
	"url": null,
	"owner": "Adobe Systems Incorporated",
	"publication_number": "07640505",
	"publication_date": "2009-12-29",
	"application_number": "11112964",
	"application_date": "2005-04-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Management of user interaction history with software applications",
	"summary": "",
	"abstract": "A system and method are disclosed for history management a plurality of objects within an application, wherein each of the plurality includes at least a software method for saving the object's state and a software method for loading the object's state and a history manager function including a software method for recording an application interaction state for each user interaction with the application, wherein the application interaction state comprises the object's state for each of the plurality of objects at a time of the each user interaction with the application, wherein the user selects a desired one of the application interaction states to set the application to a desired one of the user interactions.",
	"url": null,
	"owner": "Adobe Systems Incorporated",
	"publication_number": "07536672",
	"publication_date": "2009-05-19",
	"application_number": "10794173",
	"application_date": "2004-03-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for replacing application publisher interface branding with identity plates",
	"summary": "",
	"abstract": "Identity plates are described, including importing identity data into an application, the identity data being used to configure one or more identity elements, configuring an identity plate using the one or more identity elements, and presenting the identity plate within an interface associated with the application, the identity plate being configured to display the one or more identity elements in one or more associated positions configured to receive the one or more identity elements.",
	"url": null,
	"owner": "Adobe Systems Incorporated",
	"publication_number": "07543236",
	"publication_date": "2009-06-02",
	"application_number": "11445011",
	"application_date": "2006-06-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Virtual view tree",
	"summary": "",
	"abstract": "A virtual view tree for representing a document. A virtual view tree is maintained by an application, rather than a renderer (e.g., graphics rendering library) called upon by the application to display the document. The view tree is virtual in that nodes need not be created until they are to be displayed. When instructed to display the document, the renderer requests nodes and their attributes. The nodes may be cached while the renderer works on their content, but may be removed from memory anytime thereafter. Only a subset of the virtual view tree's nodes is stored at one time, and only in non-persistent storage. The application includes various APIs for navigating a virtual view tree, describing its attributes and caching its nodes. The APIs may be directly accessible to the renderer or may be invoked by subsystems of the application (e.g., client, tree navigation and caching subsystems).",
	"url": null,
	"owner": "Adobe Systems Incorporated",
	"publication_number": "07535475",
	"publication_date": "2009-05-19",
	"application_number": "11263798",
	"application_date": "2005-11-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Fast zoom-adaptable anti-aliasing of lines using a graphics processing unit",
	"summary": "",
	"abstract": "A method, system, and computer-readable storage medium are disclosed for performing anti-aliasing operations on lines using a graphics processing unit (GPU). Input comprising a plurality of vertices may be received at a GPU. The plurality of vertices may represent one or more line segments. One or more anti-aliased line segments may be generated based on the input. In generating the one or more anti-aliased line segments, the intensity of a first edge and a second edge of each line segment may be modified based on application of an anti-aliasing function. A maximum intensity of a central portion may be maintained for at least one of the line segments, wherein the central portion is between the two edges and is greater than one pixel in thickness.",
	"url": null,
	"owner": "Adobe Systems, Incorporated",
	"publication_number": "07605825",
	"publication_date": "2009-10-20",
	"application_number": "11586042",
	"application_date": "2006-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Form-based user interface for controlling messaging",
	"summary": "",
	"abstract": "An integrated messaging system for performing various types of messaging across different types of networks, including integrated user interfaces and administrator interfaces. Embodiments include a communication server that couples among networks of different types, and an interface module that couples to the communication server. The interface module may be hosted on a messaging server of a network. The interface module pulls various user information from the messaging server, including information relevant to at least the network that includes the messaging server. A cache couples to the communication server and to the interface module to hold information from the communication server and/or the user information pulled from messaging server. The interface module directs a message from the messaging server and/or the cache to at least one device on the networks using the user information.",
	"url": null,
	"owner": "Adomo, Inc.",
	"publication_number": "07564954",
	"publication_date": "2009-07-21",
	"application_number": "11053537",
	"application_date": "2005-02-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure patch installation for WWAN systems",
	"summary": "",
	"abstract": "The present invention relates methods for patching WWAN (Wireless Wide Area Network) communication devices and corresponding WWAN communication devices, integrated circuit chips and computer-readable media. The WWAN communication device includes a first processor, a second processor and a memory. The first processor is arranged to process patches updating software running on the WWAN communication device. The second processor is arranged to provide a first set of the patches to the first processor. The memory stores a second set of the patches to be processed by the first processor. The second processor is further arranged to send a patch end signal to the first processor, the patch end signal causing the first processor to stop processing of patches provided by the second processor. The first processor is further arranged to process the patches stored in the memory independently of the patch end signal.",
	"url": null,
	"owner": "Advanced Micro Devices, Inc.",
	"publication_number": "07492747",
	"publication_date": "2009-02-17",
	"application_number": "11316499",
	"application_date": "2005-12-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for identifying damage in a structure",
	"summary": "",
	"abstract": "Systems, methods and recordable media for identifying damage in a structure. A method includes the steps of: obtaining a plurality of damage index values for a network coupled to the structure, wherein each of the damage index values is a quantity to be affected by damage in the structure; generating a distribution of damage index value over a surface using the obtained damage index values; and identifying the damage by analyzing the distribution.",
	"url": null,
	"owner": "Advanced Structure Monitoring, Inc.",
	"publication_number": "07590510",
	"publication_date": "2009-09-15",
	"application_number": "11827350",
	"application_date": "2007-07-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods of generating diagnostic images for structural health monitoring",
	"summary": "",
	"abstract": "Systems, methods and recordable media for generating tomographic images to monitor structural health conditions. A method includes the steps of obtaining a plurality of damage index values for a network that is coupled to a host structure and has a plurality of diagnostic network patches (DNP), generating a distribution of damage index value over a surface using the obtained damage index values, and formatting the distribution as at least one tomographic image. Each of the patches is able to operate as at least one of a transmitter patch and a sensor patch. The damage index values is a quantity to be affected by damage in the host structure or associated with signals generated by the patches in a response to an impact on the host structure.",
	"url": null,
	"owner": "Advanced Structure Monitoring, Inc.",
	"publication_number": "07584075",
	"publication_date": "2009-09-01",
	"application_number": "11827319",
	"application_date": "2007-07-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods of prognosticating damage for structural health monitoring",
	"summary": "",
	"abstract": "Systems, methods and recordable media for prognosticating a structural condition. A method for prognosticating a structural condition by use of a network having a plurality of diagnostic network patches (DNP), each of the patches being able to operate as at least one of a transmitter patch and a sensor patch, includes the steps of: (a) causing at least one of the patches to emit a transmitter signal and a portion of the other patches to receive a set of sensor signals at a point in time; (b) repeating the step (a) to receive multiple sets of sensor signals at multiple points in time, respectively; and (c) prognosticating, based on the multiple sets of signals, a structural condition of a host structure of the network at a target point in time.",
	"url": null,
	"owner": "Advanced Structure Monitoring, Inc.",
	"publication_number": "07596470",
	"publication_date": "2009-09-29",
	"application_number": "11827244",
	"application_date": "2007-07-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Speech recognition and transcription among users having heterogeneous protocols",
	"summary": "",
	"abstract": "A system is disclosed for facilitating speech recognition and transcription among users employing incompatible protocols for generating, transcribing, and exchanging speech. The system includes a system transaction manager that receives a speech information request from at least one of the users. The speech information request includes formatted spoken text generated using a first protocol. The system also includes a speech recognition and transcription engine, which communicates with the system transaction manager. The speech recognition and transcription engine receives the speech information request from the system transaction manager and generates a transcribed response, which includes a formatted transcription of the formatted speech. The system transmits the response to the system transaction manager, which routes the response to one or more of the users. The latter users employ a second protocol to handle the response, which may be the same as or different than the first protocol. The system transaction manager utilizes a uniform system protocol for handling the speech information request and the response.",
	"url": null,
	"owner": "Advanced Voice Recognition Systems, Inc.",
	"publication_number": "07558730",
	"publication_date": "2009-07-07",
	"application_number": "11824794",
	"application_date": "2007-07-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Extending an internet content delivery network into an enterprise",
	"summary": "",
	"abstract": "An Internet content delivery network deploys one or more CDN server regions in an enterprise and manages those regions as part of the Internet CDN. In one aspect of the invention, a CDN service provider (CDNSP) deploys one or more CDN regions behind an enterprise's corporate firewall(s). The regions are used to deliver Internet contentu2014content that has been tagged or otherwise made available for delivery over the Internet from the CDN's content servers. This content includes, for example, content that given content providers have identified is to be delivered by the CDN. In addition, the enterprise may tag intranet content, which is then also served from the CDN regions behind the firewall. Intranet content remains secure by virtue of using the enterprise's existing security infrastructure. In accordance with another aspect of the invention, the CDNSP implements access controls and deploys one or more CDN regions outside an enterprise's firewall(s) such that intranet content can be served from regions located outside the firewall(s). In this embodiment, the CDNSP can provide granular control, such as permissions per groups of users. In this way, the CDNSP, in effect, extends a conventional virtual private network (VPN) to all or a portion of the ICDN, thereby enabling the CDNSP to use multiple regions and potentially thousands of content servers available to serve the enterprise's internal content. In addition to making internal content available from the edge of the network, the CDNSP provides a mechanism by which an enterprise may share secure data with its business partner(s) without setting up any special infrastructure.",
	"url": null,
	"owner": "Akamai Technologies, Inc.",
	"publication_number": "07600025",
	"publication_date": "2009-10-06",
	"application_number": "11507630",
	"application_date": "2006-08-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of, and system for, webcasting with just-in-time resource provisioning, automated telephone signal acquisition and streaming, and fully-automated event archival",
	"summary": "",
	"abstract": "A multimedia business communications platform enables conference casting over a network. End users or so-called u201caudience membersu201d participate in conference casts from anywhere on the Internet or behind an enterprise firewall using a standard Web browser running a streaming media player. The conference platform typically includes a number of subsystems: a Web reservation subsystem, a voice server subsystem, a content storage subsystem, a monitoring data subsystem, an attendee access subsystem, and an archive subsystem. Web reservation subsystem provides a mechanism that enables an entity to make an event reservation. Web reservation subsystem typically includes a database and an associated database management system. Voice server subsystem validates a user and converts an incoming telephone signal (i.e., the conference call) to an output data stream. Attendee access subsystem responds to attendee requests and returns information (e.g., a data structure such as a stream metafile) that directs an attendee's streaming media player on how to join the conference cast. Content storage subsystem is used to manage event information and, under the control of the archive subsystem, to archive the event files. The monitoring data subsystem comprises a set of monitoring agents distributed throughout the network. Using these components, the system implements just-in-time resource provisioning, automated signal acquisition and streaming, and automated archiving upon event completion.",
	"url": null,
	"owner": "Akamai Technologies, Inc.",
	"publication_number": "07640303",
	"publication_date": "2009-12-29",
	"application_number": "11875988",
	"application_date": "2007-10-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of, and system for, webcasting with just-in-time resource provisioning, automated telephone signal acquisition and streaming, and fully-automated event archival",
	"summary": "",
	"abstract": "The present invention implements a multimedia business communications platform that enables conference casting over a network. End users or so-called u201caudience membersu201d participate in conference casts from anywhere on the Internet or behind an enterprise firewall using a standard Web browser running a streaming media player. The conference platform typically includes a number of subsystems: a Web reservation subsystem, a voice server subsystem, a content storage subsystem, a monitoring data subsystem, an attendee access subsystem, and an archive subsystem. Web reservation subsystem provides a mechanism that enables an entity to make an event reservation. Web reservation subsystem typically includes a database and an associated database management system. Voice server subsystem validates a user and converts an incoming telephone signal (i.e., the conference call) to an output data stream. Attendee access subsystem responds to attendee requests and returns information (e.g., a data structure such as a stream metafile) that directs an attendee's streaming media player on how to join the conference cast. Content storage subsystem is used to manage event information and, under the control of the archive subsystem, to archive the event files. The monitoring data subsystem comprises a set of monitoring agents distributed throughout the network. Using these components, the system implements just-in-time resource provisioning, automated signal acquisition and streaming, and automated archiving upon event completion.",
	"url": null,
	"owner": "Akamai Technologies, Inc.",
	"publication_number": "07483945",
	"publication_date": "2009-01-27",
	"application_number": "10127009",
	"application_date": "2002-04-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Scalable, high performance and highly available distributed storage system for Internet content",
	"summary": "",
	"abstract": "A method for content storage on behalf of participating content providers begins by having a given content provider identify content for storage. The content provider then uploads the content to a given storage site selected from a set of storage sites. Following upload, the content is replicated from the given storage site to at least one other storage site in the set. Upon request from a given entity, a given storage site from which the given entity may retrieve the content is then identified. The content is then downloaded from the identified given storage site to the given entity. In an illustrative embodiment, the given entity is an edge server of a content delivery network (CDN).",
	"url": null,
	"owner": "Akamai Technologies, Inc.",
	"publication_number": "07624169",
	"publication_date": "2009-11-24",
	"application_number": "11595230",
	"application_date": "2006-11-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for tiered distribution in a content delivery network",
	"summary": "",
	"abstract": "A tiered distribution service is provided in a content delivery network (CDN) having a set of surrogate origin (namely, u201cedgeu201d) servers organized into regions and that provide content delivery on behalf of participating content providers, wherein a given content provider operates an origin server. According to the invention, a cache hierarchy is established in the CDN comprising a given edge server region and either (a) a single parent region, or (b) a subset of the edge server regions. In response to a determination that a given object request cannot be serviced in the given edge region, instead of contacting the origin server, the request is provided to either the single parent region or to a given one of the subset of edge server regions for handling, preferably as a function of metadata associated with the given object request. The given object request is then serviced, if possible, by a given CDN server in either the single parent region or the given subset region. The original request is only forwarded on to the origin server if the request cannot be serviced by an intermediate node.",
	"url": null,
	"owner": "Akamai Technologies, Inc.",
	"publication_number": "07603439",
	"publication_date": "2009-10-13",
	"application_number": "12122776",
	"application_date": "2008-05-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and devices for implementing highly interactive entertainment services using interactive media-streaming technology, enabling remote provisioning of virtual reality services",
	"summary": "",
	"abstract": "The invention relates to a method for generating an interactive virtual reality with a network service using interactive media-streaming technology comprising the steps of establishing an action stream session comprising connection handling, quality of service handling, adapting the network environment by demanding network resources and control information, establishing media-streaming path from the service to the client and a user interaction control path in the reverse direction, controlling the network with respect to required quality of service, continuously, generating and transmitting individual media streams to the client (ASC) by embedding interaction into a virtual reality, and extracting and encoding a media stream at the service using a virtual reality description compressed motion picture stream, encoding and transmitting the user's interaction to the service, as well as de-coding and playing the individual media data stream at the client side. Further it relates to a Action Streaming Service, Action Streaming Client (ASC), Action Streaming Server (ASS), Action Streaming System, Action Stream, Action Streaming Session, Action Streaming Protocol, and Computer Software Products for generating an interactive virtual reality.",
	"url": null,
	"owner": "Alcatel",
	"publication_number": "07480727",
	"publication_date": "2009-01-20",
	"application_number": "10636556",
	"application_date": "2003-08-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Effectuating personalized, process-integrated information, communications and entertainment (ICE) service delivery",
	"summary": "",
	"abstract": "Method and system for effectuating personalized, process-integrated information, communications and entertainment (ICE) service delivery to enterprise and residential subscribers. In one embodiment, the process-integrated ICE delivery system includes at least one application server disposed as part of a service delivery platform, wherein the at least one application server is interfaced with an enterprise network for hosting one or more service application modules. A process flow management server interfaced with the enterprise network is operable for managing a modularized flow of a business process in the enterprise, wherein the modularized flow includes a number of process blocks, at least a portion of the process blocks each having an interface with one or more service application modules that are activated depending on where a particular project is located.",
	"url": null,
	"owner": "Alcatel Lucent",
	"publication_number": "07546301",
	"publication_date": "2009-06-09",
	"application_number": "11205585",
	"application_date": "2005-08-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Auctioning of message delivery opportunities in a location-based services system",
	"summary": "",
	"abstract": "Location-based services are provided in a communication system comprising at least a portion of at least one wireless network. In one aspect of the invention, one or more interested parties are permitted to bid on available opportunities for delivery of messages to mobile user devices, and delivery of at least one message to a given one of the mobile user devices is controlled based on user profile information and at least one received bid for a corresponding message delivery opportunity. The message delivery opportunities may be specified as combinations of two or more of a message category, a location for message delivery and a time for message delivery. For example, a given message delivery opportunity may be a category-location-time combination.",
	"url": null,
	"owner": "Alcatel-Lucent",
	"publication_number": "07636574",
	"publication_date": "2009-12-22",
	"application_number": "11437065",
	"application_date": "2006-05-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Subscription management system for data communication network",
	"summary": "",
	"abstract": "A network management system allows operators to set up subscriptions to services for network users. The subscriptions each associate a subscriber object and an application object. The subscriber object contains information about the subscriber's network connection. The application object contains information about the application's network connection. The operator does not need to work with low level information such as physical port numbers to create a subscription. The system automatically sets up one or more virtual channel connections as needed to provide the application to the subscriber. The system can be easier to operate accurately than current systems. The system may track and accumulate statistics on a service-by-service basis. The statistics may be used to bill for individual services even if several different virtual channel connections are used to provide each service.",
	"url": null,
	"owner": "Alcatel-Lucent Canada Inc.",
	"publication_number": "07562129",
	"publication_date": "2009-07-14",
	"application_number": "09292365",
	"application_date": "1999-04-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for enabling optimized gateway selection for inter-working between circuit-switched and internet telephony",
	"summary": "",
	"abstract": "An optimized gateway selection process of the present invention is based on a universal mobility manager (UMM), a component for inter-technology location management. The UMM is capable of holding location information for diverse cellular networks, as well as for Internet telephony systems. For cellular networks, UMM acts as a traditional HLR; for an Internet telephony network, it acts as the entities that are responsible for user/terminal registration (registrar in SIP, gatekeeper in H.323) and address resolution (proxy server in SIP, gatekeeper in H.323). An optimal gateway selection is possible based on location related information provided by the UMM which had not previously been available. Utilizing the newly available information enables a gateway to be selected which may, for example, enable the circuit switched portion of a call to now be minimized.",
	"url": null,
	"owner": "Alcatel-Lucent USA Inc.",
	"publication_number": "07633896",
	"publication_date": "2009-12-15",
	"application_number": "10055333",
	"application_date": "2002-01-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Instructing management support software of a first software component to set up a communication channel between the first software component and a second software component",
	"summary": "",
	"abstract": "An apparatus in one example comprises a manager component that upon receipt of an indication of a need for a communication channel between a first software component and a second software component, instructs management support software of the first software component to set up the communication channel between the first software component and the second software component.",
	"url": null,
	"owner": "Alcatel-Lucent USA Inc.",
	"publication_number": "07627871",
	"publication_date": "2009-12-01",
	"application_number": "10868128",
	"application_date": "2004-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of handling overlapping notification requests in networks with open application programming interfaces",
	"summary": "",
	"abstract": "In the method of handling overlapping notification requests in a network with an open application programming interface, a response is received from a server to a notification request sent to the server based on a notification request entry in a plist. The notification request requests access to at least one object. Then, notification request entries in an rlist associated with the notification entry in the plist are identified, and the response is sent to an application associated with one of the identified notification request entries in the rlist. When a new notification request is received from an application, the new notification request is added to the rlist, and at least one of the plist and links between the notification request entries in the rlist and plist are altered. When a disable request requesting that a notification request be disabled is received from an application, at least one of the plist and links between the notification request entries in the plist and the rlist are altered.",
	"url": null,
	"owner": "Alcatel-Lucent USA Inc.",
	"publication_number": "07599986",
	"publication_date": "2009-10-06",
	"application_number": "10105393",
	"application_date": "2002-03-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software component initialization in an ordered sequence",
	"summary": "",
	"abstract": "A manager component of an apparatus in one example initializes a plurality of software components of a distributed software application, within one or more executables, in an ordered sequence based on one or more dependency relationships among the plurality of software components.",
	"url": null,
	"owner": "Alcatel-Lucent USA Inc.",
	"publication_number": "07509630",
	"publication_date": "2009-03-24",
	"application_number": "10867945",
	"application_date": "2004-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Decision-making system, method and computer program product",
	"summary": "",
	"abstract": "A system, method and computer program product are afforded for providing a collaborative decision platform adapted to run on a computer. Initially, an application capable of performing decision logic is executed. Information is then retrieved from a database in accordance with the decision logic. Information is also received from a user in accordance with the decision logic utilizing a user interface. The information is then processed utilizing the decision logic.",
	"url": null,
	"owner": "Aloft Media, LLC",
	"publication_number": "07596538",
	"publication_date": "2009-09-29",
	"application_number": "11768861",
	"application_date": "2007-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Decision-making system, method and computer program product",
	"summary": "",
	"abstract": "A system, method and computer program product are afforded for providing a collaborative decision platform adapted to run on a computer. Initially, an application capable of performing decision logic is executed. Information is then retrieved from a database in accordance with the decision logic. Information is also received from a user in accordance with the decision logic utilizing a user interface. The information is then processed utilizing the decision logic.",
	"url": null,
	"owner": "Aloft Media, LLC",
	"publication_number": "07499898",
	"publication_date": "2009-03-03",
	"application_number": "11828115",
	"application_date": "2007-07-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Decision-making system, method and computer program product",
	"summary": "",
	"abstract": "A system, method and computer program product are afforded for providing a collaborative decision platform adapted to run on a computer. Initially, an application capable of performing decision logic is executed. Information is then retrieved from a database in accordance with the decision logic. Information is also received from a user in accordance with the decision logic utilizing a user interface. The information is then processed utilizing the decision logic.",
	"url": null,
	"owner": "Aloft Media, LLC",
	"publication_number": "07478076",
	"publication_date": "2009-01-13",
	"application_number": "11768815",
	"application_date": "2007-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Decision-making system, method and computer program product",
	"summary": "",
	"abstract": "A system, method and computer program product are afforded for providing a collaborative decision platform adapted to run on a computer. Initially, an application capable of performing decision logic is executed. Information is then retrieved from a database in accordance with the decision logic. Information is also received from a user in accordance with the decision logic utilizing a user interface. The information is then processed utilizing the decision logic.",
	"url": null,
	"owner": "Aloft Media, LLC",
	"publication_number": "07593910",
	"publication_date": "2009-09-22",
	"application_number": "11768836",
	"application_date": "2007-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program product for a collaborative decision platform",
	"summary": "",
	"abstract": "A decision making system, method and computer program product are provided. Initially, a plurality of attributes is defined. Thereafter, first information regarding the attributes is received from a receiving business. Second information is then received regarding proposed products or services in terms of the attributes. Such second information is received from a supplying business. In use, a decision process is executed based on the first information and the second information.",
	"url": null,
	"owner": "Aloft Media, LLC",
	"publication_number": "07617169",
	"publication_date": "2009-11-10",
	"application_number": "11828129",
	"application_date": "2007-07-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hardware acceleration of functional factoring",
	"summary": "",
	"abstract": "A hardware accelerator factors functions during the compilation of a user design. The hardware accelerator includes cofactor units, each adapted to determine a cofactor of a function in response to a specified factorization and a set of input values. The factorization specifies the constant function inputs and varying function inputs. Each cofactor unit determines the cofactor of the function in response to a different constant value. The hardware accelerator operates all of the cofactor units simultaneously to determine some or all of the cofactors of a function for a factorization in parallel. Signature generators determine attributes of the cofactors. A signature analyzer uses these attributes to identify identical cofactors, constant cofactors, and inverse cofactors. The signature analyzer returns potentially optimal factorizations to compilation software applications for possible incorporation into user designs. The hardware accelerator may be implemented using a programmable device, such as the FPGA or other programmable device.",
	"url": null,
	"owner": "Altera Corporation",
	"publication_number": "07640528",
	"publication_date": "2009-12-29",
	"application_number": "11499514",
	"application_date": "2006-08-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for managing access to media files",
	"summary": "",
	"abstract": "A system and method for managing access rights of media files communicated over a network. In a preferred embodiment, the present invention allows a user to obtain rights to access media files of selected content, which may include a song, album, movie, etc. Once the user obtains rights to access media files of the selected content, information that identifies the user and information that describes the selected content is communicated to a plurality of content providers. By receiving information that identifies the user and information that describes the selected content, each content provider can verify independently that the user is authorized to access one or more files that contain the selected content. The user may then directly contact any one of many service providers to access media files that contain the selected content.",
	"url": null,
	"owner": "Amazon Technologies, Inc.",
	"publication_number": "07627530",
	"publication_date": "2009-12-01",
	"application_number": "10832090",
	"application_date": "2004-04-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for credential validation",
	"summary": "",
	"abstract": "A secure credential validation compares stored and received modified credentials, e.g., biometric credentials, such that the validating system does not have access to the unmodified credentials. A capture system and a credential validation system are operatively coupled to a network (e.g., the Internet). The credential validation system is configured to store a set of modified stored credentials associated with the principal, receive a set of modified received credentials, and perform a credential validation procedure to validate the modified received credentials, wherein the credential validation procedure performs a one-way consistency test to compare the modified stored credentials and the modified received credentials: The credential validation procedure employs one or more similarity measures, e.g., a weighted quorum of exact matches, a discrete N-ball (or u201cN-shellu201d) intersection, or a client-based algorithm with encryption.",
	"url": null,
	"owner": "American Express Travel Related Services Company, Inc.",
	"publication_number": "07571472",
	"publication_date": "2009-08-04",
	"application_number": "10331459",
	"application_date": "2002-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for authenticating a web page",
	"summary": "",
	"abstract": "A Web page may be authenticated by issuing a Web page request from a browser on a client computer to a Web server, receiving a signed Web page in response to the request, authenticating the signed Web page, and invoking at least one client module associated with the Web server when the authenticating is successful. The at least one client module is adapted for execution on the client computer.",
	"url": null,
	"owner": "American Express Travel Related Services Company, Inc.",
	"publication_number": "07565543",
	"publication_date": "2009-07-21",
	"application_number": "11088623",
	"application_date": "2005-03-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for facilitating transactions among consumers and providers of travel services",
	"summary": "",
	"abstract": "A system for facilitating transactions among consumers and providers of travel-related services includes a technology provider and a host in communication with an agent and a provider of travel-related services. The technology provider is configured for operating independently from any provider of travel-related services. The host is configured for receiving a request from the agent, retrieving one or more displays from the technology provider, presenting the displays to the agent, and facilitating a transaction among the consumer and the provider of travel-related services. A display comprises an information content such as available inventory from a predefined carrier within a predefined time period. The display may be configured for excluding content, for example, in accordance with a predefined editing criteria. The format may be configured for presenting information in accordance with one or more predefined ranking criteria, which may be a discriminatory criteria, such as an identity of a carrier.",
	"url": null,
	"owner": "American Express Travel Related Services Company, Inc.",
	"publication_number": "07539620",
	"publication_date": "2009-05-26",
	"application_number": "10611037",
	"application_date": "2003-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System providing desktop integration of patient information and document management",
	"summary": "",
	"abstract": "A desk top system patient information management system includes an integration interface for an existing healthcare system that provides access to a separate and existing document management system. The integration interface provides modifications (added controls) for a user interface of the healthcare system that allow a user to initiate access to the document management system. The controls include controls for making a query for a document such as a chart or patient notes and for modifying the document. The integration interface also includes objects (methods and data) that perform the access to the document management system based on the information of the user interface and provide the information requested to the interface for viewing and modification.",
	"url": null,
	"owner": "American Management Systems, Incorporated",
	"publication_number": "07590617",
	"publication_date": "2009-09-15",
	"application_number": "09366749",
	"application_date": "1999-08-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Audio feedback test",
	"summary": "",
	"abstract": "Methods and systems provide automated testing of computer facilitated audio input and output devices. A tone is converted from a digital to analog signal and is sent to a sound mixing device. At the sound mixing device, the analog tone is looped back through a recording line to an analog to digital converter. The recorded tone is converted from a time domain to a frequency domain using a Fast Fourier Transform (FFT) analysis. The frequency, and if desired, the intensity of the recorded tone is compared against the known frequency, and at the desired intensity of the played tone. If the recorded tone is the same as the played tone, the ability of the sound card to play the tone is designated as passing. The FFT analysis results also may be utilized to calculate a signal to noise ratio (SNR), a total harmonic distortion (THD) value, a total harmonic distortion plus noise (THD+N) and a DC-offset value. Each of these calculated values may be compared against pass/fail thresholds for the played tone.",
	"url": null,
	"owner": "American Megatrends, Inc.",
	"publication_number": "07593781",
	"publication_date": "2009-09-22",
	"application_number": "10771762",
	"application_date": "2004-02-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for the visual presentation of data mining models",
	"summary": "",
	"abstract": "A method for delivering presentations associated with data mining models. The method includes the steps of: a) storing the data mining models and the presentations in a repository in a data mining system; b) associating ones of the data mining models with ones of the presentations through references within ones of the presentations; c) receiving a request from a user for a presentation; d) processing the request to determine an appropriate presentation corresponding to the request; the request including a customer identification; the request including an event identification; and, e) delivering the appropriate presentation to the user.",
	"url": null,
	"owner": "Angoss Software Corporation",
	"publication_number": "07512623",
	"publication_date": "2009-03-31",
	"application_number": "10743324",
	"application_date": "2003-12-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Authentication of electronic data",
	"summary": "",
	"abstract": "Systems and techniques for transmitting electronic data by receiving, at a communications system host, electronic data transmitted from a sender and addressed to an intended recipient; authenticating the electronic data based on attributes of the electronic data and appending information to the electronic data indicating that the electronic data has been authenticated.",
	"url": null,
	"owner": "AOL LLC",
	"publication_number": "07571234",
	"publication_date": "2009-08-04",
	"application_number": "09867797",
	"application_date": "2001-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Gradual image display",
	"summary": "",
	"abstract": "Systems and techniques for displaying an image sent between subscribers of a communications system by receiving electronic data corresponding to the image; displaying a blurred view of the image; and gradually displaying a sharper version of the image in response to user input.",
	"url": null,
	"owner": "AOL LLC",
	"publication_number": "07546537",
	"publication_date": "2009-06-09",
	"application_number": "10780706",
	"application_date": "2004-02-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Identifying unauthorized communication systems based on their memory contents",
	"summary": "",
	"abstract": "An authorized client communication system seeking access to a host communication system may be identified by locating a memory segment within the client communication system that stores client software used to access the host computer system. The memory segment then is examined to determine whether the client software stored in the memory segment corresponds to client software for an official client communication, system. Communications from the client communication system are terminated when the client software in the memory segment is determined to diverge from software for an official client communication system.",
	"url": null,
	"owner": "AOL LLC",
	"publication_number": "07516496",
	"publication_date": "2009-04-07",
	"application_number": "11216027",
	"application_date": "2005-09-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing navigation and history information",
	"summary": "",
	"abstract": "History and navigation information in a computer application are managed by establishing a global context that can communicate with multiple resources, each of which resides in an associated local context. State information from one or more of the local contexts is communicated to the global context, and global navigation information (for example, defining a drop-down history list or back/forward button states) is generated based on the communicated state information. Using the global navigation information, a user of the computer application can move among previously visited resources in a global manner.",
	"url": null,
	"owner": "AOL LLC",
	"publication_number": "07617458",
	"publication_date": "2009-11-10",
	"application_number": "09582262",
	"application_date": "1998-12-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Restricting access to requested resources",
	"summary": "",
	"abstract": "Access to network information may be restricted based on a classification of the network information. When a request for network information is received, a classification of the network information is determined. The network information may be classified as static or dynamic. If the network information is classified as static, a rating of the content that corresponds to the network information is determined. If the network information is dynamic, the network information is accesses, and a rating of the content associated with the network information is generated. After determining a content rating, the content rating is compared to a user content setting of user making the request for the network information. Based on the comparison, it is determined if access to network information is approved. If approved, the content is retrieved and/or access is granted, otherwise, the access to the network information is restricted or blocked.",
	"url": null,
	"owner": "AOL LLC",
	"publication_number": "07636777",
	"publication_date": "2009-12-22",
	"application_number": "11674444",
	"application_date": "2007-02-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Searching content on web pages",
	"summary": "",
	"abstract": "Performing a search to identify web sites that relate to a search term based on text within the web sites includes receiving at least one search term that then is compared with electronic information within at least one electronic information store to determine whether matches exist. The electronic information within the at least one information store may include text and/or full text displayed by different web pages from different web sites. Results based on the matches that are determined to exist are displayed. The results include at least one website identifier. The search may be performed by a web host having members and may further include automatically scanning and storing the text of a website when the website is accessed by a member of the web host. The stored text may be compared against received search terms.",
	"url": null,
	"owner": "AOL LLC",
	"publication_number": "07558805",
	"publication_date": "2009-07-07",
	"application_number": "11364084",
	"application_date": "2006-03-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "State change alerts mechanism",
	"summary": "",
	"abstract": "A communications system including one or more alert gates and an alert controller. Each alert gate is configured to detect a different type of alert feed corresponding to a particular kind of alert. The alert controller is connected to the alert gates and operable to receive detected alerts from the alert gates and to deliver the detected alerts to a user of the communications system.",
	"url": null,
	"owner": "AOL LLC",
	"publication_number": "07624172",
	"publication_date": "2009-11-24",
	"application_number": "09624192",
	"application_date": "2000-07-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web page performance scoring",
	"summary": "",
	"abstract": "A browser-based tool is provided that loads a Webpage, accesses the document object model (DOM) of the page, collects information about the page structure and parses the page, determines through the use of heuristics such factors as how much text is found on the page and the like, produces statistical breakdown of the page, and calculates a score based on performance of the page. Key to the operation of the invention is the ability to observe operation of the Webpage as it actually loads in real time, scoring the page for several of various performance factors, and producing a combined score for the various factors.",
	"url": null,
	"owner": "AOL LLC",
	"publication_number": "07475067",
	"publication_date": "2009-01-06",
	"application_number": "10887956",
	"application_date": "2004-07-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Component installation tool",
	"summary": "",
	"abstract": "Installing computer software components on a client device for enabling connectivity to a host system by at least one of several different hardware devices typically includes receiving a connectivity component for enabling connectivity to a host system by at least one of several different hardware devices and detecting whether installation of the connectivity component is needed to enable connectivity between the client device and the host system. The connectivity component is typically installed on the client device when installation of the connectivity component is needed.",
	"url": null,
	"owner": "AOL LLC, a Delaware Limited Liability Company",
	"publication_number": "07526775",
	"publication_date": "2009-04-28",
	"application_number": "09855683",
	"application_date": "2001-05-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Passive personalization of buddy lists",
	"summary": "",
	"abstract": "Personalizing communications for a first communication platform includes accessing status information for communication sessions by a communication identity that leverage a first communication platform other than an instant messaging platform. A participant list associated with the communication identity and the first communication platform is passively configured to persistently reflect a list of participant identities from communication sessions in which the communication identity recently participated using the communication platform.",
	"url": null,
	"owner": "AOL LLC, a Delaware Limited Liability Company",
	"publication_number": "07512652",
	"publication_date": "2009-03-31",
	"application_number": "10184002",
	"application_date": "2002-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transferring files",
	"summary": "",
	"abstract": "Systems and techniques for transferring one or more files by connecting to a communications system host; sending, to a client connected to the communications system host, a request to transfer one or more files; when a client permits access to the one or more files, establishing a direct socket connection from the client and bypassing the communications system host; and initiating the transfer of the one or more files from the client over the direct socket connection.",
	"url": null,
	"owner": "AOL LLC, a Delaware Limited Liability Company",
	"publication_number": "07546337",
	"publication_date": "2009-06-09",
	"application_number": "09572953",
	"application_date": "2000-05-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic, dynamic user interface configuration",
	"summary": "",
	"abstract": "Markers that describe a user's actions are monitored in order to determine his or her level of proficiency with a user interface. A proficiency level is determined based on the markers. The proficiency level is adjusted periodically or in response to trigger events, to provide updated proficiency level information as the user becomes more experienced. One or more user interface features are automatically configured according to the detected proficiency level, so that the user is presented with an interface that is appropriate for his or her level of proficiency.",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07620894",
	"publication_date": "2009-11-17",
	"application_number": "10682645",
	"application_date": "2003-10-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Japanese virtual dictionary",
	"summary": "",
	"abstract": "Methods for converting a source character string to a target character string are described herein. In one aspect of the invention, an exemplary method includes receiving a first character string having the source character string, dividing the first character string into a plurality of sub-strings, converting the plurality of the sub-strings to second character strings through a dictionary, creating third character strings corresponding to the plurality of the sub-strings, analyzing the second and third character strings, constructing fourth character strings from the second and third character strings based on the analysis, creating a candidate list based on the fourth character strings, selecting the target character string from the candidate list and outputting the target character string. Other methods and apparatuses are also described.",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07630880",
	"publication_date": "2009-12-08",
	"application_number": "11598869",
	"application_date": "2006-11-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Layer for accessing user interface elements",
	"summary": "",
	"abstract": "A user-activatable dashboard contains any number of user interface elements, referred to herein as u201cwidgets,u201d for quick access by a user. In response to a command from a user, the dashboard is invoked and the widgets are shown on the screen. The user can activate the dashboard at any time. Once the dashboard has been activated, the user can interact with any or all of the widgets, and can configure the dashboard by adding, deleting, moving, or configuring individual widgets as desired. When the user wishes to return to the normal user interface he or she was working with, the user issues a command causing the dashboard to be dismissed. Once the dashboard has been dismissed, the previous user interface state is restored, allowing the user to resume normal interactions with the operating system.",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07490295",
	"publication_date": "2009-02-10",
	"application_number": "10877968",
	"application_date": "2004-06-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for acquiring and organizing ink information in pen-aware computer systems",
	"summary": "",
	"abstract": "An ink manager running at a computer system receives ink information entered at a pen-based input/display device and accumulates the ink information into ink strokes. The ink manager communicates with a handwriting recognition engine and includes an ink phrase termination engine that is configured to detect the occurrence of one or more ink phrase termination events by examining the ink information. Upon the occurrence of an ink phrase termination event, the ink manager notifies the handwriting recognition engine and organizes the preceding ink strokes into an ink phrase data structure. The ink manager may also pass the ink phrase to an application executing on the computer system that is associated with the ink information, and it, in response, may return a reference pointer and a recognition context to the ink manager. The reference pointer and recognition context are then appended to the ink phrase data structure. Utilizing the recognition context identified by the application, the handwriting recognition engine generates one or more hypotheses for the ink phrase, and provides them to the ink manager. The ink manager forwards the hypotheses together with the reference pointer to the application and may also append them to the ink phrase data structure.",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07564995",
	"publication_date": "2009-07-21",
	"application_number": "09520206",
	"application_date": "2000-03-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for searching metadata",
	"summary": "",
	"abstract": "Methods and apparatuses for searching metadata are described herein. In one embodiment, an example of a process for search metadata includes, but is not limited to, in response to a search query for metadata stored in one or more of metadata stores, the search query is partitioned into multiple search query segments. Thereafter, searches corresponding to the search query segments are performed, where each search is performed independently within the one or more metadata stores. Other methods and apparatuses are also described.",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07536383",
	"publication_date": "2009-05-19",
	"application_number": "11499267",
	"application_date": "2006-08-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for updating and synchronizing information between a client and server",
	"summary": "",
	"abstract": "The present invention provides a method and apparatus for integrating applets running on a client with the application logic for applications running on a server. The mechanism of the present invention provides two significant advantages over the prior art: the synchronization of state, and the recognition of user actions in the browser including the invocation of the appropriate application logic in the server. Instead of using the FORM element available in HTML, individual active applets are available and may be created that obtain user input (e.g. a checkbox, textbox, button, etc.). A hidden applet called the Applet Group Controller is created which handles communication between the applets on the browser and the application logic on the server. The Applet Group Controller maintains an association with each applet that maintains the keys and values of any parameters and variables for the applet. In a preferred embodiment, upon the invocation of an event, the association instructs an Action Coordinator to invoke an action. The Action Coordinator obtains and transmits a list of all of the keys and their values to the server. The server invokes the appropriate application logic and transmits the keys and their values (as updated during the execution of the application logic) back to the Action Coordinator. The Action Coordinator then pushes the updated values out to the applets (through their Associations) at which time the browser's display is updated with the new values.",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07529841",
	"publication_date": "2009-05-05",
	"application_number": "11230984",
	"application_date": "2005-09-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Remote access to layer and user interface elements",
	"summary": "",
	"abstract": "A user-activatable dashboard (also referred to as a unified interest layer) contains any number of user interface elements, referred to herein as u201cwidgets,u201d for quick access by a user. In response to a command from a user, the dashboard is invoked and the widgets are shown on the screen. The user can activate the dashboard at any time, causing the dashboard to temporarily replace the existing user interface display on the user's screen. Once the dashboard has been activated, the user can interact with any or all of the widgets, and can configure the dashboard by adding, deleting, moving, or configuring individual widgets as desired. When the user wishes to return to the normal user interface he or she was working with, the user issues a command causing the dashboard to be dismissed. Once the dashboard has been dismissed, the previous user interface state is restored, allowing the user to resume normal interactions with the operating system.",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07503010",
	"publication_date": "2009-03-10",
	"application_number": "11370418",
	"application_date": "2006-03-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "User interface element with auxiliary function",
	"summary": "",
	"abstract": "A user-activatable dashboard (also referred to as a unified interest layer) contains any number of user interface elements, referred to herein as u201cwidgets,u201d for quick access by a user. In response to a command from a user, the dashboard is invoked and the widgets are shown on the screen. The user can activate the dashboard at any time, causing the dashboard to temporarily replace the existing user interface display on the user's screen. Once the dashboard has been activated, the user can interact with any or all of the widgets, and can configure the dashboard by adding, deleting, moving, or configuring individual widgets as desired. When the user wishes to return to the normal user interface he or she was working with, the user issues a command causing the dashboard to be dismissed. Once the dashboard has been dismissed, the previous user interface state is restored, allowing the user to resume normal interactions with the operating system.",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07530026",
	"publication_date": "2009-05-05",
	"application_number": "11371306",
	"application_date": "2006-03-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Widget authoring and editing environment",
	"summary": "",
	"abstract": "An authoring environment for creating and/or editing user interface elements such as widgets used in a unified interest layer. The authoring environment facilitates creation of widgets that have a consistent appearance and mechanism, and allows third-party developers to easily create widgets that have a look and feel that is consistent with a predefined set of widgets.",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07546543",
	"publication_date": "2009-06-09",
	"application_number": "11145577",
	"application_date": "2005-06-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for developing, deploying, managing and monitoring a web application in a single environment",
	"summary": "",
	"abstract": "A system and method for developing, deploying, managing and monitoring a web application in a single environment is disclosed herein. The single environment is preferably an integrated development environment (u201cIDEu201d). The system and method preferably allows for deployment to a cloud provider, and preferably allows for use of Web resources from multiple cloud providers. One preferred IDE is the APTANAu00ae STUDIO IDE. An operator can use a user interface to access the integrated development environment and the cloud manager over the network, specifically the Internet.",
	"url": null,
	"owner": "Aptana, Inc.",
	"publication_number": "07596620",
	"publication_date": "2009-09-29",
	"application_number": "12264882",
	"application_date": "2008-11-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for managing integrated circuit designs",
	"summary": "",
	"abstract": "Apparatus and methods for integrated circuit (IC) design, including management of the configuration, design parameters, and functionality of a design in which custom instructions or other design elements may be controlled by the designer. In one exemplary embodiment, a computer program rendered in an object-oriented language implementing the aforementioned methods for designing user-customized digital processors is disclosed. Design iteration, component encapsulation, use of human-readable file formats, extensible dynamic GUIs and tool sets, and other features are employed to enhance the functionality and accessibility of the program. Components within the design environment comprise encapsulated objects which contain information relating to interfaces with other components in the design, hierarchy, and other facets of the design process.",
	"url": null,
	"owner": "ARC International, PLC",
	"publication_number": "07475000",
	"publication_date": "2009-01-06",
	"application_number": "10423745",
	"application_date": "2003-04-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for managing data in multiple bills of material over a network",
	"summary": "",
	"abstract": "A method of storing and managing BOMs of different owners in the same environment. One or more BOMs have an owner. An owner's BOM includes may include confidential information such that unrestricted access to the confidential information is limited to the owner and any designates of the owner. In particular, one embodiment of the invention and maintains a list of items that include the items in the BOMs of the different owners. A unique identifier is used for each item of the list. The item identifiers thus form one namespace. BOMs of different owners share data including confidential data within the same namespace.",
	"url": null,
	"owner": "Arena Solutions, Inc.",
	"publication_number": "07558793",
	"publication_date": "2009-07-07",
	"application_number": "10280123",
	"application_date": "2002-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method of analyzing interpreted programs",
	"summary": "",
	"abstract": "A method for analyzing the performance of a program when running in an interpreted environment. An interpreter is a program that translates and executes another program. To analyze a binary in an interpreted environment, a mechanism is used to indicate points in the program at source, intermediate, or binary showing where information about the system is to be tracked/profiled/analyzed. Once these analysis points are determined, triggers are created in a separate file or inserted via program instrumentation into the binary to indicate to the interpreter when the analysis triggers need to be processed. The system being analyzed is then run via an interpreter. When one of these triggers occurs during execution, the interpreter calls analysis code passing it the appropriate information so that it may track statistics, metrics, and information about the program corresponding to the trigger.",
	"url": null,
	"owner": "ARM Limited",
	"publication_number": "07475394",
	"publication_date": "2009-01-06",
	"application_number": "10729100",
	"application_date": "2003-12-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for dynamic management of business processes",
	"summary": "",
	"abstract": "A computerized system is provided for modeling a business process, the computerized system comprising a web server and a database server. The web server implements a user interface to the system. The database server is in operable communication with the web server and comprises a data architecture representing the business process. The data architecture comprises an entity model representing an entity responsible for implementing at least a portion of the business process, a transaction model comprising at least one step defining a business process, a list model representing at least one step in the transaction, the list model comprising a list of at least one entity associated with the transaction; and a task model associated with the list, the task model defining at least one task associated with the at least one step in the transaction.",
	"url": null,
	"owner": "Arrayworks Inc.",
	"publication_number": "07516137",
	"publication_date": "2009-04-07",
	"application_number": "09814315",
	"application_date": "2001-03-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Paradigm in multimedia services creation methodology, and new service creation and service execution environments",
	"summary": "",
	"abstract": "The present invention discloses a new paradigm in Multimedia Services Creation Methodology, and new Service Creation and Service Execution Environments, based on this methodology. A service designer can access the Service Creation Environment via a Web based Graphical User Interface (GUI), to design new service in an automated way. The design process includes creation of the Service Logic Script (SLS), and associated databases that are used for storage of service and subscriber related data. The service developer (user) assembles Language Graphical Objects (LGO) into Service Logic Script. LGOs are part of a new graphical language that has been developed to meet multimedia service creation needs. They represent service control and call control primitive functions that have to be performed, in order to provide a multimedia service to service subscribers.",
	"url": null,
	"owner": "AT & T Corp.",
	"publication_number": "07509648",
	"publication_date": "2009-03-24",
	"application_number": "09514149",
	"application_date": "2000-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Device emulation for testing data network configurations",
	"summary": "",
	"abstract": "A system and method for providing a virtual implementation of a large scale network of devices. The invention emulates an entire network of network devices using the configuration information obtained from the actual devices to meet the needs of testing configuration changes across the entire network.",
	"url": null,
	"owner": "AT&T Corp.",
	"publication_number": "07555421",
	"publication_date": "2009-06-30",
	"application_number": "11263063",
	"application_date": "2005-10-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "API tool-set for providing services through a residential communication gateway",
	"summary": "",
	"abstract": "Different communications devices, different communications networks, and/or different users are used to generate, enable, and/or manage an API tool set for providing services through a residential communications gateway. The actual physical location of the service and the manner in which it operates are transparent to the user.",
	"url": null,
	"owner": "AT&T Intellectual Property I, L.P.",
	"publication_number": "07480724",
	"publication_date": "2009-01-20",
	"application_number": "10918494",
	"application_date": "2004-08-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods, systems, and computer program products for modifying bandwidth and/or quality of service in a core network",
	"summary": "",
	"abstract": "Bandwidth and/or Quality of Service (QoS) may be modified in a Regional/Access Network (RAN) that includes a core network, the RAN facilitating differentiated end-to-end data transport between an enterprise, a Network Service Provider (NSP), and/or an Application Service Provider (ASP) and a customer Premises Network (CPN). Application Programming Interface (API) calls are used at the enterprise, NSP, and/or the ASP to communicate with the RAN to query a resource allocation in the core network that is assigned to the enterprise, NSP, and/or the ASP. API calls are also used at the enterprise, NSP, and/or the ASP to communicate with the RAN to modify the bandwidth and/or the QoS of the resource allocation in the core network that is assigned to the enterprise, NSP, and/or the ASP.",
	"url": null,
	"owner": "AT&T Intellectual Property I, L.P.",
	"publication_number": "07545788",
	"publication_date": "2009-06-09",
	"application_number": "10922605",
	"application_date": "2004-08-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Reusable online survey engine",
	"summary": "",
	"abstract": "A computer system, method, and computer-readable medium for conducting an online survey including one or more questions are provided. A survey database contains the survey questions and data identifying the type of input field that should be provided for responding to each question. When a request is received for a network resource referencing the online survey, the contents of the survey database are utilized to generate the online survey. The survey questions are maintained in the survey database separately from the application code for displaying the survey questions. Only the questions in the survey database need to be modified to provide a new survey. The application code for generating the survey is generic to all surveys and does not need to be modified.",
	"url": null,
	"owner": "AT&T Intellectual Property I, L.P.",
	"publication_number": "07599956",
	"publication_date": "2009-10-06",
	"application_number": "11637660",
	"application_date": "2006-12-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing a backup-restore solution for active-standby service management systems",
	"summary": "",
	"abstract": "The preferred embodiments described herein include a system and method for providing a backup-restore solution for active-standby service management systems. In one embodiment, a telecommunication system is disclosed having first and second service management systems (SMS), a storage device shared by the first and second SMSs and circuitry operative to provide backup/restore functionality. This provides system redundancy in that the second SMS can perform the same functions as the first SMS in the event that the first SMS is unavailable due to, for example, system failures, a scheduled maintenance, or an upgrade process. Other embodiments are provided, and each of the embodiments described herein can be used alone or in combination with one another.",
	"url": null,
	"owner": "AT&T Intellectual Property I, L.P.",
	"publication_number": "07627099",
	"publication_date": "2009-12-01",
	"application_number": "10961502",
	"application_date": "2004-10-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method of service product offer management",
	"summary": "",
	"abstract": "The disclosure is generally directed to a system and method of managing and deploying Internet protocol television (IPTV) services. The method includes a service product offer management and deployment system. The method further includes a service product ordering subsystem to receive and process a service product order in response to service product offer. The service product order identifies a particular communication service subscriber, a service area, a service control group, a service product attribute, a facility deployment component, and a set of permitted end user device types. The method also includes a service delivery platform subsystem coupled to the service product ordering subsystem. Further, the method includes an Internet protocol television deployment subsystem coupled to the service delivery platform. The Internet protocol television deployment subsystem includes a plurality of video content packages.",
	"url": null,
	"owner": "AT&T Intellectual Property I, L.P.",
	"publication_number": "07627501",
	"publication_date": "2009-12-01",
	"application_number": "11264815",
	"application_date": "2005-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for redirecting an electronic content request to an alternate content transport mechanism or storage site",
	"summary": "",
	"abstract": "A method and system are provided for redirecting an electronic content request to an alternate content transport mechanism. Electronic content received from a first transport mechanism, such as a satellite broadcast system, is transmitted to and stored at an end-user content cache. If the user subsequently requests content from an alternate transport mechanism, such as the Internet, a transport proxy server intercepts the request. The transport proxy server compares the URL entered by the user with a database of URLs associated with web site content that has been transmitted to and stored at the user's local content cache via the first transport mechanism. If the content requested by the user is presently stored on the user's local content cache, the user's request is redirected to the device or access application for the first transport mechanism which then retrieves and delivers the requested content from the local storage cache. Needless connection to the Internet web site to obtain the content via the second transport mechanism is avoided.",
	"url": null,
	"owner": "AT&T Intellectual Property I, LP",
	"publication_number": "07558837",
	"publication_date": "2009-07-07",
	"application_number": "10172244",
	"application_date": "2002-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Call hold with reminder and information push",
	"summary": "",
	"abstract": "A broadband communication system including an Internet Protocol Telephony Network and public switched telephone network, including apparatus and methods for placing a call on hold in a way that significantly reduces the amount of network bandwidth utilized by the call while the call is on hold. When a call is placed on hold, embodiments of the architecture of the telephony network of the present invention allows the network to essentially u201cforgetu201d about the call placed on hold. In other words, a call that is on hold may require very little, or even zero, bandwidth within the telephony network. Accordingly, the total necessary bandwidth capacity of the telephony network may be smaller than it would be if calls on hold were to consume precious network bandwidth as is found in existing telephony systems.",
	"url": null,
	"owner": "AT&T Intellectual Property II, L.P.",
	"publication_number": "07558251",
	"publication_date": "2009-07-07",
	"application_number": "10940444",
	"application_date": "2004-09-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for embedded integrated end-to-end testing",
	"summary": "",
	"abstract": "A method and system for automated testing of a system such as a billing module in a telecommunication system is disclosed. In a first embodiment, test APIs, scenarios and configuration information are embedded into the module itself in a way such that, when testing is desired, tests may be conducted without any need for a dedicated test environment. Tests can be run from within the module itself, thereby eliminating the risk, expense and time required to use external testing systems and data to test the module. In another embodiment, operational data such as live operational orders are wrapped in test headers and are used as input data for testing purposes within the billing module. In this embodiment, test APIs may be embedded into all modules of an operational support system so that complete system end-to-end testing is possible without the use of dedicated external test equipment and processes.",
	"url": null,
	"owner": "AT&T Intellectual Property II, L.P.",
	"publication_number": "07484145",
	"publication_date": "2009-01-27",
	"application_number": "11233540",
	"application_date": "2005-09-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Personal control of address assignment and greeting options for multiple BRG ports",
	"summary": "",
	"abstract": "A method and apparatus for providing multiple telephone lines using a single directory number. A method and apparatus for associating multiple directory numbers with multiple telephone lines. A broadband residential gateway (BRG) is a user interface to a broadband communication system providing packetized telephone service and other media services. The BRG has multiple ports, and each port is connected to one or more telephones. The multiple ports may be mapped to a single directory number, or the multiple ports may be mapped to multiple directory numbers. The BRG can provide greeting and message features. A greeting may instruct a caller to select a port which is associated with a party the caller is attempting to reach. Also, a message, played after the greeting, may further instruct the caller.",
	"url": null,
	"owner": "AT&T Intellectual Property II, L.P.",
	"publication_number": "07564839",
	"publication_date": "2009-07-21",
	"application_number": "11649054",
	"application_date": "2007-01-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and storage medium for providing automated call acknowledgement services",
	"summary": "",
	"abstract": "Embodiments of the invention relate to a method, system, and storage medium for providing automated call acknowledgement services over a network. The method includes receiving a data request from a call-receiving device to acknowledge an incoming call from a calling device. The data request includes a phone number for the call-receiving device, a phone number or text address for the calling device, a message type, and a voice/text indicator selection. The method further includes retrieving a pre-defined acknowledgement message from a database based upon the message type and sending the pre-defined acknowledgement message to the calling device in lieu of answering the incoming call.",
	"url": null,
	"owner": "AT&T Intellectual Property, I, L.P.",
	"publication_number": "07587039",
	"publication_date": "2009-09-08",
	"application_number": "10666512",
	"application_date": "2003-09-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "High bandwidth delivery and internet access for airborne passengers",
	"summary": "",
	"abstract": "A method and a communications system in which a request for data transmitted by an airborne transmitter over a low-bandwidth air-to-ground communication system uplink and received by a ground-based receiver. The requested data is then transmitted over a high-bandwidth communication system downlink, such as a DBS satellite system downlink, preferably using an MPEG-2 compression technique, and received by an airborne receiver located on the same aircraft as the airborne transmitter. The received request for data is transmitted to a data network that contains the requested data, such as the Internet or a private data network, using circuit-switched techniques. According to the invention, the requested data includes one of video information, audio information and textual information.",
	"url": null,
	"owner": "AT&T Mobility II LLC",
	"publication_number": "RE041023",
	"publication_date": "2009-12-01",
	"application_number": "10389010",
	"application_date": "2003-03-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for tracking and playing back errors in a communications network",
	"summary": "",
	"abstract": "In accordance with the invention, a Logging Administration Maintenance and Billing Entity (LAMB) is interfaced to a network transport bus for logging network traffic, for error tracking, error replay, and billing functions. In the exemplary embodiment, the LAMB records transactions from a subscriber configuration interface (SCI). Information about SCI transactions may include, for example, time, date, originator information, transaction ID, destination information, message information, SCI functions accessed by the originator, errors, and any other function or process performed by the SCI.",
	"url": null,
	"owner": "AT&T Mobility II LLC",
	"publication_number": "07549096",
	"publication_date": "2009-06-16",
	"application_number": "10299549",
	"application_date": "2002-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for translation and communication of messaging protocols into a common protocol",
	"summary": "",
	"abstract": "An adapter for passing messages in a telecommunications infrastructure from a first device to a second device. The adapter comprises a messaging interface, a processor, and a bus interface. The messaging interface is in communication with the first device and is operable to receive a received message in a first messaging format from the first device. The processor is coupled to the messaging interface and is operable to receive the received message from the messaging interface and translate the received message into a common message in a common format. The bus interface is coupled to the processor and is operable to receive the common message from the processor and transmit the common message to the second device through a bus.",
	"url": null,
	"owner": "AT&T Mobility II LLC",
	"publication_number": "07617328",
	"publication_date": "2009-11-10",
	"application_number": "10299550",
	"application_date": "2002-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and systems for providing location-based services within a wireless network",
	"summary": "",
	"abstract": "A system for providing wireless telecommunications services to mobile devices includes structure and functionality for location-based services, and includes both server and client/mobile device apparatuses. One apparatus includes a data store storing at least a first record associated with a first wireless device or a second record associated with a second wireless device. A computer is coupled to the data store and is configured to receive a request from the first wireless device to obtain location information associated with the second wireless device. The computer is configured to receive a change location privileges request, and to update the first or second records in the data store based on the received change request. Other apparatuses provide additional structures and functions.",
	"url": null,
	"owner": "AT&T Mobility II, LLC",
	"publication_number": "07532900",
	"publication_date": "2009-05-12",
	"application_number": "11766304",
	"application_date": "2007-06-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for preventing unauthorized access to sensitive data and a method thereof",
	"summary": "",
	"abstract": "A method and system for prevention of unauthorized access to multimedia data are disclosed herein. A tamper-resistant system having a software driver, a peripheral device, and a system memory is used to encrypt sensitive routines used by the software driver. The software driver is used to interface between one component of the system, such as a processor, and a peripheral device, such as a graphics chip. The driver incorporates one or more sensitive routines, that if divulged, could possibly allow an unauthorized party access to data processed by the software driver. Accordingly, in one embodiment, the sensitive routines are stored in an encrypted format with the driver. To access a sensitive routine, the driver submits the associated encrypted routine to the peripheral device, as well as a decryption method, if desired, where it is decrypted and stored in a plaintext format in a location, such as system memory, accessible to both the driver and the peripheral device. The driver can then use the plaintext routine to process the data. When finished processing the data, the plaintext routine can be re-encrypted using one or more of a variety of encryption methods and stored with the driver. Any remaining copies of the plaintext routine can be removed from the system. By encrypting the sensitive routines at all times other than when in immediate use, the system can effectively prevent an unauthorized party from accessing data based on knowledge about the sensitive routine. In addition, the use of the hardware of the peripheral device to encrypt/decrypt the sensitive routines provides an additional barrier to an unauthorized party.",
	"url": null,
	"owner": "ATI Technologies, Inc.",
	"publication_number": "07594265",
	"publication_date": "2009-09-22",
	"application_number": "09992823",
	"application_date": "2001-11-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for identifying and categorizing messages extracted from archived message stores",
	"summary": "",
	"abstract": "A system and method for identifying messages in a message store is provided. At least part of metadata associated with and at least part of content contained in each of a plurality of messages in a message store are encoded by generating a metadata sequence and a content sequence for each message. The messages are grouped into sets by similar metadata sequences and similar content sequences. The messages in each set are compared. Each such message not matching any other such message in the set is marked as a unique message. Each such message matching at least one other such message in the set is marked as an exact duplicate message. Each such message including a subset of at least one other such message in the set is marked as a near duplicate message.",
	"url": null,
	"owner": "Attenex Corporation",
	"publication_number": "07577656",
	"publication_date": "2009-08-18",
	"application_number": "11410370",
	"application_date": "2006-04-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for determining and representing one or more potential physical locations of a newly detected wireless network device",
	"summary": "",
	"abstract": "A previously unknown wireless device, which may be either an access point or a station, is detected by receipt of transmissions from that device at one or more access points that are currently operating within a managed wireless network. A graphic representation of the newly detected device is displayed in a region of a user interface external to a region containing a representation of the physical environment of the managed wireless network. A user selects a number of known access points from which an estimated distance to the newly detected device is to be determined and represented. A representation is generated of an estimated distance from each one of the selected number of access points, such as those access points that are estimated to be physically closest to the newly detected device, for example on the basis of signal strength with regard to transmissions from the newly detected device received at the known access points. The distance representations from the known access points may be provided using substantially circular u201cdistance ringsu201d, displayed in the region of the user interface containing a representation of the physical environment in which the wireless network is deployed. The distance rings enable a user to may observe one or more distance ring intersections indicating one or more potential positions within the wireless network's physical environment at which the newly detected device may be located.",
	"url": null,
	"owner": "Autocell Laboratories, Inc.",
	"publication_number": "07636576",
	"publication_date": "2009-12-22",
	"application_number": "11279317",
	"application_date": "2006-04-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Detection of component hole gaps for weld beads in a computer-implemented solid modeling system",
	"summary": "",
	"abstract": "A computer-implemented solid modeling system that determines whether a gap exists between components based on internal loops of the components, and then generates a fillet or groove weld bead that fills the gap between the components. The gap is a component hole gap between components where one or more internal loops of a first component fully or partially encircles a second component, and the valid internal loops identify whether the second component passes through the first component through the component hole gap.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "07539603",
	"publication_date": "2009-05-26",
	"application_number": "11215424",
	"application_date": "2005-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Object property data referencing location property",
	"summary": "",
	"abstract": "A method, apparatus, and article of manufacture provide the ability to specify and maintain a u201clocationu201d for an object in a drawing program. A drawing is obtained in a drawing program. One or more objects are obtained in the drawing program. In this regard, one or more of the is a collection of one or more graphical elements. For at least one of the objects, an automatic location property is defined. A value for the location property is obtained from property data of another object, area, or space where the object is u201clocatedu201d (which is based on the location property).",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "07589744",
	"publication_date": "2009-09-15",
	"application_number": "10657441",
	"application_date": "2003-09-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatuses to generate links from content in an active window",
	"summary": "",
	"abstract": "Various methods and apparatuses are described to generate a list of one or more links related to the content in an active window without a user having to request the query. The text from content in an active window may be analyzed. A query may be executed on the content in the active window without a user having to request the query. A first icon that represents a category of links related to the content may be embedded in an application operating in the active window. A list of links related to the content in the active window may be generated.",
	"url": null,
	"owner": "Autonomy Corporation Ltd.",
	"publication_number": "07512900",
	"publication_date": "2009-03-31",
	"application_number": "10901585",
	"application_date": "2004-07-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Informing caller of callee activity mode",
	"summary": "",
	"abstract": "A system and method provide callee activity mode information to a caller (including a potential caller). Thus the caller can find out the current callee activity mode, and the callee's availability to receive telephone calls. Callees can configure the system and method to provide different types of information depending on various factors including caller identity. The invention provides functionality for displaying callee activity mode information after a call is attempted, or before it is attempted, or both.",
	"url": null,
	"owner": "Avaya Inc.",
	"publication_number": "07542558",
	"publication_date": "2009-06-02",
	"application_number": "11060085",
	"application_date": "2005-02-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for low overhead network protocol performance assessment",
	"summary": "",
	"abstract": "A method and apparatus for testing network performance are provided. In data provided by an application on a first host for transport or communication to an application associated with a second host according to a first data transport protocol is intercepted at the first host and wrapped or encapsulated in a test data packet formatted according to a second data transport protocol. The test data packet formatted according to the second data transport protocol includes, in addition to data comprising all or a portion of the original data packet, instrumentation information. The test data packet is then delivered to the second host, which unpacks the original data packet and the instrumentation information. A response packet containing instrumentation information may be sent from the second host to the first host to provide roundtrip performance metrics.",
	"url": null,
	"owner": "Avaya Inc.",
	"publication_number": "07573829",
	"publication_date": "2009-08-11",
	"application_number": "11224797",
	"application_date": "2005-09-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method by which call centers can vector inbound TTY calls automatically to TTY-enabled resources",
	"summary": "",
	"abstract": "The present invention is directed to a contact processing system that includes:nn",
	"url": null,
	"owner": "Avaya Inc.",
	"publication_number": "07567653",
	"publication_date": "2009-07-28",
	"application_number": "11087290",
	"application_date": "2005-03-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for network traffic security",
	"summary": "",
	"abstract": "The present invention is directed to methods of and systems for adaptive networking that monitors a network resource of a network. The method monitors an application performance. The method categorizes a first subset of traffic of the network. The categories for the first subset include trusted, known to be bad, and suspect. The method determines an action for a second subset of traffic based on the category for the first subset of traffic. Some embodiments provide a system for adaptive networking that includes a first device and traffic that has a first subset and a second subset. The system also includes a first resource and a second resource for the transmission of the traffic. The first device receives the traffic and categorizes the traffic into the first and second subsets. The first device assigns the first subset to the first resource. Some embodiments provide a network device that includes an input for receiving incoming traffic, an output for sending outgoing traffic, a categorization module that categorizes incoming traffic, and a resource assignment module that assigns the categorized traffic for a particular resource. A traffic category for the device includes suspect traffic.",
	"url": null,
	"owner": "Avaya Inc.",
	"publication_number": "07596811",
	"publication_date": "2009-09-29",
	"application_number": "11223236",
	"application_date": "2005-09-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for controlling network access",
	"summary": "",
	"abstract": "A system for controlling network access to products. The system includes a security appliance connected to a product under operational control of a first entity, a product connection platform and a user terminal under operational control of a second entity, the product connection platform being accessed by the user terminal, and a trust relationship established between the first entity and the second entity based on predetermined criteria between the first entity and the second entity, the trust relationship being represented by a certificate or public/private key exchange. Authentication of access by a user of the user terminal of the second entity to the product of the first entity is deferred to the product connection platform of the second entity based on the predetermined criteria of the trust relationship, whereupon if authentication is granted, the user is provided access to the product.",
	"url": null,
	"owner": "Avaya Inc.",
	"publication_number": "07587588",
	"publication_date": "2009-09-08",
	"application_number": "10915330",
	"application_date": "2004-08-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Graphical user interface for a media management system for communicating quality, source and accessibility information for media data and media objects",
	"summary": "",
	"abstract": "A media management system communicates to a user the availability of media data at different qualities (such as compression quality or resolution), or from different channels, that originated from one or more sources. Given a selection of media objects, whether a set of media files, a sequence of clips or other collection of objects, the corresponding sources are identified. Media objects originating from or related to each of these sources are identified. A display is generated indicating, for each channel from the source, at each quality of data originating from that source, the media objects related to the source. Each media data file originating from that source is represented according to its channel and quality, as a time span corresponding to the time span of the source from which the data originated. Logged, but not captured, media data, and other media objects, also may be represented in the display. As a result, such a graphical interface may provides a two dimensional representation of either media data of various qualities in context of the sources from which they originated, or media objects in the context of the sources to which they are related, or both.",
	"url": null,
	"owner": "Avid Technology, Inc.",
	"publication_number": "07562099",
	"publication_date": "2009-07-14",
	"application_number": "11223562",
	"application_date": "2005-09-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Proxy method and system for secure wireless administration of managed entities",
	"summary": "",
	"abstract": "A method, system and apparatus are described for avoiding the use of a web-server or generic security when providing network administration services remotely to managed entities using wireless technology. Instead a true Proxy device, not operating as a web-server, is used to pre-process all command traffic from wireless input devices (WID). The intervention between the WID and the managed entities of the Proxy isolating the managed entities from the WID, enhanced by encoding using a novel messaging protocol, further enhanced by a novel security model based on multiple pre-shared keys and algorithms together with identifiers and passwords that are not transmitted, achieves several bandwidth and security advantages including the ability to deliver TELNET services across the Internet and behind a firewall.",
	"url": null,
	"owner": "Avocent Huntsville Corporation",
	"publication_number": "07577255",
	"publication_date": "2009-08-18",
	"application_number": "11445244",
	"application_date": "2006-06-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for allocating resources of a core space among a plurality of core virtual machines",
	"summary": "",
	"abstract": "A technique for executing a segmented virtual machine (VM) is disclosed. A plurality of core VM's is implemented in a plurality of core spaces. Each core VM is associated with one of a plurality of shell VM's. Resources of the core spaces are allocated among the core VM's.",
	"url": null,
	"owner": "Azul Systems, Inc.",
	"publication_number": "07620953",
	"publication_date": "2009-11-17",
	"application_number": "10959407",
	"application_date": "2004-10-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Security policies in trusted operating system",
	"summary": "",
	"abstract": "A trusted computer system that offers Linuxu00ae compatibility and supports contemporary hardware speeds. It is designed to require no porting of common applications which run on Linux, to be easy to develop for, and to allow the use of a wide variety of modern development tools. The system is further designed to meet or exceed the Common Criteria EAL-5 or higher rating through incorporation of required security features, as well as a very high level of assurance for handling data at a wide range of sensitivity (e.g., classification) levels in a wide range of operational environments. This is achieved through the implementation of a well-layered operating system which has been designed from the ground up to enforce security, but which also supports Linux operating system functions and methods.",
	"url": null,
	"owner": "BAE Systems Enterprise Systems Incorporated",
	"publication_number": "07591003",
	"publication_date": "2009-09-15",
	"application_number": "11512174",
	"application_date": "2006-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Object-oriented component and framework architecture for signal processing",
	"summary": "",
	"abstract": "A reconfigurable distributed signal processing system uses an object-oriented component-framework architecture in which the system permits large-scale software reuse. This is accomplished by the use of a framework and a number of reusable, reconfigurable software components that are hardware independent.",
	"url": null,
	"owner": "BAE Systems Information and Electronic Systems Integration Inc.",
	"publication_number": "07559056",
	"publication_date": "2009-07-07",
	"application_number": "11063951",
	"application_date": "2005-02-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data security verification for data transfers between security levels in trusted operating system",
	"summary": "",
	"abstract": "A trusted computer system that offers Linuxu00ae compatibility and supports contemporary hardware speeds. It is designed to require no porting of common applications which run on Linux, to be easy to develop for, and to allow the use of a wide variety of modern development tools. The system is further designed to meet or exceed the Common Criteria EAL-5 or higher rating through incorporation of required security features, as well as a very high level of assurance for handling data at a wide range of sensitivity (e.g., classification) levels in a wide range of operational environments. This is achieved through the implementation of a well-layered operating system which has been designed from the ground up to enforce security, but which also supports Linux operating system functions and methods.",
	"url": null,
	"owner": "BAE Systems Information Technology Inc.",
	"publication_number": "07631342",
	"publication_date": "2009-12-08",
	"application_number": "11512175",
	"application_date": "2006-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Trusted operating system with emulation and process isolation",
	"summary": "",
	"abstract": "A trusted computer system that offers Linuxu00ae compatibility and supports contemporary hardware speeds. It is designed to require no porting of common applications which run on Linux, to be easy to develop for, and to allow the use of a wide variety of modern development tools. The system is further designed to meet or exceed the Common Criteria EAL-5 or higher rating through incorporation of required security features, as well as a very high level of assurance for handling data at a wide range of sensitivity (e.g., classification) levels in a wide range of operational environments. This is achieved through the implementation of a well-layered operating system which has been designed from the ground up to enforce security, but which also supports Linux operating system functions and methods.",
	"url": null,
	"owner": "BAE Systems Information Technology Inc.",
	"publication_number": "07549165",
	"publication_date": "2009-06-16",
	"application_number": "11487404",
	"application_date": "2006-07-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for lightweight loading for managing content",
	"summary": "",
	"abstract": "In accordance with embodiments, there are provided mechanisms and methods for providing lightweight loading for managing content in federated content repositories. These mechanisms and methods for providing lightweight loading for managing content in federated content repositories can enable embodiments to provide subset(s) of content determined to satisfy the request from one or more content repositories integrated into a VCR. The ability of embodiments to provide subset(s) of content determined to satisfy the request can enable displaying content responsive to a request in a format appropriate to the requestor's request.",
	"url": null,
	"owner": "BAE Systems, Inc.",
	"publication_number": "07483893",
	"publication_date": "2009-01-27",
	"application_number": "11499467",
	"application_date": "2006-08-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Image processing system",
	"summary": "",
	"abstract": "A system and method for image processing including providing access to image information, such as document images and image indices, and providing various functions pertaining to the image information is provided. The system and method can facilitate access to financial document images in a banking environment. The system and method can be used by, among others, banking institution personnel to view and update financial document image information. The system and method can be used to perform image processing from disparate image information repositories of any number of kinds of image information, including images of checks, trust documents, wills, share certificates, loan document, powers of attorney, mortgage documents, insurance policies, signature cards, fingerprints and customer photos. The system and method of the present invention may be applied to any industry including without limitation banking, insurance, legal, and financial industries.",
	"url": null,
	"owner": "Bank of America Corporation",
	"publication_number": "07636499",
	"publication_date": "2009-12-22",
	"application_number": "11843757",
	"application_date": "2007-08-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Image processing system",
	"summary": "",
	"abstract": "A system and method for image processing including providing access to image information, such as document images and image indices, and providing various functions pertaining to the image information is provided. The system and method can facilitate access to financial document images in a banking environment. The system and method can be used by, among others, banking institution personnel to view and update financial document image information. The system and method can be used to perform image processing from disparate image information repositories of any number of kinds of image information, including images of checks, trust documents, wills, share certificates, loan document, powers of attorney, mortgage documents, insurance policies, signature cards, fingerprints and customer photos. The system and method of the present invention may be applied to any industry including without limitation banking, insurance, legal, and financial industries.",
	"url": null,
	"owner": "Bank of America Corporation",
	"publication_number": "07636500",
	"publication_date": "2009-12-22",
	"application_number": "11860813",
	"application_date": "2007-09-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Linguistic processing platform, architecture and methods",
	"summary": "",
	"abstract": "A system and method for natural language processing comprises a blackboard data structure for providing a shared knowledge repository over which a collection of natural language agents can execute processes on the processable data form, each agent being capable of providing a processing resource usable for serving requests to execute a natural language process on the processable data form, and determining, based on their respective capabilities and examination of the blackboard, what requests for processing they can best serve; and a dispatcher for coordinating the work of registered agents, maintaining a high-level description of tasks to be completed to provide a solution to a given natural language engineering problem, and determining the registered agents that best provide a solution to the given natural language engineering problem.",
	"url": null,
	"owner": "Basis Technology Corporation",
	"publication_number": "07562009",
	"publication_date": "2009-07-14",
	"application_number": "11387107",
	"application_date": "2006-03-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Autonomous navigation system and method",
	"summary": "",
	"abstract": "A robot platform includes perceptors, locomotors, and a system controller, which executes instructions for autonomously navigating a robot. The instructions repeat, on each iteration through an event timing loop, the acts of defining an event horizon based on the robot's current velocity, detecting a range to obstacles around the robot, testing for an event horizon intrusion by determining if any range to the obstacles is within the event horizon, and adjusting rotational and translational velocity of the robot accordingly. If the event horizon intrusion occurs, rotational velocity is modified by a proportion of the current rotational velocity reduced by a proportion of the range to the nearest obstacle and translational velocity is modified by a proportion of the range to the nearest obstacle. If no event horizon intrusion occurs, translational velocity is set as a ratio of a speed factor relative to a maximum speed.",
	"url": null,
	"owner": "Battelle Energy Alliance, LLC",
	"publication_number": "07587260",
	"publication_date": "2009-09-08",
	"application_number": "11428637",
	"application_date": "2006-07-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Occupancy change detection system and method",
	"summary": "",
	"abstract": "A robot platform includes perceptors, locomotors, and a system controller. The system controller executes instructions for producing an occupancy grid map of an environment around the robot, scanning the environment to generate a current obstacle map relative to a current robot position, and converting the current obstacle map to a current occupancy grid map. The instructions also include processing each grid cell in the occupancy grid map. Within the processing of each grid cell, the instructions include comparing each grid cell in the occupancy grid map to a corresponding grid cell in the current occupancy grid map. For grid cells with a difference, the instructions include defining a change vector for each changed grid cell, wherein the change vector includes a direction from the robot to the changed grid cell and a range from the robot to the changed grid cell.",
	"url": null,
	"owner": "Battelle Energy Alliance, LLC",
	"publication_number": "07584020",
	"publication_date": "2009-09-01",
	"application_number": "11428646",
	"application_date": "2006-07-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Robotic intelligence kernel",
	"summary": "",
	"abstract": "A robot platform includes perceptors, locomotors, and a system controller. The system controller executes a robot intelligence kernel (RIK) that includes a multi-level architecture and a dynamic autonomy structure. The multi-level architecture includes a robot behavior level for defining robot behaviors, that incorporate robot attributes and a cognitive level for defining conduct modules that blend an adaptive interaction between predefined decision functions and the robot behaviors. The dynamic autonomy structure is configured for modifying a transaction capacity between an operator intervention and a robot initiative and may include multiple levels with at least a teleoperation mode configured to maximize the operator intervention and minimize the robot initiative and an autonomous mode configured to minimize the operator intervention and maximize the robot initiative. Within the RIK at least the cognitive level includes the dynamic autonomy structure.",
	"url": null,
	"owner": "Battelle Energy Alliance, LLC",
	"publication_number": "07620477",
	"publication_date": "2009-11-17",
	"application_number": "11428650",
	"application_date": "2006-07-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Spectrum-adaptive networking",
	"summary": "",
	"abstract": "The present invention increases the available spectrum in a wireless network by sharing existing allocated (and in-use) portions of the RF spectrum in a manner that will minimize the probability of interfering with existing legacy users. The invention provides interference temperature-adaptive waveforms, and a variety of physical and media access control protocols for generating waveforms based on measurement and characterization of the local spectrum. The invention measures the local spectrum at a receiving node, generates an optimal waveform profile specifying transmission parameters that will water-fill unused spectrum up to an interference limit without causing harmful interference to primary and legacy transmitters using the same frequency bands, and enables simultaneous transmit and receive modes at a multiplicity of transceivers in a wireless network. The invention also provides closed loop feedback control between nodes, co-site interference management, intersymbol interference mitigation, wide sense stationary baseband signaling and modulation, and power limited signaling for avoiding detection and interception.",
	"url": null,
	"owner": "BBN Technologies Corp",
	"publication_number": "07483711",
	"publication_date": "2009-01-27",
	"application_number": "10689763",
	"application_date": "2003-10-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Duplicated naming service in a distributed processing system",
	"summary": "",
	"abstract": "A clustered enterprise Javau2122 distributed processing system is provided. The distributed processing system includes a first and a second computer coupled to a communication medium. The first computer includes a Javau2122 virtual machine (JVM) and kernel software layer for transferring messages, including a remote Javau2122 virtual machine (RJVM). The second computer includes a JVM and a kernel software layer having a RJVM. Messages are passed from a RJVM to the JVM in one computer to the JVM and RJVM in the second computer. Messages may be forwarded through an intermediate server or rerouted after a network reconfiguration. Each computer includes a Smart stub having a replica handler, including a load balancing software component and a failover software component. Each computer includes a duplicated service naming tree for storing a pool of Smart stubs at a node. The computers may be programmed in a stateless, stateless factory, or a stateful programming model. The clustered enterprise Javau2122 distributed processing system allows for enhanced scalability and fault tolerance.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07480679",
	"publication_date": "2009-01-20",
	"application_number": "11103054",
	"application_date": "2005-04-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic code generation system",
	"summary": "",
	"abstract": "A system for high level dynamic hot code generation. A class file container object is first created. Methods and code are then added to the class file container object. Byte code is then generated from the populated class file container object. From the byte code, instances of the new class object can by generated. The program code generator is configured to generate code at a programming language construct level, thereby working at a level of program language statements, expressions, variables, and other constructs.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07536675",
	"publication_date": "2009-05-19",
	"application_number": "10706516",
	"application_date": "2003-11-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods utilizing a debugging proxy",
	"summary": "",
	"abstract": "A debugging proxy can be used to manage communication between a client and a debugger or debugging component. A debugging protocol can be used by the debugging proxy to facilitate communication management. A debugging protocol can provide for asynchronous messaging, and can allow for the communication of large grain messages. A debugging protocol can also implement a priority scheme that can be used to process messages between a client and a debugger based upon a priority assigned to each message.",
	"url": null,
	"owner": "Bea Systems, Inc.",
	"publication_number": "07530053",
	"publication_date": "2009-05-05",
	"application_number": "10787702",
	"application_date": "2004-02-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Quiescence mode for a portal",
	"summary": "",
	"abstract": "A quiescence mode for a portal allows a portal configuration to be protected from changes. This allows the configuration to be maintained during long running operations without a risk that the portal configuration will be changed during the operation.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07607139",
	"publication_date": "2009-10-20",
	"application_number": "11108384",
	"application_date": "2005-04-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Shared common connection factory",
	"summary": "",
	"abstract": "Systems that use application view components to allow a user to exploit functionality in an EIS can utilize a shareable connection factory. Instead of having a connection factory for each application view, a single connection factory can be used that is simply referenced by each application view. Users can then choose to associate an application view with any available connection factory on the system, or can choose to create a new connection factory that can be available to any other application view or resource adapter.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07493628",
	"publication_date": "2009-02-17",
	"application_number": "10402819",
	"application_date": "2003-03-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for external override of annotations",
	"summary": "",
	"abstract": "A deployable application component can be configured via external annotation overrides at runtime without having to restart the component. An annotation/manifest can be populated to the corresponding application component at build time. The application component can then be configured and changes can be saved as annotation override into an external descriptor in XML format at deploy time. Such external descriptor can then be distributed, parsed, and validated at runtime to configure/update the deployed application component upon receiving notification of deployment changes.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07607126",
	"publication_date": "2009-10-20",
	"application_number": "11134714",
	"application_date": "2005-05-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing notifications in a communities framework",
	"summary": "",
	"abstract": "A community enables user membership in a distributed collaborative computing environment. The members can have access to a repository of resources. Dynamic notifications between client and server can be provided. A member can be logged onto a client which pings the server computer through no interaction of the user. A notifications manager located on the server can retrieve updates available for the member in response to each ping. The notifications manager can look up any changes to the resources that the member has subscribed to. The server can subsequently notify the client of the available updates. The client's user interface can be updated to reflect the relevant changes. A dynamic and granular interaction between the server and the client can be enabled instead of updating the entire portal page. Each ping can carry an id of the member and community, which the server can use to determine the relevant updates.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07590687",
	"publication_date": "2009-09-15",
	"application_number": "11368865",
	"application_date": "2006-03-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method using a connector architecture for application integration",
	"summary": "",
	"abstract": "Functionality can be built upon the J2EE Connector architecture when integrating applications. Bi-directional communication can be added to the system, and a common protocol can be used so that each application does not need to be integrated with every other application. A common protocol can be used, such as by application view components, to allow applications having different protocols to communicate with each other, as well as with components such as enterprise system and integration system components. The applications do not have to know the other protocols, or even that they exist.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07546606",
	"publication_date": "2009-06-09",
	"application_number": "10271156",
	"application_date": "2002-10-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System architecture for business process development and execution with introspection and generic components",
	"summary": "",
	"abstract": "A system for designing a business process includes an introspection module that transforms implementation-specific components into generic components. The implementation-specific components are associated with a number of implementations. A component manager defines the generic components. A process designer selects at least one of the generic components from the component manager, and generates a business process that uses the at least one of the generic components.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07562339",
	"publication_date": "2009-07-14",
	"application_number": "10050316",
	"application_date": "2002-01-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Wireless device, program products and methods of using a wireless device to deliver services",
	"summary": "",
	"abstract": "A user interface is presented through which a training plan is established. The training plan includes a plurality of workouts each describing a human physical activity. The training plan is stored within data storage for selection by any of a plurality of users. In response to a user among said plurality of users selecting said training plan, data describing at least one workout in said training plan is electronically transmitted to a client device associated with the user.",
	"url": null,
	"owner": "Bones In Motion, Inc.",
	"publication_number": "07480512",
	"publication_date": "2009-01-20",
	"application_number": "11169863",
	"application_date": "2005-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus for vehicle internetworks",
	"summary": "",
	"abstract": "Vehicle internetworks provide for communications among diverse electronic devices within a vehicle, and for communications among these devices and networks external to the vehicle. The vehicle internetwork comprises specific devices, software, and protocols, and provides for security for essential vehicle functions and data communications, ease of integration of new devices and services to the vehicle internetwork, and ease of addition of services linking the vehicle to external networks such as the Internet.",
	"url": null,
	"owner": "Borgia/Cummins, LLC",
	"publication_number": "07484008",
	"publication_date": "2009-01-27",
	"application_number": "09684490",
	"application_date": "2000-10-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computerized national online parcel-level map data portal",
	"summary": "",
	"abstract": "A National Online Parcel-Level Map Data Portal (NPDP) is provided that optimizes online delivery of parcel-level maps and linked attribute data. To do this, the NPDP manages a database of assembled and current vector based parcel data in a spatial format (GIS) that enables geocoded parcel boundaries to be linked to property tax records. A user enters a street address into an appropriate screen window to call up and view road right-of-ways, all parcel boundaries and the u201cexactu201d address location as a highlighted parcel area. In addition, a list of property record attributes such as owner, use code, assessed value and year constructed can be displayed. Other on screen parcels can likewise be selected if one wishes to view their linked attributes. Subscribers may customize the NPDP to perform a variety of spatial analysis/reporting functions. Under public/private alliances, agreements are negotiated with individual property assessor's offices whereby they receive a portion of NPDP service provider revenue in return for parcel map database updates. Such on-going commerce between data sponsors and the NPDP service provider is utilized to assure a sustained and expanding flow of increasingly competent content.",
	"url": null,
	"owner": "Boundary Solutions, Inc.",
	"publication_number": "07499946",
	"publication_date": "2009-03-03",
	"application_number": "11654828",
	"application_date": "2007-01-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computerized national online parcel-level map data portal",
	"summary": "",
	"abstract": "A National Online Parcel-Level Map Data Portal (NPDP) is provided that optimizes online delivery of parcel-level maps and linked attribute data. To do this, the NPDP manages a database of assembled and current vector based parcel data in a spatial format (GIS) that enables geocoded parcel boundaries to be linked to property tax records. A user enters a street address into an appropriate screen window to call up and view road right-of-ways, all parcel boundaries and the u201cexactu201d address location as a highlighted parcel area. In addition, a list of property record attributes such as owner, use code, assessed value and year constructed can be displayed. Other on screen parcels can likewise be selected if one wishes to view their linked attributes. Subscribers may customize the NPDP to perform a variety of spatial analysis/reporting functions. Under public/private alliances, agreements are negotiated with individual property assessor's offices whereby they receive a portion of NPDP service provider revenue in return for parcel map database updates. Such on-going commerce between data sponsors and the NPDP service provider is utilized to assure a sustained and expanding flow of increasingly competent content.",
	"url": null,
	"owner": "Boundary Solutions, Inc.",
	"publication_number": "07516156",
	"publication_date": "2009-04-07",
	"application_number": "11493301",
	"application_date": "2006-07-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for selecting data providers",
	"summary": "",
	"abstract": "A preferred data provider is selected from a plurality of data providers by receiving a request for data from a client together with client identification data, identifying a plurality of data providers capable of providing data to the client, providing the client identification data to the data providers and instructing the data providers to perform tests in order to establish a measure of the elapsed time for a signal to be sent to and received from the client, and a measure indicative of their remaining capacity for data transfer, and to make these measures available to the system. One or more preferred data providers may then be selected on the basis of the elapsed time signals and the remaining capacity signals from the data providers.",
	"url": null,
	"owner": "British Telecommunications public limited company",
	"publication_number": "07616582",
	"publication_date": "2009-11-10",
	"application_number": "10555276",
	"application_date": "2004-07-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for processing location service messages in a satellite position location system",
	"summary": "",
	"abstract": "Method and apparatus for processing location service messages in a satellite position location system is described. In one example, a mobile receiver includes a satellite signal receiver, wireless circuitry, and at least one module. The satellite signal receiver is configured to receive satellite positioning system signals, such as Global Positioning System (GPS) signals. The wireless circuitry is configured to communicate location service messages between the mobile receiver and a server through a cellular communication network. The location service messages may include any type of data related to A-GPS operation, such as assistance data, position data, request and response data, and the like. The at least one module is configured to provide a user-plane interface and a control-plane interface between the satellite signal receiver and the wireless transceiver. The at leat one module is capable of processing location service messages communicated using either the control-plane signaling or user-plane signaling mechanisms.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07554934",
	"publication_date": "2009-06-30",
	"application_number": "10932557",
	"application_date": "2004-09-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for handling connection setup in a network",
	"summary": "",
	"abstract": "Certain embodiments of a method and system for handling connection setup in a network may comprise a host that generates connection acceptance criteria and/or a services list that may be transferred to a network interface hardware device for determining whether a remote peer connection request may be accepted. The network interface hardware device may generate connection primitives to complete the network connection setup after accepting the connection request. The network interface hardware device may wait for a response from the host before generating the connection primitives. The network interface hardware device may copy the host during connection setup. The host may provide and indication to the network interface hardware device to deny the connection request or to drop the connection after the connection has been setup. The network interface hardware device may maintain a connection state generated when the connection setup is completed.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07636323",
	"publication_date": "2009-12-22",
	"application_number": "11452645",
	"application_date": "2006-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for transparent TCP offload (TTO) with a user space library",
	"summary": "",
	"abstract": "Certain aspects of a method and system for transparent TCP offload with a user space library are disclosed. Aspects of a method may include collecting TCP segments in a network interface card (NIC) without transferring state information to a host system. When an event occurs that terminates the collection of TCP segments, a single aggregated TCP segment based on the collected TCP segments may be generated. The aggregated TCP segment may be posted directly to a user space library, bypassing kernel processing of the aggregated TCP segment.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07596628",
	"publication_date": "2009-09-29",
	"application_number": "11489300",
	"application_date": "2006-07-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for receive queue provisioning",
	"summary": "",
	"abstract": "Systems and methods that provide receive queue provisioning are provided. In one embodiment, a communications system may include, for example, a first queue pair (QP), a second QP and a general pool. The first QP may be associated with a first connection and may include, for example, a first send queue (SQ). The second QP may be associated with a second connection and may include, for example, a second SQ. The general pool may include, for example, a shared receive queue (SRQ) that may be shared, for example, by the first QP and the second QP.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07508837",
	"publication_date": "2009-03-24",
	"application_number": "10688392",
	"application_date": "2003-10-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Voice and data exchange over a packet based network with timing recovery",
	"summary": "",
	"abstract": "A signal processing system which discriminates between voice signals and data signals modulated by a voiceband carrier. The signal processing system includes a voice exchange, a data exchange and a call discriminator. The voice exchange is capable of exchanging voice signals between a switched circuit network and a packet based network. The signal processing system also includes a data exchange capable of exchanging data signals modulated by a voiceband carrier on the switched circuit network with unmodulated data signal packets on the packet based network. The data exchange is performed by demodulating data signals from the switched circuit network for transmission on the packet based network, and modulating data signal packets from the packet based network for transmission on the switched circuit network. The call discriminator is used to selectively enable the voice exchange and data exchange.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07529325",
	"publication_date": "2009-05-05",
	"application_number": "10918829",
	"application_date": "2004-08-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Management system for multimodule multiprocessor machines",
	"summary": "",
	"abstract": "The present invention relates to a global management system for a multimodule, multiprocessor machine (PK). The system is characterized in that it comprises an independent module (SM) dedicated to the global management of a plurality of first modules (M through Mn), the independent module (SM) being connected to each management tool (BUMP) for each of the first modules (M through Mn) by a first specific link supporting a given communication protocol that makes it possible to manage each of the first modules at the startup of the machine, during the running of the machine, and after the machine stops running, the independent module (SM) being connected to each of the first modules via a second link, and the independent module also being globally connected to the multimodule machine (PK) via a physical link of a local area network (LAN) linked to at least two of the first modules (M and M).",
	"url": null,
	"owner": "Bull SAS",
	"publication_number": "07509375",
	"publication_date": "2009-03-24",
	"application_number": "11797295",
	"application_date": "2007-05-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for routing composite objects to a report server",
	"summary": "",
	"abstract": "A computer readable medium stores computer executable instructions to receive a collection of composite objects. An aggregate dataset that includes a portion of the contents of object instances in the collection of objects is created. The aggregate dataset is passed to a report server. A report that includes data from the aggregate dataset is accepted.",
	"url": null,
	"owner": "Business Objects Software Ltd.",
	"publication_number": "07555495",
	"publication_date": "2009-06-30",
	"application_number": "11403459",
	"application_date": "2006-04-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Platform and method for providing data services in a communication network",
	"summary": "",
	"abstract": "A communication node and corresponding method for processing data communication passing through the node between a first data network and a second data network is described. The method includes detecting an event associated with data communication arriving at the node from the first data network, and determining whether the data communication is to be suspended for service at the node based on the detected event. Suspended data communication is processed based on information in the data communication. Return data communication arriving at the node from the second data network in response to the processed data communication from the first data network is detected. The detected return data communication is allowed to pass through the node without processing the detected return data communication.",
	"url": null,
	"owner": "Bytemobile Network Services Corporation",
	"publication_number": "07586871",
	"publication_date": "2009-09-08",
	"application_number": "11330588",
	"application_date": "2006-01-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods of model compilation for models used in an electronic circuit simulator",
	"summary": "",
	"abstract": "A method is provided for compiling a model for use in a simulation, the method comprising receiving a description of the model; and automatically converting the description into an implementation of the model that is customized for a selected analysis during simulation.",
	"url": null,
	"owner": "Cadence Design Systems, Inc.",
	"publication_number": "07574342",
	"publication_date": "2009-08-11",
	"application_number": "11255903",
	"application_date": "2005-10-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Three-dimensional hologram display system",
	"summary": "",
	"abstract": "The present invention relates to a three-dimensional (3D) hologram display system. The 3D hologram display system includes a projector device for projecting an image upon a display medium to form a 3D hologram. The 3D hologram is formed such that a viewer can view the holographic image from multiple angles up to 360 degrees. Multiple display media are described, namely a spinning diffusive screen, a circular diffuser screen, and an aerogel. The spinning diffusive screen utilizes spatial light modulators to control the image such that the 3D image is displayed on the rotating screen in a time-multiplexing manner. The circular diffuser screen includes multiple, simultaneously-operated projectors to project the image onto the circular diffuser screen from a plurality of locations, thereby forming the 3D image. The aerogel can use the projection device described as applicable to either the spinning diffusive screen or the circular diffuser screen.",
	"url": null,
	"owner": "California Institute of Technology",
	"publication_number": "07490941",
	"publication_date": "2009-02-17",
	"application_number": "11216803",
	"application_date": "2005-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information processing apparatus, print processing method, and computer program",
	"summary": "",
	"abstract": "A mechanism in which whether or not a printing process can be executed in a user's desired format can be recognized by the user before a print output is executed from an application is provided. The application inquires of a printer driver about a restriction value of a printing apparatus in the case of executing the printing process by print setting designated by the user and obtains such a value. Whether or not the printing process can be executed is discriminated on the basis of the obtained print restriction value information and the number of pages of a print document. If it is determined that the printing process cannot be executed, a message showing that it is impossible to execute the printing process is displayed onto a displaying apparatus. If the printing process cannot be executed, the user is allowed to select available print settings.",
	"url": null,
	"owner": "Canon Kabuhsiki Kaisha",
	"publication_number": "07586639",
	"publication_date": "2009-09-08",
	"application_number": "11190962",
	"application_date": "2005-07-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method capable of executing plug and play installation processing operation upon acquiring one piece of device identification information including both printer and facsimile identification information",
	"summary": "",
	"abstract": "The present invention relates to an information processing apparatus capable of executing plug and play processing for starting up one installation processing operation upon acquiring one device identification information item. The information processing apparatus includes an acquisition unit for acquiring at least one device identification information item including a plurality of configuration information items corresponding to each of a plurality of logical interfaces in response to connection of a peripheral device. The information processing apparatus further includes an installation control unit for controlling execution of installation of a plurality of device drivers corresponding to the plurality of logical interfaces, respectively, by the use of the plurality of configuration information items included in the at least one device identification information item when the acquisition unit acquires the at least one device identification information item from the peripheral device.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07529920",
	"publication_date": "2009-05-05",
	"application_number": "11149013",
	"application_date": "2005-06-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data recording system and data access method",
	"summary": "",
	"abstract": "A data recording system and method are provided which, when the removal of a recording medium is detected during data writing, the data recording system retains accessed processing not executed in the data writing, and executes the retained access processing when the removed recording medium is inserted again into the data system.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07620994",
	"publication_date": "2009-11-17",
	"application_number": "11238611",
	"application_date": "2005-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Document generation apparatus and file conversion system",
	"summary": "",
	"abstract": "A document generation apparatus has a comparator that compares the type of language of original document data and the type of language provided at a reproduction terminal that reproduces the original document data, and a generator that generates document data with font based on the original document that does not include a character font when results of a comparison performed by the comparator indicate that both types of languages match, and generates document data with font based on the original document that does include a character font used in the original document data when the results of the comparison performed by the comparator indicate that both types of language do not match.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07570374",
	"publication_date": "2009-08-04",
	"application_number": "11131274",
	"application_date": "2005-05-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Flexible secure network data transfer and messaging",
	"summary": "",
	"abstract": "The present invention is directed to the use of a messaging component for sharing a common network communication channel by a plurality of threads of execution. The messaging component receiving a message and forwarding the message to one or more of the threads using information in a payload portion of the message, which is compared with supplied registration information. In addition, according to the present invention, messaging and job components may be used by each of a plurality of execution threads to negotiate a manner of transferring data between two network computers, wherein the job component proposes a manner of transfer, which is communicated using the messaging component to a receiving a computer. The proposed manner of transfer may be accepted or rejected by the receiving computer. An alternative manner of transfer may be proposed, where another manner of transfer is found to be unacceptable.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07543067",
	"publication_date": "2009-06-02",
	"application_number": "09919729",
	"application_date": "2001-08-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Image processing apparatus and control method thereof, processing module drive control method, and data processing apparatus",
	"summary": "",
	"abstract": "An image processing apparatus includes a number of processing modules which apply a process to predetermined data in inputted print data; a detecting unit configured to detect a processing module that has performed a process during processing by the plurality of processing modules of print data inputted in a predetermined mode; and a setting unit configured to make a setting that enables a processing module detected by the detecting unit, after the end of the predetermined mode.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07619757",
	"publication_date": "2009-11-17",
	"application_number": "11197466",
	"application_date": "2005-08-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Image processing apparatus, control method thereof, and storage medium storing control program, with interpreter for program objects represented in byte codes, and with application programming interface function programs used commonly by program objects",
	"summary": "",
	"abstract": "An image forming apparatus in which program objects represented in byte codes can be loaded, the program objects providing services for image forming processing, the apparatus including: (a) a hardware resource unit including at least one of a printing unit and an image pickup unit; and (b) a memory unit configured to store an operating system, an interpreter which runs on the operating system and interprets the program objects represented in byte codes, a driver program for controlling image forming processing. and the program objects represented in byte codes, wherein the program objects stored in the memory unit perform a message communication, wherein the driver program operates the hardware resource unit, and wherein function programs each having an API (Application Programming Interface) are (a) defined between the program objects and the driver program. (b) used commonly by the program objects, and (c) interpreted by the interpreter.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07633643",
	"publication_date": "2009-12-15",
	"application_number": "11768389",
	"application_date": "2007-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information processing apparatus and information processing method",
	"summary": "",
	"abstract": "A configuration for measuring the position and the orientation specific to a mixed reality is separated from an application  to operate independently, and a shared memory  or process-to-process communication is used for data communication between them. This allows to modify configuration associated with the measurement of the position and the orientation such as the type of the sensor or an alignment method without modifying or recompiling the application . This facilitates providing the mixed reality system and supporting system modification.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07558403",
	"publication_date": "2009-07-07",
	"application_number": "11277861",
	"application_date": "2006-03-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Job information managing system, job information managing method, program for implementing the method, and storage medium storing the program",
	"summary": "",
	"abstract": "A job information managing system which can improve convenience in managing and using management codes and improve user-friendliness and convenience in printing management using the management codes. A client computer generates a job for a printer and generates job information on the job. A server computer acquires the job information from the client computer and manages the job information. The client computer creates a label in association with a plurality of management codes for managing job information. The created label is sent to the server computer and stored in association with the plurality of management codes.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07636174",
	"publication_date": "2009-12-22",
	"application_number": "11116984",
	"application_date": "2005-04-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods for interactively defining transforms and for generating queries by manipulating existing query data",
	"summary": "",
	"abstract": "Access to heterogeneous data sources may be obtained by interactively determining transformations for use in mapping at least one source data component from at least one data source to a target data component. Selection of at least one the source data component is detected. A corresponding list of representative data examples is generated for each selected source data component. A resulting list of representative data examples is compiled for the target data component from the lists of representative data examples of the selected source data components, the resulting list of data examples being representative of the target data component. A modification of an example is identified from the resulting list of examples representative of the target data component, the example being modified as a single textual entity. At least one transformation is determined, by inferring from the modified example, to be applied to at least one source data component.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07574652",
	"publication_date": "2009-08-11",
	"application_number": "10465222",
	"application_date": "2003-06-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Print control apparatus, print control method and printing system",
	"summary": "",
	"abstract": "A print control apparatus, method and system that acquire a first band area for storing band data of a predetermined size according to band information for processing by a printer device. Print commands are divided into each band in which a printer device processes, and stored into the first band area in band units. If the print commands corresponding to a particular band cannot be stored in the first band area, a memory area for storing the print command is acquired as a second band area, the print commands stored in the first and second band areas are linked, and the linked print commands are transmitted to the printer device.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07535589",
	"publication_date": "2009-05-19",
	"application_number": "10834216",
	"application_date": "2004-04-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Printer maintenance scheme for a network centric printing system",
	"summary": "",
	"abstract": "Supporting printer maintenance in a network environment having a server, at least one network device and a printer, the server containing a plurality of printer configuration files, wherein the printer maintenance is supported by accessing one of the printer configuration files which corresponds to the printer, the configuration file including a plurality of printer maintenance function names and a plurality of printer maintenance commands corresponding to the printer maintenance function names, generating an HTML-based page corresponding to the printer, the HTML-based page containing each of the printer maintenance function names from the accessed printer configuration file, and sending the HTML-based page to the network device, wherein, upon selection in the network device of one of the printer maintenance function names in the HTML-based page, the server sends to the printer the printer maintenance command which corresponds to the selected printer maintenance function name.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07478124",
	"publication_date": "2009-01-13",
	"application_number": "11488778",
	"application_date": "2006-07-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Visualizing camera position in recorded video",
	"summary": "",
	"abstract": "Disclosed is an arrangement () for displaying video footage captured by a controllable camera (), the arrangement comprising a memory () storing the captured footage, means for constructing a representation () of a field of view accessible by the camera (), means for retrieving, from the memory (), the stored footage () and parameters characterising the control state of the camera () when the footage was captured, and means for displaying the footage (), the representation () of the field of view, and an indicator () on the representation () dependent upon the parameters.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07595833",
	"publication_date": "2009-09-29",
	"application_number": "11362193",
	"application_date": "2006-02-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for associating handwritten information with one or more objects",
	"summary": "",
	"abstract": "A pen-enabled computing arrangement includes a handwriting capture interface and at least one processing element, such as in the form of a computing system and a digital pen that embodies a writing stylus. The handwriting capture interface can capture an electronic handwriting input. The processing element can sense an identifier associated with an object, and associate electronic handwriting input with the object. The processing element can then process the electronic handwriting input based upon the associated object. Printed paper with which the arrangement can operate to effectuate capturing and processing data may also be provided. Further, triggered verification of the sensed identifier may be provided when the identifier is sensed based upon initial electronic handwriting input corresponding to the identifier and the sensed identifier is unknown and/or improper.",
	"url": null,
	"owner": "Cardinal Brands, Inc.",
	"publication_number": "07639876",
	"publication_date": "2009-12-29",
	"application_number": "11036534",
	"application_date": "2005-01-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application governor providing application-level autonomic control within a distributed computing system",
	"summary": "",
	"abstract": "A distributed computing system conforms to a multi-level, hierarchical organizational model. One or more control nodes provide for the efficient and automated allocation and management of computing functions and resources within the distributed computing system in accordance with the organization model. A user, such as a system administrator, interacts with the control nodes to logically define the hierarchical organization of distributed computing system. The control node includes an automation subsystem having one or more rule engines that provide autonomic control of the application nodes in accordance with a set of one or more rules. A pluggable, application-specific application governor is selected and installed within the control node to provide an application-independent interface through which the rule engines interact to control the deployment, execution and monitoring of the applications within the distributed computing system.",
	"url": null,
	"owner": "Cassatt Corporation",
	"publication_number": "07478097",
	"publication_date": "2009-01-13",
	"application_number": "11191384",
	"application_date": "2005-07-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automated discovery and inventory of nodes within an autonomic distributed computing system",
	"summary": "",
	"abstract": "A distributed computing system conforms to a multi-level, hierarchical organizational model. One or more control nodes provide for the efficient and automated allocation and management of computing functions and resources within the distributed computing system in accordance with the organization model. The model includes four distinct levels: fabric, domains, tiers and nodes that provide for the logical abstraction and containment of the physical components as well as system and service application software of the enterprise. A user, such as a system administrator, interacts with the control nodes to logically define the hierarchical organization of distributed computing system. The control node detects the addition of a node added to the network and automatically identifies attributes for the detected node.",
	"url": null,
	"owner": "Cassatt Corporation",
	"publication_number": "07590653",
	"publication_date": "2009-09-15",
	"application_number": "11070851",
	"application_date": "2005-03-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Autonomic control of a distributed computing system using an application matrix to control application deployment",
	"summary": "",
	"abstract": "A distributed computing system conforms to a multi-level, hierarchical organizational model. One or more control nodes provide for the efficient and automated allocation and management of computing functions and resources within the distributed computing system in accordance with the organization model. A user, such as a system administrator, interacts with the control nodes to logically define the hierarchical organization of distributed computing system. The control node includes an automation subsystem having one or more rule engines that provide autonomic control of the application nodes in accordance with a set of one or more rules. A pluggable, application-specific application matrix is selected and installed within the control node. The application matrix contains a logical definition of the applications, and parameters for controlling the deployment of the applications within the distributed computing system.",
	"url": null,
	"owner": "Cassatt Corporation",
	"publication_number": "07571154",
	"publication_date": "2009-08-04",
	"application_number": "11191882",
	"application_date": "2005-07-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Unified system services layer for a distributed processing system",
	"summary": "",
	"abstract": "A distributed processing system is described that employs u201crole-basedu201d computing. In particular, the distributed processing system is constructed as a collection of computing nodes in which each computing node performs a particular processing role within the operation of the overall distributed processing system. Each of the computing nodes includes a conventional operating system, such as the Linux operating system, and includes a plug-in software module to provide a distributed memory operating system that employs the role-based computing techniques. The plug-in module provides seamless inter-process communication mechanisms and a distributed file system within the operating system services provided by each of the computing nodes, thereby allowing the computing nodes to cooperate and implement processing services of the overall distributed processing system.",
	"url": null,
	"owner": "Cassatt Corporation",
	"publication_number": "07526534",
	"publication_date": "2009-04-28",
	"application_number": "10893136",
	"application_date": "2004-07-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Fault injection methods and apparatus",
	"summary": "",
	"abstract": "A method of testing a target in a network by fault injection, includes: defining a transaction baseline; modifying at least one of an order and a structure of the transaction baseline to obtain a modified transaction with malformed grammar; and transmitting the modified transaction to a target. The method may further include, receiving a feedback from the target to determine fault occurrence. An apparatus for testing a target in a network by fault injection, includes: a driver configured to generate patterns, where a pattern can generate a plurality of packets for transmission to the target, the pattern being represented by an expression with a literal string and a wild character class; and a network interface coupled to the driver and configured to transmit and receive network traffic.",
	"url": null,
	"owner": "Cenzic, Inc.",
	"publication_number": "07620851",
	"publication_date": "2009-11-17",
	"application_number": "11701181",
	"application_date": "2007-01-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for managing contacts in an instant messaging environment",
	"summary": "",
	"abstract": "A computer-implemented method is described for instant messaging comprising: categorizing two or more instant messaging contact names into a single meta contact; receiving a request to transmit an instant message directed to the meta contact; selecting one of the two or more instant messaging contact names within the meta contact to which to transmit the instant message based on a specified prioritization scheme.",
	"url": null,
	"owner": "Cerulean Studios, LLC",
	"publication_number": "07631266",
	"publication_date": "2009-12-08",
	"application_number": "11903767",
	"application_date": "2007-09-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for transferring data between a user space and a kernel space in a server associated with a distributed network environment",
	"summary": "",
	"abstract": "A system () and method provide for the transfer of at least one packet () comprising data between a user space () and a kernel space () associated with a server () that is positioned in a distributed network arrangement () with a plurality of clients (). A distribution program () associated with the user space () is operable to accumulate the at least one packet (). An application program interface () associated with the user space () transfers the at least one packet () to the kernel space () with a number of software interrupts (). A driver () associated with the kernel space () is operable to distribute the at least one packet () to a subset of the plurality of clients () in response to receiving the number of software interrupts (). The number of software interrupts () is less than one software interrupt per packet per client.",
	"url": null,
	"owner": "Charles Schwab & Co., Inc.",
	"publication_number": "07587510",
	"publication_date": "2009-09-08",
	"application_number": "10420055",
	"application_date": "2003-04-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Security system providing methodology for cooperative enforcement of security policies during SSL sessions",
	"summary": "",
	"abstract": "A security system providing methodology for cooperative enforcement of security policies during SSL sessions is described. In one embodiment, for example, a method is described for controlling SSL (Secure Sockets Layer) communication, the method comprises steps of: defining rules indicating conditions under which a machine is permitted to participate in an SSL session; trapping an attempt by a particular application running on the machine to participate in an SSL session, by intercepting the particular application's attempt to provide authentication; determining whether the machine complies with the rules; allowing the attempt to succeed when the machine complies with the rules; and otherwise blocking the attempt when the machine does not comply with the rules.",
	"url": null,
	"owner": "Check Point Software Technologies, Inc.",
	"publication_number": "07627896",
	"publication_date": "2009-12-01",
	"application_number": "10908015",
	"application_date": "2005-04-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methodology for protecting new computers by applying a preconfigured security update policy",
	"summary": "",
	"abstract": "A system and methodology for protecting new computers by applying a preconfigured security update policy is described. In one embodiment, for example, a method is described for controlling connections to a computer upon its initial deployment, the method comprises steps of: upon initial deployment of the computer, applying a preconfigured security policy that establishes a restricted zone of preapproved hosts that the computer may connect to upon its initial deployment; receiving a request for a connection from the computer to a particular host; based on the preconfigured security policy, determining whether the particular host is within the restricted zone of preapproved hosts; and blocking the connection if the particular host is not within the restricted zone of preapproved hosts.",
	"url": null,
	"owner": "Check Point Software Technologies, Inc.",
	"publication_number": "07540013",
	"publication_date": "2009-05-26",
	"application_number": "10710781",
	"application_date": "2004-08-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for utilizing meta-cells",
	"summary": "",
	"abstract": "Exemplary systems and methods of laying out integrated circuits are disclosed. The systems include a layout application configured to place geometries in conformance with layout constraints transformed into composite cells. A composite cell defines a relationship between one or more cells, such as parameterized cells, and is independent of the physical topology of the cells. The exemplary systems are configured to use the composite cells to restrict a number of possible layout scenarios by generating a first layout scenario in conformance with the composite cell implementations, and to thereafter generate a second layout scenario in conformance with the constraints on all cells within the first layout scenario. Embodiments of the present invention are particularly suited to the layout of analog and mixed signal integrated circuits resulting in faster, more flexible, and more efficient layout as compared with conventional techniques which require the layout application to search through a much broader set of possible scenarios.",
	"url": null,
	"owner": "CiraNova, Inc.",
	"publication_number": "07587694",
	"publication_date": "2009-09-08",
	"application_number": "11490658",
	"application_date": "2006-07-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for archiving multiple downloaded recordable media content",
	"summary": "",
	"abstract": "A recordable media content archiving system in a subscriber network. The recordable media content archiving system comprises, among other elements, a memory for storing recordable media content characterizing information, a storage device for storing a plurality of portable mediums, and a processor configured with the memory to receive the recordable media content characterizing information into the memory, wherein the processor is further configured to provide a user interface for the recordable media content archiving system.",
	"url": null,
	"owner": "Cisco Technology",
	"publication_number": "07512964",
	"publication_date": "2009-03-31",
	"application_number": "09896390",
	"application_date": "2001-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and methods for providing an audibly controlled user interface for audio-based communication devices",
	"summary": "",
	"abstract": "The invention is directed to techniques for providing an audibly controlled interface for a user of a limited audio-based communication device, for example, a telephony device such as a desktop telephone or a cellular telephone. The communication device has an interface connection with a proxy browser. The user initially accesses the device, such as by picking up the handset, and the proxy browser provides a communication path over a network to a call services application on an application server. The application server provides a response to the initial access signal. The proxy browser receives the response from the application server and plays back an audio output based on the response to the communication device for the user. The user can then respond with a request to the call services application to place an outbound call or to initiate another service provided by the application server via the proxy browser.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07555536",
	"publication_date": "2009-06-30",
	"application_number": "11873619",
	"application_date": "2007-10-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application server system and method",
	"summary": "",
	"abstract": "An application server system is provided having a core engine connecting one or more protocol providers to one or more applications. In a preferred embodiment, the one or more applications run on a respective one or more virtual machines having their own execution threads. A thread pool may be used to spawn instances of applications or scripts. Preferably, the core engine, the protocol providers, and each of the one or more virtual machines run in separate AppDomains. In another embodiment, a visual designer is provided preferably having XML conversion capability and interactive debug capability.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07593980",
	"publication_date": "2009-09-22",
	"application_number": "10999888",
	"application_date": "2004-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Approaches for switching transport protocol connection keys",
	"summary": "",
	"abstract": "Approaches are disclosed for switching transport protocol connection keys. In a transport protocol module configured to use a first key for signing messages associated with a transport protocol connection, a second key is configured for the transport protocol connection. A first message that is associated with the transport protocol connection is received. The first message includes a first signature. A first and a second message digests are computed for the first message, where the first message digest is based on the first key and the second message digest is based on the second key. The first message is validated if the first signature in the first message matches any one of the first message digest and the second message digest.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07545810",
	"publication_date": "2009-06-09",
	"application_number": "11173690",
	"application_date": "2005-07-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Arrangement for providing content-based quality of service for a service flow based on parsing XML tags detected from a server response to a client request",
	"summary": "",
	"abstract": "A network node, for example a router, is configured for assigning network parameters for an identified flow of data packets associated with an application service, based on detecting quality of service parameters specified by XML tags within a message between an application server configured for providing the application service and a destination device configured for receiving the application service. The router includes an XML parser configured for parsing XML tags specifying prescribed user-selectable quality of service attributes for a corresponding application service, and an application resource configured for interpreting the prescribed user-selectable quality of service attributes for the application service. The application resource also is configured for assigning the selected network parameters, for transfer of the identified flow of data packets, based on the interpretation of the prescribed user-selectable quality of service attributes for the specified application service.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07516198",
	"publication_date": "2009-04-07",
	"application_number": "09984414",
	"application_date": "2001-10-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Caching information for multiple service applications",
	"summary": "",
	"abstract": "A method for storing information includes receiving a command for a selected one of a plurality of services, and forwarding the command to a data source corresponding to the selected service. The method also includes, receiving data from the data source, and storing the data in a selected namespace in a cache corresponding to the selected service. The method further includes invalidating the data in the namespace according to invalidation criteria provided by the selected service.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07480657",
	"publication_date": "2009-01-20",
	"application_number": "10337452",
	"application_date": "2003-01-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Calling service using voice enabled web based application server",
	"summary": "",
	"abstract": "A method is provided in an application server for executing a calling application. The method includes receiving an HTTP request for execution of a calling application operation for a caller. A selected extensible markup language (XML) document is accessed in response to reception of the HTML request. Based on the XML document, a first HTML page including prompts is generated for the caller. A directory is accessed based on an input from the caller to obtain called party information. A second HTML page is generated having instructions for contacting the called party. Hence, calling services may be deployed on a platform that is customizable, scalable, and built upon open standards such as Internet protocol. By directly contacting an application server upon picking-up a telephone device, an intelligent system is provided for making telephone calls over an IP network.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07502993",
	"publication_date": "2009-03-10",
	"application_number": "09604654",
	"application_date": "2000-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Communicating messages in a multiple communication protocol network",
	"summary": "",
	"abstract": "A method for communicating messages in a multiple communication protocol network is disclosed. A first message is received at a first signaling adapter. The first message is based on a first communication protocol. A second message is received at a second signaling adapter. The second message is based on a second communication protocol. The first message is converted from the first communication protocol to a generic protocol, and the second message is converted from the second communication protocol to the generic protocol. The first message and the second message are received at a signaling adapter interface. The first signaling adapter and the second signaling adapter are detachable from the signaling adapter interface. The first message and the second message are sent to a network component.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07529269",
	"publication_date": "2009-05-05",
	"application_number": "11422220",
	"application_date": "2006-06-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Composite controller for multimedia sessions",
	"summary": "",
	"abstract": "A method for managing a multimedia session includes receiving a request to initiate a multimedia session, which includes first media and second media. The method further includes establishing a first delegated session with a first device to communicate the first media, and associating the first delegated session with the multimedia session.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07532628",
	"publication_date": "2009-05-12",
	"application_number": "10334546",
	"application_date": "2002-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data replication for redundant network components",
	"summary": "",
	"abstract": "In accordance with one embodiment of the invention, a method for replicating data for redundant network components is disclosed. Data associated with a call is received and stored in a shared memory database. The data is sent to a mate network component of the network component if the network component is in an active mode. Sending of the data to the mate network component is terminated if the network component enters a mode other than the active mode.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07568125",
	"publication_date": "2009-07-28",
	"application_number": "11352745",
	"application_date": "2006-02-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Gang scheduling among one or more components or systems",
	"summary": "",
	"abstract": "Disclosed are mechanisms for initiating and performing tasks by a gang of members. A member of a gang identifies an event or other condition which requires notification to and/or action to be taken by at least a subset, if not all the other members of the gang. The gang member notifies other gang members by sending a message, such as that using reliable group communication using multicast and/or unicast messages. The information notified to other gang members and/or actions to be performed are extensible to meet the needs of the wide-variety of possible applications. A small list of example subject areas of these applications includes collecting, distributing, updating, responding to, and/or other processing of error conditions, routing information (e.g., between systems, from a route processor to line cards within a system, etc.), configuration information, flow control information, statistics or other values, etc.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07562363",
	"publication_date": "2009-07-14",
	"application_number": "10722314",
	"application_date": "2003-11-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing time shift buffers",
	"summary": "",
	"abstract": "Systems and methods are provided for managing a time-shift buffer (TSB) that is used for buffering video presentations. One such method includes receiving user input identifying a storage capacity for the TSB and modifying a storage capacity of the TSB such that it is at least substantially equal to the storage capacity identified by the user input.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07512315",
	"publication_date": "2009-03-31",
	"application_number": "10143647",
	"application_date": "2002-05-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Messaging system configured for selectively accessing subscriber spoken name from a directory server based on determined unavailability of messaging server",
	"summary": "",
	"abstract": "An application server is configured for initiating a messaging session for an incoming call by accessing a subscriber profile information from a directory server and a subscriber announcement from a messaging server. The application server includes a fault tolerant routine for initiating a messaging session, enabling playing of the subscriber's spoken name during the messaging session based on a determined unavailability of the messaging server. The subscriber announcement and the subscriber's spoken name (or another audible subscriber identifier) are stored in the messaging server as first and second data files having first and second sizes, respectively, where the second size is substantially smaller than the first size. The second data file also is stored in the directory server with the subscriber profile information. If, during initiation of the messaging session the application server determines that the messaging server is unavailable, the application server retrieves the second data file from the directory server and plays the corresponding audible subscriber identifier as an alternate announcement for the messaging session. Hence, the application server is able to initiate a messaging session that provides positive identification of the subscriber, enabling messages to be recorded for storage even when the messaging server is unavailable.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07574487",
	"publication_date": "2009-08-11",
	"application_number": "09820884",
	"application_date": "2001-03-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for automatically re-validating multiple clients of an authentication system",
	"summary": "",
	"abstract": "According to one embodiment of the invention, a session list identifying communication sessions relating to supplicants that access a computer network through an access device is created and stored at an authentication server. Then, an event is received from an anti-virus system announcing an updated anti-virus policy. User input is received that requests performing posture validation for all the supplicants. Next, in response to the information received, a time value for starting the posture validation for a particular supplicant identified in the session list. Finally, in response to the information received, a request to perform posture validation is generated and sent to the access device, wherein the request includes supplicant identifying information, the time value, and instructions that instructs the access device to initiate the posture validation for that supplicant only after the time value has expired. The steps are repeated for all supplicants in the session list.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07587751",
	"publication_date": "2009-09-08",
	"application_number": "10910005",
	"application_date": "2004-08-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for preventing network reset attacks",
	"summary": "",
	"abstract": "A method for improving resistance of network protocols running on transmission control protocol (TCP), such as BGP. For example, a method comprises receiving, from a TCP application, a request to ignore all TCP segments with an RST bit set, except for solicited RST segments; establishing a filter that blocks all but solicited TCP RST segments; receiving a TCP segment with a SYN bit set and a sequence number value within an allowed window for a TCP connection matching the received segment, and for a session of the TCP application; re-configuring the filter to allow TCP RST segments for the connection associated with the received segment; requesting the TCP application to initiate an event that will induce a legitimate sender of the received segment to send a valid TCP RST segment in response; and closing the connection only when a TCP RST segment is received in response.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07565694",
	"publication_date": "2009-07-21",
	"application_number": "10959225",
	"application_date": "2004-10-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing trend information from network devices",
	"summary": "",
	"abstract": "A method of providing performance trend information from a device in a packet-switched network to a network management station comprises maintaining in the device one or more state variables that store values associated with data processing functions of the device; storing in the device a trend indicator value and a trend tendency value, both associated with a particular state variable among the state variables; periodically sampling the particular state variable to obtain one or more sampled values; determining and updating the trend indicator value with a direction of change in the sampled values of the particular state variable over a particular time; determining and updating the trend tendency value with a rate of change in the one or more sampled values of the particular state variable over the particular time; and sending the trend indicator value and the trend tendency value to the network management station.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07562140",
	"publication_date": "2009-07-14",
	"application_number": "11280557",
	"application_date": "2005-11-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus of a location server for hierarchical WLAN systems",
	"summary": "",
	"abstract": "Methods, apparatuses, and systems directed to processing location and network data in a wireless network. According to one implementation of the present invention, a location server functions both as a middleware data collection engine and a calculation engine in a hierarchical WLAN system. In one implementation, the location server collects network data associated with mobile nodes. As described in further detail below, mobile nodes may include one or more of wireless mobile stations (e.g., wireless laptops, dual-mode phones, personal digital assistants, etc.), radio frequency identification (RFID) tags, rogue wireless access points and rogue wireless clients. In one implementation, the location server may process at least some of the network data to determine information associated with the mobile nodes. For example, the location server may compute the location of a given mobile node, which is accessible to other applications using one or more defined application programming interfaces (APIs). In one implementation, the location server may track the node history of a given mobile node. In one implementation, the location server may correlate processed network information to one or more locations or regions in the wireless network environment. For example, in one implementation, the location server may compute the load (i.e., amount of traffic) in a given region. The load may be used to further compute traffic patterns in the region. Such computations may be based on types of mobile nodes (e.g., wireless clients) and/or based on time periods (e.g., 12 pm-5 pm). As described in more detail below, such information may facilitate management of a wireless network. For example, the processed information may indicate locations that may require deployment of more resources (e.g., additional wireless access points).",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07590418",
	"publication_date": "2009-09-15",
	"application_number": "11336050",
	"application_date": "2006-01-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of allocating bandwidth in an optical network",
	"summary": "",
	"abstract": "A method is provided to allocate bandwidth from a first node to a second node in a optical network. The method begins by accepting a request from an end-user, who requests a virtual path between the first node and the second node. The first and second nodes are ones of a number of such nodes. Each one of the nodes is coupled to at least one other node by at least one of a number of optical links. The nodes and links form the optical network. The virtual path has a bandwidth requirement associated therewith. Next, the service provider determines an amount of bandwidth available between the first and the second nodes. The service provider then allocates at least a portion of the amount of bandwidth available between the first and second nodes equal to the bandwidth requirement, so long as the bandwidth requirement is not greater than the amount of bandwidth available between the first and second nodes.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07602807",
	"publication_date": "2009-10-13",
	"application_number": "11235820",
	"application_date": "2005-09-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of providing network services",
	"summary": "",
	"abstract": "A method of providing network services is described. The network includes a number of nodes, each one of which is coupled to at least one other of the nodes by at least one of a number of optical links. The network is preferably capable of supporting a number of virtual circuits. The method begins with the receiving of a request for a virtual circuit between a first node and a second node of the network. Preferably, the request specifies a quality of service of the virtual circuit. Next, the availability of network resources for supporting a virtual circuit at the requested quality of service is determined. Assuming sufficient network resources are available for support of the virtual circuit, the request is then serviced by provisioning (and maintaining) the requested virtual circuit. Servicing the request preferably includes actions such as provisioning, maintaining, and restoring the virtual circuit, using the requested parameters.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07633949",
	"publication_date": "2009-12-15",
	"application_number": "11111513",
	"application_date": "2005-04-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network device setup utility",
	"summary": "",
	"abstract": "A network device setup utility gathers network configuration information at a computing device, displays network-device-installation instructions; and configures the network device by sending the gathered network configuration information from the computing device to the network device. The gathered network configuration information may include a type of Internet connection, such as DHCP, static IP, dynamic PPPoE, or Static PPPoE. The gathered network configuration information includes an Internet Service Provider account name and password. The network-device-installation instructions may include a customizable graphical depiction of the network device and may provide ordered step-by-step instructions for connecting a network cable and a power cable to the network device. Configuring the network device, which may be a router, may include confirming Internet connectivity.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07565418",
	"publication_date": "2009-07-21",
	"application_number": "11457763",
	"application_date": "2006-07-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Reducing overhead when setting up multiple virtual circuits using signaling protocols",
	"summary": "",
	"abstract": "Setting up a group of virtual circuits using a single set up message request. In an embodiment, fewer than all of the virtual circuits in the group are immediately provisioned, and the remaining virtual circuits are placed in an inactive status by appropriate configuration of all the devices in the path of the group of virtual circuits. Each of the inactive virtual circuits can be activated (complete provisioning) as and when required. The bandwidth overhead on the networks is reduced as fewer signaling messages would be used in provisioning several virtual circuits. The parsing overhead is reduced on the devices processing the signaling messages as a result.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07512065",
	"publication_date": "2009-03-31",
	"application_number": "09976004",
	"application_date": "2001-10-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Restartable spanning tree for high availability network systems",
	"summary": "",
	"abstract": "A method and apparatus for continuing the operation of a spanning tree protocol at a network device despite crashes or failures at that device is disclosed. The network device includes a plurality of line cards having ports for receiving and forwarding messages and a plurality of supervisor cards for processing at least some of those messages. Upon start-up, one of the supervisor cards is designated the active supervisor, while all other supervisor cards are designated standby supervisors. The active supervisor runs the spanning tree protocol (STP). The active supervisor informs the standby supervisors of the states of ports set by the STP. When a crash or failure occurs at the active supervisor, one of the standby supervisors is immediately designated to be the new active supervisor, and the new active supervisor uses the states of ports set by the original STP.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07599284",
	"publication_date": "2009-10-06",
	"application_number": "11130286",
	"application_date": "2005-05-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Rich multi-media format for use in a collaborative computing system",
	"summary": "",
	"abstract": "A system, method, and article of manufacture that allow a document containing custom objects to be shared in a distributed collaborative computer system. This is accomplished by allowing custom objects to be embedded in a document. When the document is to be shared, the document with custom objects is converted to a Rich Multi-Media (RMM) format. Furthermore, the converted document may be shared during a collaborative session among multiple computers. Alternatively, the converted document may be viewed by a user independent of a collaborative session.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07636754",
	"publication_date": "2009-12-22",
	"application_number": "10104170",
	"application_date": "2002-03-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "RPF multi-party reliable transport",
	"summary": "",
	"abstract": "A multi-party reliable transport protocol for use by a higher layer application. A single session source distributes database updates to multiple receivers via a distribution tree. A node desiring to join a session selects a directly-connected node on a path upstream to a source by accessing unicast routing protocol information and sends a u201cJoinu201d message to this upstream neighbor. Each node participating in the scheme handles retransmission requests from its directly-connected downstream neighbors. A supported application provides storage of previously transmitted information for potential retransmission.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07546380",
	"publication_date": "2009-06-09",
	"application_number": "10428879",
	"application_date": "2003-05-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for end-to-end communications tracing",
	"summary": "",
	"abstract": "A method for tracing communications includes receiving trace criteria from a first remote element and determining whether a call signaling message matches the trace criteria. The method includes attaching a trace tag to the call signaling message, if the call signaling message matches the trace criteria. The method further includes transmitting the call signaling message to a second remote element.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07564953",
	"publication_date": "2009-07-21",
	"application_number": "11736157",
	"application_date": "2007-04-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for handling media in a seamless handoff environment",
	"summary": "",
	"abstract": "A method for handling media in a make-before-break handoff between wireless networks is provided that includes communicating with a mobile station to facilitate a session handoff between two call legs of a session. The method also includes identifying a relevant frame of one of the legs, performing a cross correlation operation, generating a delay difference estimate between the two legs, and performing a level difference estimation for the two legs.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07483701",
	"publication_date": "2009-01-27",
	"application_number": "11056843",
	"application_date": "2005-02-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing a handoff leg associated with a preexisting leg in a network environment",
	"summary": "",
	"abstract": "A method for facilitating communications between wireless networks is provided that includes communicating with a mobile station and transferring a communication session from a first wireless link to a second wireless link. The mobile station is operable to negotiate a first wireless link with a first wireless network, to establish a communication session with a device using the first wireless link, and to facilitate a session handoff with a second wireless link with the second wireless network using the second wireless interface. The handoff is enabled by associating the first wireless link to the second wireless link.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07539492",
	"publication_date": "2009-05-26",
	"application_number": "11003205",
	"application_date": "2004-12-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing fault tolerant IP services",
	"summary": "",
	"abstract": "A system and method for providing fault tolerant IP services includes establishing a first communication session between an originating telephony device and an application server, through a primary call manager. Failure of the primary call manager may be detected. A second communication session between the application server and a destination telephony device may be established via a back-up call manager. The first communication and the second communication session may be coupled at the application server to establish two-way communication between the originating telephony device and the destination telephony device.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07602704",
	"publication_date": "2009-10-13",
	"application_number": "10225391",
	"application_date": "2002-08-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for resolving address conflicts in a network",
	"summary": "",
	"abstract": "A system for resolving address conflicts in a network. In an illustrative embodiment, the system includes an address-configuration module that is adapted to assign addresses to one or more devices. The one or more devices are connected to the network via device interfaces. An interface-monitoring module communicates with the address-configuration module. The interface-monitoring module is adapted to determine when an address conflict involving plural addresses occurs and to provide a signal in response thereto. A conflict-resolution module is adapted to selectively terminate one or more device interfaces associated with the plural addresses in response to the signal and based on the addresses and one or more predetermined precedence rules. In a more specific embodiment, the system further employs a user interface for facilitating selectively adjusting the precedence rules. The conflict-resolution module runs one or more routines adapted to implement a static conflict-resolution policy, a longest-prefix policy, a highest-address policy, and/or an interface-identifier policy for Internet Protocol (IP) addresses.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07633855",
	"publication_date": "2009-12-15",
	"application_number": "11265917",
	"application_date": "2005-11-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for obtaining device services on a self-service financial transaction terminal",
	"summary": "",
	"abstract": "A method and system for obtaining ATM device services utilizes a service provider framework in which data is received by an ATM application that indicates there is a need for the performance of an ATM device function. The ATM application issues a request to an XFS manager to get the ATM device service by making a sub-routine call to the XFS manager to get the ATM device service from a service provider. The XFS manager translates the sub-routine call as an entry point into the service provider for processing by the service provider, and a request object associated with the request is instantiated. The service provider is implemented by instantiating an instance of the service provider framework XFS service provider base class and one or more instances of the service provider framework request objects required to process the request. After processing the request, the service provider returns a result to the ATM application.",
	"url": null,
	"owner": "Citicorp Development Center, Inc.",
	"publication_number": "07562348",
	"publication_date": "2009-07-14",
	"application_number": "09703160",
	"application_date": "2000-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for efficiently reducing graphical display data for transmission over a low bandwidth transport protocol mechanism",
	"summary": "",
	"abstract": "The present invention improves the performance of distributed systems by reducing the amount of graphical data transmitted between an application server and a thin client. The encoding technique used for graphical data is adapted in response to the repetitiveness of the graphical data during a particular client-server session. Indexes are maintained that are indicative of this repetitiveness and which identify a particular location in the client's cache memory storing the graphical data. Where the index is not found, but a fuzzy key indicates a strong likelihood that the graphical object is located at the client, the client's persistent storage memory is searched for a file name corresponding to the fuzzy key and which stores the graphical object therein.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07502784",
	"publication_date": "2009-03-10",
	"application_number": "11368235",
	"application_date": "2006-03-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Remote control of a client's off-screen surface",
	"summary": "",
	"abstract": "The performance of distributed systems can be improved when a server remotely controls off-screen surfaces at a client coupled to the server via a communications network. The server instructs the client to form an off-screen surface exhibiting a number of particular attributes. The client selects and allocates a particular memory region and forms the off-screen surface therein, as instructed by the server. The server subsequently provides the client with an indicia of graphical data and instructs the client to locate the graphical data and to copy the data into the off-screen surface. In response to an error condition, the server transmits a duplicate of the off-screen surface to the client with instructions to update the client's on-screen surface using this duplicate surface.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07490166",
	"publication_date": "2009-02-10",
	"application_number": "09866375",
	"application_date": "2001-05-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for prefetching objects for caching using QOS",
	"summary": "",
	"abstract": "The present solution provides a variety of techniques for accelerating and optimizing network traffic, such as HTTP based network traffic. The solution described herein provides techniques in the areas of proxy caching, protocol acceleration, domain name resolution acceleration as well as compression improvements. In some cases, the present solution provides various prefetching and/or prefreshening techniques to improve intermediary or proxy caching, such as HTTP proxy caching. In other cases, the present solution provides techniques for accelerating a protocol by improving the efficiency of obtaining and servicing data from an originating server to server to clients. In another cases, the present solution accelerates domain name resolution more quickly. As every HTTP access starts with a URL that includes a hostname that must be resolved via domain name resolution into an IP address, the present solution helps accelerate HTTP access. In some cases, the present solution improves compression techniques by prefetching non-cacheable and cacheable content to use for compressing network traffic, such as HTTP. The acceleration and optimization techniques described herein may be deployed on the client as a client agent or as part of a browser, as well as on any type and form of intermediary device, such as an appliance, proxying device or any type of interception caching and/or proxying device.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07584294",
	"publication_date": "2009-09-01",
	"application_number": "11685133",
	"application_date": "2007-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for sharing compression histories between multiple devices",
	"summary": "",
	"abstract": "Systems and methods of storing previously transmitted data and using it to reduce bandwidth usage and accelerate future communications are described. By using algorithms to identify long compression history matches, a network device may improve compression efficiently and speed. A network device may also use application specific parsing to improve the length and number of compression history matches. Further, by sharing compression histories and compression history indexes across multiple devices, devices can utilize data previously transmitted to other devices to compress network traffic. Any combination of the systems and methods may be used to efficiently find long matches to stored data, synchronize the storage of previously sent data, and share previously sent data among one or more other devices.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07532134",
	"publication_date": "2009-05-12",
	"application_number": "11685161",
	"application_date": "2007-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods of using application and protocol specific parsing for compression",
	"summary": "",
	"abstract": "Systems and methods of storing previously transmitted data and using it to reduce bandwidth usage and accelerate future communications are described. By using algorithms to identify long compression history matches, a network device may improve compression efficiently and speed. A network device may also use application specific parsing to improve the length and number of compression history matches. Further, by sharing compression histories, compression history indexes and caches across multiple devices, devices can utilize data previously transmitted to other devices to compress network traffic. Any combination of the systems and methods may be used to efficiently find long matches to stored data, synchronize the storage of previously sent data, and share previously sent data among one or more other devices.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07619545",
	"publication_date": "2009-11-17",
	"application_number": "11685157",
	"application_date": "2007-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Delivery of navigation data for playback of audio and video content",
	"summary": "",
	"abstract": "In accordance with the present invention a filtering process is based on the output side of a multimedia decoder. A navigator, located at a server system, monitors the current play position of multimedia content at a consumer system and compares that position with navigation objects. Each navigation object defines a start position, a stop position, and a filtering action to perform on the portion of the multimedia content that begins at the start position and ends at the stop position. When the current play position falls within the portion of multimedia content defined by a particular navigation object, the navigator sends the filtering action to the consumer system for processing. Filtering actions include skipping, muting, reframing, etc., the portion of multimedia content defined by a navigation object. Alternatively, the navigator may be located at a consumer system and the server system may provide access to the navigation objects (e.g. download) so that the consumer system monitors and filters the multimedia content based on the received navigation objects. A variety of systems may be used to implement the present invention, such as computer systems (consumer and server), television systems, and audio systems.",
	"url": null,
	"owner": "Clearplay Inc.",
	"publication_number": "07526784",
	"publication_date": "2009-04-28",
	"application_number": "11120628",
	"application_date": "2005-05-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multimedia content navigation and playback",
	"summary": "",
	"abstract": "In accordance with the present invention, a filtering process is based on the output side of a multimedia decoder. A navigator monitors the current play position of the multimedia content and compares that position with navigation objects. Each navigation object defines a start position, a stop position, and an filtering action to perform on the portion of the multimedia content that begins at the start position and ends at the stop position. When the current play position falls within the portion of multimedia content defined by a particular navigation object, the navigator activates the filtering action that was assigned to the navigation object. Filtering actions include skipping, muting, reframing, etc., the portion of multimedia content defined by a navigation object. A variety of systems may be used to implement the present invention, such as computer systems (consumer and server), television systems, and audio systems.",
	"url": null,
	"owner": "Clearplay Inc.",
	"publication_number": "07577970",
	"publication_date": "2009-08-18",
	"application_number": "11074908",
	"application_date": "2005-03-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Delivery of navigation data for playback of audio and video content",
	"summary": "",
	"abstract": "In accordance with the present invention a filtering process is based on the output side of a multimedia decoder. A navigator, located at a server system, monitors the current play position of multimedia content at a consumer system and compares that position with navigation objects. Each navigation object defines a start position, a stop position, and a filtering action to perform on the portion of the multimedia content that begins at the start position and ends at the stop position. When the current play position falls within the portion of multimedia content defined by a particular navigation object, the navigator sends the filtering action to the consumer system for processing. Filtering actions include skipping, muting, reframing, etc., the portion of multimedia content defined by a navigation object. Alternatively, the navigator may be located at a consumer system and the server system may provide access to the navigation objects (e.g. download) so that the consumer system monitors and filters the multimedia content based on the received navigation objects. A variety of systems may be used to implement the present invention, such as computer systems (consumer and server), television systems, and audio systems.",
	"url": null,
	"owner": "Clearplay, Inc.",
	"publication_number": "07543318",
	"publication_date": "2009-06-02",
	"application_number": "11736312",
	"application_date": "2007-04-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Internet protocol (IP) phone with search and advertising capability",
	"summary": "",
	"abstract": "A software platform in an Internet Protocol (IP) phone having the ability to be used with different communication infrastructures such as broadband, wireless communication and Plain Old Telephone System (POTS) service. Further, the software platform in the IP phone has the ability to be used with different applications operating on the IP phone. Further, the IP phone has the ability to perform additional functionality than traditional Public Switched Telephone Network (PSTN) phones, such as searches and advertising, given its ability to converge voice and data within a single terminal.",
	"url": null,
	"owner": "Commuca, Inc.",
	"publication_number": "07525955",
	"publication_date": "2009-04-28",
	"application_number": "11082361",
	"application_date": "2005-03-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Destination systems and methods for performing data replication",
	"summary": "",
	"abstract": "Performing data management operations on replicated data in a computer network. Log entries are generated for data management operations of an application executing on a source system. Consistency point entries are used to indicate a time of a known good, or recoverable, state of the application. A destination system is configured to process a copy of the log and consistency point entries to replicate data in a replication volume, the replicated data being a copy of the application data on the source system. When the replicated data represents a known good state of the application, as determined by the consistency point entries, the destination system(s) may perform a storage operation (e.g., snapshot, backup) to copy the replicated data and to logically associate the copied data with a time information (e.g., time stamp) indicative of the source system time when the application was in the known good state.",
	"url": null,
	"owner": "CommVault Systems, Inc.",
	"publication_number": "07617253",
	"publication_date": "2009-11-10",
	"application_number": "11640824",
	"application_date": "2006-12-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Pathname translation in a data replication system",
	"summary": "",
	"abstract": "Performing data management operations on replicated data in a computer network. Log entries are generated for data management operations of an application executing on a source system. Consistency point entries are used to indicate a time of a known good, or recoverable, state of the application. A destination system is configured to process a copy of the log and consistency point entries to replicate data in a replication volume, the replicated data being a copy of the application data on the source system. When the replicated data represents a known good state of the application, as determined by the consistency point entries, the destination system(s) may perform a storage operation (e.g., snapshot, backup) to copy the replicated data and to logically associate the copied data with a time information (e.g., time stamp) indicative of the source system time when the application was in the known good state.",
	"url": null,
	"owner": "CommVault Systems, Inc.",
	"publication_number": "07636743",
	"publication_date": "2009-12-22",
	"application_number": "11640830",
	"application_date": "2006-12-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for performing a snapshot and for restoring data",
	"summary": "",
	"abstract": "The present invention relates to a method for tracking a plurality of snapshots of an information store. The present invention comprises performing a first snapshot of an information store that indexes the contents of the information store, copying the contents of the information store to a first storage device, using the first snapshot, and updating a replication volume table indicating the storage of the contents of the first information store using the first snapshot on the first storage device. A second snapshot is performed of the information store that indexes the contents of the information store, the contents of the information store are copied to a second storage device using the second snapshot and the replication volume table is updated to indicate the storage of the contents of the first information store using the second snapshot on the second storage device.",
	"url": null,
	"owner": "CommVault Systems, Inc.",
	"publication_number": "07529782",
	"publication_date": "2009-05-05",
	"application_number": "10990336",
	"application_date": "2004-11-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for performing an image level snapshot and for restoring partial volume data",
	"summary": "",
	"abstract": "The present invention relates to a method for performing an image level copy of an information store. The present invention comprises performing a snapshot of an information store that indexes the contents of the information store, retrieving data associated with the contents of the information store from a file allocation table, copying the contents of the information store to a storage device based on the snapshot, and associating the retrieved data with the copied contents to provide file system information for the copied contents.",
	"url": null,
	"owner": "CommVault Systems, Inc.",
	"publication_number": "07539707",
	"publication_date": "2009-05-26",
	"application_number": "10990353",
	"application_date": "2004-11-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for monitoring application data in a data replication system",
	"summary": "",
	"abstract": "Performing data management operations on replicated data in a computer network. Log entries are generated for data management operations of an application executing on a source system. Consistency point entries are used to indicate a time of a known good, or recoverable, state of the application. A destination system is configured to process a copy of the log and consistency point entries to replicate data in a replication volume, the replicated data being a copy of the application data on the source system. When the replicated data represents a known good state of the application, as determined by the consistency point entries, the destination system(s) may perform a storage operation (e.g., snapshot, backup) to copy the replicated data and to logically associate the copied data with a time information (e.g., time stamp) indicative of the source system time when the application was in the known good state.",
	"url": null,
	"owner": "CommVault Systems, Inc.",
	"publication_number": "07617262",
	"publication_date": "2009-11-10",
	"application_number": "11640829",
	"application_date": "2006-12-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Directory services searching system and methods",
	"summary": "",
	"abstract": "A method and apparatus for applying an application of a database service, such as X.500 or LDAP, to a relational database, a database design and use of the database to perform such services. Specifically addressed is the problem of database searching, particularly search speed and complexity of search. The method and apparatus concern searching a directory service database, in which the scope of search area is initially prescribed and/or in which a filter is applied over the search area. Moreover, in dealing with an alias during a search, a unique set of areas is found which define areas of a search tree that need to be searched. A FLAG column is used to indicate if an alias points inside a subtree. The method and apparatus also enable single pass resolution in any one of a search, filter or subtree search of a directory service, the method and apparatus including the use of a path column to simultaneously apply an arbitrary filter over an arbitrary subtree. Further disclosed is a method and apparatus of retrieving data from a directory service database, which includes conducting search, collecting all entries that need to be retrieved, and retrieving entries in parallel.",
	"url": null,
	"owner": "Computer Associates Think, Inc.",
	"publication_number": "07620623",
	"publication_date": "2009-11-17",
	"application_number": "10336769",
	"application_date": "2003-01-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Metadata in directory service systems and methods",
	"summary": "",
	"abstract": "In the application of metadata to directory services, such as X.500 or LDAP, a u2018PROPERTY tableu2019 is provided in which object name and parent name is added to the u2018principal designu2019. Other arrangements of tables and attributes provide for the achievement of the system goals.",
	"url": null,
	"owner": "Computer Associates Think, Inc.",
	"publication_number": "07634513",
	"publication_date": "2009-12-15",
	"application_number": "10174824",
	"application_date": "2002-06-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for event correlation in service level management (SLM)",
	"summary": "",
	"abstract": "Method and apparatus for service level management, wherein business processes are composed of services. A state of the service is defined by one or more service parameters, and the service parameters depend upon performance of network components that support the service, e.g., component parameters. The state of the service may depend, for example, on a collection of service parameter values for availability, reliability, security, integrity and response time. A service level agreement is a contract between a supplier and a customer that identifies services supported by a network, service parameters for the services, and service levels (e.g., acceptable levels) for each service parameter.",
	"url": null,
	"owner": "Computer Associates Think, Inc.",
	"publication_number": "07600007",
	"publication_date": "2009-10-06",
	"application_number": "09578156",
	"application_date": "2000-05-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for implementing a management component that exposes attributes",
	"summary": "",
	"abstract": "Software for providing a management interface comprises a descriptor file comprising at least one type for at least one resource and further comprising at least one attribute for each type. A management component associated with one of the resources describes at least one of the types. The management component is operable to provide a management interface exposing at least one of the attributes associated with each of the one or more types describing the resource.",
	"url": null,
	"owner": "Computer Associates Think, Inc.",
	"publication_number": "07516122",
	"publication_date": "2009-04-07",
	"application_number": "11001848",
	"application_date": "2004-12-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for managing object based clusters",
	"summary": "",
	"abstract": "A method, system, API, GUI, and computer readable media for managing object-based clusters is provided. The method provides a computer executable methodology for discovering, monitoring, and managing object-based clusters. The system provides a computer-based system for facilitating interactions with heterogeneous cluster solutions. The system includes computer components for detecting clusters and supervising detected clusters and/or components.",
	"url": null,
	"owner": "Computer Associates Think, Inc.",
	"publication_number": "07603327",
	"publication_date": "2009-10-13",
	"application_number": "10190759",
	"application_date": "2002-07-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing a relational application domain model",
	"summary": "",
	"abstract": "This disclosure provides a system and method for providing a relational application domain model. In one embodiment, the system is operable to or includes software that is operable to receive a structured query language (SQL) query for one or more services by at least a first of a plurality of resources. The software may be further operable to convert the SQL query into an object-oriented request compatible with at least the first resource and execute the object-oriented request at at least the first resource.",
	"url": null,
	"owner": "Computer Associates Think, Inc.",
	"publication_number": "07542990",
	"publication_date": "2009-06-02",
	"application_number": "10974510",
	"application_date": "2004-10-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mobile satellite communications",
	"summary": "",
	"abstract": "Provided is a mobile satellite transceiver system for communicating with a Global Positioning System (GPS) satellite and a communications satellite. In on implementation, the mobile satellite transceiver system includes a GPS receiver configured to receive communications from the GPS satellite, a satellite modem configured to transmit and receive communications from the communications satellite, and an operating system. In some implementations, the operating system of the mobile satellite transceiver system is configured to send and receive text messages to/from the communications satellite via the satellite modem. In some implementations the mobile satellite transceiver system also includes a Radio Frequency Identification (RFID) interrogator for communicating with RFID tags.",
	"url": null,
	"owner": "Comtech Mobile Datacom Corporation",
	"publication_number": "07592953",
	"publication_date": "2009-09-22",
	"application_number": "11618379",
	"application_date": "2006-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Patient selectable joint arthroplasty devices and surgical tools facilitating increased accuracy, speed and simplicity in performing total and partial joint arthroplasty",
	"summary": "",
	"abstract": "Disclosed herein are methods, compositions and tools for repairing articular surfaces repair materials and for repairing an articular surface. The articular surface repairs are customizable or highly selectable by patient and geared toward providing optimal fit and function. The surgical tools are designed to be customizable or highly selectable by patient to increase the speed, accuracy and simplicity of performing total or partial arthroplasty.",
	"url": null,
	"owner": "ConforMIS, Inc.",
	"publication_number": "07618451",
	"publication_date": "2009-11-17",
	"application_number": "10724010",
	"application_date": "2003-11-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Surgical tools facilitating increased accuracy, speed and simplicity in performing joint arthroplasty",
	"summary": "",
	"abstract": "Disclosed herein are tools for repairing articular surfaces repair materials and for repairing an articular surface. The surgical tools are designed to be customizable or highly selectable by patient to increase the speed, accuracy and simplicity of performing total or partial arthroplasty.",
	"url": null,
	"owner": "ConforMIS, Inc.",
	"publication_number": "07534263",
	"publication_date": "2009-05-19",
	"application_number": "11002573",
	"application_date": "2004-12-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for multiple mode voice and data communications using intelligenty bridged TDM and packet buses and methods for performing telephony and data functions using the same",
	"summary": "",
	"abstract": "A video conferencing method is provided in a system for managing voice and data communications to a plurality of users. Computer data is communicated between the system and one of a plurality of computers coupled to the system over one or more packet buses. Voice data is communicated between the system and one of a plurality of telephone devices coupled to the system. The voice data is coupled to a TDM bus in the system, and the voice data and/or the computer data are coupled from the TDM bus to a digital transmission link. Video and audio data are coupled between the system and a video conferencing unit and coupled to the TDM bus. The video and audio data are coupled from the TDM bus to a digital transmission link of the telecommunications network. A video conference participant participates in a video conference with the video conferencing unit over the digital transmission link, while concurrently a user participates in a telephone call with one of the telephone devices over the digital transmission link.",
	"url": null,
	"owner": "Converged Data Solutions LLC",
	"publication_number": "07586908",
	"publication_date": "2009-09-08",
	"application_number": "10325763",
	"application_date": "2002-12-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for a functional extensibility framework",
	"summary": "",
	"abstract": "There is disclosed a framework which utilizes contemporaneous assembly of processing modules, strong typing, and integrated caching to assemble processing elements from different sources robustly and minimize system failures as software modules are upgraded.",
	"url": null,
	"owner": "Convergys CMG Utah, Inc.",
	"publication_number": "07590980",
	"publication_date": "2009-09-15",
	"application_number": "11151930",
	"application_date": "2005-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for secure delivery and rights management of digital content",
	"summary": "",
	"abstract": "A secure distribution system utilizes a content viewer that consists of an applet that is downloaded to a user's conventional browser when the user logs into a publisher's server. The content viewer requests a selected document from the server by referring to the document name or URL. The server retrieves the document and forwards it to the viewer in encrypted form. The viewer then computes a document identifier from the encrypted document and uses the identifier to request a key in order to decrypt the document. The key is forwarded from the server to the viewer that then decrypts the document and displays it in the viewer. Since the document is processed by the viewer and displayed only in a window associated with the viewer, none of the conventional browser functions has to be disabled. Further, since the document is downloaded in encrypted form, it cannot be stored or forwarded using the conventional browser.",
	"url": null,
	"owner": "Copyright Clearance Center, Inc.",
	"publication_number": "07493499",
	"publication_date": "2009-02-17",
	"application_number": "10443261",
	"application_date": "2003-05-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method of managing access to web services",
	"summary": "",
	"abstract": "A gateway module for managing functionality for one or more web services is provided. The web services gateway module comprises a client application interface unit for receiving communication from a client application over a standard protocol, a communication processor for processing the communication for a web service, and a web services interface unit for delegating the processed communication to the web service.",
	"url": null,
	"owner": "Corel Corporation",
	"publication_number": "07640348",
	"publication_date": "2009-12-29",
	"application_number": "10252871",
	"application_date": "2002-09-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System control and management of passive optical networks",
	"summary": "",
	"abstract": "A highly reliable, carrier class passive optical network and associated devices which employs multiple instances of operating software in host systems, as well as mechanisms to automatically determine whether an individual OLT device has entered or left the system without disruption to overall system operation.",
	"url": null,
	"owner": "Cortina Systes, Inc.",
	"publication_number": "07606489",
	"publication_date": "2009-10-20",
	"application_number": "11420467",
	"application_date": "2006-05-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for transmitting files from a sender to a receiver in a television distribution network",
	"summary": "",
	"abstract": "A system and method for transmitting files from a sender to a receiver in a television distribution system, for example, a cable television distribution network, is provided. The files are transmitted without the need for transmitting a directory over an out of band communications link. In an exemplary embodiment, a filename corresponding to a file to be transmitted is provided to a transform. The transform calculates a PID based on the filename. The calculated PID is incorporated into the MPEG2 data stream carrying the corresponding file contents. When an application program running in the receiver requests a file, the filename of the requested file is provided to a transform operating in the receiver. The transmitter and receiver transforms are identical. The transform provides a corresponding PID at its output. The PID is used to tune a PID filter on the receiver end such that the requested file is selected from the incoming MPEG bit stream for processing by the processor.",
	"url": null,
	"owner": "Cox Communications, Inc",
	"publication_number": "07594254",
	"publication_date": "2009-09-22",
	"application_number": "10805728",
	"application_date": "2004-03-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Customer feedback reporting",
	"summary": "",
	"abstract": "Systems and methods are disclosed for reporting customer feedback. The disclosed systems and methods may include extracting data in response to content selections by the customer, wherein the extracted data indicates customer preference data based on a content selection. Furthermore, the disclosed systems and methods may include storing the extracted data into a data repository and categorizing the extracted data for use by the content operator. Moreover, the disclosed systems and methods may include receiving a query requesting categorized data from the data repository and reporting the categorized data to the content operator.",
	"url": null,
	"owner": "Cox Communications, Inc.",
	"publication_number": "07567983",
	"publication_date": "2009-07-28",
	"application_number": "11508029",
	"application_date": "2006-08-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Demand-cast system and bandwidth management for delivery of interactive programming",
	"summary": "",
	"abstract": "One embodiment of the present invention comprises a system that includes a session manager (SM) and a transport stream generator (TSG) within a distribution control center. The SM monitors and controls usage of demand-cast stream bandwidth within the distribution network. The TSG receives information from the SM on each demand-cast stream. The information includes which set top terminals, if any, are currently acquiring the stream. The TSG uses the information to control the demand-cast streams multiplexed into the transport stream for distribution to the set top terminals.",
	"url": null,
	"owner": "Cox Communications, Inc.",
	"publication_number": "07607152",
	"publication_date": "2009-10-20",
	"application_number": "09538562",
	"application_date": "2000-03-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for improving the efficiency of state information transfer over a wireless communications network",
	"summary": "",
	"abstract": "The present invention is directed to a system and method for managing state information related to an interactive application to accommodate one or more users participating in an interactive application session, wherein the state information comprises local state information specific to each of the one or more user's unique view of the interactive application and global state information. The system of the present invention may comprise a telecommunications network; an application server in communication with the telecommunications network for managing the global state information relative to all of the users participating in the interactive application session; and at least one mobile client device in communication with the application server over the telecommunications network for managing the local state information for each of the one or more users. The method of the present invention may comprise the steps of structuring the state information for optimized delivery over the telecommunications network; and transferring the state information over the telecommunications network.",
	"url": null,
	"owner": "Cricket Communications, Inc.",
	"publication_number": "07574493",
	"publication_date": "2009-08-11",
	"application_number": "11200599",
	"application_date": "2005-08-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application-layer monitoring of communication between one or more database clients and one or more database servers",
	"summary": "",
	"abstract": "One embodiment includes a system for application-layer monitoring of communication between one or more database clients and one or more database servers. The system includes one or more decoders residing at a decoding layer above a network layer. The decoders reside at a first network location between one or more database clients residing at one or more second network locations and one or more database servers residing at one or more third network locations. The decoders receive database messages communicated from the database clients and intended for the database servers and database messages communicated from the database servers and intended for the database clients, decode the database messages, and extract query-language statements from the database messages. The system also includes a monitoring application residing at an application layer above the decoding layer. The monitoring application resides at the first network location. The monitoring application receives query-language statements extracted at the decoders and records observations on the database messages based on the query-language statements extracted at the decoders.",
	"url": null,
	"owner": "Crossroads Systems, Inc.",
	"publication_number": "07509330",
	"publication_date": "2009-03-24",
	"application_number": "10934887",
	"application_date": "2004-09-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Providing application-layer functionality between one or more database clients and one or more database servers",
	"summary": "",
	"abstract": "One embodiment includes a system providing application-layer functionality between one or more database clients and one or more database servers. The system includes one or more decoders residing at a decoding layer above a network layer. The decoders reside at a first network location between one or more database clients residing at one or more second network locations and one or more database servers residing at one or more third network locations. The decoders receive database messages communicated from the database clients and intended for the database servers and database messages communicated from the database servers and intended for the database clients, decode the database messages, and extract query-language statements from the database messages. The system also includes an application residing at an application layer above the decoding layer. The application resides at the first network location. The application receives and processes query-language statements extracted at the decoders.",
	"url": null,
	"owner": "Crossroads Systems, Inc.",
	"publication_number": "07529753",
	"publication_date": "2009-05-05",
	"application_number": "10933790",
	"application_date": "2004-09-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for authentication of network usage",
	"summary": "",
	"abstract": "Apparatus for collecting subscription data for subscribers in a telecommunications system for use in metering usage of network resources includes a data storage device operatively arranged to store subscriber records, and a data processor. The subscriber records include a plurality of fields including a group field for storing data indicative of group membership of a subscriber. The data processor is operatively arranged to request access to a remotely accessible information source on the basis of identification data. Responsive to receipt of a response from the remotely accessible information source, the data processor performs a first storage action in respect of a response of a first type and performs a second storage action in respect of a response of a second type. Responsive to receipt of group membership data from the subscriber, the data processor is operatively arranged to identify a remotely accessible information source corresponding to the group and to request access thereto on the basis of identification data associated with the received group membership data. Also, responsive to a response of the first type received from the remotely accessible information source, the data processor is operatively arranged to update the group field in the subscriber record so as to indicate authenticated membership of the group identified in the received group membership data.",
	"url": null,
	"owner": "CVON Innovations Ltd.",
	"publication_number": "07574201",
	"publication_date": "2009-08-11",
	"application_number": "11888852",
	"application_date": "2007-08-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for asynchronous continuous-level-of-detail texture mapping for large-scale terrain rendering",
	"summary": "",
	"abstract": "A multi-resolution texture mapping system suitable for large scale terrain rendering using commodity graphics processing units (GPU). The GPU vertex and fragment shaders are used to implement the clip-mapping functionality. The terrain texture is represented by a combination of a mip-map and a multi-level clip-map having independent origins and off-set values. The independent clip-map levels may be independently updated. The offset values allow the origins to be associated with a reference point in a scene to be rendered. The desired clip-map level to be used to render a particular fragment may be determined using the base 2 logarithm of the maximum screen-space derivative of the source texture required by the terrain geometry to be drawn. If the desired clip-map level is non-integer and lies between two clip-map levels, appropriate texel data is created by interpolating between the bounding clip-map levels. This interpolation allows a multi-resolution texture mapping to be displayed.",
	"url": null,
	"owner": "D & S Consultants, Inc.",
	"publication_number": "07626591",
	"publication_date": "2009-12-01",
	"application_number": "11601530",
	"application_date": "2006-11-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for facilitating automated interaction of marketable retail orders and professional trading interest at passively determined prices",
	"summary": "",
	"abstract": "A method and system for an automated trading network that continuously collects invisible, anonymous, binding orders and indications of interest to buy and sell specific equity securities at variable, passively determined prices and, then, executes trades based on these collected orders and indications. In general, the binding orders are collected from retail broker-dealers and the binding indications are collected from institutions. The variable, passively determined, non-discrete prices can be linked to the National Best Bid or Offer (NBBO) for each security, or some other prevailing market indicator, at the time a trade is executed. In an embodiment of the method and system, marketable retail orders which match with one or more collected institutional indications, are routed from a Dynamic Order Router (DOR) at each broker-dealer to a Central Order-Match Box (COMB) to be executed against the one or more matched collected institutional indications. The COMB also manages most other aspects of transactions in the method and system and continuously executes trades against the collected institutional indications at improved prices relative to the NBBO.",
	"url": null,
	"owner": "D. E. Shaw & Company",
	"publication_number": "07627516",
	"publication_date": "2009-12-01",
	"application_number": "11249495",
	"application_date": "2005-10-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for interoperability application driven error management and recovery among intermittently coupled interoperable electronic devices",
	"summary": "",
	"abstract": "System, device, method, and computer program and computer program products for providing communicating between devices having similar or dissimilar characteristics and facilitating seamless interoperability between them. Computer program software and methods of and systems and devices for sharing of content, applications, resources and control across similar and dissimilar permanently or intermittently connected electronic devices. Devices, systems, appliances, and the like communicating and/or interoperating within the framework provided. Interoperability application driven error recovery system, method, and model. System and method keeps track of shared state and provides mechanism for communications errors to be relayed to an application and for application to relay recovery information directly to communications processing units. Thus applications running across devices can seamlessly recover from intermittent complete losses of communications between cooperating devices and recovery of shared state of devices when connection is restored even where previously lost device has itself lost all its application state.",
	"url": null,
	"owner": "DARTdevices Interop Corporation",
	"publication_number": "07571346",
	"publication_date": "2009-08-04",
	"application_number": "11149077",
	"application_date": "2005-06-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System method and model for maintaining device integrity and security among intermittently connected interoperating devices",
	"summary": "",
	"abstract": "System, device, method, and computer program and computer program products for providing communicating between devices having similar or dissimilar characteristics and facilitating seamless interoperability between them. Computer program software and methods of and systems and devices for sharing of content, applications, resources and control across similar and dissimilar permanently or intermittently connected electronic devices. Devices, systems, appliances, and the like communicating and/or interoperating within the framework provided. An interoperability security model, method, and system, such as a Dart Security model, method and system provide an infrastructure for protecting the integrity of a device and its content from viral, other malicious, or accidental damage.",
	"url": null,
	"owner": "DARTDevices Interop Corporation",
	"publication_number": "07596227",
	"publication_date": "2009-09-29",
	"application_number": "11149078",
	"application_date": "2005-06-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System method and model for social security interoperability among intermittently connected interoperating devices",
	"summary": "",
	"abstract": "System, device, method, and computer program and computer program products for providing communicating between devices having similar or dissimilar characteristics and facilitating seamless interoperability between them. Computer program software and methods of and systems and devices for sharing of content, applications, resources and control across similar and dissimilar permanently or intermittently connected electronic devices. Devices, systems, appliances, and the like communicating and/or interoperating within the framework provided. Social security interoperability model and method, such as Dart Social Security Interoperability, provide particularly method for forming webs of security between teams of intermittently connected devices. Foundation for social security is use of social synchronization to spread unique identifiers along with allowed access rights which travel transitively from device to device. Devices which have never communicated will find that they are part of team which are allowed to interoperate with certain access rights without need for further gathering permissions.",
	"url": null,
	"owner": "Dartdevices Interop Corporation",
	"publication_number": "07600252",
	"publication_date": "2009-10-06",
	"application_number": "11149075",
	"application_date": "2005-06-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for using storage domains for controlling data in storage area networks",
	"summary": "",
	"abstract": "Storage domains respectively have associated configurable storage management properties that are separate from individual physical capabilities of physical storage resources available through a SAN. Logical volumes are created and allocated to hosts in the context of the storage domains. The presentation of such logical volumes to hosts accommodates storage resource access by hosts without requiring the hosts to be configured according to the requirements of the physical storage resources. Furthermore, allocation of logical volumes to hosts in the context of the storage domains entails provision of storage resources according to the respective storage management properties of the storage domains even though the logical volumes are created from physical storage resources in common.",
	"url": null,
	"owner": "Datacore Software Corporation",
	"publication_number": "07568037",
	"publication_date": "2009-07-28",
	"application_number": "11797955",
	"application_date": "2007-05-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for allocating shared computing infrastructure for application server-based deployments",
	"summary": "",
	"abstract": "A shared computing infrastructure includes a plurality of computing engines, applications servers, and computing domains. A broker component executes a method for dynamically allocating the computing engines among the computing domains. The allocation method begins with the step of determining an expected number of computing engines to be allocated to each of the computing domains as a function of a predetermined service policy and a predicted demand for the domain While fewer than the expected number of computing engines has been allocated to each domain, the computing domains are sequentially selecting as a function of predetermined domain priorities. Unallocated computing engines are identified, and the unallocated computing engines are allocated to each selected computing domain according to predetermined selection rules for the domain. During an allocation improvement step, allocations among the computing domains are further adjusted to maximize a fitness statistic computed for the allocations.",
	"url": null,
	"owner": "DataSynapse, Inc.",
	"publication_number": "07584281",
	"publication_date": "2009-09-01",
	"application_number": "11487130",
	"application_date": "2006-07-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for managing wireless communication",
	"summary": "",
	"abstract": "Systems and methods for managing wireless communication between information handling system/s and one or more peripherals or other external devices, and that may be implemented in one embodiment to provide a virtual wireless docking environment for a portable information handling system and associated wired and wireless attached devices and peripherals.",
	"url": null,
	"owner": "Dell Products L.P.",
	"publication_number": "07590075",
	"publication_date": "2009-09-15",
	"application_number": "11106779",
	"application_date": "2005-04-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for information handling system software registration code management",
	"summary": "",
	"abstract": "Registration codes associated with applications loaded on an information handling system are stored in a registration code table by a registration code module and retrieved for use when needed by an application to perform a restricted function, such as install or maintenance functions. The registration code table is populated at manufacture of the information handling system or automatically based on user preferences as a user inputs registration codes. The registration code table is secured with authentication information on the information handling system or, alternatively, at a network location accessible by the information handling system.",
	"url": null,
	"owner": "Dell Products, L.P.",
	"publication_number": "07623684",
	"publication_date": "2009-11-24",
	"application_number": "11184222",
	"application_date": "2005-07-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for domain name registration and a corresponding apparatus",
	"summary": "",
	"abstract": "The disclosed method and apparatus makes possible the registration of domain names in one or more registration state-types, each registration state-type being associated with a set of functional rules or parameters. Certain of the registration state-types are allowed to have priority over other of the registration state-types, meaning that a domain name registered in a low priority registration state-type may be superseded or overwritten by an intervening registration to the same or a different registrant who requests a higher priority registration. Interplay of the registration state-types and parameters provides for a broad range of registration services and flexibility in the means by which consideration is obtained in exchange for registration services.",
	"url": null,
	"owner": "Demand Media, Inc.",
	"publication_number": "07539774",
	"publication_date": "2009-05-26",
	"application_number": "11295122",
	"application_date": "2005-12-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for using a hyperlink, banner, or graphical icon to initiate the overlaying of an object on a window",
	"summary": "",
	"abstract": "A method and system for overlaying an object in a window of a software application where an overlay plane is composed of at least one object and the overlay plane is overlaid with the window using either a layering feature of the software application or by directly compositing the overlay plane with the window using enhanced functionality not included in the software application. The overlaying of the overlay plane in relation to the window does not depend on a cursor or pointing device designated position but may rather, for example, be arbitrarily placed or may be positioned in proximity to the text or graphic link used to initiate the overlaying process. The method and system may be implemented using a plugin-control for the software application.",
	"url": null,
	"owner": "DG FastChannel, Inc.",
	"publication_number": "07559034",
	"publication_date": "2009-07-07",
	"application_number": "09692498",
	"application_date": "2000-10-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Conferencing architecture employing media servers and enhanced session initiation protocol",
	"summary": "",
	"abstract": "A conferencing system that can access advanced conferencing features while following essentially the same call flow as conventional conferencing systems. The conferencing system includes a computer network, and at least one conferencing application server, at least one media server, and at least one user agent connected to the network. The conferencing application server establishes and manages multimedia conferences by engaging in Session Initiation Protocol (SIP) signaling with the user agents and the media server. Once the conference is established, the media server generates multimedia data such as audio data and conveys the data to the conference participants. In order to access advanced conferencing features, the conferencing system employs an enhanced SIP signaling technique including a conferencing Application Programming Interface (API) implemented by incorporating Extensible Mark-up Language (XML) messages in the bodies of respective SIP request/response messages. The XML messages are incorporated in the SIP request/response message bodies to convey conference specific commands and/or parameters that cannot be easily described via the Session Description Protocol (SDP).",
	"url": null,
	"owner": "Dialogic Corporation",
	"publication_number": "07590692",
	"publication_date": "2009-09-15",
	"application_number": "10191788",
	"application_date": "2002-07-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Financial transaction processing system and method",
	"summary": "",
	"abstract": "A financial transaction processing system () enables processing transactions from various types of card activated terminal devices () which communicate using a variety of electronic message formats. The transaction processing system may operate to authorize transactions internally using information stored in a relational database () or may communicate with external authorization systems (). The transaction processing system includes among its software components message gateway routers (MGRs) () which operate using information stored in the relational database to convert messages from a variety of external message formats used by the external devices and authorization systems, to a common internal message format used within the system. The system further uses database information to internally route messages to message processing programs (MPPs) () which process messages and generate messages to the external devices and authorization systems. The MGR also converts the outgoing messages from the internal message format to the external message formats which can be interpreted by the external devices and systems to which the messages are directed.",
	"url": null,
	"owner": "Diebold, Incorporated",
	"publication_number": "07627523",
	"publication_date": "2009-12-01",
	"application_number": "10192566",
	"application_date": "2002-07-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for information content delivery relating to an object",
	"summary": "",
	"abstract": "A method is provided for delivering information content relating to an object. A first image of a pattern on the object is received. An outer border of the first image is detected, and a second image framed by the outer border is located. The second image is decoded to determine a digital identifier. Information content relating to the digital identifier is delivered.",
	"url": null,
	"owner": "Disney Enterprises, Inc.",
	"publication_number": "07480422",
	"publication_date": "2009-01-20",
	"application_number": "11249318",
	"application_date": "2005-10-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enhancing user experience during handoffs in wireless communication",
	"summary": "",
	"abstract": "A method for performing a handoff for a mobile device from a first radio station to a second radio station. The method includes buffering a first media data set that is received through the first radio station. The method also includes cross-correlating a tail portion of the first media data set and a head portion of a second media data set to generate a cross-correlated media data set, if the second media data set is received through the second radio station. The method further includes synthesizing, using a modeled portion of the first media data set, a synthesized media data set, if no media data is received through the second radio station within a threshold. The method further includes extending the first media data set to generate an extended media data set, if no media data is received through the second radio station at the threshold.",
	"url": null,
	"owner": "DiVitas Networks, Inc.",
	"publication_number": "07546125",
	"publication_date": "2009-06-09",
	"application_number": "11537985",
	"application_date": "2006-10-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for deterministically performing active-active failover of redundant servers in a network storage appliance",
	"summary": "",
	"abstract": "An apparatus for deterministically performing active-active failover of redundant server blades hot-pluggable into a backplane of a network storage appliance chassis is disclosed. Each server monitors the other's heartbeat on a respective path in the backplane. Other paths between the two servers on the backplane enable one server to reliably kill the other server and take over its identity on the network in response to detecting a stopped heartbeat of the other server. The apparatus is superior to a conventional heartbeat link between servers in separate chassis, such as an Ethernet cable, because it is not prone to user removal or damage since the backplane cannot be removed by a user while the appliance is operational and enables each server to know a true heartbeat failure has occurred, as opposed to failure of a conventional external heartbeat link causing each server to each think the other has failed.",
	"url": null,
	"owner": "Dot Hill Systems Corporation",
	"publication_number": "07627780",
	"publication_date": "2009-12-01",
	"application_number": "10893718",
	"application_date": "2004-07-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network storage appliance with an integrated switch",
	"summary": "",
	"abstract": "A network storage appliance including one or more integrated switching devices is disclosed. The appliance includes redundant storage controllers that transfer frames of data between storage devices and host computers. The integrated switching devices include a plurality of I/O ports and a data transfer path between each of the I/O ports for providing simultaneous data transfers between multiple pairs thereof. The switches enable the appliance to simultaneously transfer frames between its I/O ports and storage device I/O ports and/or host I/O ports, thereby providing increased data transfer bandwidth over arbitrated loop configurations. Additionally, the switches are intelligent and may be programmed to achieve improved fault isolation. The appliance may also include servers that include I/O ports coupled to the switches for simultaneously transferring data with the storage controllers and/or I/O ports of devices external to the appliance.",
	"url": null,
	"owner": "Dot Hill Systems Corporation",
	"publication_number": "07565566",
	"publication_date": "2009-07-21",
	"application_number": "10979510",
	"application_date": "2004-11-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Delivering electronic content",
	"summary": "",
	"abstract": "Delivering electronic content includes providing instructions that might cause a computer to collect information including a network address and transmitting the collected information to a receiving computer. The computer that receives the transmitted information selects electronic content based on the received information and sends the selected electronic content to the network address included in the received information. Access to the electronic content might be selectively granted based on criteria.",
	"url": null,
	"owner": "DRM Technologies, LLC",
	"publication_number": "07562150",
	"publication_date": "2009-07-14",
	"application_number": "11889610",
	"application_date": "2007-08-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hang-timer for providing recording instructions",
	"summary": "",
	"abstract": "A hang-timer device is disclosed that is capable of issuing recording instructions to a recording device, such as a digital camera. The hang-timer can measure a static acceleration profile of a wearer of the hang-timer, and based on this static acceleration profile it can issue recording instructions to a recording device. For example, if the static acceleration profile changes from about 1 g to about 0 g, the hang-timer can issue instructions for the recording device to record; additionally, if the profile changes from about 0 g to about 1 g, it can issue instructions to stop recording. Moreover, the hang-timer can issue instructions for the recording device to record some period of time before a hang-time event and some period of time after a hang-time event. Various other such variations on the general notion described above are also disclosed.",
	"url": null,
	"owner": "Drop Zone Corp.",
	"publication_number": "07617069",
	"publication_date": "2009-11-10",
	"application_number": "11325212",
	"application_date": "2006-01-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Configurable business process",
	"summary": "",
	"abstract": "A configurable business process adapted to be created from a user interface includes defining flow tasks that identify value objects and obtaining the value objects used by the flow tasks. The value objects are evaluated using evaluation rules to produce a result. The result is used, in turn, to generate instructions to a system user relating to the value objects. The configurable business process operates through a business flow engine accessible to the system user through the user interface. A business flow configuration file and an adapter configuration file are defined. The adapter configuration file maps components, methods, arguments, and return values using an XML engine. Component APIs and an evaluation rules database are provided. The business flow configuration file defines selected component APIs to be executed to perform a user-defined operation.",
	"url": null,
	"owner": "DST Innovis, Inc.",
	"publication_number": "07577953",
	"publication_date": "2009-08-18",
	"application_number": "10944284",
	"application_date": "2004-09-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer based browsing computer program product, system and method",
	"summary": "",
	"abstract": "A computer based browsing computer program product, system and method arranges a set of information hosted on a computer into a book or a set of books, where each book includes a subset of the set of information, labels each book with a respective portion of the subset of the set of information, and selects a book from the set of books. Selecting the book from the set of books includes steps of displaying the respective portions of the books as a book document image that includes pages which correspond to the respective portions of the books, generating a command for moving through the pages, displaying an animated image of the pages of the book document being at least one of flipped, scrolled, slid and flashed images, and selecting the book when a selected one of the pages containing a selection portion of the book is earlier displayed.",
	"url": null,
	"owner": "E-Book Systems Pte Ltd.",
	"publication_number": "07555724",
	"publication_date": "2009-06-30",
	"application_number": "10765199",
	"application_date": "2004-01-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Inserting value into customer account at point of sale using a customer account identifier",
	"summary": "",
	"abstract": "A method of adding a value to a customer account is provided. A request to add a value to a customer account of a customer is received from a point of sale terminal. Value identification data associated with the value and account identification data associated with the customer account may form part of the request. The customer account identification data may be entered at the point of sale. The request may be associated with a purchase of the value. The value may be caused to be added to the customer account. During subsequent value purchase transactions, additional value may be added to the account.",
	"url": null,
	"owner": "e2Interactive, Inc.",
	"publication_number": "07630926",
	"publication_date": "2009-12-08",
	"application_number": "11290606",
	"application_date": "2005-12-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for ordering goods, services and content over an internetwork using a virtual payment account",
	"summary": "",
	"abstract": "A virtual payment card system for ordering and paying for goods, services and content over an internetwork is disclosed. The virtual payment card system comprises a commerce gateway component () and a credit processing server component (). The virtual payment card system is a secure closed system comprising registered merchants and consumers. A consumer becomes a registered participant by applying for a virtual payment card. Likewise, a merchant becomes registered by applying for a merchant account. A consumer can instantly open an account on-line. That is, the credit processing component () immediately evaluates the consumer's virtual payment card application and assigns a credit limit to the account. Once an account is established, a digital certificate is stored on the registered participant's computer. The consumer can then order a product, i.e., goods, services or content from a merchant and charge it to the virtual payment card. When the product is shipped, the merchant notifies the commerce gateway component (), which in turn notifies the credit processing server which applies the charges to the consumer's virtual card account. The consumer can settle the charges using a prepaid account, a credit card, or by using reward points earned through use of the virtual payment card. A consumer may create sub-account that have additional limitations imposed on the owner of the sub-account.",
	"url": null,
	"owner": "eCharge Corporation",
	"publication_number": "07606760",
	"publication_date": "2009-10-20",
	"application_number": "10671320",
	"application_date": "2003-09-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Business intelligence data repository and data management system and method",
	"summary": "",
	"abstract": "A business intelligence and data management system is disclosed comprising a database for storing multi-dimensional business data from multiple online educational institutions; a usage tracking engine for recording within a user profile the time and duration of access to disparate system features. A reporting engine provides periodic and custom reports and a benchmarking engine facilitates comparison of internal institution data with aggregate data from multiple institutions, to compare student retention, course completion, student satisfaction, and student performance. The reporting engine provides reports on course retention rates, course evaluations, faculty evaluations, enrollment, student performance, and course run rates. The usage tracking engine, benchmarking engine, and reporting engine facilitate determination of best practices to improve student enrollment, student retention, course completion, student performance, and student satisfaction. A custom query engine facilitates freeform searches of business data and a data mining engine provides access to detailed data supporting the periodic reports.",
	"url": null,
	"owner": "Ecollege.com",
	"publication_number": "07512627",
	"publication_date": "2009-03-31",
	"application_number": "11323435",
	"application_date": "2005-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Adaptive execution method for multithreaded processor-based parallel system",
	"summary": "",
	"abstract": "The method significantly improves the performance of the parallel program driven in the multithreaded processor-based parallel system.",
	"url": null,
	"owner": "Electronics and Telecommunications Research Institute",
	"publication_number": "07526637",
	"publication_date": "2009-04-28",
	"application_number": "11453288",
	"application_date": "2006-06-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application programming interface simulator for a data storage system",
	"summary": "",
	"abstract": "Described are techniques for simulation of a data storage system configuration. The simulation state reflects the data storage system configuration in accordance with an application programming interface (API) model. API calls result in reading existing data storage system configuration data and/or modifying the configuration data by execution of one or more low level calls. A daemon may operate in a simulation mode in which the low level calls are simulated rather than resulting in communications with a data storage system when operating in a non-simulation mode. A low level cache is used to store simulated values returned from the data storage system microcode. A high level cache is used to store API call return data. A seed file is used to initialize the simulation state.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07478026",
	"publication_date": "2009-01-13",
	"application_number": "11001448",
	"application_date": "2004-12-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer architecture for managing replication of data in a data storage environment",
	"summary": "",
	"abstract": "This invention is an architecture for backup and recovery of data including continuous backup and information protection backup and recovery system components.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07546428",
	"publication_date": "2009-06-09",
	"application_number": "10882843",
	"application_date": "2004-07-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer readable electronic records automated classification system",
	"summary": "",
	"abstract": "Discloses a system for the automatic classification of electronic documents that are candidates to become an official record. A training data set of documents, each document having a pre-assigned records classification instance, is processed by a classification agent operating in training mode to establish a probabilistic relationship between each classification instance and the contents of a document. The training data set includes at least several documents per classification instance. A trained classification agent operating in evaluation or classification mode receives a candidate document and produces a result. A decision control table contains user specified contiguous result ranges to select one document processing action from a list of document processing actions based on the result produced by the trained classification agent. The list of document processing actions includes further automatic document processing to assign a classification or providing user input capability to enable human intervention and control to classify the candidate document and result in the candidate document being combined with appropriate metadata, and a file plan classification to become an official record.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07478088",
	"publication_date": "2009-01-13",
	"application_number": "10378025",
	"application_date": "2003-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Configuring data storage for electronic mail application",
	"summary": "",
	"abstract": "Described are techniques for processing a data storage configuration request for an application A first user level of a plurality of user levels at which said data storage configuration request is made is determined. One or more rule sets defining mappings between different ones of said plurality of user levels are provided. Each of the different user levels is associated with a different level of abstraction with respect to processing performed in the data storage system for implementing the data storage configuration request. One of the rule sets is selected in accordance with the application, a data service requested in said data storage configuration request, and a user grouping including said plurality of user levels. The data storage configuration request is serviced using rules of the selected rule set.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07634567",
	"publication_date": "2009-12-15",
	"application_number": "11824435",
	"application_date": "2007-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Content addressable information encapsulation, representation, and transfer",
	"summary": "",
	"abstract": "Representing a number of assets on an originating computer begins with selecting the assets to be represented. Cryptographic hash asset identifiers are generated; each of the asset identifiers is computed using the contents of a particular asset. The asset identifier is a content-based or content-addressable asset name for the asset and is location independent. An asset list is generated that includes the asset identifiers computed from the assets. A cryptographic hash asset list identifier is generated that is computed from the asset list. The asset list identifier is stored for later retrieval. The assets selected are also stored for safekeeping either locally or on a computer network. In the event of loss of the files from the originating computer, the asset list identifier is retrieved. Using the asset list identifier, the original asset list is found and retrieved from its safe location. The asset identifiers from the retrieved asset list are used to find and retrieve the individual assets from their backup locations. The assets are verified by recomputing the cryptographic hash asset identifier for each asset retrieved and comparing it to the asset identifier from the asset list. The MD5 algorithm is used for the cryptographic hash function. Assets are retrieved using a multicast protocol. A series of importer programs searches for assets to retrieve in progressively more remote locations. Assets are retrieved whole or in segments.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07475432",
	"publication_date": "2009-01-06",
	"application_number": "10894284",
	"application_date": "2004-07-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Content addressable information encapsulation, representation, and transfer",
	"summary": "",
	"abstract": "Representing a number of assets on an originating computer begins with selecting the assets to be represented. Cryptographic hash asset identifiers are generated; each of the asset identifiers is computed using the contents of a particular asset. The asset identifier is a content-based or content-addressable asset name for the asset and is location independent. An asset list is generated that includes the asset identifiers computed from the assets. A cryptographic hash asset list identifier is generated that is computed from the asset list. The asset list identifier is stored for later retrieval. The assets selected are also stored for safekeeping either locally or on a computer network. In the event of loss of the files from the originating computer, the asset list identifier is retrieved. Using the asset list identifier, the original asset list is found and retrieved from its safe location. The asset identifiers from the retrieved asset list are used to find and retrieve the individual assets from their backup locations. The assets are verified by recomputing the cryptographic hash asset identifier for each asset retrieved and comparing it to the asset identifier from the asset list. The MD5 algorithm is used for the cryptographic hash function. Assets are retrieved using a multicast protocol. A series of importer programs searches for assets to retrieve in progressively more remote locations. Assets are retrieved whole or in segments.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07591022",
	"publication_date": "2009-09-15",
	"application_number": "11151619",
	"application_date": "2005-06-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Converting an object identifier to a block I/O address to identify a storage location on a server",
	"summary": "",
	"abstract": "One embodiment of the invention relates to the transfer of content between a host computer that issues OAS access requests and a block I/O storage system. Specifically, a host computer may issue an access request for a content unit that identifies the content unit is an object identifier. The request may be received by a second server, which may determine the block address(es) on the block I/O storage system at which the content unit is stored. A request may then be sent to the block I/O storage system to retrieve the content stored at the requested block address(es) and the block I/O storage system may return the content.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07627710",
	"publication_date": "2009-12-01",
	"application_number": "11474658",
	"application_date": "2006-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data storage system having cooling fan speed protection",
	"summary": "",
	"abstract": "A speed control system is provided for controlling temperature within a chassis. The chassis includes therein a temperature sensing device for producing a temperature signal representative of temperature within the chassis, a fan, and a fan speed controller. The fan speed controller produces a nominal fan speed control signal comprising a train of pulses, successive pulses having a duty cycle related to the temperature signal produced by the temperature sensing device, such time durations decreasing with increasing temperature. The speed control system includes a decoupling circuit responsive to the nominal fan speed control signal for, in response to relatively a low duty cycle, coupling the nominal fan control signal to an output of the decoupling circuit, and, in response a relatively high duty cycle, producing a preset fan speed signal at the output of the decoupling circuit. The fan has a speed in accordance with the signal at the output of the decoupling circuit.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07621460",
	"publication_date": "2009-11-24",
	"application_number": "11238350",
	"application_date": "2005-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Emulation of point-in-time data copying operations",
	"summary": "",
	"abstract": "A host computer system (host) includes an application that generates I/O commands for a first type of point-in-time (PIT) copy operation, and an I/O subsystem coupled to a data storage system capable of performing a second type of PIT copy operation. The host processes the I/O commands as part of an emulation of the first type of PIT copy operation, including determining whether the I/O commands require modification for the emulation, and if so whether they are of a back-end type or an out-of-band type. The I/O commands that do not require modification are processed without modification via the I/O subsystem. For the back-end I/O commands, (i) an intercept condition is set, (ii) the I/O commands are processed via the I/O subsystem, and (iii) upon completion with the intercept condition set, the results are modified so as to indicate to the application that the first type of PIT copy operation can be performed on the storage volumes. For the out-of-band I/O commands, (i) corresponding commands of the second type of PIT copy operation are processed via the I/O subsystem in lieu of the out-of-band I/O commands, and (ii) upon completion of the substituted I/O commands, corresponding results are returned to the application as though the out-of-band I/O commands had been processed by the I/O subsystem. Using this technique, a host that initiates only PIT copying operations of the first type can be used with storage systems that support second-type PIT copying operations.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07571293",
	"publication_date": "2009-08-04",
	"application_number": "11472685",
	"application_date": "2006-06-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enclosure numbering in RAID data storage systems",
	"summary": "",
	"abstract": "Enclosure numbering is performed in redundant array of independent disk (RAID) data storage systems. If first, second, and third boards in an enclosure indicate a first enclosure number, the enclosure is indicated as having the first enclosure number. If at least the first and second boards indicate the first enclosure number, the enclosure is indicated as having the first enclosure number. If the first board does not indicate any enclosure number, indicating that the enclosure's enclosure number is unknown.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07549002",
	"publication_date": "2009-06-16",
	"application_number": "11239568",
	"application_date": "2005-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Error handling policy",
	"summary": "",
	"abstract": "Described are techniques for use with an error handling policy for a data storage system. Error handling criteria may be specified for controlling behavior of the data storage system upon the occurrence of an internal processing error occurring when performing an ancillary task associated with a data operation received by the data storage system. The error handling criteria may include a threshold counter value, and one or more of: a device, a specific device location or address, and a host. An error may be conditionally returned to the host upon the occurrence of an internal processing error in accordance with the error handling criteria.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07565581",
	"publication_date": "2009-07-21",
	"application_number": "10948514",
	"application_date": "2004-09-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generating automated and scheduled SAN copy sessions for ISB protocol systems",
	"summary": "",
	"abstract": "Systems and methods for performing scheduled backups and recovery of data generated by a production application operating on a MAGIC platform located on a host computer. The data is stored in a primary storage in the form of a production volume and ISB protocol is used to create a clone volume. Exemplary methods for backing up a clone volume to a backup storage include receiving a backup command from a backup server, sending a split command to a host computer to initiate splitting of a production volume and a clone volume using ISB protocol, initiating creation of a snapshot from the clone volume, and initiating storing of the snapshot in the primary storage.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07587565",
	"publication_date": "2009-09-08",
	"application_number": "11536130",
	"application_date": "2006-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for managing access to volumes of storage",
	"summary": "",
	"abstract": "One embodiment is directed to a method in a computer system including a host computer and at least one storage system including first and second storage volumes, the host computer including at least one application program executing thereon. The method comprises acts of intercepting and redirecting an access request from the at least one application program to the first storage volume to the second storage volume. Other embodiments are directed to a computer readable medium with instructions for performing the method, a host computer with at least one controller to intercept and redirect the access request. Other aspects are directed to methods in a computer system including a host computer, a first storage system including a first storage volume, and a second storage system including a second storage volume, wherein the second storage volume is a hardware mirror of the first storage volume. One method comprises an act of servicing a read request to the second storage volume while maintaining the second storage volume as an active hardware mirror of the first storage volume. Another method comprises an act of, in response to a failure preventing access from the host computer to the first storage volume, servicing access requests directed to the first storage volume from the second storage volume without reconfiguring the host computer.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07502960",
	"publication_date": "2009-03-10",
	"application_number": "11406849",
	"application_date": "2006-04-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for monitoring the storage of data in a computer system",
	"summary": "",
	"abstract": "One aspect is directed to a method for storing, in a persistent manner, a state of the storage process such that the state of the storage operation may be recovered if the storage operation is interrupted. Another aspect is directed to a method and apparatus that stores the state of a storage operation in a non-volatile memory of a computer that stores data on a storage system. Another aspect is directed to a method for recovering the state of the storage process without having to re-perform storage operations. Another aspect is directed to maintaining state information for other purposes such as monitoring access to data storage locations.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07546482",
	"publication_date": "2009-06-09",
	"application_number": "10281524",
	"application_date": "2002-10-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing continuous communications between computers",
	"summary": "",
	"abstract": "A system and method for providing continuous availability of information that is normally transported via a network is provided. The system and method uses a process that is used with each computer in a system to simulate the functionality of a network interface card wherein upon the unavailability of the network, transmission packets containing a unique header are send by one application in the system through the process, which stores the transmission packets in queue, and upon filling of the queue writes filled queue to a send volume contained on a storage system. The storage system then copies the data to a second volume, which can be read by a second application. The first and second volumes can either be remotely dispersed or local to one another.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07634601",
	"publication_date": "2009-12-15",
	"application_number": "11273279",
	"application_date": "2005-11-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing remote alert reporting for managed resources",
	"summary": "",
	"abstract": "A system allows software not equipped to work with remote location alert reporting software to obtaining alert data indicating an alert associated with a first managed resource in a storage area network. The system identifies a top-level resource in the storage area network to which the first managed resource indicated by the alert data is related and performs remote alert notification analysis to determine if the top-level resource is a managed resource in the storage area network for which remote location alert reporting software is not operational. If the top-level resource is a managed resource for which remote location alert reporting software is not operational, the system proxy engages operation of remote location alert reporting software on behalf of the top-level resource to report the alert data via the communications interface to the remote location.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07475076",
	"publication_date": "2009-01-06",
	"application_number": "11233643",
	"application_date": "2005-09-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for suspending a discovery process, saving the state of the discovery process, and resuming the discovery process during a distributed copy operation",
	"summary": "",
	"abstract": "Described is a distributed copying technique that may be used in migrating large amounts of data from one or more source devices to one or more destination devices. The data source is divided into partitions. As Fibre Channel adapters (FAs) become available, each of the FAs may copy a partition of the data. In connection with specifying paths used for the distributed copying technique, a preferred path selection (source port-target port mapping) may be made by executing code in a controlling data storage system to perform discovery processing. The preferred path selection is used for the duration of the distributed copying unless the preferred path is unable to transmit data. A target port of the preferred path may be randomly selected from all accessible target ports, and/or in accordance with a specified portion of the target ports. Preferred paths may also be specified using an API (application programming interface).",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07634595",
	"publication_date": "2009-12-15",
	"application_number": "11014597",
	"application_date": "2004-12-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for creating middleware independent software",
	"summary": "",
	"abstract": "A system abstracts an object model by receiving an object model specification defining application semantics for an application to access, via invocations, objects identified in the object model specification. The system applies a categorical-based generator that applies at least one morphism to the object model specification to generate an abstraction interface object model that preserves application semantics defined within the object model specification and is independent of a middleware object access mechanism. The system also generates an implementation of the abstraction interface object model for a particular middleware object access mechanism used to access data within objects corresponding to the object model specification.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07546309",
	"publication_date": "2009-06-09",
	"application_number": "11095406",
	"application_date": "2005-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for deallocation of resources",
	"summary": "",
	"abstract": "Initially, a processing device receives a selection of one or more resources to be deallocated from a storage area network. The processing device applies a traversal function to a repository of managed objects representing the resources in the storage area network to identify other resources (e.g., resources related to the selected one or more resources) in the storage area network that at least partially rely on existence of the selected one or more resources for accessing data stored in the storage area network. The processing device graphically presents the selected one or more resources for deallocation in relation to identified other related resources by highlighting the related resources in the storage area network environment that would not be inherently deleted altogether but whose ability to access data would at least be partially impaired if the selected one or more resources were deallocated from the storage area network environment.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07620720",
	"publication_date": "2009-11-17",
	"application_number": "11001489",
	"application_date": "2004-12-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for parsing a content address to facilitate selection of a physical storage location in a data storage system",
	"summary": "",
	"abstract": "One embodiment is a system for locating content on a storage system, in which the storage system provides a location hint to the host of where the data is physically stored, which the host can resubmit with future access requests. In another embodiment, an index that maps content addresses to physical storage locations is cached on the storage system. In yet another embodiment, intrinsic locations are used to select a storage location for newly written data based on an address of the data. In a further embodiment, units of data that are stored at approximately the same time having location index entries that are proximate in the index.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07529883",
	"publication_date": "2009-05-05",
	"application_number": "11499929",
	"application_date": "2006-08-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for providing a categorical approach to valuetype bridge support",
	"summary": "",
	"abstract": "A system provides categorical mapping of valuetypes by receiving, as input, a valuetype within an object model specification. The system applies a categorical-based generator that applies at least one morphism to the object model specification. Application of the categorical-based generator generates an interface that exposes the valuetype in an interface object model and generates an implementation of the interface that exposes the valuetype in a middleware implementation object model. The interface and its implementation seamlessly support valuetype properties including inheritance, null values, native casting and arbitrary graph communication.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07596572",
	"publication_date": "2009-09-29",
	"application_number": "11324843",
	"application_date": "2006-01-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for scheduling an action on a computer",
	"summary": "",
	"abstract": "One embodiment is directed to a computer system that includes primary and secondary storage systems. When a request to store a content unit is received, it may be determined whether to store the content unit on the primary storage system or the secondary storage system. In another embodiment, a computer may store information relating to an action to be performed in one of the directories of a file system that corresponds to a period of time. When the period of time to which the directory corresponds arrives, the action may be performed. In another embodiment, a content unit stored on a primary storage system may be copied to a secondary storage system in a computer system. After the content unit has been copied, the secondary storage system may send a delete request to the primary storage system to delete the content unit from the primary storage system.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07636704",
	"publication_date": "2009-12-22",
	"application_number": "11213565",
	"application_date": "2005-08-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for segregating a content addressable computer system",
	"summary": "",
	"abstract": "One embodiment is directed to a method of segregating one or more content addressable storage systems into a plurality of virtual pools. The virtual pools can be allocated to different content sources and/or can be assigned to different storage system capabilities. Another embodiment is directed to transmitting with an input/output request for a content unit information specifying at least one storage capability to be applied to the content unit, and/or receiving such an I/O and implementing the specified storage system capabilities. Another embodiment is directed to extracting from an I/O request from a source information relating to an impact of the I/O on at least one characteristic of the content units stored on a CAS system from the source. Another embodiment is directed to storing information for content identifying the source and/or reading information associated with a stored content unit and determining based at least in part thereon, at least one characteristic of the content units stored from a source.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07539813",
	"publication_date": "2009-05-26",
	"application_number": "10910985",
	"application_date": "2004-08-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus providing backward compatibility for applications that access a changing object model",
	"summary": "",
	"abstract": "An object adapter within a server application processes client requests supporting a plurality of object models by receiving a former client request requiring access to a former object defined by a former object model. The server application maps any former objects required for access by the former client request to corresponding current objects existing within a current object model and then copies current object data within the current objects of the current object model to former object data within an instantiations of the former objects. The server application can then process the former client request using the instantiation of the former object to satisfy the former client request. The system provides compatibility to former clients and allows them to remain in service when an object model evolves.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07543019",
	"publication_date": "2009-06-02",
	"application_number": "10814666",
	"application_date": "2004-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and techniques for delivering rich Java applications over thin-wire connections with high performance and scalability",
	"summary": "",
	"abstract": "A method for delivering applications over a network where the application's logic runs on the backend server and the application's user interface is rendered on a client-device, according to its display capabilities, thought a network connection with the backend server. The application's GUI API and event processing API are implemented to be network-aware, transmitting application's presentation layer information, event processing registries, and other related information a between client and server. The transmission is a high, object level format, which minimizes network traffic. Client-side events are transmitted to the server for processing via a predetermined protocol, the server treating such events and inputs as if locally generated. The appropriate response to the input is generated and transmitted to the client device using the format to refresh the GUI on the client.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07596791",
	"publication_date": "2009-09-29",
	"application_number": "10017183",
	"application_date": "2001-12-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multiplexing system",
	"summary": "",
	"abstract": "A multiplexing system couples a pair of input ports to a either a dual ported disk drive or a single ported disk drive. The system includes a multiplexer having the pair of first ports and a pair of second ports. The multiplexer is configurable to couple each one of the pair of first ports to a corresponding one of the pair of second ports when the pair of second ports are coupled to the dual ported disk drive and to couple both pair of first ports to a single one of the second ports when a single ported disk drive is coupled to said single one of the second ports.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07627005",
	"publication_date": "2009-12-01",
	"application_number": "11238600",
	"application_date": "2005-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Performing replication operations on continuous data protection systems using pseudosnapshots",
	"summary": "",
	"abstract": "Systems and methods for performing replication operations on a continuous data protection system. Exemplary methods include identifying a pseudosnapshot relating to a point in time in a series of transactions stored on a continuous data protection system, surfacing a copy of at least a portion of the series of transactions saved before the point in time to which the pseudosnapshot relates, and sending the surfaced copy to (1) a remote computer such that the surfaced copy can be read to perform analysis on the surfaced copy, (2) a remote server to be stored on a remote storage device, or (3) a mirror storage device to store a first mirrored copy.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07509358",
	"publication_date": "2009-03-24",
	"application_number": "11381345",
	"application_date": "2006-05-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "RAID data storage system with SAS expansion",
	"summary": "",
	"abstract": "A data storage system has a chassis and a pair of printed circuit boards disposed in the chassis. Each one of the pair of printed circuit boards has disposed thereon a processor, a translator controlled by the processor, a SAS expander having a bidirectional front end port and multiple bidirectional backend ports, and an expansion port, and a SAS controller coupled between the translator and the expander. The system also has an interposer printed circuit board disposed in the chassis, and multiple multiplexers disposed on the interposer printed circuit board. Each one of the multiplexers has a pair of bidirectional front end ports and a pair of bidirectional back end ports. A first one of the pair of bidirectional front end ports is connected to a corresponding backend port of the SAS expander disposed on a first one of the pair of storage processor printed circuit boards. A second one of the pair of bidirectional front end ports is connected to a corresponding backend port of the SAS expander disposed on a second one of the pair of storage processor printed circuit boards. The system also has multiple disk drives disposed in the chassis. Each one is coupled to at least one backend port of a corresponding one of the multiplexers.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07624206",
	"publication_date": "2009-11-24",
	"application_number": "11238601",
	"application_date": "2005-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Remote backup and restore operations for ISB protocol systems",
	"summary": "",
	"abstract": "Systems and methods for performing scheduled backups and recovery of data generated by a production application operating on a MAGIC platform located on a host computer. The data is stored in a primary storage in the form of a production volume and ISB protocol is used to create a clone volume. Exemplary methods for backing up a clone volume to a backup storage include receiving a backup command from a backup server, sending a split command to a host computer to initiate splitting of a production volume and a clone volume using ISB protocol, receiving an identification of the clone volume, initiating the clone volume for surfacing and mounting, and initiating a backup of the surfaced and mounted clone volume to a backup storage.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07584339",
	"publication_date": "2009-09-01",
	"application_number": "11536121",
	"application_date": "2006-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "SAR restart and going home procedures",
	"summary": "",
	"abstract": "Described are techniques used in performing data replication processing. Data is replicated on a recovery site from a production site. When a disaster occurs, the state of the replication processing is determined and a restart copy of the data is made available from the recover site. Processing continues based on whether protection mode is desired such that the system executes using the recovery site as the restart with a replicated copy of the data. Data is propagated from the recovery site to the production site to resume operations and replication processing originating from the production site.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07607037",
	"publication_date": "2009-10-20",
	"application_number": "11504423",
	"application_date": "2006-08-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "SAS expansion topology for RAID data storage including multiplexers and SAS expanders for interfacing with single or dual ports drives",
	"summary": "",
	"abstract": "A data storage system having a first chassis, such first chassis having a pair of SAS expanders and a second chassis having a pair of SAS expanders. The first one of the pair of SAS expanders is connected to only an expansion port of a first one of a pair of signal processor printed circuit boards in the first one of the chassis. An expansion port of a second one of the pair of SAS expander is connected to only the expansion port of a second one of the pair of signal processor printed circuit boards in the second one of the chassis.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07574542",
	"publication_date": "2009-08-11",
	"application_number": "11238548",
	"application_date": "2005-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for managing replication of data in a data storage environment",
	"summary": "",
	"abstract": "This invention is a system and method for backup and recovery of data using a new architecture that includes continuous backup and information protection backup and recovery system components.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07549027",
	"publication_date": "2009-06-16",
	"application_number": "10883451",
	"application_date": "2004-07-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methods for defining a software build",
	"summary": "",
	"abstract": "A software build framework includes and architecture to identify software components including sets of classes, or objects, and categorizes the objects into layers in the component. A set of build rules identifies allowable dependencies between the component layers among the same and other components in the system, as well as external entities such as off the shelf (OTS) and third party vendor products outside the development control. The build mechanism enumerates a set of dependencies for each of the components, and an enforcer analyzes the dependencies to identify dependencies in violation of the rules. The enforcer separates the compile time and runtime inheritance paths to detect indirect monolithic inheritance. In this manner, dependency rules define an efficient and optimal architecture which lends itself well to modifications, timely builds and deliverable releases, and enforces the dependency rules at compile time so as to avoid generating an obsolete or suspect build.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07640533",
	"publication_date": "2009-12-29",
	"application_number": "11094773",
	"application_date": "2005-03-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methods for event impact analysis",
	"summary": "",
	"abstract": "A conventional business enterprise has a number of departments each depending on an information processing infrastructure. Operational anomalies in the information processing infrastructure may have a detrimental effect on one or more of the business processes. A rule engine associates network events with the business processes which the network events impact. The rule engine identifies and processes relations between event-generating manageable entities on the network. The rule engine computes, based on the relations between the various manageable entities, manageable entities having an effect on other manageable entities. Upon occurrence of an event, the rule engine employs the relations to determine which other manageable entities are indirectly affected by the event. The rule engine reports the event and affected manageable entities to identify the business processes which experience resulting operational deficiencies.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07478404",
	"publication_date": "2009-01-13",
	"application_number": "10812498",
	"application_date": "2004-03-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methods for managing backup status reports",
	"summary": "",
	"abstract": "A storage area network uniform integrated backup reporting and verification mechanism displays backup reporting information at an enterprise level while showing uniformity among heterogeneous backup applications of different vendors. The backup management application coalesces data from different backup applications by scanning status data from backup applications, and identifying data corresponding to common output fields. Further storage array specific aspects, information, or commands are attainable via the linkages to the native backup applications specific to the individual storage arrays. The backup management application provides uniform reporting and verification of satisfactory backup completion across the SAN, or otherwise pinpoints and clarifies problems or other anomalies associated with the backup. Further, filtering and focused report layouts allow customization and refinement of the output data providing a multitude of integrated report formats to facilitate operations including troubleshooting, charge back and service provisioning.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07546323",
	"publication_date": "2009-06-09",
	"application_number": "10954991",
	"application_date": "2004-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methods for network call load simulation",
	"summary": "",
	"abstract": "Configurations of the invention simulate an exchange of calls emanating from a SAN management application to a plurality of manageable entities. The simulated call load provides simultaneous simulated calls for observing and analyzing responses to various loading scenarios characterized by multiple pending calls to the SAN. Configurations discussed herein identify a processing work burden and corresponding completion time associated with each of the simulated calls. A simulation agent aggregates the work burden of concurrent requests and computes a latency factor associated with each call based on the load presented by all pending calls. By adjusting the latency time of each pending call, and adjusting the latency to represent the additional processing imposed by successive pending calls, the simulated responses provide an accurate set of responses, rather than merely returning an unencumbered rapid response of expected content which may elusively represent the actual timeliness of responses in a loaded system.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07478018",
	"publication_date": "2009-01-13",
	"application_number": "10955964",
	"application_date": "2004-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methods for reporting device allocation",
	"summary": "",
	"abstract": "A storage area network (SAN) management application generates device allocation reports displaying foundation variables, device specific parameters, and computed, derived fields for different types of storage arrays, without burdening the allocation report with extraneous parameters through the use of a layout indicative of the information included on the report, providing a streamlined and seamless allocation report. The SAN management application defines a layout indicative of the foundation variables, device attributes, and derived fields requested in an allocation report. The user selected layout indicates the requested allocation parameters for a report, indicative of the foundation variable, device attributes, and derived fields, and also indicates the device usage metrics for computing the derived fields from the foundation variables and device attributes. In this manner, a SAN operator requests an allocation report indicative of only the information sought, and need not correlate multiple reports or manually synthesize report output for determining derived fields.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07499834",
	"publication_date": "2009-03-03",
	"application_number": "10955588",
	"application_date": "2004-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Using pseudosnapshots for continuous data protection systems to surface a copy of data",
	"summary": "",
	"abstract": "Systems and methods for performing replication operations on a continuous data protection system. Exemplary methods include identifying a series of transactions in a continuous data protection system, identifying an event marker indicating a point in time in the series of transactions, copying at least a portion of the series of transactions up until the point in time of the event marker from the continuous data protection system, and presenting the copy of at least a portion of the series of transactions such that the surfaced copy can be read in a subsequent replication operation.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07603395",
	"publication_date": "2009-10-13",
	"application_number": "11381347",
	"application_date": "2006-05-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for booking of hotel accommodations for travelers",
	"summary": "",
	"abstract": "A method of making a hotel reservation includes receiving a reservation request from a booking source, wherein the reservation request is based on an allocation to the booking source from a hotel and wherein the reservation request is price-blind; transmitting the reservation request to the hotel; receiving a confirmation from the hotel; and transmitting the confirmation to the booking source. The booking source can be a consolidator, a travel agent, a tour operator, a Global Distribution System or a wholesaler. The method also includes connecting to the hotel using a web service to transmit the reservation to the hotel. If the reservation request exceeds the allocation, the hotel has an option of accepting the reservation request or declining the reservation request. The method also includes receiving polling inquiries from the booking source prior to transmitting the hotel's confirmation to the booking source. The confirmation from the hotel can be received using a web service. The confirmation can be transmitted to the booking source using a web service. The reservation request can include a u201cspecial request.u201d The method can also include translating parameters of the reservation request from a format of the booking source to a format of the hotel.",
	"url": null,
	"owner": "Emirates",
	"publication_number": "07584110",
	"publication_date": "2009-09-01",
	"application_number": "11229557",
	"application_date": "2005-09-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Device-independent control of storage hardware using SCSI enclosure services",
	"summary": "",
	"abstract": "A SES API is disclosed as an interface between SES protocol code and non-SCSI storage enclosure hardware to abstract the SES protocol code from the control of the hardware. To control the hardware, SES commands are sent to the SES protocol code. The SES protocol code is responsive to the SES commands, but has no knowledge of the hardware. The SES protocol code converts the SES command to a series of function calls. When the SES API receives the function calls, it executes the corresponding functions. The SES API includes a customer-tailored interface library of functions. The library allows the end user to provide the hardware interface routines necessary for SES to control the hardware. The functions are written as templates, separate from the SES protocol code, so that end users can modify the functions to control the hardware without having to modify or understand the SES protocol code.",
	"url": null,
	"owner": "Emulex Design & Manufacturing Corporation",
	"publication_number": "07590770",
	"publication_date": "2009-09-15",
	"application_number": "11009302",
	"application_date": "2004-12-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for trunking in fibre channel arbitrated loop systems",
	"summary": "",
	"abstract": "Methods and apparatus for switching Fiber Channel Arbitrated Loop Systems is provided between a plurality of Fiber Channel Loop devices. In one aspect of the invention, the system switches based at least in part on arbitrated loop primitives. An exemplary interconnect system may include a first port and a second port, both including port logic to monitor certain arbitrated loop primitives, a connectivity apparatus, a route determination apparatus including a routing table consisting of ALPA addresses and their associated ports, the route determination apparatus coupled to each port and the connectivity apparatus, where the connectivity apparatus creates paths between the ports based on arbitrated loop primitives. In one embodiment, the connectivity apparatus is a crossbar switch. Examples of the arbitrated loop primitives that cause the switch to create paths between ports includes one or more of the following: ARB, OPN and CLS. In yet other aspects, the system ensures device access fairness through one or more techniques, including a rotating priority system, a counter to count the number of OPNs, especially sequential OPNs, and/or priority based on port type. Device zoning may be implemented. In one implementation, the system includes trunking such that frames may be transferred on multiple ports.",
	"url": null,
	"owner": "Emulex Design & Manufacturing Corporation",
	"publication_number": "07630300",
	"publication_date": "2009-12-08",
	"application_number": "10617149",
	"application_date": "2003-07-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Negotiating reinsurance for a risk",
	"summary": "",
	"abstract": "System, methods, and computer program products for facilitating negotiations for reinsurance of a risk. The negotiations for reinsurance of a risk are conducted between a cedent and one to many assumers. An interface is provided for allowing submissions of risk for reinsurance, responses from selected assumers, and replies to the responses as necessary to continue or conclude the negotiation. The interface also allows users to view information exchanged during various stages of the negotiation. Additional functionality including categorizing risk, categorizing reinsurance, required distribution, distribution preferences, and endorsement agreements are also provided.",
	"url": null,
	"owner": "Ereinsure.Com, Inc.",
	"publication_number": "07565302",
	"publication_date": "2009-07-21",
	"application_number": "11939411",
	"application_date": "2007-11-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for extending keyword searching to syntactically and semantically annotated data",
	"summary": "",
	"abstract": "Methods and systems for extending keyword searching techniques to syntactically and semantically annotated data are provided. Example embodiments provide a Syntactic Query Engine (u201cSQEu201d) that parses, indexes, and stores a data set as an enhanced document index with document terms as well as information pertaining to the grammatical roles of the terms and ontological and other semantic information. In one embodiment, the enhanced document index is a form of term-clause index, that indexes terms and syntactic and semantic annotations at the clause level. The enhanced document index permits the use of a traditional keyword search engine to process relationship queries as well as to process standard document level keyword searches. In one embodiment, the SQE comprises a Query Processor, a Data Set Preprocessor, a Keyword Search Engine, a Data Set Indexer, an Enhanced Natural Language Parser (u201cENLPu201d), a data set repository, and, in some embodiments, a user interface or an application programming interface.",
	"url": null,
	"owner": "Evri Inc.",
	"publication_number": "07526425",
	"publication_date": "2009-04-28",
	"application_number": "11012089",
	"application_date": "2004-12-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Capturing text from rendered documents using supplemental information",
	"summary": "",
	"abstract": "A system for processing a text capture operation is described. The system receives text captured from a rendered document in the text capture operation. The system also receives supplemental information distinct from the captured text. The system determines an action to perform in response to the text capture operation based upon both the captured text and the supplemental information.",
	"url": null,
	"owner": "Exbiblio B.V.",
	"publication_number": "07599580",
	"publication_date": "2009-10-06",
	"application_number": "11096704",
	"application_date": "2005-04-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Content access with handheld document data capture devices",
	"summary": "",
	"abstract": "Embodiments of the disclosed innovations provide systems and methods for automatically locating and retrieving digital supplemental materials and counterparts of rendered documents. These systems and methods are especially useful when the provider or copyright holder of the digital document charges a fee for access to the digital materials. Some embodiments solve the technical problem of allowing a user to access restricted digital content associated with a rendered document via a search string captured from the rendered document. Some embodiments further provide automatic intermediation to gain access to protected digital materials.",
	"url": null,
	"owner": "Exbiblio B.V.",
	"publication_number": "07599844",
	"publication_date": "2009-10-06",
	"application_number": "11098038",
	"application_date": "2005-04-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data capture from rendered documents using handheld device",
	"summary": "",
	"abstract": "A portable device having scanning, imaging or other data-capture capability is described. In some cases, the portable device can indicate to the user when enough information has been captured to uniquely identify a source document. In some cases, the portable device calculates timestamps and location-stamps indicating when and where a data capture occurred. In some cases, the portable device is controlled by gestures. In some cases, the portable scanning device has associated billing and content/service subscription information.",
	"url": null,
	"owner": "Exbiblio B.V.",
	"publication_number": "07593605",
	"publication_date": "2009-09-22",
	"application_number": "11098042",
	"application_date": "2005-04-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Triggering actions in response to optically or acoustically capturing keywords from a rendered document",
	"summary": "",
	"abstract": "A system for processing text captured from rendered documents is described. The system receives a sequence of one or more words optically or acoustically captured from a rendered document by a user. The system identifies among words of the sequence a word with which an action has been associated. The system then performs the associated action with respect to the user.",
	"url": null,
	"owner": "Exbiblio B.V.",
	"publication_number": "07596269",
	"publication_date": "2009-09-29",
	"application_number": "11097103",
	"application_date": "2005-04-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information gathering system and method",
	"summary": "",
	"abstract": "A system, apparatus and method for filling forms, including using a graphical capture device, are described herein.",
	"url": null,
	"owner": "Exbibuo B.V.",
	"publication_number": "07606741",
	"publication_date": "2009-10-20",
	"application_number": "11097981",
	"application_date": "2005-04-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program product for dynamically enhancing an application executing on a computing device",
	"summary": "",
	"abstract": "A system, method and computer program product for dynamically enhancing a software application, such as a video game, executing on a computing device, without having to change and recompile the original application code. The system includes a staging environment that monitors the execution of the application and indexes each item of graphical and/or audio information generated by the application into a first database. A system administrator or other entity then populates a second database by manual or automated means with one or more business rules, wherein each business rule is associated with one or more of the objects indexed in the first database. The system further includes a run-time environment that identifies items of graphics and/or audio information as they are generated by the application during run-time, uses the second database to determine if an identified item is associated with a business rule, and, responsive to a determination that an identified item is associated with a business rule, applies the business rule.",
	"url": null,
	"owner": "Exent Technologies, Ltd.",
	"publication_number": "07596540",
	"publication_date": "2009-09-29",
	"application_number": "11290830",
	"application_date": "2005-12-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program product for dynamically measuring properties of objects rendered and/or referenced by an application executing on a computing device",
	"summary": "",
	"abstract": "A system, method and computer program product for dynamically enhancing and measuring a software application, such as a video game, executing on a computing device, without having to change and recompile the original application code. The system includes a staging environment that monitors the execution of the application and indexes items of graphical and/or audio information generated by the application into a first database. A system administrator or other entity then populates a second database by manual or automated means with one or more business rules, wherein each business rule is associated with one or more of the objects indexed in the first database. The system further includes a run-time environment that identifies items of graphics and/or audio information as they are generated by the application during run-time, uses the second database to determine if an identified item is associated with a business rule, and, responsive to a determination that an identified item is associated with a business rule, applies the business rule, measures the object and its related attributes and optionally report the data back to a 3database. Also described herein is a system, method and computer program product for dynamically measuring attributes of objects rendered and/or referenced by software applications, without the need to revise the source code of such applications.",
	"url": null,
	"owner": "Exent Technologies, Ltd.",
	"publication_number": "07596536",
	"publication_date": "2009-09-29",
	"application_number": "11472454",
	"application_date": "2006-06-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Fabric network management and diagnostic tool",
	"summary": "",
	"abstract": "The invention relates to a maintenance and diagnostic tool for embedded fabric (EF) networks providing an interactive graphical user interface for displaying, monitoring and managing processing elements, such as microprocessors, switches, bridges and memory, within the EF network. The computer software tool identifies the various processing elements in the system along with the data routes therebetween, gives each processing element a unique identification label, and then initializes each switch with routing tables. All of the aforementioned information is then used to construct an interactive graphical user interface of the network map illustrating the various processing elements and the active and inactive data paths extending therebetween.",
	"url": null,
	"owner": "Fabric Embedded Tools Corporation",
	"publication_number": "07590718",
	"publication_date": "2009-09-15",
	"application_number": "11188928",
	"application_date": "2005-07-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for payment transactions and shipment tracking over the internet",
	"summary": "",
	"abstract": "A method for completing a transaction in response to a determination that goods have been acceptably delivered to a buyer. The method is particularly suitable for use in an online commerce system including a transaction computer operated by a transaction facilitator and a pre-authorized shipping service. After a transaction is initiated, payment instrument selection information is displayed to the buyer, who selects a payment instrument. Authorization for the payment instrument is obtained from a payment instrument processor. Instructions are communicated to the seller to ship the goods using the shipping service. Transaction information including a tracking number associated with the shipment of the goods is stored. A tracking database of the shipping service is queried to determine whether the goods have been delivered. If the goods have been delivered to and accepted by the buyer, an instruction is communicated to the payment instrument processor to make payment to the seller.",
	"url": null,
	"owner": "First Data Corporation",
	"publication_number": "07593898",
	"publication_date": "2009-09-22",
	"application_number": "09476385",
	"application_date": "1999-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for launching applications",
	"summary": "",
	"abstract": "An originating application in a process plant is able to launch multiple desired applications, with one or more of the desired applications having a different application programming interface. In one example, the originating application is able to launch multiple desired applications via an application launcher program. The originating application provides the application launcher program with an indication of the desired application to be launched, and the application launcher program then launches the indicated desired application.",
	"url": null,
	"owner": "Fisher-Rosemount Systems, Inc.",
	"publication_number": "07600234",
	"publication_date": "2009-10-06",
	"application_number": "10315857",
	"application_date": "2002-12-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for sharing relationship information stored in a social network database with third party databases",
	"summary": "",
	"abstract": "Social network information maintained in a first database is shared with a second database. The operators of the second database use the social network information to better manage services provided to their customers and target particular information to their customers. The process begins with a request made to an application server of the first database by an application server of the second database, for social network information relevant to a set of individuals. The request includes identifying information of each individual in the set. The first database is then searched for matches with the identifying information in the request. If matches are found, the social network information relevant to those individuals for whom matches are found is shared with the second database.",
	"url": null,
	"owner": "Friendster, Inc.",
	"publication_number": "07478078",
	"publication_date": "2009-01-13",
	"application_number": "10867610",
	"application_date": "2004-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Function converting apparatus and function converting method",
	"summary": "",
	"abstract": "A function converting method has storing correspondence-information between operating system function information and device function information, converting a function of an operating system into a function of an equipment driver based on the correspondence-information, and controlling so that the converted function is executed by the equipment driver.",
	"url": null,
	"owner": "Fuji Xerox Co., Ltd.",
	"publication_number": "07626718",
	"publication_date": "2009-12-01",
	"application_number": "11223011",
	"application_date": "2005-09-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for management and representation of dynamic context",
	"summary": "",
	"abstract": "A technique for managing and representing dynamic context information. The system can manage local and remote activity information including sensor and computer application generated events such as calendar reminders. The technique allows users to store contextual relationship information associating an activity stream with temporary changes in the user interface that lie just outside a user's focus of attention in dynamic stylesheets. The dynamic stylesheets can be applied across work groups or companies and provide a similar contextual work environment. The dynamic stylesheets can also be customized to the specific needs of an individual. The techniques can be expanded beyond the computer desktop focus to include a user's complete work environment.",
	"url": null,
	"owner": "Fuji Xerox Co., Ltd.",
	"publication_number": "07577916",
	"publication_date": "2009-08-18",
	"application_number": "09788603",
	"application_date": "2001-02-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multi-channel quiet calls",
	"summary": "",
	"abstract": "A system and method for simultaneously conducting multiple telephone conversations is provided. In an embodiment, a user converses with one individual on a first channel while simultaneously transmitting audible utterances to a second individual or a second channel. The user can select the desired channel or channels and a desired phrase and an electronic representation of the selected phrase is transmitted over the selected channel(s).",
	"url": null,
	"owner": "Fuji Xerox Co., Ltd.",
	"publication_number": "07546143",
	"publication_date": "2009-06-09",
	"application_number": "10024982",
	"application_date": "2001-12-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Switch, image transmission apparatus, image transmission method, image display method, image transmitting program product, and image displaying program product",
	"summary": "",
	"abstract": "A switch selectively switches terminals to which a computer is connected, and that can be remotely operated by a remote-control computer connected to a predetermined network. This switch includes: an information acquiring unit that acquires cursor location information from the remote-control computer; an image extracting unit that extracts a cursor peripheral image from an image storing unit that stores an image obtained from the computer, based on the cursor location information acquired by the information acquiring unit; and a cursor image transmitting unit that transmits the cursor peripheral image, extracted by the image extracting unit, to the remote-control computer.",
	"url": null,
	"owner": "Fujitsu Component Limited",
	"publication_number": "07595770",
	"publication_date": "2009-09-29",
	"application_number": "10808392",
	"application_date": "2004-03-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Determining an acceptance status during document parsing",
	"summary": "",
	"abstract": "A method of parsing a markup-language document includes detecting, in a markup-language document, a start of a first data node of a first node type and identifying a first data definition associated with the first node type. The method further includes adding a first entry associated with the first data node to a data structure and reading contents of the first data node. Additionally, the method includes determining an acceptance status of the first data node based on the first data definition. Furthermore, the method also includes identifying an end of the first data node based on the acceptance status of the first data node and, in response to identifying the end of the first data node, removing the first entry from the data structure.",
	"url": null,
	"owner": "Fujitsu Limited",
	"publication_number": "07500184",
	"publication_date": "2009-03-03",
	"application_number": "11056432",
	"application_date": "2005-02-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for reducing delimiters",
	"summary": "",
	"abstract": "The method also includes generating an encoded node, in response to determining that an end delimiter is not associated with the data node. In this case, the encoded node includes the start delimiter and data from the data node, but does not include an end delimiter. Moreover, the method further includes writing the encoded node to an output document.",
	"url": null,
	"owner": "Fujitsu Limited",
	"publication_number": "07509574",
	"publication_date": "2009-03-24",
	"application_number": "11056440",
	"application_date": "2005-02-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, apparatus, and medium for migration across link technologies",
	"summary": "",
	"abstract": "A method of migrating across link technologies on an IP-based subnet while maintaining on-going communication comprises selecting a link, and notifying interested hosts of the address of the selected link. A mobile computing devices migrates across link technologies on a subnet while maintaining on-going communication and comprises a link migration module selecting a link, and notifying interested hosts of the address of the selected link, and a dynamic MAC to IP binding module binding a MAC address to an IP address based upon the selected link. A computer-readable medium storing a program which when executed by a computer causes the computer to execute the functions of migrating across link technologies on a subnet while maintaining on-going communication, comprising selecting a link, and notifying interested hosts of the address of the selected link. The migration is executed within the mobile computing device and does not entail modification to the other components of the network.",
	"url": null,
	"owner": "Fujitsu Limited",
	"publication_number": "07492787",
	"publication_date": "2009-02-17",
	"application_number": "10108473",
	"application_date": "2002-03-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transmission bandwidth control device",
	"summary": "",
	"abstract": "Included are a network information database for storing the statistical information collected from a router, a user request processing unit for accepting and processing a flow forwarding request from a user terminal connected to the network, a route control unit for searching for a route corresponding to the request from the user terminal by referring to the network information database, a load sharing control unit for executing such a load sharing process as to generate router setting information for sharing a transmission load of the network by referring to the network information database, and a router control unit for setting a router based on the route information determined by the route control unit and on the router setting information generated by the load sharing control unit.",
	"url": null,
	"owner": "Fujitsu Limited",
	"publication_number": "07630317",
	"publication_date": "2009-12-08",
	"application_number": "10769701",
	"application_date": "2004-01-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Acquisition and synchronization of digital media to a personal information space",
	"summary": "",
	"abstract": "A method for transferring media data to a network coupled apparatus is described. The method includes maintaining a personal information space identified with a user and having media data. The personal information space is coupled to the network. Upon a user request, the method transfers at least a portion of the media data from the personal information space to the network coupled apparatus in a differencing transaction.",
	"url": null,
	"owner": "FusionOne, Inc.",
	"publication_number": "07587446",
	"publication_date": "2009-09-08",
	"application_number": "09710162",
	"application_date": "2000-11-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Personal information space management system and method",
	"summary": "",
	"abstract": "A system and method for organizing information in a personal information space. The personal information space includes at least one data source holding at least a portion of the personal information space. The system includes an agent for the data source which provides interaction information regarding data in the data source; and a interaction evaluation engine including one or more weighting characteristics for each interaction, and providing an output reflecting a weighting of one or more characteristics of the interaction. The method may comprise the steps of determining when an interaction between a contact on one of the contact data sources occurs; analyzing one or more characteristics of the interaction event to determine a at least one trait about the interaction; and generating a result based on said step of analyzing.",
	"url": null,
	"owner": "FusionOne, Inc.",
	"publication_number": "07634509",
	"publication_date": "2009-12-15",
	"application_number": "10704443",
	"application_date": "2003-11-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic account mapping system for computerized asset trading",
	"summary": "",
	"abstract": "Methods and apparatuses for processing orders in a computerized asset trading system when the order contains trading requirements for trading accounts that do not map to trading accounts recognized by the provider trading system. The invention books trading requirements associated with the unrecognized trading accounts against a default trading account set up for the customer by the provider, thereby allowing the order to be processed instead of rejected merely because one or more of the customer-specified trading accounts has not yet been approved by the provider. The invention also allows providers to specifically block customer trading accounts, and to dynamically create approved trading accounts as they are needed so that subsequent transactions involving the previously unapproved trading accounts will be executed without using the default trading account. The invention also rejects orders for customer trading accounts that have been specifically blocked by the provider.",
	"url": null,
	"owner": "FX Alliance, LLC",
	"publication_number": "07634438",
	"publication_date": "2009-12-15",
	"application_number": "11316385",
	"application_date": "2005-12-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Protocol-independent asset trading system and methods",
	"summary": "",
	"abstract": "Systems and methods for executing trades on an interconnected computer network, such as the Internet, using a catalog of protocol-independent fundamental asset trading messages, called u201cgestures,u201d that support multiple higher-level trading protocols which characterize most asset trading transactions. Trading transactions requiring protocol-dependent workflows are composed from protocol-independent gestures selected from the catalogue of gestures and then passed one at a time to an online asset trading server. The online asset trading server transitions pending quotes and trades through a series of distinct states, based on the current state, the selected protocol-independent gestures it receives and a set of state transition rules, thereby implementing the higher-level protocol-dependent workflows.",
	"url": null,
	"owner": "FX Alliance, LLC",
	"publication_number": "07536343",
	"publication_date": "2009-05-19",
	"application_number": "10996603",
	"application_date": "2004-11-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Navigation with real-time weather",
	"summary": "",
	"abstract": "Real-time weather information is dynamically acquired in real-time and presented within a display. The display also includes a variety of other information, such as a route and a current position associated with a navigation device. The real-time weather information includes real-time weather and/or water conditions. The real-time weather and/or water conditions are presented within the display with unique visual features and concurrently presented with the other information.",
	"url": null,
	"owner": "Garmin Ltd.",
	"publication_number": "07516011",
	"publication_date": "2009-04-07",
	"application_number": "11034654",
	"application_date": "2005-01-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Triggering a proactive session from an applet in a smart card",
	"summary": "",
	"abstract": "In a communication interface of a terminal, such as a mobile device, that includes a first application part (APT), an action is triggered from a second application part in a chip card. After a command designating the action and transmitted from the first to the second part, the first part is put to sleep. The second part is put on standby and storing parameters of the action are stored in the chip card. The second part is awakened following an event command transmitted by the communication interface, and the stored parameters are read. A command, for example for a call establishment or short message sending request, is established according to the parameters read from the second awakened part, and the established command is transmitted to the communication interface.",
	"url": null,
	"owner": "Gemalto SA",
	"publication_number": "07481373",
	"publication_date": "2009-01-27",
	"application_number": "11205188",
	"application_date": "2005-08-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Shared queues in shared object space",
	"summary": "",
	"abstract": "A system for sharing queues among multiple applications each running inside its own virtual machine.",
	"url": null,
	"owner": "Gemstone Systems, Inc.",
	"publication_number": "07543301",
	"publication_date": "2009-06-02",
	"application_number": "10690689",
	"application_date": "2003-10-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Internet protocol telephony security architecture",
	"summary": "",
	"abstract": "A secure Internet Protocol (IP) telephony system, apparatus, and methods are disclosed. Communications over an IP telephony system can be secured by securing communications to and from a Cable Telephony Adapter (CTA). The system can include one or more CTAs, network servers, servers configured as signaling controllers, key distribution centers (KDC), and can include gateways that couple the IP telephony system to a Public Switched Telephone Network (PSTN). Each CTA can be configured as secure hardware and can be configured with multiple encryption keys that are used to communicate signaling or bearer channel communications. The KDC can be configured to periodically distribute symmetric encryption keys to secure communications between devices that have been provisioned to operate in the system and signaling controllers. The secure devices, such as the CTA, can communicate with other secure devices by establishing signaling and bearer channels that are encrypted with session specific symmetric keys derived from a symmetric key distributed by a signaling controller.",
	"url": null,
	"owner": "General Instrumental Corporation",
	"publication_number": "07568223",
	"publication_date": "2009-07-28",
	"application_number": "10893047",
	"application_date": "2004-07-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Determining presence for interaction routing",
	"summary": "",
	"abstract": "An Internet Protocol Network Telephony call center having a plurality of agents for serving clients also processes e-mails addresses to the call center, but not to specific agents. An e-mail server receives and routes the e-mail, and includes a router and a database storing skill set information regarding agents. The router extracts information from the e-mails, matches key words in the extracted information with key words from the skill sets, and routes the e-mails to appropriate agents having the necessary skills to respond to the service requirements in the e-mails.",
	"url": null,
	"owner": "Genesys Telecommunications Laboratories, Inc.",
	"publication_number": "07619996",
	"publication_date": "2009-11-17",
	"application_number": "11741178",
	"application_date": "2007-04-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for playing call indications for telecommunications systems at least partially implemented in computer file access networks",
	"summary": "",
	"abstract": "This invention is especially intended for playing Ring Tones (referred to hereinbelow as u201cRT'su201d) on a called computer terminal, and/or Ring Back Tones (referred to hereinbelow as u201cRBT'su201d) on the calling computer terminal, in voice communications selected from users of different computer terminals, mainly personal computers (referred to hereinbelow as u201cPC'su201d) by means of a network which is at least partially a data network capable of supporting voice, such as the Internet. RT's and/or RBT's are played by means of a continuous download of said tones (referred to hereinbelow as u201cstreamingu201d) given that neither RT nor RBT are present at any time on any of the PC's, but rather are downloaded from a remote server where RT's and/or RBT's are located. In general, the user of the called PC will be the one determining what RT and/or RBT will be played in terms of the different optional factors such as which calling PC is involved.",
	"url": null,
	"owner": "Genexies Mobile, S. L.",
	"publication_number": "07623642",
	"publication_date": "2009-11-24",
	"application_number": "11165377",
	"application_date": "2005-06-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing data security",
	"summary": "",
	"abstract": "A system and method protects security of data. The data is packaged together with one or more permissions that designate what actions are allowed with respect to the data. The package can be opened when there is approval for doing so and the allowed permissions are maintained. The data is stored within a vault and there are a number of available security procedures that prevent the unauthorized access of the data.",
	"url": null,
	"owner": "GigaTrust",
	"publication_number": "07484245",
	"publication_date": "2009-01-27",
	"application_number": "09701157",
	"application_date": "2000-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Matrix-connected, artificially intelligent address book system",
	"summary": "",
	"abstract": "An online address book system having sufficient hardware and software to operate an address book user interface and to perform intelligent interpretations of inputs from users. The system includes at least one server software module that includes software to perform a plurality of functions. These include the ability to receive input data and separate user queries, wherein the software can arrange the data so as to create a data base that includes at least three access dimensions, including contact access, contact-relationship access and contact-time frame access, and so as to create a connectivity matrix based on a plurality of contact pair relationships applying connective recognition logic. The system provides a user interface that permits access to address book stored data based on user input selected from the group consisting of contact, a contact-relationship pair, a contact-time frame pair, and combinations thereof.",
	"url": null,
	"owner": "GlynnTech, Inc.",
	"publication_number": "07567982",
	"publication_date": "2009-07-28",
	"application_number": "11440837",
	"application_date": "2006-05-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Golf reservation system",
	"summary": "",
	"abstract": "Embodiments of the present invention provide a golf reservation system. The golf reservation system may periodically poll tee-sheet systems to determine available inventory. The golf reservation system may use the results of these pollings for responding to a user request. Other embodiments may be described and claimed.",
	"url": null,
	"owner": "GolfNow, Inc.",
	"publication_number": "07634426",
	"publication_date": "2009-12-15",
	"application_number": "11740100",
	"application_date": "2007-04-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generating specialized search results in response to patterned queries",
	"summary": "",
	"abstract": "Third party content providers can specify parameters for generating specialized search results in response to queries matching specific patterns. In this way, a generic search website can be enhanced to provide specialized search results to subscribed users. In one embodiment, these specialized results appear on a given user's result pages only when the user has subscribed to the enhancements from that particular content provider, so that users can tailor their search experience and see results that are more likely to be of interest to them. In other embodiments the specialized results are available to all users.",
	"url": null,
	"owner": "Google Inc.",
	"publication_number": "07593939",
	"publication_date": "2009-09-22",
	"application_number": "11694490",
	"application_date": "2007-03-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Indirect subscriptions to top N lists of content feeds",
	"summary": "",
	"abstract": "A user may subscribe to a content feed group that includes a set of content feeds. The content feed group includes a first set of content items from the set of included content feeds. The content items are presented in response to a subscription to the content feed group. After a change to a content feed group, such as an addition or a removal of a content feed from the set, a second set of content items, reflecting the changed set of content feeds, are presented.",
	"url": null,
	"owner": "Google Inc.",
	"publication_number": "07590691",
	"publication_date": "2009-09-15",
	"application_number": "11246656",
	"application_date": "2005-10-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for managing a peer-to-peer collaboration system",
	"summary": "",
	"abstract": "Users and devices in a peer-to-peer collaboration system can join a management domain in which members are administered as a group by a centralized management server operated by an enterprise. In response to a administrator request to join the management domain, the user downloads an injectible identity file containing a definition of the managed user/device into the user system. The user then joins the managed domain by associating the injected identity with their actual identity. Once a user or device is part of a management domain, that user or device receives license rights and policy restrictions that are associated with the domain. In return, the management server interacts with the individual peer-to-peer collaboration systems to enable the enterprise to monitor the usage of, and control the behavior of, that specific identity within the peer-to-peer collaboration system.",
	"url": null,
	"owner": "Groove Networks, Inc.",
	"publication_number": "07546359",
	"publication_date": "2009-06-09",
	"application_number": "10036275",
	"application_date": "2001-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for executing software applications using a portable memory device",
	"summary": "",
	"abstract": "A method for executing a plurality of software applications using a portable memory device, which is equipped with execution files and a virtual registry file of a software application to be executed. Once the portable memory device is plugged into a computer, the presence of the device is automatically detected, and thereafter the application programmable interface (API) calls are mapped to access the virtual registry file and the execution files, thereby allowing the execution of the application residing on the portable memory device.",
	"url": null,
	"owner": "GTEKO, Ltd",
	"publication_number": "07600216",
	"publication_date": "2009-10-06",
	"application_number": "11110806",
	"application_date": "2005-04-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for protecting encrypted files transmitted over a network",
	"summary": "",
	"abstract": "An improved system and approaches for protecting secured files when being used by an application (e.g., network browser) that potentially transmits the files over a network to unknown external locations are disclosed. According to one aspect, access to secured files is restricted so that unsecured versions of the secured files are not able to be transmitted over a network (e.g., the Internet) to unauthorized destinations. In one embodiment, in opening a file for use by a network browser, the network browser receives a secured (e.g., encrypted) version of the secured file when the destination location (e.g., destination address) for the network browser is not trusted, but receives an unsecured (e.g., unencrypted) version of the secured file when the destination location for the network browser is trusted. According to another aspect, processes operating on a computer system are monitored to determine destination locations, if any, of said processes, and then using such destination locations to determine whether to permit the processes to open files in a secure or unsecured manner.",
	"url": null,
	"owner": "Guardian Data Storage LLC",
	"publication_number": "07512810",
	"publication_date": "2009-03-31",
	"application_number": "10242185",
	"application_date": "2002-09-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Fabric address and sub-address resolution in fabric-backplane enterprise servers",
	"summary": "",
	"abstract": "A hybrid server and multi-layer switch system architecture, referred to hereinafter as the Enterprise Fabric (EF) architecture, forms the basis for a number of Enterprise Server (ES) chassis embodiments. Each ES embodiment generally includes one or more Processor Memory Modules (PMMs, each generally having one or more symmetric multiprocessor complexes), one or more Network Modules, and a System Control Module (SCM). The SCM includes a cellified switching-fabric core (SF) and a System Intelligence Module (SIM). Each PMM has one or more resident Virtual IO Controller (VIOC) adapters. Each VIOC is a specialized I/O controller that includes embedded layer-2 forwarding and filtering functions and tightly couples the PMM to the SF. Thus the layer-2 switch functionality within the ES chassis is distributed over all of the SCM, NM, and PMM modules. Through the use of VIOC/VNIC device drivers, host operating system software (Host O/S) running on the PMMs is presented with a plurality of Virtual Network Interface Cards (VNICs). In some embodiments, each VNIC behaves as a high-performance Ethernet interface at the full disposal of the Host O/S. In other embodiments, at least some of the VNICs behave as high-performance Fiber Channel Host Bus Adapters.",
	"url": null,
	"owner": "Habanero Holdings, Inc.",
	"publication_number": "07561571",
	"publication_date": "2009-07-14",
	"application_number": "11057119",
	"application_date": "2005-02-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "SCSI transport for fabric-backplane enterprise servers",
	"summary": "",
	"abstract": "A Small Computer System Interface (SCSI) transport for fabric backplane enterprise servers provides for local and remote communication of storage system information between storage sub-system elements of an ES system and other elements of an ES system via a storage interface. The transport includes encapsulation of information for communication via a reliable transport implemented in part across a cellifying switch fabric. The transport may optionally include communication via Ethernet frames over any of a local network or the Internet. Remote Direct Memory Access (RDMA) and Direct Data Placement (DDP) protocols are used to communicate the information (commands, responses, and data) between SCSI initiator and target end-points. A Fibre Channel Module (FCM) may be operated as a SCSI target providing a storage interface to any of a Processor Memory Module (PMM), a System Control Module (SCM), and an OffLoad Module (OLM) operated as a SCSI initiator.",
	"url": null,
	"owner": "Habanero Holdings, Inc.",
	"publication_number": "07633955",
	"publication_date": "2009-12-15",
	"application_number": "11337172",
	"application_date": "2006-01-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Routing device and method for use with a HTTP enabled computer peripheral",
	"summary": "",
	"abstract": "The invention features a system and method for programming, integrating, and controlling the operation of computer peripherals. In brief overview, a computer peripheral is provided with a network communications protocol stack that includes a hypertext transfer protocol (HTTP) layer. The HTTP layer permits the computer peripheral to function as a thin web server. As such, the computer peripheral is able to respond to HTTP requests. In one embodiment, the invention includes a router that is in communication with the computer peripheral. The computer peripheral has an assigned HTTP port number and an assigned network address. The router includes a routing table that associates the computer peripheral's assigned HTTP port number with the computer peripheral's assigned network address. According to this embodiment, a message with a computer peripheral HTTP port number identifier is forwarded to the computer peripheral by the router.",
	"url": null,
	"owner": "Hand Held Products, Inc.",
	"publication_number": "07568015",
	"publication_date": "2009-07-28",
	"application_number": "10819616",
	"application_date": "2004-04-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Sampling rate conversion system",
	"summary": "",
	"abstract": "A sampling rate conversion system reduces the signal processing burdens carried by cellular phones, headsets, and other electronic devices. Because the system consumes fewer resources to convert between signal sampling rates, the system may significantly reduce processing time and resource requirements in the device. As a result, the device may instead devote resources to performing other useful tasks, such as interacting with the user through a graphical user interface and performing selected processing tasks.",
	"url": null,
	"owner": "Harman Becker Automotive Systems GmbH",
	"publication_number": "07554465",
	"publication_date": "2009-06-30",
	"application_number": "11855575",
	"application_date": "2007-09-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Event sequencer used for controlling the sequence and timing of events in software defined radio",
	"summary": "",
	"abstract": "A software defined radio has a radio circuit and executable radio software system operable with the radio circuit, and defining an operating environment that allows a waveform application to operate with the radio circuit for transmitting and receiving voice and data. A processor, such as a Field Programmable Gate Array (FPGA), is operable with the radio circuit and includes an event sequencer for controlling the sequence and timing of events in the radio circuit.",
	"url": null,
	"owner": "Harris Corporation",
	"publication_number": "07499724",
	"publication_date": "2009-03-03",
	"application_number": "11342996",
	"application_date": "2006-01-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Adaptor module",
	"summary": "",
	"abstract": "An adaptor module for use with a service manager adapted to functionally lie between a service application operable to provide a service and a network layer of a telecommunication network service entity, the adaptor module being operable to; receive from the service manager a service output message generated by the service application, map the service output message to a corresponding network input message accepted by the network layer, and pass the network input message to the service manager for transmission to the network layer.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07573899",
	"publication_date": "2009-08-11",
	"application_number": "10418958",
	"application_date": "2003-04-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application programming interface for a virtual switch",
	"summary": "",
	"abstract": "An electronic system may include an application programming interface for use in conjunction with a virtual switch. In some embodiments, the electronic system may comprise a processor; a network interface controller including a hardware port, a virtual switch comprising software executed by the processor, and an application programming interface (u201cAPIu201d) running on the processor and usable by a application to interface with the virtual switch.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07509657",
	"publication_date": "2009-03-24",
	"application_number": "10695210",
	"application_date": "2003-10-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer system security service",
	"summary": "",
	"abstract": "A security service of computer networks having a policy builder, an LDAP-compliant database, a validator and an API. The policy builder component provides a graphical user interface to be used by a policy manager to define access policies for users seeking to access network services and resources. The graphical user interface has a grid of nodes representing access policies. The grid is arranged to correspond to a defined tree structure representing services and resources and a business relationship tree structure representing users. The graphical user interface permits the policy manager to define policy builder plug-ins for access policy customization. The LDAP-compliant database maintains the policy builder plug-ins. The validator component receives requests from users and queries the LDAP-compliant database to obtain relevant access policies as defined by the policy manager. The system provides for double inheritance of access policies such that where there is no express definition of an access policy for a node, the access policies are propagated according to the hierarchical structures of the data. The validator includes validator plug-ins for carrying out access policies corresponding to the access policies defined by policy builder plug-ins.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07512965",
	"publication_date": "2009-03-31",
	"application_number": "09611463",
	"application_date": "2000-07-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data assurance workflow derivation and execution",
	"summary": "",
	"abstract": "A method for providing data assurance includes receiving selected input data to perform data assurance thereon, and receiving selected parameters for the data assurance. Data assurance modules are provided that translate the input data and the parameters and that derive a workflow for the data assurance based on the translated input data and the parameters. The workflow is executed to provide the data assurance on the input data.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07571069",
	"publication_date": "2009-08-04",
	"application_number": "11644168",
	"application_date": "2006-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Effecting action to address an issue associated with a category based on information that enables ranking of categories",
	"summary": "",
	"abstract": "A categorizer is trained for plural categories according to a machine-learning algorithm. The categorizer classifies cases in a set of cases into the plural categories. One or more quantification measures regarding cases in the data set are computed based on output from the categorizer, and information is provided to enable ranking of the categories based on the one or more quantification measures. Action is effected to address an issue associated with at least one of the categories based on the provided information.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07593904",
	"publication_date": "2009-09-22",
	"application_number": "11172187",
	"application_date": "2005-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generating an alert to indicate stale data",
	"summary": "",
	"abstract": "A method for indicating stale data whereby a receiving system receives images and sync messages from a sending system and computes a time difference between a current time and a time a last sync message was received from the sending system. If such a time difference meets or exceeds a first threshold, the an alert is generated.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07565261",
	"publication_date": "2009-07-21",
	"application_number": "11537379",
	"application_date": "2006-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Geometry and view assisted transmission of graphics image streams",
	"summary": "",
	"abstract": "Geometry and view data relating to a image sequences is transmitted from a server to a client computer. Such enables reconstruction of images by a client with reduced bandwidth for the image stream transmission. A previous-image mesh of coordinates and depth values for selected pixels from the array of pixels in a previous-image is generated at the server. The depth values are transmitted to the client. A change-in-view matrix is generated at the server and transmitted to the client. Such represents the change in viewing parameters between the previous-image and a current-image. The change-in-view matrix is applied to the previous-image mesh to create a current-image mesh, independently at both the server and at the client. Such is applied to the previous-image to generate a predicted current-image. The current-image is generated at the server and a difference between the current-image and the predicted current-image is computed. The computed difference is transmitted to the client and applied to the predicted current-image generated at the client to generate the current-image.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07529418",
	"publication_date": "2009-05-05",
	"application_number": "10850887",
	"application_date": "2004-05-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for associating image enhancement with color",
	"summary": "",
	"abstract": "Provided is a method and apparatus of processing an image using filters. The method and apparatus receives an input pixel and a pixel array associated with the image, identifies a color of the pixel array to facilitate processing the input pixel and the pixel array associated with the image and locates the color and the association with a corresponding image enhancement operation in a color lookup table.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07545976",
	"publication_date": "2009-06-09",
	"application_number": "10137001",
	"application_date": "2002-05-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for automated registry clean-up",
	"summary": "",
	"abstract": "One embodiment disclosed relates to a method of automated registry clean-up for an operating system of a computer system. Interfaces on which each module depends is determined, and a module is marked as obsolete if the module depends on an interface that is non-existent in the operating system. Configuration data is removed from a system registry for modules marked as obsolete. Other embodiments are also disclosed.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07530064",
	"publication_date": "2009-05-05",
	"application_number": "10945613",
	"application_date": "2004-09-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for connecting calls",
	"summary": "",
	"abstract": "An apparatus and a method for connecting calls from a digital directory. The system includes a telecommunication appliance and a digital directory, in communication with and accessible by the telecommunication appliance. The telecommunication appliance includes a display, a user input, and, means for making a call. The digital directory includes a plurality of digital directory entries, wherein each digital directory entry includes information about a business. The telecommunication appliance displays at least some of the digital directory entries from the digital directory on the display, receives a user selection of one of the digital directory entries representing a selected business via the user input, and makes a call to the selected business using the means for making a call and the information about the selected business.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07529360",
	"publication_date": "2009-05-05",
	"application_number": "10704605",
	"application_date": "2003-11-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Option ROM code acquisition",
	"summary": "",
	"abstract": "Systems, methodologies, media, and other embodiments associated with acquiring processor executable instructions from an option ROM are described. One exemplary method embodiment includes discovering input/output devices operably connected to a processor and updating a data structure with information concerning the input/output devices. The example method embodiment may also include obtaining a device driver from an option ROM associated with an input/output device, storing the device driver in non-MMIO memory and making the device driver available to input/output devices physically connected to the processor and for which information is stored in the data structure.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07539832",
	"publication_date": "2009-05-26",
	"application_number": "10923905",
	"application_date": "2004-08-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Persistent memory manipulation using EFI",
	"summary": "",
	"abstract": "Systems, methodologies, media, and other embodiments associated with performing a manipulation of a persistent memory using an extensible firmware interface are described. One exemplary method embodiment includes selectively refreshing a persistent memory from an EFI level application and providing to a user level application a signal concerning the persistent memory refreshing.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07574593",
	"publication_date": "2009-08-11",
	"application_number": "11004355",
	"application_date": "2004-12-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Pre-configured topology with connection management",
	"summary": "",
	"abstract": "Systems, methodologies, media, and other embodiments associated with pre-configured topology connection management are described. One exemplary system embodiment includes an interface logic configured to acquire information about a set of client nodes, to pre-configure a subset of the client nodes into a pre-configured topology, and to make available information about the pre-configured topology. The exemplary system may also include a logic for mapping a resource to a port through which it can be accessed and a logic for determining whether a requestor will be granted a connection to the machine on which the resource resides based, at least in part, on membership in the pre-configured topology. Membership in the pre-configured topology may be determined by a connection management logic analyzing a node identifier provided by the requestor in a request related to accessing the resource.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07502333",
	"publication_date": "2009-03-10",
	"application_number": "10806628",
	"application_date": "2004-03-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Remote network printing",
	"summary": "",
	"abstract": "A remote printing system comprises a job sending component arranged to transmit a print job comprising one or more print files and an indicator of one or more job receivers to a remote printing server. The remote printing server is arranged to receive print jobs from one or more job sending components and to store the print jobs. The server is further arranged to receive notification of acceptance of at least a portion of a print job from one or more of the job receivers. A job receiving component is associated with a job receiver. The job receiving component is arranged to receive any of the portions of print jobs accepted by the associated job receiver and to transmit the accepted portions to a printer for printing.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07474423",
	"publication_date": "2009-01-06",
	"application_number": "10281086",
	"application_date": "2002-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Single system for managing multi-platform data retrieval",
	"summary": "",
	"abstract": "A method of interacting with one or more data sources storing information and a system for performing the method thereof. The method receives a user request to interact with data source information, e.g. retrieve or update user contact information in a data source, identifies one or more data sources to interact with based on the user request, interacts with one or more of the identified data sources and receives a result of interacting with the identified data sources. Responsive to the user request, the method transmits the interaction result to the user. A system for interacting with a data source according to the above-described method includes: a memory storing (1) a data structure and (2) a sequence of executable instructions; and a processor for executing the instructions. The data structure stores information including user contact information and data source information. The sequence of executable instructions include a data retrieval application including the above-described method.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07483875",
	"publication_date": "2009-01-27",
	"application_number": "10350327",
	"application_date": "2003-01-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for controlling access in an interactive grid environment",
	"summary": "",
	"abstract": "A system and method for controlling access in an interactive grid environment is disclosed. Embodiments of the present invention include a method for controlling remote desktop access provided by an interactive grid computing system comprising determining user policies based on a classification of a user and providing a dynamic user account to the user, wherein the dynamic user account is customized based on the user policies to limit access to resources accessible through a remote desktop.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07475419",
	"publication_date": "2009-01-06",
	"application_number": "10665879",
	"application_date": "2003-09-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for generating ACPI machine language tables",
	"summary": "",
	"abstract": "An ACPI-compatible system is provided that comprises a database for storing a device-specific descriptor for a hardware device. The system further comprises an ACPI agent operable to autonomously construct an ACPI table entry for the hardware device using the device-specific descriptor. Also, a method for an ACPI-compatible system autonomously constructing an ACPI table entry for a hardware device is provided. The method comprises receiving from firmware associated with the hardware device, a device-specific descriptor for such hardware device, and an ACPI agent executing on the ACPI-compatible system using the device-specific descriptor to autonomously construct an ACPI table entry for the hardware device.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07502803",
	"publication_date": "2009-03-10",
	"application_number": "10446950",
	"application_date": "2003-05-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing event notifications to information technology resource managers",
	"summary": "",
	"abstract": "A managed object implements an interface that includes information regarding events that can occur during operation of the managed object and other resources and managed objects. A manager can subscribe to receive a notification when one or more of the events occur in a pull mode where the notifications are sent only when requested by the manager. The manager can also subscribe to receive notification of the events in a push mode where the managed objects send the notifications to the manager when the events occur.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07509651",
	"publication_date": "2009-03-24",
	"application_number": "10445237",
	"application_date": "2003-05-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing location profile data for network nodes",
	"summary": "",
	"abstract": "A system for providing relational data for a hierarchically-organized plurality of nodes is provided, such as for providing physical location data of a node in an enterprise network. The system includes a hierarchical database system storing network hierarchy data for the plurality of nodes, such as an LDAP database. A configuration repository system stores relational data associated with one or more of the nodes, such as the room and floor location of each node. The relational data of the configuration repository system is organized in a bottom-up order and the network hierarchy data of the hierarchical database system is organized in a top-down order, such that the location of a node in an organization can be determined by searching using an application programming interface that goes from the node location upwards through the network hierarchy.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07590618",
	"publication_date": "2009-09-15",
	"application_number": "10107020",
	"application_date": "2002-03-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System architecture for wide-area workstation management",
	"summary": "",
	"abstract": "A system architecture for managing a group of heterogeneous workstations that may be widely dispersed geographically. A system according to the present teachings enables users to access remote workstations and run applications on the remote workstations transparently and enables seamless integration of remote desktop sharing and distributing desktops among heterogeneous workstations. The system also provides enforcement of protections among user and workstations, user account management and workstation allocation management. The present architecture is platform independent and enables workstations to be accessed from anywhere using a graphical user interface through the Internet.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07584239",
	"publication_date": "2009-09-01",
	"application_number": "10431063",
	"application_date": "2003-05-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for managing user profile data",
	"summary": "",
	"abstract": "In a communications environment, a system for managing user profile data comprises a network interface layer operatively associated with a communications network and a storage layer operative to store user profile data relating to the communications network. the system further comprising a data conversion layer functionally disposed between the network interface and the data storage layers. the data conversion layer is capable of converting the user profile data into a plurality of communication network formats.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07548985",
	"publication_date": "2009-06-16",
	"application_number": "10649976",
	"application_date": "2003-08-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Trap mode register",
	"summary": "",
	"abstract": "Systems, methodologies, media, and other embodiments associated with a system configured with a trap mode register, multiple interrupt vector address registers, and multiple interrupt vector tables are described. One exemplary system embodiment includes a logic for initializing the trap mode register, for initializing interrupt vector address registers, and for initializing interrupt vector tables. When a trap occurs in a computer configured with the exemplary system, the trap mode register may select, based, for example, on the trap type or a trap data, an associated interrupt vector address register to provide an address of an interrupt vector table through which a trap handler can be invoked.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07480755",
	"publication_date": "2009-01-20",
	"application_number": "11006964",
	"application_date": "2004-12-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Trusted computing platform for restricting use of data",
	"summary": "",
	"abstract": "A client/server system has a client platform adapted to provide restricted use of data provided by a serve. The client platform comprises a display, secure communications means, and a memory containing image receiving code for receiving data from a server by the secure communication means and for display of such data. The client platform is adapted such that the data received from a server is used for display of the data and not for an unauthorised purpose. A server adapted to provide data to a client platform for restricted use by the client platform comprises a memory containing image sending code for providing an image of data executed on the server, and secure communications means for secure communication of images of data to a client platform. The server is adapted to determine that a client platform is adapted to ensure restricted use of the data before it is sent by the image sending code.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07526785",
	"publication_date": "2009-04-28",
	"application_number": "10088258",
	"application_date": "2000-09-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Virtualization logic",
	"summary": "",
	"abstract": "Systems, methodologies, media, and other embodiments associated with externally trapping transactions are described. One exemplary system embodiment includes an external virtualization logic configured to be operably connected to a processor that does not include internal virtualization support. The example system may include a data store for storing a trappable memory address and a transaction that causes the external virtualization logic to produce a trap.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07600082",
	"publication_date": "2009-10-06",
	"application_number": "11000279",
	"application_date": "2004-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for facilitating money or value transfer",
	"summary": "",
	"abstract": "An apparatus and method for transferring money or value, using a wide range of interfaces to initiate a transfer and a wide range of options for receiving the transfer, including receiving the transferred sum directly to the communication device/account of the receiver. The receiver can use the transferred sum as an airtime credit, to obtain cash or to pay for other goods or services.",
	"url": null,
	"owner": "HIP Consult Inc.",
	"publication_number": "07540408",
	"publication_date": "2009-06-02",
	"application_number": "11425839",
	"application_date": "2006-06-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Write protection in a storage system allowing both file-level access and volume-level access",
	"summary": "",
	"abstract": "A method for write protection in a storage system using both the u201cfile-level WORM functionu201d and the u201cblock-level WORM functionu201d. The block-level WORM function has two modes: the first mode is to prohibit both file access and block access, and the second mode is to prohibit block access only. When a user uses the file-level WORM function to prohibit write access to a file in a volume, a file access invokes the first mode of the block-level WORM function to prohibit write access to the volume where the write prohibited file resides.",
	"url": null,
	"owner": "Hitachi Data Systems Corporation",
	"publication_number": "07558930",
	"publication_date": "2009-07-07",
	"application_number": "11188006",
	"application_date": "2005-07-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integrated service management system",
	"summary": "",
	"abstract": "The present invention provides techniques for creation, operation and management of network-based storage services. Specific embodiments provide improved efficiency of the service management tasks used for designing, operating and accounting the robust and profitable network services, for example. In representative embodiments, techniques for constructing integrated network and storage services are provided. In a specific embodiment, the service comprises of three major service components: virtual private networks (VPN), application servers and storage area networks (SAN). Each of these service components has its own customer identification information, such as VPN identifier for VPN services, process identifier for application servers and logical unit number (LUN) for storage devices.",
	"url": null,
	"owner": "Hitachi, Ltd.",
	"publication_number": "07617271",
	"publication_date": "2009-11-10",
	"application_number": "11479495",
	"application_date": "2006-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for file replication with a common format",
	"summary": "",
	"abstract": "File requests sent to a file server that supports a proprietary file system are selectively performed on a second file system, in addition to being performed on the first file system. The second file system is not proprietary, but rather is designed around a publicly known format. Access to the second file system does not require obtaining permission from the vendor of the first file system; e.g., licensing, payment of royalties, and so on.",
	"url": null,
	"owner": "Hitachi, Ltd.",
	"publication_number": "07516133",
	"publication_date": "2009-04-07",
	"application_number": "10688329",
	"application_date": "2003-10-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for synchronizing applications for data recovery using storage based journaling",
	"summary": "",
	"abstract": "Disclosed is a method to synchronize the state of an application and an application's objects with data stored on the storage system. The storage system provides API's to create special data, called a marker journal, and stores it on a journal volume. The marker contains application information, e.g. file name, operation on the file, timestamp, etc. Since the journal volume contains markers as well as any changed data in the chronological order, IO activities to the storage system and application activities can be synchronized.",
	"url": null,
	"owner": "Hitachi, Ltd.",
	"publication_number": "07555505",
	"publication_date": "2009-06-30",
	"application_number": "11365085",
	"application_date": "2006-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for validation of application data on a storage system",
	"summary": "",
	"abstract": "An authentication processing method and system includes an access control list on both a client system and a storage server system. The access control list stores authentication information for individual files. The authentication information is accessed and used to authenticate an application when the application requests access to a file. The client system adds information from the access control list to a data request sent to the storage server system. The storage server system controls access to the requested file based upon the information included with the data request and the access control list on the storage server system.",
	"url": null,
	"owner": "Hitachi, Ltd.",
	"publication_number": "07549171",
	"publication_date": "2009-06-16",
	"application_number": "10866413",
	"application_date": "2004-06-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Voice communication system",
	"summary": "",
	"abstract": "A voice communication system, in which the real space is associated with a virtual space and a relative location and direction of a communication partner in the real space can be grasped as bodily sensations, is provided. A client  comprises a GPS receiver  and a magnetic sensor  which detects a location of a user of the client  itself in the real space, a presence provider  which sends the location detected by the detection means to a server apparatus, a space modeler  which calculates a location of the user in the virtual space based on the location of the user himself and locations of the other users in the real space, and an audio renderer  which controls sound effects based on the locations of the users in the virtual space.",
	"url": null,
	"owner": "Hitachi, Ltd.",
	"publication_number": "07634073",
	"publication_date": "2009-12-15",
	"application_number": "10914647",
	"application_date": "2004-08-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network telephony system with enhanced interconversion of audio signals and IP packets",
	"summary": "",
	"abstract": "A telephony system () for communication over a network includes a kernel space (), a media express processor operating environment () for providing a set of software facilities for task synchronization, and a user space (). The kernel space includes a board support package (), a ucLinux module (), a digital signal processor interface module (), a transfer control protocol/Internet protocol (TCP/IP) stack () for performing TCP/IP, and a real-time transport protocol/real-time transport control protocol module (). The user space includes a digital signal processor manager (), an H.323/session initiation protocol (H.323/SIP) stack () for performing H.323 protocol or SIP, a system managing module (), an event dispatcher (), a line state machine (), a call manager (), a call logging module (), and a directory module () for storing, editing, searching and removing contact information of users.",
	"url": null,
	"owner": "Hon Hai Precision Industry Co., Ltd.",
	"publication_number": "07545738",
	"publication_date": "2009-06-09",
	"application_number": "10829908",
	"application_date": "2004-04-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for storing a data file backup",
	"summary": "",
	"abstract": "A method for storing a data file copy is provided. The method includes the steps of: (a) dividing a duplicate of a data file stored in a mother node into a plurality of data pieces and storing each data piece in a child node of the mother node; (b) determining whether the data file in the mother node is destroyed when accessed by a user; and (c) merging all the data pieces stored in the child nodes to rebuild the data file, if the data file is destroyed. A related system is also disclosed.",
	"url": null,
	"owner": "Hon Hai Precision Industry Co., Ltd.",
	"publication_number": "07533291",
	"publication_date": "2009-05-12",
	"application_number": "11309712",
	"application_date": "2006-09-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for computing reachable areas",
	"summary": "",
	"abstract": "The present invention relates to computing reachable areas given a first point. More specifically, the present invention relates to the computation of an intersection between a first surface and a second surface for determining a set of points that are reachable from a first point. Using the present invention, a user can determine either (1) a locus of target sites that can be struck by a ballistic projectile from a given launch site, or (2) a locus of launch sites that can be used to hit a given target site. The disclosed system and method employs graphics hardware to determine an intersection between a first surface defined by trajectory paths, and a second surface defined by terrain.",
	"url": null,
	"owner": "HRL Laboratories, LLC",
	"publication_number": "07599814",
	"publication_date": "2009-10-06",
	"application_number": "11413925",
	"application_date": "2006-04-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for design of a component",
	"summary": "",
	"abstract": "A design system is accessible to a designer and a plurality of manufacturers. The design system comprises a first user interface configured to receive design information for a component from the designer. The design system further comprises a second user interface configured to receive manufacturing information from the plurality of manufacturers. The manufacturing information comprises at least process cost information. The design system further comprises a database comprising the manufacturing information associated with each of the plurality of manufacturers. The design system further comprises a cost estimation module. The cost estimation module is configured to generate a cost estimate for producing the component for each of the plurality of manufacturers. The cost estimate is at least partially based on the process cost information. The cost estimation module is further configured to output the cost estimate for one or more of the plurality of manufacturers to the first user interface.",
	"url": null,
	"owner": "Idealab",
	"publication_number": "07603191",
	"publication_date": "2009-10-13",
	"application_number": "11356430",
	"application_date": "2006-02-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Reporting on authentication of RFID tags for indicating legitimacy of their associated items",
	"summary": "",
	"abstract": "RFID readers, computers, and methods are provided for reporting on the authentication of one or more RFID tags associated with a proffered item, while requiring special permissions be cleared before reporting. In some embodiments, a question is input about whether a Declared Password (DP) is regarded as proper for an Item Identifier (II), both of which have been input from the tags. An answer is generated for the question from the reference database, and transmitted to the user. The answer does not reveal an Actual Code that is indeed regarded as proper, unless the user first demonstrates they already know it. Beyond the authentication of the tag, the answer can further indicate the legitimacy of the proffered item, for a supply chain, at a Customs Office, etc.",
	"url": null,
	"owner": "Impinj, Inc.",
	"publication_number": "07633376",
	"publication_date": "2009-12-15",
	"application_number": "11637255",
	"application_date": "2006-12-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for native method invocation and changing memory bank",
	"summary": "",
	"abstract": "A method and apparatus for native method invocation and changing memory bank. A method return frame of a smart card stores the status of a native method invocation, and a memory bank flag points a program counter to a runtime environment (RE) memory bank or an operating system (OS) memory bank. First, upon a method invocation, the method return frame is pushed and set as a native method invocation when the method invocation is the native method invocation. Then, the memory bank flag points the program counter to the OS memory bank. Next, the method return frame is popped after the native method has been executed. Finally, the memory bank flag is changed to point the program counter to the RE memory bank if the method return frame is set as the native method invocation.",
	"url": null,
	"owner": "Industrial Technology Research Institute",
	"publication_number": "07536520",
	"publication_date": "2009-05-19",
	"application_number": "10930880",
	"application_date": "2004-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Performing multiple actions on a spool file by assigning a particular action to be performed on each segment of the spool file",
	"summary": "",
	"abstract": "A method, computer program product and system for performing multiple actions on a single spool file. A Portable Document Format (PDF) server (PDF server is a component of a print server) identifies segments of a spool file by identifying Base Name Group (BNG) commands in the data stream generated by an application. A BNG command may indicate the beginning of a segment of a spool file. Upon identifying a segment of the spool file, the segment may be converted into a PDF file. An action, e.g., electronic mailing, faxing, printing, to be performed on the PDF file may be determined using the attributes of the segment converted into the PDF file. For example, an entry in a database configured to store a command to perform a particular action may be indexed using these segment attributes. In this manner, multiple actions may be performed on different segments of a spool file.",
	"url": null,
	"owner": "InfoPrint Solutions Company LLC",
	"publication_number": "07577693",
	"publication_date": "2009-08-18",
	"application_number": "10933663",
	"application_date": "2004-09-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for data format transformation",
	"summary": "",
	"abstract": "A method for defining a document format transformation process for documents similar to an example document includes the following steps. An example document is provided in a first format. At least one anchor point is then specified within the example document. The anchor points serve to mark out regions of data within the example document. Positions are then defined for respective regions within a central format. During the transformation process, the data extracted from each region is transferred into the respective position. The method enables transforming documents similar to the example document into the central format.",
	"url": null,
	"owner": "Informatica Corporation",
	"publication_number": "07584422",
	"publication_date": "2009-09-01",
	"application_number": "11177329",
	"application_date": "2005-07-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Ensuring data persistence and consistency in enterprise storage backup systems",
	"summary": "",
	"abstract": "Ensuring data persistence and consistency in enterprise storage backup systems method and apparatus are disclosed. In one embodiment, a method includes creating a data log structure (e.g., a log file) on a storage device (e.g., a Serial ATA drive, a SCSI drive, a SAS drive, a storage are network, etc) coupled to an application server to store a backup data generated by a filter module in a continuous backup environment and buffering the backup data generated by the filter module through a memory module that transfers the backup data to the data log structure on the storage device based on an occurrence of an event. The data log structure may be created by configuring a portion of the storage device as a dedicated resource available to the memory module to copy the backup data and the data log structure may be a file on the storage device coupled to the application server having the file system.",
	"url": null,
	"owner": "Inmage Systems, Inc.",
	"publication_number": "07634507",
	"publication_date": "2009-12-15",
	"application_number": "11513556",
	"application_date": "2006-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic annotation of audio and/or visual data",
	"summary": "",
	"abstract": "Automatic annotation of data recorded by a device. A portion of an event may be recorded as an image, movie, sound byte, audio recording, etc., and contemporaneous to the recording, a time value (which may encode a calendar date) is determined. The time value is looked up on a calendar, and a description of the event is read from the calendar and used to automatically annotate the recording.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07478125",
	"publication_date": "2009-01-13",
	"application_number": "09952295",
	"application_date": "2001-09-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "CPU power management based on utilization with lowest performance mode at the mid-utilization range",
	"summary": "",
	"abstract": "A demand-based method and system of a processor power management is described. A processor is caused to enter a particular performance mode based on a first and a second utilization threshold. The particular performance mode includes at least a first performance mode, a second performance mode, and a third performance mode. The processor is caused to operate with a clock frequency in the third performance mode that is lower than the clock frequency of the processor in the first and second performance modes.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07596709",
	"publication_date": "2009-09-29",
	"application_number": "11478119",
	"application_date": "2006-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamically sharing a stack between different code segments",
	"summary": "",
	"abstract": "In one embodiment, the present invention includes a method for receiving a request from a caller code portion of a first color to color at least a portion of a stack with a second color, determining if the request is valid, and if so remapping the stack portion from a first mapping colored with the first color to a second mapping colored with the second color. Other embodiments are described and claimed.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07512768",
	"publication_date": "2009-03-31",
	"application_number": "11490824",
	"application_date": "2006-07-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hardware management module",
	"summary": "",
	"abstract": "A hardware management module is enabled to perform hardware management for a modular platform system that includes a plurality of modular platform shelves coupled via one or more communication links in a network. Hardware management to include monitoring board interfaces resident on one or more backplanes within the plurality of modular platform shelves, detecting when a board is received and coupled to a board interface and performing one or more hardware management functions to include obtaining field replaceable unit information from the detected board.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07558849",
	"publication_date": "2009-07-07",
	"application_number": "11201608",
	"application_date": "2005-08-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hybrid mode network stack under EFI/Tiano based BIOS in modular computing environment",
	"summary": "",
	"abstract": "A method of transmitting data through network stack choosing one of a synchronous and an asynchronous mode depending on requests of applications. The method may involve changing frequencies of a timer, for example, adjusting the frequency in the asynchronous Application Programming Interface (API) according to a load of network traffic and even stopping the timer for the synchronous API. In the asynchronous API, as heavier network traffic load is expected, the timer may increase its frequency. Accordingly, the timer decreases its frequency detecting the lighter network traffic and the remaining Central Processing Unit (CPU) cycles may be used to execute the foreground task, while the network stack still may respond to Internet Control Message Protocol (ICMP) and Address Resolution Protocol (ARP) requests. As the application tries to receive packets, for example, downloading a large volume of data, such as the kernel of an Operating System (OS), the network stack may even shut down the timer temporarily and switch to a synchronous mode to improve overall system performance. Here, the network stack may use a busy waiting signal to notify its status.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07568021",
	"publication_date": "2009-07-28",
	"application_number": "10849866",
	"application_date": "2004-05-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Implementation of control plane protocols and networking stacks in a distributed network device",
	"summary": "",
	"abstract": "A network device, such as a router or switch, uses multiple forwarding and control processors that operate different protocols or operating systems to route a packet in a computer network. A support stack module determines which processor a packet is routed to and converts the packet format, if necessary, for compatibility with the processor. When a packet is directed to a control processor, its associated support stack module simulates the forwarding plane interfaces. After processing the packet is routed onto the network.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07602794",
	"publication_date": "2009-10-13",
	"application_number": "10714412",
	"application_date": "2003-11-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Memory manager for heterogeneous memory control",
	"summary": "",
	"abstract": "Embodiments of a method and system for heterogeneous memory control are disclosed. The embodiments include components of a Memory Manager that receive usage information of a memory subsystem of a host system, the memory subsystem including internal memory and external memory. The Memory Manager also receives client information of one or more clients that are coupled to and/or integrated with the host system. A request or call for internal memory is also received at the Memory Manager from the clients. The Memory manager automatically controls the memory in accordance with one or more of the request, the usage information and the client information. The control includes allocating a portion of the internal memory to the client, remapping one or more areas of internal memory from a first client to a second client, and/or reorganizing the memory by remapping external memory to internal memory. Other embodiments are described and claimed.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07571295",
	"publication_date": "2009-08-04",
	"application_number": "11196959",
	"application_date": "2005-08-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus and determining processor utilization",
	"summary": "",
	"abstract": "A method and an apparatus for determining processor utilization have been disclosed. In one embodiment, the method includes determining processor utilization in a data processing system and synchronizing execution of a number of threads in the data processing system to prevent interrupting the determining of the processor utilization. Other embodiments have been claimed and described.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07617488",
	"publication_date": "2009-11-10",
	"application_number": "10750395",
	"application_date": "2003-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and mechanism for programmable filtering of texture map data in 3D graphics subsystems",
	"summary": "",
	"abstract": "A system, method and apparatus to provide flexible texture filtering. A programmable texture filtering module is introduced into the graphics processing pipeline of a graphic coprocessor and graphic processor integrated with the host. A program from a defined instruction set may then be loaded into texture processing cores to process texture data consistent with the program.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07477261",
	"publication_date": "2009-01-13",
	"application_number": "11515110",
	"application_date": "2006-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus to manage hardware resources for a partitioned platform",
	"summary": "",
	"abstract": "Methods and apparatus are disclosed to boot a basic input/output system (BIOS) for a partitioned platform. An example method disclosed herein identifies at least one hardware component unique to a partition, determines which hardware components have commonality with the partition, initializes the at least one hardware component having commonality, and initializes the at least one hardware component unique to the partition. Other embodiments are described and claimed.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07640426",
	"publication_date": "2009-12-29",
	"application_number": "11396126",
	"application_date": "2006-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Operating system mode transfer",
	"summary": "",
	"abstract": "Provided are a method, system and program for effecting an operating system mode change from one mode to another. In one embodiment, the operating system in one mode is placed in a sleep state in which volatile memory remains active. In booting an operating system from the sleep state, a flag may be detected indicating an operating system mode transfer request. In response, contents of a selected range of volatile memory allocated to the first operating system mode may be swapped with the contents of a selected range of a reserve portion of volatile memory allocated to the second operating system mode. Booting of an operating system in the second mode may be completed using the swapped contents of the volatile memory. Additional embodiments are described and claimed.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07529923",
	"publication_date": "2009-05-05",
	"application_number": "11173261",
	"application_date": "2005-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Optimized frustum clipping via cached clip vertices",
	"summary": "",
	"abstract": "Apparatus, systems and methods for optimized frustum clipping via cached clip vertices are disclosed. For example, a method is disclosed, the method including generating a clip vertex for a leading edge of a triangle of a triangle strip or fan, indicating that the leading edge is shared with an adjacent triangle of the triangle strip or fan, and in response to the indication, using the clip vertex as a clip vertex of a trailing edge of the adjacent triangle in the triangle strip or fan. Other implementations are disclosed.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07589746",
	"publication_date": "2009-09-15",
	"application_number": "11388322",
	"application_date": "2006-03-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Processing secure metadata at wire speed",
	"summary": "",
	"abstract": "In one embodiment, the present invention includes a method for receiving an Extensible Markup Language (XML) packet at a host processor of a resource-constrained device, such as a mobile device or the like, and forwarding the XML packet to a programmable accelerator of the resource-constrained device. Then, using the programmable accelerator, the XML packet may be processed and information from the XML packet may be provided to the host processor. Other embodiments are described and claimed.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07536681",
	"publication_date": "2009-05-19",
	"application_number": "11086827",
	"application_date": "2005-03-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Reducing memory bandwidth to texture samplers via re-interpolation of texture coordinates",
	"summary": "",
	"abstract": "Apparatus, systems and methods for reducing memory bandwidth to texture samplers via re-interpolation of texture coordinates includes at least one texture sampler coupled to at least one shader core where the texture sampler is at least capable of generating texture map addresses by re-interpolating pixel fragment block texture coordinates from starting data and attribute deltas associated with the block.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07492373",
	"publication_date": "2009-02-17",
	"application_number": "11209287",
	"application_date": "2005-08-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Sharing a radio frequency interface resource",
	"summary": "",
	"abstract": "Applications may seek access to a radio frequency interface resource on a processor-based system that exceeds the available capacity of that resource. When more than one application needs access to an RF interface resource at the same time and the available capacity of the RF interface resource does not permit all these requests to be granted, contention resolution may be provided. In one embodiment, the contention resolution may involve determining the priority of each application seeking RF interface resource access and granting access based on that priority.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07574233",
	"publication_date": "2009-08-11",
	"application_number": "10331687",
	"application_date": "2002-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Subnet independent transparent bridge",
	"summary": "",
	"abstract": "A method and apparatus for intelligently bridging a first network and a second network are disclosed. In one embodiment, a protocol independent bridge device driver is bound to a first and a second network interface card device driver in order to access the first and the second network. Then the bridge device driver adaptively derives topology of the first and the second network based on network packets that it receives from the first and the second network. Lastly, the bridge device driver delivers the received network packets based on information contained in the received network packets and the derived topology.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07630398",
	"publication_date": "2009-12-08",
	"application_number": "11330459",
	"application_date": "2006-01-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System security agent authentication and alert distribution",
	"summary": "",
	"abstract": "An aggregation agent may combine and correlate information generated by multiple on-host agents and/or information generated in response to multiple security events. The aggregation agent may transmit the combined information to a security console. The security console may check the identity of the aggregation agent to determine whether to accept the information. The security console may map information to one or more consoles.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07631354",
	"publication_date": "2009-12-08",
	"application_number": "11026646",
	"application_date": "2004-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System security event notification aggregation and non-repudiation",
	"summary": "",
	"abstract": "An aggregation agent may combine and correlate information generated by multiple on-host agents and/or information generated in response to multiple security events. The aggregation agent may transmit the combined information to a security console. The security console may check the identity of the aggregation agent to determine whether to accept the information.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07571474",
	"publication_date": "2009-08-04",
	"application_number": "11026684",
	"application_date": "2004-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System to manage display power consumption",
	"summary": "",
	"abstract": "Some embodiments involve determination of a first characteristic associated with a first interface displayed by a display, and determination of a second characteristic associated with a second interface displayed by the display. Embodiments may further involve determination of a first power consumption mode for the first interface based at least on the first characteristic, and determination of a second power consumption mode for the second interface based at least on the second characteristic, wherein the first power consumption mode is different from the second power consumption mode.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07570259",
	"publication_date": "2009-08-04",
	"application_number": "10858363",
	"application_date": "2004-06-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Viterbi path generation for a Dynamic Bayesian Network",
	"summary": "",
	"abstract": "Methods, systems, and apparatus are provided to generate a Viterbi path for a DBN. The DBN is converted to a chain of junction trees, where each tree represents a decision-making process. The trees are forwardly iterated and the Viterbi path is generated during the forward iteration (forward pass). This is achieved by maintaining backpointers to previously processed junction trees during the forward pass and dynamically assembling the Viterbi with each pair of junction trees during the forward pass.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07584408",
	"publication_date": "2009-09-01",
	"application_number": "11352657",
	"application_date": "2006-02-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methods for synchronizing information among disparate datasets",
	"summary": "",
	"abstract": "A synchronization system may include: A Source (outbound). An u201cAccessoru201d communicating with a device's data store. A corresponding Target Accessor is provided for inbound data. Both Accessors work in conjunction with a u201cConduit,u201d which is provided for understanding the data that is being read so that the data can be mapped to a universal schema or u201cunirecordu201d or to a target dataset. The Conduit serves to broker the services of the Source Accessor and the Target Accessor and to provide field mapping and conversion. Core synchronization functionality is provided by a Synchronizer or u201cSync Coreu201d (engine). The Synchronizer performs its specific functionality on a per record or per data item basis, such as determining which records need to be inserted, deleted, updated, or the like.",
	"url": null,
	"owner": "Intellisync Corporation",
	"publication_number": "07490112",
	"publication_date": "2009-02-10",
	"application_number": "08923612",
	"application_date": "1997-09-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transparent session initiated protocol",
	"summary": "",
	"abstract": "Method and apparatus employing transparent session initiation protocol (SIP) technique for communication especially between a user device in one domain and an application/service provide in an external domain. The transparent SIP technique is usable in wired or wireless systems such as 3G systems and wireless local area networks (WLANs).",
	"url": null,
	"owner": "InterDigital Technology Corporation",
	"publication_number": "07574595",
	"publication_date": "2009-08-11",
	"application_number": "10900941",
	"application_date": "2004-07-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application updating in a home automation data transfer system",
	"summary": "",
	"abstract": "An automation network includes automation network devices connected to the network and a system level interface that interfaces with a transport layer and an application layer of the automation network. A method is disclosed that programs an automation network device in communication with an automation network, where the automation network includes an access point coupled with an external network. The method includes receiving application upgrade data at the access point, where the application upgrade data includes upgrade data associated with a target automation network device in communication with the automation network. Application upgrade data is transmitted through the home to the target automation network device. A next application upgrade data packet to be transmitted across the automation network is requested from the target automation network device. An application stored in the target automation network device is programmed, using an application upgrade data command transmitted to the target home automation network device.",
	"url": null,
	"owner": "Intermatic Incorporated",
	"publication_number": "07640351",
	"publication_date": "2009-12-29",
	"application_number": "11590253",
	"application_date": "2006-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Access control list checking",
	"summary": "",
	"abstract": "Method for dynamically checking an access control list during the data transfers between a client web browser and a web server. The method allows checking of access control list by an application firewall, independent from the web application. The rules, upon which the checking is based, can be easily updated without affecting the web application.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07475138",
	"publication_date": "2009-01-06",
	"application_number": "11159928",
	"application_date": "2005-06-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Accessing a data structure",
	"summary": "",
	"abstract": "There is disclosed a method, apparatus, computer program and computer program product for facilitating access by an application to a data structure comprising a plurality of objects. A request is received from the application which initiates the return of the data structure. A handle is assigned to each of at least some of the plurality of objects. Objects in the data structure are retrieved and the application is informed of assigned handles thereby enabling the application to access retrieved objects.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07478082",
	"publication_date": "2009-01-13",
	"application_number": "11002547",
	"application_date": "2004-12-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for supporting received data processing in an offload of network protocol processing",
	"summary": "",
	"abstract": "A number of improvements in network adapters that offload protocol processing from the host processor are provided. Specifically, an improved mechanism for handling receipt of data packets in a system utilizing an offload network adapter. The offload network adapter may include logic that permits the offload network adapter to delay notification of data reception to the host system in different ways. The advantage of delaying the notice of data packet reception to the host system is the potential for aggregation of several data packets, which can arrive immediately after the first one, for example, in a single notification. Given a stream with continuous data packet arrival, a value may be set, either statically or dynamically, for notification delay and this value may be configurable for the host system per communication socket.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07493427",
	"publication_date": "2009-02-17",
	"application_number": "10891196",
	"application_date": "2004-07-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus for determining availability of a user of an instant messaging application",
	"summary": "",
	"abstract": "An instant messaging application intelligently infers a user's unavailability from one or more indicia which include the user's electronic calendar. Preferably, the instant messaging application may report not only that a user is unavailable, but also give a reason for inferring unavailability, in order to provide other users with additional potentially useful information. Preferably, the user may specify which indicia and which parameters may be used to infer his unavailability in an editable profile. When another user requests status, this value is returned by the server. An intelligent instant messaging application as described herein provides other users with more accurate and complete availability information.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07562116",
	"publication_date": "2009-07-14",
	"application_number": "11940605",
	"application_date": "2007-11-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus for transmitting accessibility requirements to a server",
	"summary": "",
	"abstract": "A apparatus and computer instructions for transmitting accessibility requirements. Content is received from a computer at a data processing system. The content is parsed for a selected indicator. The data processing system is queried to identify accessibility requirements in response to the selected indicator being present. The identified accessibility requirements are sent to the computer. These accessibility requirements are use by the computer to generate content for the data processing system.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07533334",
	"publication_date": "2009-05-12",
	"application_number": "12142347",
	"application_date": "2008-06-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus, system, and method for automatically discovering and grouping resources used by a business process",
	"summary": "",
	"abstract": "An apparatus, system, and method are provided for automatically discovering and grouping files and other resources used by a business process. The present invention includes a monitoring module that collects trace data representative of operational behavior of software applications. An analysis module analyzes the trace data to discover resources affiliated with the business process. A determination module defines a logical application corresponding to the business process and includes the resources discovered by the analysis module. The logical application is automatically defined such that business policies may be readily implemented on the logical application as a whole. Manual identification of resources for a business process is eliminated or substantially reduced.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07546601",
	"publication_date": "2009-06-09",
	"application_number": "10915146",
	"application_date": "2004-08-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus, system, and method for booting using an external disk through a virtual SCSI connection",
	"summary": "",
	"abstract": "An apparatus, system, and method are disclosed for booting a Logical Partition using an external storage device. The method creates a virtual SCSI device assigned to a first logical partition (u201cLPARu201d) of a first computer using a virtual I/O server by mapping a LUN of a storage volume to a SCSI ID. The storage volume is located external to the first computer and the first LPAR is configured to share one or more physical processors and one or more physical I/O devices of the first computer with a plurality of LPARs. The method receives a boot request to boot the first LPAR. The boot request identifies the storage volume as a boot device using the SCSI ID of the virtual SCSI device. The method retrieves boot data from the storage volume using a SCSI driver of the first LPAR and boots the first LPAR using the boot data.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07624262",
	"publication_date": "2009-11-24",
	"application_number": "11613549",
	"application_date": "2006-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus, system, and method for direct retrieval of hierarchical data from SAP using dynamic queries",
	"summary": "",
	"abstract": "An apparatus, system, and method are disclosed for the direct retrieval of hierarchical data from an SAP system. The apparatus includes an input module, a table hierarchy module, a query builder module, a query execution module, and a response builder module. The input module receives a table business object comprising a query criteria. The table hierarchy module determines a table hierarchy associated with the table business object. The query builder module builds a native SAP query based on the table hierarchy and the query criteria. The query execution module executes the native SAP query directly on an SAP database. The response builder module returns results of the native SAP query.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07539672",
	"publication_date": "2009-05-26",
	"application_number": "11420661",
	"application_date": "2006-05-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus, system, and method for signaling logical errors in an EIS remote function call",
	"summary": "",
	"abstract": "An apparatus, system, and method are disclosed to signal a logical error in a function call made by an integration adapter. The apparatus includes an communication module, a code extraction module, a comparison module, and an error report module. The communication module receives a business object having an error dictionary in response to a function call. The code extraction module extracts an error code value from the business object based on an error code location identifier. The comparison module compares the error code value to an associated error code in the error code dictionary. The error report module signals a logical error in the function call.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07594141",
	"publication_date": "2009-09-22",
	"application_number": "11420654",
	"application_date": "2006-05-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Architecture to enable search gateways as part of federated search",
	"summary": "",
	"abstract": "An architecture to enable search gateways as part of a federated search supports searching for data in one or more heterogeneous data sources. The one or more heterogeneous data sources are within a computer system. Initially, a request for data is received at a federated data source. From the federated data source, data is retrieved from one or more of one or more terminal data repositories or one or more search gateway data sources.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07512588",
	"publication_date": "2009-03-31",
	"application_number": "11111800",
	"application_date": "2005-04-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Asynchronous symmetric multiprocessing",
	"summary": "",
	"abstract": "An apparatus for serializing concurrent requests to multiple processors includes a signal merging tree structure and a traversal mechanism. The tree structure has a root node and leaf nodes for connecting a data consumer to the root. The tree structure serializes concurrent requests in the presence of race conditions, and connects each request producer from among the processors to a respective leaf node. The mechanism enables a producer to transmit a signal from a corresponding leaf node to the consumer at the root node by setting all nodes on a path from the leaf node to the root node to a Boolean true. The mechanism enables the consumer to trace signal submissions of the producers such that submission traversals by the producers and trace traversals by the consumer can be concurrently performed to allow data races between signal submissions by producers and between signal submissions by producers and the consumer.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07475198",
	"publication_date": "2009-01-06",
	"application_number": "11873464",
	"application_date": "2007-10-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automated hang detection in java thread dumps",
	"summary": "",
	"abstract": "A system and method for analyzing Java thread deadlocks. A snapshot of threads in a Java Virtual Machine is generated, producing a thread dump file which can be analyzed off line. The thread dump file is optimistically parsed to identify threads which are deadlocked. A user is provided with an interface to select filtering rules for the threads, resulting in a set of filtered threads which are candidates for being in infinite wait conditions.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07502968",
	"publication_date": "2009-03-10",
	"application_number": "11828916",
	"application_date": "2007-07-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automated management of software images for efficient resource node building within a grid environment",
	"summary": "",
	"abstract": "A grid service detects a current software environment for a grid job within a grid environment, wherein the grid environment includes multiple grid resources. The grid service searches a catalog of multiple software images to determine whether an image for the current software environment matches any software images in the catalog. Each of the software images includes an index into at least one installation image. Storage of the software images is structured in the catalog for automated efficient access to each software image by multiple resource nodes within the grid environment. If the grid service does not locate a software image for the current software environment in the catalog, the grid service captures at least one installation image for the current software environment for storage in the catalog as an additional software image.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07590623",
	"publication_date": "2009-09-15",
	"application_number": "11031543",
	"application_date": "2005-01-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatically managing the state of replicated data of a computing environment",
	"summary": "",
	"abstract": "The state of data of a communications environment is automatically managed. The automatic management is provided via a facility that automatically obtains the current state of the data and uses that information to place the data in an appropriate state for a selected event to be processed. The data is, for instance, maintained on replicated storage media.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07475204",
	"publication_date": "2009-01-06",
	"application_number": "10997743",
	"application_date": "2004-11-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automating responses by grid providers to bid requests indicating criteria for a grid job",
	"summary": "",
	"abstract": "A bid controller grid service of a grid provider receives a job request from a client for processing a job within a grid environment of the grid provider, wherein the job request specifies at a least one criteria required for the grid provider to handle a particular grid job. The grid service determines whether the grid environment includes the hardware platform class, software platform class, and network bandwidth required by the job request. If the grid service determines that the grid environment includes a sufficient hardware platform class, software platform class, and network bandwidth, then a total required workload for the job request is calculated. Next, a total cost for the total required workload is estimated and the grid service automatically returns a bid response to the client system, where the bid response includes an identifier for the grid provider and the total cost for the job request.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07562035",
	"publication_date": "2009-07-14",
	"application_number": "11034303",
	"application_date": "2005-01-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Autonomic application server unneeded process disablement",
	"summary": "",
	"abstract": "A method, system, and computer program product for enabling efficient start up of an application server with the components required for complete operation of the supported application. A pre-processor autonomically determines the specific services that are required by the application to be initiated within the application server during start up of the application. The specific services are selected from a comprehensive list of available services for start up of the application server. The application server is then started up with only the specific services required by the application, rather than the full list of services.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07499991",
	"publication_date": "2009-03-03",
	"application_number": "11272591",
	"application_date": "2005-11-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Business event triggered, policy-driven payment management",
	"summary": "",
	"abstract": "Techniques are disclosed for using business events as triggers to drive payment processing for electronic commerce. As the business logic of a merchant's e-commerce software application reaches various stages that impact payment considerations, it issues a corresponding event notification. According to preferred embodiments, these event notifications are processed by a policy engine, which locates policy information or rules previously configured for that event. Actions are then carried out, based on the configured policy. The merchant e-commerce application is therefore shielded from the details of the underlying payment processing. New payment types can be provided, and existing payment types can be modified if necessary, by adding/modifying policies; the merchant's e-commerce application does not need to change. This event-driven model allows application developers to focus on creating software for the merchant's key business requirements, and makes it easier to maintain the software.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07558758",
	"publication_date": "2009-07-07",
	"application_number": "10180875",
	"application_date": "2002-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Capturing a workflow",
	"summary": "",
	"abstract": "Various embodiments of a method, system and computer program product for capturing a workflow are provided. A capture application automatically stores at least a portion of a copied screen of a source application from a clipboard to provide a captured screen. The capture application repeats the automatic storing to provide a set of captured screens. In various embodiments, a document is built based on the set of captured screens.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07594183",
	"publication_date": "2009-09-22",
	"application_number": "10917922",
	"application_date": "2004-08-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Closed-loop diagnostic method",
	"summary": "",
	"abstract": "Problem diagnostics may be obtained from components that log messages using a unique component identifier which is provided within each message so as to enable routing of callbacks to the component that originated the message. Similarly, problem diagnostics may be obtained from components that generate alerts, where the alerts contain the unique identifier of the component that generated the alert. Each component supports a diagnostic provider interface comprising operations which may be dynamically invoked, for example to solicit information from the component such as its configuration data, its state information, to execute self-diagnostic tests, and so forth. In addition or instead, operations may be provided that can be invoked to cause the component to alter its configuration data (such as notifying the component to change its level of message logging) or its behavior.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07502716",
	"publication_date": "2009-03-10",
	"application_number": "11400961",
	"application_date": "2006-04-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer implemented method for estimating future grid job costs by classifying grid jobs and storing results of processing grid job microcosms",
	"summary": "",
	"abstract": "A client side agent estimates future grid job costs by comparing a current grid job of a particular classification with a history of stored costs for other grid jobs of that customer of that particular classification. The grid client agent for a client system enabled to submit grid jobs to a grid provider that facilitates a grid environment, calculates a ratio of an application based metric to a grid provider metric for processing a particular grid job. The grid client agent creates a table with an entry comparing the application based metric to a cost per grid provider metric for the grid provider based on the calculated ratio. The grid client agent stores the table with the entry. Responsive to detecting a next grid job, the grid client agent estimates a cost for the grid provider to process the next grid job based on a particular number of application based metric operations required for the next grid job, translated by the ratio into the grid provider metric and multiplied by the cost per grid provider metric.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07571120",
	"publication_date": "2009-08-04",
	"application_number": "11034305",
	"application_date": "2005-01-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer-readable memory medium for fast drawing of text fields and labels using a Java swing application program interface",
	"summary": "",
	"abstract": "A system and method are disclosed for fast text drawing in an enhanced version of the Swing application program interface for Java applications. According to the system and method, two lightweight component peers, JTextFieldPeer and JfastLabelPeer, are created. These peers allow the Swing components, JTextField and JLabel, to define the look and feel of the TextField and Label in the graphical user interface for the application; however, they are not allowed to draw the text. Instead, special fast text drawing code within the peers themselves is used to draw the text. Once the text has been initially drawn, editing functions are handled by the Swing components, as is normal. Furthermore, the special fast text drawing routines are assigned a low event priority, making it possible for text to be updated even after it has been buffered and is waiting to be drawn. These features significantly accelerate text rendering. The enhanced version of Swing is referred to herein as AWTSwing.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07571388",
	"publication_date": "2009-08-04",
	"application_number": "09870620",
	"application_date": "2001-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Context conflict resolution and automatic context source maintenance",
	"summary": "",
	"abstract": "Techniques are disclosed for detecting and resolving conflicts in context information from various sources. That information may be used to automatically update one or more context sources and/or to validate or invalidate (until further notice or for a period of time) input from one or more context sources. Or, the updates can be made in response to the user's instructions. Rules are used in preferred embodiments to dictate the conflict resolution approach for individual users. Updating the context source is particularly useful when the source is an electronic calendar. Updates that may be made to the calendar include adding, deleting, or changing scheduled events and/or working hours. Invalidating data from a context source is particularly useful for lost, forgotten, misplaced, or loaned devices. Marking data from a context source as valid is preferably done when harmony among several context sources is detected. Context suppliers may be notified of errors or discrepancies in their context data.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07617308",
	"publication_date": "2009-11-10",
	"application_number": "12183356",
	"application_date": "2008-07-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Context sensitive term expansion with dynamic term expansion",
	"summary": "",
	"abstract": "Methods, articles of manufacture, and systems for searching collections of data using context sensitive expanded term searching using dynamic term expansion are provided. The collection of data may be a relational database, text document, or any other type of searchable collection of data. In either case, a query including a search condition based on a specified search term may be modified to include additional conditions based on a set of expanded (e.g., conceptually-related) search terms dynamically linked with the query. For some embodiments, a user may be given the ability to choose whether the set of expanded search terms are dynamically linked with the query or not.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07593929",
	"publication_date": "2009-09-22",
	"application_number": "10691415",
	"application_date": "2003-10-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Context-sensitive term expansion with multiple levels of expansion",
	"summary": "",
	"abstract": "Methods, articles of manufacture, and systems for searching collections of data using context sensitive expanded term searching are provided. The collection of data may be a relational database, text document, or any other type of searchable collection of data. In either case, a query including a search condition based on a specified search term may be modified to include additional conditions based on a set of expanded (e.g., conceptually-related) search terms. For some embodiments, a user may be given the ability to control the level of expansion and the context in which the terms may be expanded.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07617196",
	"publication_date": "2009-11-10",
	"application_number": "10691308",
	"application_date": "2003-10-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Coordinating the monitoring, management, and prediction of unintended changes within a grid environment",
	"summary": "",
	"abstract": "A grid change controller within a particular grid environment detects an unintended change within that grid environment. In particular, grid change controller monitors potential change indicators received from multiple disparate resource managers across the grid environment, where each resource manage manages a selection of resources within the grid environment. The grid change controller then determines a necessary response to the unintended change within the grid environment and communicates with at least one independent manager within the grid environment to resolve the unintended change, such that the grid environment to maintain performance requirements within the grid environment.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07533170",
	"publication_date": "2009-05-12",
	"application_number": "11031541",
	"application_date": "2005-01-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Coordinating use of independent external resources within requesting grid environments",
	"summary": "",
	"abstract": "A method, system, and program for coordinating use of independent external resources within requesting grid environments. A external resource dispatcher receives requests for use of external resources. The external resource dispatcher controls the dispatch of a pool of external resources hidden from the grid management systems of requesting grid clients. In particular, the external resource dispatcher coordinates dispatch of a selection of the external resources for temporary registration with a requesting grid client management system. The requesting grid client management system registers the external resources for use within the grid client and monitors whether the external resources are still needed. When a requesting grid client no longer needs a dispatched external resource, the external resource dispatcher controls detachment of the dispatched external resource and returns the external resource to the available pool of external resources.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07584274",
	"publication_date": "2009-09-01",
	"application_number": "10868542",
	"application_date": "2004-06-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Demand pullu2014multichannel asynchronous data and application synchronization for pervasive devices",
	"summary": "",
	"abstract": "A system and methodology for enabling a user to asynchronously request a data transfer operation (pull) via a first communication medium, and enable receipt of the requested data over a second communication medium, including a wireless channel for storage/presentation in a wearable mobile computing device/appliance (e.g., a wrist watch device) capable of wirelessly accessing information from a network or communications device.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07477890",
	"publication_date": "2009-01-13",
	"application_number": "09608044",
	"application_date": "2000-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dual-component state token with state data direct access index for systems with high transaction volume and high number of unexpired tokens",
	"summary": "",
	"abstract": "Access to state data by a client process such as state data in an Online Transaction Processing arrangement is controlled through generation of and exchanging of a dual-component token. The first component of the token is an Index value which indirectly points to a block of state data assigned to process or user. The second component of the token is a sequence value, such as a Random Unique Sequence value, which is also associated with the block of state data for a process. With each transaction request, a user process provides the token to the OLTP server, which then verifies the sequence numbers of the state data and the token match before allowing access to the data.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07512693",
	"publication_date": "2009-03-31",
	"application_number": "10844635",
	"application_date": "2004-05-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic database access via standard query language and abstraction technology",
	"summary": "",
	"abstract": "Methods, systems, and articles of manufacture that allow saved abstract queries to be referenced from within query statements constructed using standard query languages, such as Structured Query Language (SQL), are provided.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07475066",
	"publication_date": "2009-01-06",
	"application_number": "11847246",
	"application_date": "2007-08-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic learning in redesigning a composition of web services",
	"summary": "",
	"abstract": "Business processes are constructed and/or modified utilizing system knowledge including a folksonomy that stores information regarding a group of services usable by composition applications that collects system monitored services usage information and user inputs. In one aspect, candidate services are recommended and/or automatically updated/replaced, which can implement aspects of a business process from the group of services based upon information derived from the system knowledge. In another aspect, a composition design component interacts with a user to build and/or modify services based upon identified aspect of business processes to be implemented by services, wherein the component design component recommends candidate services that can implement the aspects of the business processes from the group of services based upon information derived from the system knowledge.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07596583",
	"publication_date": "2009-09-29",
	"application_number": "11692984",
	"application_date": "2007-03-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic update of changing data in user application via mapping to broker topic",
	"summary": "",
	"abstract": "A method and service for enabling a smallest unit of variable data within a data space of a user application to be dynamically updated using an external source. The application GUI is enhanced with a dynamic update utility (DUU) that enables the data unit to be selected and linked to the broker topic. A list of available topics is presented for selection by the user, and the data unit automatically linked to the selected broker topic without requiring user knowledge of the specific linking parameters of the external source. A JMS client application is provided containing a message listener and an application writing protocol. A subscriber is defined for the data unit and subscribes to the particular event broker topic hosted at a JMS provider. When the event broker receives a publication from the data publication source, a copy of the published data is forwarded to the message listener associated with the subscriber, and the message listener provides the data to the application writing protocol. The application writing protocol then automatically overwrites the data unit with the published data.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07530077",
	"publication_date": "2009-05-05",
	"application_number": "10960583",
	"application_date": "2004-10-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enabling high availability and load balancing for management modules in a computing environment",
	"summary": "",
	"abstract": "Provided is a method for programming module load balancing and failover in a distributed computing environment. The Java Management extensions (JMX) specification is enhanced to support load balancing and provide a high-availability of JMX management beans (Mbeans). Also provided are enhancements to the programming model and infrastructure to support the enhanced programming model. Two exemplary approaches for load balancing and failover are provided, one based both upon clustered Mbeans and one based upon unclustered Mbeans. In the unclustered approach, client affinity is supported in that a request from a particular client can be routed to a particular Mbean. In the clustered approach, a specific Mbean can be invoked by providing a special parameter in the Mbean invocation or by adding a special property to the specific Mbean's ObjectName to indicate that during runtime automatic routing should not be employed.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07603256",
	"publication_date": "2009-10-13",
	"application_number": "11874475",
	"application_date": "2007-10-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enabling services on a UAV",
	"summary": "",
	"abstract": "Methods, systems, and products are provided for enabling services on a UAV. Embodiments include determining a current position of the UAV, selecting a service module for the UAV in dependence upon the current position of the UAV, uploading the service module to the UAV, and executing the service module on the UAV. Selecting a service module for the UAV in dependence upon the current position of the UAV may include retrieving from a module database a module record in dependence upon the current position of the UAV. Typical embodiments also include selecting a flying pattern algorithm in dependence upon the selected service module and piloting the UAV in accordance with the flying pattern algorithm. Many embodiments also include selecting a navigational algorithm in dependence upon the selected service module and navigating the UAV in accordance with the navigational algorithm.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07509212",
	"publication_date": "2009-03-24",
	"application_number": "11041506",
	"application_date": "2005-01-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Externalized selection middleware for variability management",
	"summary": "",
	"abstract": "A system and method for dynamically selecting logical operations using external criteria, includes providing tools for defining a selection criteria set having parameters including dimensions and valid values, wherein the selection criteria set includes a plurality of different arrangements and values of the parameters. The selection criteria set and collections of instances thereof are persistently maintained. A trigger is provided at runtime to query the persistently maintained instances to automatically select a logic operation to employ based upon a context of the query.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07490105",
	"publication_date": "2009-02-10",
	"application_number": "10941789",
	"application_date": "2004-09-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "File system architecture requiring no direct access to user data from a metadata manager",
	"summary": "",
	"abstract": "A system, method and computer program product for implementing a distributed file system architecture requiring no direct access to user data from a metadata manager in a data storage network. Metadata operations requiring user volume access are performed via a proxy on a storage manager server that is a distributed file system client. Management of metadata can be isolated from user data because the metadata manager requires no capability to see the storage for user volumes. This allows for a distributed file management system to support heterogeneous environments without requiring any single point in the system to see all the storage.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07617321",
	"publication_date": "2009-11-10",
	"application_number": "10840983",
	"application_date": "2004-05-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Filter module for a transaction processing system",
	"summary": "",
	"abstract": "A filter module for a WOSA/XFS transaction processing system is disclosed. The system includes a WOSA transaction manager which is responsive to transaction requests from at least one application. A service provider layer is adapted to relay transaction requests passed from the transaction manager to associated hardware for execution. The filter module is adapted to intercept transaction requests from the transaction manager to the service provider layer and to process the requests. The filter module is further adapted to intercept transaction responses form the service provider layer to the transaction manager and the at least one application and to process these responses.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07493286",
	"publication_date": "2009-02-17",
	"application_number": "09209124",
	"application_date": "1998-12-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Gateway for service oriented state",
	"summary": "",
	"abstract": "A method and system for managing state data of a service in a service-oriented architecture by establishing a gateway for service-oriented state comprising: configuring an extensible, pluggable interface to support for extensible processor interfaces; data query support on service state data, automated notification capability on service state to a client; and automated data transform on service state data to a client format; defining an interface framework for interaction between a service and the gateway. The method also includes establishing an extensible meta-data definition comprising an extensible set of service state data attributes including state data qualifiers, constraints, and access mechanisms; and utilizing one or more pluggable processors configured to utilize the extensible meta-data definition for interfaces and decision making based on the meta-data.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07483973",
	"publication_date": "2009-01-27",
	"application_number": "10652794",
	"application_date": "2003-08-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generating suitable data for statistical analysis",
	"summary": "",
	"abstract": "A method, system and article of manufacture for processing abstract queries and, more particularly, for generating input to statistical analysis routines. One embodiment comprises receiving an abstract query including a measurement field and a chronological reference condition. The abstract query is transformed into an executable query which is executed by a query engine, whereby result data is determined including an available measurement value for the measurement field. The available measurement value was taken at a point in time different from a point in time that satisfies the chronological reference condition. The method further comprises determining a variance value corresponding to a time variance between the point in time that satisfies the chronological reference condition and the other point in time at which the available measurement value was taken. As a result set for the abstract query, the available measurement value and the variance value are returned.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07624098",
	"publication_date": "2009-11-24",
	"application_number": "11246828",
	"application_date": "2005-10-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generating unique name/version number pairs when names can be re-used",
	"summary": "",
	"abstract": "Various embodiments of a method, system and article of manufacture provide a version number. An object has a present name and a present version number. In response to changing the present name of the object to a different name, the different name having been used by one or more other objects, one or more values of one or more first components of one or more other version numbers associated with the one or more other objects, respectively, are identified. An other version number is generated wherein a value of the first component of the other version number is different from the one or more values of the one or more first components.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07546322",
	"publication_date": "2009-06-09",
	"application_number": "11076653",
	"application_date": "2005-03-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generational real-time garbage collection",
	"summary": "",
	"abstract": "Disclosed are a partial heap garbage collector, and a partial heap garbage collection method, that during collection checks the time remaining (or equivalently the time taken so far, or the work done so far) to complete the partial heap collection. In a preferred embodiment, the partial heap collection is guaranteed to complete within a fixed time interval. For example, this guarantee may be obtained by applying a worst-case execution time (WCET) and sizing a nursery so that complete evacuation of the nursery can always be achieved on time. As an alternative, a technique, referred to as syncopation, may be used to allow generational collection to be used despite variance in program behavior over the short time scales in which a nursery can be collected. Syncopation may be accomplished via allocation control or via collection control.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07548940",
	"publication_date": "2009-06-16",
	"application_number": "11149686",
	"application_date": "2005-06-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Having a single set of object relational mappings across different instances of the same schemas",
	"summary": "",
	"abstract": "A method, system, and computer instructions for providing a single set of object relational mappings across different instances of the same schemas. With the present invention, multiple datasources are first configured for class (or set of object definitions). A mapping identifier is set at runtime, wherein the mapping ID is used to access the correct datasource. Mapping code is then generated from the datasource based on the mapping identifier. A schema identifier is acquired from the generated mapping code and prepended to tables in the in the SQL generated code. The schema name is used to connect to the correct schema within a datasource. The mapping ID is also used to access the correct JNDI name to access the correct data source which represents a physical database.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07536409",
	"publication_date": "2009-05-19",
	"application_number": "11058036",
	"application_date": "2005-02-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hierarchical event filtering for multiple parent event types",
	"summary": "",
	"abstract": "A technique for reducing the number of events that are transmitted by a server to a client/server application programming interface (API). At the server host, each of different event messages is associated with at least one event category in a hierarchy of event categories. Each client host sends a registration request to the server host in order to inform the host server host that the client wants to receive event messages associated with a specified event category. The server host associates the specified event category with each client host and communicates the event messages that are descendants of the specified event category, wherein the event messages may be descendants of more than one specified event category.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07493625",
	"publication_date": "2009-02-17",
	"application_number": "10869223",
	"application_date": "2004-06-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Internet SCSI communication via UNDI services",
	"summary": "",
	"abstract": "A method and system for emulating a hardware Internet Small Computer System Interface (iSCSI) Host Bus Adapter (HBA) without risking an interruption of communication between a computer and a remote secondary storage device is presented. During normal operations, a (hardware emulating) software HBA drives a Network Interface Card (NIC) to afford communication between the computer and the remote secondary storage. If an operating system (OS) anomaly occurs in the computer, the NIC is normally disconnected by the OS. To maintain communication between the computer and the secondary storage device if such an event occurs, a failover network device is called up by the computer's System Management Memory (SMM) Basic Input Output System (BIOS), which allows uninterrupted communication to continue between the computer and remote secondary storage device.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07562175",
	"publication_date": "2009-07-14",
	"application_number": "11828112",
	"application_date": "2007-07-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Internet SCSI communication via UNDI services",
	"summary": "",
	"abstract": "A method and system for emulating a hardware Internet Small Computer System Interface (iSCSI) Host Bus Adapter (HBA) without risking an interruption of communication between a computer and a remote secondary storage device is presented. During normal operations, a (hardware emulating) software iSCSI HBA drives a Network Interface Card (NIC) to afford communication between the computer and the remote secondary storage. If an operating system (OS) anomaly occurs in the computer, the NIC is normally disconnected by the OS. To maintain communication between the computer and the secondary storage device if such an event occurs, a failover network device is called up by the computer's System Management Memory (SMM) Basic Input Output System (BIOS), which allows uninterrupted communication to continue between the computer and remote secondary storage device.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07509449",
	"publication_date": "2009-03-24",
	"application_number": "11952810",
	"application_date": "2007-12-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Invoking user designated actions based upon selected computer content",
	"summary": "",
	"abstract": "A program or system function on a computer system is automatically invoked by receiving a user-selected first insertion point or replacement area within a first user interface to a destination computer file. Subsequent to receiving the first insertion point within a destination file, a second user interface to content of a source computer file is provided upon user command. Then, responsive to a user highlighting text within the second user interface, the highlighted text is automatically copied from the application program to a clipboard buffer. Auto-trigger rules are searched for a rule which correlates to said highlighted text copied to the clipboard and, upon finding a correlating rule, one or more programs or system functions are invoked according to the found rule without need to modify or change said application program.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07503012",
	"publication_date": "2009-03-10",
	"application_number": "10756108",
	"application_date": "2004-01-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Lazy deregistration of user virtual machine to adapter protocol virtual offsets",
	"summary": "",
	"abstract": "A method is provided for operating a communications adapter employed in a multinode data processing system in a fashion which enhances the performance of remote direct memory access data transfers. The system is provided with pointers and a table which are employed to determine whether or not an address which has been supplied for the transfer has already been mapped to a real address at the source or destination node. The table is also preferably provided with counters which can be incremented or decremented to enable the use of least recently used mechanisms at the upper level protocol layers to more efficiently control the setting and resetting of table entries.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07480298",
	"publication_date": "2009-01-20",
	"application_number": "11017570",
	"application_date": "2004-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Localization in distributed computer environments",
	"summary": "",
	"abstract": "A method and system for providing client locale information to a server in a distributed computer enterprise. When a client generates a request to a remote server, the client's locale and time zone information, known as the international context, is associated with the request. The server then processes requests from the client according to the internationalization context. The client's international context is propagated to successive servers that further service the client's request.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07603403",
	"publication_date": "2009-10-13",
	"application_number": "09870319",
	"application_date": "2001-05-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing escalating resource needs within a grid environment",
	"summary": "",
	"abstract": "A job is submitted into a first selection of resources in a grid environment from among a hierarchy of discrete sets of resources accessible in the grid environment. Discrete sets of resources may include locally accessible resources, enterprise accessible resources, capacity on demand resources, and grid resources. The performance of the first selection of resources is monitored and compared with a required performance level for the job. If the required performance level is not met, then the discrete sets of resources are queried for available resources to meet the required performance level in an order designated by said hierarchy. Available resources in a next discrete set of resource from the hierarchy of discrete sets of resources are added to a virtual organization of resources handling the job within the grid environment.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07562143",
	"publication_date": "2009-07-14",
	"application_number": "10756138",
	"application_date": "2004-01-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Massively parallel supercomputer",
	"summary": "",
	"abstract": "A novel massively parallel supercomputer of hundreds of teraOPS-scale includes node architectures based upon System-On-a-Chip technology, i.e., each processing node comprises a single Application Specific Integrated Circuit (ASIC). Within each ASIC node is a plurality of processing elements each of which consists of a central processing unit (CPU) and plurality of floating point processors to enable optimal balance of computational performance, packaging density, low cost, and power and cooling requirements. The plurality of processors within a single node may be used individually or simultaneously to work on any combination of computation or communication as required by the particular algorithm being solved or executed at any point in time. The system-on-a-chip ASIC nodes are interconnected by multiple independent networks that optimally maximizes packet communications throughput and minimizes latency. In the preferred embodiment, the multiple networks include three high-speed networks for parallel algorithm message passing including a Torus, Global Tree, and a Global Asynchronous network that provides global barrier and notification functions. These multiple independent networks may be collaboratively or independently utilized according to the needs or phases of an algorithm for optimizing algorithm processing performance. For particular classes of parallel algorithms, or parts of parallel calculations, this architecture exhibits exceptional computational performance, and may be enabled to perform calculations for new classes of parallel algorithms. Additional networks are provided for external connectivity and used for Input/Output, System Management and Configuration, and Debug and Monitoring functions. Special node packaging techniques implementing midplane and other hardware devices facilitates partitioning of the supercomputer in multiple networks for optimizing supercomputing resources.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07555566",
	"publication_date": "2009-06-30",
	"application_number": "10468993",
	"application_date": "2002-02-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Meta-model for associating multiple physical representations of logically equivalent entities in messaging and other applications",
	"summary": "",
	"abstract": "A meta-model for creating models of alternative physical representations of logically equivalent entities, such as alternative wire format representations of logically equivalent messages, includes a logical meta-model and a physical meta-model. The logical meta-model provides logical entity component classes for creating a logical model which describes, in a platform and programming language neutral manner (e.g. as an XML schema), the logical structure of the modeled entity as a hierarchy of logical entity components. The physical meta-model provides classes for creating a physical model which describes the alternative physical representations. The physical meta-model includes Base Classes representative of generic physical representations of the logical entity components, with u201ccorrespondence associationsu201d being defined between the Base Classes and corresponding logical entity component classes. The physical meta-model further includes at least one set of physical representation-specific, Derived Classes descendent from the Base Classes.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07559052",
	"publication_date": "2009-07-07",
	"application_number": "10703037",
	"application_date": "2003-11-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for autonomic test case feedback using hardware assistance for code coverage",
	"summary": "",
	"abstract": "A method, apparatus, and computer instructions for presenting coverage data for code. The coverage data containing instruction access indicators associated with the code is obtained. Particular instruction access indicators that have been set by a processor in the data processing system in response to execution of the code by the processor are identified to form set instruction access indicators. Each set instruction access indicator is associated with a portion of the code. A presentation for the coverage data is generated. The set instruction access indicators are identified in the presentation. This presentation may be, for example, a graphical presentation.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07480899",
	"publication_date": "2009-01-20",
	"application_number": "10808716",
	"application_date": "2004-03-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for autonomically initiating measurement of secondary metrics based on hardware counter values for primary metrics",
	"summary": "",
	"abstract": "A method, apparatus, and computer instructions in a data processing system for processing instructions are provided. Instructions are received at a processor in the data processing system. If a selected indicator is associated with the instruction, counting of each event associated with the execution of the instruction is enabled. Functionality may be provided in the performance monitoring application for initiating the measurement of secondary metrics with regard to identified instructions, data addresses, ranges of identified instructions, or ranges of identified data addresses, based on counter values for primary metrics. Thus, for example, when a primary metric counter, or a combination of primary metric counters, meets or exceeds a predetermined threshold value, an interrupt may be generated. In response to receiving the interrupt, counters associated with the measuring of secondary metrics of a range of instructions/data addresses may be initiated.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07574587",
	"publication_date": "2009-08-11",
	"application_number": "12124822",
	"application_date": "2008-05-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for defining and instrumenting reusable java server page code snippets for website testing and production",
	"summary": "",
	"abstract": "Reusable JSP code snippets are defined and instrumented for Website testing and production. A user may define tile definitions in a markup language file for a number of JSP code snippets to be included in a store page. Upon receiving store inputs comprising tile definitions and jar files for the features, tables may be generated that map features to stores and features dependencies to features. Based on the tables, the store inputs may be validated. If no error occurs, run time files may be generated and JSP code snippets may be instrumented to the appropriate location for Website testing and production.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07475388",
	"publication_date": "2009-01-06",
	"application_number": "11004284",
	"application_date": "2004-12-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for exposing monitoring violations to the monitored application",
	"summary": "",
	"abstract": "A method and system for exposing monitoring violations to monitored applications is provided. A monitored application may detect that a monitoring application has been applied to monitor a transaction. Based on a defined policy or a threshold within policy, the monitored application may determine if the transaction is in a violation state. If the transaction is in a violation state, the mechanism of the present invention enables the monitoring application to notify the monitored application, such that the monitored application may take corrective action to correct the violation.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07631073",
	"publication_date": "2009-12-08",
	"application_number": "11044465",
	"application_date": "2005-01-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for governing the transfer of physiological and emotional user data",
	"summary": "",
	"abstract": "Methods, apparatus and articles of manufacture are provided for governing the transfer of data characterizing a user's behavior, physiological parameters and/or psychological parameters. One embodiment provides a method of handling a request, from a requesting application, for emotion data characterizing an emotional state of a user. A firewall ruleset defining rules governing the transfer of the emotion data to requesting applications is accessed to determine whether to provide the emotion data the requesting application. The request is denied if the firewall ruleset rules are not satisfied.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07543330",
	"publication_date": "2009-06-02",
	"application_number": "10821159",
	"application_date": "2004-04-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for implementing packet command instructions for network processing",
	"summary": "",
	"abstract": "A method, apparatus and computer program product are provided for implementing packet command instructions for network processing. A set of packet commands is provided. Each packet command defines a corresponding packet operation. A command from the set of packet commands is issued to perform the defined corresponding packet operation. A packet buffer structure hardware is provided for performing one or more predefined packet manipulation functions responsive to the issued command.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07617332",
	"publication_date": "2009-11-10",
	"application_number": "10427865",
	"application_date": "2003-05-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for maintaining performance monitoring structures in a page table for use in monitoring performance of a computer program",
	"summary": "",
	"abstract": "A method and apparatus in a data processing system for measuring events associated with the execution of instructions are provided. Instructions are received at a processor in the data processing system. If a selected indicator is associated with the instruction, counting of each event associated with the execution of the instruction is enabled. In some embodiments, the performance indicators, counters, thresholds, and other performance monitoring structures may be stored in a page table that is used to translate virtual addresses into physical storage addresses. A standard page table is augmented with additional fields for storing the performance monitoring structures. These structures may be set by the performance monitoring application and may be queried and modified as events occur that require access to physical storage.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07526757",
	"publication_date": "2009-04-28",
	"application_number": "10757250",
	"application_date": "2004-01-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for prefetching data from a data structure",
	"summary": "",
	"abstract": "A method, apparatus, and computer instructions for providing hardware assistance to prefetch data during execution of code by a process or in the data processing system. In response to loading of an instruction in the code into a cache, a determination is made, by the processor unit, as to whether metadata for a prefetch is present for the instruction. In response to metadata being present for the instruction, selectively prefetching data, from within a data structure using the metadata, into the cache in a processor.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07620777",
	"publication_date": "2009-11-17",
	"application_number": "12431389",
	"application_date": "2009-04-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for prefetching data from a data structure",
	"summary": "",
	"abstract": "A method, apparatus, and computer instructions for providing hardware assistance to prefetch data during execution of code by a process or in the data processing system. In response to loading of an instruction in the code into a cache, a determination is made, by the processor unit, as to whether metadata for a prefetch is present for the instruction. In response to metadata being present for the instruction, selectively prefetching data, from within a data structure using the metadata, into the cache in a processor.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07526616",
	"publication_date": "2009-04-28",
	"application_number": "10806866",
	"application_date": "2004-03-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing a more powerful user-interface to device with a limited user-interface",
	"summary": "",
	"abstract": "A method and apparatus for controlling a computer device with a limited user-interface via a remote computer device having a more powerful user interface. Both computer devices are interconnected via a wireless communication channel and both computer devices support a common communications protocol. User-interface information is sent from the computer device with a limited user-interface to the remote computer device to provide a user-interface at the remote computer device for receiving user input at the remote computer device. The user input controls the computer device with a limited user-interface to execute commands therein corresponding to the user input.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07577910",
	"publication_date": "2009-08-18",
	"application_number": "09613113",
	"application_date": "2000-07-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for session initiation protocol application design, development, execution and integration",
	"summary": "",
	"abstract": "A method, apparatus, and computer instructions are provided for a session initiation protocol application design, development, execution, and integration. A framework with a framework controller, an application data object, transition handlers, precondition handlers and post condition handlers is provided. When a message is received in a SIP application, the framework controller determines a state of application and parses the message to update application data by using corresponding handlers. The handlers for each state are specified in an input markup language model defined by a user externally via a Web service accessible component.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07532617",
	"publication_date": "2009-05-12",
	"application_number": "11065538",
	"application_date": "2005-02-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for transforming Java Native Interface function calls into simpler operations during just-in-time compilation",
	"summary": "",
	"abstract": "A method and apparatus for transforming JAVA Native Interface function calls to constants, internal just-in-time (JIT) compiler operations or simpler intermediate representation. A compiler generates a plurality of intermediate representations for a plurality of native interface function calls. During inlining of native code, matching is performed on each native function call (against this list) and a list of native interface function calls is generated. For each native interface function call, a (JIT) call transformer attempts to replace the native interface function call with a constant, internal JIT compiler operation or a simpler intermediate representation depending on the type of native interface function call.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07490320",
	"publication_date": "2009-02-10",
	"application_number": "11062306",
	"application_date": "2005-02-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for transforming systems management native event formats to enable correlation",
	"summary": "",
	"abstract": "A method, apparatus, and computer instructions for system management. A gateway in a network data processing system receives an event in a native event management form. The event is transformed into a new format. The event is correlated in the new format to determine whether a system management action should be performed.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07526772",
	"publication_date": "2009-04-28",
	"application_number": "10758858",
	"application_date": "2004-01-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for XSL/XML based authorization rules policy implementation",
	"summary": "",
	"abstract": "A system and method for implementing XSL/XML based authorization rules policy on a given set of data. An authorization rules engine is created which uses authorization rules defined in XSL to operate on access decision information (ADI) provided by the user. Inside the authorization rules engine, a boolean authorization rules mechanism is implemented to constrain the XSL processor to arrive at a boolean authorization decision. By applying the constrained authorization rules, the authorization rules engine evaluates available ADI data from an ADI XML input document. An output from a set of predetermined authorization decisions is provided to the user when the ADI input data is successfully evaluated. An error message is also provided to the user if required ADI data is unavailable for evaluation.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07512976",
	"publication_date": "2009-03-31",
	"application_number": "10703014",
	"application_date": "2003-11-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus to implement adaptive scripting tool",
	"summary": "",
	"abstract": "A meta-data driven adaptive scripting tool which employs a framework across clients and servers to achieve dynamic binding for user defined commands at runtime and support different scripting languages residing in a heterogeneous distributed network. In a preferred embodiment the Bean Scripting Framework (BSF) defines the unified extension mechanism used, the meta-data associated with commands is in XML format, and the adaptive scripting tool is written in Java.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07490316",
	"publication_date": "2009-02-10",
	"application_number": "11002694",
	"application_date": "2004-12-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and data processing system optimizing performance through reporting of thread-level hardware resource utilization",
	"summary": "",
	"abstract": "According to a method of operating a data processing system, one or more monitoring parameter sets are established in a processing unit within the data processing system. The processing unit monitors, in hardware, execution of each of a plurality of schedulable software entities within the processing unit in accordance with a monitoring parameter set among the one or more monitoring parameter sets. The processing unit then reports to software executing in the data processing system utilization of hardware resources by each of the plurality of schedulable software entities. The hardware utilization information reported by the processing unit may be stored and utilized by software to schedulable execution of the schedulable software entities reported by the processing unit. The hardware utilization information may also be utilized to generate a classification of at least one executing schedulable software entity, which may be communicated to the processing unit to dynamically modify an allocation of hardware resources to the schedulable software entity.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07475399",
	"publication_date": "2009-01-06",
	"application_number": "10755877",
	"application_date": "2004-01-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for caching role-specific fragments",
	"summary": "",
	"abstract": "A method, a system, an apparatus, and a computer program product are presented for a fragment caching methodology. After a message is received at a computing device, a fragment in the message body is cached. Cache ID rules from an origin server accompany a fragment to describe a method for forming a unique cache ID for the fragment such that dynamic content can be cached away from an origin server. A cache ID may be based on a URI and/or query parameters and/or cookies that are associated with a fragment. After user authentication, a cookie containing the user's role may be used in subsequent requests for role-specific fragments and in the cache identifier for role-specific fragments, thereby allowing requests from other users for role-specific fragments to be resolved in the cache when the users have the same role because these users would also have the same cookie.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07509393",
	"publication_date": "2009-03-24",
	"application_number": "10034724",
	"application_date": "2001-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for classifying content and prioritizing web site content issues",
	"summary": "",
	"abstract": "A method of analysing a Web page comprising the steps of analysing said Web page and identifying content issues; obtaining traffic data for said Web page; correlating said content issues with said traffic data; and producing a report on said correlated data.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07624173",
	"publication_date": "2009-11-24",
	"application_number": "10361948",
	"application_date": "2003-02-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for collaborative ontology modeling",
	"summary": "",
	"abstract": "A distributed ontology system including a central computer comprising a global ontology directory, a plurality of ontology server computers, each including a repository of class and relation definitions, and a server for responding to queries relating to class and relation definitions in the repository, and a computer network connecting the central computer with the plurality of ontology server computers. A method is also described and claimed.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07533124",
	"publication_date": "2009-05-12",
	"application_number": "11373340",
	"application_date": "2006-03-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for determining application availability",
	"summary": "",
	"abstract": "A method and system for determining an availability of an application. Pairs of processes utilized by the application are determined. Each pair includes consumer and provider processes. For each pair, a diagnostic transaction is initiated by the pair's consumer process, utilizes an application programming interface (API) to open a connection between the consumer process and provider process and to request access to a resource managed by the provider process. Any communication between a pair's consumer and provider processes uses the same API. The diagnostic transaction is completed by receiving or not receiving, at the consumer process, a response from the pair's provider process where the response provides the requested access. Receipt of the response designates the provider process as available to the application, whereas non-receipt of the response designates the provider process as unavailable. If responses are received for all diagnostic transactions, the application is available.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07587453",
	"publication_date": "2009-09-08",
	"application_number": "11326559",
	"application_date": "2006-01-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for distributing and updating heterogeneous resources",
	"summary": "",
	"abstract": "Methods, systems and apparatus for distributing and updating resources. An example method comprising the steps of: a resource producer registering a resource and a resource plug-in with a first server, and submitting a resource patch thereto when a resource update occurs; a second server replicating the resource, the resource plug-in and the resource patch from the first server, and a resource consumer downloading the resource, the resource plug-in and the resource patch from the second server; and updating the resource at the resource consumer side by executing the resource plug-in to apply the resource patch on the resource, and obtaining an updated resource version. The method and system of the present invention will greatly save network bandwidth in a large scale progressive resource distribution and make the design more flexible and extensible.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07512941",
	"publication_date": "2009-03-31",
	"application_number": "10841598",
	"application_date": "2004-05-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for dynamically associating type information and creating and processing meta-data in a service oriented architecture",
	"summary": "",
	"abstract": "A method for dynamically associating type information about extensible messages in a service-oriented architecture includes configuring a simple object access protocol (SOAP) message header to include message meta-data and semantics, thereby facilitating a dynamic exchange of semantic type information for open content message exchange between a sender and a receiver.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07631314",
	"publication_date": "2009-12-08",
	"application_number": "10648685",
	"application_date": "2003-08-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for efficient and scalable detection and management of global annotations",
	"summary": "",
	"abstract": "Methods, systems, and articles of manufacture for proving global annotation services are disclosed. Global annotations are used to annotate a data element independently from the internal representation of a data element employed by a particular software application. Data elements are normalized into a form used by a global annotation system to identify the data element, and corresponding global annotations, independent from the application in which the data element may appear. An annotation cache may be used to store the global annotations that have been created for a particular data source, improving the efficiency of the global annotation system.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07502809",
	"publication_date": "2009-03-10",
	"application_number": "10965185",
	"application_date": "2004-10-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for enabling a server application to be executed in the same virtual machine as a client application using direct object oriented programming method calls",
	"summary": "",
	"abstract": "The present invention concerns a method and system for enabling a server application to be executed in the same Java Virtual Machine (VM) as a client application using direct Java method calls without the need for remote communications protocol processing of the method calls. This is achieved by providing an application program interface (API) that exposes objects comprising the server application program to the client application program, whereby a client application method call is reduced by the interface to a Plain Old Java Objects (POJO) method call.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07607128",
	"publication_date": "2009-10-20",
	"application_number": "11074550",
	"application_date": "2005-03-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for establishing communication between at least two devices",
	"summary": "",
	"abstract": "The present invention is related to a method for communicating features supported by a device to at least one other device. The method includes providing a bit stream by the device, where at least one bit in the bit stream represents a feature supported by the device. In a second aspect, a method for establishing a communication session between at least two devices includes initiating communication between a first device and a second device, exchanging a bit stream associated with the first device and a bit stream associated with the second device, and identifying mutually supported features.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07480726",
	"publication_date": "2009-01-20",
	"application_number": "10693592",
	"application_date": "2003-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for implementing an application-based naming system",
	"summary": "",
	"abstract": "A method is presented for processing names by a naming service. A naming service obtains an application name for an application along with at least one deployment attribute for a deployment of an instance of the application within a data processing system. The naming service generates an application-based name for the instance of the application; the application-based name represents a context within a naming system that is supported by the naming service, and the application-based name is a compound name that includes the application name and at least one deployment name for a deployment attribute. A deployment attribute is a metadata value, such as a deployment identifier or version identifier, that characterizes a manner in which the instance of the application is deployed within the data processing system.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07483914",
	"publication_date": "2009-01-27",
	"application_number": "10621902",
	"application_date": "2003-07-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for maintaining consistency during multi-threaded processing of LDIF data",
	"summary": "",
	"abstract": "A method, a system, an apparatus, and a computer program product are presented for loading LDIF ((Lightweight Directory Access Protocol (LDAP) Data Interchange Format) data into a directory. A single reader thread reads entries from an LDIF file; each entry is associated with a priority value, e.g., the priority value for an entry may be based on the number of delimiters in the distinguished name within the entry. Multiple loading threads concurrently add the entries into an LDAP directory in accordance with their associated priority values. The entries are added to the LDAP directory in an order of highest indicated priority to lowest indicated priority; entries that are associated with priority values that indicate equal priority are considered to be equivalent for the purposes of ordering the entries, so entries that have equal priority may be added to the LDAP directory in any order.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07548989",
	"publication_date": "2009-06-16",
	"application_number": "10611144",
	"application_date": "2003-07-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for managing instant messaging status",
	"summary": "",
	"abstract": "A system for managing instant messaging status. An occurrence of an event for a user in a calendar application is detected. A status of the user for an instant messaging system is controlled during the occurrence of the event in response to detecting the occurrence of the event.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07584258",
	"publication_date": "2009-09-01",
	"application_number": "11294288",
	"application_date": "2005-12-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for pre-print processing of web-based documents to reduce printing costs",
	"summary": "",
	"abstract": "The present invention is directed to a method, apparatus, system, or computer program product that allows a user to choose one or more print options within a browser environment in order to conserve the consumption of physical resources, such as paper and printer ink, by modifying the content of a document. Web-based documents are generally printed for specific, limited purposes, and hardcopy versions of Web-based documents can be relatively expensive. By utilizing the extensible nature of browser applications and the standard formatting of structured documents on the World Wide Web, a methodology is provided for reducing the consumption of printing supplies in order to reduce printing costs of relatively expensive printouts of Web-based documents. By parsing the document and changing the structure, tags, elements, element attribute values, text, graphics, etc., of the document, the present invention creates a modified document that consumes less physical resources during the physical printing process.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07617446",
	"publication_date": "2009-11-10",
	"application_number": "09817090",
	"application_date": "2001-03-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for providing a trusted platform module in a hypervisor environment",
	"summary": "",
	"abstract": "A method is presented for implementing a trusted computing environment within a data processing system. A hypervisor is initialized within the data processing system, and the hypervisor supervises a plurality of logical, partitionable, runtime environments within the data processing system. The hypervisor reserves a logical partition for a hypervisor-based trusted platform module (TPM) and presents the hypervisor-based trusted platform module to other logical partitions as a virtual device via a device interface. Each time that the hypervisor creates a logical partition within the data processing system, the hypervisor also instantiates a logical TPM within the reserved partition such that the logical TPM is anchored to the hypervisor-based TPM. The hypervisor manages multiple logical TPM's within the reserved partition such that each logical TPM is uniquely associated with a logical partition.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07484091",
	"publication_date": "2009-01-27",
	"application_number": "10835350",
	"application_date": "2004-04-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for restrictive caching of user-specific fragments limited to a fragment cache closest to a user",
	"summary": "",
	"abstract": "A method, a system, an apparatus, and a computer program product are presented for a fragment caching methodology. Within the request path from a client to a server, a first computing device may attach to a request message a message header that indicates that the first computing device supports fragment processing; a second computing device within the request path processes this request message. When the second computing device receives a response message corresponding to the request message, it can check for a message header directive that indicates that it should cache the response message's fragment only if the response path does not have at least one computing device that supports the processing of fragments; if so, then it forwards the response message without caching its contained fragment.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07587515",
	"publication_date": "2009-09-08",
	"application_number": "10034770",
	"application_date": "2001-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for synchronizing opto-mechanical filters to a series of video synchronization pulses and derivatives thereof",
	"summary": "",
	"abstract": "A method and system for synchronizing rotating machinery or other electromechanical actuator devices to a series of sync pulses derived from a video stream comprising point optimized control laws.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07635189",
	"publication_date": "2009-12-22",
	"application_number": "11314388",
	"application_date": "2005-12-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for unified support of multiple system management information models in a multiple host environment",
	"summary": "",
	"abstract": "A method and system for employing Common Information Model (CIM) resources within a data processing system. A request is received for an operation with respect to CIM resources, and a determination is made as to whether the request can be fulfilled locally or remotely. In response to a determination to fulfill the request locally, the request is delegated to local CIM object manager (CIMOM) functionality to obtain result data, e.g., from a local repository or from a locally managed provider. In response to a determination to fulfill the request remotely, the request is delegated to the one or more remote CIMOMs, and the result data is aggregated from a plurality of remote CIMOMs. The result data is then returned to the originator of the request.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07627593",
	"publication_date": "2009-12-01",
	"application_number": "11211952",
	"application_date": "2005-08-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system to optimize java virtual machine performance",
	"summary": "",
	"abstract": "A method to assist a software developer in optimizing performance of a Java virtual machine (Jvm) is disclosed. The method includes creating a model to predict future usage of heap memory by the Jvm. In response to the time series analysis model having an upward trend of heap memory usage, advising the developer to review a heap dump to determine if a possible memory leak exists. In response to the time series analysis model having a horizontal asymptote at a predicted future time, advising the developer to specify the maximum limit of heap memory as a function of the horizontal asymptote. In response to a heap exhaustion error, which indicates a requested usage of heap memory by the Jvm greater than a maximum limit of heap memory, determining a likely cause of the heap exhaustion error, and advising the developer to take appropriate actions to optimize the Jvm performance.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07475214",
	"publication_date": "2009-01-06",
	"application_number": "11464944",
	"application_date": "2006-08-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for backing up and restoring data",
	"summary": "",
	"abstract": "One aspect of the invention is a method for backing up data. An example of the method includes creating a description of a backup. The description of the backup may be created in response to receiving a request to perform a backup. This example also includes receiving a block of data to be backed up. This example further includes generating a packet that includes the block of data and metadata, wherein the block of data and the metadata are included in a common information protocol object. This example additionally includes transmitting the packet. This example may also include extracting the block of data from the packet, and storing the block of data on a storage device. If desired, this example may further include restoring the data block from the storage device.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07529898",
	"publication_date": "2009-05-05",
	"application_number": "10888711",
	"application_date": "2004-07-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for dynamically integrating remote portlets into portals",
	"summary": "",
	"abstract": "The present invention discloses a method allowing dynamically integrating remote portlets into each Portal by providing local portlets as remote portlet Web-Services by providing, to each Portal-Server, a publishing functionality allowing electronic creation of a service description for each single local portlet and publishing it into a Central-Registry and a find/binding functionality to find remote portlet Web-Services via the Central-Registry and bind them using the service description for accessing the remote portlet. Preferably, each Portal-Server includes a Portlet-Registry component as well as a Portlet-Proxy. The Portlet-Registry provides service description to the Portlet-Proxy that establishes a SOAP-communication with a remote Portal-Server providing the remote portlet Web-Service to be selected. The main advantage of the present invention is that local portlets become available for all Portal-Server without requiring local installation of the portlet code itself. Furthermore, new remote portlets can be included into a portal by finding them in a registry and binding them.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07502833",
	"publication_date": "2009-03-10",
	"application_number": "10095421",
	"application_date": "2002-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for efficiently distributing and remotely managing meeting presentations",
	"summary": "",
	"abstract": "A mechanism is provided for efficiently distributing and remotely managing meeting presentations. Participants download presentation documents to local storage ahead of time. The presentation then runs in an environment that allows the meeting host to send events to the participants to remotely manage the meeting. In one preferred embodiment, the participants are allowed to control the meeting events locally and a status is transmitted back to the host. The host may then view the status of each of the participants to help control progress through the meeting.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07526525",
	"publication_date": "2009-04-28",
	"application_number": "10897227",
	"application_date": "2004-07-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for file system security by controlling access to the file system resources using externally stored attributes",
	"summary": "",
	"abstract": "The present invention is an algorithm that manages the ability of a user or software program to access certain protected file resources. This invention describes a method for file system security through techniques that control access to the file system resources using externally stored attributes. This invention accomplishes the described objectives in file system security by creating an external database containing auxiliary attributes for objects in the file system. During a file access attempt, an identifier of this file will be matched against a set of protected files in a security database. If that file is not in the database, there is not protection on the file and requester will be allowed to access the file. If a match does show that the file is protected there will be a determination as to whether the requester will be allowed access to the file. The basis for this access determination will be a set security rules defined in the external security attribute. This invention incorporates techniques and algorithms for attribute attachment, storage and organization of the associations to these attributes, and subsequent recognition of attached attributes. In this approach, the attributes would define authorization policy for controlling access to objects in the file system.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07568097",
	"publication_date": "2009-07-28",
	"application_number": "10735003",
	"application_date": "2003-12-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for inlining native functions into compiled java code",
	"summary": "",
	"abstract": "A method, apparatus, and computer instructions are provided for inlining native functions into compiled Java code. A conversion engine is provided by the present invention for converting the intermediate representation of native functions to the just-in-time (JIT) compiler's intermediate representation. With the converted intermediate representation, an inliner recursively inlines the converted JIT compiler's intermediate representation into the native callsite to remove the need of invoking the native function and subsequent native calls made by the function. The inlining process continues until either a call to an opaque function is encountered or until a JIT compiler intermediate representation growth limits are reached. The inliner also replaces calls to most native functions that are non-inlineable or opaque with calls to synthesized native functions that provide access to native libraries containing implementations of the original non-inlineable calls.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07530059",
	"publication_date": "2009-05-05",
	"application_number": "11062293",
	"application_date": "2005-02-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for managing persistent federated folders within a federated content management system",
	"summary": "",
	"abstract": "A persistent federated folder within a federated content management system can be used to save federated search results, to act as a container in a workflow process, or a container for a set of documents or folders with similar characteristics. The federated folder and its associated storage structure have the capability to save its instances persistently. The federated folder operations can selectively create, retrieve, update, and/or delete an instance of a federated folder in addition to adding, retrieving updating and deleting its parts and its members. Seamless integration with the federated query is provided to operate on the federated folder transparently regardless of the locality of the user or the datastores the user is searching. Access rights for federated folders are enforced according to user's general privileges.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07533115",
	"publication_date": "2009-05-12",
	"application_number": "10664200",
	"application_date": "2003-09-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for optimized parameter binding",
	"summary": "",
	"abstract": "Also disclosed is a technique for output parameter binding. When executing a statement, data in an application structure of the statement is compared with optimization information in a bind-out structure. When there is a match between the data in the application structure and data in the optimization information in the bind-out structure, the statement is executed with the optimization information.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07516138",
	"publication_date": "2009-04-07",
	"application_number": "10676800",
	"application_date": "2003-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for providing a scalable trusted platform module in a hypervisor environment",
	"summary": "",
	"abstract": "A method is described for implementing a trusted computing environment within a data processing system where the data processing system includes a single hardware trusted platform module (TPM). Multiple logical partitions are provided in the data processing system. A unique context is generated for each one of the logical partitions. When one of the logical partitions requires access to the hardware TPM, that partition's context is required to be stored in the hardware TPM. The hardware TPM includes a finite number of storage locations, called context slots, for storing contexts. Each context slot can store one partition's context. Each one of the partitions is associated with one of the limited number of context storage slots in the hardware TPM. At least one of the context slots is simultaneously associated with more than one of the logical partitions. Contexts are swapped into and out of the hardware TPM during runtime of the data processing system so that when ones of the partitions require access to the hardware TPM, their required contexts are currently stored in the hardware TPM.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07478246",
	"publication_date": "2009-01-13",
	"application_number": "10902670",
	"application_date": "2004-07-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for providing single sign-on user names for Web cookies in a multiple user information directory environment",
	"summary": "",
	"abstract": "A method for providing single sign-on (SSO) user names for Web cookies in a multiple user information directory environment. SSO access to multiple applications is supported in situations where multiple user information directories are deployed, and users may be known by multiple identifiers. Convenient specification is enabled for which of a user's multiple names is to be used in an SSO Web cookie that is passed from application to application to enable SSO operation. The user's SSO Web cookie user name is fully separated conceptually from the user's effective name for any given application within the SSO environment. The SSO Web cookie user name is specified independently from the effective name by which the user is known when operating in the Web application that writes the SSO Web cookie back to the user's computer system. Use of an administratively supplied user name in the SSO Web cookie is facilitated.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07480718",
	"publication_date": "2009-01-20",
	"application_number": "10878299",
	"application_date": "2004-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for remotely searching a local user index",
	"summary": "",
	"abstract": "A system and method are provided for enabling a user to search for documents that the user has previously viewed on its local machine. The system includes three main components: the desktop integration module, the index module, and the graphical user interface module. The desktop integration module is an application which monitors documents with which the user interacts for predetermined events, and obtains content data and metadata from the monitored documents. The index module indexes the content data and metadata received from the desktop integration module. The graphical user interface module then permits a user to utilize the desktop integration module and index module by allowing a user to search for a document.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07493303",
	"publication_date": "2009-02-17",
	"application_number": "10910640",
	"application_date": "2004-08-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for supporting connection establishment in an offload of network protocol processing",
	"summary": "",
	"abstract": "A number of improvements in network adapters that offload protocol processing from the host processor are provided. Specifically, a mechanism for improving connection establishment in a system utilizing an offload network adapter is provided. The connection establishment mechanism provides the ability to offload connection establishment and maintenance of connection state information to the offload network adapter. As a result of this offloading of connection establishment and state information maintenance, the number of communications needed between the host system and the offload network adapter may be reduced. In addition, offloading of these functions to the offload network adapter permits bulk notification of established connections and state information to the host system rather than piecemeal notifications as is present in known computing systems.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07533176",
	"publication_date": "2009-05-12",
	"application_number": "10890710",
	"application_date": "2004-07-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for testing branch execution and state transition logic in session initiation protocol application modular components",
	"summary": "",
	"abstract": "A system for testing branch execution and state transition logic in session initiation protocol application modular components. A test harness constructs, sends, and initializes an artificial session initiation protocol runtime environment in order to test session initiation protocol application modular components. The artificial session initiation protocol runtime environment simulates session initiation protocol messages and a determines whether an appropriate session initiation protocol event occurs. Subsequent to determining whether the appropriate session initiation protocol event occurs in response to the simulated session initiation protocol messages, a report of the test results is generated.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07499405",
	"publication_date": "2009-03-03",
	"application_number": "11168719",
	"application_date": "2005-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for third party, broadcast, multicast and conditional RDMA operations",
	"summary": "",
	"abstract": "In a multinode data processing system in which nodes exchange information over a network or through a switch, the mechanism which enables out-of-order data transfer via Remote Direct Memory Access (RDMA) also provides a corresponding ability to carry out broadcast operations, multicast operations, third party operations and conditional RDMA operations. In a broadcast operation a source node transfers data packets in RDMA fashion to a plurality of destination nodes. Multicast operation works similarly except that distribution is selective. In third party operations a single central node in a cluster or network manages the transfer of data in RDMA fashion between other nodes or creates a mechanism for allowing a directed distribution of data between nodes. In conditional operation mode the transfer of data is conditioned upon one or more events occurring in either the source node or in the destination node.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07478138",
	"publication_date": "2009-01-13",
	"application_number": "11017355",
	"application_date": "2004-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for user-specified error correction in an instant messaging system",
	"summary": "",
	"abstract": "A method and system enter a correction for a previously sent message, determine whether to send a complete corrected message or a message correction specification, and send the selected message to a messaging server. The messaging server receives the message correction specification and a message identifier (ID), and sends the message correction specification and the message ID to a recipient client system if a message with a corresponding message ID has previously been sent to the recipient client system. Then, the recipient client system receives the message correction specification and message ID, retrieves the message with a corresponding message ID from its conversation log, corrects the message, updates the conversation log, and activates an alert to notify a user of an update. If the message has not previously been sent, the messaging server corrects the message and sends the corrected message and the message ID to the recipient client system.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07543033",
	"publication_date": "2009-06-02",
	"application_number": "11852829",
	"application_date": "2007-09-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for using a portable computing device as a smart key device",
	"summary": "",
	"abstract": "A first data processing system, which includes a first cryptographic device, is communicatively coupled with a second data processing system, which includes a second cryptographic device. The cryptographic devices then mutually authenticate themselves. The first cryptographic device stores a private key of a first asymmetric cryptographic key pair and a public key of a second asymmetric cryptographic key pair that is associated with the second data processing system. The second cryptographic device stores a private key of the second asymmetric cryptographic key pair and a public key of the first asymmetric cryptographic key pair that is associated with the first data processing system. In response to successfully performing the mutual authentication operation between the two cryptographic systems, the first data processing system is enabled to invoke sensitive cryptographic functions on the first cryptographic device while the first data processing system remains communicatively coupled with the second data processing system.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07475247",
	"publication_date": "2009-01-06",
	"application_number": "11014067",
	"application_date": "2004-12-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of verifying metadata of a migrated file",
	"summary": "",
	"abstract": "A method and system for maintaining integrity of metadata associated with a migrated file. Following migration of data from a source filesystem to a destination filesystem, a tool is automatically invoked to detect if there are any differences in metadata associated with the files and/or folders at each location. Each select field of the metadata at the source filesystem is reviewed to ensure that it matches with the equivalent field at the destination filesystem. In the event at least one of the reviewed metadata fields does not match, an error is generated and forwarded to an operator.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07529745",
	"publication_date": "2009-05-05",
	"application_number": "10993980",
	"application_date": "2004-11-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, apparatus, and product for asserting physical presence with a trusted platform module in a hypervisor environment",
	"summary": "",
	"abstract": "A method, apparatus, and computer program product are described for asserting physical presence in a trusted computing environment included within a data processing system. The trusted computing environment includes a trusted platform module (TPM). The data processing system is coupled to a hardware management console. The trusted platform module determines whether the hardware management console is a trusted entity. The trusted platform module also determines whether the hardware management console has knowledge of a secret key that is possessed by the TPM. If the TPM determines that the hardware management console is a trusted entity and has knowledge of the secret key, the TPM determines that physical presence has been asserted. Otherwise, if the TPM determines that either the hardware management console is not a trusted entity or the TPM determines that the hardware management console does not have knowledge of the secret key, the TPM determines that physical presence has not been asserted and will not execute commands that require the successful assertion of u201cphysical presenceu201d.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07484099",
	"publication_date": "2009-01-27",
	"application_number": "10902712",
	"application_date": "2004-07-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, apparatus, and product for prohibiting unauthorized access of data stored on storage drives",
	"summary": "",
	"abstract": "A method is disclosed in a data processing system for prohibiting unauthorized access of data that is stored on storage drives. Multiple logical partitions are generated. A different unique randomizer seed is associated with each one of the logical partitions. In response to one of the logical partitions needing to access a storage drive, the logical partition transmits a seed to the storage drive. The transmitted seed is associated with the one of the logical partitions. A transmitting one of the logical partitions is unable to transmit a seed that is other than a seed that is associated with the transmitting one of the logical partitions. The storage drive utilizes the transmitted seed to randomize and de-randomize data for the one of the logical partitions. Data randomized for one of the logical partitions cannot be de-randomized for a different one of the logical partitions.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07478220",
	"publication_date": "2009-01-13",
	"application_number": "11165048",
	"application_date": "2005-06-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and article for improved network performance by avoiding IP-ID wrap-arounds causing data corruption on fast networks",
	"summary": "",
	"abstract": "The reassembly timer in a TCP/IP receiver is dynamically set to avoid data corruption on fast networks caused by IP identification wrap-around. A sender generates IP packets with a special option specifying a reassembly time for fragments based on the subnet of the destination or on the calculated round-trip time of the connection. A receiver sets the reassembly timer to the reassembly time specified in the option. A sender can generate IP packets with an alternative option setting a time stamp for the generated packet. A receiver calculates a traversal time based on the difference between the arrival time of the fragment and this time stamp, and sets the reassembly timer based on this traversal time.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07564843",
	"publication_date": "2009-07-21",
	"application_number": "11014552",
	"application_date": "2004-12-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and article for improved TCP performance during retransmission in response to selective acknowledgement",
	"summary": "",
	"abstract": "A TCP/IP retransmission frame contains multiple TCP segments containing non-contiguous missing packets from a data communication. A TCP option in the first segment in the frame indicates the presence of multiple TCP payloads in the frame. Each TCP payload has a corresponding prepended TCP header. An offset address specified in each TCP header within the frame identifies the location of the next TCP header in the frame. Network throughput performance is enhanced by permitting multiple non-contiguous packets to be retransmitted in a single IP packet.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07480301",
	"publication_date": "2009-01-20",
	"application_number": "11014540",
	"application_date": "2004-12-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and computer program product for parsing an encoding",
	"summary": "",
	"abstract": "According to a method, system and computer program product for parsing an encoding, a computing device receives an encoding that includes a first level of indefinite length. The first level includes a second level of indefinite length. In response to instructions of a first instance of a parser, the computing device parses the first level. In response to instructions of a second instance of the parser, the computing device parses the second level. The second instance is invoked by the first instance.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07596630",
	"publication_date": "2009-09-29",
	"application_number": "10262054",
	"application_date": "2002-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program for switching between various computer-based communication techniques",
	"summary": "",
	"abstract": "In an embodiment of a method of establishing a computer-based communication session involving a user of a computer, notification may be received from the user of a desired participant and a desired communications application for the session. A participant identifier effective to identify the desired participant to the desired communications application may then be retrieved, and the retrieved identifier may be provided to the communications application. An embodiment of a system for computer-based communications includes means for receiving notification of a desired participant in a communications session and a desired communications application for the session, means for retrieving a participant identifier appropriate to identify the desired participant to the desired communications application, and means for providing the retrieved participant identifier to the communications application. The means for receiving notification, means for retrieving a participant identifier and means for providing the identifier may include a communications aggregation program.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07516408",
	"publication_date": "2009-04-07",
	"application_number": "09966829",
	"application_date": "2001-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and program product for retrofitting collaborative components into existing software applications",
	"summary": "",
	"abstract": "Under the present invention, an executable object such as binary or JAVA byte code corresponding to the software application is obtained. Based on an analysis of the software application, points for introducing the collaborative components are identified. A set of executable code (e.g., an Aspect) to introduce the collaborative components at the identified points is then defined and built. Thereafter, the set of executable code and the collaborative components are linked to the executable object.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07484202",
	"publication_date": "2009-01-27",
	"application_number": "10962648",
	"application_date": "2004-10-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and computer program product for providing an intelligent event notification system",
	"summary": "",
	"abstract": "A computer program product for providing an intelligent event notification system includes instructions for implementing a method. The method includes selecting a type of event notification for an event. Determining the type of event notification is based in part on information elements associated with the event. The method also includes determining at least one optimal alert system to receive an event notification corresponding to the type of event notification selected. The determination is based in part on information elements associated with the event. The method further includes associating an alert trigger with the event notification and transmitting the event notification to the at least one optimal alert system upon activation of the alert trigger. The event notification type includes a supplemental information notification specifying activities to be performed in advance of, or in preparation for, the event.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07595717",
	"publication_date": "2009-09-29",
	"application_number": "12124536",
	"application_date": "2008-05-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and program for determining information on a storage system in a network",
	"summary": "",
	"abstract": "Provided are a method, system, and program for providing information on a network storage system. Information is received from host systems identifying storage units the host systems access through at least one identified storage system. The at least one storage system is probed to determine storage units available through the storage system and an identifier of the storage system. The information received from the host systems on storage units the host systems access and the information probed from the at least one storage system on the storage units available through the storage system are processed to determine an association of host systems to storage units for the at least one storage system.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07565431",
	"publication_date": "2009-07-21",
	"application_number": "10721017",
	"application_date": "2003-11-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for authoring of mixed-initiative multi-modal interactions and related browsing mechanisms",
	"summary": "",
	"abstract": "Application authoring techniques, and information browsing mechanisms associated therewith, which employ programming in association with mixed-initiative multi-modal interactions and natural language understanding for use in dialog systems. Also, a conversational browsing architecture is provided for use with these and other authoring techniques.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07546382",
	"publication_date": "2009-06-09",
	"application_number": "10156618",
	"application_date": "2002-05-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for control discovery in computing systems",
	"summary": "",
	"abstract": "Techniques are provided for generically controlling one or more resources associated with at least one computing system. In one aspect of the invention, the technique comprises evaluating one or more performance metrics associated with the one or more resources given one or more configurations of the one or more resources. The technique then causes a change in the one or more configurations of the one or more resources based on the performance metric evaluating step. The one or more performance metrics and the one or more configurations are expressed in generic formats.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07565655",
	"publication_date": "2009-07-21",
	"application_number": "10688742",
	"application_date": "2003-10-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods to integrate user-defined operations into a database",
	"summary": "",
	"abstract": "Systems, methods, and computer products that support techniques associated with highly reliable transaction protocol semantics in databases. Such techniques extend database transaction semantics that support a single-phase or a two-phase commit protocol to include user-defined operations while supporting the XA X/Openu00ae Distributed Transaction Processing Protocol (u201cXA Transaction Protocolu201d). The preferred embodiment of the present invention novelly enables user-defined operations that access external resources by means of the XA Transaction Protocol to be included in database transaction processing features. Thereby user-level access to well-defined APIs is provided. Further, the preferred embodiment of the present invention novelly ensures atomicity for the results of the database transaction that includes both the user-defined operations and database operations. According to the preferred embodiment of the present invention the database acts, in part, as an XA transaction manager.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07526489",
	"publication_date": "2009-04-28",
	"application_number": "10717407",
	"application_date": "2003-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods, apparatus and computer programs for visualization and management of data organisation within a data processing system",
	"summary": "",
	"abstract": "Provided are methods, apparatus and computer programs for managing data organisation for computer programs. The method includes generating a reference taxonomy (information defining a first data organisation), accessing storage associated with a message broker to obtain a taxonomy of message topics used by the broker for routing of messages, and comparing the reference and topic taxonomies to identify matching and non-matching features within the taxonomies. The results of the comparison can then be used to generate, in response to selection of a preferred taxonomy, a modified taxonomy to replace either the reference taxonomy or the topic taxonomy. A GUI is provided to display the taxonomies and to facilitate user selections. A set of adapters provide access to the data storage of different programs and obtain taxonomy information for the different programs. A taxonomy engine compares taxonomies to identify differences and similarities, and can be used to generate a new taxonomy.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07526507",
	"publication_date": "2009-04-28",
	"application_number": "10880033",
	"application_date": "2004-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods, apparatus and computer programs for visualization and management of data organisation within a data processing system",
	"summary": "",
	"abstract": "Provided are methods, apparatus and computer programs for managing data organisation for computer programs. The method includes generating a reference taxonomy (information defining a first data organisation), accessing storage to obtain an application taxonomy (a second data organisation) for a computer program, and comparing the reference and application taxonomies to identify matching and non-matching features within the taxonomies. The results of the comparison can then be used to generate, in response to selection of a preferred taxonomy, a modified taxonomy to replace either the reference taxonomy or the application taxonomy. A GUI is provided to display the taxonomies and to facilitate user selections. A set of adapters provide access to the data storage of different programs and obtain taxonomy information for the different programs. A taxonomy engine compares taxonomies to identify differences and similarities, and can be used to generate an aggregate taxonomy. The method can be used to synchronize the organisation of stored data between a set of different computer programs, each of which may have different data structures and formats.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07627583",
	"publication_date": "2009-12-01",
	"application_number": "10697895",
	"application_date": "2003-10-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Model based optimization with focus regions",
	"summary": "",
	"abstract": "Various embodiments of a method, system and computer program product for optimization of a multidimensional model in a model based performance advisor are disclosed. The multidimensional model comprises groups. Each group has one or more levels. One or more recommended slices associated with the groups are determined based on a focus region.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07480663",
	"publication_date": "2009-01-20",
	"application_number": "10874398",
	"application_date": "2004-06-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Navigating a UAV having an on-board digital camera to capture desired geographic area",
	"summary": "",
	"abstract": "Methods, systems, and products for navigating a UAV having an on-board digital camera are provided. Embodiments include identifying a geographic area not captured by the digital camera while the UAV is flying in a current flying pattern, and modifying the current flying pattern to capture an image of the identified geographic area. Identifying a geographic area not captured by the digital camera while the UAV is flying in a current flying pattern may be carried out by determining an area captured by the onboard camera, extrapolating the area captured by the onboard camera along the flying pattern to determine a perimeter of uncaptured geographic area, and determining the area of the uncaptured geographic area in dependence upon the perimeter.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07546187",
	"publication_date": "2009-06-09",
	"application_number": "12170066",
	"application_date": "2008-07-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Object in, object out technique",
	"summary": "",
	"abstract": "The present invention discloses a technique for processing input objects to generate output objects. Initially, an input object is received. The received input object contains input data and one input function. A type of the received input object is determined. Based on the determined type, it is ascertained whether the received input object satisfies one or more predefined requirements. When it is ascertained that the input object satisfies each predefined requirement, the input function is executed.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07603675",
	"publication_date": "2009-10-13",
	"application_number": "11727248",
	"application_date": "2007-03-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Object oriented structured query language (OOSQL) support for Enterprise Java Beans",
	"summary": "",
	"abstract": "The invention which meets the needs identified above is an apparatus and method for automatic generation of a portable, OOSQL query in terms of a bean's attributes and methods at the time of development. The method accomplishes its purpose by bridging between CORBA and EJB, by providing a Finder Helper Base class which encapsulates application server-specific logic, and by generating a finder helper subclass that contains the portable OOSQL strings.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07631293",
	"publication_date": "2009-12-08",
	"application_number": "11178917",
	"application_date": "2005-07-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "One time passcode system",
	"summary": "",
	"abstract": "The invention relates to a system for securing access to resources or computer systems by means of a self modifying, single use password that limits access to a system and automatically changes each time it is used. Independent computer systems, or clients, are utilized by users to generate one time passcodes to prove their identity to one or more authentication servers. Servers are used to authenticate user inputted one time passcodes, to maintain and update the status of one time passcode clients, and perform rekeying and reset operations. Middleware, an optional component, allows for the interaction between one time passcode clients and servers. Middleware allows for client rekeying and resets as well as synchronisation between the client and server. The invention facilitates, inter alia, distribution of clients to users, maintaining and administering the status of clients on one or more servers, generation of a one time passcode (OTP), authentication of a one time passcode, rekeying of a one time passcode client, resetting of a one-time passcode client, Resetting of a one time passcode client, requesting for generation of a one time passcode on a communication enabled client through software or hardware interfaces, and authentication of one time passcodes by remote application servers.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07571489",
	"publication_date": "2009-08-04",
	"application_number": "10969435",
	"application_date": "2004-10-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Operating PCI express resources in a logically partitioned computing system",
	"summary": "",
	"abstract": "Methods, systems, and products are disclosed for operating Peripheral Component Interconnect (u2018PCIu2019) Express resources in a logically partitioned computing system that include: allocating, by a hypervisor installed on the computing system, a PCI Express adapter installed in the computing system to a logical partition of the computing system, including establishing a data communication path between a processor of the computing system and the PCI Express adapter, the data communication path including a link between a PCI Express root complex and the PCI Express adapter; and administering, by the hypervisor for the logical partition, the PCI Express root complex and the link between the PCI Express root complex and the PCI Express adapter.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07574551",
	"publication_date": "2009-08-11",
	"application_number": "11690292",
	"application_date": "2007-03-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Optimization of database network traffic based upon data-use analysis",
	"summary": "",
	"abstract": "An apparatus, program product and method utilize one or more usage statistics, which are reflective of what data is actually and/or likely to be used by a client when processing a database query, to reduce or eliminate the transfer of unnecessary data between a client and server in a client-server database management system. Information such as the columns that are or have been used and/or the number of rows that have been accessed, may be utilized to identify certain data that is likely to not be used during processing of the database query. Based upon the data that has been identified, a subset of the data that would otherwise be returned as a result of the database query may be identified and returned to a client, often substantially reducing the amount of data required to be retrieved by a client in connection with a database query.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07617181",
	"publication_date": "2009-11-10",
	"application_number": "11465246",
	"application_date": "2006-08-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Personal video recording with pools and groups",
	"summary": "",
	"abstract": "Automated personal video recording, including selecting a lender from among one or more lenders, in which the selecting is carried out in dependence upon a deficit amount, the lenders include at least one user having free storage space and at least one pool having free storage space. The method also includes borrowing, in dependence upon the deficit amount, from the selected lender for a borrower, at least one loan amount of storage space, the borrower having allocated storage space on the PVR optionally including free space, and recording a show for the borrower, the show having a storage space requirement exceeding the borrower's free space by the deficit amount. The borrower can be an individual user or a group comprised of more than one user.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07532809",
	"publication_date": "2009-05-12",
	"application_number": "10180145",
	"application_date": "2002-06-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Personal video recording with storage space distributed among remote personal video recorders",
	"summary": "",
	"abstract": "Automated personal video recording comprising scheduling a show for a user having allocated storage space on a personal video recorder (u201cPVRu201d), wherein the show has a storage space requirement that exceeds the user's free space, and the PVR is coupled for data communications to a storage space provider; and transmitting to the storage space provider an order to record the show through the storage space provider in storage space on a remote PVR that is coupled for data communications to the storage space provider. Receiving in a storage space provider from a personal video recorder (u201cPVRu201d) an order to record a show on a remote PVR, the order comprising an identification of a show and a schedule for recording the show; selecting a remote PVR; and recording the show, in dependence upon the show identification and the schedule for recording the show, in storage space on the selected remote PVR.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07474832",
	"publication_date": "2009-01-06",
	"application_number": "10302399",
	"application_date": "2002-11-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Personal video recording with storage space loans",
	"summary": "",
	"abstract": "Automated personal video recording for multi-user personal video recorders having a multiplicity of registered users, each user having allocated storage space on the PVR which allocated storage space for each user includes storage space upon which shows are recorded and storage space upon which shows have not been recorded (free space), including recording for a borrower a show owned by the borrower, the show having a storage space requirement exceeding the borrower's free space by a deficit amount; selecting, in dependence upon the deficit amount, one or more lenders, wherein the lenders are users, registered on the PVR, having free space; and borrowing, in dependence upon the deficit amount, from the lenders for the borrower, at least one loan amount of storage space. Embodiments include returning from the borrower to the lender the deficit amount after displaying the show to the borrower or upon repossession by a lender.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07529471",
	"publication_date": "2009-05-05",
	"application_number": "10180143",
	"application_date": "2002-06-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Policy driven automation -  specifying equivalent resources",
	"summary": "",
	"abstract": "An autonomic computing system and method store a set of resource equivalencies in memory, select at least one resource equivalency from the set of resource equivalencies, and use the selected at least one resource equivalency for operating the selected resource as required by an autonomic computing system. The set of equivalent resources can contain a plurality of physically distinct resources that are logically equivalent. Resources are added or removed from the set automatically. Equivalent sets can be nested within an equivalent set.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07533173",
	"publication_date": "2009-05-12",
	"application_number": "10674996",
	"application_date": "2003-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Preventing a copy of a protected window",
	"summary": "",
	"abstract": "A method, system and computer readable program on a medium for masking a window or a visible part of a window during a copy screen or copy window operation which:nn",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07600267",
	"publication_date": "2009-10-06",
	"application_number": "11153708",
	"application_date": "2005-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Program flow control in computer systems",
	"summary": "",
	"abstract": "Application programs supporting multiple contexts on a computer system having an operating system supporting threads. The method comprises processing a context processing instruction from the run-time application program, evaluating said instruction in relation to program-flow control yielding context-defining processing parameters, analyzing the context-defining processing parameters from the execution context of the context processing instruction in regard of program flow management by threads, mapping the context-processing instruction to a selected thread managing instruction, or to a selected set of thread managing instructions, having a respective program flow control effect equivalent to that of context-processing instruction, invoking the selected thread managing instruction or the set thereof, together with selected parameters so that that during runtime of the application program only one thread is allowed to execute at a time, and the program state of a thread is stored at a given point in time and is restored later from the point in time.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07559063",
	"publication_date": "2009-07-07",
	"application_number": "11145448",
	"application_date": "2005-06-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Programming portal applications",
	"summary": "",
	"abstract": "Provided is a method for enabling dynamic graphical interfacing with a server from a client. A method includes receiving at a portlet, a plurality of user-generated drawing location identifiers, mapping the user-generated drawing location identifiers to an Applet function via an Applet application programming interface (API), and generating a drawing using a drawing method with the user-generated drawing location identifiers. After the drawing is generated a drawing is returned to a user associated with the user-generated drawing location identifiers. The user-generated drawing location identifiers can be one or more of mouse clicks, taps, and tablet PC drawing indications via a pen. The portlet enables a graphical interface via the Applet API and the Applet API is stored in a Java Archive file (JAR). The JAR file enables multiple users to view the drawing without requiring local files.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07509659",
	"publication_date": "2009-03-24",
	"application_number": "10992523",
	"application_date": "2004-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Providing independent clock failover for scalable blade servers",
	"summary": "",
	"abstract": "Methods and systems are disclosed for providing independent clock failover for scalable blade servers that include assigning a server blade to one of a plurality of clock failover groups, providing a plurality of independent clock signals to the clock generator of the server blade, wherein one of the plurality of independent clock signals is an active clock signal, detecting a failover condition for the clock failover group assigned to the server blade, and switching the active clock signal, in response to the detected failover condition, from one independent clock signal to another independent clock signal.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07562247",
	"publication_date": "2009-07-14",
	"application_number": "11434611",
	"application_date": "2006-05-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Providing on-demand capabilities using virtual machines and clustering processes",
	"summary": "",
	"abstract": "Techniques are provided for on-demand resource allocation in a cluster having at least one initial virtual machine. It is determined that resource requirements have changed. At least one new virtual machine is created on at least one physical machine based on the changed resource requirements. The at least one new virtual machine is added to the initial cluster. Transactions for the at least one initial virtual machine are failed over to the at least one new virtual machine.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07577959",
	"publication_date": "2009-08-18",
	"application_number": "10875660",
	"application_date": "2004-06-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Providing policy-based operating system services in an operating system on a computing system",
	"summary": "",
	"abstract": "Methods, apparatus, products are disclosed for providing policy-based operating system services in an operating system on a computing system. The computing system includes at least one compute node. The compute node includes an operating system. The operating system includes a kernel and a plurality of operating system services of a service type. Providing policy-based operating system services in an operating system on a computing system includes establishing, on the compute node, a kernel policy specifying one of the operating system services of the service type for use by the kernel in the operating system, establishing a performance ruleset, the performance ruleset specifying rules for analyzing the performance of the computing system, measuring performance of the computing system, and adjusting the kernel policy in dependence upon the performance ruleset and the measured performance.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07634388",
	"publication_date": "2009-12-15",
	"application_number": "11553095",
	"application_date": "2006-10-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Query condition building using predefined query objects",
	"summary": "",
	"abstract": "A method, system and article of manufacture for query processing and, more particularly, for managing execution of a query against data in a database. One embodiment comprises receiving a query having (i) at least one result field configured to return data from at least one data record included with the database, and (ii) a query condition comprising a field and a query object associated with the field by an operator configured to select values for the field from the query object. The method further comprises determining whether the query object is configured to provide one or more valid values for the field. If the query object is not configured to provide one or more valid values for the field, the query object is transformed into a transformed query object that is configured to provide one or more valid values for the field. Then, the query is executed against the database.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07584178",
	"publication_date": "2009-09-01",
	"application_number": "11408188",
	"application_date": "2006-04-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Reducing log entries using hash keys",
	"summary": "",
	"abstract": "An example of this presentation deals with the way the events emitted from a component can be grouped from the development phase, so that when the problem occurs in the production environment, the problem could be tracked easily and analyzed. The embodiment deals with the program having multiple separate paths for execution. The execution path could be the normal flow of events grouped together (and generating a key to represent the normal flow). The other execution paths could represent the alternate flows, also grouped, and a key is generated to represent which one is deviated from normal flow. The database stores the key and the relative event flow information, which indicates the grouped events. The lookup viewer can be provided for viewing the normal and alternate flows, since the event has been logged as keys. A u201cKeyu201d is a hash on the static content of the events, which is used to identify a particular start and end of the functionality in a flow of execution.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07502972",
	"publication_date": "2009-03-10",
	"application_number": "12049341",
	"application_date": "2008-03-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Relational database architecture with dynamic load capability",
	"summary": "",
	"abstract": "A relational database architecture with Dynamic Load capability, including a relational database for storing records, a storage unit, a record dispatcher for storing a plurality of objects, each containing at least one record, in the storage unit, and a mapping of the objects to the records which they contain, where the record dispatcher is configured to receive a Dynamic Load Request including a key value of desired records, search the mapping to determine which of the objects in the storage unit contain records that match the key value, and load any of the matching records into the database.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07512597",
	"publication_date": "2009-03-31",
	"application_number": "11421093",
	"application_date": "2006-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Remote access method for accessing dynacache data",
	"summary": "",
	"abstract": "A method for accessing an internal dynamic cache of a Websphere-type Application Server (WAS) from an external component that includes the step of establishing a software interface component within the WAS. The software interface component can receive a request from the external component. The request can include an identifier for a cache object and at least one dictate concerning the cache object. The external cache component can lack privileges to directly execute programmatic actions upon the cache object. The software interface component can trigger a programmatic action in accordance with the dictate. The programmatic action can involve the cache object, wherein the programmatic action utilizes the internal dynamic cache and involves the cache object. The programmatic action can be an action performed local to the WAS.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07543042",
	"publication_date": "2009-06-02",
	"application_number": "10833621",
	"application_date": "2004-04-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Research rapidity and efficiency improvement by analysis of research artifact similarity",
	"summary": "",
	"abstract": "A method for comparing query-related objects is provided. In one embodiment, a first plurality of query-related objects for a first user is compared to a second plurality of query-related objects for a second user to determine a degree of similarity between the first and second plurality of query-related objects. A notification of the degree of similarity is issued.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07480648",
	"publication_date": "2009-01-20",
	"application_number": "11005435",
	"application_date": "2004-12-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Retractable string interface for stationary and portable devices",
	"summary": "",
	"abstract": "An interface for a small form factor electronic device by enabling explicit measurement of extension or retraction of a retractable cord by monitoring the amount of string that passes by sensors, as the string exits the enclosure of the device. Input to such small form factor devices may be provided by sensors that measure the length of a string or wire that has been pulled out of an enclosure, in addition to an angle or direction (e.g., in 1-, 2- or 3-dimensions) at which the string was pulled out. Additionally, the rate of acceleration for the pulling and retracting motion may also be used as additional forms of input. In a further embodiment, a string interface is provided for a small form factor device that communicates information in the form of a pixel display provided integral with the string in response to string manipulation.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07499002",
	"publication_date": "2009-03-03",
	"application_number": "11053451",
	"application_date": "2005-02-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Routing telecommunications to a user in dependence upon device-based routing preferences",
	"summary": "",
	"abstract": "Routing telecommunications to a user including receiving a call, determining that the call is intended for the user, receiving an RFID signal from an RFID tag located with the user, determining the user's location in dependence upon the RFID signal, identifying a plurality of available telephony devices in dependence upon the user's location, identifying a device-based preference for the user, selecting one of the plurality of available telephony devices in dependence upon the device-based preference, and forwarding the call to the selected telephony device. In typical embodiments, determining that the call is intended for the user also includes prompting the caller for the name of the user and receiving from the caller the name of the user.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07489774",
	"publication_date": "2009-02-10",
	"application_number": "10981264",
	"application_date": "2004-11-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure management of authentication information",
	"summary": "",
	"abstract": "A system, method and computer program product are provided for managing authentication information for a user. According to the method, a master digital key is received from the user, and authentication of the user is obtained based on the master digital key. There is received from the user a selection of one identity from among a plurality of identities that are stored for the user. Authentication information for the user is provided into an application or web page based on the one identity selected by the user. In one embodiment, the authentication information is provided by recognizing a web page for which authentication information is stored, and automatically filling the authentication information for the user into appropriate elements of the web page.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07490242",
	"publication_date": "2009-02-10",
	"application_number": "10774723",
	"application_date": "2004-02-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Security containers for document components",
	"summary": "",
	"abstract": "Methods, systems, computer program products, and methods of doing business whereby document components are secured or controlled using u201csecurity containersu201d which encapsulate the components (and other component metadata). A u201csecurity containeru201d encapsulates the component (i.e., content) that is to be controlled within a higher-level construct such as a compound document. The security container also contains rules for interacting with the encapsulated component, and one or more encryption keys usable for decrypting the component and rules for authorized requesters.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07515717",
	"publication_date": "2009-04-07",
	"application_number": "10632156",
	"application_date": "2003-07-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Server resource allocation based on averaged server utilization and server power management",
	"summary": "",
	"abstract": "A method, apparatus, system, and signal-bearing medium that, in an embodiment, calculate the average number of servers that executed an application in a previous time period, decide whether the current number of servers that execute the application is less than the average number of servers, and, if so, power on the average number of servers. The application is then distributed across the average number of servers. In an embodiment, the server is powered on by increasing the clock speed of the processors associated with the servers. In an embodiment, a determination is periodically made whether the response time of the application is greater than a threshold, and, if so, the servers are powered on and the application is distributed across the servers. In an embodiment, a determination is periodically made whether the response time of the application is less than a threshold, and, if so, servers are powered off and the application is distributed across the remaining servers.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07536461",
	"publication_date": "2009-05-19",
	"application_number": "11186607",
	"application_date": "2005-07-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Super-distribution of protected digital content",
	"summary": "",
	"abstract": "Super distribution of protected digital content is disclosed. According to one embodiment of the invention previously purchased encrypted digital content is received from a purchaser of the digital content. The purchaser of the previously purchased encrypted digital content is different from the recipient of the encrypted digital content. A secure transmission is established with an authorization authority for decrypting the content. A first decryption key for decrypting at least part of the previously purchased encrypted content as permitted by the authorization authority is received from the authorization authority. The at least part of the previously purchased encrypted content is decrypted as permitted by the authorization authority.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07590866",
	"publication_date": "2009-09-15",
	"application_number": "11255354",
	"application_date": "2005-10-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Synchronization of password and user data during migration from a first operating system platform to a second operating system platform",
	"summary": "",
	"abstract": "A method and system that enables efficient migration of security and other user data from one operating system environment to another in a large distributed authentication environment by keeping all critical data in sync between the two operating system environments. Specifically, synchronization of password and user data can be achieved during migration of password data from a first operating system platform to a database of a second operating system platform over a prolonged period of time without disruption of service, while allowing the users to (1) continue accessing the system resources, such as print and file services during the migration and (2) change/update passwords and other profile information.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07484206",
	"publication_date": "2009-01-27",
	"application_number": "11034271",
	"application_date": "2005-01-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Synthesizing information-bearing content from multiple channels",
	"summary": "",
	"abstract": "A method receives a query; separates a plurality of information sources into individual elements of content (EOC); tags each EOC with metadata that indicate source, date, and other relevant information; pattern matches each EOC; calculates the respective distance function from every EOC to every other EOC; and outputs EOC to a set of virtual buffers () containing appropriately related EOC less than a given distance value. The method further creates virtual summary buffers (); concatenates the EOC in each virtual buffer (); applies a comparative analysis filter () to remove redundant sub-elements extracts context-preserving EOC, determined based upon a respective degree of corroboration of the context preserving EOC, from each respective concatenated EOC. The method synthesizes the content-preserving EOC extracted from each respective concatenated EOC into summary digests; and presents the results as summary digests ().",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07512598",
	"publication_date": "2009-03-31",
	"application_number": "11523104",
	"application_date": "2006-09-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for accessing non-compatible content repositories",
	"summary": "",
	"abstract": "Systems access non-compatible content repositories that are not natively accessible to a content management system. A metadata registry maintains metadata about content stored in both compatible and non-compatible repositories. For content in a non-compatible repository, the metadata indicates a repository interface capable of accessing the non-compatible repository. The content manager communicates with the repository interfaces to access the content in non-compatible repositories. The content manager may receive a request for content in a non-compatible repository, refer to the metadata registry to select a repository interface to employ, transmit a request for the requested content to the selected repository interface, and receive the requested content from the repository interface. A repository interface registry maintains information about available repository interfaces. Entries may be added to either the metadata registry and the repository interface registry, thus allowing the systems to be extended to be able to access additional non-compatible repositories.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07483879",
	"publication_date": "2009-01-27",
	"application_number": "10745474",
	"application_date": "2003-12-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for automatic natural language translation during information transfer",
	"summary": "",
	"abstract": "A process for transferring content from one computer resource to another by enabling automatic cutting-and-pasting in a destination first, source second sequence, a user selecting insertion points in the contents of a destination computer resource, followed by the user selecting information elements in a source computer resource, subsequently automatically intercepting transfer of the selected information elements to the destination, determining which intercepted information elements are expressed in a natural language not matching a user-specified natural language, invoking a rule management user interface to allow the user to define an action to be taken, performing the specified language handling actions on the intercepted information elements, and transferring translated information elements to the destination computer resource.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07475390",
	"publication_date": "2009-01-06",
	"application_number": "10755832",
	"application_date": "2004-01-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for automatically synchronizing security-relevant information between a relational database and a multidimensional database",
	"summary": "",
	"abstract": "A security management system and method for managing access security in an IT-environment comprises a relational database of the ROLAP type and a data warehouse of the MOLAP type. The system shares a subset of common data, wherein database access security for accessing particular database tables is managed by user-related access limitations in a table form. The present system transforms the access-limiting conditions existing at the ROLAP system automatically to a respective filter criterion for the MOLAP system. The access-limiting conditions exiting at the ROLAP system are defined in a table form. The present system and method automatically activates filter criterion whenever an access to the MOLAP system is requested by a user.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07617211",
	"publication_date": "2009-11-10",
	"application_number": "11129261",
	"application_date": "2005-05-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for enhancing keyword relevance by user's interest on the search result documents",
	"summary": "",
	"abstract": "A system and method are provided for enabling a user to search for documents that the user has previously viewed on its local machine. The system includes three main components: the desktop integration module, the index module, and the graphical user interface module. The desktop integration module is an application which monitors documents with which the user interacts for predetermined events, and obtains content data and metadata from the monitored documents. The index module indexes the content data and metadata received from the desktop integration module. The graphical user interface module then permits a user to utilize the desktop integration module and index module by allowing a user to search for a document.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07634461",
	"publication_date": "2009-12-15",
	"application_number": "10910577",
	"application_date": "2004-08-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for estimating the geographical location and proximity of network devices and their directly connected neighbors",
	"summary": "",
	"abstract": "A method for estimating locations of devices in a network, the method including: identifying each of the devices; inputting an approximate location of at least one of the devices; constructing a constrain for each of the devices, the constrain comprising at least one of a type of connectivity of the device and a technology characteristic related to the device; deriving an optimization criterion on a location for each of the devices, the criterion assigning a positive weight to each constrain that is satisfied by at least one of an estimated location and the approximate location and assigning a negative weight to each constrain that is not satisfied by at least one of the estimated location and the approximate location; calculating a best fit location for each of the devices that maximizes the optimization criterion; presenting the best fit location for each of the devices to a user, the user either accepting or rejecting each best fit location, the user providing additional information for constructing each constrain associated with a rejected best fit location; and iterating at least one of the identifying, the inputting, the constructing, the deriving, the calculating, and the presenting using the additional information until the user accepts each best fit location.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07543045",
	"publication_date": "2009-06-02",
	"application_number": "12128209",
	"application_date": "2008-05-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for protocol independent access and invocation of web services",
	"summary": "",
	"abstract": "Middleware application for managing communication between a client and a web service so that changes in the web service information, such as a change in the web service location, are addressed by the middleware application is disclosed. A developer registers web services in a repository. The middleware application generates a web service proxy based on web service information entered in the repository, and generates a new web service proxy when the web service information changes. The developer can then write code for client applications without the need to change code when changes are made in the web service information. Responsive to a client request, the middleware application accesses the repository to match the request with a web service. The middleware application transmits the request through the web service proxy to the web service. The method for using the middleware application comprises entering web service information in a repository, generating a web service proxy for a web service registered in the repository, and storing the web service proxy, so that changes in web service information, such as the web service location, will cause a new web service proxy to be generated.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07509398",
	"publication_date": "2009-03-24",
	"application_number": "10905621",
	"application_date": "2005-01-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing a runtime environment for active web based document resources",
	"summary": "",
	"abstract": "A computer program product provides an active interactive document resource with an active shell surrounding its data. The shell operates in a runtime environment, a nest, and can operate with a helper process for the coordination and distribution of tasks. The active document in conjunction with its shell provides functionality in basic document management features, interactivity features, search, and other miscellaneous features such as imbedding dynamically generated content. Basic document features include automatic update or synchronization of document content, maintaining a list of similar documents, adding related or updated content, automatic update of the document's index, and automatic update and conversion of the underlying document format. Interactivity features include interacting with other documents within the same nest or other nests, interacting with users, and maintaining security.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07634728",
	"publication_date": "2009-12-15",
	"application_number": "10331738",
	"application_date": "2002-12-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for real-time detection of computer system files intrusion",
	"summary": "",
	"abstract": "A method and system for detecting real-time system file intrusions in a user computer that is coupled to an administrator computer and includes an operating system and system files. At a boot time of the user computer, an application program interface (API) of the operating system receives a list of vital system files that consists of at least two directory files. At the boot time, one of more daemons are launched, after which the API detects one or more system calls made to one or more vital system files. The API raises an automatic interrupt u2018Iu2019 command that awakens a daemon from a sleep mode. The awakened daemon catches the interrupt u2018Iu2019 command and sends an alert message to the administrator computer to alert the administrator computer of the detecting of the system call made to the one or more vital system files.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07478250",
	"publication_date": "2009-01-13",
	"application_number": "11850778",
	"application_date": "2007-09-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for reducing memory use associated with the graphical representation of a list control",
	"summary": "",
	"abstract": "A system and method are disclosed whereby a list-based control (e.g., a Listbox or Choice control) in a graphical user interface may share a single copy of a list with the peer component of the control in the application program interface (API) used to display the control. This overcomes a problem in legacy Java applications, based on the abstract windowing toolkit API, wherein the peer component creates a copy of the list when the corresponding list-based control is displayed. In contrast, peer components within the Swing API reference the original version of the list associated with the control, avoiding this redundancy. According to the system and method disclosed herein, an enhanced version of Swing can be used with legacy application programs, allowing them to benefit from this feature of Swing. No modification of the legacy code is necessary. This extension to Swing is referred to herein as AWTSwing.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07562306",
	"publication_date": "2009-07-14",
	"application_number": "09870613",
	"application_date": "2001-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for the managed security control of processes on a computer system",
	"summary": "",
	"abstract": "Managing and controlling the execution of software programs with a computing device to protect the computing device from malicious activities. A protector system implements a two-step process to ensure that software programs do not perform malicious activities which may damage the computing device or other computing resources to which the device is coupled. In the first phase, the protector system determines whether a software program has been previously approved and validates that the software program has not been altered. If the software program is validated during the first phase, this will minimize or eliminate security monitoring operations while the software program is executing during the second phase. If the software program cannot be validated, the protector system enters the second phase and detects and observes executing activities at the kernel level of the operating system so that suspicious actions can be anticipated and addressed before they are able to do harm to the computing device.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07565549",
	"publication_date": "2009-07-21",
	"application_number": "11824986",
	"application_date": "2007-07-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method of automatically maintaining and recycling software components",
	"summary": "",
	"abstract": "In one aspect of the disclosure, a computer program product, system and method for maintaining and recycling software components is disclosed. A first set of usage data for one or more software components is recorded. At least one of the plurality of software components is automatically removed if the first set of usage data for the at least one software component meets usage criteria specified in an expiration policy. Access is then provided to the removed software component through a remote server. A second set of usage data is now recorded for the removed software component. The removed software component is automatically re-instated if the second set of usage data meets usage criteria specified in a re-instatement policy.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07590599",
	"publication_date": "2009-09-15",
	"application_number": "11615894",
	"application_date": "2006-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for prefetching data necessary to execute program from database",
	"summary": "",
	"abstract": "In order to improve the efficiency of execution of a program by prefetching data necessary to execute the program, a system is provided that causes a computer to execute a recursive query prior to a program being subjected to prefetching. This system detects from iterative processing in the program a query to generate a resultant table by selecting a record that satisfies a selection condition from a target table. The system generates an initial query to generate an initial table that includes values of variables that are set prior to starting the iterative processing in the program. Furthermore, the system generates a recursive query to generate the next intermediate table that is referred to in the next and later cycles of the iterative processing, in the recursive query corresponding to each cycle of the iterative processing that is sequentially performed, from an intermediate table that includes resultant tables generated by a target query in the preceding cycles of the iterative processing and the target table. Furthermore, the system generates a final query to generate a final table from the intermediate table sequentially generated by the recursive query.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07493318",
	"publication_date": "2009-02-17",
	"application_number": "11608091",
	"application_date": "2006-12-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, computer-readable storage device, and method for combining the functionality of multiple text controls in a graphical user interface",
	"summary": "",
	"abstract": "A system and method are disclosed whereby two components within the Swing application program interface (API), JTextField and JPasswordField, are used to emulate the behavior of the TextField component in the abstract windowing toolkit (AWT). This allows legacy Java applications, based on the AWT, to be migrated to the platform-independent Swing API, without modification. In the AWT, a single TextField component could be used for ordinary text entry, as well as for password protected text entry. In the latter case, a prescribed echo character would be displayed as text was entered, to avoid displaying privileged information. According to the system and method disclosed herein, a JPasswordField component may be substituted for a JTextField component, or vice-versa, depending on whether an echo character has been specified. This substitution is performed at runtime, using an enhanced version of the Swing API, as disclosed herein. The enhanced version of Swing is referred to herein as AWTSwing.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07571389",
	"publication_date": "2009-08-04",
	"application_number": "09870621",
	"application_date": "2001-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for optimal component composition in a stream processing system",
	"summary": "",
	"abstract": "A system and method are provided for optimizing component composition in a distributed stream-processing environment having a plurality of nodes capable of being associated with one or more of a plurality of stream processing components. The system includes an adaptive composition probing (ACP) module and a hierarchical state manager. The ACP module probes a subset of the plurality of stream processing components to determine the optimal component composition in response to a stream processing request. The hierarchical state manager manages local and global information for use by said ACP module in determining the optimal component composition.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07562355",
	"publication_date": "2009-07-14",
	"application_number": "11068785",
	"application_date": "2005-03-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Techniques for determining parameter variability for interconnects in the presence of manufacturing uncertainty",
	"summary": "",
	"abstract": "Techniques are disclosed for determination of parameter variability for one or more given interconnects of a plurality of interconnects in a simulated semiconductor circuit. The simulated semiconductor circuit is defined at least in part by a plurality of input parameters. From a distribution of first values of a given input parameter, a plurality of the first values are determined to use when calculating a corresponding plurality of second values for each of one or more output parameters. By using at least the determined plurality of first values for the given input parameter and selected values for other input parameters in the plurality of input parameters, the corresponding plurality of second values are calculated for each of the one or more output parameters. The one or more output parameters correspond to the one or more given interconnects. Each of the second values corresponds to one of the determined plurality of first values.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07480605",
	"publication_date": "2009-01-20",
	"application_number": "11037531",
	"application_date": "2005-01-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Tool for displaying JMX monitoring information",
	"summary": "",
	"abstract": "A method, system and computer program product are provided to allow the status of components obtained through JMX queries to be loaded asynchronously in web content such that the status value of each component is displayed as soon as it becomes available, without having to wait for the completion of any other query.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07509413",
	"publication_date": "2009-03-24",
	"application_number": "10721819",
	"application_date": "2003-11-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transferring data and storing metadata across a network",
	"summary": "",
	"abstract": "Data is now able to be transferred back and forth between computer systems which have disparate file systems, e.g., between a computer having a hierarchical file system and a computer having a nonhierarchical file system. The differences, however, are not limited to the file storage system. Data may now be transferred across different platforms, different human and computer languages, different binary codes, etc. From one computer system the associated metadata is stored in a interpretable format on the second computer system so that when data and its associated metadata are transferred, the second computer system can interpret the transferred data. Data transfer can be accomplished in both directions. Thus, a tool writer or a software developer using a integrated development environment, such as Eclipse, on a Linux workstation with its hierarchical file system may download source files and other resources from an iSeries computer server with its OS/400 nonhierarchical file system, modify the resources, and then put them back onto the iSeries machine for use on the iSeries. The metadata of the source file and other resources are stored in a .properties file which, if in XML format, supports the transfer of resources across the Internet.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07617222",
	"publication_date": "2009-11-10",
	"application_number": "10286560",
	"application_date": "2002-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Universal annotation configuration and deployment",
	"summary": "",
	"abstract": "Methods, systems, and articles of manufacture for managing annotations made for a variety of different type data objects manipulated (e.g., created, edited, and viewed) by a variety of different type applications are provided. Some embodiments allow users collaborating on a project to create, view, and edit annotations from within the applications used to manipulate the annotated data objects, which may facilitate and encourage the capturing and sharing of tacit knowledge through annotations. Further, annotations may be stored separate from the application data they describe, decoupling the tacit knowledge captured in the annotations from the applications used to manipulate the annotated data.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07620648",
	"publication_date": "2009-11-17",
	"application_number": "10600317",
	"application_date": "2003-06-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "User defined contextual desktop folders",
	"summary": "",
	"abstract": "Contextual desktop folders are provided in addition to a system desktop folder, thereby customized desktop folders (contextual desktop folders) are provided to a user. Thus, applications that have for example editing dialogs presented via a GUI interface, can have the dialogs customized for a computing environment providing dialog functions associated with predetermined applications. Preferably, a user or application selects files of a contextual desktop to present to the user of the application as u201cdefaultu201d files, folders, shortcuts or applications.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07546546",
	"publication_date": "2009-06-09",
	"application_number": "11210924",
	"application_date": "2005-08-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "User form based automated and guided data collection",
	"summary": "",
	"abstract": "In response to a user request, an annotation form is presented to a user for annotating a target document or image in a database. The annotation form is associated with the target document. A runtime program is associated with the annotation form. The annotation form selected by the user provides prompts for annotation input. The annotation input is saved in an annotation database and the runtime program performs an action on behalf of the user. Preferably the runtime program action comprises analysis of elements of the target document.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07636883",
	"publication_date": "2009-12-22",
	"application_number": "11131535",
	"application_date": "2005-05-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Using an index to access a subject multi-dimensional database",
	"summary": "",
	"abstract": "A technique for accessing a subject multi-dimensional database stored on a data store connected to the computer. An index is created for the subject multi-dimensional database, wherein the index comprises another multi-dimensional database. Then, the subject multi-dimensional database is accessed using the index.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07529727",
	"publication_date": "2009-05-05",
	"application_number": "09747515",
	"application_date": "2000-12-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Using content aggregation to build administration consoles",
	"summary": "",
	"abstract": "Content aggregation is used to build administration consoles. Preferred embodiments enable providing a solution-based approach to information technology (u201cITu201d) administration, whereby content can be flexibly arranged to provide a content view that is adapted for the IT solution deployed in a particular IT environment. In preferred embodiments, portal technology is used for the aggregation framework, and portlets are used for creating content. Alternatively, other approaches such as struts and tiles may be used. Preferred embodiments deploy an administration console as a Web-accessible application, and this console consolidates the administration interfaces for an arbitrary set of management operations, including administration of an arbitrary collection of hardware and/or software resources. Roles/permissions may be used when rendering content for the console, thereby customizing a view to individual end users (or user groups).",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07493563",
	"publication_date": "2009-02-17",
	"application_number": "10795008",
	"application_date": "2004-03-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Using security levels to improve permission checking performance and manageability",
	"summary": "",
	"abstract": "Complexity is reduced and performance is improved when enforcing security restrictions on the execution of program code in a runtime environment. Units of executable code, such as methods or functions, are classified by u201csecurity level.u201d Code units belonging to a u201ctrustedu201d security level may call any other code unit in the runtime environment, but other security levels are restricted in the code units they can call. Code units may also have u201cinstance permissionsu201d to allow them to have permission to call other individually-specified code units that they would normally be precluded from calling, due to their security level. The security level scheme described herein reduces the complexity of establishing permissions with respect to different code units in the runtime environment. This security level scheme also improves runtime performance by making it unnecessary to check individually-defined permissions in many cases.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07475431",
	"publication_date": "2009-01-06",
	"application_number": "10865348",
	"application_date": "2004-06-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Verifying resource functionality before use by a grid job submitted to a grid environment",
	"summary": "",
	"abstract": "When a new resource is allocated to a particular execution environment within a grid environment managed by a grid management system, then a grid verification service automatically selects and runs at least one functionality test on the new resource as controlled by the grid management system. Responsive to a result of the functionality test, the grid verification system verifies whether the result meets an expected result before enabling routing of the grid job to the new resource, such that the functionality of the new resource is automatically verified before access to the new resource is allowed to maintain quality of service in processing grid jobs.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07502850",
	"publication_date": "2009-03-10",
	"application_number": "11031427",
	"application_date": "2005-01-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web-based instruction",
	"summary": "",
	"abstract": "A method performed in a web-based environment on a computer system teaches a user to implement an application. The method includes providing predetermined applications and presenting an annotation page that includes one or more annotations descriptive of a predetermined application. Each annotation includes keyword links, annotation links, and detail of implementation of the application. The method includes permitting the user to select a link in an annotation. If the user selects a keyword link, reference documentation associated with that keyword is presented. If the user selects an annotation link, another annotation descriptive of another source file of a predetermined application is presented.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07490292",
	"publication_date": "2009-02-10",
	"application_number": "09728073",
	"application_date": "2000-12-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "XML based scripting language",
	"summary": "",
	"abstract": "Various embodiments of a method, apparatus, and article of manufacture for processing an extensible markup language (XML) script using an XML based scripting language are provided. The XML script is parsed. The XML script comprises element nodes. Each element node comprises a component name. A first element node comprises a first component name referencing a first user-defined component. An argument is passed to the first user-defined component. The argument is evaluated when an element node associated with the first user-defined component comprises an evaluate-component name that explicitly specifies that the argument be evaluated.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07539982",
	"publication_date": "2009-05-26",
	"application_number": "10842720",
	"application_date": "2004-05-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automated data retrieval",
	"summary": "",
	"abstract": "Information missing from a database record is automatically identified and retrieved. In an embodiment, after the record is initially populated, a status such as complete, incomplete, missing, or verify is assigned to each field in the record. A request for information associated with the status is automatically generated, for instance asking a client to provide missing information or verify existing information. The request is transmitted to the client and solicits the client's response in any of a number of ways, for instance by email, phone, fax, or mail. The information is used to automatically update the record.",
	"url": null,
	"owner": "Intuit Inc.",
	"publication_number": "07636742",
	"publication_date": "2009-12-22",
	"application_number": "10982661",
	"application_date": "2004-11-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for remotely managing business and employee administration functions",
	"summary": "",
	"abstract": "Human resource and employee benefit products for businesses, implemented on one or more computing devices connected to the Internet, are managed and administered. The combination of human resource and employee benefit products required by the businesses are determined, and are classified according to criteria including a number of employees, type of work performed, and similarity of needs of these businesses in the human resource and employee benefit management areas. A local set of the human resource and the employee benefit products is provided, as is a third party provider set of products located on the third party provider's computers. Both sets of products are then organized into integrated benefits packages, each of which packages may be modified by the customer by adding and subtracting products. The price of each integrated and modified benefits package is determined, which price will be binding on the third party provider for a defined period of time.",
	"url": null,
	"owner": "Intuit Inc.",
	"publication_number": "07636665",
	"publication_date": "2009-12-22",
	"application_number": "09755934",
	"application_date": "2001-01-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data access and retrieval mechanism",
	"summary": "",
	"abstract": "Methods and apparatus are provided for preserving electronic resources identified as search results in a system location, such as a system folder. In one embodiment, a computer-implemented method comprises executing a search query on a data collection to produce at least one search result, the search query specifying at least one criterion, each of the at least one search results representing a resource which satisfies the at least one criterion; providing an input mechanism by means of which a user may select at least one resource for preservation; and executing, in response to the user's selection, a command to preserve the selected at least one resource in a system location.",
	"url": null,
	"owner": "Iron Mountain Incorporated",
	"publication_number": "07606789",
	"publication_date": "2009-10-20",
	"application_number": "10713416",
	"application_date": "2003-11-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data backup",
	"summary": "",
	"abstract": "A system for backing up desired data includes a communication link configured to transfer information between the system and a backup storage for storing backed up data, and a processor coupled to the communication link and configured to: determine associated substantive data of the desired data, compare the associated substantive data of the desired data with stored data, and transfer the associated substantive data over the communication link for storage based on the comparison of the associated substantive data with the stored data.",
	"url": null,
	"owner": "Iron Mountain Incorporated",
	"publication_number": "07509356",
	"publication_date": "2009-03-24",
	"application_number": "10235304",
	"application_date": "2002-09-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data communication protocol in an automatic meter reading system",
	"summary": "",
	"abstract": "An automatic meter reading (AMR) system includes a fixed or mobile reader and an endpoint interfaced to a utility meter. The fixed or mobile reader is capable of communicating with the endpoint via RF communication. The fixed or mobile reader sends a message to the endpoint that includes a response mode direction which directs the endpoint to respond to the reader via either a mobile network mode or a fixed network mode. The AMR system allows implementation of, and migration between, one-way, one-and-a-half-way, and two-way communications system modes without requiring reprogramming, reconfiguring the metering endpoints or going through a reconfiguration cycle before effecting a communication",
	"url": null,
	"owner": "Itron, Inc.",
	"publication_number": "07479895",
	"publication_date": "2009-01-20",
	"application_number": "11347026",
	"application_date": "2006-02-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for concept based analysis of unstructured data",
	"summary": "",
	"abstract": "A computer implemented system and method automates analysis and mining of concepts from unstructured data. At least one concept within at least one object is analyzed. Analysis involves: selecting an object for inclusion in an initial set of objects to be analyzed; using an algorithm to extract a concept from the initial set of objects to create an initial set of concepts; refining the concept based upon relationships to other concepts; and performing multi-dimensional analysis on the concept in the initial set of objects to analyze the concept.",
	"url": null,
	"owner": "Ixreveal, Inc.",
	"publication_number": "07627588",
	"publication_date": "2009-12-01",
	"application_number": "10677492",
	"application_date": "2003-10-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Building automation system devices",
	"summary": "",
	"abstract": "A building automation control system for use in a building having an IT network is disclosed. The building automation control system includes at least one BAS controller connected to the IT network and at least one BAS device located within the building and connected to the at least one BAS controller through the IT network. Further the system may be configured to use standards-based IT technologies over the IT network to manage the at least one BAS device. The standards-based IT technologies may include DHCP to obtain IP addresses and network parameters of the BAS devices, DNS to provide a mechanism for associating the BAS devices with human-friendly names, a distributed mechanism for storing the names, and a method for locating the BAS devices by resolving names and IP addresses, SNTP to synchronize time on the BAS devices, SNMP to monitor the BAS devices and report alarms, SMTP for delivery of e-mail alarms, web-services to provide Internet-friendly communications, and standards-based IT security mechanisms to protect software of the BAS devices.",
	"url": null,
	"owner": "Johnson Controls Technology Company",
	"publication_number": "07634555",
	"publication_date": "2009-12-15",
	"application_number": "10439394",
	"application_date": "2003-05-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for archive integrity management and related methods",
	"summary": "",
	"abstract": "A system for archive integrity management and related methods are disclosed. The invention includes one or more integrity manager applications, each of which monitor the integrity of an aspect of a data archive. Some integrity manager applications monitor the integrity of processes executed by the archive system, and other integrity manager applications monitor the integrity of communication paths in the archive system. A file input integrity manager application monitors the integrity of a plurality of processes associated with storing a new data file in the archive. A business content integrity manager application determines what documents are required for a transaction and monitors whether all of the required documents have been received by the archive system. Further, an event integrity manager application executes predetermined events triggered by characteristics of documents stored in the archive system and ensures that all events have been properly executed.",
	"url": null,
	"owner": "JP Morgan Chase Bank",
	"publication_number": "07617261",
	"publication_date": "2009-11-10",
	"application_number": "11417582",
	"application_date": "2006-05-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for providing secure access to private networks with client redirection",
	"summary": "",
	"abstract": "Improved approaches for providing secure access to resources maintained on private networks are disclosed. The secure access can be provided through a public network using client software of client-server software and/or with file system software. Multiple remote users are able to gain restricted and controlled access to at least portions of a private network through a common access point, such as an intermediate server of the remote network.",
	"url": null,
	"owner": "Juniper Networks, Inc.",
	"publication_number": "07631084",
	"publication_date": "2009-12-08",
	"application_number": "10410619",
	"application_date": "2003-04-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Resource scheduler within a network device",
	"summary": "",
	"abstract": "A network device is described in which a dedicated resource scheduler monitors memory consumption to provide for improved processing of communication sessions. The scheduler maintains a dependency list of communication sessions, and reserves memory for communication sessions as requests for memory are received. The amount of memory reserved is determined based on the amount of memory currently reserved for the communication sessions in the dependency list. The network device may control ongoing communication sessions by way of window manipulation. Communication sessions are processed in a first mode when available memory has not reached a predetermined amount, while communication sessions are processed in a second mode when available memory reaches a predetermined amount.",
	"url": null,
	"owner": "Juniper Networks, Inc.",
	"publication_number": "07546371",
	"publication_date": "2009-06-09",
	"application_number": "11621368",
	"application_date": "2007-01-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Incremental presentation of search results from multiple suppliers",
	"summary": "",
	"abstract": "A method and apparatus are provided for a dynamic information connection engine. User actions are detected on at least one client system. In response, a determination is made whether the user is searching for supported information. When the user is searching for supported information, information is extracted electronically from third party web sites, direct supplier connections, and intermediate databases. Potential information suppliers are automatically selected in response to the detected user search. Queries are formulated from the user search and transferred to each selected supplier over a network coupling. The queries include a request for information. Responses are received from the suppliers, and the responses are used to generate a result list for the user. The result list includes information and query status information. Further, an electronic link may be provided to a web site of each supplier from which the information was derived.",
	"url": null,
	"owner": "Kayak Software Corporation",
	"publication_number": "07483883",
	"publication_date": "2009-01-27",
	"application_number": "11120484",
	"application_date": "2005-05-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secondary search for a travel related item based on the detection of a purchase offer from a prior travel related search",
	"summary": "",
	"abstract": "A method and apparatus are provided for a dynamic information connection engine. User actions are detected on at least one client system. In response, a determination is made whether the user is searching for supported information. When the user is searching for supported information, information is extracted electronically from third party web sites, direct supplier connections, and intermediate databases. Potential information suppliers are automatically selected in response to the detected user search. Queries are formulated from the user search and transferred to each selected supplier over a network coupling. The queries include a request for information. Responses are received from the suppliers, and the responses are used to generate a result list for the user. The result list includes information and query status information. Further, an electronic link may be provided to a web site of each supplier from which the information was derived.",
	"url": null,
	"owner": "Kayak Software Corporation",
	"publication_number": "07627606",
	"publication_date": "2009-12-01",
	"application_number": "11201376",
	"application_date": "2005-08-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Book metaphor for modifying and enforcing sequential navigation of documents",
	"summary": "",
	"abstract": "A method for organizing and consulting electronic data in a media library, the electronic data originating from a plurality of sources and being supplied in various forms. The method provides a universal link between these various forms of electronic data in such a way that the electronic data can be consulted, stored and reused on common media within the media library. The method is particularly adaptable for off-line consultation of documents collected on the Web or from any document resource.",
	"url": null,
	"owner": "Keeboo SARL",
	"publication_number": "07574649",
	"publication_date": "2009-08-11",
	"application_number": "09132327",
	"application_date": "1998-08-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Testing tool comprising an automated multidimensional traceability matrix for implementing and validating complex software systems",
	"summary": "",
	"abstract": "The present invention relates to a testing tool for testing of complex software systems having a plurality of interrelated system components and a suite of test scenarios for testing the performance of the plurality of interrelated system components. The testing tool includes an Automated Multidimensional Traceability Matrix system for determining linkages between interrelated system components, a means for identifying a change in one or more of the interrelated system components, a means for applying the Automated Multidimensional Traceability Matrix, a means for executing all of or a subset of the test scenarios associated with the interrelated system components that may be affected by the change and a means for evaluating the results of the executed test scenarios.",
	"url": null,
	"owner": "Kimberly-Clark Worldwide, Inc.",
	"publication_number": "07490319",
	"publication_date": "2009-02-10",
	"application_number": "10980920",
	"application_date": "2004-11-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Knowledge filter",
	"summary": "",
	"abstract": "A method and system for sharing knowledge is disclosed. The method and system comprises receiving information input into a database and organizing items of information in the database. The method and system further includes collecting ratings and comments associated with each item of information and allowing users to access and sort items of information according to selected rating criteria in order to find the most reliable and/or valuable information from the database. In a second aspect, the present invention including an interface for providing information concerning a subject is disclosed. The interface comprises a first area that shows the subject and contributor name; and a second area that shows the content of the information item. The interface includes a third area that shows rating related to the subject; and a fourth area that allows users to submit ratings for the information item. Accordingly, a knowledge sharing system and interface are provided which allows every member of a knowledge sharing group to benefit from aggregate knowledge, experience and opinions of other members of the group. The system and method allows individual members to easily locate the information from a collectively generated knowledge base that is most consistent with that individual's personal measures of value in the information.",
	"url": null,
	"owner": "KL Internet Applications, LLC",
	"publication_number": "07590636",
	"publication_date": "2009-09-15",
	"application_number": "11348037",
	"application_date": "2006-02-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Previewing documents on a computer system",
	"summary": "",
	"abstract": "A method, system and apparatus for previewing documents on a computer system, the method comprising the steps of:u2014displaying a main document () which contains a hyperlink (); andu2014in response to an indication () of the hyperlink being received by the computer system, displaying a preview document () which document being that referred to by the hyperlink whilst retaining the display of the main document, so that the document referred to by the hyperlink may be previewed.",
	"url": null,
	"owner": "Koninklijke Philips Electronics N.V.",
	"publication_number": "07490288",
	"publication_date": "2009-02-10",
	"application_number": "10507341",
	"application_date": "2003-02-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Smart digital modules and smart digital wall surfaces combining the same, and context aware interactive multimedia system using the same and operation method thereof",
	"summary": "",
	"abstract": "Disclosed are smart digital modules, a smart digital wall combining the smart digital modules, a context-aware interactive multimedia system, and an operating method thereof. The smart digital wall includes local coordinators for controlling the smart digital modules, and a coordination process for controlling the smart digital modules. The smart digital modules sense ambient states and changes of states and independently display corresponding actuations. The coordination process is connected to the smart digital modules via radio communication, and combines smart digital modules to control collective operations of the smart digital modules.",
	"url": null,
	"owner": "Korea Advanced Institute of Science and Technology (KAIST)",
	"publication_number": "07636365",
	"publication_date": "2009-12-22",
	"application_number": "11054109",
	"application_date": "2005-02-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for analyzing and imaging three-dimensional volume data sets",
	"summary": "",
	"abstract": "A system and method is provided for analyzing and imaging three-dimensional volume data sets. In one embodiment of the invention, a ribbon section is produced which may include a plurality of planes projected from a polyline. The polyline may include one or more line segments preferably formed within a plane. The projected planes intersect the three-dimensional volume data set and the data located at the intersection may be selectively viewed. The polyline may be edited or varied by editing or varying the control points which define the polyline. In another embodiment of the present invention, a method is provided for quickly tracking a physical phenomena represented within the three-dimensional volume data set. A plurality of planes may be successively displayed in the three-dimensional volume data set from which points are digitized related to the structure of interest to create a spline curve on each plane. The area between the spline curves is interpolated to produce a surface representative of the structure of interest, which may for example be a fault plane described by the three-dimensional volume data set. In this manner, the user can more easily and effectively visualize and interpret the features and physical parameters that are inherent in the three-dimensional volume data set.",
	"url": null,
	"owner": "Landmark Graphics Corporation",
	"publication_number": "07502026",
	"publication_date": "2009-03-10",
	"application_number": "11485104",
	"application_date": "2006-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for approximating an editable surface",
	"summary": "",
	"abstract": "A system and methods are disclosed for automatically approximating an editable surface from a 3D data set or a 3D point set, which may be imaged in the form of a NURBS surface.",
	"url": null,
	"owner": "Landmark Graphics Corporation, a Halliburton company",
	"publication_number": "07576743",
	"publication_date": "2009-08-18",
	"application_number": "12017959",
	"application_date": "2008-01-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for real-time co-rendering of multiple attributes",
	"summary": "",
	"abstract": "Systems and methods for enhancing the combined image of multiple attributes without comprising the image of either attribute. The combined image of the multiple attributes is enhanced for analyzing a predetermined property revealed by the attributes. The combined image can be interactively manipulated to display each attribute relative to an imaginary light source or highlighted using a specular component. The systems and methods are best described as particularly useful for analytical, diagnostic and interpretive purposes.",
	"url": null,
	"owner": "Landmark Graphics Corporation, a Halliburton Company",
	"publication_number": "07616213",
	"publication_date": "2009-11-10",
	"application_number": "11904141",
	"application_date": "2007-09-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Real-time geo-registration of imagery using COTS graphics processors",
	"summary": "",
	"abstract": "A method of performing real-time geo-registration of high-resolution digital imagery using existing graphics processing units (GPUs) already found in current personal computers, rather than the main central processing unit (CPU). Digital image data captured by a camera (along with inertial navigation system (INS) data associated with the image data) is transferred to and processed by the GPU to perform the calculations involved in transforming the captured image into a geo-rectified, nadir-looking image. By using the GPU, the order-of-magnitude increase in throughput over conventional software techniques makes real-time geo-registration possible without the significant cost of custom hardware solutions.",
	"url": null,
	"owner": "Lawrence Livermore National Security, LLC",
	"publication_number": "07555143",
	"publication_date": "2009-06-30",
	"application_number": "11350672",
	"application_date": "2006-02-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for marking code for data versioning",
	"summary": "",
	"abstract": "A method, apparatus, and computer instructions for marking data versioning for code. Responsive to receiving an application programming interface call, a first marking statement in the code and a second marking statement are inserted in the code. A portion of code between the first marking statement and the second marking statement forms a marked section of code. A change made in data in an object caused by execution of the marked portion of code is detected. The detected change is tracked in manner such that the object may be restored to a prior state.",
	"url": null,
	"owner": "Lenovo (Singapore) Pte Ltd.",
	"publication_number": "07565645",
	"publication_date": "2009-07-21",
	"application_number": "11037322",
	"application_date": "2005-01-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus, system, and method for protecting a motion-sensitive device",
	"summary": "",
	"abstract": "An apparatus, system, and method are disclosed for protecting a motion-sensitive device. The apparatus includes an identification module, a determination module, and a scheduler. The identification module identifies a use-intensive task involving the motion-sensitive device. The determination module determines a motion forecast that predicts a substantially motionless time interval. The scheduler schedules the use-intensive task such that the use-intensive task executes within the substantially motionless time interval. In this manner, a historical movement pattern is used to schedule future tasks such that the coincidence of task use of the motion-sensitive device and movement of the motion-sensitive device is minimized.",
	"url": null,
	"owner": "Lenovo Singapore Pte Ltd",
	"publication_number": "07600054",
	"publication_date": "2009-10-06",
	"application_number": "11273240",
	"application_date": "2005-11-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Backing up at least one encrypted computer file",
	"summary": "",
	"abstract": "The present invention provides a method and system of backing up at least one encrypted computer file encrypted by an encryption filter driver running on an operating system of a computer system and restoring at least one encrypted computer file encrypted by an encryption filter driver running on an operating system of a computer system. In an exemplary embodiment, the method and system of backing up at least one encrypted computer file encrypted by an encryption filter driver running on an operating system of a computer system include (1) receiving the filename of the encrypted computer file, (2) starting a backup process for the encrypted computer file, (3) disabling the encryption filter driver for the backup process, (4) backing up the encrypted computer file via the backup process, and (5) reenabling the encryption filter driver for the backup process.",
	"url": null,
	"owner": "Lenovo Singapore Pte. Ltd",
	"publication_number": "07600133",
	"publication_date": "2009-10-06",
	"application_number": "10906568",
	"application_date": "2005-02-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Voice over data telecommunications network architecture",
	"summary": "",
	"abstract": "The present invention describes a system and method for communicating voice and data over a packet-switched network that is adapted to coexist and communicate with a legacy PSTN. The system includes soft switch sites, gateway sites, a data network, a provisioning component, a network event component and a network management component. The soft switch sites manage the gateway sites to request the set-up and tear-down of calls. The gateway sites originate and terminate calls between calling parties and called parties through the data network. The provisioning and network event component collects call events recorded at the soft switch sites. The network management component includes a network operations center (NOC) for centralized network management.",
	"url": null,
	"owner": "Level 3 Communications, LLC",
	"publication_number": "07564840",
	"publication_date": "2009-07-21",
	"application_number": "10366061",
	"application_date": "2003-02-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software framework for web-based applications",
	"summary": "",
	"abstract": "A Web application framework for creating Web-based applications is described. The framework includes an abstract command tag that predefines at least some generic Web application activities. When using the framework, one specifies at least one custom action that is desired to be performed by a Web application under development. In one embodiment, this includes creating a customized command tag that is capable of being embedded within a Web page. The customized command tag includes the ability to conditionally execute the specified custom action based on run-time conditions. The customized command tag is embedded in a Web page of the Web application.",
	"url": null,
	"owner": "Lightsurf Technology, Inc.",
	"publication_number": "07546576",
	"publication_date": "2009-06-09",
	"application_number": "09882525",
	"application_date": "2001-06-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic communication control",
	"summary": "",
	"abstract": "An electronic communication control device suitable for embedding into a network interface card or a line card of a switch or router. The electronic communication control device is capable of communications in multiple protocols. The processing architecture of the electronic communication control device may be adapted for any communications protocol and may be well suited for Internet protocol. The electronic communication control device may perform protocol translation, for example, between IPv4 and IPv6. An exemplary embodiment of the electronic communication control device includes a parallel processing chipset operating on multiple busses with embedded software. The electronic communication control device provides a hardware architecture upon which embedded software may operate to provide services, such as, for example, system control, packet analysis, packet filtering, translation services, switching, routing and/or multiplexing control.",
	"url": null,
	"owner": "Lockheed Martin Corporation",
	"publication_number": "07599289",
	"publication_date": "2009-10-06",
	"application_number": "11128168",
	"application_date": "2005-05-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for creating a large-scale storage array system out of multiple mid-range storage arrays",
	"summary": "",
	"abstract": "Disclosed is a method for creating a large-scale storage array by combining multiple mid-range storage arrays via a host based aggregation engine software application. Each mid-range storage array, also call a storage building block, consists of one or more RAID volumes. Each mid-range storage array has equivalent configuration and property settings including number of drives, RAID level, volume segment sizes, and volume cache settings, but not including the volume label. The complex combination of mid-range storage arrays appears as a single storage system to a data management application of a host computer system. Once the mid-range storage arrays are aggregated into a large-scale storage array, or storage complex array, common features may be modified as a collection of items so that a common modification need only be entered one time for all items in the collection. The storage complex array also permits a management application to interact with the storage complex array as a virtual volume without the need to handle the complexities of the individual mid-range storage arrays. A separate graphical user interface application permits a system administrator to configure the aggregation engine without putting the burden of graphics and user interaction into the operation of the aggregation engine. The host based aggregation engine provides cost savings by creating a high end storage system without the need for costly specialized hardware. The aggregation engine is also scalable, permitting the addition or subtraction of mid-range storage arrays.",
	"url": null,
	"owner": "LSI Corporation",
	"publication_number": "07568069",
	"publication_date": "2009-07-28",
	"application_number": "11192636",
	"application_date": "2005-07-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and a software product for adapting a .Net framework compliant reflection mechanism to a java environment",
	"summary": "",
	"abstract": "A method for adapting a .Net framework compliant reflection mechanism to a Javau2122 environment, wherein the reflection mechanism allows a user to discover class information and invoke data members solely at runtime. The method includes gathering reflection related metadata from a .Net assembly class of a respective .Net class that comprises the metadata. The method also includes the steps of generating an attributes class comprising at least the reflection related metadata and a plurality of conversion methods and integrating the attributes class in a Javau2122 class file of the respective .Net class, such that the reflection mechanism is capable of adapting the reflection mechanism as defined in the .Net framework to the Javau2122 environment. Also disclosed is a plurality of conversion methods. The attributes class is included in a Javau2122 class file rendered by a compiler capable of compiling a .Net class to a Javau2122 compliant programming code.",
	"url": null,
	"owner": "Mainsoft R&D Ltd",
	"publication_number": "07493605",
	"publication_date": "2009-02-17",
	"application_number": "11023607",
	"application_date": "2004-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Debugger and method for debugging computer programs across multiple programming languages",
	"summary": "",
	"abstract": "A debugger and method for debugging computer programs across multiple programming languages are provided. The debugging is performed at a source level of a computer program written in any programming language supported by the .Netu00ae platform, while the program is executed over a Java runtime environment. The debugger disclosed provides a call stack display and an expression evaluator. Furthermore, the debugger allows software developers to step through Java source code and follow the execution flow of the Java program. One exemplary embodiment of the disclosed debugger is an extension of the Microsoftu00ae Visual Studio .Netu00ae.",
	"url": null,
	"owner": "Mainsoft R&D Ltd.",
	"publication_number": "07478366",
	"publication_date": "2009-01-13",
	"application_number": "10947431",
	"application_date": "2004-09-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic inquiry lists for financial products",
	"summary": "",
	"abstract": "Inquiry lists for financial interests are submitted, negotiated and traded between investors and dealers over a network or networks. An investor interface for display is provided to an investor. A dealer interface for display is provided to a plurality of dealers. The investor can create an inquiry list via the investor interface containing a plurality of inquiries for a corresponding plurality of different financial interests and can send a message containing the inquiry list to selected dealer(s) where an established relationship exists between said investor and dealers. The dealer(s) can provide respective responses to the message, the response containing respective offers/bids on the plurality of inquiries contained in the inquiry list via the dealer interface. The respective offers/bids are displayed in the inquiry list on the investor interface. The investor may then select one of the respective dealer offers/bids for each inquiry list line item via the investor interface.",
	"url": null,
	"owner": "Marketaxess Holdings Inc.",
	"publication_number": "07499883",
	"publication_date": "2009-03-03",
	"application_number": "10672379",
	"application_date": "2003-09-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Domain name ownership validation",
	"summary": "",
	"abstract": "Embodiments of the invention provide systems and methods for validating ownership of a domain name. According to one embodiment, a validating ownership of a domain name can comprise retrieving one or more domain name ownership records. For example, the one or more domain name ownership records comprise Who Is records. Validity of the one or more domain name records can be confirmed with a designated domain manager. According to one embodiment, confirming validity of the one or more domain name records with the designated domain manager can comprise authenticating the designated domain manager based on a certificate provided by the designated domain manager.",
	"url": null,
	"owner": "Markmonitor Inc.",
	"publication_number": "07493403",
	"publication_date": "2009-02-17",
	"application_number": "11685311",
	"application_date": "2007-03-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Host-based printed driver",
	"summary": "",
	"abstract": "A system includes a controller operable to receive a first data set comprising data in a first format type, the first-format-type data representing an image. The system further includes a circuit coupled to the controller, the circuit operable to produce a second data set in a second format type, the second data set based on the first-format-type data, the second data set representing the image.",
	"url": null,
	"owner": "Marvell International Technology Ltd.",
	"publication_number": "07532345",
	"publication_date": "2009-05-12",
	"application_number": "10840696",
	"application_date": "2004-05-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for object identification and sensing in a bounded interaction space",
	"summary": "",
	"abstract": "An interactive media table that includes a tabletop that supports of plurality of movable objects each of which is identified by a unique identification code and each of which can be moved from place to place on said tabletop surface by one or more media table users. A display unit produces a visual image on the surface of the tabletop surface and a position tracking system determines the current positions of each of said movable objects by transmitting timed acoustic signals to each movable object, sensing the timing of arrival of these signals using an acoustic pickup on each object, and estimating the location of the object by triangulation. An infrared communications network exchanges timing information, commands and data between the objects and a controller which provides an API to a personal computer which executes an application program that controls the display.",
	"url": null,
	"owner": "Massachusetts Institute of Technology",
	"publication_number": "07474983",
	"publication_date": "2009-01-06",
	"application_number": "11314832",
	"application_date": "2005-12-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for parallel execution of a process",
	"summary": "",
	"abstract": "One embodiment of the invention is directed to executing a computer program that manipulates data stored in a distributed manner on a parallel server. At least one portion of the computer program treats the data from a global perspective, wherein commands to the parallel server are not specific to the manner in which the data is distributed on the parallel server. In addition, at least one portion of the computer program treats the data from a local perspective, wherein commands to the parallel server are specific to the manner in which the data is distributed on the parallel server.",
	"url": null,
	"owner": "Massachusetts Institute of Technology",
	"publication_number": "07542981",
	"publication_date": "2009-06-02",
	"application_number": "11262475",
	"application_date": "2005-10-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Piracy prevention using unique module translation",
	"summary": "",
	"abstract": "A method for providing solidified software in a computing environment includes creating a new reference for a function in a function table; copying an address of the function and associating the address with the new reference; replacing the address associated with an old reference of the function with a dummy address; and substituting each old reference in normal code with the new reference, where injected code is not able to execute in the computing environment. The function table entries can be further randomized by reordering the entries, introducing intermediate mappings, or providing non-operative entries. Alternatively, all or part of the code of the function can be copied and moved to a different storage location and associated with the new reference. The copied code can be further randomized by the insertion of dummy code, utilizing reverse peephole techniques, varying the size of the copied portion, or interleaving non-operative code.",
	"url": null,
	"owner": "McAfee, Inc.",
	"publication_number": "07603552",
	"publication_date": "2009-10-13",
	"application_number": "11122872",
	"application_date": "2005-05-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program product for performing one or more maintenance tasks on a remotely located computer connected to a server computer via a data network",
	"summary": "",
	"abstract": "A method and computer executable program code are disclosed for performing one or more maintenance tasks on a remotely located computer connected to a server computer via a data network.",
	"url": null,
	"owner": "McAfee, Inc.",
	"publication_number": "07480941",
	"publication_date": "2009-01-20",
	"application_number": "11316562",
	"application_date": "2005-12-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed electronic design automation environment",
	"summary": "",
	"abstract": "PCB Logical design data is stored in a database according to a connectivity-based data model. Circuit functional blocks, inputs and outputs of functional blocks, and signals are stored as separate data structures. Those structures may be edited by users at separate clients during concurrent editing sessions. Profile data for each of multiple users specifies logical design data elements accessible by, and PCB design software to be provided to, that user. The PCB design software may be plug-ins executable within a web browser at a client, and the client computers may communicate with the database via the Internet. Layout data may also be stored in the database, with elements of the layout data mapped to elements of the logical design data. Constraint data may also be stored in the database, with elements of the constraint data being mapped to elements of the layout data.",
	"url": null,
	"owner": "Mentor Graphics Corporation",
	"publication_number": "07546571",
	"publication_date": "2009-06-09",
	"application_number": "10935749",
	"application_date": "2004-09-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Power/ground wire routing correction and optimization",
	"summary": "",
	"abstract": "A PG wire routing optimization tool for more efficiently routing PG wires in a layout design of an integrated circuit. The PG wire routing optimization tool analyzes a routing of the wires of a power and ground network for unacceptable IR-drops or electromigration problems. If one or more problems are discovered, the PG wire routing optimization tool determines design constraints for the wires that will correct the identified problems. It then initiates a floor planning tool to implement these corrective design constraints in the floor plan design. The PG wire routing optimization tool may alternately or additionally determine design constraints that will minimize the area of the wiring but will avoid creating new IR-drop or electromigration problems. It will then initiate a floor planning tool to implement these optimizing design constraints in the floor plan design.",
	"url": null,
	"owner": "Mentor Graphics Corporation",
	"publication_number": "07603641",
	"publication_date": "2009-10-13",
	"application_number": "11236222",
	"application_date": "2005-09-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for digital image filtering with discrete filter kernels using graphics hardware",
	"summary": "",
	"abstract": "The invention provides, in some aspects, methods and apparatus for signal and/or image processing which perform convolution-based filtering utilizing a graphics processing unit (GPU, also called u201cgraphics cardu201d) to compute multiple output pixels at once. This has the advantage of saving memory bandwidth, while leveraging the GPUs vector multiplication and dot product units during the calculation. Related aspects of the invention provide such methods and apparatus in which multiple output pixels are computed simultaneously by using render targets with more than one channel, e.g., an RGBA render target, or multiple render targets, or a combination thereof. By way of non-limiting example, methods and apparatus according to the invention implement convolution on a GPU by executing the steps of defining input image I(x,y) as input texture of size Nu00d7N; defining an RGBA render target (output) of size N/4u00d7N; and, for each RGBA output pixel aggregating o(x,y) by (i) reading all input pixels I(x*4+i,y), with i=u22124,0,4, and computing o(x,y) for the all four components of the output tuple.",
	"url": null,
	"owner": "Mercury Computer Systems, Inc.",
	"publication_number": "07623732",
	"publication_date": "2009-11-24",
	"application_number": "11411999",
	"application_date": "2006-04-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Knowledge web",
	"summary": "",
	"abstract": "A system and method for organizing knowledge in such a way that humans can find knowledge, learn from it, and add to it as needed is disclosed. The exemplary system has four components: a knowledge base, a learning model and an associated tutor, a set of user tools, and a backend system. The invention also preferably comprises a set of application programming interfaces (APIs) that allow these components to work together, so that other people can create their own versions of each of the components. In the knowledge web a community of people with knowledge to share put knowledge in the database using the user tools. The knowledge may be in the form of documents or other media, or it may be a descriptor of a book or other physical source. Each piece of knowledge is associated with various types of meta-knowledge about what the knowledge is for, what form it is in, and so on. The information in the knowledge base can be created specifically for the knowledge base, but it can also consist of information converted from other sources, such as scientific documents, books, journals, Web pages, film, video, audio files, and course notes. The initial content of the knowledge web comprises existing curriculum materials, books and journals, and those explanatory pages that are already on the World Wide Web. These existing materials already contain most of the information, examples, problems, illustrations, even lesson plans, that the knowledge web needs. The knowledge base thus represents the core content (online documents or references to online or offline documents); the meta-knowledge that was created at the time of entry; and a number of user annotations and document metadata that accumulate over time about the usefulness of the knowledge, additional user opinions, certifications of its veracity and usefulness, commentary, and connections between various units of knowledge.",
	"url": null,
	"owner": "Metaweb Technologies, Inc.",
	"publication_number": "07502770",
	"publication_date": "2009-03-10",
	"application_number": "10474155",
	"application_date": "2002-04-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Planar laser illumination and imaging (PLIIM) systems with integrated despeckling mechanisms provided therein",
	"summary": "",
	"abstract": "A hand-supportable planar laser illumination and imaging (PLIIM) based device having hand-supportable housing with a light transmission aperture. A linear image formation and detection (IFD) module is mounted within the housing, and has a linear array of image detection elements and also image formation optics with a field of view (FOV). When an object is presented within the FOV, the FOV focuses a linear image of the object onto the linear array. At least one planar laser illumination module (PLIM) is mounted on the support platform, with the linear IFD module, and produces a planar laser illumination beam (PLIB) spatially aligned with respect to the FOV and arranged in a coplanar relationship with at least a portion of the FOV. A laser beam despeckling mechanism is integrated in the device, for reducing speckle-pattern noise observed the linear digital images formed and detected at the linear array of image detection elements.",
	"url": null,
	"owner": "Metrologic Instruments, Inc.",
	"publication_number": "07527200",
	"publication_date": "2009-05-05",
	"application_number": "11471470",
	"application_date": "2006-06-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Image acquisition system",
	"summary": "",
	"abstract": "An image acquisition system for machine vision systems decouples image acquisition from the transmission of the image to a host processor by using a programmable imager controller to selectively disable and enable the transmission of data to the host and by using a system of buffers to temporarily store image data pending allocation of memory. This enables the image acquisition system to acquire images asynchronously and to change the exposure parameters on a frame-by-frame basis without the latency associated with the allocation of memory for storage of the acquired image. The system architecture of the invention further permits interruption and resumption of image acquisition with minimal likelihood of missing data. Data throughput is further enhanced by transmitting to the host only that data corresponding to the region of interest within the image and discarding the data from outside of the region of interest at the camera stage.",
	"url": null,
	"owner": "Metrovideo, Inc.",
	"publication_number": "07587261",
	"publication_date": "2009-09-08",
	"application_number": "10355717",
	"application_date": "2003-01-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Quantitative model for formant dynamics and contextually assimilated reduction in fluent speech",
	"summary": "",
	"abstract": "A method of identifying a sequence of formant trajectory values is provided in which a sequence of target values are identified for a formant as step functions. The target values and the duration for each segment target for the formant are applied to a finite impulse response filter to form a sequence of formant trajectory values. The parameters of this filter, as well as the duration of the targets for each phone, can be modified to produce many kinds of target undershooting effects in a contextually assimilated manner. The procedure for producing the formant trajectory values does not require any acoustic data from speech.",
	"url": null,
	"owner": "Micriosoft Corporation",
	"publication_number": "07565292",
	"publication_date": "2009-07-21",
	"application_number": "10944262",
	"application_date": "2004-09-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Using existing content to generate active content wizard executables for execution of tasks",
	"summary": "",
	"abstract": "A computer implemented method of converting existing content files into an active content wizard executable file is provided, along with systems and tools for doing the same. In the method, an existing content file is converted into a corresponding file in an active content wizard schema. A database of user interface elements corresponding to user interface elements found in one or more windows of an application program to which the existing content file corresponds is accessed in order to retrieve information relating to user interface elements referenced in the corresponding file in the active content wizard schema. Then, an active content wizard file is created from the corresponding file in the active content wizard schema and the retrieved information relating to user interface elements.",
	"url": null,
	"owner": "Microft Corporation",
	"publication_number": "07587668",
	"publication_date": "2009-09-08",
	"application_number": "11060181",
	"application_date": "2005-02-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Audio volume control for computer systems",
	"summary": "",
	"abstract": "A computer system includes an audio chip to generate audio signals at a target volume level to be emitted as audio output by speakers. Also included in the computer system may be a volume control routine to limit the overall volume level of the system. A maximum volume level may be set by a user through interacting with a software routine. The software routine may include password protection, requiring a user to enter a correct password in order to modify the maximum volume level. If the target volume level is above the maximum volume level, then the volume control routine may set the overall volume level of the system at the maximum volume level. Otherwise the volume control routine may set the overall volume level at the target volume level.",
	"url": null,
	"owner": "Micron Technology, Inc.",
	"publication_number": "07526095",
	"publication_date": "2009-04-28",
	"application_number": "11041800",
	"application_date": "2005-01-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods of operating portable computerized device with network security",
	"summary": "",
	"abstract": "A multi-level network security system is disclosed for a computer host device coupled to at least one computer network. The system including a secure network interface Unit (SNIU) contained within a communications stack of the computer device that operates at a user layer communications protocol. The SNIU communicates with other like SNIU devices on the network by establishing an association, thereby creating a global security perimeter for end-to-end communications and wherein the network may be individually secure or non-secure without compromising security of communications within the global security perimeter. The SNIU includes a host/network interface for receiving messages sent between the computer device and network. The interface operative to convert the received messages to and from a format utilized by the network. A message parser for determining whether the association already exists with another SNIU device. A session manager coupled to said network interface for identifying and verifying the computer device requesting access to said network. The session manager also for transmitting messages received from the computer device when the message parser determines the association already exists. An association manager coupled to the host/network interface for establishing an association with other like SNIU devices when the message parser determines the association does not exist.",
	"url": null,
	"owner": "Micron Technology, Inc.",
	"publication_number": "07475137",
	"publication_date": "2009-01-06",
	"application_number": "10877791",
	"application_date": "2004-06-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multiple operating system quick boot utility",
	"summary": "",
	"abstract": "A computerized user interface for assisting a computer user selects a default operating system for a computer. The computerized interface operates during a current computing session and provides a list of operating systems available. A user can make a selection using standard activatible controls such as icons, alphanumeric lists and highlighting. Once selected, an operating becomes the default operating system software on the computer. Therefore, during the next startup of the computer a selected operating system will boot unless there is some other intervention. In addition to selecting an operating system, this invention can also be used to cause the computer to restart. Restart can be set to execute immediately or to execute upon a change in the default operating system. In addition this invention can be caused to uninstall thereby erasing the program files relating to this invention.",
	"url": null,
	"owner": "Micron Technology, Inc.",
	"publication_number": "07533350",
	"publication_date": "2009-05-12",
	"application_number": "10808221",
	"application_date": "2004-03-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Text based markup language resource interface",
	"summary": "",
	"abstract": "A software control method and apparatus for displaying a text based markup language interface. The interface can interact with a computer to provide reference documents, install system drivers and perform various system utilities. The interface can reference optical drivers, hard disk drives or other storage medium and files available over a network, such as a local area network (LAN) or a wide area network (WAN) including the Internet. A graphical user interface using a text markup language such as hypertext markup language (HTML) can allow for activation for a user interactive control such as an icon or a hyperlink. Activation of an interactive control can hook onto a hypertext link target associated with the activated user interactive control result in the performance of an initial action responsive to variables including the control, a uniform resource locator associated with the interactive control and the hypertext link target.",
	"url": null,
	"owner": "Micron Technology, Inc.",
	"publication_number": "07503002",
	"publication_date": "2009-03-10",
	"application_number": "11595013",
	"application_date": "2006-11-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Ability for developers to easily find or extend well known locations on a system",
	"summary": "",
	"abstract": "A method and data structure for creating and accessing folders stored in well known locations. The data structure and method utilizes a set of APIs to create and manage well known folders on a system and/or to locate specific well known folders. The invention provides interfaces to create, locate, extend, and enumerate well known folders. In addition, the invention allows a developer and/or user to customize properties of well known folders.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07478085",
	"publication_date": "2009-01-13",
	"application_number": "11096871",
	"application_date": "2005-04-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Abstracted metadata policy component and related architecture",
	"summary": "",
	"abstract": "A method and architecture for reading and updating metadata. A policy component is arranged to receive a request to read or update metadata that may include metadata from a plurality of standards. Each metadata format potentially includes a field corresponding to the request. The policy component determines which fields to read or update in satisfying the request by consulting a repository. The repository includes mappings that map information included in the request (e.g., a path) to locations in the metadata corresponding to the request. The policy component uses the locations to read or update the metadata.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07548927",
	"publication_date": "2009-06-16",
	"application_number": "11112765",
	"application_date": "2005-04-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Acoustic models with structured hidden dynamics with integration over many possible hidden trajectories",
	"summary": "",
	"abstract": "A method of producing at least one possible sequence of vocal tract resonance (VTR) for a fixed sequence of phonetic units, and producing the acoustic observation probability by integrating over such distributions is provided. The method includes identifying a sequence of target distributions for a VTR sequence corresponding to a phone sequence with a given segmentation. The sequence of target distributions is applied to a finite impulse response filter to produce distributions for possible VTR trajectories. Then these distributions are applied to a linearized nonlinear function to produce the acoustic observation probability for the given sequence of phonetic units. This acoustic observation probability is used for phonetic recognition.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07565284",
	"publication_date": "2009-07-21",
	"application_number": "11071904",
	"application_date": "2005-03-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Address translation in an integrated graphics environment",
	"summary": "",
	"abstract": "A method of translating graphics virtual addresses to physical addresses in an integrated graphics processor environment includes receiving a request for a graphics operation from an application. The application may be an application executing in a partition of a virtual machine. The requested graphics operation involves at least one instruction and at least one graphics virtual address. The instructions are accessed and execution begins by instruction execution within a graphics processor. The graphics processor relies upon an I/O memory management unit to perform a virtual address to physical address translation as the graphics processor performs the graphics operation. The I/O memory management unit may utilize direct memory access to accomplish the graphics operation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07499057",
	"publication_date": "2009-03-03",
	"application_number": "11222551",
	"application_date": "2005-09-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Advanced power management in generic USB drivers",
	"summary": "",
	"abstract": "Techniques are disclosed to provide advanced power management in generic USB drivers. More particularly, a generic USB device driver architecture is described which enables development through a user-mode USB library that accesses a generic kernel-mode driver. The architecture may be utilized to provide advanced power management. In a described implementation, a method includes defining a power management policy for a device plugged into a computing system and utilizing the defined power management policy to determine when the device enters a suspend mode. Once the device enters the suspend mode, the method allows the computing system to enter a lower-power state. In a further described implementation, the power management policy is defined through a plurality of routines provided by a generic user-mode library (e.g., a dynamic link library (DLL)), where the generic user-mode library is communicatively coupled to a kernel-mode generic device driver.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07577765",
	"publication_date": "2009-08-18",
	"application_number": "10854407",
	"application_date": "2004-05-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Album art on devices with rules management",
	"summary": "",
	"abstract": "A system and method for transferring album art from a client computer to a portable media device (PMD). A graphical user-interface allows a user to select a track for transfer to the PMD. A media player application (MPA) verifies that the PMD is capable and authorized to receive album art. The MPA queries the PMD for an album object storing album art for the selected track. If an album object corresponding to the selected track exists, a reference to the selected track is added to the existing album object. If an album object corresponding to the selected track does not exist, the MPA transfers a new album object referencing the selected track and storing album art for the selected track to the PMD. The MPA further connects to a web site authorized to sell an audio CD associated with a track when a buy flag is detected on the PMD.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07593950",
	"publication_date": "2009-09-22",
	"application_number": "11094097",
	"application_date": "2005-03-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Analyzing scripts and determining characters in expression recognition",
	"summary": "",
	"abstract": "A mechanism for recognizing and inputting handwritten mathematical expressions into a computer by providing part of a multi-path framework is described. The part of the multi-path framework includes a subscript/superscript analysis and character determination component that is designed to identify subscript and superscript elements. A method for analyzing a handwritten mathematical expression includes receiving a symbols corresponding to handwritten mathematical expression input strokes, identifying subscript and/or superscript structures, and determining a character for each symbol of the set. A graph of vertexes and edges may be created based upon the set of symbols and the graph may be searched to determine optimized candidates.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07561739",
	"publication_date": "2009-07-14",
	"application_number": "11155748",
	"application_date": "2005-06-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Anti-virus security information in an extensible markup language document",
	"summary": "",
	"abstract": "Methods and systems are provided for allowing software applications capable of reading and saving Extensible Markup Language (XML) representations of documents to quickly and efficiently detect the presence of executable code contained in a given document being read or saved by the software applications. Examples of executable code include, but are not limited to macros, VBA macros, OLE code, OCX or ActiveX controls, embedded executable objects, and the like.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07509573",
	"publication_date": "2009-03-24",
	"application_number": "10780237",
	"application_date": "2004-02-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "API for building semantically rich diagramming tools",
	"summary": "",
	"abstract": "The system employs a rich framework to support both document and diagram state. Because the same framework is used to manipulate the state in a consistent way, it becomes much easier to keep the diagram synchronized with the underlying data than with conventional system(s).",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07624403",
	"publication_date": "2009-11-24",
	"application_number": "10809090",
	"application_date": "2004-03-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "API for network discovery",
	"summary": "",
	"abstract": "Discovery of a network to which a device is in communication and classifying the network is disclosed. The network may be classified as a network already known or a new network signature may be created where the network signature is made up of a network id, a link id and a hop id.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07590762",
	"publication_date": "2009-09-15",
	"application_number": "11296790",
	"application_date": "2005-12-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "APIS to build peer to peer messaging applications",
	"summary": "",
	"abstract": "The claimed method and system is an API set to support a multicast programming model for implementation on top of a service oriented framework, specifically a service oriented messaging system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07493413",
	"publication_date": "2009-02-17",
	"application_number": "11080897",
	"application_date": "2005-03-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application program interface for network software platform",
	"summary": "",
	"abstract": "An application program interface (API) provides a set of functions for application developers who build Web applications on Microsoft Corporation's .NETu2122 platform.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07546602",
	"publication_date": "2009-06-09",
	"application_number": "09902812",
	"application_date": "2001-07-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application programming interface for centralized storage of principal data",
	"summary": "",
	"abstract": "In the present invention, data relating to principals known to a computer system is centrally stored and objects having a standardized principal application programming interface (API) for finding, managing and accessing that data is provided to applications in lieu of having the applications independently store the principal data. The present invention eliminates the need for each application to create duplicate principal data. It also ensures that principal data are consistent throughout the applications on the computer system. In addition, the present invention allows any application with objects having the principal API to manage and change the principal data making such principal data easy to update. The principal API includes methods to find principals based on an identity reference to a principal or an identity claim that uniquely identifies the principal on computer system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07593951",
	"publication_date": "2009-09-22",
	"application_number": "11444643",
	"application_date": "2006-05-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application programming interface for text mining and search",
	"summary": "",
	"abstract": "Systems and methods are described that allow programmatic access to search engine results and query logs in a structured form. The search results can be retrieved from the search engine in an intermediary form that contains the information that is in the HTML pages provided to web browsers (potentially with additional information). This intermediary form can then be broken down on the client machine, using local resources, to assemble the structured objects. The library also provides for caching of the search results. This can be provided both on the local machine and on a remote database. When the results for a query exist in the caches, they can be retrieved from such location instead of querying the search engine. Documents and/or web pages can also be cached. The library can also be directed to operate only from the cache, effectively exposing a local data set instead of the remote search engine.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07565362",
	"publication_date": "2009-07-21",
	"application_number": "11172638",
	"application_date": "2005-07-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application programming interface to the simple object access protocol",
	"summary": "",
	"abstract": "Systems and computer-readable media implementing methods for providing an application programming interface (API) to the Simple Object Access Protocol (SOAP) are described. The API provides mechanisms for creating all parts of SOAP request messages, for sending the created messages over HTTP to a remote server, and, if the request is successful, for retrieving the response from the remote server, or, in the case of failure, for accessing whatever error information is available. The information passed through the API can be in the form of parameters which allows both the SOAP protocol and the applications that use it to change without requiring changes to the API itself.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07620962",
	"publication_date": "2009-11-17",
	"application_number": "11099320",
	"application_date": "2005-04-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application programming interfaces for an on-demand property system",
	"summary": "",
	"abstract": "The application programming interfaces described herein are directed at property management mechanisms that operate within an on-demand property system. The property management mechanisms support the caching of property values on an as needed basis, allow a plurality of object instances to utilize the same property via attached properties, overriding default information associated with a property on a per type basis, obtaining values for a property from an external source, and the like. In addition, the on-demand property system provides validation and control for each property instance. The property management mechanisms minimize the storage requirements and provide flexibility without requiring additional code from the developers.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07562095",
	"publication_date": "2009-07-14",
	"application_number": "11036967",
	"application_date": "2005-01-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Approval process for booting devices in pre-boot execution environment (PXE)",
	"summary": "",
	"abstract": "Approving a client to boot in a pre-boot execution environment. A request is received from the client to boot the client by a computing device. The request includes device information associated with the client. A data store having a collection of known device information is queried in response to the received request. The request is stored, and it is determined whether to execute the received request by evaluating the device information in the stored request. The received request is responded to as a function of the evaluated device information.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07574592",
	"publication_date": "2009-08-11",
	"application_number": "11358243",
	"application_date": "2006-02-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Architecture and system for location awareness",
	"summary": "",
	"abstract": "A location service and method provides a location aware computing device that is extensible by allowing different types of location awareness providers operate with the service. The method includes receiving a request for a location context, acquiring data associated with a current location from one or more location detection devices, reconciling the acquired data for any inconsistencies concerning the current location by applying either or both of a hierarchical and a metric process, and generating a location object accessible to applications. The service includes a location management component configured to route location data, a fuser engine configured to receive one or more location reports generated from the location data, reconcile conflicts between the location reports and generate a location object, and one or more location application programming interfaces (APIs) coupled to the location management component to transmit the location object from the fuser engine to an application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07536695",
	"publication_date": "2009-05-19",
	"application_number": "10402609",
	"application_date": "2003-03-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Asynchronous database API",
	"summary": "",
	"abstract": "An asynchronous database API allows threads to call a database and continue to execute without spawning a thread to wait for the database and without polling the database. The API immediately returns to a caller without waiting for a database operation to complete or for any other external event. A call to an asynchronous database API can invoke an initialization method. The initialization method may validate the input parameters, build them into a message for a database operation, send the message to the database server, and return signal information to the client process thread. Signal information provides a client thread with a way to recognize a signal indicating the return of results from a database. Upon completion of a database operation, a thread can call a finalization method to perform any final step to process the database results and pass the formatted results to the thread.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07503052",
	"publication_date": "2009-03-10",
	"application_number": "10824177",
	"application_date": "2004-04-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Authoring speech grammars",
	"summary": "",
	"abstract": "A method and apparatus are provided for automatically forming a grammar. Example text strings are received and N-grams are formed based on the text strings. A rule in the grammar is then generated automatically based in part on the n-grams.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07617093",
	"publication_date": "2009-11-10",
	"application_number": "11143357",
	"application_date": "2005-06-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Auto suggestion of coding error correction",
	"summary": "",
	"abstract": "Suggested corrections for a code error are provided by a compiler or code editor, for example. Thus, there is much less ambiguity about how an error should be corrected. Preferably, a predetermined number of suggested corrections are presented to the user (e.g., up to three suggestions), and the user can choose a desired suggested correction. Corrections for a given error can be made, not only at the location of the error, but throughout the code document, or other files in the user's solution. Furthermore, by undoing one correction and trying another, the user can go through all of the suggested corrections to determine which suggestion would be most preferable.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07607066",
	"publication_date": "2009-10-20",
	"application_number": "10183259",
	"application_date": "2002-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automated data organization",
	"summary": "",
	"abstract": "A system for automating data processing is presented. The system comprises an end-user programming module that is integrated with an underlying file system and that maps an event of a computing system to at least one automatic action that is defined by an end user. The system also includes an event handler that responds to events and causes the at least one automatic action to be performed. Methods of using the system are also provided.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07565663",
	"publication_date": "2009-07-21",
	"application_number": "11203741",
	"application_date": "2005-08-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automated rootkit detector",
	"summary": "",
	"abstract": "Embodiments of a RootKit detector are directed to identifying a RootKit on a computer that is designed to conceal malware. Aspects of the RootKit detector leverage services provided by kernel debugger facilities to automatically obtain data in specified data structures that are maintained by an operating system. Then the data obtained from the kernel debugger facilities is processed with an integrity checker that determines whether the data contains properties sufficient to declare that a RootKit is resident on the computer.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07571482",
	"publication_date": "2009-08-04",
	"application_number": "11170792",
	"application_date": "2005-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic analysis and adjustment of digital images upon acquisition",
	"summary": "",
	"abstract": "In one aspect, an application analyzes and adjusts image data (e.g., pixel data) automatically upon acquiring (e.g., from a source such as a digital camera) a digital image. Adjustments can be based on, for example, image orientation, red-eye detection, blurriness, color balance, exposure, or noise detection. Metadata corresponding to image adjustments can be stored in an adjusted image file to preserve the original image. In another aspect, a computer system includes image analysis and image adjustment software modules for analyzing and adjusting digital image data at image acquisition time. The image adjustment module can include one or more processing filters. A customizable software architecture allows customization of the image adjustment software module (e.g., by adding, removing or reordering processing filters). The described techniques and tools can be implemented as features of an operating system environment.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07532234",
	"publication_date": "2009-05-12",
	"application_number": "10600199",
	"application_date": "2003-06-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic computer program customization based on a user information store",
	"summary": "",
	"abstract": "Software programs, such as an operating system or other application programs, are automatically customized to a specific user(s) based on data corresponding to the specific user(s) that is maintained in a user information store. In one embodiment, the information store is a unified store that is accessible by multiple programs including the operating system. Thus, new information or information changes can be made available to multiple programs by the user adding (or changing) the information only once. In another embodiment, the operating system image to be installed on a computer is pre-populated with user-specific information at the factory. The user-specific information can be integrated into the operating system at the factory or alternatively upon an initial boot of the computer by the user.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07596785",
	"publication_date": "2009-09-29",
	"application_number": "10961800",
	"application_date": "2004-10-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic database statistics creation",
	"summary": "",
	"abstract": "A system for automatic statistics creation comprises a query optimizer which automatically generates statistics derived from data in a database and selects an executable procedure from a plurality of procedures that operate on data in a database using the automatically generated statistics. A counter is maintained of updates made to each statistic that has been automatically generated. If the counter breaches a threshold, the automatically generated statistic is removed from the database.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07624094",
	"publication_date": "2009-11-24",
	"application_number": "10982496",
	"application_date": "2004-11-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic image capture for generating content",
	"summary": "",
	"abstract": "The present invention is directed to a system for automatically capturing images based on the actions of an author in completing steps in an overall task performed on a user interface. To capture the images the author activates a recording component. The recording component records images corresponding to the author's actions on the user interface. The recording component can pass the recorded images to an editing component where an author can generate text corresponding to the images to describe the actions. The images can also be published embedded in the text, if desired.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07565607",
	"publication_date": "2009-07-21",
	"application_number": "10887414",
	"application_date": "2004-07-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic update of computer-readable components to support a trusted environment",
	"summary": "",
	"abstract": "The present automatic update mechanism provides a method for periodically checking for updates to support a trusted environment. During the periodic check, an indication from an update service is received if there is a recommended update. Upon receiving the indication, a new revocation list is downloaded from the update service and saved as a pending revocation list. The pending revocation list is then available for on-demand update when protected content requests a higher level of protection on a computing device than the protection provided by a current level of protection on the computing device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07590841",
	"publication_date": "2009-09-15",
	"application_number": "11184555",
	"application_date": "2005-07-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatically sized computer-generated workspaces",
	"summary": "",
	"abstract": "A method and system are provided for automatically sizing computer-generated workspaces to allow users to enter data anywhere in an available workspace. A calculation is performed to determine the total available workspace displayable by a display device based on the size of the display device. The space required to display user interface objects, such as toolbars and task panes, is subtracted from the total available workspace, and the remaining available workspace is designated as the displayed workspace. The workspace is displayed without the use of scroll bars to create a user experience that the displayed workspace is the total available workspace. Data may be entered anywhere in the displayed workspace without regard to any preformatted page sizes or margins. If data is entered outside the displayed workspace, scroll bars are then displayed to indicate the presence of content outside the displayed workspace. As additional content, such as graphical user interfaces is displayed, or when the user's display device changes, the displayed workspace is recalculated.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07577914",
	"publication_date": "2009-08-18",
	"application_number": "10180231",
	"application_date": "2002-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Binary cache file format for themeing the visual appearance of a computer system",
	"summary": "",
	"abstract": "A binary theme file format provides optimized access to retrieve graphical component theme property data. The binary format includes data structures storing a set of defined visual characteristics for graphical component classes, parts, and states. The data structure includes a hierarchy of theme data. A theme manager quickly retrieves theme property data by indexing into the binary file with a unique theme handle. The theme manager accesses state, part, class, and global property sections to retrieve theme data. Jump tables and jump-to-parent references allow for quickly traversing property data sections. Packed data sections have packed objects having the necessary property data for frequently used graphical components. A custom image region data section provides border data for nontransparent image borders. A sampled colors section facilitates rendering of images with solid sections. The binary file format can be constructed using a text theme file and is loaded into shared process memory.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07565611",
	"publication_date": "2009-07-21",
	"application_number": "10918153",
	"application_date": "2004-08-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Biometric measurement using interactive display systems",
	"summary": "",
	"abstract": "Biometric data are produced in response to user input to an interactive display. The user input occurs when the interactive display senses a user input proximate to an interactive display surface that is able to respond to simultaneous multiple inputs. A detection signal based on a user input is processed to identify biometric indicia associated with the user input. User input can be by any biometric entity, such as an animalu2014not just by a human. Based on the biometric indicia identified, user biometric data are produced. The user biometric data includes parameters describing physical characteristics associated with the portion of the user that provided the user input. The biometric data can be compared to stored biometric data associated with a specific user and/or user profile, e.g., to enable access by the user to an account, and can also be employed to provide other functions, such sizing information, to applications.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07630522",
	"publication_date": "2009-12-08",
	"application_number": "11370558",
	"application_date": "2006-03-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Block synchronous decoding",
	"summary": "",
	"abstract": "A pattern recognition system and method are provided. Aspects of the invention are particularly useful in combination with multi-state Hidden Markov Models. Pattern recognition is effected by processing Hidden Markov Model Blocks. This block-processing allows the processor to perform more operations upon data while such data is in cache memory. By so increasing cache locality, aspects of the invention provide significantly improved pattern recognition speed.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07529671",
	"publication_date": "2009-05-05",
	"application_number": "10379244",
	"application_date": "2003-03-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Boot architecture discovery in pre-boot environment",
	"summary": "",
	"abstract": "Identifying characteristics of a client in a pre-boot environment. A packet is received from the client. The packet includes a request for an image to boot the client by a computing device. An application is transmitted from the computing device to the client in response to the received packet. The client executes the transmitted application. A response is received from the application executed by the client. The characteristics of the client are determined based on the received response. An image to boot the client is transmitted, and the transmitted image is a function of the determined characteristics.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07546448",
	"publication_date": "2009-06-09",
	"application_number": "11358761",
	"application_date": "2006-02-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Caching data for offline display and navigation of auxiliary information",
	"summary": "",
	"abstract": "Described is a system and system by which application programs provide data to auxiliary display device (that is associated with a main computer system) for display, including at times when the main computer system is powered down. The cache maintains the user data in association with structured navigational information, to allow navigation within the data via the structure. When online, the main computer system prepares the data cache from program data in combination with navigational information, and transfers the cache to an offline medium such as auxiliary storage in firmware. The cache may be arranged as a tree structure, such that navigation commands result in output according to data in the tree. Other events such as time-based events can change the auxiliary device output.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07577771",
	"publication_date": "2009-08-18",
	"application_number": "10837900",
	"application_date": "2004-05-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Cancellation mechanism for cooperative systems",
	"summary": "",
	"abstract": "Object invocation may be carried out by one thread in a service which may include multiple executing threads. In a mechanism for implementing a cancellation operation in a cooperative system, a thread identifies an operation to be cancelled. A cancel function has an argument comprising the thread identifier in which the operation is to be cancelled. The cancel function is called by a client process thread to cancel a pending object invocation initiated by the client process. An immediate or hard cancel causes the targeted client and cancel thread to return immediately. A discretionary or soft cancel does not affect the targeted client thread. In either case the server process is notified via a maintenance notification. The target thread of the cancel cannot be reused for other work until the cancel request or notification has returned.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07607142",
	"publication_date": "2009-10-20",
	"application_number": "11129848",
	"application_date": "2005-05-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Click stream analysis",
	"summary": "",
	"abstract": "A path calculation report is derived from a Web log having therein a plurality of Universal Resource Identifiers (URI) each corresponding to a request made by a user to a server of a Web site containing one or more web pages. The report displays, in sequential order, all of the URI that correspond to each click path through the Web Site by one or more users during one or more visits to the Web site. Each URI corresponding to each click path is derived by decompressing a fixed length number representing a compressed URI that corresponds to each request of the corresponding click path through the Web Site.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07587486",
	"publication_date": "2009-09-08",
	"application_number": "10338448",
	"application_date": "2003-01-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Client side indexing of offline address book files",
	"summary": "",
	"abstract": "A method of building an offline address book (OAB). An OAB data file and a table of attributes are generated at a server. The data file and table are transferred from the server to a client. The transferred data file and table are indexed by the client.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07490079",
	"publication_date": "2009-02-10",
	"application_number": "11105719",
	"application_date": "2005-04-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Code blueprints",
	"summary": "",
	"abstract": "A blueprint is described that provides a framework for writing a code generator. A blueprint translator translates the blueprint into one or more classes with source code. The newly generated code can then be compiled. If the user wishes to add additional functionality to a generated class, this is done in a separate source file. At compilation time, the compiler combines the generated class with the user's additions, as if they were written in a single class. Later, if the blueprint is ever changed, the generated code can safely be updated without overwriting the user's additions. Alternately, the user can embed his desired additions or changes directly into the blueprint (embedded code). In this manner, should the blueprint ever be re-compiled, the user's changes will still be present. The partial classes technique can be used in conjunction with the embedded code technique.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07500224",
	"publication_date": "2009-03-03",
	"application_number": "10285849",
	"application_date": "2002-11-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Collaboration spaces",
	"summary": "",
	"abstract": "A computer implemented method and system enable users to create a social network providing access to other users. By providing access to such networks via a visual presentation, the system renders content available for access by other network members. Access is sometimes provided through propagation of metadata or other uniquely identifying indicia associated with the social network to all or at least certain other network members.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07620902",
	"publication_date": "2009-11-17",
	"application_number": "11110622",
	"application_date": "2005-04-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Color management system that supports legacy and advanced color management applications",
	"summary": "",
	"abstract": "The present invention provides method and apparatus for supporting a legacy application programming interface (API) set between a component and a color management system. The legacy API set supports both the new capabilities as well as the legacy capabilities. The color management system determines the format type for an object that is referenced by an API call. If the object is associated with a legacy format, the API call is processed by a legacy processing module. If the object is associated with an advanced format, the API call is processed by an advanced processing module. If a plurality of objects is associated with an API call with mixed formats, the color management system converts some of the objects so that the objects have a consistent format. A common structure supports an object that may have either a legacy format or an advanced format.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07593959",
	"publication_date": "2009-09-22",
	"application_number": "11276244",
	"application_date": "2006-02-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Command binding determination and implementation",
	"summary": "",
	"abstract": "Aspects of the subject matter described herein relate to generating and propagating commands. In aspects, elements of a graphical user interface may include an input binding which associates a gesture with a command. When a gesture is received, the command is generated depending on which element has focus. In addition, elements of the graphic user interface may also define methods to call when commands are received. When an event or a command is received, a hierarchical data structure of elements representable on the graphical user interface may be traversed to respond to the event or command.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07568035",
	"publication_date": "2009-07-28",
	"application_number": "11215575",
	"application_date": "2005-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Common charting using shapes",
	"summary": "",
	"abstract": "A method for rendering a chart associated with a document includes translating a chart object into a shape-based chart definition, wherein the chart object defines the chart with chart elements, and the shape-based shape definition defines the chart with shapes, and maintaining the chart object in the document to enable access to underlying chart data contained in the chart. A system includes a chart object defining a chart with chart elements, a graphics module operable to render shapes, a charting module generating a shape-based chart definition based on the chart object, wherein the shape-based chart definition defines the chart with shapes that can be rendered by the graphics module.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07584415",
	"publication_date": "2009-09-01",
	"application_number": "10941566",
	"application_date": "2004-09-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Compiling source code using generic classes",
	"summary": "",
	"abstract": "A method includes receiving a portion of JAVAu2122 language software having a declaration of an instance of a generic class, parsing the declaration into a token corresponding to the generic class, and generating an intermediate language code block corresponding to the parsed declaration. The intermediate language code block is executable by a runtime engine. A system for compiling includes a parser receiving JAVAu2122 language source code having an instruction referencing a generic class and specifying a type of the generic class, and a code generator generating intermediate language code representing the source code.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07543271",
	"publication_date": "2009-06-02",
	"application_number": "10657463",
	"application_date": "2003-09-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Componentized remote user interface",
	"summary": "",
	"abstract": "Systems and methods for providing a componentized remote user interface are disclosed. Such user interfaces are particularly suitable for use in remote configuration of a device, such as a headless device, that is in network communication with a computer. The user interface may be a web page rendered from an HTML file that defines the web page and a separate file that includes script for associating a value with a variable parameter. The HTML file may include a reference to the variable parameter and incorporate the other file therein by reference. When the web page is rendered, the device parses the HTML file to identify the file incorporated therein by reference and substitutes the parameter value provided in the file for the variable included in the HTML file. Thus, the rendered web page may include the actual value of the parameter, and the HTML file need not have the actual value hard-coded therein.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07533099",
	"publication_date": "2009-05-12",
	"application_number": "11002173",
	"application_date": "2004-12-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Composite user interface and framework",
	"summary": "",
	"abstract": "Computer-implemented methods of processing contact records are provided. A user may merge and unmerge contact records to control which records are synchronized with each other. Identity claims of records may be compared to identify possible duplicate records. Identity claims may include addresses, phone numbers, instant messenger addresses or other contact data that is likely to be uniquely associated with a contact. When possible duplicate contact records are found, a dialog box is displayed that identifies the possible duplicate records and includes an option for merging the possible duplicate contact records.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07480664",
	"publication_date": "2009-01-20",
	"application_number": "10883139",
	"application_date": "2004-07-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Compositing rendering layers",
	"summary": "",
	"abstract": "Aspects of the subject matter described herein relate to applying effects to a target via compositing rendering layers. In aspects, an intent is determined and a area of a target copied to a surface based on the intent. Then, rendering may continue to the target without changing to another target. Later, the surface is composited back to the target to apply an effect to the target.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07535480",
	"publication_date": "2009-05-19",
	"application_number": "11211871",
	"application_date": "2005-08-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Compressed program recording",
	"summary": "",
	"abstract": "Program execution can be monitored and recorded for later playback. Certain state changes that can be predicted via a virtual processor during playback need not be recorded, so a compressed recording can be stored. To facilitate random access with respect to time during playback, key frames can be stored within the compressed recording. An index mechanism can associate key frames with particular memory addresses. Additionally, a snapshot of values for memory addresses can be used to further facilitate determining the value of a memory address without having to simulate execution. Multiprocessor executions can be supported, and playback can be done on a machine type different from that on which recording took place.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07620938",
	"publication_date": "2009-11-17",
	"application_number": "11264487",
	"application_date": "2005-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer media synchronization player",
	"summary": "",
	"abstract": "A media synch player includes a time control module, a digital data storage and retrieval device coupled to and responsive to the time control module and an audiovisual data signal output configured to supply audiovisual data to a display by playing a first media file from the digital data storage and retrieval device in response to commands from a system controller. The time control module is configured to request a system time from an external time server, reset the time control module in accordance with the system time, lock to a master clock contained in the external time server and resynchronize the first time control module in response to predetermined criteria being met.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07627808",
	"publication_date": "2009-12-01",
	"application_number": "10461222",
	"application_date": "2003-06-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Conditional maximum likelihood estimation of nau00efve bayes probability models",
	"summary": "",
	"abstract": "A statistical classifier is constructed by estimating Nau00efve Bayes classifiers such that the conditional likelihood of class given word sequence is maximized. The classifier is constructed using a rational function growth transform implemented for Nau00efve Bayes classifiers. The estimation method tunes the model parameters jointly for all classes such that the classifier discriminates between the correct class and the incorrect ones for a given training sentence or utterance. Optional parameter smoothing and/or convergence speedup can be used to improve model performance. The classifier can be integrated into a speech utterance classification system or other natural language processing system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07624006",
	"publication_date": "2009-11-24",
	"application_number": "10941399",
	"application_date": "2004-09-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Configurable system and methods for writing and executing test components",
	"summary": "",
	"abstract": "An automated and flexible architecture is provided that enables a plurality of component tests to be executed in various testing orders while imposing a test framework to mitigate adverse effects or results on previously developed tests. In one aspect, a computerized test system is provided. The system includes a test engine to execute a plurality of component tests. One or more application programming interfaces (API) are provided to selectively determine at a subset of the tests to execute, an execution order of the tests, or a fault response for the tests, if desired. The API determines a phase execution for the tests, where the phase execution can include a set up phase, an execution phase, a validation phase, a publishing phase, and a clean up phase, for example.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07562255",
	"publication_date": "2009-07-14",
	"application_number": "11201798",
	"application_date": "2005-08-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Configuration information protection using cost based analysis",
	"summary": "",
	"abstract": "A cost is determined for events related to the modification of system configuration parameter values in a computing device. If the cost meets or exceeds a threshold, a challenge is presented to a user of the computing device. If the user does not answer the challenge correctly, the system configuration parameters are reverted to their original values.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07617538",
	"publication_date": "2009-11-10",
	"application_number": "11172273",
	"application_date": "2005-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Configuration of a directory system",
	"summary": "",
	"abstract": "Exemplary techniques are described for configuring a metadirectory system used to interact with a collection of connected directory sources via a respective collection of management agents. The techniques can involve importing new management agents to the metadirectory system, updating existing management agents, or configuring the entire metadirectory system (which can involve adding or updating plural management agents). Techniques are provided for ensuring that the configuration of the metadirectory system provides partitions which conform to expected partitions associated with existing management agents and/or connected directory sources.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07620658",
	"publication_date": "2009-11-17",
	"application_number": "10669612",
	"application_date": "2003-09-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Configuring network settings using portable storage media",
	"summary": "",
	"abstract": "A portable computer-readable media device and method of use enable automatic configuration of a computing device, such as a conventional network device or a thin client device, for operation in a network. Configuration information, including network settings and security information, is incorporated in an XML file written to the portable media device while it is installed in a first device. This configuration is then automatically transferred to a second device by installing the portable media device in the second device. The second device then writes device information, incorporated in an XML file, to the portable media device, to be uploaded to the first device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07546357",
	"publication_date": "2009-06-09",
	"application_number": "10806369",
	"application_date": "2004-03-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Contact management in a serverless peer-to-peer system",
	"summary": "",
	"abstract": "Systems and methods are described that facilitate the management of contact information, at least some of the contact information related to entities in a serverless, peer-to-peer system. A contact store may store information regarding which other entities of a plurality of other entities are authorized to monitor presence of a user entity. Presence of an entity may generally indicate the willingness and/or ability of the entity to communicate and/or collaborate with other entities, for example. The contact store may also store information regarding which other entities of the plurality of other entities the presence of which should be monitored by the system. A user entity may be able to add contacts to and/or delete contacts from the contact store, for example. The user entity may also be able to modify the contact store to modify which other entities are authorized to monitor presence of the user entity and/or which other entities the presence information of which should be monitored by the system, for example.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07571228",
	"publication_date": "2009-08-04",
	"application_number": "11112135",
	"application_date": "2005-04-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Context free document portions",
	"summary": "",
	"abstract": "Portions of an Extensible Markup Language document, such as individual paragraphs or groups of paragraphs or fragments of text, are provided self-describing properties such as styles, fonts, list types, and the like. If such a portion of a document is subsequently copied or moved to a second document or to a different location in the first document, the self-describing properties provided for the portion travel with the portion to the second document or to the different location in the first document.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07617447",
	"publication_date": "2009-11-10",
	"application_number": "10731900",
	"application_date": "2003-12-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Control protocol for image enumeration and transfer",
	"summary": "",
	"abstract": "A control protocol is used to deploy and install an operating system image to a client. The data structure of the protocol includes an operation code corresponding to an operation associated with the deployment and installation of an operating system image to a client. When the server receives a request packet, the server parses the request and sends the parsed request to the provider. The provider then executes the operation associated with the operation code and generates a return value. The return value is sent to the server. The server then composes a rely packet including the return value and transmits the reply packet to the client.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07631175",
	"publication_date": "2009-12-08",
	"application_number": "11358489",
	"application_date": "2006-02-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Controlling network access",
	"summary": "",
	"abstract": "One embodiment of the invention is directed to managing access of a host computer to a network. A first communication session with the host computer may be conducted to authenticate the host computer's identity. A second communication session with the host computer may be conducted to determine the health status of the host computer.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07636938",
	"publication_date": "2009-12-22",
	"application_number": "11170977",
	"application_date": "2005-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Cryptography correctness detection methods and apparatuses",
	"summary": "",
	"abstract": "Methods and apparatuses are provided that can inform certain processes and/or even the user about the relative strength/weakness of cryptography services being used. In certain methods, for example, at least one cryptography service parameter threshold is established. The method further includes, selectively detecting a request for at least one cryptography service, and selectively performing at least one correctness detection action based on the requested cryptography service and the cryptography service parameter threshold. The cryptography service parameter threshold identifies acceptable/unacceptable cryptography algorithms, acceptable/unacceptable cryptography key size parameters, acceptable/unacceptable cryptography seed size parameters, and other like parameters that the requested cryptography service information can be compared with.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07602903",
	"publication_date": "2009-10-13",
	"application_number": "10759636",
	"application_date": "2004-01-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Custom API modeling for source code static analysis simulator",
	"summary": "",
	"abstract": "In processing an external function for which source code is not available, such as an application program interface (API), a model is used to evaluate whether the external function is properly invoked. An error potentially resulting from improper invocation of the external function and at least one condition that will result in the potential error are identified. The model is created to test for the condition that will result in the potential error. When the condition is found, generation of an error message is triggered. The model is associated with a source code analyzer such that when the source code is analyzed by the source code analyzer, the model is applied to evaluate invocation of the external function. The potential error and conditions that result in the error, such as input/output parameter errors and dependency errors, may be derived from documentation describing the operation of the external function or API.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07549144",
	"publication_date": "2009-06-16",
	"application_number": "11063303",
	"application_date": "2005-02-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data association",
	"summary": "",
	"abstract": "In an implementation of data association, a data item has a data item property with an associated value and a user interface element has an element property with a value that can be defined by an association to the data item property. A binding definition associates the element property of the user interface element with the data item property such that an application program which generates a user interface for display can be developed independent of the data item, and such that the data item can be developed independent of display-related information corresponding to the user interface element.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07577938",
	"publication_date": "2009-08-18",
	"application_number": "10783842",
	"application_date": "2004-02-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data feeds for management systems",
	"summary": "",
	"abstract": "A data feed is defined with a data type and criteria. Each data type corresponds to a type of management related data provided by a management system. The management system is searched for all management related data that corresponds with the data type and the criteria. An aggregator collects the management related data that corresponds with the data type and the criteria. The collected management related data is rendered for a display.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07617190",
	"publication_date": "2009-11-10",
	"application_number": "11289125",
	"application_date": "2005-11-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dataset search using reduced collation set",
	"summary": "",
	"abstract": "A method of searching for objects in a second database using a query from a first database includes receiving a first query from the first database where the first query is generated using a collation associated with the first database or user session or explicitly specified by users, where the first database may be the same as the second database. The first query is rewritten to form a second query which includes a superset of the collation and a residue predicate which includes a predicate from the first query. An index plan is adopted which targets an index associated with the a multiple language collation expressed in the rewritten query. The rewritten query is executed accessing the index and corresponding data that align with the residue predicate. The total number of indexes provided can be much less than the number of indexes needed if all possible collations were individually indexed.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07617187",
	"publication_date": "2009-11-10",
	"application_number": "11050094",
	"application_date": "2005-02-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Declarative representation for an extensible workflow model",
	"summary": "",
	"abstract": "Representing a componentized workflow model via a declarative markup language. Each step of the workflow is modeled as an activity that has metadata to describe design time aspects, compile time aspects, and runtime aspects of the workflow step. A user selects and arranges the activities to create the workflow via user interfaces or application programming interfaces. The metadata associated with each of the activities in the workflow is collected to create a persistent representation of the workflow. Users extend the workflow model by authoring custom activities.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07631291",
	"publication_date": "2009-12-08",
	"application_number": "11047404",
	"application_date": "2005-01-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Declarative rules for metadirectory",
	"summary": "",
	"abstract": "Exemplary methods, devices, systems, and/or storage media for organizational data management, including staging, synchronizing, and exporting of organizational data. Exemplary data aggregation rules specify methods for aggregating data from a remote repository. Schemas are exemplary rules configuration data structures having elements for associating processing data objects in a buffer space objects in a core space. The elements may also specify importing attributes into and exporting attributes from the core space.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07634480",
	"publication_date": "2009-12-15",
	"application_number": "10435113",
	"application_date": "2003-05-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Decorating surfaces with textures",
	"summary": "",
	"abstract": "Surfaces can be decorated with texture tiling and/or texture painting using one or more sample textures, such as BTFs. In a described implementation of texture tiling, a patch-based BTF synthesis algorithm is utilized. In an example embodiment, a mesh of a target surface is re-sampled to produce a dense mesh such that there is a one-to-one correspondence between vertices of the dense mesh and pixels of an image. Patch matching is then employed with a working image that corresponds to a working patch. In an example embodiment, the patch matching is effectuated using translations and rotations of the sample texture. In a described implementation of texture painting, irregular feature(s) of a sample texture are synthesized onto a target surface. In an example embodiment, user-specified constraints as to a desired foreground feature of a sample texture and an intended foreground region of a targeted surface are factored into a graphcut operation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07602398",
	"publication_date": "2009-10-13",
	"application_number": "11045868",
	"application_date": "2005-01-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Defining and extracting a flat list of search properties from a rich structured type",
	"summary": "",
	"abstract": "Rich structured data for items in a file system that allows different kinds of data to be identified by metadata is mapped into a set of search properties for a desktop search service, which is a flat list. This is applicable to any rich structured data that should be mapped into search properties for a desktop search service. Included is an installation mechanism to install these mappings and an execution infrastructure for utilizing the generated SQL from the mappings to extract search properties from items.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07502807",
	"publication_date": "2009-03-10",
	"application_number": "11480693",
	"application_date": "2006-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Delayed policy evaluation",
	"summary": "",
	"abstract": "The evaluation of a policy can be delayed until all rules criteria needed for evaluation are available. Also, new types of rules criteria can be registered without requiring changes to a rules engine. A policy manager allows rules to be evaluated and decisions made at different stages of the request handling. The policy manager facilitates interaction with the rules engine until all criteria are evaluated. The policy manager also allows modules developed by third parties to provide notification when criteria can be decided and thus complete evaluation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07603333",
	"publication_date": "2009-10-13",
	"application_number": "11454042",
	"application_date": "2006-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Delta replication of source files and packages across networked resources",
	"summary": "",
	"abstract": "The disclosed arrangements and procedures replicate source files across networked resources. Specifically, a server receives a package update notification corresponding to a difference between a previous set of source files and one or more new sets of source files. Responsive to receiving the package update notification, a delta set of source files that correspond to the difference are identified. A set of source and/or distribution servers in an enterprise network that are configured for delta replication is determined. The identified delta set of source files is communicated to the determined source and/or distribution servers.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07600021",
	"publication_date": "2009-10-06",
	"application_number": "10116775",
	"application_date": "2002-04-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dense formats for media metadata",
	"summary": "",
	"abstract": "Raw media metadata can be packaged as dense media metadata via a compression operation. In a described implementation, metadata for a media item is defined with a media item entry that references instances of property values in one or more property tables.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07516140",
	"publication_date": "2009-04-07",
	"application_number": "11421008",
	"application_date": "2006-05-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Desktop security",
	"summary": "",
	"abstract": "In aspects, interactions between processes of a desktop are allowed or denied based on security data. The security data may comprise a first bitmap that indicates whether a requesting process is allowed to cause an action to occur, a second bitmap that indicates whether a process is protected from having an action occur, and a third bitmap that indicates whether the requesting process may override protection, if any, in causing the action to occur.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07600264",
	"publication_date": "2009-10-06",
	"application_number": "11193312",
	"application_date": "2005-07-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Determining a maximal set of dependent software updates valid for installation",
	"summary": "",
	"abstract": "Described is a system and method by which a collection of software packages for installing (e.g., on an embedded computing device) are reviewed for their dependent relations, whereby it is possible to choose a maximal set of install possibilities to allow for maximal version updates for any given package in the fewest update steps possible, while honoring package dependency constraints. An update validation process organizes and validates update packages that have been downloaded to a device, and builds a graph for each group. The graph data including paths between updates are processed to validate the updates and to determine a minimal and optimal set of packages that can be applied to the existing image on the device to produce the desired update, with the least amount of weight (cost) when more than one path can be used to get to the same version.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07568195",
	"publication_date": "2009-07-28",
	"application_number": "10837176",
	"application_date": "2004-05-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Direct-update software transactional memory",
	"summary": "",
	"abstract": "A transactional memory programming interface allows a thread to directly and safely access one or more shared memory locations within a transaction while maintaining control structures to manage memory accesses to those same locations by one or more other concurrent threads. Each memory location accessed by the thread is associated with an enlistment record, and each thread maintains a transaction log of its memory accesses. Within a transaction, a read operation is performed directly on the memory location, and a write operation is attempted directly on the memory location, as opposed to some intermediate buffer. The thread can detect inconsistencies between the enlistment record of a memory location and the thread's transaction log to determine whether the memory accesses within the transaction are not reliable and the transaction should be re-tried.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07536517",
	"publication_date": "2009-05-19",
	"application_number": "11192784",
	"application_date": "2005-07-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Display attribute modification",
	"summary": "",
	"abstract": "A system and process for ensuring the smooth flow of electronic ink is described. Dynamic rendering is give priority over other event handlers. Priority may be the use of one or more queues to order when events occur and may be performing dynamic rendering prior to other steps.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07515139",
	"publication_date": "2009-04-07",
	"application_number": "10986801",
	"application_date": "2004-11-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Display extension using terminal clients",
	"summary": "",
	"abstract": "Extending graphical information to a remote computing system such that a multiple monitor configuration can be implemented for the first computing device is illustrated. The multiple monitors include a display connected to the first computing device and one or more displays connected to other computing devices. A remote session is established between the first computing device and the second computing device. Graphics commands are generated for first and second display drivers at the first computing device as if a multi-display configuration is active at the first computing device. The first display driver is associated with a display at the first computing device. The second display driver doesn't have an associated display at the first computing device. Graphics are displayed from the graphics commands for the first display driver at the display at the first computing device. Graphics commands for the second display driver are remoted to the second computing device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07633483",
	"publication_date": "2009-12-15",
	"application_number": "11426750",
	"application_date": "2006-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed internet user experience monitoring system",
	"summary": "",
	"abstract": "Geographically distributed data-gathering client computers are connected to the Internet in the same manner as typical users (for example, via local dial-up connections). The data-gathering client computers poll a central server (the u201cUserMonu201d server) for a target site to access. After receiving the address of a target site from the UserMon server, the data-gathering client computers access the target site and obtain performance-parameter values indicative of the quality of their respective Internet connections to the target site and/or the performance of the target site itself. Each data-gathering client computer then pushes the performance-parameter values back to the u201cUserMonu201d server for analysis.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07542429",
	"publication_date": "2009-06-02",
	"application_number": "10979947",
	"application_date": "2004-11-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed sensing techniques for mobile devices",
	"summary": "",
	"abstract": "Methods and apparatus of the invention allow the coordination of resources of mobile computing devices to jointly execute tasks. In the method, a first gesture input is received at a first mobile computing device. A second gesture input is received at a second mobile computing device. In response, a determination is made as to whether the first and second gesture inputs form one of a plurality of different synchronous gesture types. If it is determined that the first and second gesture inputs form the one of the plurality of different synchronous gesture types, then resources of the first and second mobile computing devices are combined to jointly execute a particular task associated with the one of the plurality of different synchronous gesture types.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07532196",
	"publication_date": "2009-05-12",
	"application_number": "10697056",
	"application_date": "2003-10-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed sensing techniques for mobile devices",
	"summary": "",
	"abstract": "Methods and apparatus of the various embodiments allow the coordination of resources of devices to jointly execute tasks or perform actions on one of the devices. In the method, a first gesture input is received at a first mobile computing device. A second gesture input is received at a second mobile computing device. In response, a determination is made as to whether the second gesture is accepted at the initiating device. If it is determined that the second gesture inputs is accepted, then resources of the devices are combined to jointly execute a particular task associated with the shared resources.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07636794",
	"publication_date": "2009-12-22",
	"application_number": "11263401",
	"application_date": "2005-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed system simulation: slow message relaxation",
	"summary": "",
	"abstract": "Distributed system simulation is enhanced by extending the simulation window. In a described implementation, the simulation window extension is facilitated with a slow message relaxation scheme. For example, especially when the simulation window is extended, slow unscheduled events can arrive at a logical process with a timestamp that is prior to (e.g., less than) the local time of a receiving logical process that is participating in a simulation. To ameliorate issues created by a slow unscheduled message and its corresponding slow unscheduled event, a current logical time of the receiving logical process is substituted for the original timestamp of the slow unscheduled event to transform it into a punctual unscheduled event.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07590519",
	"publication_date": "2009-09-15",
	"application_number": "11269133",
	"application_date": "2005-11-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic generation of WSDL documents based on database metadata",
	"summary": "",
	"abstract": "Methods for generating WSDL (u201cWeb Services Description Languageu201d) documents to describe types and function entry points based on database metadata are disclosed. Such a method may include resolving the endpoint metadata by querying based on parameters about the request collected by the HTTP stack. From the endpoint metadata, the list of entry points which have been mapped may be collected. For each entry point, attributes about the entry point may be collected, and metadata for the types of parameters to the entry point may be looked up. A first collection of unique XML schema namespaces may be created, with one entry corresponding to each unique XML schema namespace for any arbitrary user-defined XML Schema definitions required by a parameter to an entry point. A second collection of unique XML schema namespaces may be created, with one entry corresponding to each unique XML schema namespace for an entry point. The wrapper elements for the WSDL document and any global XML schema definitions may be emitted. The first collection of unique XML schema namespaces may be iterated through, and the XML schema definitions may be emitted. The second collection of unique XML schema namespaces may be iterated through. For each entry point in the second collection, the XML schema definition for the entry point may be emitted, including any XML schema definitions for parameters to the entry point. After emitting all of the XML schema definitions, the entry points may be iterated through, and WSDL document definitions for messages, port types, and bindings for each entry point may be emitted. After emitting all of the message definitions, the WSDL document may be completed by emitting service entry definitions for the endpoint.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07590935",
	"publication_date": "2009-09-15",
	"application_number": "11177077",
	"application_date": "2005-07-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic interaction menus from natural language representations",
	"summary": "",
	"abstract": "Natural language dialog elements may be dynamically generated in a virtual world when an interaction is initiated between a user and a computer-controlled character. The dialog elements may be generated by combining abstract semantic representations from a knowledgebase of a computer-controlled character involved in the interaction, with abstract semantic representations from a current state of the virtual world. For example, the abstract semantic representations from the current state of the virtual world may describe the user's progress in accomplishing a set of interrelated goals. A program enables developers of games and other virtual worlds to provide dynamic dialog generation after simply entering natural language descriptions of potential game states and computer-controlled character knowledge. Compared to manually scripting dialog in advance, enabling a program to dynamically generate dialog elements provides for exponentially increasing variety, flexibility, and apparent intelligence in computer-controlled character dialog.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07627536",
	"publication_date": "2009-12-01",
	"application_number": "11451909",
	"application_date": "2006-06-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic negotiation of encryption protocols",
	"summary": "",
	"abstract": "Systems and methods for negotiating an encryption algorithm may be implemented in the context of encryption-based authentication protocols. The invention has the added benefit of providing a system an method that need not interfere with the standard operation of authentication protocols. A first computer, or client computer, can send a negotiation request to a second computer, or server computer. The negotiation request can specify that the client computer supports a selected encryption algorithm. In response, the server computer can return a subsession key for encryption using the selected encryption algorithm. Both client and server may then switch to encryption in the selected encryption algorithm, using the subsession key to encrypt future communications.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07591012",
	"publication_date": "2009-09-15",
	"application_number": "10791035",
	"application_date": "2004-03-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic out-of-process software components isolation for trustworthiness execution",
	"summary": "",
	"abstract": "Preventing uncontrolled access to an execution environment of a first component object by a second component object. A system includes a memory area storing the first component object, the second component object, and one or more predefined properties associated with the second component object. The system comprises a processor configured to receive a request from the first component object stored in the memory area to create the second component object stored in the memory area. The first component object executes in a first execution environment and the request specifies a requested execution environment for the second component object. The processor is also configured for analyzing the predefined properties stored in the memory area to determine an execution environment privilege associated with the second component object. The processor is configured for granting the received request as a function of the determined execution environment privilege.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07587594",
	"publication_date": "2009-09-08",
	"application_number": "10929339",
	"application_date": "2004-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic self-configuration for ad hoc peer networking",
	"summary": "",
	"abstract": "A device control model provides an integrated set of addressing, naming, discovery and description processes that enables automatic, dynamic and ad-hoc self-setup by devices to interoperate with other devices on a network. This permits a computing device when introduced into a network to automatically configure so as to connect and interact with other computing devices available on the network, without a user installation experience and without downloading driver software or persisting a configuration setup for connecting and interacting with such other computing devices. Upon completing interaction with such other devices, the computing device automatically releases the setup for such other devices so as to avoid persistent device configurations that might create a configuration maintenance and management burden.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07558846",
	"publication_date": "2009-07-07",
	"application_number": "11071700",
	"application_date": "2005-03-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic self-configuration for ad hoc peer networking",
	"summary": "",
	"abstract": "A device control model provides an integrated set of addressing, naming, discovery and description processes that enables automatic, dynamic and ad-hoc self-setup by devices to interoperate with other devices on a network. This permits a computing device when introduced into a network to automatically configure so as to connect and interact with other computing devices available on the network, without a user installation experience and without downloading driver software or persisting a configuration setup for connecting and interacting with such other computing devices. Upon completing interaction with such other devices, the computing device automatically releases the setup for such other devices so as to avoid persistent device configurations that might create a configuration maintenance and management burden.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07602756",
	"publication_date": "2009-10-13",
	"application_number": "11071435",
	"application_date": "2005-03-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic web page behaviors",
	"summary": "",
	"abstract": "A method and system for rendering dynamic web page images on a display is disclosed. Code is encapsulated in an external behavior component for affecting the behavior of elements inserted into an HTML document. A simple reference is attached to the element in the document to associate the element with the external behavior component. When the document is provided to a renderer and the renderer parses the element in the document, the renderer accesses the external component to modify a behavior of the page image. Multiple documents can reuse external behavior components, and an element can be associated with multiple external behavior components. The associations between elements and external behavior components may be maintained in cascading style sheets, inline with the elements, and in various formats.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07594166",
	"publication_date": "2009-09-22",
	"application_number": "09316897",
	"application_date": "1999-05-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Efficient knowledge representation in data synchronization systems",
	"summary": "",
	"abstract": "A variety of flexible conflict resolution policies are provided for loosely coupled devices to implement according to a variety of different synchronization scenarios. Choosing a conflict resolution policy, such as u201cMost Frequent Updater,u201d u201cPriority,u201d u201cPerCent Change,u201d u201cArbiter Deadlock Resolution,u201d etc., enables devices to select how and when to resolve such synchronization conflicts. In addition, with reference to a conflict log, a user or synchronizing application can roll back synchronization state to a time before a conflict may have arisen, so that the user or application can undo a resolution of a conflict and/or the user or application can apply an alternative conflict resolution policy moving forward from that time.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07620659",
	"publication_date": "2009-11-17",
	"application_number": "11673415",
	"application_date": "2007-02-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Efficient linking and loading for late binding and platform retargeting",
	"summary": "",
	"abstract": "A method of producing an executable image from an object file without shared library support from the operating system, wherein the executable image requires a shared library file in order to resolve at least one of the symbols called for in the object file. A method of optimizing the loading of a previously linked file into working memory in a computer for executing in a single address space of the working memory, the file containing an instruction to make an indirect jump to a location in a shared library through an import section of the file. A method for optimizing the loading of a previously linked file into working memory in a computer for executing in a single address space of the working memory, the file containing plural sections with number-filled padding between the end of each section and a succeeding page boundary. A method of optimizing the loading of a previously linked file into working memory in a computer for executing in a memory sharable with other executables. This method includes selecting a portion of code in the previously linked file, removing the portion of code from the previously linked file, and constructing a dynamically linked library file containing the portion of the code, the dynamically linked library file being available to plural files including the previously linked file. A method of converting an image which has been previously linked for executing in an unshared memory into an image optimized for use with virtual memory.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07565665",
	"publication_date": "2009-07-21",
	"application_number": "11136278",
	"application_date": "2005-05-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Efficient linking and loading for late binding and platform retargeting",
	"summary": "",
	"abstract": "Methods of optimizing the loading of a previously linked file into working memory in a computer for executing in a memory sharable with other executables, and converting an image which has been previously linked for executing in an unshared memory into an image optimized for use with virtual memory.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07543309",
	"publication_date": "2009-06-02",
	"application_number": "10923355",
	"application_date": "2004-08-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic ink processing",
	"summary": "",
	"abstract": "Systems, methods, and computer-readable media for making rich, flexible, and more natural electronic ink annotations in an electronic document include creating a first context node associated with a first portion of a base portion of an electronic document; creating a second context node associated with an annotation to the base portion; and linking the second context node with the first context node.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07533338",
	"publication_date": "2009-05-12",
	"application_number": "10644900",
	"application_date": "2003-08-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic ink processing",
	"summary": "",
	"abstract": "A method of reconciling a first data structure with a second data structure that is a subsequently modified version of the first data structure. Initially, each node in the first data structure for which a change has been made to a corresponding node in the second data structure is accessed. For each accessed node, a determination is made as to whether the change made to the corresponding node in the second data structure creates a collision with the first data structure. If the change made to the corresponding node in the second data structure does not create a collision with the first data structure, then the change is made to the accessed node in the first data structure.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07502805",
	"publication_date": "2009-03-10",
	"application_number": "10646472",
	"application_date": "2003-08-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic ink processing",
	"summary": "",
	"abstract": "A method of reconciling a first data structure with a second data structure that is a subsequently modified version of the first data structure. Initially, each node in the first data structure for which a change has been made to a corresponding node in the second data structure is accessed. For each accessed node, a determination is made as to whether the change made to the corresponding node in the second data structure creates a collision with the first data structure. If the change made to the corresponding node in the second data structure does not create a collision with the first data structure, then the change is made to the accessed node in the first data structure.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07502812",
	"publication_date": "2009-03-10",
	"application_number": "11423030",
	"application_date": "2006-06-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic ink processing",
	"summary": "",
	"abstract": "A method of reconciling a first data structure with a second data structure that is a subsequently modified version of the first data structure. Initially, each node in the first data structure for which a change has been made to a corresponding node in the second data structure is accessed. For each accessed node, a determination is made as to whether the change made to the corresponding node in the second data structure creates a collision with the first data structure. If the change made to the corresponding node in the second data structure does not create a collision with the first data structure, then the change is made to the accessed node in the first data structure.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07631001",
	"publication_date": "2009-12-08",
	"application_number": "11423020",
	"application_date": "2006-06-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic ink processing and application programming interfaces",
	"summary": "",
	"abstract": "An application programming interface instantiates an ink analyzer object that receives document data for a document containing electronic ink content from a software application hosting the document and running on a first processing thread. The ink analyzer object then employs the first thread to make a copy of the document data, provides the copy of the document data to an electronic ink analysis process, and returns control of the first processing thread to the analysis process. After the analysis process has analyzed the electronic ink, the ink analyzer object reconciles the results of the analysis process with current document data for the document.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07616333",
	"publication_date": "2009-11-10",
	"application_number": "11249768",
	"application_date": "2005-10-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Element persistent identification",
	"summary": "",
	"abstract": "Identifier information is generated for a user interface element of interest within a user interface of a computer program based on a description of a hierarchical element path comprising, e.g., some combination of parent elements that the user interface element inherits from, class names of user interface elements, module names of application programs in the element path, and sibling order information. Process identifiers may also be added to distinguish between user interface elements of two different process instances of the same program. Unlike more fragile identifiers, such an element path identifier persists across instances of the computer program, across different computers, across different builds of the program, etc. Converting between a user-defined data type and a string type and vice versa also is provided.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07607110",
	"publication_date": "2009-10-20",
	"application_number": "10692923",
	"application_date": "2003-10-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Embedded interaction code decoding for a liquid crystal display",
	"summary": "",
	"abstract": "A method and system for decoding data on a medium that is captured by an input device is described. The method decodes a symbol design, such as an embedded interaction code (EIC), on a display screen, such as a liquid crystal display (LCD). An image that is captured by an input device, such as a universal pen-type input device with a camera, is received. The captured image is processed to output an extracted bit stream. Position data and/or metadata information is decoded from the extracted bit stream and a position of the captured image with respect to a screen of the LCD is determined based upon the decoded position data. The EIC pattern may be recognized from LCD pixel grids and a bit stream of EIC bits may be extracted based upon the recognized EIC pattern.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07528848",
	"publication_date": "2009-05-05",
	"application_number": "11169744",
	"application_date": "2005-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Embedding a pattern design onto a liquid crystal display",
	"summary": "",
	"abstract": "A method and system for presenting data on a medium for capture by an input device is described. The method embeds a symbol design, such as an embedded interaction code (EIC), in an image on a display screen, such as a liquid crystal display (LCD). A grid with a plurality of pixels defines a size of an EIC pattern on an LCD. An area of the grid is used to embed position data and/or metadata information. The area may be defined by a sub-pixel of the plurality of pixels and/or the edges of the grid itself. The sub-pixel with the EIC pattern may be configured to have a grey value based upon a color of an underlying image associated with an application program being displayed on the LCD. The method also allows for decoding of the position data and/or metadata information in the EIC pattern on the LCD.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07619607",
	"publication_date": "2009-11-17",
	"application_number": "11169889",
	"application_date": "2005-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enabling broadcast of multiple data configurations",
	"summary": "",
	"abstract": "A broadcast data server enables broadcast of multiple data configurations. The broadcast data server maintains configuration definitions that define how broadcast data may be configured for presentation to a viewer. The broadcast data server also maintains region definitions that identify regions that may be associated with client devices for receiving broadcast data. The configuration definitions are mapped to region definitions, enabling a client device in a particular region to selectively receive broadcast data according to any one of multiple data configurations that are associated with the particular region.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07546383",
	"publication_date": "2009-06-09",
	"application_number": "10339685",
	"application_date": "2003-01-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enhanced application behavior in the presence of application sharing",
	"summary": "",
	"abstract": "An approach for providing enhanced application behavior in the presence of application sharing is provided. An application program interface (u201cAPIu201d) allows an application being shared in a collaborative environment to be aware of its application sharing status. An application developer can incorporate the API into an application program. Then, when an instance of the application is executing, an application sharing host can use the API to notify the instance of the application whenever the instance of the application is being shared. In addition, the application sharing host can also use the API to provide the instance of the application being shared the identity of a user that is in control of the instance of the application being shared.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07568005",
	"publication_date": "2009-07-28",
	"application_number": "11218294",
	"application_date": "2005-09-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Event consumers for an event management system",
	"summary": "",
	"abstract": "An event management system includes an email consumer for handling email, a paging consumer, an active scripting consumer, a log file consumer, an event log consumer, and a command line consumer. The events in the event management system are represented as objects and each consumer is represented as a class. The system also includes an event forwarding consumer to forward events. The event management system allows the creation of an instance of an event filter which filters events based on event filter properties. The system also allows the creation of an instance of an event consumer which defines an action and creation of a binding between the instance of the event filter and the instance of the event consumer such that the binding includes properties identifying the instance of the event filter and the instance of the event consumer.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07502845",
	"publication_date": "2009-03-10",
	"application_number": "11428282",
	"application_date": "2006-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Expression-based web logger for usage and navigational behavior tracking",
	"summary": "",
	"abstract": "Configurably storing data in a plurality of files based on expressions and conditions associated with the data. Logging software enables tracking of the navigation pattern of users for selected network properties under specified conditions. The logging software is configurable such that most current and future logging specifications may be fulfilled without any code changes to the logging software.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07567979",
	"publication_date": "2009-07-28",
	"application_number": "10748716",
	"application_date": "2003-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Extending hierarchical synchronization scopes to non-hierarchical scenarios",
	"summary": "",
	"abstract": "Extending hierarchical synchronization (sync) scopes to non-hierarchical scenarios may involve a method for synchronizing differently organized data stores comprising mapping different physical organizations to similar logical organizations and utilizing an organization-based synchronization algorithm to synchronize the differently organized stores. Also, the uniqueness constraints of the organizations may be preserved as well as the parent-child ordering constraints of the organizations.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07577691",
	"publication_date": "2009-08-18",
	"application_number": "11498594",
	"application_date": "2006-08-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Extensible architecture for project development systems",
	"summary": "",
	"abstract": "A software-development system or versioning system has a collection of modules for performing individual development functions such as document editing, keyword processing, and private-copy management. Each module has an interface compatible with that of the others, so that modules can be added to or substituted for the original modules, if the new modules conform to the interface. The architecture of this system supports the performance of development actions such as document merging and keyword expansion at any location within the system. The system operates upon documents and files as objects in an object space, rather than in name spaces.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07631298",
	"publication_date": "2009-12-08",
	"application_number": "11171768",
	"application_date": "2005-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Extensible command line parsing",
	"summary": "",
	"abstract": "An extensible generic command line parser may receive a list of options associated with an application and a command line to parse. A new command line option may be added to the options that can be parsed by adding the new command line option to the list of options. By receiving a modifiable list of valid options from an application, the parser is extensible, that is, instead of having to modify or recode the parser when a new option is added to the application, the new option may be added to the option file. When the parser receives the option list with the new option or options, any option in the file (including any new ones) may be automatically parsable by the parser.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07617492",
	"publication_date": "2009-11-10",
	"application_number": "10878553",
	"application_date": "2004-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Extensible security architecture for an interpretive environment",
	"summary": "",
	"abstract": "The Techniques and Mechanisms Described Herein are Directed to an Extensible security architecture that provides a security mechanism for minimizing security problems within interpretive environments. The extensible security architecture comprises a script engine configured to process a script and a security manager configured to monitor the processing of the script based on a security policy. The security manager determines whether to open an assembly associated with a command within the script, whether to process the command, whether to allow certain input to the command, and the like. The security policy may be implemented by overriding one or more methods of a base security class that are called when processing the script. The input may be an object passed via an object-based pipeline.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07631341",
	"publication_date": "2009-12-08",
	"application_number": "11118971",
	"application_date": "2005-04-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Facilitating performance analysis for processing",
	"summary": "",
	"abstract": "Facilitating performance analysis for processing includes capturing a state of a processing unit and capturing a plurality of commands submitted to the processing unit for processing. Both the captured state and the captured plurality of commands are also saved. The saved state and commands can be used for analysis, such as by processing only a subset of the commands or processing a modified set of the commands.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07511712",
	"publication_date": "2009-03-31",
	"application_number": "11427964",
	"application_date": "2006-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Fault detection and diagnosis",
	"summary": "",
	"abstract": "A network troubleshooting framework is described. In an implementation, a method includes detecting discrepancy in operation of a network by supplying data that describes the network to a network simulation so that the network simulation provides an estimation of network performance. A determination is made as to whether the estimation of network performance differs from observed network performance of the network. A root cause of the discrepancy is diagnosed by injecting one or more of a plurality of faults into the network simulation until the estimation of network performance approximates the observed network performance.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07583587",
	"publication_date": "2009-09-01",
	"application_number": "10881695",
	"application_date": "2004-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "File sharing in P2P group shared spaces",
	"summary": "",
	"abstract": "A computer implemented method and system enable users to share files in a server-less shared space. By providing access to such spaces via a visual presentation, the system renders content available for access by other group members. Access is sometimes provided through propagation of metadata or other uniquely identifying indicia associated with the shared space to all group members.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07567987",
	"publication_date": "2009-07-28",
	"application_number": "10692501",
	"application_date": "2003-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "File system write filtering for selectively permitting or preventing data from being written to write-protected storage",
	"summary": "",
	"abstract": "File system write filters are provided which can selectively permit or prevent data from being written-protected storage media. The write filter utilized volatile cache memory to store data that is requested to be written to storage media by applications programming interface function calls. In one aspect, if the particular data is requested to be written to a file that is a file identified on the file exclusion list, the data can be written to the file in non-volatile storage. Otherwise, the particular data is written to volatile cache memory. In another aspect, the write filters can be utilized on computing devices to create a stateless computing device wherein data is written to volatile cache memory in response to write function calls. Upon rebooting, any data that was saved to the volatile cache memory is discarded and the computing device is restored to its original state.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07640404",
	"publication_date": "2009-12-29",
	"application_number": "11263469",
	"application_date": "2005-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Flexible network load balancing",
	"summary": "",
	"abstract": "In an exemplary media implementation, one or more processor-accessible media include processor-executable instructions that, when executed, enable a system to facilitate actions including: operating network load balancing infrastructure in a first configuration; scaling out the network load balancing infrastructure; and operating the scaled-out network load balancing infrastructure in at least one other configuration. In another exemplary media implementation, one or more processor-accessible media include processor-executable instructions that, when executed, enable a system to be configured such that different percentages of system resources may be allocated to different network-load-balancing functions. In one embodiment, the scaling out includes moving at least a portion of network-load-balancing functionality from a device that executes host functionality to another device, that does not execute host functionality and routing network traffic from the other device to the host functionality executing on the device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07590736",
	"publication_date": "2009-09-15",
	"application_number": "10610506",
	"application_date": "2003-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Flow token",
	"summary": "",
	"abstract": "Managing and securing process flow. A network server receives user data and retrieves secured flow data from the user data. A user interface is rendered at the client in response to the user data. The flow data is based on a web request from the client and identifies the process flow and a position within the process flow. The request initiates the process flow on a data communication network and the user interface has a hidden form field that contains the retrieved flow data. The client posts user-supplied information in addition to the flow data via the user interface for verifying the web request.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07565538",
	"publication_date": "2009-07-21",
	"application_number": "10818431",
	"application_date": "2004-04-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Focus scope",
	"summary": "",
	"abstract": "Aspects of the subject matter described herein relate to directing focus to elements of a graphical user interface in response to focus events. In aspects, a program may include multiple focus scopes each of which may include elements capable of receiving keyboard input. When an element receives keyboard focus, information regarding the element is updated to indicate that the element has or had keyboard focus. Thereafter, focus scope may be changed to a focus scope other than the one including the element. When changing the focus scope back to the focus scope that includes the element, the information may be used to give the element keyboard focus.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07631272",
	"publication_date": "2009-12-08",
	"application_number": "11272665",
	"application_date": "2005-11-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Framework for modeling and providing runtime behavior for business software applications",
	"summary": "",
	"abstract": "A business software framework supports business software applications. The framework includes a class library component that has a plurality of class libraries of business components, including business entities and business processes. The framework also includes an application framework that has a programming model, the programming model providing a set of application services for relating the business components to one another, and for providing desired services relative to the business components in order to obtain the business application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07577934",
	"publication_date": "2009-08-18",
	"application_number": "10389686",
	"application_date": "2003-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Framework for seamlessly authoring and editing workflows at design and runtime",
	"summary": "",
	"abstract": "Modifying a componentized workflow model during execution of the workflow. Each step of the workflow is modeled as an activity that has metadata to describe design time aspects, compile time aspects, and runtime aspects of the workflow step. A user selects and arranges the activities to create the workflow via user interfaces or application programming interfaces. Metadata is associated with each of the activities in the workflow. During execution of the workflow, the user modifies the metadata to affect execution of the workflow without recompiling the workflow.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07565640",
	"publication_date": "2009-07-21",
	"application_number": "11047275",
	"application_date": "2005-01-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Full-text index module consistency checking",
	"summary": "",
	"abstract": "Consistency between the components used to generate and query a full-text index is determined and if a mismatch is detected, an error may be surfaced. A structure including information associated with each component used to build an index is programmatically compared with currently available components. The structure may be interrogated to enumerate the resources bound to a particular index. The enumeration of bound resources facilitates determination of what indexes (if any) must be regenerated for consistency as a result of a component upgrade or a move to another system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07509252",
	"publication_date": "2009-03-24",
	"application_number": "10743153",
	"application_date": "2003-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Fuzzy image comparator",
	"summary": "",
	"abstract": "A system and method for improved image comparison is provided. An adjustable tolerance level may be set for comparing the images, and filtering may be applied to the images, for example, to suppress high frequencies in the images or to enhance low frequencies in the images. Furthermore, a geometrical transform, such as a 2D affine transform, may be applied to one of the images. The pixels of one of the images may be compared with corresponding pixels of another image to detect differences between the pixels compared. Then the outcome of comparing the pixels of the images may be determined by comparing the differences detected with the tolerance level set. The tolerance may be set by selecting one of a set of predefined tolerance levels, each of which may represent a different degree of tolerance to be used in comparison of the images.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07477785",
	"publication_date": "2009-01-13",
	"application_number": "10993538",
	"application_date": "2004-11-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generating programmatic interfaces from natural language expressions of authorizations for request of information",
	"summary": "",
	"abstract": "An embodiment of the present invention is a technique for processing an authorization rule. An object type is created for a return type of an operation in the rule authorizing a request for information. A current container is established. A propositional expression in the rule is processed to record the object type as a resulting context from the propositional expression in the current container.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07620935",
	"publication_date": "2009-11-17",
	"application_number": "10837299",
	"application_date": "2004-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generation and retrieval of incident reports",
	"summary": "",
	"abstract": "Generation and retrieval of a report which describes an incident encountered during attempted user interaction with content over a network is described. In a implementation, a method includes monitoring user interaction with content over a network. When an incident is detected from the monitoring, a report is generated which includes a description of the incident and a report identifier (ID) for communication to the user for retrieval of the report.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07478095",
	"publication_date": "2009-01-13",
	"application_number": "11039253",
	"application_date": "2005-01-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generic emulator of devices in a device communications protocol",
	"summary": "",
	"abstract": "The generic device emulator provides an operational emulation of the behavior of any desired device within a device connectivity or other communications protocol as specified in a description of the respective device. This facilitates development and implementation of devices within a device connectivity architecture based on the protocol, since the user has only to define the description of the device. The generic device emulator provides default behaviors for a set of capabilities defined in the description for the device, which can be over-ridden or augmented by user-provided implementation of specific behavior for a capability. The generic device emulator also permits the user to inject defect behaviors, such as to introduce defects in the device's implementation of the protocol.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07603266",
	"publication_date": "2009-10-13",
	"application_number": "10676350",
	"application_date": "2003-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generic security claim processing model",
	"summary": "",
	"abstract": "A system for processing multiple types of security schemes includes a server having a claims engine that extracts claim(s) from security token(s) and maps extracted claims to other claims. The term claim as used in this context is a statement about a token's subject. The claims engine can extract claim(s) from one or more different types of security tokens corresponding to the multiple security schemes. These extracted claim(s) can then be selectively mapped to other claims using mapping information that is accessible to the server. The security decision can then be based on the extracted and/or derived claim(s) rather than tokens. This system can thereby support multiple security schemes and simplify the security process for the user.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07640573",
	"publication_date": "2009-12-29",
	"application_number": "10780274",
	"application_date": "2004-02-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generic user interface command architecture",
	"summary": "",
	"abstract": "Certain aspects of a generic user interface command architecture allow an application to host commands for presentation on a computing device. The commands can be written by the same designer or author as the application, or alternatively by other parties (e.g., by a third-party developer). Other aspects of the generic UI command architecture describe an application programming interface (API) that can be used to allow the application to host the commands. Other aspects of the generic UI command architecture describe an activation mechanism by which registered commands can be activated by an application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07636922",
	"publication_date": "2009-12-22",
	"application_number": "10838462",
	"application_date": "2004-05-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Grammatically correct contraction spelling suggestions for french",
	"summary": "",
	"abstract": "A method and product are provided that identify properly spelled words from an input string. Separate lexical entries are identified for different parts of an input word. Grammatical information associated with one of the lexical entries is examined to determine if it satisfies a grammatical constraint associated with another of the lexical entries. A properly spelled word is formed by combining the separate lexical entries if the grammatical information satisfies the constraint. Under some embodiments of the invention, the separate lexical entries are identified by performing a first search of a lexicon using a first part of the input string and by performing a second search of the lexicon using a second part of the input string.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07599828",
	"publication_date": "2009-10-06",
	"application_number": "11069070",
	"application_date": "2005-03-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hardware accelerated anti-aliased primitives using alpha gradients",
	"summary": "",
	"abstract": "Systems and methods are provided for providing anti-aliasing by introducing a falloff area around a graphics object to be rendered. The falloff area is shaded, using Gouraud shading or texture mapping to reduce the aliasing effects of the graphics object. The outside edge of the falloff area is set to be fully transparent, and the inside edge to an opacity matching the outer edge of the graphics object being rendered. To counteract bloating effects, the graphics object is shrunk by half the width of the falloff area. While the width of the falloff area may vary, generally, the width of the falloff area stays constant. In one embodiment, this width corresponds to the edge or diagonal of the square area mapped to each pixel.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07542049",
	"publication_date": "2009-06-02",
	"application_number": "11377035",
	"application_date": "2006-03-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hardware protection",
	"summary": "",
	"abstract": "Tampering with pieces of software is inhibited. Hardware protection prevents hackers from forcing various pieces of software from running on unauthorized pieces of hardware. The obfuscation of a software image so as to becloud the comprehension of hackers in reverse engineering pieces of software comprising the software image is provided. Image verification ensures the originality of the pieces of software to be installed.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07631360",
	"publication_date": "2009-12-08",
	"application_number": "11061411",
	"application_date": "2005-02-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Head pose tracking system",
	"summary": "",
	"abstract": "Video images representative of a conferee's head are received and evaluated with respect to a reference model to monitor a head position of the conferee. A personalized face model of the conferee is captured to track head position of the conferee. In a stereo implementation, first and second video images representative of a first conferee taken from different views are concurrently captured. A head position of the first conferee is tracked from the first and second video images. The tracking of head-position through a personalized model-based approach can be used in a number of applications such as human-computer interaction and eye-gaze correction for video conferencing.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07515173",
	"publication_date": "2009-04-07",
	"application_number": "10154892",
	"application_date": "2002-05-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Heuristic determination of user origin",
	"summary": "",
	"abstract": "A system and method for independently determining the geographical location of a user accessing a networked system. The method may include gathering a plurality of inputs about the user's geographic location; weighting each input based on whether said input identifies a likelihood of true geographic location; determining whether each input verifies a geographic location specified by the user; and summing weights of the input factors verifying the specified geographic location. A system for independently determining the geographical location of a user includes a user login routine, a heuristic user geographic location determination engine, and at least one data store including a user profile record having a user specified geographic location.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07636785",
	"publication_date": "2009-12-22",
	"application_number": "10990703",
	"application_date": "2004-11-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hidden conditional random field models for phonetic classification and speech recognition",
	"summary": "",
	"abstract": "A method and apparatus are provided for training and using a hidden conditional random field model for speech recognition and phonetic classification. The hidden conditional random field model uses feature functions, at least one of which is based on a hidden state in a phonetic unit. Values for the feature functions are determined from a segment of speech, and these values are used to identify a phonetic unit for the segment of speech.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07627473",
	"publication_date": "2009-12-01",
	"application_number": "10966047",
	"application_date": "2004-10-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hierarchical locking in B-tree indexes",
	"summary": "",
	"abstract": "Portions of a B-tree index in a database are locked for concurrency control. In one example, hierarchical lock modes are provided that permit locking a key, a gap between the key and the next key, and a combination of the key and the gap. In another example, key range locking may be applied to the B-tree index using locks on separator keys of index nodes. In another example, key range locking may be applied to the B-tree index using locks on key prefixes.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07577658",
	"publication_date": "2009-08-18",
	"application_number": "11539606",
	"application_date": "2006-10-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "High-quality gradient-corrected linear interpolation for demosaicing of color images",
	"summary": "",
	"abstract": "A gradient-corrected linear interpolation method and system for the demosaicing of color images. The method and system compute an interpolation using some a current technique (preferably a bilinear interpolation technique to reduce computational complexity), compute a correction term (such as a gradient of a desired color at a given pixel), and linearly combine the interpolation and the correction term to produce a corrected, high-quality interpolation of a missing color value at a pixel. The correction term may be a gradient correction term computed from the current color of the current pixel. This gradient is directly used to affect and correct the estimated color value produced by the prior art interpolation technique. The gradient-corrected linear interpolation method and system may also apply a gradient-correction gain to the gradient correction term. This gradient-correction gain affects the amount of gradient correction that is applied to the interpolation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07502505",
	"publication_date": "2009-03-10",
	"application_number": "10801450",
	"application_date": "2004-03-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Highly componentized system architecture with loadable virtual memory manager",
	"summary": "",
	"abstract": "The present invention is directed to a loadable virtual memory manager, and generally to a computer operating system capable of supporting application programs running in a computer having a working memory, the computer operating system including a kernel resident in the working memory at run time, and a loadable virtual memory manager resident at link time outside of the working memory and dynamically loadable into the working memory at run time upon demand of one of the application programs. The kernel includes a loader for loading the virtual memory manager into the working memory in response to a demand from one of the application programs. The computer is able to access a storage memory separate from the working memory, the loadable virtual memory manager residing at link time in the storage memory. The loader loads the virtual memory manager from the storage memory to the working memory. The loadable virtual memory manager is removable from the working memory upon lack of demand therefor by the application programs.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07584473",
	"publication_date": "2009-09-01",
	"application_number": "11933198",
	"application_date": "2007-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Image processing system for digital collage",
	"summary": "",
	"abstract": "It is required to provide a framework for an automated process for forming a visually appealing collage from a plurality of input images. It is required to provide a framework for this type of automated process which is flexible and robust and which can easily be interfaced to a related software application. An image synthesis framework is provided with a modular architecture having a first module, a plurality of prior compute modules and an image synthesis module. The first module provides an application programming interface, the prior compute modules compute information about input images, and the image synthesis module uses the computed information together with the input images to form a digital collage.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07532771",
	"publication_date": "2009-05-12",
	"application_number": "11609802",
	"application_date": "2006-12-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Image verification",
	"summary": "",
	"abstract": "Tampering with pieces of software is inhibited. Software obfuscation inhibits reverse engineering by hackers by manipulating names of functions and adding jump instructions into various pieces of software. The obfuscation of a software image so as to becloud the comprehension of hackers in reverse engineering pieces of software comprising the software image is provided. Image verification ensures the originality of the pieces of software to be installed.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07577997",
	"publication_date": "2009-08-18",
	"application_number": "11061792",
	"application_date": "2005-02-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Importing and exporting markup language data in a spreadsheet application document",
	"summary": "",
	"abstract": "Extensible markup language data in an extensible markup language (such as XML) is associated with a schema file for defining data types and data type definitions for applying data to the document. A map is prepared that relates that any extensible markup data applied to the document back to corresponding elements or attributes defined in the associated schema file. When the document is imported into a spreadsheet application grid, the data map is parsed to find XPATHs which determine the location, data types and user data for each cell or list object in the document related to the schema file. The cells and lists are populated with the extensible markup data and user data, and rendered according to formatting dictated by the extensible markup data applied to the document. The document may be exported such that the extensible markup data is maintained for subsequent import and use.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07640493",
	"publication_date": "2009-12-29",
	"application_number": "11337942",
	"application_date": "2006-01-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Indexing XML datatype content system and method",
	"summary": "",
	"abstract": "Storing and querying XML data in a primary table or document utilizes an index of XML data and includes creating a primary table structure, creating a primary XML index commensurate with the primary table structure, populating the primary table and the primary XML index, and running a query on the XML data in a primary table by utilizing the XML index. The XML index can be implemented as a node table. The node table may have a B-tree structure and be populated by shredding the XML values in the primary table. The XML data may be stored as binary large objects in an XML column of the primary table. Secondary XML indexes may be created to assist in the search and retrieval of XML data stored in the primary table. Both the primary XML index and the secondary XML index tables may be created using data definition language statements.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07634498",
	"publication_date": "2009-12-15",
	"application_number": "10693750",
	"application_date": "2003-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information server and pluggable data sources",
	"summary": "",
	"abstract": "An information server may function as a centralized query broker that accepts queries from query clients, dispatches queries to potentially disparate data sources, and returns query results to query clients. An information server may centralize information access and security/control operations and may provide a set of uniform interfaces for accessing various types of data sources. A pluggable data source interface may be used for extending the data and actions that are available to an information server. The queries that arrive at the data sources are typically simple queries, which contain no sub-query addressing to a different data source. To make a data source pluggable, a data source may expose a standard interface and may store information about the data source's existence so that an information server will be able to determine, from the stored information, which data sources are available for responding to queries in the information server system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07493311",
	"publication_date": "2009-02-17",
	"application_number": "10610258",
	"application_date": "2003-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Inhibiting software tampering",
	"summary": "",
	"abstract": "Tampering with pieces of software is inhibited. The obfuscation of a software image so as to becloud the comprehension of hackers in reverse engineering pieces of software comprising the software image is provided. A process of verifying whether the pieces of software together constitute a software package that requires protection from tampering is also provided. Another process for determining whether the hardware resources, such as the central processing unit or the cache memory on a computing machine, belong to a class for which inhibiting software tampering is possible, is also provided.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07584509",
	"publication_date": "2009-09-01",
	"application_number": "11061791",
	"application_date": "2005-02-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Ink collection and rendering",
	"summary": "",
	"abstract": "A system and process for capturing and rendering ink is described. An ink canvas object may contain none, one, or more objects or elements and may specify the z-order of the objects or elements. The ink canvas object may host a variety of objects or elements and, therefore, provide ink functionality to the objects or elements, even though they themselves may not have ink functionality.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07483017",
	"publication_date": "2009-01-27",
	"application_number": "10644896",
	"application_date": "2003-08-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Ink editing architecture",
	"summary": "",
	"abstract": "A system and process for capturing and rendering ink is described. An ink canvas object may contain none, one, or more objects or elements and may specify the z-order of the objects or elements. The ink canvas object may host a variety of objects or elements and, therefore, provide ink functionality to the objects or elements, even though the objects or elements themselves may not have ink functionality. The ink canvas object is attached to an ink editor that has an associated modifiable ink editor behavior, whereby ink specific behaviors are collected in the ink edit behavior.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07499047",
	"publication_date": "2009-03-03",
	"application_number": "11845430",
	"application_date": "2007-08-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Input device with forward/backward control",
	"summary": "",
	"abstract": "Instructions also provide for identifying at least one focus application that has a current keyboard focus and of converting the mouse message into a command for the focus application. The command is then sent to the focus application and the mouse message is prevented from being routed to any other applications. In one embodiment, the commands include the command to page forward or backward through pages of Internet documents. In other embodiments, instead of converting the mouse message into a command, the message hook procedure displays a graphical user interface based on the focus application and the mouse message. The graphical user interface includes one or more commands that the user may select. Based on the selection made by the user, the message hook procedure sends a corresponding command to the focus application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07639235",
	"publication_date": "2009-12-29",
	"application_number": "10004663",
	"application_date": "2001-12-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Installation setup",
	"summary": "",
	"abstract": "Tampering with pieces of software is inhibited. Installation setup protection inhibits tampering during the installation of various pieces of software. Profiles are stored in a central hierarchical database and such profiles are protected from tampering. The obfuscation of a software image so as to becloud the comprehension of hackers in reverse engineering pieces of software comprising the software image is provided.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07640592",
	"publication_date": "2009-12-29",
	"application_number": "11061484",
	"application_date": "2005-02-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Instant messaging object store",
	"summary": "",
	"abstract": "A method includes receiving a name associated with a user on a remote computer, the name including location data and a hash value uniquely associated with a data object representing the user and retrieving the data object from one of a local cache based on the hash value or a location identified by the location data. A system for managing objects representing users in an instant messaging conversation includes a data object representing a user, the data object having an object name including a location identifier and a hash value, the object name allowing, and an object store operable to retrieve the data object from a location identified by the location identifier and store the data object in a local cache based on the hash value.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07539727",
	"publication_date": "2009-05-26",
	"application_number": "10611599",
	"application_date": "2003-07-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Instant messaging session invite for arranging peer-to-peer communication between applications",
	"summary": "",
	"abstract": "Arrangements and procedures for arranging peer-to-peer communications sessions between applications are described. In one implementation, a first application executing at a first device utilizes online presence information of an instant messaging service to select a second application with which to engage in the peer-to-peer session. The second application is associated with a second device and registered with the instant messaging service as being peer-to-peer session invite capable. The first application arranges the peer-to-peer session via components of the instant messaging service. The arranged peer-to-peer session is functionally independent of the instant messaging service.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07584265",
	"publication_date": "2009-09-01",
	"application_number": "11751556",
	"application_date": "2007-05-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Instant messaging with built-in search",
	"summary": "",
	"abstract": "Instant messaging with search is described. One or more techniques of the described techniques may be employed to provide a search during an instant messaging session, the results of which may then be shared between participants in the instant messaging session.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07590699",
	"publication_date": "2009-09-15",
	"application_number": "11159650",
	"application_date": "2005-06-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integrated address book based on departmental hierarchy",
	"summary": "",
	"abstract": "A hierarchical address book for an organization is implemented where employees are represented by user objects and departments are represented by department objects. Computer-readable media include executable instructions for displaying and navigating the hierarchical address book. Computer-readable media also include executable instructions for ordering a list of recipients of an electronic mail message as a function of the seniority rating of an object in the hierarchical address book.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07617243",
	"publication_date": "2009-11-10",
	"application_number": "11439803",
	"application_date": "2006-05-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Intelligent caching data structure for immediate mode graphics",
	"summary": "",
	"abstract": "An intelligent caching data structure and mechanisms for storing visual information via objects and data representing graphics information. The data structure is generally associated with mechanisms that intelligently control how the visual information therein is populated and used. The cache data structure can be traversed for direct rendering, or traversed for pre-processing the visual information into an instruction stream for another entity. Much of the data typically has no external reference to it, thereby enabling more of the information stored in the data structure to be processed to conserve resources. A transaction/batching-like model for updating the data structure enables external modifications to the data structure without interrupting reading from the data structure, and such that changes received are atomically implemented. A method and mechanism are provided to call back to an application program in order to create or re-create portions of the data structure as needed, to conserve resources.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07477259",
	"publication_date": "2009-01-13",
	"application_number": "11454719",
	"application_date": "2006-06-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Intelligent caching data structure for immediate mode graphics",
	"summary": "",
	"abstract": "An intelligent caching data structure and mechanisms for storing visual information via objects and data representing graphics information. The data structure is generally associated with mechanisms that intelligently control how the visual information therein is populated and used. The cache data structure can be traversed for direct rendering, or traversed for pre-processing the visual information into an instruction stream for another entity. Much of the data typically has no external reference to it, thereby enabling more of the information stored in the data structure to be processed to conserve resources. A transaction/batching-like model for updating the data structure enables external modifications to the data structure without interrupting reading from the data structure, and such that changes received are atomically implemented. A method and mechanism are provided to call back to an application program in order to create or re-create portions of the data structure as needed, to conserve resources.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07619633",
	"publication_date": "2009-11-17",
	"application_number": "11455166",
	"application_date": "2006-06-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interactive electronic bubble messaging",
	"summary": "",
	"abstract": "Bubble messaging may include creating a bubble message and seamlessly sending the bubble message to one or more recipients. The bubble message may include message text and a bubble message shape specification. As a result of the bubble message being sent, a notification of the bubble message may be received. The notification of the bubble message may be displayed and, in response to recipient interaction with the displayed notification, a bubble message open animation may be displayed that provides a transition to a shape specified by the bubble message shape specification. The bubble message may be displayed with the shape specified by the bubble message shape specification. A bubble message editor may be configured to enable the creation and seamless sending of the bubble message. A bubble message viewer may be configured to enable the display of bubble messages. The bubble message may be unmodifiable after creation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07571213",
	"publication_date": "2009-08-04",
	"application_number": "10811035",
	"application_date": "2004-03-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interactive entertainment and information system using television set-top box",
	"summary": "",
	"abstract": "An interactive entertainment and information system using a television set-top box, wherein pages of information are periodically provided to the set-top box for user interaction therewith. The pages include associated meta-data defining active locations on each page. When a page is displayed, the user interacts with the active locations on the page by entering commands via a remote control device, whereby the system reads the meta-data and takes the action associated with the location. Actions include moving to other active locations, hyperlinking to other pages, entering user form data and submitting the data as a form into memory. The form data may be read from memory, and the pages may be related to a conventional television program, thereby providing significant user interactivity with the television.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07627883",
	"publication_date": "2009-12-01",
	"application_number": "11491048",
	"application_date": "2006-07-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interactive entertainment and information system using television set-top box",
	"summary": "",
	"abstract": "An interactive entertainment and information system using a television set-top box, wherein pages of information are periodically provided to the set-top box for user interaction therewith. The pages include associated meta-data defining active locations on each page. When a page is displayed, the user interacts with the active locations on the page by entering commands via a remote control device, whereby the system reads the meta-data and takes the action associated with the location. Actions include moving to other active locations, hyperlinking to other pages, entering user form data and submitting the data as a form into memory. The form data may be read from memory, and the pages may be related to a conventional television program, thereby providing significant user interactivity with the television.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07590994",
	"publication_date": "2009-09-15",
	"application_number": "09895452",
	"application_date": "2001-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interactive playlist generation using annotations",
	"summary": "",
	"abstract": "A plurality of user-selected annotations are used to define a playlist of media segments corresponding to the annotations. The user-selected annotations and their corresponding media segments are then provided to the user in a seamless manner. A user interface allows the user to alter the playlist and the order of annotations in the playlist. The user interface identifies each annotation by a short subject line.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07631015",
	"publication_date": "2009-12-08",
	"application_number": "11522160",
	"application_date": "2006-09-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interface for exchanging context data",
	"summary": "",
	"abstract": "A facility for exchanging context attributes is described. A characterization module receives an invocation request to provide an attribute value that was generated by a requesting attribute consumer. The received invocation request identifies the attribute whose value is to be provided. In response to receiving the invocation request, the characterization module provides a value for the identified attribute to the requesting attribute consumer.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07478331",
	"publication_date": "2009-01-13",
	"application_number": "11075529",
	"application_date": "2005-03-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interface infrastructure for creating and interacting with web services",
	"summary": "",
	"abstract": "A web services namespace pertains to an infrastructure for enabling creation of a wide variety of applications. The infrastructure provides a foundation for building message-based applications of various scale and complexity. The infrastructure or framework provides APIs for basic messaging, secure messaging, reliable messaging and transacted messaging. In some embodiments, the associated APIs are factored into a hierarchy of namespaces in a manner that balances utility, usability, extensibility and versionability.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07512957",
	"publication_date": "2009-03-31",
	"application_number": "11003307",
	"application_date": "2004-12-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interoperable credential gathering and access modularity",
	"summary": "",
	"abstract": "A credential is translated with one of different credential provider modules each translating a corresponding different type of credential into a common protocol. The translated credential is communicated through an API to a logon UI module to an operating system (OS) of a local machine. An OS logon module is called by the logon UI module to authenticate the translated credential against a credential database. A user identified by the translated credential is logged on to access the local machine when the authentication is successful. The credential can also be used with a selection received from the logon UI module via a corresponding one of different pre-log access provider (PLAP) modules that each communicate with the API. The API establishes a network session with an access service specified by the selected PLAP module when the credential is authenticated with the credential database.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07577659",
	"publication_date": "2009-08-18",
	"application_number": "10693585",
	"application_date": "2003-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interpreter for simplified programming of graphics processor units in general purpose programming languages",
	"summary": "",
	"abstract": "Although GPUs have been harnessed to solve non-graphics problems, these solutions are not widespread because GPUs remain difficult to program. Instead, an interpreter simplifies the task of programming a GPU by providing language constructs such as a set of data types and operations that are more familiar to non-graphics programmers. The interpreter maps these familiar language constructs to the more difficult graphics programming languages such as DirectXu00ae, OpenGLu00ae, Cgu00ae, and/or HLSLu00ae.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07598953",
	"publication_date": "2009-10-06",
	"application_number": "10982027",
	"application_date": "2004-11-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Inverse query engine systems with cache and methods for cache maintenance",
	"summary": "",
	"abstract": "An inverse query engine system having a cache integrated therein and methods for maintaining the cache are described herein. Entities storing filters in the inverse query engine cache thus do not have to maintain an individual cache to maintain the filters. The inverse query engine system cache is maintained within a bounded size by removing expired filters from the cache and trimming the cache to an optimal size when the cache reaches a maximum size. In the event that filter size cannot be determined efficiently, weights may be associated with filters stored in the cache, each weight identifying an estimate of a filter size. The weights are used to determine cache size and to maintain the cache size within particular bounds.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07558917",
	"publication_date": "2009-07-07",
	"application_number": "10779328",
	"application_date": "2004-02-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Kernel emulator for non-native program modules",
	"summary": "",
	"abstract": "Described herein is a technology facilitating the operation of non-native program modules within a native computing platform. This invention further generally relates to a technology facilitating the interoperability of native and non-native program modules within a native computing platform. More specifically, this technology involves an emulation of the kernel of the non-native operating system. Instead of interacting with the native kernel of the native computing platform, the non-native program modules interact with a non-native kernel emulator. This abstract itself is not intended to limit the scope of this patent. The scope of the present invention is pointed out in the appending claims.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07574346",
	"publication_date": "2009-08-11",
	"application_number": "09847535",
	"application_date": "2001-05-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Kernel emulator for non-native program modules",
	"summary": "",
	"abstract": "Described herein is a technology facilitating the operation of non-native program modules within a native computing platform. This invention further generally relates to a technology facilitating the interoperability of native and non-native program modules within a native computing platform. More specifically, this technology involves an emulation of the kernel of the non-native operating system. Instead of interacting with the native kernel of the native computing platform, the non-native program modules interact with a non-native kernel emulator. This abstract itself is not intended to limit the scope of this patent. The scope of the present invention is pointed out in the appending claims.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07478373",
	"publication_date": "2009-01-13",
	"application_number": "11016630",
	"application_date": "2004-12-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Kernel-level transactions",
	"summary": "",
	"abstract": "Transactions among kernel objects utilize application program interfaces (APIs) to implement operations on a transaction object and APIs to implement operations on a resource manager object.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07539999",
	"publication_date": "2009-05-26",
	"application_number": "10692264",
	"application_date": "2003-10-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Layout system for consistent user interface results",
	"summary": "",
	"abstract": "Described is a layout system and process for user interface elements of computer programs. The layout system generally refers to a protocol and associated API that enables sizes and positions to be allotted, in which user interface elements are rendered. The layout system may be split between a core layout system and a framework layout system. The core provides minimal policy/rules that are imposed to allow flexibility for a given framework implementation. The framework adds support for user-specified sizing, positioning, margins, minimum sizes, maximum sizes and specific layout elements. Parent elements (e.g., containers) direct measure calls and arrange calls to child elements. The layout system essentially intercepts those calls and depending on policy may manipulate the properties of those calls for sizing, positioning, alignment and the like to ensure uniform and consistent layout results.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07516400",
	"publication_date": "2009-04-07",
	"application_number": "11074476",
	"application_date": "2005-03-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Locating and displaying information about users of proximately located wireless computing devices",
	"summary": "",
	"abstract": "A wireless communications signal is sampled to obtain one or more data packets. Identifying data is then retrieved from the wireless data packets that uniquely identifies a proximately located computing device that transmitted one or more of the data packets. A server computer is then queried with the identifying data to obtain additional information regarding the proximately located computing device. The additional information regarding the proximately located computing device may then be utilized to obtain data regarding an owner or user of the proximately located computing device. This information may be display within a graphical user interface and exposed to application programs.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07603130",
	"publication_date": "2009-10-13",
	"application_number": "11370755",
	"application_date": "2006-03-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Locating source code when stopping in a debugger",
	"summary": "",
	"abstract": "A method for automatically retrieving source code during software debugging sessions using a development system includes stopping in an object with compiled code where the compiled code is associated with corresponding source code via a debugging support file. The compiled code can be run on different hosts. During a debugging session, a local debugger portion of the software in the development system requests a unique resource locator for the source code. A remote software debugger portion on a host responds by providing a hosttype, which specifies the host specific search algorithm, and the original path for the source code. A development system host access component requests a file with matching name and original path from the host. An original source file checksum is compared with a retrieved checksum. Upon a match, the retrieved source code is stored in the development system and accessed for user display.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07516445",
	"publication_date": "2009-04-07",
	"application_number": "11171811",
	"application_date": "2005-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Location aware mobile-device software development",
	"summary": "",
	"abstract": "A development environment makes it easier to develop and use location aware software applications. Combining the currently separate and complex tasks of location information gathering, analysis, and display and making them integrated such that non-experts can build location services into their applications increases a developer's capability to write rich location-aware software applications. A higher level programming model allows a programmer to use location information as a logical entity rather than just raw location data, such as latitude and longitude. A location data store and map data store may be accessed by different location aware applications on the device. Instead of each location application relying on its own data store, applications may share their location related information.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07627425",
	"publication_date": "2009-12-01",
	"application_number": "10998081",
	"application_date": "2004-11-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Location signposting and orientation",
	"summary": "",
	"abstract": "A signposting and orientation technology is presented. This technology employs signposts superimposed on map images in order to convey otherwise undisplayable information on a map image. With signposting, zoomed-in maps can convey relationships between items on the map image, even though some of those item are not directly displayed on the map images. For example, a signpost can convey the distance between an anchoring object of reference and an item that is some distance and direction away from the object. Any relationships between objects and/or items can be dynamically maintained even though both the objects and item are moving about a map image. Additionally, orientation marks can be used in conjunction with signposts to orient users of the technology. Orientation marks may employ directional vectors, beginning at with the object of reference and ending with the orientation mark, whether the mark is celestial in nature or otherwise.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07634354",
	"publication_date": "2009-12-15",
	"application_number": "11217638",
	"application_date": "2005-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Locator and tracking service for peer to peer resources",
	"summary": "",
	"abstract": "A resource naming service (RNS) server receives peer resource requests from peer platforms through a networking environment. The RNS server, possibly in cooperation with other RNS servers and peer registrars generates a response to the request to enable the peer platforms to access the requested peer resources. In one embodiment, a response includes a list of locations of peer devices in the networking environment where a resource is expected to be available. A requesting device can then choose to access the resource from one or more of the listed peer locations.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07594030",
	"publication_date": "2009-09-22",
	"application_number": "09952652",
	"application_date": "2001-09-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Locator and tracking service for peer-to-peer resources",
	"summary": "",
	"abstract": "A resource naming service (RNS) server receives peer resource requests from peer platforms through a networking environment. The RNS server, possibly in cooperation with other RNS servers and peer registrars generates a response to the request to enable the peer platforms to access the requested peer resources. In one embodiment, a response includes a list of locations of peer devices in the networking environment where a resource is expected to be available. A requesting device can then choose to access the resource from one or more of the listed peer locations.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07624179",
	"publication_date": "2009-11-24",
	"application_number": "11056997",
	"application_date": "2005-02-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Logical representation of a user interface form",
	"summary": "",
	"abstract": "User interface (UI) forms are rendered on different types of display targets. To generate a UI form that can be rendered on different types of display targets metadata stored in at least one application is transformed to build a logical user interface (UI) representation. The UI form is rendered on at least one of the different types of display targets based on the logical UI representation. Data and form layout from the at least one application is accessed for representation in the logical UI representation. The rendered UI form is populated with the data represented in the logical UI representation to provide content for the rendered UI form.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07584416",
	"publication_date": "2009-09-01",
	"application_number": "11358492",
	"application_date": "2006-02-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Long-life digital certification for publishing long-life digital content or the like in content rights management system or the like",
	"summary": "",
	"abstract": "A digital certificate is employed to produce a digital signature for a digital construct. In the digital certificate is set forth a certificate validity period defining for the digital certificate a time period during which the digital certificate is to be honored as valid for producing digital signatures, and a signature validity period defining for each digital signature produced based on the digital certificate a time period during which the digital signature is to be honored as valid.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07549051",
	"publication_date": "2009-06-16",
	"application_number": "11077051",
	"application_date": "2005-03-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Maintaining and establishing subscriptions with load-balanced servers",
	"summary": "",
	"abstract": "A notification subscription application allows a subscriber to maintain event notification continuity in a load-balanced work environment. The notification subscription application proactively provides the subscriber notifications indicating an operating status of the subscription. In this manner, subscribers can reduce the number of missed event notifications, by readily reestablishing a subscription when required. The notification service associates markers with events such that event notifications occurring during a period of time when the notification subscription is not operating properly can be identified when the subscription is reestablished.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07606808",
	"publication_date": "2009-10-20",
	"application_number": "11467217",
	"application_date": "2006-08-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing application customization",
	"summary": "",
	"abstract": "A facility is provided for managing application customization. In various embodiments, an application associated with the facility receives an indication of an application identifier that identifies a customized instance of the application, determines whether the customized instance of the application is available and, when the customized instance of the application is available, configures the application to employ a resource associated with the customized instance of the application. The facility can receive an identifier and an indication to update common components of an application, the application having a customized instance of the application; remove components associated with the customized instance of the application; copy common components associated with the application; associate the common components with the received identifier; and apply customizing components that customize the common components of the application to create a customized instance of the application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07530079",
	"publication_date": "2009-05-05",
	"application_number": "11470863",
	"application_date": "2006-09-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing client configuration data",
	"summary": "",
	"abstract": "Method for providing an interface to a function that manages a plurality of entities. Computer-executable instructions receive a request to implement a change in configuration data. The configuration data is stored in a memory area and relates to an operation of one or more entities. In response to the received request, computer-executable instructions identify a plurality of the entities affected by the change and implement the change for the identified plurality of entities in accordance with the function.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07590669",
	"publication_date": "2009-09-15",
	"application_number": "10819834",
	"application_date": "2004-04-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing software updates and a software distribution service",
	"summary": "",
	"abstract": "The present invention is directed to a system and method for managing software updates. More specifically, the present invention is directed to a system and method for facilitating the selection and implementation of software updates while minimizing the bandwidth and processing resources required to select and implement the software updates. In accordance with an aspect of the present invention, a software update service controls access to software updates stored on servers. In accordance with another aspect, the software update service synchronizes with client machines to identify applicable updates.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07478381",
	"publication_date": "2009-01-13",
	"application_number": "10737726",
	"application_date": "2003-12-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing topology changes in media applications",
	"summary": "",
	"abstract": "Systems and methods for resolving a partial topology are disclosed. In one embodiment a media engine includes a topology loader module that receives a partial topology from another module associated with the media engine. The topology loader implements logic operations that convert a partial topology into a full topology, which may be returned to the media engine for presentation of the media stream(s) to a user.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07577940",
	"publication_date": "2009-08-18",
	"application_number": "10796503",
	"application_date": "2004-03-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Manifest-based trusted agent management in a trusted operating system environment",
	"summary": "",
	"abstract": "Manifest-based trusted agent management in a trusted operating system environment includes receiving a request to execute a process is received and setting up a virtual memory space for the process. Additionally, a manifest corresponding to the process is accessed, and which of a plurality of binaries can be executed in the virtual memory space is limited based on indicators, of the binaries, that are included in the manifest.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07634661",
	"publication_date": "2009-12-15",
	"application_number": "11206585",
	"application_date": "2005-08-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mathematical expression recognition",
	"summary": "",
	"abstract": "A mechanism for recognizing and inputting handwritten mathematical expressions into a computer by providing a multi-path framework is described. The framework may include symbol grouping and recognition, tabular structure analysis, subordinate sub-expression analysis, subscript/superscript analysis and character determination, and semantic structure analysis components. A method for recognizing a handwritten mathematical expression includes receiving a plurality of input strokes corresponding to a handwritten mathematical expression and providing a candidate list of recognized candidate expressions based upon the input strokes. Input strokes are grouped into symbols, tabular structures are determined, dominant symbol candidates and subordinate symbols are determined, and subscript and superscript structures are determined.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07561737",
	"publication_date": "2009-07-14",
	"application_number": "11155604",
	"application_date": "2005-06-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mechanism for converting text output into objects",
	"summary": "",
	"abstract": "The techniques and mechanisms described herein are directed at converting text into objects based on a template that describes the format of the text. The objects then being available for further processing. The conversion mechanism converts the text into an object having at least one method that is directly invocable and that is specific to a data type specified for the live object. The template comprises an object header indicator and a corresponding object header pattern. A new object is created whenever the object header pattern is identified within the text. In addition, the template comprises one or more field indicators each having a corresponding field pattern. The field pattern is in a format of a regular expression. A new field is created for the new object whenever a field pattern is identified within the text.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07555708",
	"publication_date": "2009-06-30",
	"application_number": "10944459",
	"application_date": "2004-09-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mechanism for handling input parameters",
	"summary": "",
	"abstract": "The present mechanism provides a grammar for specifying required prerequisites (e.g., number and type of input parameters) that an object must possess in order for processing to occur on the object. The mechanism allows programmers and non-programmers to easily specify these prerequisites. The prerequisites may be associated directly or indirectly with a data structure. For a direct specification, the data structure comprises a parameter declaration for each expected input parameter. For an indirect specification, the data structure comprises a parameter definition that references an external description, such as in an XML document. The data structure also providing a mechanism that identifies a corresponding parameter within an input source for each expected input parameter based on its declaration. The mechanism further populates each expected input parameter with information associated with the corresponding parameter when the data structure becomes instantiated into an object. The mechanism may be provided by a runtime environment.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07536696",
	"publication_date": "2009-05-19",
	"application_number": "10693392",
	"application_date": "2003-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mechanism for providing data driven command line output",
	"summary": "",
	"abstract": "The present mechanism provides a data driven command line output within an environment that supports a pipeline of object-based commands. Each object-based command inputs a parseable object for processing and outputs another parseable object for subsequent command processing. The mechanism is operative to direct formatting and subsequent processing of the commands based on a type of the incoming parseable object. Format information is obtained for the type, such as shape, properties to display, and the like. The format information may be specified within an XML-based document. The mechanism utilizes one or more output processing commands, such as format commands, markup commands, convert commands, transform commands, and out commands. These output processing commands may be arranged within the pipeline in various ways to achieve the desired output results.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07594170",
	"publication_date": "2009-09-22",
	"application_number": "10693589",
	"application_date": "2003-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mechanism for providing data driven command line output",
	"summary": "",
	"abstract": "The present mechanism provides a data driven command line output within an environment that supports a pipeline of object-based commands. Each object-based command inputs a parseable object for processing and outputs another parseable object for subsequent command processing. The parseable objects do not have methods. The mechanism is operative to direct formatting and subsequent processing of the commands based on a type of the incoming parseable object. Format information is obtained for the type, such as shape, properties to display, and the like. The format information may be specified within an XML-based document. The mechanism utilizes one or more output processing it commands, such as format commands, markup commands, convert commands, transform commands, and out commands. These output processing commands may be arranged within the pipeline in various ways to achieve the desired output results.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07587670",
	"publication_date": "2009-09-08",
	"application_number": "10882828",
	"application_date": "2004-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mechanism for providing extended functionality to command line instructions",
	"summary": "",
	"abstract": "The present mechanism allows commands entered on a command line in a command line operating environment the ability to execute in a first execution mode or an alternate execution mode. The command is executed in the alternate execution mode if the command includes an instruction to execute in the alternate execution mode. The alternate execution mode is provided by the operating environment and provides extended functionality to the command. The alternate execution mode may visually display results of executing the command, visually display simulated results of executing the command, prompt for verification before executing the command, may perform a security check to determine whether a user requesting the execution has sufficient privileges to execute the command, and the like.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07640540",
	"publication_date": "2009-12-29",
	"application_number": "10693409",
	"application_date": "2003-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Media data representation and management",
	"summary": "",
	"abstract": "Managing media objects on a computing device executing a media player application for rendering one or more of the media objects. The media objects have metadata associated therewith. A media object is defined to represent the media object, which includes a plurality of properties where at least one of the properties of the media object is representative of media content of the media object and where at least another one of the properties of the media object is representative of metadata associated with the media object. The media object is dynamically exposed to the media player application for performing one or more operations on the properties. The properties of the media object are alternatively exposed without exposing the media object represented thereby. Alternatively, a set of rules for each of the properties is defined, and one or more operations are dynamically exposed as a function of the defined set of rules.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07636509",
	"publication_date": "2009-12-22",
	"application_number": "11247743",
	"application_date": "2005-10-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Media integration layer",
	"summary": "",
	"abstract": "A media integration layer including an application programming interface (API) and an object model allows program code developers to interface in a consistent manner with a scene graph data structure in order to output graphics. Via the interfaces, program code adds child visuals to other visuals to build up a hierarchical scene graph, writes Instruction Lists such as geometry data, image data, animation data and other data for output, and may specify transform, clipping and opacity properties on visuals. The media integration layer and API enable programmers to accomplish composition effects within their applications in a straightforward manner, while leveraging the graphics processing unit in a manner that does not adversely impact normal application performance. A multiple-level system includes the ability to combine different media types (such as 2D, 3D, Video, Audio, text and imaging) and animate them smoothly and seamlessly.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07511718",
	"publication_date": "2009-03-31",
	"application_number": "10693630",
	"application_date": "2003-10-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Media streaming of web content data",
	"summary": "",
	"abstract": "Methods for streaming web content data via a computer-readable medium. The web content data comprises one or more media samples. The media samples are encoded in a streaming media format as a web component stream. The web component stream is combined with other component streams comprising additional data other than web content data into a presentation stream. The presentation stream is transmitted via a media server to a client. Rendering commands, which are included in one or more rendering samples encoded in the web component stream along with the media samples, coordinate synchronization between the media samples and the additional data when the client renders the presentation stream.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07577714",
	"publication_date": "2009-08-18",
	"application_number": "11464450",
	"application_date": "2006-08-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Memory cache management in XML/relational data mapping",
	"summary": "",
	"abstract": "Caching architecture that facilitates translation between schema data and relational structures. A schema translation component consumes schema data (e.g., XML schema data) having a schema structure. The schema structure is shredded into tables. A validation component interfaces to a memory management interface to facilitate loading only the necessary components to perform instance validation. During validation, only parts of the schema that are used are loaded and cached. A schema cache stores the in-memory representation of the schema optimized for instance validation. The schema components are loaded from metadata into the cache memory as read-only objects such that multiple users can use the in-memory objects for validation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07475093",
	"publication_date": "2009-01-06",
	"application_number": "11185310",
	"application_date": "2005-07-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Memory management in a multi-threaded environment",
	"summary": "",
	"abstract": "A system and process for ensuring the smooth flow of electronic ink is described. Dynamic rendering is give priority over other event handlers. Priority may be the use of one or more queues to order when events occur and may be performing dynamic rendering prior to other steps.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07511836",
	"publication_date": "2009-03-31",
	"application_number": "10986841",
	"application_date": "2004-11-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mesh networks with end device recognition",
	"summary": "",
	"abstract": "An exemplary router performs actions including: receiving at least one certificate from an end device, the at least one certificate issued by another router; ascertaining if the other router is a member of a predetermined neighborhood; determining if the at least one certificate is valid; and if the other router is ascertained to be a member of the predetermined neighborhood and the at least one certificate is determined to be valid, recognizing the end device as privileged. An exemplary mesh router is capable of establishing a wireless mesh network with other mesh routers, the mesh router is further capable of designating a neighborhood administrator mesh router; and the mesh router is adapted to grant privileged status to a particular end device associated with a particular certificate issued by a particular mesh router when the particular mesh router is a member of a neighborhood of the designated neighborhood administrator mesh router.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07489645",
	"publication_date": "2009-02-10",
	"application_number": "10738802",
	"application_date": "2003-12-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for accessing instrumentation data from within a managed code environment",
	"summary": "",
	"abstract": "An instrumentation client API is provided within a managed code runtime environment for accessing instrumentation data that resides outside of the managed code runtime environment. The instrumentation client API provides access to instrumentation data in a manner that is consistent with the classes and models provided by the runtime environment, raises exceptions in a manner that is compatible with the runtime environment, and is secure. The instrumentation client API wraps, or translates, calls to and from an instrumentation data source external to the runtime environment. The API interacts with an interface provided by the instrumentation data source to provide functionality and connectivity that is not otherwise provided by the instrumentation data source. The API also provides access to instrumentation data in a manner that is consistent with the models and classes provided by the runtime platform. The classes defined by the API return collections and exceptions in a way that is consistent with the managed code runtime platform.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07627865",
	"publication_date": "2009-12-01",
	"application_number": "09900060",
	"application_date": "2001-07-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for application window grouping and management",
	"summary": "",
	"abstract": "A method for managing a plurality of application window representations is described. The method includes steps of defining a set of application window representation positions in a predefined region, displaying a plurality of application window representations in the application window representation positions, receiving an input to open a first application window, creating a first application window representation in the predefined region, determining whether a second application window representation of the plurality needs to be repositioned into a hidden application window representation position, and repositioning the second application window representation into the hidden application window representation upon determining that the second application window representation needs to be repositioned, wherein the hidden application window representation position is within a glom.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07478339",
	"publication_date": "2009-01-13",
	"application_number": "11095616",
	"application_date": "2005-04-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for connecting a secure peer-to-peer collaboration system to an external system",
	"summary": "",
	"abstract": "A connection between a secure shared space and an external system is created with a connector tool. The connector tool code is included in an independent agent called a u201cbotu201d that is created by a software developer. Bots run in the background in an automated and unattended manner in a specialized enterprise integration server. Each bot has a unique identity and runs under an account assigned to the enterprise integration server. A bot can be invited to a shared space much as another collaborator. Bots can also invite others to shared spaces. All bots running in the enterprise integration server are administered by a centralized administrative control. This allows account and identity policies to be established and global behaviors, including authentication settings, startup options and scope to be determined centrally. The centralized control allows simple installation, configuration and deployment and administrative control of bot operation and access. It also allows for logging and monitoring of system behavior.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07562115",
	"publication_date": "2009-07-14",
	"application_number": "11267646",
	"application_date": "2005-11-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for dynamic grammars and focused semantic parsing",
	"summary": "",
	"abstract": "The present invention provides a dialogue system in which semantic ambiguity is reduced by selectively choosing which semantic structures are to be made available for parsing based on previous information obtained from the user or other context information. In one embodiment, the semantic grammar used by the parser is altered so that the grammar is focused based on information about the user or the dialogue state. In other embodiments, the semantic parsing is focused on certain parse structures by giving preference to structures that the dialogue system has marked as being expected.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07555426",
	"publication_date": "2009-06-30",
	"application_number": "11119023",
	"application_date": "2005-04-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for generating data change requests containing data consistency information in a peer-to-peer collaborative computer system",
	"summary": "",
	"abstract": "A distributed, activity-based collaboration system employs a data change request priority scheme for determining an order of execution of data change requests in effecting changes to local copies of data so as to optimize data consistency for collaborative activities. The data change request priority scheme can entail encoding sequence number information and dependency information in the data change requests, responsive to which data changes can be made, unmade and remade to the data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07490126",
	"publication_date": "2009-02-10",
	"application_number": "10630150",
	"application_date": "2003-07-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for generating random numbers",
	"summary": "",
	"abstract": "A system collects entropy data and stores the entropy data in a nonvolatile memory. The entropy data stored in the nonvolatile memory is updated with newly collected entropy data. The entropy data stored in the nonvolatile memory is used to generate a string of random bits. The entropy data is collected from multiple sources within a computer system and may include data related to a processor in the computer system and an operating system executing on the computer system. The entropy data is maintained in a protected portion of an operating system kernel. A hashing algorithm is applied to the entropy data to generate random seed data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07571199",
	"publication_date": "2009-08-04",
	"application_number": "09714781",
	"application_date": "2000-11-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for high resolution speech reconstruction",
	"summary": "",
	"abstract": "A method and apparatus identify a clean speech signal from a noisy speech signal. The noisy speech signal is converted into frequency values in the frequency domain. The parameters of at least one posterior probability of at least one component of a clean signal value are then determined based on the frequency values. This determination is made without applying a frequency-based filter to the frequency values. The parameters of the posterior probability distribution are then used to estimate a set of frequency values for the clean speech signal. A clean speech signal is then constructed from the estimated set of frequency values.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07596494",
	"publication_date": "2009-09-29",
	"application_number": "10722937",
	"application_date": "2003-11-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for identifying programming object attributes",
	"summary": "",
	"abstract": "The present invention provides a method and computer-readable medium for searching for programming objects on a computer system. Under the invention, object attributes that are stored outside of a static attribute storage area are inspected during the search for programming objects.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07584169",
	"publication_date": "2009-09-01",
	"application_number": "11078812",
	"application_date": "2005-03-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for indexing speech",
	"summary": "",
	"abstract": "A method of indexing a speech segment includes identifying at least two alternative word sequences based on the speech segment. For each word in the alternative sequences, information is placed in an entry for the word in the index. The information indicates the position of the word in at least one of the alternative sequences.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07634407",
	"publication_date": "2009-12-15",
	"application_number": "11133515",
	"application_date": "2005-05-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for managing power in network interface modules",
	"summary": "",
	"abstract": "A method and system for managing power consumption in a portable computing device having a network interface module is presented. A power management module receives inputs from other modules and determines when the network interface module is to be put in a doze state for a predetermined number of beacon intervals to conserve power consumption in the network interface module. The network interface module in a device that is associated with a network is put in the doze state after an event has occurred including when a scan has been performed, after a delayed sleep timer has expired, and after a beacon transmission has been completed and no traffic is buffered for the device. The delayed sleep time is set based on the estimated round trip time of a packet.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07555663",
	"publication_date": "2009-06-30",
	"application_number": "11330766",
	"application_date": "2006-01-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for managing power in network interface modules",
	"summary": "",
	"abstract": "A method and system for managing power consumption in a portable computing device having a network interface module is presented. A power management module receives inputs from other modules and determines when the network interface module is to be put in a doze state for a predetermined number of beacon intervals to conserve power consumption in the network interface module. The network interface module in a device that is associated with a network is put in the doze state after an event has occurred including when a scan has been performed, after a delayed sleep timer has expired, and after a beacon transmission has been completed and no traffic is buffered for the device. The delayed sleep time is set based on the estimated round trip time of a packet.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07529957",
	"publication_date": "2009-05-05",
	"application_number": "11331399",
	"application_date": "2006-01-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for multi-sensory speech enhancement",
	"summary": "",
	"abstract": "A method and apparatus determine a channel response for an alternative sensor using an alternative sensor signal and an air conduction microphone signal. The channel response is then used to estimate a clean speech value using at least a portion of the alternative sensor signal.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07574008",
	"publication_date": "2009-08-11",
	"application_number": "10944235",
	"application_date": "2004-09-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for multi-sensory speech enhancement on a mobile device",
	"summary": "",
	"abstract": "A mobile device is provided that includes a digit input that can be manipulated by a user's fingers or thumb, an air conduction microphone and an alternative sensor that provides an alternative sensor signal indicative of speech. Under some embodiments, the mobile device also includes a proximity sensor that provides a proximity signal indicative of the distance from the mobile device to an object. Under some embodiments, the signal from the air conduction microphone, the alternative sensor signal, and the proximity signal are used to form an estimate of a clean speech value. In further embodiments, a sound is produced through a speaker in the mobile device based on the amount of noise in the clean speech value. In other embodiments, the sound produced through the speaker is based on the proximity sensor signal.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07499686",
	"publication_date": "2009-03-03",
	"application_number": "10785768",
	"application_date": "2004-02-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing and integrating high-performance message queues in a user interface environment",
	"summary": "",
	"abstract": "A method and apparatus is provided for providing and integrating high-performance message queues. u201cContextsu201d are provided that allow independent worlds to be created and execute in parallel. A context is created with one or more threads. Each object is created with context affinity, allowing any thread inside the context to modify the object or process pending messages. Threads in a different context are unable to modify the object or process pending messages for that context. To help achieve scalability and context affinity, both global and thread-local data is often moved into the context. Remaining global data has independent locks, providing synchronized access for multiple contexts. Each context has multiple message queues to create a priority queue. There are default queues for sent messages and posted messages, carry-overs from legacy window managers, with the ability to add new queues on demand. A queue bridge is also provided for actually processing the messages.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07631316",
	"publication_date": "2009-12-08",
	"application_number": "11138165",
	"application_date": "2005-05-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing context menus on a hand-held device",
	"summary": "",
	"abstract": "A user interface for a hand-held device is provided that allows users to activate the full u201ccardu201d for an entry using one gesture on a button while also giving the user the ability to reach a menu of context dependent commands using a second gesture on a button. In particular, certain button inputs are recognized as context menu gestures. When these gestures are made, a context menu appears. The user is then able to select a command in the context menu that is to be performed. A user is also allowed to open context menus while only using one hand to operate and hold the device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07533352",
	"publication_date": "2009-05-12",
	"application_number": "10684769",
	"application_date": "2003-10-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for reattaching nodes in a parse structure",
	"summary": "",
	"abstract": "A method is provided for forming a reconstructed parse structure for an initial parse structure. Under the method, at least one rule used to form the initial parse structure and at least one additional rule are executed to form the reconstructed parse structure. In many embodiments, the reconstructed parse structure differs from the initial parse structure in that a node is located in a different position in the reconstructed parse structure than in the initial parse structure.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07634398",
	"publication_date": "2009-12-15",
	"application_number": "10150127",
	"application_date": "2002-05-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for reducing noise corruption from an alternative sensor signal during multi-sensory speech enhancement",
	"summary": "",
	"abstract": "A method and apparatus classify a portion of an alternative sensor signal as either containing noise or not containing noise. The portions of the alternative sensor signal that are classified as containing noise are not used to estimate a portion of a clean speech signal and the channel response associated with the alternative sensor. The portions of the alternative sensor signal that are classified as not containing noise are used to estimate a portion of a clean speech signal and the channel response associated with the alternative sensor.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07590529",
	"publication_date": "2009-09-15",
	"application_number": "11050936",
	"application_date": "2005-02-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for robust efficient parsing",
	"summary": "",
	"abstract": "The present invention provides a method for improving the efficiency of parsing text. Aspects of the invention include representing parse tokens as integers where a portion of the integer indicates the location in which a definition for the token can be found. In a further aspect, an integer representing a token points to an array of tokens that can be activated by the token. In another aspect, a list of pointers to partial parses is created before attempting to parse a next word in the text string. The list of pointers includes pointers to partial parses that are expecting particular semantic tokens.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07574347",
	"publication_date": "2009-08-11",
	"application_number": "11329956",
	"application_date": "2006-01-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for storing content",
	"summary": "",
	"abstract": "A system receives a broadcast program and temporarily stores the program data. A request is received to permanently record the broadcast program. This request is received after a portion of the broadcast program has been received and temporarily stored. The broadcast program is then permanently recorded, including the temporarily stored program data. A metafile identifies portions of the broadcast program and is accessible by a reader to continuously retrieve the stored portions of the broadcast program.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07577336",
	"publication_date": "2009-08-18",
	"application_number": "11048396",
	"application_date": "2005-02-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for transducer-based text normalization and inverse text normalization",
	"summary": "",
	"abstract": "A method and apparatus are provided that perform text normalization and inverse text normalization using a single grammar. During text normalization, a finite state transducer identifies a second string of symbols from a first string of symbols it receives. During inverse text normalization, the context free transducer identifies the first string of symbols after receiving the second string of symbols.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07630892",
	"publication_date": "2009-12-08",
	"application_number": "10939005",
	"application_date": "2004-09-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus using harmonic-model-based front end for robust speech recognition",
	"summary": "",
	"abstract": "A system and method are provided that reduce noise in speech signals. The system and method decompose a noisy speech signal into a harmonic component and a residual component. The harmonic component and residual component are then combined as a sum to form a noise-reduced value. In some embodiments, the sum is a weighted sum where the harmonic component is multiplied by a scaling factor. In some embodiments, the noise-reduced value is used in speech recognition.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07516067",
	"publication_date": "2009-04-07",
	"application_number": "10647586",
	"application_date": "2003-08-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and computer-readable medium for providing spreadsheet-driven key performance indicators",
	"summary": "",
	"abstract": "A method, system, apparatus, and computer-readable medium for providing spreadsheet-driven key performance indicators are disclosed. According to the method, a spreadsheet-driven key performance indicator is created that includes a location of a spreadsheet, a location of a cell within the spreadsheet to be utilized as an indicator value, and a goal value. The key performance indicator may be evaluated by retrieving the indicator value from cell of the spreadsheet, comparing the indicator value to the goal value, and providing a visual indication based on the result of the comparison. The goal value may also be expressed as a location within a spreadsheet. The spreadsheet locations may contain references to databases containing the data that should be utilized as the indicator and goal values. A warning value may also be specified, compared to the indicator, and a visual indication may be provided based upon the result of the comparison.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07587665",
	"publication_date": "2009-09-08",
	"application_number": "11080165",
	"application_date": "2005-03-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system applying policy on screened files",
	"summary": "",
	"abstract": "Described is a mechanism comprising a data screening filter and user mode service that applies (enforces) policies regarding allowing or blocking file content of a directory, based on matching the filename against patterns associated with that directory. An administrator configures a screening policy, such as the types of files to allow in a particular directory and the types of files to block. File groups of member patterns and non-member exclusion patterns are defined and selectively collected in directory screening objects (DSOs). A directory screening object (DSO) is associated with a directory. When an I/O create request specifying a filename and a target directory is received, the filename is evaluated against the member/non-member patterns in the file groups referenced by the DSO for that directory to make for an allow or block policy decision. If not matched, DSOs on parent directories are evaluated upwards seeking a policy decision.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07599907",
	"publication_date": "2009-10-06",
	"application_number": "10999537",
	"application_date": "2004-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for a self-heating device",
	"summary": "",
	"abstract": "A self-healing device is provided in which changes made between the time that an infection resulting from an attack on the device was detected and an earlier point in time to which the device is capable of being restored may be recovered based, at least in part, on what kinds of changes were made, whether the changes were bona fide or malware induced, whether the changes were made after the time that the infection likely occurred, and whether new software was installed.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07624443",
	"publication_date": "2009-11-24",
	"application_number": "11018412",
	"application_date": "2004-12-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for accessing drawing resources",
	"summary": "",
	"abstract": "This disclosure relates to drawing within a computer environment using a drawing resource. The computer environment includes a managed code portion and a native code portion. The computer environment compares a draw parameter call value being passed from the managed code portion to the native code portion with a stored drawing resource value stored in the native code portion. If the draw parameter call value is the same as the stored drawing resource value, then the computer environment is configured to draw onto a native drawing surface using the stored drawing resource. If the draw parameter call value is not the same as the drawing resource value, then a new drawing resource is created in the managed code portion. In another aspect, a portion of the drawing resource feature portion that contains data that describes at least one or more parameter of the drawing resource is transmitted between the managed code portion and the native code portion.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07596787",
	"publication_date": "2009-09-29",
	"application_number": "11772747",
	"application_date": "2007-07-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for assigning and publishing applications",
	"summary": "",
	"abstract": "A method and system for managing and deploying applications across a computer network by assigning and publishing applications to user and computer policy recipients. Assigned applications are automatically applied via a script to the policy recipients, thereby ensuring that the recipient has an administrator-specified workstation configuration. Assigned applications are advertised so as to appear available to the user, by adding an application shortcut to the start menu, and by populating the machine registry with appropriate application information. Other applications may be published to users, whereby those applications are optionally available for use by users. Published application information is maintained in a centralized store of information on the network. Assigned and published applications may be installed on demand, such as when the application is activated.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07631061",
	"publication_date": "2009-12-08",
	"application_number": "11010499",
	"application_date": "2004-12-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for collecting information about applications on a computer system",
	"summary": "",
	"abstract": "A standard reporting schema to represent applications and other information on a computer in a hierarchical manner, such as via an XML (extensible markup language) file. An agent or engine is provided to inventory a computer for installed applications or services and to output a report, or log file, conforming to the schema standard. A calculation may be performed on a subset of attributes stored in the log file for an application or a service so as generate a signature representing the subset. The signature may be stored with the log file, and may be accessed quickly in a database to determine whether or not the application is a particular application, or, if more particular resources are defined, to determine more specific information, such as whether the application is a particular version or run of the application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07529775",
	"publication_date": "2009-05-05",
	"application_number": "10644264",
	"application_date": "2003-08-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for debugging a program from within a thread of execution of the program",
	"summary": "",
	"abstract": "In a method and system for debugging a program, a debugging module is loaded into a normal thread of execution of the program. A user may then send commands to the debugger module from a command console module operating in a safe separate process. The debugger module receives the commands and converts them into function calls to objects that are accessible by the program. This allows the user to interact manually with the objects and achieve substantially the same responses from the object as the program itself would have obtained during its normal execution. Thus the user can effectively debug the program without having to know the internal structure of any of its constituent objects.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07555744",
	"publication_date": "2009-06-30",
	"application_number": "10970793",
	"application_date": "2004-10-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for detecting infection of an operating system",
	"summary": "",
	"abstract": "A method and system for detecting that a software system has been infected by software that attempts to hide properties related to the software system is provided. A detection system identifies that a suspect operating system has been infected by malware by comparing properties related to the suspect operating system as reported by the suspect operating system to properties as reported by another operating system that is assumed to be clean. The detection system compares the reported properties to the actual properties to identify any significant differences. A significant difference, such as the presence of an actual file not reported by the suspect operating system, may indicate that the suspect storage device is infected.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07627898",
	"publication_date": "2009-12-01",
	"application_number": "10997768",
	"application_date": "2004-11-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for detecting user intentions in retrieval of hint sentences",
	"summary": "",
	"abstract": "A method of constructing a confusion set database for use in detecting user query intentions includes obtaining a bilingual database having aligned word pairs in first and second languages. Second language word pairs in the bilingual database are aligned with corresponding correct translation first language word pairs. First language human translation word pairs corresponding to each of the second language word pairs in the bilingual database are obtained. Each first language human translation word pair for a particular second language word pair in the bilingual database is aligned with the correct translation first language word pair to define first language set pairs in the confusion set database. Methods, systems and computer readable medium for constructing the confusion set database and for retrieving sentences using the confusion set database are also disclosed.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07562082",
	"publication_date": "2009-07-14",
	"application_number": "11152645",
	"application_date": "2005-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for device registration within a digital rights management framework",
	"summary": "",
	"abstract": "A method of registering network devices in a digital rights management system (DRMS) includes receiving a digital certificate transmitted by the network device requesting registration and verifying the validity of the certificate. The DRMS may then send cryptographic information to the applying network device. The network device may be authorized for registration via a user interface to the DRMS. The DRMS may conduct a proximity test to determine of the network device is proximate to the DRMS. If the certificate is validated, authorization is received, and the proximity test indicates that the network device is proximate to the DRMS, the network device may be registered. A registered network device is then authorized to play protected digital content.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07620809",
	"publication_date": "2009-11-17",
	"application_number": "11107513",
	"application_date": "2005-04-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for displaying and interacting with paginated content",
	"summary": "",
	"abstract": "A document viewer control that is hosted by another computer program to provide that program with document viewing functionality, including enabling user interaction with the content. An interface provides the program with plug-in access to document viewing functionality, including scrolling, zooming, finding, layout, copying and the like. Properties may be retrieved and set via the interface, and commands may be issued. The result is that any program can provide document viewing functionality in a consistent manner. Moreover, via styles or the like, a program developer can deactivate and/or override default functionality, to customize and/or extend the document viewer as desired for a given program.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07512892",
	"publication_date": "2009-03-31",
	"application_number": "11073140",
	"application_date": "2005-03-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for enabling offline detection of software updates",
	"summary": "",
	"abstract": "A method and system that facilitates automatic software updates from an online source such as the Internet, wherein a connection to determine whether an update (e.g., a driver or software component) is available online is no longer necessary during detection time. Information stored for updates corresponding to driver and other software component detection is locally cached, whereby update information is available when no connection exists, eliminating potentially wasted connections and being particularly advantageous if occurring before the connection can be made. When a device is installed or software components are detected, instead of requiring a connection to enable updates, the cached information is evaluated to determine whether the update is available online. If so, the update is made when a connection is made and otherwise desired by the user. The user may defer making the connection, and the update may happen automatically and/or in the background on the next connection.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07574481",
	"publication_date": "2009-08-11",
	"application_number": "09742795",
	"application_date": "2000-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for exchanging data between computer systems and auxiliary displays",
	"summary": "",
	"abstract": "Described is a system and method by which application programs running on a main computer system communicate with an auxiliary display device (such as a cell phone, pocket-sized computer, alarm clock, television, digital picture frame and so forth) to provide viewable information on the device, remote control capabilities, and notifications. Via API calls, programs provide information in the same format regardless of the device capabilities and/or the connection type. An auxiliary display platform converts the information into a format understood by a device driver, which then filters the information as desired for its particular hardware device before the information is communicated. Return communications return data such as status and user interaction with the displayed information. Software vendors may thus write code once to output information on auxiliary displays, while hardware manufacturers can have their devices work as auxiliary displays, with little or no modification to existing hardware.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07634780",
	"publication_date": "2009-12-15",
	"application_number": "10996557",
	"application_date": "2004-11-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for extensible data gathering",
	"summary": "",
	"abstract": "Extensible device data gathering is performed by a server in concert with at least one gatherer. The server accepts requests from clients and dispatches a gatherer to gather device data from devices on a network. When the data is returned, the server stores the data in a repository. The server also handles requests for repository data from clients. A gatherer presents an interface to the server which the server can use to dispatch the gatherer. The system is extensible because new gatherers may be created and may register with the server without any changes to the server. In one embodiment, this extensibility is achieved using the COM (Component Object Model) technology.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07483959",
	"publication_date": "2009-01-27",
	"application_number": "10611118",
	"application_date": "2003-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for network emulation",
	"summary": "",
	"abstract": "A system and method for emulation of a network link include an application programming interface (API) for testing distributed applications by way of a network emulator. According to aspects of the invention, a method and computer program product are disclosed for providing an interface to a user application for configuring a network emulator. According to another aspect of the invention, a system for configuring a network emulator by way of a user application is provided. The API includes exposed functions for creating a virtual channel, creating a virtual link in the virtual channel, deleting the virtual channel, deleting the virtual link, obtaining trace data, obtaining a packet filter for the virtual channel, obtaining a link rule and the number of instances of the virtual link, initializing the emulator, modifying the virtual channel, modifying the virtual link, setting trace information for the emulator, shutting down the emulator, and stopping the emulation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07555420",
	"publication_date": "2009-06-30",
	"application_number": "10951985",
	"application_date": "2004-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for providing an XML binary format",
	"summary": "",
	"abstract": "A technique for incorporating binary formatting into a tag-based description language, such as XML, is provided. The binary formatting is achieved by tokenizing the tag and attribute names into variable sized numeric tokens, thereby obviating the need for repetitive or redundant storage of lengthy unicode words, etc. The binary formatting minimizes parsing time and the generation of overhead incident to the formatting and parsing of data. Parsing time is thereby substantially decreased and generally, the size of the resulting file decreases too.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07500017",
	"publication_date": "2009-03-03",
	"application_number": "09838436",
	"application_date": "2001-04-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for providing data to a graphics chip in a graphics display system",
	"summary": "",
	"abstract": "An API is provided to feed multiple data objects, wherever originated or located at the time of operation, to a 3D graphics chip simultaneously or in parallel. Multiple containers may be fed to a 3D graphics chip memory at the same time. In the case where data is being transmitted to a graphics chip memory, wherein the data includes the same spatial position of pixel(s), but only the orientation or color is changing, the data may be loaded into two separate containers, with a header description understood by the graphics chip and implemented by the graphics API, whereby a single copy of the position data can be loaded into one container, and the changing color or orientation data may be loaded into a second container. Thus, when received by the graphics chip, the data is loaded correctly into register space and processed according to the header description.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07528829",
	"publication_date": "2009-05-05",
	"application_number": "11346897",
	"application_date": "2006-02-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for providing modifier key behavior through pen gestures",
	"summary": "",
	"abstract": "Described is a system and method in which pen gestures cause a mode to be entered in which a computing device acts as if a modifier key (e.g., Control, Alt, or Shift) was being pressed. This is accomplished by a pen driver sending a modifier key down to the keyboard and mouse input subsystem. Modifier key behavior is thus provided, including at times when a keyboard is not readily available. While in the modifier key mode, additional gestures can be input, including a gesture that results in the computing device acting as if multiple modifier keys are pressed. Also, while in the mode, visual feedback may be provided to indicate the mode is active. The mode may be exited by sending a corresponding modifier key up, and the exit may be triggered in various ways, including by other gestures, mouse or pen events, and certain keyboard input.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07477233",
	"publication_date": "2009-01-13",
	"application_number": "11082628",
	"application_date": "2005-03-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for relocating files that are partially stored in remote storage",
	"summary": "",
	"abstract": "An improved hierarchical storage management (HSM) system used in connection with computer systems is provided. A technique is provided whereby a file having portion(s) migrated to remote storage location(s) may be efficiently relocated, and metadata for the file is updated according to its relocated storage relationships. Thus, when a source file having portions migrated to remote storage is to be re-located or copied by the HSM system to a target file, instead of copying the entire file across all of its associated storage locations, the minimum or efficient set of data is relocated. The metadata describing the source file's migration storage characteristics is updated to reflect its new use in connection with the target file.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07634491",
	"publication_date": "2009-12-15",
	"application_number": "10930122",
	"application_date": "2004-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for tracking client software use",
	"summary": "",
	"abstract": "A method and system for tracking client software use is disclosed. User data, specifically user interaction with a client-installed software application, is collected in data files and the data files are dynamically uploaded over a global computer system, such as the Internet, to a remote analysis system. The data files are parsed for on-going analysis of feature usage. Typically, for any action that a user performs in the software application, several items are recorded in a data file, such as a user ID, an absolute time-stamp, the method invoked including application source (if the software application includes more than one application), and details such as the dialog invoked, button pressed, menu used, menu item selected, application launch, application termination, as well as environment variables, such as operating system, screen resolution, etc.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07587484",
	"publication_date": "2009-09-08",
	"application_number": "09982530",
	"application_date": "2001-10-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for transferring a packet stream to RDMA",
	"summary": "",
	"abstract": "Disclosed are methods for handling RDMA connections carried over packet stream connections. In one aspect, I/O completion events are distributed among a number of processors in a multi-processor computing device, eliminating processing bottlenecks. For each processor that will accept I/O completion events, at least one completion queue is created. When an I/O completion event is received on one of the completion queues, the processor associated with that queue processes the event. In a second aspect, semantics of the interactions among a packet stream handler, an RDMA layer, and an RNIC are defined to control RDMA closures and thus to avoid implementation errors. In a third aspect, semantics are defined for transferring an existing packet stream connection into RDMA mode while avoiding possible race conditions. The resulting RNIC architecture is simpler than is traditional because the RNIC never needs to process both streaming messages and RDMA-mode traffic at the same time.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07554976",
	"publication_date": "2009-06-30",
	"application_number": "11128710",
	"application_date": "2005-05-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for troubleshooting a misconfiguration of a computer system based on configurations of other computer systems",
	"summary": "",
	"abstract": "A method and system for identifying a configuration parameter of a u201csicku201d computer system that is at fault for causing an undesired behavior based on analysis of configuration parameters from other computer systems is provided. In one embodiment, a troubleshooting system collects u201csuspectu201d values for u201csuspectu201d configuration parameters used by a u201csicku201d application when the undesired behavior was exhibited by the sick computer system. The troubleshooting system then compares the suspect values to sample values of the suspect configuration parameters retrieved from sample computer systems. The troubleshooting system uses that comparison to identify one or more suspect configuration parameters that are likely at fault for causing the application to exhibit the undesired behavior.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07584382",
	"publication_date": "2009-09-01",
	"application_number": "10918786",
	"application_date": "2004-08-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for connecting a wireless access point to a wired access point by chaining together wireless access points",
	"summary": "",
	"abstract": "An architecture and methods for extending the depth of a WLAN to a four-level hierarchal access point structure including wireless access points. The wireless access points in the WLAN can be networked by scanning for a network, collecting one or more packets that identify the network from one or more access points, each packet including an address identifying an ancestry of the access points to an ancestral wired access point; and applying an access point selection algorithm to configure a parent access point. The architecture includes a scanning object configured to issue a scan request to a network interface and collect access point data; a selection object configured to filter and sort the collected access point data; an authentication state machine configured to perform authentication and validate; and an association state machine configured to compose a packet including hierarchical data indicative of access point ancestry to a conventional access point.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07539481",
	"publication_date": "2009-05-26",
	"application_number": "11504334",
	"application_date": "2006-08-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for displaying information responsive to sensing a physical presence proximate to a computer input device",
	"summary": "",
	"abstract": "In a computer system, a touch sensitive input device having touch sensitive auxiliary controls system can be used to anticipate a user's action. When a user's hand approaches a touch sensitive input device, feedback can be displayed on a display screen. A user can receive feedback without activating the input device. The feedback may take the form of status information related to the feature controlled by the input device and can vary depending upon the application open. Likewise, when the hand of a user is moved away from the touch sensitive input device, the feedback brought on by sensing the user's hand may disappear.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07602382",
	"publication_date": "2009-10-13",
	"application_number": "11210699",
	"application_date": "2005-08-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for fast large scale data mining using logistic regression",
	"summary": "",
	"abstract": "A classifier using a logistic regression technique permits previously acquired search results to be used to perform a new search. A user inputs search terms and queries a database of previous search results. A logistical regression calculation is performed using sets of data such that the time execution performance is at least a factor of 10 improvement over a conventional technique. In our experiments where real world data was used, the execution time was reduced up to 353 times as compared to the conventional technique. The Iteratively Reweighted Least Squares (IRLS) method is used for the logistical regression method and beta vector values are calculated from the database data set. A vector of the user input terms is multiplied by the beta vector values to produce an ordered list of documents satisfying the user search terms.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07636715",
	"publication_date": "2009-12-22",
	"application_number": "11690328",
	"application_date": "2007-03-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for providing feedback on windows, messages and dialog boxes",
	"summary": "",
	"abstract": "A method to globally place a feedback button in every dialog box, message box, and top-level window in every application and message box in an operating system to provide a user with the opportunity to provide feedback for the dialog box, message box, or top-level window. The system checks a setting to determine if and what type of box/window that a feedback button will be placed and if the setting is enabled, a feedback button with customizable text will be placed on the box/window when the box/window is displayed if the type of window being displayed matches the type specified as having a feedback button. The system loads a program file that provides instructions to the user on how to provide feedback to a developer or system administrator when the user selects the feedback button. Once the user enters feedback, this feedback is sent to wherever the program file designated the information to be sent. Information about the box/window being displayed, including information about how the application got to the point of displaying the box/window, is sent along with the feedback. The user may also be sent to a website to allow the user to see what other people have reported about the box/window.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07562297",
	"publication_date": "2009-07-14",
	"application_number": "11020885",
	"application_date": "2004-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of assisting an application to traverse a firewall",
	"summary": "",
	"abstract": "A method for a firewall-aware application to communicate its expectations to a firewall without requiring the firewall to change its policy or compromise network security. An application API is provided for applications to inform a firewall or firewalls of the application's needs, and a firewall API is provided that informs the firewall or firewalls of the application's needs. An interception module watches for connect and listen attempts by applications and services to the network stack on the local computer. The interception module traps these attempts and determines what user is making the attempt, what application or service is making the attempt, and conducts a firewall policy look-up to determine whether the user and/or application or service are allowed to connect to the network. If so, the interception module may instruct the host and/or edge firewall to configure itself for the connection being requested.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07559082",
	"publication_date": "2009-07-07",
	"application_number": "10603648",
	"application_date": "2003-06-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of noise reduction based on dynamic aspects of speech",
	"summary": "",
	"abstract": "A system and method are provided that reduce noise in pattern recognition signals. To do this, embodiments of the present invention utilize a prior model of dynamic aspects of clean speech together with one or both of a prior model of static aspects of clean speech, and an acoustic model that indicates the relationship between clean speech, noisy speech and noise. In one embodiment, components of a noise-reduced feature vector are produced by forming a weighted sum of predicted values from the prior model of dynamic aspects of clean speech, the prior model of static aspects of clean speech and the acoustic-environmental model.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07617098",
	"publication_date": "2009-11-10",
	"application_number": "11433873",
	"application_date": "2006-05-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of speech recognition using hidden trajectory Hidden Markov Models",
	"summary": "",
	"abstract": "A method of speech recognition is provided that determines a production-related value, vocal-tract resonance frequencies in particular, for a state at a particular frame based on the production-related values associated with two preceding frames using a recursion. The production-related value is used to determine a probability distribution of the observed feature vector for the state. A probability for an observed value received for the frame is then determined from the probability distribution. Under one embodiment, the production-related value is determined using a noise-free recursive definition for the value. Use of the recursion substantially improves the decoding speed. When the decoding algorithm is applied to training data with known phonetic transcripts, forced alignment is created which improves the phone segmentation obtained from the prior art.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07617104",
	"publication_date": "2009-11-10",
	"application_number": "10348192",
	"application_date": "2003-01-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of speech recognition using multimodal variational inference with switching state space models",
	"summary": "",
	"abstract": "A method of efficiently setting posterior probability parameters for a switching state space model begins by defining a window containing at least two but fewer than all of the frames. A separate posterior probability parameter is determined for each frame in the window. The window is then shifted sequentially from left to right in time so that it includes one or more subsequent frames in the sequence of frames. A separate posterior probability parameter is then determined for each frame in the shifted window. This method closely approximates a more rigorous solution but saves computational cost by two to three orders of magnitude. Further, a method of determining the optimal discrete state sequence in the switching state space model is invented that directly exploits the observation vector on a frame-by-frame basis and operates from left to right in time.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07480615",
	"publication_date": "2009-01-20",
	"application_number": "10760937",
	"application_date": "2004-01-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatuses for sharing media content, libraries and playlists",
	"summary": "",
	"abstract": "Methods and systems suitable for sharing media content are provided. One system includes at least one media holder, at least one media cataloger, at least one user control point, at least one media player, and at least one network operatively connecting them. The media holder is configured to selectively output shared media metadata, media content and at least one corresponding media playing license over the network. The media cataloger is configured to receive the metadata identifying the shared media content that is available from the media holder(s). The media cataloger is configured to output at least one media catalog over the network. The media catalog identifies the shared media content that is available from the media holder(s). The user control point is configured to receive the media catalog(s) and request the shared media content as selected from the media catalog, for example, by a user. The user control point configures the media player to receive the media playing license and the media content over the network. The media player cannot play protected media content without having a proper license. The license may be withheld if certain authentication criteria are not met by the playing device. In certain implementations, the network includes a Universal Plug-and-Play network that allows the various devices to quickly integrate with one another without user intervention. The network also provides a robust environment, such that, e.g., media content sharing can easily be accomplished even if the media cataloger is not available.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07483958",
	"publication_date": "2009-01-27",
	"application_number": "10108174",
	"application_date": "2002-03-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and system for managing computational resources of a coprocessor in a computing system",
	"summary": "",
	"abstract": "The management of computational resources of coprocessors to facilitate efficient execution of multiple applications in a multitasking environment is accomplished by enabling multiple threads of execution to compose command buffers in parallel, submitting those command buffers for scheduling and dispatch by the operating system, and fielding interrupts that notify of completion of command buffers, the system enables multiple applications to efficiently share the computational resources available in the system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07631309",
	"publication_date": "2009-12-08",
	"application_number": "11670226",
	"application_date": "2007-02-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for adaptive delivery of multimedia contents",
	"summary": "",
	"abstract": "Methods and systems for generic adaptive multimedia content delivery are described. In one embodiment, a novel framework features an abstract content model and an abstract adaptive delivery decision engine. The abstract content model recognizes important aspects of contents while hiding their physical details from other parts of the framework. The decision engine then makes content adaptation plans based on the abstracted model of the contents and needs little knowledge of any physical details of the actual contents. Thus, under the same framework, adaptive delivery of generic contents is possible.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07636768",
	"publication_date": "2009-12-22",
	"application_number": "11025255",
	"application_date": "2004-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for creating and communicating with computer processes on remote systems",
	"summary": "",
	"abstract": "An application programming interface (API) presents services of a system to applications. The API is usable with all processes, local and remote, and is transparent with respect to the location of processes. A process table stores information about processes created using the system. The process table supports centralized process control and peer-to-peer process communication and synchronization. Each process is assigned a Universally Unique Identifier (UUID) that uniquely identifies the process no matter the computing device on which it runs. A parent UUID and a group UUID may be attached to the process and used for enforcing dependencies (e.g., for halting the process and all of its child processes) and for managing arbitrary, user-defined groups, respectively. A global event is associated with each process. When a process receives this event, it performs a controlled shutdown, cleans up, and reports status.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07587725",
	"publication_date": "2009-09-08",
	"application_number": "11042853",
	"application_date": "2005-01-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for language translation",
	"summary": "",
	"abstract": "A translation service is disclosed, the service being provided to a wireless mobile device through a selective downloading of information from a server. The downloaded information includes a translation architecture having a language independent translation engine and at least one language dependent translation database. The language dependent translation database includes translation templates and a translation dictionary. A specialized database for a selected city or cities in the world can also be downloaded. Translation between languages is realized by applying the language dependent translation database, and optionally the city specific translation database, to the translation engine. The translation engine implements a user-driven term replacement scheme for simplifying the translation process.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07536293",
	"publication_date": "2009-05-19",
	"application_number": "10462459",
	"application_date": "2003-06-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems of managing concurrent access to multiple resources",
	"summary": "",
	"abstract": "For a method and system for managing concurrent access to multiple resources, resources are assigned to sets in such a way that it is safe to concurrently access any combination of resources in a resource set. For each resource set, a virtual machine is defined and associated with the resource set. An application is assigned to a virtual machine. When an application requests access to a resource not in the application's virtual machine, access control lists are consulted to determine whether the access should be allowed, given the other resources already accessed by the application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07568236",
	"publication_date": "2009-07-28",
	"application_number": "11096595",
	"application_date": "2005-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Minimal difference query and view matching",
	"summary": "",
	"abstract": "The subject disclosure pertains to efficient computation of the difference between queries by exploiting commonality between them. A minimal difference query (MDQ) is generated that roughly corresponds to removal of as many joins as possible while still accurately representing the query difference. The minimal difference can be employed to further substantially the scope of view matching where a query is not wholly subsumed by a view. Additionally, the minimal difference query can be employed as an analytical tool in various contexts.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07558780",
	"publication_date": "2009-07-07",
	"application_number": "11564981",
	"application_date": "2006-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mirror driver notification of device independent bitmap drawing calls",
	"summary": "",
	"abstract": "Described is a technology including a mechanism that when activated, detects a call to a device independent bitmap. An appropriate mirror driver, such as one or more registered as an accessibility driver, may then be notified of the call. The mechanism may be activated upon creation or selection of the device independent bitmap, and may comprise a wrapper/driver that, from the perspective of the mirror driver, simulates a call to a device dependent bitmap. The notification may be performed by having the driver communicate a function call that emulates a drawing primitive to the mirror driver.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07567253",
	"publication_date": "2009-07-28",
	"application_number": "11395041",
	"application_date": "2006-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Modeling recurring events in a data store",
	"summary": "",
	"abstract": "Time-related properties may be modeled independent of a base object. Rather than storing time properties with the object, they may be stored independently. A given object may be stored once, even if it has a recurrent time property. The description of a u201cmeeting,u201d for example, may be stored once. Each occurrence of that object over time may be stored in a u201ctimeslotu201d (object <foo> occurs at time u2018tu2019 on day u2018du2019). If it is a recurring property, recurrence information may be stored independently. u201cExceptionu201d information may be stored independently as well.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07499942",
	"publication_date": "2009-03-03",
	"application_number": "11319905",
	"application_date": "2005-12-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Modular document format",
	"summary": "",
	"abstract": "Modular content framework and document format methods and systems are described. The described framework and format define a set of building blocks for composing, packaging, distributing, and rendering document-centered content. These building blocks define a platform-independent framework for document formats that enable software and hardware systems to generate, exchange, and display documents reliably and consistently. The framework and format have been designed in a flexible and extensible fashion. In addition to this general framework and format, a particular format, known as the reach package format, is defined using the general framework. The reach package format is a format for storing paginated documents. The contents of a reach package can be displayed or printed with full fidelity among devices and applications in a wide range of environments and across a wide range of scenarios.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07512878",
	"publication_date": "2009-03-31",
	"application_number": "10836326",
	"application_date": "2004-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multi-Interface aware scenario execution environment",
	"summary": "",
	"abstract": "A scenario execution environment (SEE) may include one or more action layers. Each action layer may be associated with one or more SEE actions. Each SEE action may be associated with one or more action layers. SEE code may specify one or more SEE actions. The SEE code may be parsed for the SEE actions. Each SEE action may be dispatched to each associated action layer. The action layer interface may include a start scenario element, an end scenario element and a run action element. The start scenario element may inform the action layer that one or more scenarios of the scenario execution environment are commencing. The end scenario element may inform the action layer that one or more scenarios are concluding. The run action element may instruct the action layer to carry out one or more SEE actions associated with one or more scenarios.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07546586",
	"publication_date": "2009-06-09",
	"application_number": "11059113",
	"application_date": "2005-02-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multi-layered firewall architecture",
	"summary": "",
	"abstract": "A method and system are provided for implementing a firewall architecture in a network device. The firewall architecture includes a plurality of network layers, a first firewall engine, and one or more callout modules. The layers send packets and packet information to the first firewall engine, maintain and pass packet context to subsequent layers, and process the packets. The first firewall engine compares the packet information to one or more installed filters and returns an action to the layers indicating how to treat the packet. The callouts provide additional functionality such as intrusion detection, logging, and parental control features.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07509673",
	"publication_date": "2009-03-24",
	"application_number": "10456766",
	"application_date": "2003-06-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multidimensional timeline browsers for broadcast media",
	"summary": "",
	"abstract": "The claimed subject matter provides a system and/or method that effectuates selective viewing of multimedia audio and/or visual content. The disclosed system can include a component that obtains multimedia audio or visual content from a broadcast server, categorizes the multimedia audio or visual content, and associates index tags to categorized multimedia audio or visual content. The index tags are utilized to provide a facility to search or summarize the categorized multimedia audio or visual content, wherein the resultant searches and summarizations can be displayed on a display associated with the component.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07539659",
	"publication_date": "2009-05-26",
	"application_number": "11764028",
	"application_date": "2007-06-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multimedia filter resilience",
	"summary": "",
	"abstract": "Providing resiliency to a multimedia application. A list of filters associated with the multimedia application is identified. It is determined if one or more filters of the identified list of filters are suitable for the multimedia application. The one or more filters are disabled if the one or more filters are determined to be unsuitable for the multimedia application. The one or more filters of the list of filters may also be presented to a user of the multimedia application as a function of suitability of each of the list of filters for the multimedia application. The user is allowed to manage the presented one or more filters.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07640552",
	"publication_date": "2009-12-29",
	"application_number": "10976562",
	"application_date": "2004-10-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multiple display monitor",
	"summary": "",
	"abstract": "A monitor having multiple displays within the same housing. The displays may be, for example, separate LCD panels that are placed in close proximity to one another so as to give the appearance of a single, large display. At least two of the displays may be treated by a computer connected to the monitor as a single display. A display controller divides a single frame of information that is provided by a display adapter of the computer into display information for multiple displays. By using the multiple display controller, the multiple display monitor may have more displays or panels than the number of cables linking the monitor to a computer. The special display controller also does not require a graphics card for each display. A three panel or display monitor is provided in which a central, centered work area display is framed by two side panels or displays.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07561116",
	"publication_date": "2009-07-14",
	"application_number": "10355331",
	"application_date": "2003-01-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Natural language classification within an automated response system",
	"summary": "",
	"abstract": "An automated response system (e.g., an automated voice response system) may employ learning strategies to develop or improve automated response capabilities. Learning strategies may include using communications(e.g., utterances, text messages, etc.) of one party in a conversation (e.g., a customer service agent) to identify and categorize communications of another party in the conversation (e.g., a caller). Classifiers can be build from the categorized communications. Classifiers can be used to identify common communications patterns of a party in a conversation (e.g., an agent). Learning strategies may also include selecting communications as learning opportunities to improve automated response capabilities based on selection criteria (e.g., selection criteria chosen to ensure that the system does not learn from unreliable or insignificant examples).",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07606714",
	"publication_date": "2009-10-20",
	"application_number": "10939288",
	"application_date": "2004-09-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network load balancing with connection manipulation",
	"summary": "",
	"abstract": "In an exemplary device implementation, a device includes: a connection migrator that is configured to migrate connections away from the device; the connection migrator capable of precipitating a compilation of protocol state for a connection across a protocol stack; the connection migrator adapted to aggregate the compiled protocol state with data for the connection into an aggregated connection state; the connection migrator further capable of causing the aggregated connection state to be sent toward a target device. In an exemplary media implementation, processor-executable instructions direct a device to perform actions including: obtaining at least a portion of a source/destination pair from a packet; accessing an encapsulation mapping table using the at least a portion of the source/destination pair to locate an encapsulation mapping entry; extracting a flow identifier from the encapsulation mapping entry; and replacing part of the packet with the flow identifier to produce an encapsulated packet.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07606929",
	"publication_date": "2009-10-20",
	"application_number": "10657568",
	"application_date": "2003-09-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network load balancing with host status information",
	"summary": "",
	"abstract": "In a first exemplary media implementation, one or more processor-accessible media include processor-executable instructions that, when executed, direct a system to perform actions that include: accumulating host status information at multiple hosts; and sending the accumulated host status information from the multiple hosts. In a second exemplary media implementation, one or more processor-accessible media include processor-executable instructions that, when executed, direct a system to perform actions that include: receiving host status information from multiple hosts; and making load balancing decisions responsive to the received host status information. In a third exemplary media implementation, one or more processor-accessible media include processor-executable instructions that, when executed, direct a system to perform actions that include: determining health and load information on a per application basis; and selecting an application from among multiple applications responsive to the health and load information.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07636917",
	"publication_date": "2009-12-22",
	"application_number": "10610519",
	"application_date": "2003-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network load balancing with traffic routing",
	"summary": "",
	"abstract": "In an exemplary method implementation, a method includes: receiving a packet requesting a new connection at a forwarding component; sending the packet from the forwarding component to a classifying component; selecting, by the classifying component, a route for the new connection; and plumbing, by the classifying component, the route for the new connection by causing a new entry to be added in a local routing table of the forwarding component. In an exemplary media implementation, one or more processor-accessible media include processor-executable instructions that, when executed, enable a system to perform actions including: receiving a first packet for a connection at first forwarding functionality; plumbing a route for the connection at the first forwarding functionality; receiving a second packet for the connection at second forwarding functionality; and plumbing the route for the connection at the second forwarding functionality using a distributed session tracking table.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07567504",
	"publication_date": "2009-07-28",
	"application_number": "10657412",
	"application_date": "2003-09-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network quality of service for qualitative applications",
	"summary": "",
	"abstract": "A system and method that enables network quality of service to be based on qualitative factors. RSVP signaling is extended to allow RSVP messages to be identified as qualitative, and to pass qualitative information with the messages. RSVP-aware network devices such as routers in the message path analyze the qualitative information and apply policy based thereon to perform admission control and allocation of resources based on qualitative factors. An application identifier is provided, along with a sub-application identifier that provides fine-grained qualitative information, such as to identify what type of network service an application is requesting. Qualitative signaling may employ RSVP integrated with differentiated services by returning a DCLASS object in an RSVP message, to assign an application's traffic to one or more aggregate classes based on a policy evaluation, which may use qualitative factors against policy for each request. For admitted requests, the application's host machine or an upstream sender may mark the packets with the appropriate aggregate classification information, whereby packets are then prioritized accordingly in the network.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07478161",
	"publication_date": "2009-01-13",
	"application_number": "10631203",
	"application_date": "2003-07-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "New-word pronunciation learning using a pronunciation graph",
	"summary": "",
	"abstract": "A method and computer-readable medium convert the text of a word and a user's pronunciation of the word into a phonetic description to be added to a speech recognition lexicon. Initially, a plurality of at least two possible phonetic descriptions are generated. One phonetic description is formed by decoding a speech signal representing a user's pronunciation of the word. At least one other phonetic description is generated from the text of the word. The plurality of possible sequences comprising speech-based and text-based phonetic descriptions are aligned and scored in a single graph based on their correspondence to the user's pronunciation. The phonetic description with the highest score is then selected for entry in the speech recognition lexicon.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07590533",
	"publication_date": "2009-09-15",
	"application_number": "10796921",
	"application_date": "2004-03-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Node-to-node communication pipelines",
	"summary": "",
	"abstract": "Node-to-node communication pipelines may include code modules that are configured and assembled across a protocol according to dynamically input module-specific parameters. The parameters may be input to a service into which the modules are registered, and one or more appropriate pipelines may be dynamically assembled.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07634578",
	"publication_date": "2009-12-15",
	"application_number": "11181614",
	"application_date": "2005-07-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Noise reduction using correction vectors based on dynamic aspects of speech and noise normalization",
	"summary": "",
	"abstract": "A method and apparatus are provided for reducing noise in a signal. Under one aspect of the invention, a correction vector is selected based on a noisy feature vector that represents a noisy signal. The selected correction vector incorporates dynamic aspects of pattern signals. The selected correction vector is then added to the noisy feature vector to produce a cleaned feature vector. In other aspects of the invention, a noise value is produced from an estimate of the noise in a noisy signal. The noise value is subtracted from a value representing a portion of the noisy signal to produce a noise-normalized value. The noise-normalized value is used to select a correction value that is added to the noise-normalized value to produce a cleaned noise-normalized value. The noise value is then added to the cleaned noise-normalized value to produce a cleaned value representing a portion of a cleaned signal.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07542900",
	"publication_date": "2009-06-02",
	"application_number": "11429630",
	"application_date": "2006-05-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Obfuscating document stylometry",
	"summary": "",
	"abstract": "A new system has been invented that can obfuscate the stylometry of a document. This may be used to anonymize a document and make it resistant to forensic stylometry analysis, or to mimic the style of an existing set of documents, for example. A system may compare indicators of distinctive stylometry in a document with corresponding indicators of distinctive stylometry in a stylometric reference, and provide one or more alterations to the document that alter the indicators of distinctive stylometry compared to the stylometric reference, according to one illustrative embodiment.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07627562",
	"publication_date": "2009-12-01",
	"application_number": "11451910",
	"application_date": "2006-06-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Object connectivity through loosely coupled publish and subscribe events",
	"summary": "",
	"abstract": "An object-based event communications system supplies an event distribution object having an outgoing-from-publisher event interface and associated with unique identifiers defined for a publisher that is programmed to fire events by calling a method on the event distribution object's outgoing-from-publisher event interface. The event communications system stores subscriptions of subscriber objects to methods of the outgoing-from-publisher event interface. On receiving a call from a publisher to its outgoing-from-publisher interface methods, the event distribution object multi-casts calls to counterpart methods of subscriber objects that have stored subscriptions to the respective outgoing-from-publisher interface methods.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07478405",
	"publication_date": "2009-01-13",
	"application_number": "10955975",
	"application_date": "2004-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Object framework and services for periodically recurring operations",
	"summary": "",
	"abstract": "A computer system includes an object oriented framework that provides a set of application integration interfaces that support programmatic updating operations for maintaining locally stored copies of resources such as hypertext document pages from remote servers on a computer network. The updating operations continually check for updates to the data at the remote server and download updated versions of the resources to maintain concurrency of the locally stored copy. The updating operations are performed while a connection to the remote network is left idle, to maximize usage of on-line connection time. The updating operations also can be programmatically scheduled by a client program of the updating operations. The updating operations include updating the contents of a folder or directory in a local file system as specified in a file at a remote server on the network, and providing automatically updating and populating groups of sites or document pages organized by category.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07493613",
	"publication_date": "2009-02-17",
	"application_number": "11281326",
	"application_date": "2005-11-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Object model document for obfuscating object model therein",
	"summary": "",
	"abstract": "A persisted object model is loaded from an object model document comprising a compiled executable file having an image source, a security source, and a loader. The loader is instantiated, and instantiates the object model from the image source and a security agent from the security source to control access to the instantiated object model. The loader returns to a commander a first reference to the instantiated security agent, whereby the commander in employing the first reference accesses the security agent rather than the instantiated object model. A commander issues a command to the instantiated object model by way of the first reference to the security agent, and the security agent receives and reviews same according to pre-defined rules to determine whether the object model should in fact receive the command. If so, the security agent forwards the command to the object model.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07591021",
	"publication_date": "2009-09-15",
	"application_number": "10656384",
	"application_date": "2003-09-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Online page restore from a database mirror",
	"summary": "",
	"abstract": "A set of servers takes advantage of the existing data redundancy of a mirrored database to restore page corruptions. The page restore may occur with none of the time and/or administration costs of a restore from backup media and without the data loss associated with repair. Online page restore from a database mirror can be initiated and performed by the computer system automatically upon corruption detection. An entire file or database instead of an individual page or set(s) of pages can be restored. The mechanism can be used both to restore corrupt pages on the principal server from a mirror, or corrupt pages on a mirror from the principal server. Online page restore from a database mirror enables page data recovery without the need to find/load/scan through and apply data and log backups, allowing efficient and potentially automatic data recovery.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07636741",
	"publication_date": "2009-12-22",
	"application_number": "11204593",
	"application_date": "2005-08-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Operating system managing a linked list of callback dynamic function tables for acquiring exception handling information from a runtime environment",
	"summary": "",
	"abstract": "In an exemplary media implementation, one or more electronically-accessible media include electronically-executable instructions that utilize an application programming interface, the application programming interface facilitating creation of callback-type dynamic function tables; each callback-type dynamic function table including a begin address, an end address, and a callback function, each callback-type dynamic function table corresponding to a code heap that stores code for multiple functions in a runtime environment; wherein interaction between the runtime environment and an operating system is precipitated upon calling the callback function to acquire exception handling and/or unwind information. In another exemplary media implementation, one or more electronically-accessible media include at least part of an operating system that is configured to request from a runtime environment exception handling and/or unwinding information for functions that are managed by the runtime environment.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07634778",
	"publication_date": "2009-12-15",
	"application_number": "10609267",
	"application_date": "2003-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Operations engine error handling",
	"summary": "",
	"abstract": "A file operations engine is provided that manages many user interactions with their files via a computer system. The operation engine may place certain classes of errors in an error queue while performing a requested operation without waiting for a user to satisfy the errors prior to continuing with the operation. In addition, the operations engine may pre-calculate potential errors for a requested operation prior to performing the operation. Dialogs may be provided to a user to satisfy errors listed in an error queue and/or identified while pre-calculating potential errors. Methods are provided for handling file operations errors and for interacting with a user interface for file operations. Computer-executable instructions for implementing the disclosed methods are stored on computer-readable media.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07624307",
	"publication_date": "2009-11-24",
	"application_number": "11136512",
	"application_date": "2005-05-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Optical drive spin rate control",
	"summary": "",
	"abstract": "A method and system for controlling the spin rate of an optical device. A device driver provides notification that media has been inserted into the optical device. A control service determines the format of information on the media. The spin rate of the optical device is locked or unlocked based on the format.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07599264",
	"publication_date": "2009-10-06",
	"application_number": "11090772",
	"application_date": "2005-03-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Optimizing compiler transforms for a high level shader language",
	"summary": "",
	"abstract": "A high level shader language compiler incorporates transforms to optimize shader code for graphics processing hardware. An instruction reordering transform determines instruction encapsulations of dependent instructions that reduce concurrent register usage by the shader. A phase pulling transform re-organizes the shader's instructions into phases that reduce a measure of depth of texture loads. A register assigning transform assigns registers to lower register usage by the shader.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07530062",
	"publication_date": "2009-05-05",
	"application_number": "10445397",
	"application_date": "2003-05-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Organization-based content rights management and systems, structures, and methods therefor",
	"summary": "",
	"abstract": "A rights-managed document has protected content from an author thereof, whereby a recipient of the document can render the protected content with a corresponding license if the recipient satisfies terms set forth in the license. In the document, a storage portion has a message that the document is rights management protected, and a custom data portion has a section including the protected content. The recipient if enabled can render the protected content in the custom data portion and if not enabled can only review the storage portion having the message. An enabled recipient handles the received rights-managed document by recognizing that the document has the protected content in the custom data portion thereof, and discounting the storage portion of the document. Thus, the recipient examines the custom data portion of the document and proceeds based thereon to render the protected content in the custom data portion.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07549062",
	"publication_date": "2009-06-16",
	"application_number": "10607627",
	"application_date": "2003-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Organization-based content rights management and systems, structures, and methods therefor",
	"summary": "",
	"abstract": "A method is employed to propagate rights management (RM) protection to an email and to an attachment thereof comprising an RM-protectable document. The email with the RM-protectable attachment is authored, and a content key (KD) and a bind ID are generated. RM protection is first applied to the RM-protectable attachment of the email based on the generated (KD) and the generated bind ID, and the RM-protected attachment is attached to the email. RM protection is then applied to the email with the attached RM-protected attachment based on the generated (KD) and the generated bind ID. The RM-protected email and the RM-protected attachment thereof thus share the generated (KD) and the generated bind ID such that a license obtained for the RM-protected email and having therein the generated bind ID and the generated (KD) can be applied to render the RM-protected email and also the RM-protected attachment thereof.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07512798",
	"publication_date": "2009-03-31",
	"application_number": "10608476",
	"application_date": "2003-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Parallel debugger",
	"summary": "",
	"abstract": "A debugger attaches to a parallel process that is executing simultaneously at various nodes of a computing cluster. Using a shim, executing at each node, to monitor each of the processes, the parallel process is debugged such that neither the process or the particular message passing system implemented on the cluster, needs to know of the existence or details regarding the debugger.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07512934",
	"publication_date": "2009-03-31",
	"application_number": "10925799",
	"application_date": "2004-08-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Parallel filter check using an arithmetic memory location",
	"summary": "",
	"abstract": "Performing parallel comparisons of variables to determine program code execution flow or to compare multiple variables is disclosed. Memory locations are packed with multiple sub-variables for comparison to sub-variables generated, for example, at runtime. Each binary sub-variable includes a u201ccarryoutu201d bit used to determine whether a comparison of one sub-variable with another sub-variable results in a u201ctrueu201d or a u201cfalse.u201d A modified version of twos complement arithmetic is performed on a set of sub-variables. The modified version involves inverting each bit of the sub-variables, performing a masking operation to change the carryout bits to 0, adding a binary 1 to each sub-variable, and performing the masking operation a second time to change the carryout bits to 0. The result of the modified twos complement arithmetic is added to a variable, and the carryout bit of each sub-variable of the resulting variable is evaluated.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07500233",
	"publication_date": "2009-03-03",
	"application_number": "11108020",
	"application_date": "2005-04-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Peer networking host framework and hosting API",
	"summary": "",
	"abstract": "A device hosting framework provides hosting for software-implemented logical devices (including peripheral devices bridges) on a computer to expose their services as controlled devices per a peer networking protocol. The device hosting framework encapsulates discovery, description and control protocol operations of the peer networking protocol, which frees the developers of the hosted devices from having to individually implement the peer networking protocol in the hosted devices' software and need implement only the core functionality of the hosted device. The device hosting framework operates as a host supporting device interoperability via the peer networking protocol for multiple hosted devices.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07620724",
	"publication_date": "2009-11-17",
	"application_number": "11337204",
	"application_date": "2006-01-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Peer-to-peer (P2P) mobility system, and method",
	"summary": "",
	"abstract": "An end host in a peer-to-peer system stores identifiers for both its peers and the neighbors of its peers. When the IP address of the end host and one of the peers changes, the end host's new IP address can be sent to each neighbor of the peer so that communication between the end host and the peer will not be lost. The order in which the neighbors of the peer are stored can be prioritized for faster delivery of the end host's changed IP address to the peer. The prioritizing can be by available bandwidth of the neighbors, proximity of the neighbors, trust between the peer and its neighbors, the probability that the IP address of the neighbors will change, etc. Proximity of the peers from each other and the end host can be a function of the identifier, which can be generated from a public key.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07536467",
	"publication_date": "2009-05-19",
	"application_number": "10828400",
	"application_date": "2004-04-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Peer-to-peer grouping interfaces and methods",
	"summary": "",
	"abstract": "Application programming interfaces and methods that provide group management in a peer-to-peer (P2P) network are provided. More specifically, new and improved P2P application programming interfaces (APIs) and methods for the creation and access of groups, the retrieval of member and group information, the addition, modification, deletion and management of records (data), the importation and exportation of group data, the direct communication between members, the addition of a security provider to a group, the setting and retrieval of presence information, the registering for event notifications, and other utility and support functions are presented. Each of these interfaces utilize various parameters that are passed in from an application program that uses these interfaces to manage and utilize groups. The interfaces return a value that indicates the success or failure of the function. For failures, the interfaces provide an indication as to the problem resulting in the failure.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07596625",
	"publication_date": "2009-09-29",
	"application_number": "10351905",
	"application_date": "2003-01-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Performant and scalable merge strategy for text indexing",
	"summary": "",
	"abstract": "A full-text search index system and method is generated by creating instances of a database index from an in-memory inverted list of keywords associated with a text identifier and the occurrences of the keyword in the text. Instances of the index are placed in a priority queue. A merge scheduling process determines when a merge should be initiated, selects instances of the index to be merged and selects a type of merge to perform. Instances of an index are assigned a temporal indicator (timestamp). A set of instances is selected to be merged. The set of instances is validated and merged.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07590645",
	"publication_date": "2009-09-15",
	"application_number": "11224579",
	"application_date": "2005-09-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Performing a deletion of a node in a tree data storage structure",
	"summary": "",
	"abstract": "The addition of a layer between a tree data storage structure and a persistent storage is disclosed. The additional layer, called a storage module, generates an identifier and allocates it to a node in the tree data storage structure. The storage module additionally performs a mapping function, allocating the identifier to a location in persistent storage. If the node is later deleted from the tree data storage structure, then the mapping of the identifier to the location in persistent storage is likewise deleted. In this way, if the node is deleted and, concurrently, a lookup or write operation is attempted on the deleted node, the storage module will read the identifier associated with the deleted node but will not be able to map the identifier to a location in persistent storage. Instead, an exception is generated and sent to the tree data storage module.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07630998",
	"publication_date": "2009-12-08",
	"application_number": "11149593",
	"application_date": "2005-06-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Persistent representations for complex data structures as interpreted programs",
	"summary": "",
	"abstract": "The structure of a complex data object such as a multimedia presentation is stored in a persistent representation comprising a directly executable program. The instructions of the program are created by translating recorded method calls on a function library when the object is created. The structure of the object is recreated during playback by executing the program instructions in a stack-based virtual machine in a user's computer. The persistent representation thus stores the structure as a series of operations for building the object, rather than as a static plan of the structure itself.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07490315",
	"publication_date": "2009-02-10",
	"application_number": "11176651",
	"application_date": "2005-07-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Point-to-point data communication implemented with multipoint network data communication components",
	"summary": "",
	"abstract": "A data communication system is configured to communicatively link a host device and a client device with a point-to-point data communication link, where the point-to-point data communication link is configured with multipoint network data communication components designed for data communication over a distributed network. A data communication interface at the host device is communicatively linked with a data communication interface driver via the point-to-point data communication link between the host device and the client device. The data communication interface driver communicates with a virtual driver component for the client device via a virtual network at the client device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07631031",
	"publication_date": "2009-12-08",
	"application_number": "11027122",
	"application_date": "2004-12-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Power management of wireless local area network interface devices",
	"summary": "",
	"abstract": "Computer-implemented methods for power management of network interface devices are disclosed. Such methods may include dividing a time period into a plurality of time slots, determining an amount of data received by the network interface device during a first of the time slots, and determining whether the amount of data received exceeds a predefined threshold. If the amount of data received exceeds the predefined threshold, then the network interface device is caused to be awake during a subsequent time slot. The network interface device is caused to go to sleep during the subsequent time slot unless the amount of data received exceeds the predefined threshold. A number of the time slots may be defined as wakeup time slots during which the network interface device is awake. The number of time slots during the time period in which one or more packets were received by the network interface device may be compared to the number of wakeup time slots during the time period. Based on the comparison, the number of wakeup time slots may be adjusted for a subsequent time period.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07631202",
	"publication_date": "2009-12-08",
	"application_number": "11091958",
	"application_date": "2005-03-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Predicate based group management",
	"summary": "",
	"abstract": "Embodiments are provided to generate an integrated data structure. In an embodiment, a database system is configured to generate an integrated database view that includes a number of predicate-based objects and a number of enumerated objects. A declarative membership criteria can be used to provide automatic membership to a group of objects associated with the database system. A number of predicate-based group membership rules can be used when generating a database view that includes a number of predicate-based views and a number of enumerated groups.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07596584",
	"publication_date": "2009-09-29",
	"application_number": "11789603",
	"application_date": "2007-04-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Predicting capacity consumption in a memory component",
	"summary": "",
	"abstract": "Techniques and technologies are provided for predicting when remaining storage capacity of a memory component will be fully consumed. For example, the remaining storage capacity of the memory component can be determined and a rate of change of the storage capacity can be calculated. Using this information, a prediction or estimate can be made as to when the remaining storage capacity of the memory component will be fully consumed. The prediction or estimate can be based, for example, on a ratio of the remaining storage capacity to the rate of change of the storage capacity.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07590666",
	"publication_date": "2009-09-15",
	"application_number": "11454592",
	"application_date": "2006-06-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Prefetching and caching persistent objects",
	"summary": "",
	"abstract": "Prefetching and caching persistent objects is disclosed. The system creates a structure context used to identify a set containing a first object and other related objects. The objects have attributes, where each attribute is identified by a name. Upon a fetch of an attribute in the first object, the system also fetches related data. The related data includes other attributes in the object, and attributes in the other objects of the set having the same name as the attribute fetched for the first object.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07555488",
	"publication_date": "2009-06-30",
	"application_number": "10782229",
	"application_date": "2004-02-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Presenting a merged view of remote application shortcuts from multiple providers",
	"summary": "",
	"abstract": "Systems and methods for presenting a merged view of remotely installed applications to which a user has terminal server (TS) based access are described. In one aspect, a client computing device generates one or more shortcuts to one or more respective applications. Each of the applications is installed at one or more installation points in an Intranet. The client computing device is external to the Intranet. The one or more shortcuts are aggregated to present a merged view of the applications. The merged view is transparent of whether the applications are managed by different information sources on the Intranet and/or configured for remote TS-based execution by different ones of one or more installation points.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07590713",
	"publication_date": "2009-09-15",
	"application_number": "10722182",
	"application_date": "2003-11-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Printer filter configuration",
	"summary": "",
	"abstract": "A flexible printing subsystem is enabled with a printer filter pipeline. A configurable and arbitrary number of printer filters forming a printer filter pipeline are applied to files that are to be printed. In a described implementation, the printer filter pipeline may implement enhancement features and conversion functions as determined by the individual printer filters forming the printer filter pipeline. The printer filter pipeline is established in accordance with a printer filter configuration file. The printer filter configuration file stipulates a printer filter order and includes a printer filter entry associated with each printer filter to be part of the printer filter pipeline. Each printer filter entry identifies the associated printer filter by name and enumerates the interfaces thereof. Printer filters may be adjacently linked in a printer filter pipeline when their mating interfaces match.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07554682",
	"publication_date": "2009-06-30",
	"application_number": "11024049",
	"application_date": "2004-12-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Priority binding",
	"summary": "",
	"abstract": "Priority binding enables a one-to-many mapping of a target to a source without requiring complex code development by the specification of one or more binding statements. During runtime, these bindings are evaluated. The highest priority binding that evaluates successfully is executed, controlling the two-way transfer of information between source and target. During execution, all possible data binding pathways are monitored. If a binding that has a higher priority than the existing binding evaluates successfully, the existing binding is terminated and the new binding is executed.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07539687",
	"publication_date": "2009-05-26",
	"application_number": "10823461",
	"application_date": "2004-04-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Privelege level changing for virtual memory mapping",
	"summary": "",
	"abstract": "Described is a system and method whereby processes may have multiple memory maps associated therewith to provide curtained memory and overcome other memory-related problems. Multiple maps are used to restrict memory access of existing code such as drivers, without changing that code, and without changing existing microprocessors. A thread of a process is associated with one memory map at a time, which by mapping to different memory locations, provides memory isolation without requiring a process switch. Memory isolation may be combined with controlled, closed memory map switching performed only by trusted code, to ensure that some protected memory is inaccessible to all but the trusted code (curtained memory). For example, the threads of the process may ordinarily run at one privilege level with a restricted map, with map switching is only allowed at a higher privilege level. As the threads run through code, the map may be appropriately changed on entering and leaving the trusted code, thus controlling what memory addresses are accessible based on what code is currently being executed. Map switching among multiple maps eliminates the need to change a process in order to access different memory, thereby allowing expanded memory addressing in a single process and isolating untrusted code run in process from certain memory of that process.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07543293",
	"publication_date": "2009-06-02",
	"application_number": "11320499",
	"application_date": "2005-12-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Processing information received at an auxiliary computing device",
	"summary": "",
	"abstract": "Described is a mechanism for receiving new data at an auxiliary device associated with a main computer system, and processing that new data within the auxiliary device firmware to take some action. The receipt and processing of the data is independent of whether the main computer system is in a powered-up state (online) or powered-down state (offline). A cache that maintains the user application data for offline navigation may be updated with new data, either to change existing data in the cache or add a new navigation path. The received data can be processed to perform other actions, depending on the context of that data as determined by auxiliary processing.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07558884",
	"publication_date": "2009-07-07",
	"application_number": "10837895",
	"application_date": "2004-05-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Product support connected error reporting",
	"summary": "",
	"abstract": "Methods are described for solving the problems associated with error messages by providing methods for unique identification of error messages to allow for resolving one or several messages to information, such as a knowledge base article. The methods include a method for reporting errors by generating an error message box upon determination that an error occurred, displaying the error message box to a user and allowing a user to interact with the error message box by selecting a universal resource locator (URL) in the error message box to connect to product support. The user can cause passing of a string to product support including an error message identifier to enable a search to match the error message identifier to information concerning the error. The information could be information about the error or a bug submission form for assisting product support to isolate a new error in the application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07571355",
	"publication_date": "2009-08-04",
	"application_number": "10684163",
	"application_date": "2003-10-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Profile and consent accrual",
	"summary": "",
	"abstract": "Consent management between a client and a network server. In response to a request for consent, a central server determines if requested user information is included in a user profile associated with a user and if the user has granted consent to share the requested user information. A user interface is provided to the user via a browser of the client to collect the requested user information that is not included in the user profile and the consent to share the requested user information from the user. After receiving the user information provided by the user via the user interface, the service provided by the network server is allowed access to the received user information, and the central server updates the user profile. Other aspects of the invention are directed to computer-readable media for use with profile and consent accrual.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07590705",
	"publication_date": "2009-09-15",
	"application_number": "10784530",
	"application_date": "2004-02-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Program and system performance data correlation",
	"summary": "",
	"abstract": "System performance data and program performance data may be collected, converted into the same format and correlated by time. A graph or other display of system performance data over a time period may be displayed. A bar may be superimposed on the graph. A corresponding grid or other display, of program performance data over the same time period may be displayed. An item or line of the grid corresponding to a program event at a particular timepoint may be selected. A timepoint in the system performance graph may be selected by adjusting the position of the bar superimposed on the system performance graph. In response to the movement of the bar, the portion of the grid of program performance data displayed may be changed so that the grid of program performance data displays program performance data corresponding to the selected timepoint in the system performance graph.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07559053",
	"publication_date": "2009-07-07",
	"application_number": "10924536",
	"application_date": "2004-08-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Programmatical access to handwritten electronic ink in a tree-based rendering environment",
	"summary": "",
	"abstract": "A system and method for performing ink related operations in a tree-based presentation system is described. Ink-related programmatical interfaces may relate to interactions with a stroke object, a stroke collection object, and ink input elements.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07499058",
	"publication_date": "2009-03-03",
	"application_number": "11379938",
	"application_date": "2006-04-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Providing change notifications to an entity-regarding a change of a specific type to data in a relational database",
	"summary": "",
	"abstract": "A framework for data change notification includes a notification queue storing event notifications. Client applications can request event information regarding various data change events. For example, a client application can subscribe, via one or more APIs, to receive event information. The framework allows for session specific event notification mechanisms as well as durable event notification mechanisms that can be preserved across client sessions as well as server restarts. Innovative aspects of this invention include guaranteed delivery of event notifications, APIs to allow applications get summary of past events on the subscribed objects, automatic garbage collection/cleanup of notifications when a client session terminates.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07543003",
	"publication_date": "2009-06-02",
	"application_number": "11211869",
	"application_date": "2005-08-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Providing instrumentation data to an instrumentation data source from within a managed code",
	"summary": "",
	"abstract": "A computer-implemented method for exposing instrumentation data available from within a managed code environment to an instrumentation data source executing outside of said managed code environment is presented. The method comprises each of the following. An indication is received that said instrumentation data should be exposed to said instrumentation data source. In response to receiving said indication, a decoupled provider is loaded. The decoupled provider facilitates communication between said managed code environment and said instrumentation data source. A determination is made as to whether schema describing said instrumentation data has been previously registered with said instrumentation data source. In response to determining that said schema has not been previously registered with said instrumentation data source, said schema is registered with said instrumentation data source through said decoupled provider.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07631300",
	"publication_date": "2009-12-08",
	"application_number": "11218022",
	"application_date": "2005-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Providing online connectivity across a range of electronic communications systems",
	"summary": "",
	"abstract": "Methods and systems allow an application capable of online communication to monitor the availability of different electronic communications sources and provide transition between online and offline operation and between different electronic communications sources. When a change occurs in connectivity source status, such as when the user disconnects from a wireline connection or goes offline or when a connection is otherwise lost due to mechanical failure or loss of wireline or wireless signal or when a reduction in bandwidth or connection speed is detected, the application is automatically transitioned between online and offline status and between different types of connectivity source without user action and without interruption of use of the application. If an online connection may not be obtained via TCP/IP connection, a determination is made as to whether the application and computer operating system are configured for RPC/HTTP connectivity. If the application and computer operating system are configured for RPC/HTTP connectivity, RPC/HTTP connection is attempted.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07532571",
	"publication_date": "2009-05-12",
	"application_number": "10608944",
	"application_date": "2003-06-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Providing user on computer operating system with full privileges token and limited privileges token",
	"summary": "",
	"abstract": "An operating system for a computing device has a first session for a user that includes a first base process that has a first privileges token attached thereto. The first privileges token includes substantially a full set of privileges of the user on the operating system. The operating system also has a second session for the user that includes a second base process that has a second privileges token attached thereto. The second privileges token is derived from the first privileges token and includes only a minimum set of privileges of the user on the operating system. Thus, the second, limited token does not have all privileges associated with the first, full token but instead has a limited set of privileges and not extra privileges that could be employed to take actions that would be harmful, deceptive, or malicious.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07636851",
	"publication_date": "2009-12-22",
	"application_number": "11171744",
	"application_date": "2005-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Proximity detection employed in connection with rights management system or the like",
	"summary": "",
	"abstract": "A sink sends a registration request to a source and the source validates same, and the source sends a registration response including a secret to the sink. The source then sends a proximity message including a nonce to the sink and concurrently notes a start time. The sink employs the secret and the nonce to generate a proximity value and sends same to the sources. The source receives the proximity value and concurrently notes an end time, verifies the proximity value based on the secret and the nonce, calculates from the noted start and end times an elapsed time, compares the elapsed time to a predetermined threshold value, decides from the comparison whether the sink satisfies the proximity requirement, and registers the sink as being able to access content from such source if the sink satisfies the proximity requirement.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07574747",
	"publication_date": "2009-08-11",
	"application_number": "11139951",
	"application_date": "2005-05-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Publishing digital content within a defined universe such as an organization in accordance with a digital rights management (DRM) system",
	"summary": "",
	"abstract": "A licensor receives a request from a requestor including an identifier identifying the requestor and rights data associated with digital content, where the rights data lists at least one identifier and rights associated therewith. The licensor thereafter locates the identifier of the requestor in a directory, and locates in the directory based thereon an identifier of each group which the requestor is a member of. Each of the located requestor identifier and each located group identifier is compared to each identifier listed in the rights data to find a match, and a digital license to render the content is issued to the requestor with the rights associated with the matching identifier.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07577999",
	"publication_date": "2009-08-18",
	"application_number": "10364627",
	"application_date": "2003-02-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "PXE server with multiple provider model",
	"summary": "",
	"abstract": "Multiple providers of application logic are used to deploy and install an operating system image to a client. Each provider configured with application logic designed to deploy and install an operating system image to a distinct class of clients. When a server receives a request associated with deploying and installing the operating system image from the client, the server sends the request to the provider configured with application logic designed to deploy and install an operating system to the client.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07631038",
	"publication_date": "2009-12-08",
	"application_number": "11358479",
	"application_date": "2006-02-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Quasi-particle interferometry for logical gates",
	"summary": "",
	"abstract": "A quantum computer can only function stably if it can execute gates with extreme accuracy. u201cTopological protectionu201d is a road to such accuracies. Quasi-particle interferometry is a tool for constructing topologically protected gates. Assuming the corrections of the Moore-Read Model for u03bd=5/2's FQHE (Nucl. Phys. B 360, 362 (1991)) we show how to manipulate the collective state of two e/4-charge anti-dots in order to switch said collective state from one carrying trivial SU(2) charge, |1>, to one carrying a fermionic SU(2) charge |u03b5>. This is a NOT gate on the {|1>, |u03b5>} qubit and is effected by braiding of an electrically charged quasi particle u03c3 which carries an additional SU(2)-charge. Read-out is accomplished by u03c3-particle interferometry.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07598514",
	"publication_date": "2009-10-06",
	"application_number": "12128417",
	"application_date": "2008-05-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Query services for database system",
	"summary": "",
	"abstract": "A query web service wraps functionality of a number of database query subsystems. The query web service exposes interfaces with methods, when invoked, perform a wide variety of functions related to querying the database. Such methods allow a user to write to the interface to create, manage and execute queries against the entities in the database.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07480661",
	"publication_date": "2009-01-20",
	"application_number": "10201545",
	"application_date": "2002-07-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Queued component interface passing for results outflow from queued method invocations",
	"summary": "",
	"abstract": "Queued component interface passing provides a way for a queued component to convey results of processing a client program's method invocations made asynchronously via a queue. A queued component recorder for a u201cprocessingu201d queued component operates to marshal-by-value a method invocation parameter that is reference to another queued component recorder for another u201cresultsu201d queued component into a data stream of recorded method invocations, which is then submitted as a message to a queue associated with the processing queued component. On receipt of the message from the queue, a queued component player for the processing queued component unmarshals the reference to the other queued component recorder and passes this reference to the processing queued component. The processing queued component uses the passed reference to invoke methods of the results queued component through its message queue, which conveys the processing queued component's results.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07634777",
	"publication_date": "2009-12-15",
	"application_number": "11034517",
	"application_date": "2005-01-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Ranking functions using an incrementally-updatable, modified nau00efve bayesian query classifier",
	"summary": "",
	"abstract": "Methods of ranking documents on a network using an incrementally-updatable system are disclosed. Computer readable storage media having stored computer-executable instructions for performing a method of ranking documents on a network using an incrementally-updatable system are also disclosed. Further, computing devices containing at least one application module comprising application code for performing methods of ranking documents on a network using an incrementally-updatable system are disclosed.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07620634",
	"publication_date": "2009-11-17",
	"application_number": "11496373",
	"application_date": "2006-07-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Ranking functions using document usage statistics",
	"summary": "",
	"abstract": "Methods of providing a document relevance score to a document on a network are disclosed. Computer readable medium having stored thereon computer-executable instructions for performing a method of providing a document relevance score to a document on a network are also disclosed. Further, computing systems containing at least one application module, wherein the at least one application module comprises application code for performing methods of providing a document relevance score to a document on a network are disclosed.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07499919",
	"publication_date": "2009-03-03",
	"application_number": "11231955",
	"application_date": "2005-09-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Re-establishing a connection for an application layer via a service layer",
	"summary": "",
	"abstract": "A method and system for establishing a connection with a server after a connection has been broken is provided. A connection system in a service layer of a client detects that a connection between the client and the server has been broken. Upon detecting the broken connection, the connection system of the service layer automatically attempts to re-establish an application-level connection to the server. If the connection system can re-establish an application-level connection to the server, then it need not notify the application layer of the broken connection.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07594020",
	"publication_date": "2009-09-22",
	"application_number": "11142901",
	"application_date": "2005-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Real time event stream processor to ensure up-to-date and accurate result",
	"summary": "",
	"abstract": "Identifying a transaction from a real time event stream having latency. A method of the invention receives events from the real time event stream where events define a plurality of transactions to be identified. Each of the transactions includes a first event and a second event; the first event has a first latency relative to the real time event stream and the second event has a second latency relative to the real time event stream. The first event is identified from the received real time event stream, and a time is record when the first event is received. The method determines a time period during which the second event occurs as a function of the first latency, the recorded time of the first event, and the second latency. The transaction having the first and second events is identified based on the determined time period of the second event.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07512829",
	"publication_date": "2009-03-31",
	"application_number": "11148512",
	"application_date": "2005-06-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Real-time on-demand dynamic document generation",
	"summary": "",
	"abstract": "Real-time, on-demand dynamic document generation is disclosed. A merging logic integrates one or more auxiliary files with a main file to dynamically generate a displayed document. The merging logic determines the number and the locations of the auxiliary files. The logic validates each auxiliary file against a schema that defines how the auxiliary files can modify the main file. After validation, the merging logic merges the auxiliary files with the main file in accordance with the schema to generate the document.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07478318",
	"publication_date": "2009-01-13",
	"application_number": "10838478",
	"application_date": "2004-05-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Recognizing event patterns from event streams",
	"summary": "",
	"abstract": "System and method for identifying a pattern. A method of the invention compiles a pattern description where the pattern description defines a series of a first event and a second event relating to the first event. The first event is received and includes a type parameter data, a time parameter data, and a substance parameter data. A system of the invention includes a script component for associating or attaching a first script to the first event. The first script defines the type, time, and substance parameters of the second event as a function of the parameters of the first event according to the pattern description. A pattern recognition engine executes the attached first script and the executed script identifies the second event and thereby identifies the pattern.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07627544",
	"publication_date": "2009-12-01",
	"application_number": "11133701",
	"application_date": "2005-05-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Recording/playback tools for UI-based applications",
	"summary": "",
	"abstract": "Techniques and tools are described for recording input from user actions in a user interface (UI) and replicating the UI activity on a computing device. When recording and replicating UI activity, these techniques and tools improve the readability of the recorded input data and the reliability of playback. The techniques and tools may be used in combination or separately. For example, a recording tool uses a set of filters, which aggregates recorded data into basic, readable primitive methods. The recording tool converts the aggregated data into playback code by converting the playback primitive methods into corresponding computer language instructions. A playback tool may then replicate the initial recorded UI activity by playing back the computer language instructions.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07627821",
	"publication_date": "2009-12-01",
	"application_number": "10869184",
	"application_date": "2004-06-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Relational directory",
	"summary": "",
	"abstract": "Exemplary methods and systems provide a relational directory of organizational information. Organizational data objects and their associated attributes are maintained in a relational directory. An organizational hierarchy is converted to a relational directory using projection, joining, and import attribute flow rules. Attributes in a relational directory may be exported out of the relational directory to a hierarchical directory.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07516157",
	"publication_date": "2009-04-07",
	"application_number": "10434726",
	"application_date": "2003-05-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Resolution independent image resource",
	"summary": "",
	"abstract": "In aspects, a class hierarchy is defined that provides definitions of methods for operating on at least bitmaps and vector graphics. A software developer may instantiate an object according to a class definition of the class hierarchy and assign it to any variable (e.g., a control's property) having a type of an ancestor class of the class. The object may be associated with an image internally represented as bitmap, vector graphics, or some other representation. The control does not need to be aware of how the image is represented. Rather, to draw an image associated with the object, a draw method associated with the object may be called.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07626595",
	"publication_date": "2009-12-01",
	"application_number": "11195209",
	"application_date": "2005-08-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Resource accessing with locking",
	"summary": "",
	"abstract": "Thread usage is managed when locking resources during the possibly-contentious accessing of such resources. In a described implementation, a thread that is executing a corresponding access request is not suspended when its corresponding access request is delayed because a targeted resource is currently locked for accessing by another thread. Instead, when a targeted resource is locked, the blocked access request is queued up in a queue of access requests. The corresponding thread is then permitted to perform other work. When the resource is subsequently unlocked and thus becomes available, an access request (e.g., the oldest or highest priority access request) that is queued is retrieved, and a thread is allowed to execute it. Implementations for general locking access schemes, for read/write-bifurcated locking access schemes, etc. are described. Implementations are described from conceptual, functional, temporal, code or function, contention, thread, and other perspectives.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07603502",
	"publication_date": "2009-10-13",
	"application_number": "11103854",
	"application_date": "2005-04-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Responsive user interface to manage a non-responsive application",
	"summary": "",
	"abstract": "A method and system are provided for managing application programs with non-responsive user interfaces, possibly due to a bottleneck in handling events/messages. The method and system make an apparently frozen application user interface responsive so as to permit alternative tasks be executed or close the hung application. This is enabled by implementing routines to (a) detect if an application is hung, (b) replace the user interface for the hung application with a ghost interface, implemented by a separate thread, that permits system functionality such as sizing, minimization and closing of the application, and (c) destroying the ghost interface if the hung application becomes responsive again along with restoring the application's user interface along with updated event queues. Furthermore, creation of the ghost user interface is accompanied by placing a high priority special event in the hung application's queue to detect renewed responsiveness without requiring explicit monitoring.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07624352",
	"publication_date": "2009-11-24",
	"application_number": "10945537",
	"application_date": "2004-09-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Run-time call stack verification",
	"summary": "",
	"abstract": "Run-time call stack verification is used to determine that a code module has been called by a legitimate caller. A return address on the stack indicates where execution is to return upon execution of the next return instruction, and this return address is indicative of where the code module was called from. The code module may determine that the call is allowed, or disallowed, based on the location of the return address. A calling convention is provided that allows the code module to be called through an intermediary, while also preserving the original return address that was in effect at the time the intermediary was called and also resisting modification to the call stack during the time that the original return address is being verified.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07546587",
	"publication_date": "2009-06-09",
	"application_number": "10790302",
	"application_date": "2004-03-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Runtime support for nullable types",
	"summary": "",
	"abstract": "The subject disclosure pertains to systems and methods for supporting null capabilities for general purpose programming languages. Low level, runtime support for a nullable type is provided to ensure consistency and coherency. An execution component restricts support of the nullable type to programming language types that lack a null capability. The execution component may also provide support for conversion between the nullable type and a reference type.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07627594",
	"publication_date": "2009-12-01",
	"application_number": "11214583",
	"application_date": "2005-08-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Safe exceptions",
	"summary": "",
	"abstract": "Safe exceptions detect and intervene in a malicious attack against an application or system component, even in the presence of a coding flaw such as a buffer overrun. A list of all the exception handlers in an image (e.g., a DLL or EXE) is desirably created. When loading the image into a process, the operating system loader finds and stores a reference to this list. When a subsequent attack targets exception handling by creating an attacker provided exception handler, the new attacker provided exception handler is compared to a list of the real exception handlers. The list of real exception handlers is stored in memory, and desirably cannot be modified. In particular, when an exception occurs, the operating system finds the proper exception handler from information on the stack (this may be under attack, so the information is not trusted) and compares it to the previously created read-only reference list. If the exception handler that has occurred is found on the reference list, the exception handler is allowed to execute. Otherwise, the operating system assumes the application is under attack and terminates the process' execution.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07480919",
	"publication_date": "2009-01-20",
	"application_number": "10602952",
	"application_date": "2003-06-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Scalable algorithm for sharing EDI schemas",
	"summary": "",
	"abstract": "Developing a file corresponding to an electronic data interchange (EDI) schema. The EDI schema is selected for transmission to a destination device. A plurality of syntax structures in the selected EDI schema is identified. The plurality of syntax structures defines a type of transaction associated with the EDI schema. A plurality of EDI data values is extracted from the identified plurality of syntax structures according to the defined type. A file is generated corresponding to the type and including the extracted data values in the generated file such that the EDI schema can be re-created from the generated file.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07620645",
	"publication_date": "2009-11-17",
	"application_number": "11362045",
	"application_date": "2006-02-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Scalable virtual partitioning of resources",
	"summary": "",
	"abstract": "Resources are partitioned via a virtual partitioning system to distribute the resources over a plurality of resource servers. A virtual partition table can be kept at each of a set of resource managers handling requests for resources in tandem. When a resource is requested, a virtual partition value is calculated algorithmically, and the value is mapped to a resource component via the virtual partition table. The resource component encapsulates information indicating on which of the resource servers the resource resides and can provide a component for performing operations on the resource even though the requester does not have information about where the resource resides. The resources can be repartitioned by modifying the virtual partition table, thus allowing the addition of additional resource servers to the system while the resources remain available. Additional resource types can be added without reengineering the system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07483981",
	"publication_date": "2009-01-27",
	"application_number": "11003798",
	"application_date": "2004-12-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Scaling and extending UPnP v1.0 device discovery using peer groups",
	"summary": "",
	"abstract": "Disclosed is a method for scaling and extending the reach of UPnP device discovery and eventing by leveraging the use of a peer-to-peer network infrastructure. Peer-to-peer networking allows for the organization of a set of nodes into a group for efficient exchange of information and the group has an efficient and scalable mechanism for flooding data to all members in it. In one embodiment one PC in a peer group can receive device discovery announcements and subscribe for device event notifications. A discovery proxy and an eventing proxy running on the PC package the announcement and/or notification in a record and proceed to flood it to the group. The group flooding semantics route the notification to the subscribed controllers, which can subsequently take suitable action. Ultimately, this method produces a result whereby device discovery and eventing tasks can be fulfilled by locating the closest peer and obtaining the device announcements and notifications from that peer.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07640329",
	"publication_date": "2009-12-29",
	"application_number": "11059589",
	"application_date": "2005-02-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Schema for location awareness",
	"summary": "",
	"abstract": "A method, schema and computer system for a location service provides data structures that are extensible by allowing different types of location awareness applications to retrieve and deposit location data. The method includes providing an abstract location object arranged in a schema to enable servicing a received request for a logical location of an electronic endpoint; and arranging one or more location elements within the context of the abstract location object. The location elements are configured to act as peers relative to the logical location and each location element is configured to act as a proxy relative to any other location element within the abstract location object.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07640288",
	"publication_date": "2009-12-29",
	"application_number": "10800543",
	"application_date": "2004-03-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Scheme for sub-realms within an authentication protocol",
	"summary": "",
	"abstract": "Branch domain controllers (DCs) contain read only replicas of the data in a normal domain DC. This includes information about the groups a user belongs to so it can be used to determine authorization information. Password information, however, is desirably replicated to the branch DCs only for users and services (including machines) designated for that particular branch. Moreover, all write operations are desirably handled by hub DCs, the primary domain controller (PDC), or other DCs trusted by the corporate office. Rapid authentication and authorization in branch offices is supported using Kerberos sub-realms in which each branch office operates as a virtual realm. The Kerberos protocol employs different key version numbers to distinguish between the virtual realms of the head and branch key distribution centers (KDCs). Accounts may be named krbtgt_<ID> where <ID> is carried in the kvno field of the ticket granting ticket (TGT) to indicate to the hub KDC which krbtgtu2032 key was used to encrypt the TGT.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07571311",
	"publication_date": "2009-08-04",
	"application_number": "11096829",
	"application_date": "2005-04-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Seamless discovery of workstation-installed remote applications from an extranet",
	"summary": "",
	"abstract": "Systems and methods for enumerating applications by a remote client computer are described. The applications are deployed in an Intranet. The remote client computer is external to the Intranet. In one aspect, a remote application discovery request is sent to a Web service. The Web service is deployed on a remote applications publication (RAP) Web server in the Intranet. The remote application discovery request is sent to the Web service by the remote client computer via a public network that connects the remote client computer to the Web server. Responsive to sending the remote application discover request, a discovery response from the Web service is received. The discovery response identifies at least one application installed on the Intranet for terminal server (TS) based access by a user of the remote client computer.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07475125",
	"publication_date": "2009-01-06",
	"application_number": "10722181",
	"application_date": "2003-11-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure and anonymous storage and accessibility for sensitive data",
	"summary": "",
	"abstract": "The subject disclosure pertains to secure and anonymous data storage and access. More particularly, encryption methods and mechanisms are provided in conjunction with one or more blobs, identities, and guards to implement one or more layers of indirect encryption. Generation of these components can be accomplished without including or pointing to any personally identifiable information about a user. Accordingly, a user can store sensitive data securely and anonymously on a server or like storage system. Such data can also be roamed, recovered, and synchronized securely from a plurality of computers at least because the data is centrally located.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07593548",
	"publication_date": "2009-09-22",
	"application_number": "11300920",
	"application_date": "2005-12-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure dynamic credential distribution over a network",
	"summary": "",
	"abstract": "Systems and methods for enabling secure dynamic credential distribution to a machine over a network are provided. In various embodiments, a computer, into which logging or access is sought, distributes logon credentials automatically to a requestor over the network before logon. Based on pre-existing trust, the computer self-generates and self-distributes logon credentials to the requestor, whereby the logon credentials are not stored on the requestor device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07546373",
	"publication_date": "2009-06-09",
	"application_number": "10888190",
	"application_date": "2004-07-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure hierarchical namespaces in peer-to-peer networks",
	"summary": "",
	"abstract": "A method and data structure are provided that enables name resolution via a hierarchical or chained lookup of delegated authorities independent of requiring IP addresses of the delegated authorities. In an embodiment, the method provides for lookups by first generating cryptographic keys associated with a namespace. An authority is created using one of the cryptographic keys. Next, the method provides for enabling namespaces to refer to the authority via requesting authorities associated with the namespaces to issue a peer-to-peer type resolution so that names of the namespaces resolve to the authority. For other desired namespaces, the method provides for issuing a resolution that names the authority and names associated with the other namespaces to resolve to the other authorities. For services, the authority and a service name are published to receive and end result such as arbitrary data, an IP address, a protocol name or a port.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07516482",
	"publication_date": "2009-04-07",
	"application_number": "10623994",
	"application_date": "2003-07-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure kernel transactions",
	"summary": "",
	"abstract": "Kernel objects for implementing a transaction have a security descriptor applied thereto. The kernel objects include, at least, a transaction object, a resource management object, and an enlistment object. The security descriptor, otherwise known as an access control list, identifies at least one user, an operation to be performed on the kernel object to which the security descriptor is applied, and a right indicating that the identified user is permitted or prohibited to perform the operation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07591015",
	"publication_date": "2009-09-15",
	"application_number": "10692261",
	"application_date": "2003-10-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure network channel",
	"summary": "",
	"abstract": "Methods and systems for establishing a secure network channel between two or more devices in a communication network are disclosed. In exemplary implementations the network may be a UPnP network. A first device passes authentication information to at least a second device to permit the second device to authenticate the first device. Optionally, the first device may request to authenticate the second device, in which authentication information associated with the second device is passed to the first device. The first device uses this information to authenticate the second device. At least one of the first and second device may store authentication information in an data store associated with the device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07600113",
	"publication_date": "2009-10-06",
	"application_number": "10783524",
	"application_date": "2004-02-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure peer-to-peer cache sharing",
	"summary": "",
	"abstract": "A system, apparatus, method, and computer-readable medium are provided for secure P2P caching. In one method, a requesting peer obtains a hash of requested data from a server. The requesting peer then transmits a request for the data to other peers. The request proves that the requesting peer has the hash. If a caching peer has the data, it generates a reply to the request that proves that it has the requested data. If the requesting peer receives a reply from a caching peer, the requesting peer establishes a connection to the caching peer and retrieves the data from the caching peer. If the requesting peer does not receive a reply to the request from any other peer, the requesting peer establishes a connection to the server and retrieves the data from the server. The requesting peer stores the data for use in responding to requests from other peers.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07617322",
	"publication_date": "2009-11-10",
	"application_number": "11540435",
	"application_date": "2006-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure safe sender list",
	"summary": "",
	"abstract": "Secure safe sender lists are described. In an implementation, a method includes examining a message received from a sender via a network to determine which identifying mechanisms are available for verifying an identity of the sender. When one or more available identifying mechanisms are deemed sufficient to verify the identity, a description of the identity and a description of the one or more said available identifying mechanisms are added to a safe senders list.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07599993",
	"publication_date": "2009-10-06",
	"application_number": "11023284",
	"application_date": "2004-12-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure safe sender list",
	"summary": "",
	"abstract": "Secure safe sender lists are described. In an implementation, a method includes determining which of a plurality of hierarchical levels corresponds to a message received via a network. Each of the hierarchical level is defined by mechanisms for identifying a sender of the message. The message is routed according to the corresponding one of the hierarchical levels.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07603422",
	"publication_date": "2009-10-13",
	"application_number": "11023049",
	"application_date": "2004-12-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure server plug-in architecture for digital rights management systems",
	"summary": "",
	"abstract": "Systems and methods for providing digital rights management services are disclosed. Such a system includes a service program that provides a processing framework for performing a digital rights management service, such as publishing or licensing rights managed digital content. A plurality of plug-in components are provided, each of which performs a respective task associated with the digital rights management service. The plug-in components are integrated into the processing framework according to predefined sets of interface rules.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07631318",
	"publication_date": "2009-12-08",
	"application_number": "10185906",
	"application_date": "2002-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secured views for a CRM database",
	"summary": "",
	"abstract": "The claims of the present application recite a method and system for accessing information in an otherwise inaccessible application database of a DBMS using view definitions that implement a security protocol.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07562092",
	"publication_date": "2009-07-14",
	"application_number": "11020446",
	"application_date": "2004-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Select content audio playback system for automobiles",
	"summary": "",
	"abstract": "The present invention provides a large capacity, user defined audio content delivery system. The system delivers uninterrupted music and delivers information content (e.g., news by evaluating and encoding an input audio stream while outputting another stream. Undesirable audio content (e.g., advertisements and unwanted news) are not present in the output audio stream as only desired portions of information content are stored for playback on demand. The invention also includes a user interface that is simple enough to facilitate utilization of the audio system in an automobile and employs standard hardware available in typical computing and/or personal digital assistant equipment. Additionally, the audio system can be portable (e.g., as portable as a personal digital assistant) and can be updated in real time or off line via a personal computer.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07539478",
	"publication_date": "2009-05-26",
	"application_number": "11188936",
	"application_date": "2005-07-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Selective rendering for driver classes",
	"summary": "",
	"abstract": "Described is a filtering mechanism/process that selectively controls whether graphics primitives are provided to a given driver. For example, graphics primitives of an accessibility (e.g., magnification) program may be excluded from being obtained by mirror drivers associated with the accessibility programs, so that the mirror drivers receive only the primitives of unmagnified windows. A registration mechanism allows a program to identify its window as being associated with a class of drivers for filtering, and the drivers may identify themselves as being of the class. By maintaining data that associates windows with a class of drivers, when graphics primitives associated with a registered window are received, a filtering operation be activated to determine which graphics primitives are provided to which driver or drivers. Filtering may be by exclusion to prevent certain primitives from being obtained by excluded drivers, or by inclusion whereby only included drivers receive certain primitives.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07619622",
	"publication_date": "2009-11-17",
	"application_number": "11395684",
	"application_date": "2006-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Selectively receiving broadcast data according to one of multiple data configurations",
	"summary": "",
	"abstract": "A client device selectively receives broadcast data according to any one of multiple data configurations. A broadcast data server enables broadcast of multiple data configurations by maintaining configuration definitions that define how broadcast data may be configured for presentation to a viewer. The broadcast data server also maintains region definitions that identify regions that may be associated with client devices for receiving broadcast data. The configuration definitions are mapped to region definitions, enabling a client device associated with a particular region to selectively receive broadcast data according to any one of multiple data configurations that are associated with the particular region.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07606255",
	"publication_date": "2009-10-20",
	"application_number": "10339697",
	"application_date": "2003-01-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Server architecture for network resource information routing",
	"summary": "",
	"abstract": "A media server in a Universal Plug and Play (UPnP) network includes a resource sharing service to govern the distribution of media resource information to rendering devices. The media server includes: a media service module operating in a clamped down user context (e.g., a local service user context) and configured to share resource information over the network; a supplemental module operating in a local system user context and configured to assist the media service module in sharing resource information over the network; and a control panel module operating in a logged on user context and configured to interact with a user via a user interface display. The local system user context provides a higher level of access to media server resources compared to the clamped down user context. The media server also provides fast user switching (FUS) functionality that allows multiple users to have respective instances of the control panel module pending at the same time. Further, the media server includes a mechanism to prevent rogue applications from masquerading as the control panel module and thereby gaining unauthorized access to the media service module.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07555543",
	"publication_date": "2009-06-30",
	"application_number": "10742570",
	"application_date": "2003-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Service support framework for peer to peer applications",
	"summary": "",
	"abstract": "The claimed system is a service support framework for a multicast programming system implemented on top of a service oriented framework, specifically a service oriented messaging system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07543023",
	"publication_date": "2009-06-02",
	"application_number": "11080782",
	"application_date": "2005-03-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Session-state manager",
	"summary": "",
	"abstract": "Without actually storing session-state information, the described exemplary implementations of session-state manager identify a user, validate the user's current logon state, and determine whether the user's session should expire. User identification and logon validation are checked by a server in a stateless network by generating a mathematically session-state token and sending that token to a user. Subsequently, the server receives a mathematically session-state token from the user and checks that token. If that token checks out, then the user is allowed continuing access under the same session. If it doesn't check out, then the user may be forced to start a new session by logging-on again. Alternatively, the server may check to see if the token would check out if it had come at an earlier time block. The session-state tokens are mathematical encoded and are generated using a one-way encryption scheme. Such a one-way encrypted token is scientifically impossible to reverse-engineer. Furthermore, logon expiration is checked by the server using the same mathematically session-state token. The token is checked to determine whether a predetermined number of time blocks have past. If so, then the server will terminate the user's session.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07478245",
	"publication_date": "2009-01-13",
	"application_number": "10975289",
	"application_date": "2004-10-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Shared socket connections for efficient data transmission",
	"summary": "",
	"abstract": "A system, method and data structures for allowing the sharing of a socket among multiple applications. Sockets that are opened as a result of a send or a receive are kept open and tracked for use with other communications. A shared sockets manager receives outgoing transmission requests to a destination machine and uses a shared socket if one is already open, otherwise the shared sockets manager opens a new socket. Sent data is multiplexed and routed via receive request registration, and demultiplexed upon receipt. The shared socket is closed if idle for too long via a negotiated closing process. High priority data may be sent via the socket ahead of other data, and the timers and priority handling mechanisms may be adjusted for each socket to tune the network machines as desired.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07493398",
	"publication_date": "2009-02-17",
	"application_number": "10414956",
	"application_date": "2003-04-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Sharing of downloaded resources",
	"summary": "",
	"abstract": "In a described implementation, a production device, such as a computer, produces a shared resources container that includes shareable resources. Each resource of the shared resources container includes a part name and corresponding data. The production device downloads the shared resources container to a utilization device. The production device also formulates a job container, such as a print job. The production device analyzes resource usage of the job container during processing thereof. If a resource relevant to the job container is included in the shared resources container, the resource is excluded from the job container in lieu of a resource reference that is insert therefor. The production device also downloads the job container to the utilization device. At the utilization device, the job container is processed using the resource reference. Specifically, the resource reference is used to retrieve the associated resource from the shared resources container.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07634775",
	"publication_date": "2009-12-15",
	"application_number": "10938357",
	"application_date": "2004-09-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Simplified creation and termination of an ad hoc wireless network with internet connection sharing",
	"summary": "",
	"abstract": "Methods and systems are described for simplified creation of, connection to, and termination from an ad hoc wireless network. Graphical user interfaces are used to guide users though creation and joining ad hoc network. The option to share one user's Internet connection with the entire ad hoc network is also described. The ad hoc networks described can provide some managed services traditionally unavailable in ad hoc networks, such as IP address assignment and name resolution services. The ad hoc networks can be created with termination criteria, such that a computer's connection to the ad hoc network is automatically terminated and previous network configuration settings are restored when one or a combination of termination criteria are met.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07616588",
	"publication_date": "2009-11-10",
	"application_number": "11096042",
	"application_date": "2005-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Simplified device drivers for hardware devices of a computer system",
	"summary": "",
	"abstract": "A computer system uses simplified device drivers for operating hardware devices. A simplified device driver for a hardware device of a given device type, such as a flatbed scanner, works with a system-supplied common driver for that given device type. The common driver and the simplified driver together function like a regular device driver. The simplified device driver implements a small number of entry point functions corresponding to a pre-selected set of operation commands u201cgenericu201d to hardware devices of that given device type. When an application makes a request for an operation by the device, the request is passed through a device driver interface (DDI) to the common driver. The common driver then calls the entry point functions in the simplified device driver to carry out the requested operation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07536699",
	"publication_date": "2009-05-19",
	"application_number": "11276484",
	"application_date": "2006-03-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Simplified search interface for querying a relational database",
	"summary": "",
	"abstract": "Methods and computer-readable media are provided for performing a search on a relational database. According to one method, a query class is provided that includes properties that specify how a query is to be performed and how results from the query are to be returned, and an execute method that is called to perform the actual query. A keyword query class derived from the query class is also provided that includes keyword query properties and an execute method for performing the keyword query. In order to perform a keyword query of an SQL database, an instance of the keyword query class is created, the properties set on the instance, and the execute method called. When the execute method is called, the specified properties are translated into an equivalent SQL statement and the search is performed on the identified relational database by a search service.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07548912",
	"publication_date": "2009-06-16",
	"application_number": "11598433",
	"application_date": "2006-11-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Simulation of connected devices",
	"summary": "",
	"abstract": "Simulating device interactions. A method may be practiced in a computing system for simulating interconnected devices. The method of simulating device interactions may be done in performing an overall transaction to obtain an output of system performance characteristics including measurement of latencies and/or device loads for actions performed by devices in performing the overall transaction. The method includes dividing a transaction into individual actions. The actions are applied to appropriate device models to produce latencies and/or device utilizations for the action as applied to the appropriate device model. This may be done by including an indication of an action type and optionally an action subservice. Memory resources may be conserved by ending the simulation when latencies and/or device utilizations have settled. Device utilization and latency may be aggregated and averaged over time. When changes in the latencies and/or device utilizations are within a predetermined range, the simulation can be ended.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07571088",
	"publication_date": "2009-08-04",
	"application_number": "11394483",
	"application_date": "2006-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Smart soft keyboard",
	"summary": "",
	"abstract": "Methods of using a soft keyboard are disclosed. A soft keyboard having one or more soft keys with a symbol displayed on the one or more soft keys is provided. A modifier may be applied to one of the symbols displayed on one of the soft keys by selecting the soft key and then providing a directional input. In an embodiment, different directional inputs are associated with different modifiers so that different symbols are inputted depending on the directional input. In an embodiment, a user may prove the direction input with a touch and directional drag of a selector across a touch sensitive screen. In an embodiment, a plurality of symbols associated with a plurality of modifying keys are made visible after the soft key is selected so that the user can visually determine which directional input will provide the desired symbol.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07554529",
	"publication_date": "2009-06-30",
	"application_number": "11304240",
	"application_date": "2005-12-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Smooth transitions between animations",
	"summary": "",
	"abstract": "Smooth transitions between rich media (e.g., animations of visual elements of a UI) are provided when a u201csecondu201d animation is started on a property of a visual element for which a u201cfirstu201d animation is already running. When the second animation is started, an animation system causes a current value of the property that resulted from the running of the u201cfirstu201d animation (i.e., snapshot) to be stored, terminates or releases the first animation, and then causes the second animation to run using the snapshot as the u201cfromu201d value of the property. Because the second animation u201cbeginsu201d at exactly the point at which the first animation ended, the transition between the first and second animation is smooth. An animation storage object can be created for a property for which an animation has been triggered to store base values and snapshots of the property while being animated.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07477254",
	"publication_date": "2009-01-13",
	"application_number": "11181197",
	"application_date": "2005-07-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Soap mobile electronic human interface device",
	"summary": "",
	"abstract": "A new mobile electronic device, referred to as a soap, may be used to control electronic devices, external or internal to the soap, in an intuitive, convenient, and comfortable manner. For example, a soap may serve as an alternative to input devices such as a mouse. A soap device may include a core, and a hull that at least partially encloses the core. The core includes a tracking component capable of tracking movement relative to the hull. The soap input device also includes a transmission component configured to transmit a signal from the tracking component to a computing device, where it may control the position of a pointer and the use of a selector on a monitor. The hull may be soft and flexible, the core may be freely rotatable about at least one axis. The core has a shape such that tangentially applied pressure rotates the core relative to the hull. A user may therefore control an electronic device, simply by rolling and manipulating the soap.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07626572",
	"publication_date": "2009-12-01",
	"application_number": "11454677",
	"application_date": "2006-06-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software build extensibility",
	"summary": "",
	"abstract": "In a first exemplary media implementation, one or more processor-accessible media include a build provider that is tailored for a particular file type, the build provider adapted to generate code from files corresponding to the particular file type and to contribute the generated code to a compilation. In a second exemplary media implementation, one or more processor-accessible media include processor-executable instructions that, when executed, direct a device to perform actions including: accepting multiple files, each file of the multiple files corresponding to a respective file type and including source code; associating a build provider with each file of the multiple files in accordance with the corresponding respective file type; ascertaining the source code of each file of the multiple files via the associated build provider; and compiling the ascertained source code of each file of the multiple files into an assembly.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07596782",
	"publication_date": "2009-09-29",
	"application_number": "10692765",
	"application_date": "2003-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software obfuscation",
	"summary": "",
	"abstract": "Tampering with pieces of software is inhibited. Software obfuscation inhibits reverse engineering by hackers by manipulating names of functions and adding jump instructions into various pieces of software. Profiles are stored in a central hierarchical database and such profiles are protected from tampering. The obfuscation of a software image so as to becloud the comprehension of hackers in reverse engineering pieces of software comprising the software image is provided.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07559091",
	"publication_date": "2009-07-07",
	"application_number": "11061790",
	"application_date": "2005-02-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software security based on control flow integrity",
	"summary": "",
	"abstract": "Software control flow integrity is provided by embedding identifying bit patterns at computed control flow instruction sources and destinations. The sources and destinations of computed control flow instructions are determined with reference to a control flow graph. The identifying bit patterns are compared during software execution, and a match between a source and a respective destination ensures control flow consistent with the control flow graph. Security measures are implemented when the comparison results in a mismatch, indicating that control flow has deviated from the anticipated course.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07577992",
	"publication_date": "2009-08-18",
	"application_number": "11036121",
	"application_date": "2005-01-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software updating system and method",
	"summary": "",
	"abstract": "In one embodiment, a server/client system, configured to update client software, generates audit data by analyzing a client's file configuration with respect to rules within an update catalog. The audit data is then moved to the server, where updates indicated by the audit data may be approved. The approved updates are then distributed from the server to the client for installation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07555749",
	"publication_date": "2009-06-30",
	"application_number": "10385391",
	"application_date": "2003-03-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software updating system and method",
	"summary": "",
	"abstract": "In one embodiment, software updates are applied to one or more client computers. The one or more client computers are assigned a level of service governing aspects of the application of the updates. The scheduling of the application of the software updates is done according to the level of service. The application of the software update is then performed according to the schedule.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07584467",
	"publication_date": "2009-09-01",
	"application_number": "10662720",
	"application_date": "2003-09-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Spatial noise suppression for a microphone array",
	"summary": "",
	"abstract": "A microphone array having at least three microphones provides a captured signal. Spatial noise suppression estimates a desired signal from a captured signal using spatio-temporal distribution of the speech and the noise. In particular, spatial information indicative of at least two quantities of direction are used. A first quantity is based on a first combination of the signals from the at least three microphones, a second quantity is based on a second combination of the signals of the at least three microphones.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07565288",
	"publication_date": "2009-07-21",
	"application_number": "11316002",
	"application_date": "2005-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Speaker authentication using adapted background models",
	"summary": "",
	"abstract": "Speaker authentication is performed by determining a similarity score for a test utterance and a stored training utterance. Computing the similarity score involves determining the sum of a group of functions, where each function includes the product of a posterior probability of a mixture component and a difference between an adapted mean and a background mean. The adapted mean is formed based on the background mean and the test utterance. The speech content provided by the speaker for authentication can be text-independent (i.e., any content they want to say) or text-dependent (i.e., a particular phrase used for training).",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07539616",
	"publication_date": "2009-05-26",
	"application_number": "11358302",
	"application_date": "2006-02-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Speech processing for telephony API",
	"summary": "",
	"abstract": "Systems, methods, and structures are discussed that enhance media processing. One aspect of the present invention includes a data structure to enhance media processing. The data structure includes a terminal data structure to instantiate terminal objects and a speech recognition terminal data structure that extends the terminal data structure. Another aspect of the present invention includes a data structure to enhance media processing. This data structure includes a terminal data structure to instantiate terminal objects and a speech generation terminal data structure that extends the terminal data structure. These data structures may be used to implement an internet protocol interactive voice response system, an internet protocol unified message system, and speech-enabled Web applications.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07533021",
	"publication_date": "2009-05-12",
	"application_number": "10882960",
	"application_date": "2004-07-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Speech processing for telephony API",
	"summary": "",
	"abstract": "Systems, methods, and structures are discussed that enhance media processing. One aspect of the present invention includes a data structure to enhance media processing. The data structure includes a terminal data structure to instantiate terminal objects and a speech recognition terminal data structure that extends the terminal data structure. Another aspect of the present invention includes a data structure to enhance media processing. This data structure includes a terminal data structure to instantiate terminal objects and a speech generation terminal data structure that extends the terminal data structure. These data structures may be used to implement an internet protocol interactive voice response system, an internet protocol unified message system, and speech-enabled Web applications.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07634066",
	"publication_date": "2009-12-15",
	"application_number": "10882703",
	"application_date": "2004-07-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Speech recognition using a state-and-transition based binary speech grammar with a last transition value",
	"summary": "",
	"abstract": "A computer-loadable data structure is provided that represents a state-and-transition-based description of a speech grammar. The data structure includes first and second transition entries that both represent transitions from a first state. The second transition entry is contiguous with the first transition entry in the data structure and includes a last-transition value. The last-transition value indicates that the second transition is the last transition from the first state in the data structure.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07571096",
	"publication_date": "2009-08-04",
	"application_number": "11857018",
	"application_date": "2007-09-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Speech recognition using categories and speech prefixing",
	"summary": "",
	"abstract": "Speech recognition utilizing categories and prefixes is disclosed. Categories identify types of recognition and allow different grammars and prefixes for each category. Categories can be directed to specific applications and/or program modules. Uttering a prefix allows users to easily direct text to specific grammars for enhanced recognition, and also to direct the recognized text to the appropriate application/module.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07624018",
	"publication_date": "2009-11-24",
	"application_number": "10799356",
	"application_date": "2004-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Spooling strategies using structured job information",
	"summary": "",
	"abstract": "Spooling strategies are described for producing job information that conforms to a hierarchical structure, and then storing the job information in a spool storage. The job information is then retrieved from the spool storage and consumed. The structured job information includes a multi-level hierarchy of nodes, including a job level that represents the entire job, a document level that represents a document to be processed within the job; a rendition level that represents a rendition of the document to be processed; and a page level that represents a page associated with the rendition. The hierarchical structure can also include resource nodes and metadata nodes associated with any level of the hierarchy, respectively representing resources and metadata. The hierarchy can optionally be composed using one or more selection and sequence parts. Program logic implements the production and consumption of the job information by providing a collection of logic modules for selectively adding and retrieving elements to the hierarchically structure. The program logic also provides logic for enumerating the contents of the job information and for signaling the occurrence of various events associated with the processing of the job information.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07526504",
	"publication_date": "2009-04-28",
	"application_number": "11831278",
	"application_date": "2007-07-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "SQL server debugging in a distributed database environment",
	"summary": "",
	"abstract": "A software architecture for debugging the execution of T-SQL and managed data-tier application logic associated with a single connection, in isolation from other connections, is provided. In the architecture, a database server hosts the data-tier application logic. A client connects to the database server and issues requests on the connection, which initiates the execution of the data-tier application logic. A debugger debugs a client process on the server. An application program interface (API) receives a request to initiate a debugging session from the debugger, and returns an interface pointer to the debugger, thereby enabling the debugger to debug the client connection to the server.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07500225",
	"publication_date": "2009-03-03",
	"application_number": "10775624",
	"application_date": "2004-02-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "State as a first-class citizen of an imperative language",
	"summary": "",
	"abstract": "A state component saves a present state of a program or model. This state component can be invoked by the program or model itself, thereby making state a first-class citizen. As the state of the program evolves from the saved state, the saved state remains for reflection and recall, for example, for testing, verification, transaction processing, etc. Using a state reference token, the saved state of the program or model can be accessed by the program or model. For example, the program or model by utilizing a state component, can return itself to the saved state. After returning to the saved state, a second execution path can be introduced without requiring re-execution of the actions leading to the saved state. In another example, the state space of an executing model is saved in order to generate inputs required to exercise a program or model.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07584463",
	"publication_date": "2009-09-01",
	"application_number": "10650245",
	"application_date": "2003-08-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "State transition logic for a persistent object graph",
	"summary": "",
	"abstract": "The claimed subject matter provides a system and/or a method that facilitates handling a change associated with a database. An interface that can receive data associated with a change to data via an object graph. A state transition logic component that can maintain the change related to the object graph utilizing a context and a respective set of rules, the context employs metadata to view the object graph with an abstraction of at least one of an entity and a relationship.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07526501",
	"publication_date": "2009-04-28",
	"application_number": "11550574",
	"application_date": "2006-10-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Statistical language model for logical form using transfer mappings",
	"summary": "",
	"abstract": "A method of decoding an input semantic structure to generate an output semantic structure. A set of transfer mappings are provided. A score is calculated for at least one transfer mapping in the set of transfer mappings using a statistical model. At least one transfer mapping is selected based on the score and used to construct the output semantic structure.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07593843",
	"publication_date": "2009-09-22",
	"application_number": "10813208",
	"application_date": "2004-03-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Storage application programming interface",
	"summary": "",
	"abstract": "Systems, methods, apparatus, data structures, and computer-readable media are described which provide techniques for managing data storage. In an implementation, a method includes examining a role map to determine which of a plurality of roles are applicable to a request to interact with at least one of a plurality of items. The request is received via an application programming interface (API) that is available over a network and one or more of the items reference a respective item of data. Access to the at least one item is permitted based on a role definition which describes differing access rights available for the item based on which of the roles is applicable to the request.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07546297",
	"publication_date": "2009-06-09",
	"application_number": "11079462",
	"application_date": "2005-03-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Suppressing repeated events and storing diagnostic information",
	"summary": "",
	"abstract": "Events that repeatedly occur during a detection period are intercepted and suppressed before being written to a log. When the same error has been detected a predetermined number of times within the detection period, the event logging for the event is suppressed for a suppression period. At the end of the suppression period an entry is made in the log summarizing the events during the suppression period. Additionally, diagnostic information relating to an application is collected and then stored within a high speed memory. Upon the occurrence of a triggering event, the diagnostic information from the high speed memory is stored within a data store for later use.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07617074",
	"publication_date": "2009-11-10",
	"application_number": "11774347",
	"application_date": "2007-07-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Symbol grouping and recognition in expression recognition",
	"summary": "",
	"abstract": "A mechanism for recognizing and inputting handwritten mathematical expressions into a computer by providing a part of a multi-path framework is described. The part of the multi-path framework includes a symbol grouping and recognition component that is designed to group input strokes that correspond to a handwritten mathematical expression into a symbol and to recognize the symbol based upon information associated with the grouped input strokes. A method for grouping and recognizing symbols of a handwritten mathematical expression includes receiving a plurality of input strokes corresponding to a handwritten mathematical expression, grouping the plurality of input strokes into symbols, recognizing the symbols based upon information, such as shape and time series information, associated with the grouped input strokes. Intra-group and inter-group information associated with the plurality of input strokes may be utilized to group the input strokes.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07561738",
	"publication_date": "2009-07-14",
	"application_number": "11155614",
	"application_date": "2005-06-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Sync configuration and discovery support",
	"summary": "",
	"abstract": "Various illustrative examples of a synchronization mechanism are described. A synchronization schema may be adopted to allow an application to save configuration details for a synchronization operation in a format which may easily be discovered by other applications without the need of a registration/de-registration mechanism. The synchronization mechanism may be executed in response to user entered parameters specifying the type and other characteristics of operation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07548923",
	"publication_date": "2009-06-16",
	"application_number": "11620241",
	"application_date": "2007-01-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Synchronizing centralized data store from distributed independent data stores using fixed application programming interfaces",
	"summary": "",
	"abstract": "A data transfer protocol utilizes a set of actions for affecting different objects that are stored in a data store. The data transfer protocol supports a set of application programming interfaces (APIs) that are applicable to the different objects. With the APIs, the data transfer protocol may synchronize a centralized data store with independent data stores. The data transfer protocol may support data that is hierarchical while maintaining referential integrity. Node objects may vary from nightly bulk uploads to interactive users uploading or querying smaller portions of the database. The data transfer protocol provides the semantics to carry out these operations with a fixed number of APIs for any arbitrary database. The data uploads may be sparse depending on what the remote data store holds and need not be in serial order.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07484219",
	"publication_date": "2009-01-27",
	"application_number": "10301223",
	"application_date": "2002-11-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Synchronizing file system directories",
	"summary": "",
	"abstract": "Described is a system and method that facilitates fast and reliable synchronization of computer/file system directories. A synchronization (FastSync) subsystem operates in a discovery/enumeration phase to provide a calling client with a set of the differences between directories, and then operates in an action phase to perform operations as directed by the client to synchronize the different directories. The discovery/enumeration and action phases use parallel operation and I/O (input/output) pipelining. Multiple threads are used during enumeration to enumerate each directory's children, and enqueues each sub-directory to be handled by a new thread. During the action phase, when an operation is requested, the FastSync subsystem packages up the operation, item pointer, and context information into an internal context block and queues that packet as a work item for a process thread pool to handle.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07634514",
	"publication_date": "2009-12-15",
	"application_number": "11124739",
	"application_date": "2005-05-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Syntactic to semantic binding",
	"summary": "",
	"abstract": "In order to facilitate automated operations with software, semantic meaning of data values is bound to the syntactic type of the data values. In a described implementation, a piece of software accepts inputs and produces outputs. The inputs have a specified syntactic type (e.g., runtime type) and an expected semantic meaning. The semantic meaning corresponds to a real-world description of relevant data for the input. Providing a data set that matches the specified syntactic type and the expected semantic meaning as input to the software enables a relevant operation with the software to be performed. An example automated operation is the testing of a piece of software. In another described implementation, a synmantic data object is created and/or utilized that includes a syntactic type attribute and a semantic meaning attribute for the contained data value(s). Other optional attributes include locale indication and a validity flag.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07565648",
	"publication_date": "2009-07-21",
	"application_number": "10922586",
	"application_date": "2004-08-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for aggregating and extending parental controls auditing in a computer network",
	"summary": "",
	"abstract": "A system and method for aggregating and extending parental controls auditing in an unmanaged computing network are provided. A parental control system, including a parental control database, logging interface, and audit process, resides on each host computing device in an unmanaged computing network that is capable of synchronizing data residing on one of the host computing devices with data residing on the other devices in the network. The parental control system facilitates the logging and reporting of parental control audit information in a manner that allows parents to aggregate the audit information to obtain a comprehensive audit report of their children's use of all computers in the home, and is extensible and customizable by the applications from which the parental control audit information originates.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07571229",
	"publication_date": "2009-08-04",
	"application_number": "12108317",
	"application_date": "2008-04-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for aggregating and extending parental controls auditing in a computer network",
	"summary": "",
	"abstract": "A system and method for aggregating and extending parental controls auditing in an unmanaged computing network are provided. A parental control system, including a parental control database, logging interface, and audit process, resides on each host computing device in an unmanaged computing network that is capable of synchronizing data residing on one of the host computing devices with data residing on the other devices in the network. The parental control system facilitates the logging and reporting of parental control audit information in a manner that allows parents to aggregate the audit information to obtain a comprehensive audit report of their children's use of all computers in the home, and is extensible and customizable by the applications from which the parental control audit information originates.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07600019",
	"publication_date": "2009-10-06",
	"application_number": "12108321",
	"application_date": "2008-04-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for applying color management on captured images",
	"summary": "",
	"abstract": "A system and method for image acquisition enables selective automated application of color management to color image data generated by an image-capturing device by the device driver for the device. In the image acquisition system, each image-capturing device has properties or operation parameters that can be set to control the operation of the device. During an image acquisition operation, color image data generated by the image-capturing device are transmitted to the device driver. If the operation parameters of the device are set to indicate that color management is to be performed, the device driver calls color management functions provided by the operating system to perform the desired color operation, such as a color space conversion, on the received color image data. The processed color image data are then sent to the image-processing application for further processing or editing.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07616215",
	"publication_date": "2009-11-10",
	"application_number": "11143047",
	"application_date": "2005-06-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for automatic negotiation of a security protocol",
	"summary": "",
	"abstract": "A protocol negotiation platform permits a computer or other node lying outside of a security-enabled domain to negotiate a supported security protocol with a server or other node within that domain. Active Directoryu2122, Kerberos and other secure network technologies permit agents or nodes within a domain to communicate securely with each other, using default, protocols and key, certificate or other authentication techniques. In the past external agents however had no transparent way to enter the domain, requiring the manual selection of protocols for use across the domain boundary. According to the invention either of an external agent or an internal agent may initiate an attempt to establish a secure session across the domain boundary, transmitting a request including a set of supported protocols to the recipient machine. A negotiation engine may then compare the available protocols on both of the agents, nodes or machines at either end of the session, and select a compatible protocol when found. The internal and external agents may likewise authenticate each other using a key, certificate or other mechanism.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07526640",
	"publication_date": "2009-04-28",
	"application_number": "10608334",
	"application_date": "2003-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for collaboration with serverless presence",
	"summary": "",
	"abstract": "Collaboration between collaborative endpoints may be facilitated by a serverless publication service of a collaborative services platform. The serverless publication service may be configured to accept communicative connections from the collaborative endpoints. Users of the collaborative services platform may publish their associated collaborative presences with the serverless publication service. For example, the collaborative presence of a user may include information with respect to valid collaborative endpoints for the user and collaborative capabilities at those endpoints. Subscriptions to published collaborative presences may be placed through the serverless publication service. A collaborative presence subscribe message may specify a subscription to a collaborative presence of a user. Upon receipt of a presence subscribe message, if there is no subscription policy with respect to the sender, the recipient may be queried for a subscription policy with respect to the sender. The subscription may be accepted in accordance with the subscription policy.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07617281",
	"publication_date": "2009-11-10",
	"application_number": "11115012",
	"application_date": "2005-04-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for creating, managing and using code segments",
	"summary": "",
	"abstract": "A code segment and elements of information (e.g., meta information) associated with the code segment are encoded in an XML file. One or more encoded code segments are saved within a library of encoded code segments. An encoded code segment may be selected and inserted into a source code file. When the encoded code is inserted into the source code, associated elements required by the code segment are automatically included and the portions of the code segments that may require modification are identified. The code segments are managed and organized so that sharing of code segments is facilitated.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07526753",
	"publication_date": "2009-04-28",
	"application_number": "10464397",
	"application_date": "2003-06-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for delayed fetching of designated members of a user defined type",
	"summary": "",
	"abstract": "A number of members of a user defined type may be designated as delayable members. During an initial fetch of the type, the type may be returned from the database without the delayable members, thereby preserving valuable bandwidth and reducing the amount of time required to perform the initial fetch. Upon request, selected delayable members may be re-fetched from the database at a later time without returning the other members provided during the initial fetch.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07548901",
	"publication_date": "2009-06-16",
	"application_number": "10879326",
	"application_date": "2004-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for establishing that a server and a correspondent have compatible secure email",
	"summary": "",
	"abstract": "A discovery secret is transmitted from the source domain to the correspondent domain. The discovery secret includes a data element specific to the correspondent domain and. The discovery secret includes a source domain address to which the correspondent domain is permitted send a message in order to determine that a potential correspondent has compatible secure email technology so that a link between the source domain and the correspondent domain may be established. The discovery secret is received by the correspondent domain including receiving the data element and the source domain address. An invitation is transmitted from the correspondent domain to the source domain address. The invitation includes the data element or an element corresponding to the data element. The source domain initiates a process to establish a link with the correspondent domain upon receipt by the source domain of the invitation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07529937",
	"publication_date": "2009-05-05",
	"application_number": "11107011",
	"application_date": "2005-04-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for generating selectable extension to media transport protocol",
	"summary": "",
	"abstract": "A protocol and related techniques and platforms allow vendors to selectably extend the Media Transport Protocol (MTP), or other defined protocols to implement vendor-specific commands, data fields, instructions and other extension sets. According to embodiments of the invention in one regard, one or more extension space may be utilized to derive independent extension sets, in part by separating the extension space according to a unique identifier assigned to or associated with a given vendor. In embodiments that unique identifier may be or include an Internet DNS (Domain Name System) domain name, or other extension set name or identifier. According to the invention in one regard, because a DNS domain name may be independently registered and secured by participating vendors or manufacturers and by definition uniquely assigned, the separation of vendor extension sets by that type of name may be automatic and free from conflict. Vendors or manufacturers, such as makers of digital cameras, digital video cameras, audio players such as MP3 or other players, software vendors or others may therefore freely design extensions to the Media Transport Protocol or other protocols, without a need to clear those extensions with a standards body and with confidence that their commands, data fields and other extensions may be free from overlap with that of other manufacturers.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07555554",
	"publication_date": "2009-06-30",
	"application_number": "10912096",
	"application_date": "2004-08-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for handling action items",
	"summary": "",
	"abstract": "A method and system for handling action items can determine the extent to which an action item can be processed using computer-based processing. Based on this determination, the present invention can complete the action item with a combination of automatic and manual processing. That is, the present invention can analyze an action item, initiate appropriate computer-based steps, and prompt human intervention to complete the action item. According to one exemplary aspect, the present invention can use a network connection to seek, identify, and utilize remote resources for processing an action item. According to another exemplary aspect, the present invention can derive action items from natural language, handwritten script entered into a tablet personal computer. According to another exemplary aspect, the present invention can process an action item list that includes both manual and automatic action items.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07571108",
	"publication_date": "2009-08-04",
	"application_number": "10458552",
	"application_date": "2003-06-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for identifying potential security risks in controls",
	"summary": "",
	"abstract": "Controls of interest are indentified by determining which installed software objects associated with the application of interest exhibit certain characteristics, such as being publicly creatable, being designated as safe, and providing a security-related interface. Once the controls of interest are identified from the installed software objects, information associated with each control is obtained and stored. Each time the software program of interest is modified and re-installed, the information is updated to reflect the modifications. Additional information is also stored with the information. The information and the additional information may be provided to a browser for display and may be modified by a user to describe a present state associated with the control of interest (i.e., tested, untested).",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07577941",
	"publication_date": "2009-08-18",
	"application_number": "10155354",
	"application_date": "2002-05-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for managing and communicating software updates",
	"summary": "",
	"abstract": "A system and method for facilitating the selection and implementation of software updates while minimizing the bandwidth and processing resources required to select and implement the software updates. In one embodiment, an update service controls access to software updates, or other types of software, stored on a server.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07574706",
	"publication_date": "2009-08-11",
	"application_number": "10737708",
	"application_date": "2003-12-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for managing visual structure, timing, and animation in a graphics processing system",
	"summary": "",
	"abstract": "A visual tree structure as specified by a program is constructed and maintained by a visual system's user interface thread. As needed, the tree structure is traversed on the UI thread, with changes compiled into change queues. A secondary rendering thread that handles animation and graphical composition takes the content from the change queues, to construct and maintain a condensed visual tree. Static visual subtrees are collapsed, leaving a condensed tree with only animated attributes such as transforms as parent nodes, such that animation data is managed on the secondary thread, with references into the visual tree. When run, the rendering thread processes the change queues, applies changes to the condensed trees, and updates the structure of the animation list as necessary by resampling animated values at their new times. Content in the condensed visual tree is then rendered and composed. Animation and a composition communication protocol are also provided.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07548237",
	"publication_date": "2009-06-16",
	"application_number": "11499257",
	"application_date": "2006-08-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for media-enabled messaging having publish-and-send feature",
	"summary": "",
	"abstract": "A system and related techniques manage the adding of digital images or other media to email messages using a comparatively straightforward insert-and-send scheme. A user may choose to insert or embed comparatively low-resolution versions of images or other media automatically published to a media server into an email message. The recipient of that media-enabled message may receive and view the email text message along with the low-resolution images in typical fashion using an email or other client. The recipient may choose to view one or more of the embedded images in greater resolution by linking or activating those images, for instance by moving a cursor and clicking into the selected image or other object. Activating the image or other media object from within the email pane may seamlessly transport the user to the media server's Web page to view a larger-resolution version of that image, for instance using a media player. Video, audio and other media may likewise be inserted into messages. The sender may therefore share a variety of images, audio, video or other media with selected recipients without loading the recipient's email or other client with increased download times or storage requirements.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07631259",
	"publication_date": "2009-12-08",
	"application_number": "11534562",
	"application_date": "2006-09-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for mitigation of malicious network node activity",
	"summary": "",
	"abstract": "Malicious network node activity and, in particular, denial of service attacks, may be mitigated by one or more practical mitigation mechanisms and mitigation mechanism combinations. Suitable protocol messages may be challenged with a challenge probe. A response to the challenge probe may be utilized to determine if received protocol messages are illegitimate, that is, originated by a malicious network node. Received protocol messages may be classified as questionable protocol messages. For efficiency, protocol message challenges may be limited to protocol message classified as questionable. A sequence number limit may be calculated as a function of receive window size. Transmission control protocol messages may be determined to be illegitimate by comparing the acknowledgement number field with the calculated sequence number limit. Randomized selection of source port numbers for transmission control protocol connections may also mitigate malicious network node activity by resulting in legitimate protocol message field values that are less predictable.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07640338",
	"publication_date": "2009-12-29",
	"application_number": "11039758",
	"application_date": "2005-01-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for model based generation of application programming interface test code",
	"summary": "",
	"abstract": "Systems and methods for model based generation of API test code are disclosed. A number of interfaces are employed to enable flexible and extensible visual representations of test parameter input data. One such interface may enable diagramming of a test model that depicts sequencing dependencies among a set of API's to be tested. The test model may be sliced into test cases in accordance with the sequencing dependencies and, for each test case, a linear sequence of API test code may be generated.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07493597",
	"publication_date": "2009-02-17",
	"application_number": "11063709",
	"application_date": "2005-02-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for online analytical processing using dimension attributes and multiple hierarchies where first hierarchy has at least one attribute from the defined dimension not present in the second hierarchy",
	"summary": "",
	"abstract": "A data model for accessing data in a relational database in an OLAP system utilizes a multiple-hierarchy dimension. The dimension includes a set of attributes. Each attribute is bound to a column in the relational database. A logical structure is defined, indicating the relationships between the attributes. Hierarchies are defined. Each hierarchy includes a sequence of attributes. A hierarchy provides a common drill-down path that a database user can utilize to access the database. A hierarchy can include a single attribute or a combination of attributes. Both the relationships between the attributes and the sequence of attributes in a hierarchy are defined independent of any restrictions associated with the database.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07590638",
	"publication_date": "2009-09-15",
	"application_number": "10603037",
	"application_date": "2003-06-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for property-based focus navigation in a user interface",
	"summary": "",
	"abstract": "An improved system and method for focus navigation behavior specification in a user interface is provided. To this end, an application may include declarations that may associate a focus navigation resource with a user interface object and a focus navigation behavior may be dynamically selected for changing the input focus in the user interface. A focus navigation engine may be provided for applying a number of focus navigation behaviors for moving input focus within and among logical groups of user interface objects. A visual representation of the user interface objects with the applied focus navigation behavior may be generated and a display representation may be rendered for presentation on a user interface display.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07636897",
	"publication_date": "2009-12-22",
	"application_number": "10993672",
	"application_date": "2004-11-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for protecting data streams in hardware components",
	"summary": "",
	"abstract": "A scrambling architecture protects data streams in the operating system and hardware components of a computer by scrambling the otherwise raw data prior to the data being handled by the operating system. Scrambled content is passed to a filter graph (or other processing system) where the content is processed while scrambled. A scrambler also generates a random signal based on a first key and a second key. After processing, the scrambled data is passed to a driver for output. A driver may implement a descrambler to detect tone patterns in the content and recovers the first key from varying amplitudes of the tone patterns. The descrambler may also receive the second key via a separate channel and generates the same random signal using the recovered first key and the second key. The descrambler subtracts the tone patterns and the random signal from the scrambled content to restore the content.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07502471",
	"publication_date": "2009-03-10",
	"application_number": "11277012",
	"application_date": "2006-03-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing access to consistent point-in-time file versions",
	"summary": "",
	"abstract": "A system and method that automatically and transparently enable access to prior file or folder versions for a selected file or folder. When a file or folder is selected for version location, such as via a user interface, prior versions are automatically located and time data (e.g., determined from timestamps) identifying each of the prior versions is displayed. The user can then select a prior version for restoration and thereby recover from changed file data. The present invention can be implemented using remote file servers, or with local file system volumes. Prior to displaying the versions for selection, attributes of the prior versions may be requested, whereby only versions that actually exist can be displayed, and/or only versions with possibly different data are displayed, reducing unnecessary selection for restoration.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07529778",
	"publication_date": "2009-05-05",
	"application_number": "10021392",
	"application_date": "2001-12-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing an extensible codec architecture for digital images",
	"summary": "",
	"abstract": "An improved system and method for an extensible codec architecture for digital images is provided. Executable software code may be operably coupled to a codec manager for requesting imaging operations to be performed on a digital image. The codec manager may receive the request to perform an imaging operation on the digital image and may select an imaging component, such as a codec, from one or more imaging components registered in the computer system for performing an imaging operation on the digital image. An arbitration manager may include functionality for requesting enumeration of the operations an imaging component may perform on a particular digital image. One or more pixel format converters may then convert the pixel format in the digital image to a pixel format supported by an imaging component installed on the system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07502516",
	"publication_date": "2009-03-10",
	"application_number": "11062301",
	"application_date": "2005-02-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing context to an input method",
	"summary": "",
	"abstract": "An improved system and method for providing context information of executable code to an input method is provided. Advanced text input methods may be made aware of the type of text expected to be received as input so that input methods may achieve a higher accuracy in recognition of text input. Generic interfaces provide a framework for supporting application authoring platforms to allow application developers to easily specify context information to the system and have it reliably forwarded to the correct input methods. Additionally, a context tagging tool may associate specific text input fields of an existing application with an input scope without modifying the application itself. The context tagging tool may create a manifest that contains tags associating the specific text input fields with an input scope. Any advanced input methods use by the application may be updated with instructions for accessing the context information stored in the manifest.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07634720",
	"publication_date": "2009-12-15",
	"application_number": "10693330",
	"application_date": "2003-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for seamlessly comparing objects",
	"summary": "",
	"abstract": "The present comparison technique operates on objects having the same type, similar types, or different types. Multiple comparison objects may be compared against one or more reference objects. The comparison objects may be obtained from a prior cmdlet in a pipeline of cmdlets operating in an object-based environment. The reference object and comparison object may be compared in an order-based manner or in a key-based manner. In addition, specific properties may be specified which will identify which properties of the reference object and the comparison object to compare during the comparison. The comparison may generate an output that identifies the difference and/or similarities. The output may be pipelined to another cmdlet for further processing.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07503038",
	"publication_date": "2009-03-10",
	"application_number": "10928652",
	"application_date": "2004-08-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for selecting a tab within a tabbed browser",
	"summary": "",
	"abstract": "The techniques and mechanisms described herein are directed to a method for managing and selecting one out of large set of open tabs in a tabbed browser. Browsing software is configured to provide a quick pick user-interface that visually displays the content of the several tabs, such as a by displaying a thumbnail for each tab. The thumbnails allow a user to easily distinguish between each opened tab. The browsing software may also be configured to recognize a user selection from within the quick pick user-interface and in response, switch back to a tabbed window view and display the selected tab in that view. The browsing software may adjust the tab row so that the selected tab is positioned in a favorable position within the tab row. In addition, within the quick pick user-interface, the user may reposition the thumbnails and/or close the thumbnails, thus affecting the associated tab in the tab row.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07596760",
	"publication_date": "2009-09-29",
	"application_number": "11101735",
	"application_date": "2005-04-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for sharing items in a computer system",
	"summary": "",
	"abstract": "A system and method for sharing items. A sharer may choose to share individual items, such as documents, contacts, and e-mails. To begin the sharing process, a user selects the items that are to be shared. The user then selects the sharees who the items are to be shared with, and the permissions that are to be assigned to the sharees. When items are to be shared, they are left in place on the sharer's machine, while the system ensures that the permissions are set, and any security issues are handled so that the sharees are able to access the items. In addition, the details of the sharing transactions may be tracked and recorded for later review. The sharer may also have the system send a link to the sharee for directly accessing the shared items from the sharer's machine. The sharee may also be able to query the sharer's machine to see what the sharer has shared out with the sharee.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07536386",
	"publication_date": "2009-05-19",
	"application_number": "10729841",
	"application_date": "2003-12-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for styling content in a graphical user interface control",
	"summary": "",
	"abstract": "An improved system and method for styling content in a graphical user interface control is provided. An application may define a user interface control having a data object of any type of singular content, including another user interface control. An application may include style declarations that may associate a style resource with the user interface control and a style resource may be dynamically selected for presenting the data object of the user interface control. The style resources may define property values that may be selectively applied to specify a visual representation for the user interface control and data object, such as a visual subtree. A visual representation of the user interface control with the data object may be generated and then a display representation may be rendered for presentation on a user interface display.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07603624",
	"publication_date": "2009-10-13",
	"application_number": "10971953",
	"application_date": "2004-10-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for switching a data partition",
	"summary": "",
	"abstract": "A method of mapping data into a table includes identifying pointers of a source portion and target portion and switching the metadata pointers of the target portion to be those of the source portion. Upon switching the metadata pointers, the data of the source portion is mapped into the target portion of the table. The method of mapping exhibits the advantage of performing the mapping operation by moving metadata and not table content data. The method may be used on any portion of a database including files, tables, partitions, and indexes. In one embodiment, the switching of pointers includes copying the target portion metadata into temporary storage, copying source portion metadata into the target portion metadata, and copying metadata from the temporary storage into the source portion metadata.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07624120",
	"publication_date": "2009-11-24",
	"application_number": "10880271",
	"application_date": "2004-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for switching of media presentation",
	"summary": "",
	"abstract": "A system and method for switching presentation of media between two or more processes without interruption is described. This system and method can enable a user to enjoy media presented in a process and then switch the presentation of that media to another process without interruption in the media. Further, this system and method can enable a user to switch back and forth between media presentation within one application and another application without interruption.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07512884",
	"publication_date": "2009-03-31",
	"application_number": "10607256",
	"application_date": "2003-06-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for terminating applications",
	"summary": "",
	"abstract": "A computer application program executing on a computer, such as a portable computer, is selected for termination by first identifying computer application programs executing on the computer. A priority value is assigned to each of the identified computer applications. The priority value is based on multiple characteristics of the identified computer application programs. The computer application program with the smallest priority value is automatically terminated. If the computer application program with the smallest priority value is in a modal state in which it waits for a response from a user, then a default response is provided to the application prior to terminating the computer application program. The characteristics associated with the computer application programs may include average launch times, average memory usages, a class or type of application, frequencies of usage, and an amount of data stored on the computer by the computer application program.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07503044",
	"publication_date": "2009-03-10",
	"application_number": "10945215",
	"application_date": "2004-09-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for transferring a compressed data file to a peripheral device",
	"summary": "",
	"abstract": "An image passthrough extension structure and method facilitating the transfer of compressed data image files from a software application to a device via the computer system operating system. The application determines whether the device is capable of decoding the specific compressed data file by polling the device driver. If the driver returns a u201cno supportu201d message, the application processes the compressed data file in a conventional manner. If the driver returns a u201csupportu201d message, the application transfers the compressed data file, along with the additional processing information, to the device driver utilizing the conventional file transfer operating system data structures modified to incorporate the compressed data file passthrough function. By allowing an application to transfer a compressed image file directly to a device driver, the present invention improves image fidelity and improves overall computer system efficiency by reducing the size of data files transferred between the application, the operating system and the hardware device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07536480",
	"publication_date": "2009-05-19",
	"application_number": "10997450",
	"application_date": "2004-11-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for updating files utilizing delta compression patching",
	"summary": "",
	"abstract": "A system and method for updating one or more files on a computing device are provided. A client computing device obtains update information including an index identifying particular delta patches with specific versions of installed files. Upon selecting which of the applicable updates will be implemented, an update agent on the client computing device performs an inventory to identify which version a file to be updated is installed on the machine. The update agent selects a corresponding delta patch and transmits the request to an update service.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07509636",
	"publication_date": "2009-03-24",
	"application_number": "10737725",
	"application_date": "2003-12-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for updating installation components using an installation component delta patch in a networked environment",
	"summary": "",
	"abstract": "A system and method for managing the installation of files on a computing device are provided. A client computing device obtains installation information identifying a version of a baseline installation component stored on the client computing device. The installation information also includes an installation component delta patch that is merged with the baseline installation component to generate an updated installation component. The updated installation component is utilized to install one or more files on the client computing device. Upon completion of the installation, the updated installation component can be deleted.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07546594",
	"publication_date": "2009-06-09",
	"application_number": "10737162",
	"application_date": "2003-12-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for virtual folder sharing including utilization of static and dynamic lists",
	"summary": "",
	"abstract": "A system and method for virtual folder sharing, including utilization of static and dynamic lists. Static and dynamic lists may be created as types of virtual folders. Virtual folders expose regular files and folders to users in different views based on their metadata instead of the actual physical underlying file system structure on the disk. A static list consists of a folder of items that are in a specific order, while a dynamic list gathers a set of items based on a scope and a set of criteria. When a list is shared, the actual list is left in place on the sharer's machine or server, while permission is granted to the sharee to remotely access the list and the referenced items. If the list is changed by adding or removing items, these items are also automatically re-permissioned to allow or disallow the sharee to have access to the items.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07526483",
	"publication_date": "2009-04-28",
	"application_number": "10691841",
	"application_date": "2003-10-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method of allowing user mode applications with access to file data",
	"summary": "",
	"abstract": "In accordance with this invention, a system, method, and computer-readable medium that aggregates the knowledge base of a plurality of antivirus software applications are provided. User mode applications, such as antivirus software applications, gain access to file system operations through a common information model, which obviates the need for antivirus software vendors to create kernel mode filters. When file system operations are available to antivirus software applications, the present invention may cause each antivirus software application installed on a computing device to perform a scan to determine if the data is malware.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07478237",
	"publication_date": "2009-01-13",
	"application_number": "10984207",
	"application_date": "2004-11-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method of installing software updates in a computer networking environment",
	"summary": "",
	"abstract": "The present invention provides a system and method of installing software updates to computing devices connected to an enterprise network. More specifically, the present invention provides a system and method of installing software updates based on input received from a system administrator or similar entity. When a command to install a software update is received, the present invention obtains the requested software update from a download center and causes the software update to be transmitted to client computing devices that need the functionality provided by the software update. Then the software update is installed in accordance with the input previously obtained from the system administrator.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07546595",
	"publication_date": "2009-06-09",
	"application_number": "10966621",
	"application_date": "2004-10-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method to resolve ambiguity in natural language requests to determine probable intent",
	"summary": "",
	"abstract": "In response to receiving a natural language request, possible intents may be determined and ranked and an appropriate action performed. Intent may be determined by removing as much ambiguity as possible by leveraging all the available information received to generate and rank interpretations of a user request. Actions may be generated as a result of the ranked interpretations. Actions may include performing a task or search. Search results from multiple pluggable search providers may be returned.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07596568",
	"publication_date": "2009-09-29",
	"application_number": "10822499",
	"application_date": "2004-04-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for abstracting audio-video codecs",
	"summary": "",
	"abstract": "A game system utilizes a codecs abstraction laver (CAL) to allow the game system to accommodate new and/or modified codecs without requiring the game application code to be modified. The CAL, functioning as an application programming interface (API), operates between media sources and the game application. The game application interacts with the CAL and not the codec. Differences between codecs are transparent to the game application. New codecs can be introduced and used by existing applications without modifying the existing application code. The CAL processes media from a variety of sources such as memory, files, http sources, queues, custom sources, external drives, or game media sources (e.g., XMedia). The CAL determines the source of the media, the type of media being received (e.g., audio, video, image, animation, or game), and the codec used to compress the media. The CAL provides the decoded media to the game application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07634727",
	"publication_date": "2009-12-15",
	"application_number": "11114510",
	"application_date": "2005-04-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for customer and automatic color management using policy controls",
	"summary": "",
	"abstract": "Methods and apparatuses for supporting a color management system that processes an image in accordance to a hierarchically-structured policy are provided. The policy may be modeled with a schema in which the policy is organized with a plurality of policy levels. Policy settings at a lower policy level may override policy settings at a higher policy level, which may be inhibited with a lockout mechanism. A user interface supports the capability of a user configuring policy settings through a series of dialog boxes. The dialog boxes are hierarchically organized in accordance with configuration levels, where the configuration levels are associated with the policy levels. The dialog boxes provide a consolidated approach for configuring a color management system by a user. An interface is supported, enabling a component to send inputs to a color management system in order to configure the policy.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07636468",
	"publication_date": "2009-12-22",
	"application_number": "10704833",
	"application_date": "2003-11-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for handling streaming information using a plurality of reader modules by enumerating output pins and associated streams of information",
	"summary": "",
	"abstract": "An information appliance receives streaming information. The information appliance includes a storage buffer and a writer module which receives the streaming information and writes the streaming information to the buffer. A plurality of reader modules are configurable to read the streaming information from the buffer independently of one another.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07558918",
	"publication_date": "2009-07-07",
	"application_number": "11098018",
	"application_date": "2005-04-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for transferring data over a network",
	"summary": "",
	"abstract": "A system and computer-readable media are provided for transferring data over a network. In accordance with one aspect of the invention, the system includes a monitoring component, which monitors the level of actual network bandwidth utilization. The system also includes an identification component, which operates to identify a maximum monitored level of actual utilization. A calculating component then calculates a block size of data to transfer as a function of the maximum monitored level of utilization. The block size may be bounded between a maximum threshold value and a minimum threshold value. A receiving component then operates to receive the block size portion of the set of data over the network at one or more intervals. In another aspect of the invention, the block size is not bounded, and the system includes an interval adjustment component, which increases the size of the intervals when the block size is below a minimum threshold and decreases the size of the intervals when the block size exceeds a maximum threshold.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07502849",
	"publication_date": "2009-03-10",
	"application_number": "10988074",
	"application_date": "2004-11-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System security using human authorization",
	"summary": "",
	"abstract": "In response to the occurrence of a restricted event in a computing device, a user of the computing device is presenting with a challenge including information designed to assist in determining whether the challenge is answered by a human. If it is determined that the challenge was not answered by a human, the restricted event is counteracted.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07603706",
	"publication_date": "2009-10-13",
	"application_number": "11172264",
	"application_date": "2005-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method, and computer program product for general environment mapping",
	"summary": "",
	"abstract": "A reflection image and an environment map are loaded into memory. During rendering of an object, an environment texture sample is retrieved from the environment map based on a reflection vector stored in a pixel of the reflection image. The retrieved environment texture sample is then applied to the object. The object thus rendered is stored in a frame buffer.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07561166",
	"publication_date": "2009-07-14",
	"application_number": "11275424",
	"application_date": "2005-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and method for representing relationships between units of information manageable by a hardware/software interface system",
	"summary": "",
	"abstract": "Various embodiments of the present invention are directed to a method for manipulating a plurality of discrete units of information (u201cItemsu201d) in a hardware/software interface system for a computer system, said method comprising interconnecting said Items with a plurality of Relationships and managing said Relationships at the hardware/software interface system level. Each Relationship constitutes, at the hardware/software interface system level, a mapping between a pair of Items that said Relationship interconnects. Moreover, each Relationship may have properties of its own distinct and separate from the properties of the Items it interconnects.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07483915",
	"publication_date": "2009-01-27",
	"application_number": "10646645",
	"application_date": "2003-08-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for coordinating wireless traffic for heterogeneous wireless devices",
	"summary": "",
	"abstract": "In view of the foregoing, the present invention provides a unified software framework or architecture for distributed coordination of wireless devices and radios, referred to as Layer 2.5 Software MAC (or u2018SoftMACu2019), which resides between the standard 802.11 MAC layer (Layer 2) and IP layer (Layer 3) to regulate and control the amount of traffic (both real-time and u201cbest effortu201d) delivered to 802.11 MAC DCF interfaces. The software based design can be ported to different OS platforms and systems and is capable of handling new hardware interfaces and MAC mechanisms (e.g., 802.11e) with only a software upgrade. The invention thus provides a natural way to make end systems support coordination of different radios of device(s), achieving better performance. Advantages of the 2.5 layer software MAC in accordance with the invention include: (a) there are no hardware constraints; (b) heterogeneous wireless/radio support is provided at the 2.5 layer; and (c) an evolutionary and extensible solution with the ability to support future wireless MAC/PHY chip combinations.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07626931",
	"publication_date": "2009-12-01",
	"application_number": "11089209",
	"application_date": "2005-03-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for disabling software components to protect digital media",
	"summary": "",
	"abstract": "A list of computing components to be disabled can be distributed through a computer readable medium to computing devices. A process on these computing devices can read the list and disable listed components. The components can be permanently disabled, or disabled for a limited purpose. A list or list update may be provided with a digital media object that specifies a more or less stringent revocation policy for that object. A media object may also specify a maximum age for the list. This allows owners of digital media to control the stringency of media protection for their property. The process that accesses the list may prompt updates to the list, informing users of component disabling, and prompt replacement of disabled components. Finally, the invention provides techniques for securely transmitting and storing the list to protect it from alteration by unauthorized entities.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07500267",
	"publication_date": "2009-03-03",
	"application_number": "10835951",
	"application_date": "2004-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for efficiently compressing and decompressing markup language",
	"summary": "",
	"abstract": "Systems and methods for compressing markup language data, such as XML data, are provided that utilize a finite state machine (FSM), which is representative of an XML schema, and a rule file. Information defined in an XML schema is abstracted into a finite state machine (FSM). The rule file ensures that a compressor and de-compressor have consistent FSMs when the compressor and de-compressor for XML data are not in the same location, such as is generally the case for Web Services scenarios or other client/server scenarios. With the rule file, FSMs can thus be be easily stored, transmitted and updated.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07630997",
	"publication_date": "2009-12-08",
	"application_number": "11089193",
	"application_date": "2005-03-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for efficiently generating table layouts using moveable items",
	"summary": "",
	"abstract": "An API is provided for positioning items in a table. The API allows a number of columns or a number of rows, or both, to be specified for a table. Any items to be placed in the table may be identified for the API. Items may be u201cmoveable,u201d or not associated with fixed positions in the table. The moveable items may be placed adjacently in the table to fill a first row. New rows or columns may be generated to accommodate additional items. Items may also be u201cfixed,u201d or associated with fixed positions in the table. Moveable items may fill in around the fixed items. A novel algorithm is provided to efficiently place both moveable and fixed items in a table. An on-demand reservation grid may be used in conjunction with the algorithm, thereby accommodating items that span multiple columns and/or rows.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07500186",
	"publication_date": "2009-03-03",
	"application_number": "10929861",
	"application_date": "2004-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for electronic program guide data services",
	"summary": "",
	"abstract": "EPG services are provided, which enables a device such as a computer, a set top box or the like to collect EPG data from multiple EPG data providers or sources. The EPG data is collected at the device by EPG loaders. Each EPG loader collects EPG data from a particular source. The EPG loaders deliver the EPG data to a writer module, which performs scaling and formatting functions to the EPG data. The writer module also stores the scaled and formatted EPG data in a database or other storage. Once stored, applications gain access to the EPG data through a control module. The writer module may also be implemented by chaining EPG loaders in a priority scheme. However, EPG loader interaction reduces independence and forces more rigid interface and implementation constraints upon the design of EPG loaders. The control module provides the accessed EPG data to the applications. EPG services function to isolate the operation of the applications from the EPG data sources. Because the EPG data is stored by the writer module and accessed by the control module, the applications and EPG data sources can change independently of one another without having an effect on the ability of EPG services to collect and provide access to EPG data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07484233",
	"publication_date": "2009-01-27",
	"application_number": "11093634",
	"application_date": "2005-03-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for electronic program guide data services",
	"summary": "",
	"abstract": "EPG services are provided, which enables a device such as a computer, a set top box or the like to collect EPG data from multiple EPG data providers or sources. The EPG data is collected at the device by EPG loaders. Each EPG loader collects EPG data from a particular source. The EPG loaders deliver the EPG data to a writer module, which performs scaling and formatting functions to the EPG data. The writer module also stores the scaled and formatted EPG data in a database or other storage. Once stored, applications gain access to the EPG data through a control module. The writer module may also be implemented by chaining EPG loaders in a priority scheme. However, EPG loader interaction reduces independence and forces more rigid interface and implementation constraints upon the design of EPG loaders. The control module provides the accessed EPG data to the applications. EPG services function to isolate the operation of the applications from the EPG data sources. Because the EPG data is stored by the writer module and accessed by the control module, the applications and EPG data sources can change independently of one another without having an effect on the ability of EPG services to collect and provide access to EPG data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07603687",
	"publication_date": "2009-10-13",
	"application_number": "11046970",
	"application_date": "2005-01-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for extensions and inheritance for units of information manageable by a hardware/software interface system",
	"summary": "",
	"abstract": "By modeling real-world application objects with complex structures, behaviors, and operations described by a schema which is enforced by the hardware/software interface system, various embodiments of the present invention provide rich sub-typing functionality by extending Items (and Item types) using u201cExtensionsu201d which provide additional data structures (Properties, Relationships, etc.) to already existing Items type structures. Extensions are strongly typed instances that cannot exist independently and must be attached to an Item or a Nested Element. Extensions are also intended to address u201cmulti-typingu201d issues by enabling the overlap of type instances (e.g., a Document may be a u201clegal documentu201d as well a u201csecure documentu201d).",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07590643",
	"publication_date": "2009-09-15",
	"application_number": "10693574",
	"application_date": "2003-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for generating a walled garden program for substantially optimized bandwidth delivery",
	"summary": "",
	"abstract": "Systems and methods for generating a walled garden program for substantially optimized bandwidth delivery are described. In particular, layers of data that are substantially similar across multiple pages of Web content are identified for subsequent reuse during transcoding operations. To this end, the content pages are transcoded into a program that includes multiple video components. The pages are transcoded such that a layer that was determined to be substantially similar across multiple ones of the pages is not encoded into a respective video component for each substantially similar occurrence of the layer. Rather, the layer and all other substantially similar layers are represented in the program with a single still of the video components and interaction model metadata. By reusing similar components, the amount of data used to represent the Web content is reduced, providing for substantially optimized bandwidth delivery to the client.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07533406",
	"publication_date": "2009-05-12",
	"application_number": "10262030",
	"application_date": "2002-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for generating prediction queries",
	"summary": "",
	"abstract": "Systems and methods are provided for generating prediction queries to help a user build and execute prediction queries. A user interface (UI) is provided that is easy to use and understand in connection with the generation of a prediction query for data mining. The UI can be instantiated from a variety of disparate sources that may request query building services. While prediction queries and relational queries are quite different, the UI enables prediction queries to be built in a manner that is similar to the way relational queries are built. In one embodiment, the main screen of the UI includes four main components: (1) a table column mapping area, (3) a selection grid area, (4) a query text display area and (5) a query result grid area. In one embodiment, the query text display area and the query result grid area are initially not presented to the user.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07640252",
	"publication_date": "2009-12-29",
	"application_number": "11031306",
	"application_date": "2005-01-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for managing drivers in a computing system",
	"summary": "",
	"abstract": "Managed code, including applications, runtime, and driver, have a priori knowledge of the client's exact hardware configuration, just as the JIT compiler has a priori knowledge of the microprocessor type on the target computer system. At compile time, the compiler knows the effective version various system drivers, so that the compiler can emit an executable tuned for a particular driver version and target system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07600222",
	"publication_date": "2009-10-06",
	"application_number": "10039035",
	"application_date": "2002-01-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for managing preparation of graphical elements for presentation",
	"summary": "",
	"abstract": "Methods and systems are provided for managing the preparation of graphical elements in computer application programs for presentation. The methods independently identify and measure, and identify and arrange, sets of elements. A computer-readable medium is also provided for facilitating the management of the preparation for presentation of graphical elements in computer application programs.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07478340",
	"publication_date": "2009-01-13",
	"application_number": "10691349",
	"application_date": "2003-10-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for optimizing geometric stretch of a parametrization scheme",
	"summary": "",
	"abstract": "Systems and methods are provided for optimizing the geometric stretch of a parametrization scheme. Given an arbitrary mesh, the systems and methods construct a progressive mesh (PM) such that all meshes in the PM sequence share a common texture parametrization. The systems and methods minimize geometric stretch, i.e., small texture distances mapped onto large surface distances, to balance sampling rates over all locations and directions on the surface. The systems and methods also minimize texture deviation, i.e., u201cslippageu201d error based on parametric correspondence, to obtain accurate textured mesh approximations. The technique(s) begin by partitioning the mesh into charts using planarity and compactness heuristics. Then, the technique(s) proceed by creating a stretch-minimizing parametrization within each chart, and by resizing the charts based on the resulting stretch. Then, the technique(s) simplify the mesh while respecting the chart boundaries. Next, the parametrization is re-optimized to reduce both stretch and deviation over the whole PM sequence. The charts may then be packed into a texture atlas for improved texture mapping in connection with a parametrization scheme.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07573474",
	"publication_date": "2009-08-11",
	"application_number": "10981080",
	"application_date": "2004-11-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for providing a combined pen and mouse input device in a computing system",
	"summary": "",
	"abstract": "Currently, a user may need to carry or otherwise keep track of both a mouse and electronic pen for a computer, such as a portable computing device. Carrying or otherwise keeping track of both devices can be tedious. Accordingly, systems and methods for providing a dual mode mouse pen are enabled, whereby the mouse pen may be used as both a pen, or alternatively, as a mouse. In one embodiment, the pen may include a switch to select one of two modes: pen or mouse.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07483018",
	"publication_date": "2009-01-27",
	"application_number": "11121806",
	"application_date": "2005-05-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for providing alternate views when rendering audio/video content in a computing system",
	"summary": "",
	"abstract": "Systems and methods for transitioning between alternate views when rendering A/V content in a computing system are provided. In various embodiments, a u201cNow Playingu201d state is exposed to a user experiencing media on a media device via a user interface, wherein the u201cNow Playingu201d state has a plurality of associated u201cNow Playingu201d views. The user interface allows the user to change u201cNow Playingu201d views based on media type and, if desirable, offer quick access settings. Advantageously, when transitioning between or cycling through the u201cNow Playingu201d views, the state of the user interface remains the u201cNow Playingu201d state.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07512882",
	"publication_date": "2009-03-31",
	"application_number": "10751863",
	"application_date": "2004-01-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for providing an enhanced graphics pipeline",
	"summary": "",
	"abstract": "An enhanced graphics pipeline is provided that enables common core hardware to perform as different components of the graphics pipeline, programmability of primitives including lines and triangles by a component in the pipeline, and a stream output before or simultaneously with the rendering a graphical display with the data in the pipeline. The programmer does not have to optimize the code, as the common core will balance the load of functions necessary and dynamically allocate those instructions on the common core hardware. The programmer may program primitives using algorithms to simplify all vertex calculations by substituting with topology made with lines and triangles. The programmer takes the calculated output data and can read it before or while it is being rendered. Thus, a programmer has greater flexibility in programming. By using the enhanced graphics pipeline, the programmer can optimize the usage of the hardware in the pipeline, program vertex, line or triangle topologies altogether rather than each vertex alone, and read any calculated data from memory where the pipeline can output the calculated information.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07570267",
	"publication_date": "2009-08-04",
	"application_number": "10934249",
	"application_date": "2004-09-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for providing conflict handling for peer-to-peer synchronization of units of information manageable by a hardware/software interface system",
	"summary": "",
	"abstract": "Various embodiments of the present invention are directed to conflict handling for conflicts that occur in a peer-to-peer synchronization system, where the ability to correctly and efficiently handle conflicts minimizes data loss while retaining good usability and reduces the need for user intervention during synchronization. Conflict handling in the synchronization service is divided into three stages: (1) conflict detection; (2) automatic conflict resolution and logging; and (3) conflict inspection and resolution. Certain embodiments are directed to a conflict handling schema comprising one or more of the follow conflict handling elements: (a) schematized representation of conflicts; (b) detection of conflicts; (c) logging of conflicts into a durable store; (d) automatic resolution of conflicts according to a flexible and configurable azqsxqxwdconflict resolution policy; (e) composable and extensible conflict handlers to filter and resolve conflicts; (f) automatic detection and removal of obsolete conflicts; and (g) programmatic conflict resolutions.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07512638",
	"publication_date": "2009-03-31",
	"application_number": "10883621",
	"application_date": "2004-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for providing graphics data in parallel to graphics processing hardware",
	"summary": "",
	"abstract": "A method and system for controlling the algorithmic elements in 3D graphics systems via an improved 3D graphics API is provided. In one aspect, in a 3D graphics system having privatized formats with privatized drivers used to increase the efficiency of display, existing problems are eliminated that are associated with multiple redundant copies of the publicly formatted graphics data made in host system memory pursuant to various graphics operations e.g., lock and unlock operations. The ability to make a system copy of publicly formatted data is exposed to the developer, eliminating the creation of unnecessary, and redundant copies. Efficient switching between the privatized and public format remains hidden from the developers so that applications execute efficiently while removing consideration thereof from the developers. Thus, developers are free to consider other tasks. In the event that a developer wishes to make a copy of the data, the data is copied pursuant to an operation that the developer calls and over which the developer has control, ensuring that multiple redundant copies of the graphics data are not made in host system memory.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07570268",
	"publication_date": "2009-08-04",
	"application_number": "10973359",
	"application_date": "2004-10-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for providing intermediate targets in a graphics system",
	"summary": "",
	"abstract": "Systems and methods for utilizing intermediate target(s) in connection with computer graphics in a computer system are provided. In various embodiments, intermediate memory buffers in video memory are provided and utilized to allow serialized programs from graphics APIs to support algorithms that exceed the instruction limits of procedural shaders for single programs. The intermediate buffers may also allow sharing of data between programs for other purposes as well, and are atomically accessible. The size of the buffers, i.e., the amount of data stored in the intermediate targets, can be variably set for a varying amount of resolution with respect to the graphics data. In this regard, a single program generates intermediate data, which can then be used, and re-used, by an extension of the same program and/or any number of other programs any number of times as may be desired, enabling considerable flexibility and complexity of shading programs, while maintaining the speed of modem graphics chips.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07564460",
	"publication_date": "2009-07-21",
	"application_number": "10196864",
	"application_date": "2002-07-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for providing relational and hierarchical synchronization services for units of information manageable by a hardware/software interface system",
	"summary": "",
	"abstract": "Several embodiments of the present invention comprise a storage platform that provides a synchronization service that (i) allows multiple instances of the storage platform (each with its own data store) to synchronize parts of their content according to a flexible set of rules, and (ii) provides an infrastructure for third parties to synchronize the data store of the storage platform of the present invention with with other data sources that implement proprietary protocols. However, it is possible that a conflict might arise in a number of synchronization scenarios. For example, A and B may have been changes made to the same change unit, or A might be a deletion to the same change unit that B was modifying. While some of these conflicts can be resolved using the conflict resolution options discussed earlier herein, certain conflicts provide particularly difficult challenges, and these challenges and their solutions are discussed herein.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07483923",
	"publication_date": "2009-01-27",
	"application_number": "10692508",
	"application_date": "2003-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for separating units of information manageable by a hardware/software interface system from their physical organization",
	"summary": "",
	"abstract": "Various embodiments of the present invention are directed to a hardware/software interface system for a computer system for manipulating a plurality of discrete units of information at a hardware/software interface system level, Items, the Items interconnected by Relationships and where Items have Relationships to other Items. One such relationship between Items may be for the purposes of logically denoting to the hardware/software interface system whether one Item is public and accessible or private and unaccessible to another Item.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07555497",
	"publication_date": "2009-06-30",
	"application_number": "10646941",
	"application_date": "2003-08-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for support of various processing capabilities",
	"summary": "",
	"abstract": "Systems and methods are described for support of various computing device and target entity capabilities. In an implementation, a method includes determining one or more processing capabilities of a computing device to process data for rendering by a rendering device. A selection is made, based on the determining, of one or more filters to provide data configured for rendering by the rendering device and that provides at least one processing capability that is not included in the one or more processing capabilities of the computing device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07607141",
	"publication_date": "2009-10-20",
	"application_number": "10935681",
	"application_date": "2004-09-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for synchronizing with multiple data stores",
	"summary": "",
	"abstract": "Systems and methods for synchronizing data stores. A framework including a sync runtime enables consistent and manageable synchronization between a data store and multiple, diverse back end data stores. The sync runtime provides services such as change enumeration, conflict detection, metadata management, item ID matching, sync interruptability, and the like that are accessible to configurable adapters over an application programming interface. Each synchronizing data store can uses a sync controller to initialize an adapter that can access the services provided by the sync runtime. The sync controller can use a profile to configure each adapter. The profile can identify conflict resolution policies, synchronization filters, source and destination folders, sync direction, and the like.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07636776",
	"publication_date": "2009-12-22",
	"application_number": "10631264",
	"application_date": "2003-07-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for the implementation of a core schema for providing a top-level structure for organizing units of information manageable by a hardware/software interface system",
	"summary": "",
	"abstract": "Various embodiments of the present invention are directed to a method, in a computer system, for a hardware/software interface system to manipulate a plurality of discrete units of information having properties understandable by said hardware/software interface system (u201cItemsu201d), said method comprising the use of a core schema to define a set of core Items which said hardware/software interface system understands and can directly process in a predetermined and predictable way. The core Items are derived from the base Item type. In certain embodiments, the Items types in the core schema cannot be directly subtyped but may instead be extended to incorporate additional properties in specific contexts without becoming inconsistent in other contexts that only comprehend the core Item type.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07529811",
	"publication_date": "2009-05-05",
	"application_number": "10646632",
	"application_date": "2003-08-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods that enable search engines to present relevant snippets",
	"summary": "",
	"abstract": "Systems and methods that provide search and/or query-relevant information and/or links thereto to a user as and/or with a search and/or query result. This information can be determined from summary information that can be included within a tag, header, body, meta-data, etc. of the data. A user can employ a local and/or web search utility along with a search word, phrase, sentence, etc. to search over a data repository to locate and retrieve data that satisfies the search criteria. The summary information of this data is obtained and matched against the results and/or search criteria to determine whether the data is relevant to the search and/or query. The summary information is utilized to determine a snippet that summarizes the data, based on the search and/or query, search criteria, etc. to provide the user with search and/or query-relevant results and/or one or more links thereto.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07512601",
	"publication_date": "2009-03-31",
	"application_number": "11037569",
	"application_date": "2005-01-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems management navigation and focus collection",
	"summary": "",
	"abstract": "Systems management navigation and focus collection is described. In one implementation computing-based managed items which are part of a systems management environment are navigated to locate one or more computing-based managed items. In another implementation, the computing-based managed items are indexed, and then searched to locate one or more of the computing-based managed items from among the computing-based managed items which have been indexed. The searching can be based on one or more search requests. Each of the one or more computing-based managed items located by the navigating and/or the searching is identified by a respective unique identifier, and selected ones of the unique identifiers can be collected in a focus collection where they are at least temporarily maintained for a user.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07634486",
	"publication_date": "2009-12-15",
	"application_number": "11427739",
	"application_date": "2006-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems, structures, and methods for decrypting encrypted digital content when a rights management server has been decommissioned",
	"summary": "",
	"abstract": "A method is disclosed for rendering content encrypted according to a cryptographic key, where the content has corresponding rights data including a decryption key (KD) for decrypting the encrypted content, and where (KD) in the rights data is encrypted according to a public key of a rights management (RM) server (PU-RM) to result in (PU-RM(KD)). The RM server normally delivers (KD) within a license, but upon being decommissioned can no longer issue such license. In the method, a notification is received that the RM server has been decommissioned, and thereafter an attempt is made to render a piece of content. Such content is determined to be protected to the decommissioned RM server, and a request is sent to the decommissioned RM server for the content key (KD) for the content rather than any license. Thereafter (KD) is received from the decommissioned RM server.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07570768",
	"publication_date": "2009-08-04",
	"application_number": "10632274",
	"application_date": "2003-08-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Tag-based schema for distributing update metadata in an update distribution system",
	"summary": "",
	"abstract": "A tag-based structure for communicating software update metadata information to client computers and to update service nodes is presented. An update metadata file includes: an identifier tag including a software update identifier that uniquely identifies the software update; zero or more general properties tags that carry general property information relating the software update; zero or more localized properties tags that carry localized property information organized according to language; zero or more relationship tags that identify dependency relationships the current software update, as described in the update metadata, has with other software updates; zero or more applicability rules tags that carry information for determining the applicability of the software update to a client computer; zero or more files tags that carry information relating to the software update's payload files; and handler specific data tags that carry information directed to the software handler for installing the software update.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07539686",
	"publication_date": "2009-05-26",
	"application_number": "10799440",
	"application_date": "2004-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Tagged translation lookaside buffers in a hypervisor computing environment",
	"summary": "",
	"abstract": "Tagged translation lookaside buffer consistency is enabled in the presence of a hypervisor of a virtual machine computing environment, in which multiple processes of multiple logical processors of guests are hosted by a virtual machine monitor or hypervisor component. The virtual machine monitor or hypervisor component maintains tagged TLB data associated with the plurality of processes on behalf of each of the plurality of logical processors, thereby ensuring consistency of the tagged TLB data across all of the plurality of processes.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07484073",
	"publication_date": "2009-01-27",
	"application_number": "11484949",
	"application_date": "2006-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Thread protection",
	"summary": "",
	"abstract": "Tampering with pieces of software is inhibited. Thread protection inhibits tampering with various threads that execute protective pieces of software. Profiles are stored in a central hierarchical database and such profiles are protected from tampering. The obfuscation of a software image so as to becloud the comprehension of hackers in reverse engineering pieces of software comprising the software image is provided.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07526805",
	"publication_date": "2009-04-28",
	"application_number": "11062238",
	"application_date": "2005-02-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Tools and techniques for instrumenting interfaces of units of a software program",
	"summary": "",
	"abstract": "A computer readable medium contains a data structure, which, in some embodiments, is an interface wrapper. The interface wrapper stores information about the interface such as a first data field that contains a reference to instrumentation, a second data field that contains data which represents a reference to an interface of a software program, and a third data field which contains data representing an identity of the unit of software. When a client unit calls a member function of the interface, the interface wrapper intercepts the call and invokes the instrumentation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07493630",
	"publication_date": "2009-02-17",
	"application_number": "11096358",
	"application_date": "2005-04-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transaction interoperability using host-initiated processing",
	"summary": "",
	"abstract": "Systems and methods are disclosed to support Host Initiated Processing (HIP), in which an application in a first system calls a software object in a second system that is in some respect incompatible with the first system. The calling application resides in a legacy system (e.g., an IBM mainframe), and is written based on a programming model (e.g., CICS). The called software object is based on a WINDOWS-based programming model (e.g., COM or .NET), which is incompatible with the legacy system's programming model. The HIP system converts a call from the legacy system so that the call is usable with the WINDOWS-based system, and also converts the result provided by the WINDOWS-based system into a form usable by the legacy system. Example aspects of incompatibilities between a legacy system and a WINDOWS-based system include: data representation, data types, communications protocol, passing of call parameters and return values, and error handling.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07620958",
	"publication_date": "2009-11-17",
	"application_number": "10610689",
	"application_date": "2003-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transactional file system",
	"summary": "",
	"abstract": "A transactional file system wherein multiple file system operations may be performed as a transaction. An application specifies that file system-related operations should be handled in a transaction, and the application is given a file handle associated with a transaction context. For file system requests associated with a transaction context, a file system component manages operations consistent with transactional behavior. The component provides data isolation by providing multiple file versions, such that transactional readers do not receive changes until after the transaction commits and the reader reopens the file. The component also handles namespace logging operations in a multiple-level log that facilitates logging and recovery. Namespace isolation is provided until a transaction commits via isolation directories, whereby until committed, a transaction sees the effects of its own operations but not the operations of other transactions. Transactions over a network are also facilitated via a redirector protocol.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07512636",
	"publication_date": "2009-03-31",
	"application_number": "11009228",
	"application_date": "2004-12-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transfer of user profiles using portable storage devices",
	"summary": "",
	"abstract": "A method and apparatus for transferring user profiles between computing devices using portable storage devices is disclosed. A portable storage device (PSD) is connected to a computing device, the computing device reads user profile data from the PSD and configures itself according to that data. If the user profile data is changed on the computing device, those changes are synchronized on the PSD.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07620667",
	"publication_date": "2009-11-17",
	"application_number": "10713429",
	"application_date": "2003-11-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transferring application secrets in a trusted operating system environment",
	"summary": "",
	"abstract": "Transferring application secrets in a trusted operating system environment involves receiving a request to transfer application data from a source computing device to a destination computing device. A check is made as to whether the application data can be transferred to the destination computing device, and if so, whether the application data can be transferred under control of the user or a third party. If these checks succeed, a check is also made as to whether the destination computing device is a trustworthy device running known trustworthy software. Input is also received from the appropriate one of the user or third party to control transferring of the application data to the destination computing device. Furthermore, application data is stored on the source computing device in a manner that facilitates determining whether the application data can be transferred, and that facilitates transferring the application data if it can be transferred.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07577839",
	"publication_date": "2009-08-18",
	"application_number": "11068006",
	"application_date": "2005-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transferring application secrets in a trusted operating system environment",
	"summary": "",
	"abstract": "Transferring application secrets in a trusted operating system environment involves receiving a request to transfer application data from a source computing device to a destination computing device. A check is made as to whether the application data can be transferred to the destination computing device, and if so, whether the application data can be transferred under control of the user or a third party. If these checks succeed, a check is also made as to whether the destination computing device is a trustworthy device running known trustworthy software. Input is also received from the appropriate one of the user or third party to control transferring of the application data to the destination computing device. Furthermore, application data is stored on the source computing device in a manner that facilitates determining whether the application data can be transferred, and that facilitates transferring the application data if it can be transferred.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07577840",
	"publication_date": "2009-08-18",
	"application_number": "11068007",
	"application_date": "2005-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transformation of modular finite state transducers",
	"summary": "",
	"abstract": "A Q Framework, or QFX for short, is provided for performing efficient tree transformation in a generalized manner that achieves preservation of action semantics for FSTs that support action information in their representations across a diverse set of types of representations for FSTs. Among other features, the QFX also enables the preservation of ordered and unordered nest information while performing tree transformation, supports the transformation of non-deterministic data structures to a deterministic data structure and enables intersection operations on machines having action semantics.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07624075",
	"publication_date": "2009-11-24",
	"application_number": "11532349",
	"application_date": "2006-09-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transformation of modular finite state transducers",
	"summary": "",
	"abstract": "A Q Framework, or QFX for short, is provided for performing efficient tree transformation in a generalized manner that achieves preservation of action semantics for FSTs that support action information in their representations across a diverse set of types of representations for FSTs. Among other features, the QFX also enables the preservation of ordered and unordered nest information while performing tree transformation, supports the transformation of non-deterministic data structures to a deterministic data structure and enables intersection operations on machines having action semantics.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07627541",
	"publication_date": "2009-12-01",
	"application_number": "11532374",
	"application_date": "2006-09-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Translation of object queries involving inheritence",
	"summary": "",
	"abstract": "Join expressions, expressed in terms of objects, are translated into a relational database join statement by generating a parse tree based on the join expression. The parse tree is traversed to build the relational database join statement.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07478087",
	"publication_date": "2009-01-13",
	"application_number": "11481331",
	"application_date": "2006-07-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Type bridges",
	"summary": "",
	"abstract": "Methods, systems, and computer program products for converting an object of one type to an object of another type that allow for the runtime operation of the conversion process to be altered or customized. The conversion may occur within an extensible serialization engine that serializes, deserializes, and transforms objects of various types. The runtime operation of the serialization engine is altered by one or more extension routines that implement the desired customizations or extensions, without requiring replacement of other existing routines. Based on type information, identified for an initial object, the object is converted to an intermediate representation which permits runtime modification, including modification of object names, object types, and object data. The intermediate representation of the initial object is modified in accordance with extension routines that alter the runtime operation of the serialization engine, and the intermediate representation is converted to a final object and type.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07624400",
	"publication_date": "2009-11-24",
	"application_number": "11567058",
	"application_date": "2006-12-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Type definition language for defining content-index from a rich structured WinFS data type",
	"summary": "",
	"abstract": "An XML based type-definition language for declaring content-index for WinFS Types is provided. Content-index declarations can be specified for the Item type as well as it's sub-entities like Fragments, etc across Item type hierarchies. The properties of WinFS types in the schema are marked for content-indexing by the schema designer. Installing the content-index definitions includes parsing content-index definitions in the schema, generation of appropriate SQL statements for data extraction and storing the SQL statements.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07590654",
	"publication_date": "2009-09-15",
	"application_number": "11480721",
	"application_date": "2006-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Type path indexing",
	"summary": "",
	"abstract": "Efficient hierarchical searching is based on object type. By pre-computing additional information and storing it in a fast-lookup structure, it is possible to quickly identify objects that satisfy an object retrieval request. Furthermore, it is also possible to use this technique to avoid object hydration for operations in the store. Moreover, it is possible to leverage database statistical structures such as histograms to estimate the number of qualifying objects without having to examine each object.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07480646",
	"publication_date": "2009-01-20",
	"application_number": "10692350",
	"application_date": "2003-10-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Type path indexing",
	"summary": "",
	"abstract": "Efficient hierarchical searching is based on object type. By pre-computing additional information and storing it in a fast-lookup structure, it is possible to quickly identify objects that satisfy an object retrieval request. Furthermore, it is also possible to use this technique to avoid object hydration for operations in the store. Moreover, it is possible to leverage database statistical structures such as histograms to estimate the number of qualifying objects without having to examine each object.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07516143",
	"publication_date": "2009-04-07",
	"application_number": "11244021",
	"application_date": "2005-10-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Type system",
	"summary": "",
	"abstract": "A data structure and application programming interface for creating and manipulating object model artifacts within a meta-model is provided. The data structure may include higher level abstractions of the type system to provide a set of services to implement software design tools and editors.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07590969",
	"publication_date": "2009-09-15",
	"application_number": "10824253",
	"application_date": "2004-04-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Unified device power management engine",
	"summary": "",
	"abstract": "The present invention provides a unified layer for Plug and Play (PnP) components and power management components while relieving device drivers from system-level complexities associated with implementing PnP and/or power management functionality. The layer operates at a level between low-level device drivers and more complex operating system tasks. The subject invention simplifies designing device drivers having proper power management support by creating an infrastructure that allows a device driver to operate within a driver framework or model and without having to process Plug-and-Play or Power Management I/O Request Packets (IRPs) directly.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07577856",
	"publication_date": "2009-08-18",
	"application_number": "10953942",
	"application_date": "2004-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Universal graphic adapter for interfacing with UGA hardware via UGA virtual machine and means for abstracting details of the UGA hardware",
	"summary": "",
	"abstract": "The subject invention relates to a Universal Graphics Adapter (UGA) that is a hardware-independent design that encapsulates and abstracts low-level graphics hardware in a standard manner through firmware. UGA is a firmware standard, intended to wrap existing or planned hardware, including VGA. UGA does not require the use of real-mode assembly language, direct hardware register, or frame buffer access to program, thus providing advantages over conventional systems. UGA supports basic drawing operations, continuous display modes, and power management. As a firmware-based standard, UGA facilitates updating a system to support both evolving and new hardware features.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07562161",
	"publication_date": "2009-07-14",
	"application_number": "11079814",
	"application_date": "2005-03-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Universal naming scheme for peer-to-peer resources",
	"summary": "",
	"abstract": "Peer devices register with a resource locator service so that the peer devices can be uniquely identified in a networking environment. An addressing scheme addresses a peer resource in the networking environment based on the unique identifier of a peer device that is a master publisher of the resource. Based on the addressing scheme, the resource locator service can track the location of the master publisher of the resource as well as additional locations of peer devices that have cached the resource and made it available. In various embodiments, the resource locator service can service requests for peer resources by providing a list of locations where the resource is expected to be available or, in the case of non-compatible requester, provide access to the resource itself.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07562149",
	"publication_date": "2009-07-14",
	"application_number": "11066366",
	"application_date": "2005-02-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Universal naming scheme for peer-to-peer resources",
	"summary": "",
	"abstract": "Peer devices register with a resource locator service so that the peer devices can be uniquely identified in a networking environment. An addressing scheme addresses a peer resource in the networking environment based on the unique identifier of a peer device that is a master publisher of the resource. Based on the addressing scheme, the resource locator service can track the location of the master publisher of the resource as well as additional locations of peer devices that have cached the resource and made it available. In various embodiments, the resource locator service can service requests for peer resources by providing a list of locations where the resource is expected to be available or, in the case of non-compatible requester, provide access to the resource itself.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07536465",
	"publication_date": "2009-05-19",
	"application_number": "11187292",
	"application_date": "2005-07-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "User interface for facilitating performance analysis for processing",
	"summary": "",
	"abstract": "User interfaces for facilitating performance analysis for processing include a first window and a second window. The first window identifies events that have been captured during processing of a set of commands by a processing unit, such as during the drawing of a video frame by a graphics processing unit. The second window includes information regarding the processing of the set of commands at different chronological points during processing, such as showing how the frame appears at different chronological points while being drawn.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07533371",
	"publication_date": "2009-05-12",
	"application_number": "10667951",
	"application_date": "2003-09-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "User interface incorporating graphically based management of controls",
	"summary": "",
	"abstract": "Methods are disclosed for selectively loading one control at a time based on the location of a selection component relative to a graphical representation of a user interface.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07546542",
	"publication_date": "2009-06-09",
	"application_number": "10807367",
	"application_date": "2004-03-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Using a flexible rights template to obtain a signed rights label (SRL) for digital content in a rights management system",
	"summary": "",
	"abstract": "Content is encrypted according to a content key (CK) to result in (CK(content)) and the content key (CK) is protected according to a public key for a license server (PU-RM). Rights data is retrieved from a rights template to be associated with the content, and rules for modifying the retrieved rights data are also retrieved from the retrieved rights template. The retrieved rights data from the rights template is modified according to the rules, and the rights data and the protected content key (CK)) are submitted as a rights label to the license server for signing thereby. The license server thus validates the rights label and, if valid, creates a digital signature based on a private key (PR-RM) corresponding to (PU-RM) and based at least in part on the rights data to result in a signed rights label (SRL), and returns the SRL.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07502945",
	"publication_date": "2009-03-10",
	"application_number": "10793997",
	"application_date": "2004-03-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Using a rights template to obtain a signed rights label (SRL) for digital content in a digital rights management system",
	"summary": "",
	"abstract": "Content is encrypted according to a content key (CK) ((CK(content))), (CK) is protected according to a license server public key (PU-DRM), and rights data associated with the content is retrieved from a rights template and protected according to (PU-DRM). The protected items and a digital signature from the rights template are submitted as a rights label to the license server for signing. The license server verifies the rights template signature, and if such signature verifies signs the rights label to result in a signed rights label (SRL), and returns same. The SRL is concatenated with (CK(content)) and both are distributed to a user. To render the content, the user submits the SRL to the license server to request a license.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07549060",
	"publication_date": "2009-06-16",
	"application_number": "10185278",
	"application_date": "2002-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Using source-channel models for word segmentation",
	"summary": "",
	"abstract": "A method and apparatus for segmenting text is provided that identifies a sequence of entity types from a sequence of characters and thereby identifies a segmentation for the sequence of characters. Under the invention, the sequence of entity types is identified using probabilistic models that describe the likelihood of a sequence of entities and the likelihood of sequences of characters given particular entities. Under one aspect of the invention, organization name entities are identified from a first sequence of identified entities to form a final sequence of identified entities.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07493251",
	"publication_date": "2009-02-17",
	"application_number": "10448644",
	"application_date": "2003-05-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Utility object for specialized data entry",
	"summary": "",
	"abstract": "An object is associated with one or more controls in a software application. An object associated with a control determines the operation of the data entry user interface when the data entry user interface is being employed to enter data into that control. More particularly, the object may communicate interface characteristics to a component that is responsible for providing the user interface to the user. Such a component may be, for example, a shared software module that renders the user interface on a display, receives input data from the user through the user interface, and routes the entered data to a designated destination. Alternately, the object itself may create a user interface having the specified characteristics.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07490296",
	"publication_date": "2009-02-10",
	"application_number": "10427159",
	"application_date": "2003-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Versions and workspaces in an object repository",
	"summary": "",
	"abstract": "Maintaining versions and workspaces in an object repository is disclosed. The system provides an efficient way to manage versions of objects by only copying objects when absolutely necessary, i.e. when a property value in a particular object has changed. In addition, the system provides a mechanism to control whether or not relationships are propagated to successor versions of an object. A further aspect of the system is that resolution of objects during a relationship traversal can be customized depending on whether or not an application accessing the objects is version-aware. If the application is not version aware, a means for resolving the relationship to a particular object is provided. A still further aspect of the system is that merge behavior is parameterized. When two versions of an object are merged, flags control how conflicts in property values and relationship contents are managed. Finally, the system provides a workspace that acts as a virtual repository session and provides workspace context and scope to repository objects.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07593958",
	"publication_date": "2009-09-22",
	"application_number": "11056800",
	"application_date": "2005-02-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Video enhancement",
	"summary": "",
	"abstract": "Video enhancement enable visually-apparent improvements to image frames of a video sequence. In an example implementation, stabilized or other image frames include missing image areas that are filled using a video completion technique. The missing image areas are filled in using a video completion technique that involves motion inpainting. Local motion data of a motion map from known image areas is propagated into the missing image areas to produce an extended motion map. Pixels of the missing image areas are then filled in by warping pixels from neighboring image frames into the missing image areas responsive to the extended motion map. In another example implementation, video deblurring reduces the blurriness of a current image frame. Sharper image pixels from neighboring image frames are transferred so as to replace blurry pixels of the current image frame. In yet another example implementation, video completion with motion inpainting enables amelioration of visual artifacts.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07548659",
	"publication_date": "2009-06-16",
	"application_number": "11128951",
	"application_date": "2005-05-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Video memory management",
	"summary": "",
	"abstract": "A video memory manager manages and virtualizes memory so that an application or multiple applications can utilize both system memory and local video memory in processing graphics. The video memory manager allocates memory in either the system memory or the local video memory as appropriate. The video memory manager may also manage the system memory accessible to the graphics processing unit via an aperture of the graphics processing unit. The video memory manager may evict memory from the local video memory as appropriate, thereby freeing a portion of local video memory use by other applications. In this manner, a graphics processing unit and its local video memory may be more readily shared by multiple applications.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07528838",
	"publication_date": "2009-05-05",
	"application_number": "11089856",
	"application_date": "2005-03-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Visual expression of a state of an application window",
	"summary": "",
	"abstract": "A method for changing a visual state of an application window representation is described. The method includes steps of displaying an application window representation with a default visual state, and changing the default visual state of the application window representation to one of at least two different visual states. The entirety of the application window representation or a portion of the application window representation may have a change to its visual state. The visual states may be a change in color, pattern, and/or texture. A group of visual states changes may correlate to an animation. Visual states may be defined by a default or user configurable. Visual states may change over time or in response to an event. Visual states may change back to a default state when the application window representation is accessed.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07577918",
	"publication_date": "2009-08-18",
	"application_number": "11181901",
	"application_date": "2005-07-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Vocabulary-independent search of spontaneous speech",
	"summary": "",
	"abstract": "A method of identifying a location of a query string in an audio signal is provided. Under the method, a segment of the audio signal is selected. A score for a query string in the segment of the audio signal is determined by determining the product of probabilities of overlapping sequences of tokens. The score is then used to decide if the segment of the audio signal is likely to contain the query string.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07584098",
	"publication_date": "2009-09-01",
	"application_number": "10998451",
	"application_date": "2004-11-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Volume configuration data administration",
	"summary": "",
	"abstract": "Volume configuration data management systems and methods are described. A logical volume provider maintains an epoch number on each of the extents comprising a volume. Upon each change in the configuration of the volume, the epoch number on each of the currently online extents is updated. When a volume is discovered and a request is made to bring the volume online, the logical volume provider can compare the epoch numbers on the extents to determine if the volume data is consistent across each of the extents, or if an extent contains stale data due to a transitory outage.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07584224",
	"publication_date": "2009-09-01",
	"application_number": "10824068",
	"application_date": "2004-04-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web address converter for dynamic web pages",
	"summary": "",
	"abstract": "A Web address converter helps dynamic Web sites get the attention of spiders of Internet search engines. With the Web address converter, requests from Web browsers using static addresses access corresponding dynamic Web pages and requests from search engines generate an instance of a Web page having links with static addresses pointing to corresponding dynamic Web pages. The Web address converter performs both Dynamic-to-Static (D-to-S) address conversion and Static-to-Dynamic (S-to-D) address conversion. D-to-S address conversion is done when generating a spider-friendly main page for a spider of a search engine to crawl. S-to-D address conversion is used when a browser uses a static address to access a corresponding dynamic Web page. The static address that the browser uses was originally created when the spider-friendly main page was generated.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07512710",
	"publication_date": "2009-03-31",
	"application_number": "11614647",
	"application_date": "2006-12-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web server architecture",
	"summary": "",
	"abstract": "An improved web server design includes a kernel-based listener service that is configured by a user-mode based administrative process. When a web request is received by the listener service it is placed in a queue associated with an application pool having one or more user-mode web applications configured to process received web requests. The web applications are selectively started and stopped by the administrative process.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07594230",
	"publication_date": "2009-09-22",
	"application_number": "10377175",
	"application_date": "2003-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web services processing using MAPI compliant mail applications",
	"summary": "",
	"abstract": "The present invention provides Web Services over a mail transport. In particular, the present invention sends Web Service messages using MAPI (Messaging Application Program Interface) mail applications in order to support offline communications and extended processing time of service requests without creating additional infrastructure for such message exchanges. A custom layer transport is configured to: identify that a Web Service message is to be sent across a mail transport; use the MAPI application to generate a mail message; and include the Web Service message and other identifiers within the mail message. The message is then sent to the outgoing mailbox of the MAPI application for subsequent delivery to an endpoint. Upon receiving the mail message, the endpoint can extract the Web Service message and process it accordingly. Other example embodiments also provide for requesting NPDL (Network Protocol Description Language) data structures (e.g., WSDL documents) by a similar process.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07600048",
	"publication_date": "2009-10-06",
	"application_number": "11072384",
	"application_date": "2005-03-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "What-if analysis for network diagnostics",
	"summary": "",
	"abstract": "A network troubleshooting framework is described. In an implementation, a method includes generating a first estimation of network performance by a simulator based on network settings obtained from a network, estimating the new performance under an alternative setting by providing the alternative setting to the network simulation and observing the simulation output, repeating the procedure for other alternative settings, and suggesting the alternative setting that improves network performance.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07606165",
	"publication_date": "2009-10-20",
	"application_number": "10880960",
	"application_date": "2004-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Window information switching system",
	"summary": "",
	"abstract": "A method for displaying at least one visualization of windows on a display screen is described. The method includes steps of receiving an input corresponding to a request to access visualizations of windows for a plurality of windows, and for each window of the plurality of windows, displaying a visualization of at least a portion of the content of the window in an area separately defined from the plurality of windows, wherein the at least a portion of the content includes dynamic video content. Another method provides for grouping and ordering the visualizations when displayed. Another method allows for display of visualizations related to child and/or parent windows.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07478326",
	"publication_date": "2009-01-13",
	"application_number": "11036610",
	"application_date": "2005-01-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Word training interface",
	"summary": "",
	"abstract": "A method for exposing speech engine features to one or more independent applications wherein the features relate to word training and/or wherein the method optionally exposes the speech engine features without invoking a user interface. A word training interface to expose speech engine features to one or more independent applications wherein the interface is optionally an application programming interface.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07587317",
	"publication_date": "2009-09-08",
	"application_number": "10076825",
	"application_date": "2002-02-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "XML schema for binding data",
	"summary": "",
	"abstract": "An XML schema is provided allowing data to be stored in a separate location from the presentation surface of an application. By way of the schema, users of the application can establish links (or bindings) between the contents of the data and the presentation surface as part of an XML document format. Methods, systems, and computer-readable medium are described implementing the schema.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07617234",
	"publication_date": "2009-11-10",
	"application_number": "11067383",
	"application_date": "2005-02-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "XML serialization and deserialization",
	"summary": "",
	"abstract": "A data structure includes means for representing a programming type and means for representing an attribute. The specified attribute indicates that an instance of the programming type is to be serialized with XML.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07640495",
	"publication_date": "2009-12-29",
	"application_number": "11008838",
	"application_date": "2004-12-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for parsing text using mutual information",
	"summary": "",
	"abstract": "A method and parser are provided that generate a score for a node identified during a parse of a text segment. The score is based on a mutual information score that measures the mutual information between a phrase level for the node and a word class of at least one word in the text segment.",
	"url": null,
	"owner": "Microsoft Corporation, Inc.",
	"publication_number": "07475006",
	"publication_date": "2009-01-06",
	"application_number": "09903055",
	"application_date": "2001-07-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Technique for project partitioning in a cluster of servers",
	"summary": "",
	"abstract": "A technique for project partitioning in a cluster of servers is disclosed. In one particular exemplary embodiment, the technique may be realized as a method for partitioning a plurality of projects among a cluster of servers. The method may comprise determining a status of project partition among the cluster of servers. The method may also comprise generating a partition plan for re-partitioning the plurality of projects among the cluster of servers based at least in part on the status and a partition policy, wherein the partition policy comprises one or more rules selected from a group consisting of a user specified project-server association rule, a weighted balancing rule, and a project redundancy rule. The method may further comprise communicating the partition plan to each of the cluster of servers. The method may additionally comprise causing the plurality of projects to be re-partitioned among the cluster of servers based on the partition plan.",
	"url": null,
	"owner": "Microstrategy, Inc.",
	"publication_number": "07516181",
	"publication_date": "2009-04-07",
	"application_number": "11052469",
	"application_date": "2005-02-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network-based sweepstakes systems and method",
	"summary": "",
	"abstract": "A system and method for automatically enrolling users of a website or other network-based service in sweepstakes. A user of a user computer system connects to a host computer system hosting a website or other network-based service and is awarded points for accessing features of the website or service. The points are displayed in real-time on the user's computer and transmitted to a database server, which maintains the user's point totals. The user is then automatically given a number of entries in a sweepstakes based on the number of points he or she has been awarded. Users may also be awarded points for accessing features of websites or services of third-party host computer systems.",
	"url": null,
	"owner": "Mindspark Interactive Network, Inc.",
	"publication_number": "07634424",
	"publication_date": "2009-12-15",
	"application_number": "09412013",
	"application_date": "1999-10-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enhanced video metrology tool",
	"summary": "",
	"abstract": "A system and method for tool enhancements are provided which allow users to utilize video tools in a controlled manner. The video tools balance a minimal amount of cursor positioning and u201cmouse clicksu201d against a level of video tool u201ccustomizationu201d control desired by a user when applying the video tools. Tool construction methods using multiple mouse clicks are provided as an alternative to using drag-and-draw and one-click tools. Multi-click-plus tools give more specific information and provide a precise way to rapidly create customized tools.",
	"url": null,
	"owner": "Mitutoyo Corporation",
	"publication_number": "07627162",
	"publication_date": "2009-12-01",
	"application_number": "11185561",
	"application_date": "2005-07-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Fast multiple template matching using a shared correlation map",
	"summary": "",
	"abstract": "A method is provided that increases throughput and decreases the memory requirements for matching multiple templates in image. The method includes determining a set of inter-template early elimination values that characterize the degree of matching between various templates and the image, at various locations in the image. A later-analyzed template may be rejected as a potential match at a location in the image based on comparing a value characterizing its degree of match at that location to an inter-template early elimination value corresponding to the degree of match of an earlier-analyzed template at that location. The compared values may be determined by different sets of operations, and may be normalized such that they are properly comparable. The inter-template early elimination conditions may be stored in a shared correlation map. The shared correlation map may be analyzed to determine the matching locations for multiple templates in the image.",
	"url": null,
	"owner": "Mitutoyo Corporation",
	"publication_number": "07636478",
	"publication_date": "2009-12-22",
	"application_number": "11461418",
	"application_date": "2006-07-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multi-region autofocus tool and mode",
	"summary": "",
	"abstract": "A system and method are provided for a u201cmulti-regionu201d autofocus video tool-type or mode within a machine vision inspection system. The user may efficiently define multiple regions of interest that are grouped as a u201cmulti-regionu201d set. The autofocus operations for the multi-region set are defined with a shared set of autofocus parameters. The same set of autofocus images may be used for the autofocus operations of the multi-region set. The user may conveniently also define individual autofocus regions of interest, defined with individual autofocus parameters, within the same field of view. Various user interface features allow a user to conveniently change between the individual autofocus tool-type or mode and the multi-region autofocus tool-type or mode.",
	"url": null,
	"owner": "Mitutoyo Corporation",
	"publication_number": "07570795",
	"publication_date": "2009-08-04",
	"application_number": "11489030",
	"application_date": "2006-07-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Smear-limit based system and method for controlling vision systems for consistently accurate and high-speed inspection",
	"summary": "",
	"abstract": "A machine vision inspection system and method for generating a workpiece image acquisition/inspection program, which can be shared by different machine vision systems having different hardware capabilities. Each system includes a movable stage for scanning and measuring selected workpiece features, and preferably includes strobe lighting to control the effective exposure time of the workpiece image. The program provides for the determination of various image acquisition parameters, such as the stage velocity, strobe light power, strobe exposure time, etc., based on a functional limit related to image smear. Thus, the program automatically adapts to any specific system, by allowing determination of optimal image acquisition parameters for that system based on the functional limit. Accordingly, the same program is usable on different systems to consistently provide a desired level of accuracy as well as optimum or near-optimum throughput, regardless of which vision system is used.",
	"url": null,
	"owner": "Mitutoyo Corporation",
	"publication_number": "07499584",
	"publication_date": "2009-03-03",
	"application_number": "10971504",
	"application_date": "2004-10-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for programming interrupting operations during moving image acquisition sequences in a vision system",
	"summary": "",
	"abstract": "Methods and systems of part programming for machine vision inspection systems are provided, which permit a user to readily define multiple image acquisition operations interspersed with associated image analysis and/or inspection operations during learn mode operations and in the resulting part program image acquisition operations for at least some of the images are arranged into a continuous motion image acquisition sequence that acquires images and stores images in a u201cnon-interspersedu201d manner in order to increase the throughput of the machine vision inspection system. Image analysis/inspection operations associated with the stored images are performed subsequently by recalling the store images. The programming systems and methods disclosed herein may operate automatically to facilitate rapid programming for a variety of workpieces by relatively unskilled users, wherein the resulting programs include continuous motion image acquisition sequences.",
	"url": null,
	"owner": "Mitutoyo Corporation",
	"publication_number": "07590276",
	"publication_date": "2009-09-15",
	"application_number": "11018155",
	"application_date": "2004-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Investment database application",
	"summary": "",
	"abstract": "An investment database application is configured to perform a download process and an upload process. During the download process, the investment database application creates a spreadsheet out of a customized spreadsheet template, receives XML data from a database on a server system, converts the XML data, loads the spreadsheet with the converted data, and saves the populated spreadsheet template to a location specified by the user. During the upload process, the investment database application may convert a populated spreadsheet template created during the download process into an XML formatted file and transmit the XML file to a secure server system that loads the XML data into a Relational Database Management System (RDMS).",
	"url": null,
	"owner": "Morgan Stanley",
	"publication_number": "07533118",
	"publication_date": "2009-05-12",
	"application_number": "11020405",
	"application_date": "2004-12-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for memory address generation using dynamic stream descriptors",
	"summary": "",
	"abstract": "Memory addresses for a data stream are generated by a stream parameter generator that calculates a set of stream parameters for each of a number of memory access patterns and a regional address generator that calculates a sequence of addresses of a memory access pattern from a corresponding set of stream parameters. The stream parameters, which may include START_ADDRESS, STRIDE, SKIP and SPAN values for example, are updated in accordance with an update( ) function. The update( ) function, which may be defined by a user, defines how stream parameters change from one memory access pattern to the next. In one application, the update( ) function describes how the position, shape and/or size of a region of interest in an image changes or is expected to change.",
	"url": null,
	"owner": "Motorola, Inc.",
	"publication_number": "07634633",
	"publication_date": "2009-12-15",
	"application_number": "11565198",
	"application_date": "2006-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing data storage through a device management tree using non-device management agents",
	"summary": "",
	"abstract": "A client device () of a communication system () includes, for example, a processor () programmed to include a device management tree interface () that provides access for a plurality of non device management agents () and at least one device management agent () to a device management engine () that accesses a corresponding device management tree (). The processor updates data, for the plurality of non device management agents and at least one device management agent, via the device management engine () and corresponding device management tree (), through the device management tree interface ().",
	"url": null,
	"owner": "Motorola, Inc.",
	"publication_number": "07499950",
	"publication_date": "2009-03-03",
	"application_number": "11024895",
	"application_date": "2004-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System to improve handover behavior",
	"summary": "",
	"abstract": "A system, computer readable medium, mobile subscriber device and method determine that the device (), operating on a first communications system is detecting a triggering event, which may be the detection of a wireless local area network border cell () or a degradation in signal quality. The device () then initiates a registration sequence with a second wireless communication system if the device () has detected the triggering event, determines the speed and/or displacement of the device (), and conducts any present and subsequent calls via the second wireless communication system if the speed and/or displacement of the device exceeds a predetermined threshold. The registration sequence may be aborted if at least one of the speed and displacement of the device () does not exceed predetermined thresholds. Movement of the device () may be determined by an accelerometer () or GPS chipset.",
	"url": null,
	"owner": "Motorola, Inc.",
	"publication_number": "07536186",
	"publication_date": "2009-05-19",
	"application_number": "10649999",
	"application_date": "2003-08-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Adapting a plurality of measurement cartridges using cartridge controllers",
	"summary": "",
	"abstract": "System and method for controlling cartridges to perform industrial operation(s). The system may include cartridge controllers coupled to the cartridges, timing and data routing logic coupled to the cartridge controllers, and controlling software coupled to the timing and data routing logic. Each of the cartridge controllers may be operable to detect and establish communications with a respective cartridge based on information retrieved from the cartridge, and adapt input/output signals of the respective cartridge according to instructions specified by the timing and data routing logic. The timing and data routing logic may be operable to synthesize data stream(s) from the adapted input/output signals, wherein each of the data stream(s) includes a respective subset of the adapted input/output signals received from a corresponding subset of the cartridges, and transmit the data stream(s) to the controlling software. The synthesized data stream(s) may appear as corresponding device(s) to the controlling software.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07509445",
	"publication_date": "2009-03-24",
	"application_number": "11403167",
	"application_date": "2006-04-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatically configuring a graphical user interface element to bind to a graphical program",
	"summary": "",
	"abstract": "System and methods for configuring communication between a graphical program element (GPE) and a graphical user interface element (GUIE), where the GPE and the GUIE are from different respective graphical program development environments. In response to receiving user input specifying the GPE and GUIE, and a data source/data target association between them, at least one of the GUIE and the GPE are programmatically modified to configure communication between the GPE and the GUIE. The graphical program is then executed, where either the GPE performs a function to generate data, provides the data to the GUIE, and the GUIE displays the received data; or, the GUIE element receives data from the user, provides the data to the GPE, and the GPE receives the data and performs a function based on the data. The user input may be performed via drag-and-drop user interface technique, line-drawing, command-line, menu, dialog box, or wizard, etc.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07624375",
	"publication_date": "2009-11-24",
	"application_number": "10460147",
	"application_date": "2003-06-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Configuring programmable hardware on a device to communicate with cards based on ID information of the cards",
	"summary": "",
	"abstract": "System and method for measurement, DAQ, and control operations which uses small form-factor measurement modules or cartridges with a re-configurable carrier unit, sensors, and a computer system to provide modular, efficient, cost-effective measurement solutions. The measurement module includes measurement circuitry, e.g., signal conditioner and/or signal conversion circuitry, and interface circuitry for communicating with the carrier unit. The module communicates interface information to the carrier unit, which informs the computer system how to program or configure a functional unit on the carrier unit to implement the communicated interface, or sends the information directly to the computer system. The computer system programs the carrier unit with the interface, and the programmed carrier unit and measurement module together function as a DAQ, measurement, and/or control device. The carrier unit may receive multiple cartridges, each having a respective interface protocol, where the carrier unit is configurable to support the respective protocols sequentially and/or in parallel.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07512512",
	"publication_date": "2009-03-31",
	"application_number": "11759095",
	"application_date": "2007-06-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Controlling modular measurement cartridges that convey interface information with cartridge controllers",
	"summary": "",
	"abstract": "A cartridge controller, usable to provide an interface between a cartridge and a controller for performing industrial operations using the cartridge. The cartridge controller may include interface circuitry, operable to provide an interface between a cartridge coupled to the cartridge controller and the cartridge controller, and detection circuitry coupled to the interface circuitry, operable to detect coupling of the cartridge to the cartridge controller via the interface circuitry. The interface circuitry may be further operable to query the cartridge for a cartridge type of the cartridge, determine a communication protocol required to communicate with the cartridge from a plurality of communication protocols based on the cartridge type, and establish communications with the cartridge based on the determined communication protocol. The cartridge controller may also be implemented with one or more modular blocks for providing the interface between the controller coupled to the cartridge controller and the cartridge.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07478006",
	"publication_date": "2009-01-13",
	"application_number": "11402446",
	"application_date": "2006-04-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Disabling and conditionally compiling graphical code in a graphical program",
	"summary": "",
	"abstract": "One embodiment of the present invention relates to disabling graphical code in a graphical program. A first portion of the graphical program may be disabled, which may include preventing the first portion of the graphical program from being compiled and/or preventing the first portion of the graphical program from being executed. Another embodiment of the invention relates to conditionally compiling graphical code in a graphical program. A first portion of the graphical program may be compiled if one or more associated conditions are true, or may not be compiled otherwise.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07543281",
	"publication_date": "2009-06-02",
	"application_number": "10200560",
	"application_date": "2002-07-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Displaying routing information for a measurement system",
	"summary": "",
	"abstract": "Computer-implemented system and method for presenting routing information in a measurement system. A meta-routing tool receives user input specifying a device, then retrieves a topography description for the device indicating connectivity between a plurality of components in the device, e.g., from memory or from a server coupled to the computer via a network. The tool then determines routability information for the device based on the topography description, e.g., by walking the topography, and displays the routability information, which is then useable to determine routing for the measurement system. The routability information includes possible routes through the device, and may also indicate potential side effects for one or more of the routes, e.g., sub-systems used by the routes. The tool may receive user input indicating one of the possible routes, and display a component-wise path used by the indicated route, as well as any sub-systems used by the indicated route.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07603478",
	"publication_date": "2009-10-13",
	"application_number": "10232151",
	"application_date": "2002-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generating a data stream from cartridge controllers using a plurality of measurement cartridges",
	"summary": "",
	"abstract": "System and method for controlling cartridges to perform industrial operation(s). The system may include cartridge controllers coupled to the cartridges, timing and data routing logic coupled to the cartridge controllers, and controlling software coupled to the timing and data routing logic. Each of the cartridge controllers may be operable to detect and establish communications with a respective cartridge based on information retrieved from the cartridge, and adapt input/output signals of the respective cartridge according to instructions specified by the timing and data routing logic. The timing and data routing logic may be operable to synthesize data stream(s) from the adapted input/output signals, wherein each of the data stream(s) includes a respective subset of the adapted input/output signals received from a corresponding subset of the cartridges, and transmit the data stream(s) to the controlling software. The synthesized data stream(s) may appear as corresponding device(s) to the controlling software.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07512725",
	"publication_date": "2009-03-31",
	"application_number": "11684749",
	"application_date": "2007-03-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Graphical program nodes for implementing a measurement state model",
	"summary": "",
	"abstract": "Graphical program node using a state model, e.g., a task state model, to perform measurement tasks. The node is executable in a graphical program to perform a task operation requiring measurement resources and/or the task to be in a first state. The node is executable to determine state transitions for the resources and/or task from a current state to the first state, perform the determined state transitions to put the resources and/or task in the first state, transitioning through zero or more intermediate states, and perform the operation. The node may be a control node, receiving input specifying a transition, then performing the transition; start node, transitioning the resources and/or task to an Executing state; read node, reading data from a DAQ device; write node, writing data to a signal-generating device, then transitioning the resources and/or task to the Executing state; or stop node, terminating an operation and transitioning the resources and/or task to a specified state.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07512931",
	"publication_date": "2009-03-31",
	"application_number": "10261023",
	"application_date": "2002-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Graphical program which executes a timed loop",
	"summary": "",
	"abstract": "A system and method for creating a graphical program operable to execute a timed loop. A loop may be displayed in the graphical program and configured with timing information in response to user input. The timing information may include an execution period which specifies a desired period at which the loop should execute during execution of the graphical program. The timing information may also include information such as a timing source, offset, and priority. During execution of the graphical program, the execution period of the loop may control the rate at which the loop executes.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07574690",
	"publication_date": "2009-08-11",
	"application_number": "10892829",
	"application_date": "2004-07-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Graphical user interface for easily configuring measurement applications",
	"summary": "",
	"abstract": "System and method for using a graphical user interface (GUI) to generate a measurement task specification (MTS) for performing a measurement task. The measurement task includes measurement and/or signal generation. A measurement task specifier presents a GUI which guides a user in specifying the measurement task. The GUI presents a plurality of GUI elements, e.g., panels, for specifying a plurality of parameters for the measurement task, including measurement type, devices, channels, timing, and/or triggering. The GUI receives user input indicating values for the parameters, and may provide default values for at least some of the parameters. The GUI stores the parameter values in a memory, analyzes the parameter values, and generates the MTS in response to the analyzing. The MTS is then useable to produce a program which implements the measurement task. The specifier may programmatically generate the program, e.g., a graphical program, which is executable to perform the task.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07499824",
	"publication_date": "2009-03-03",
	"application_number": "11566107",
	"application_date": "2006-12-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Implementation of packet-based communications in a reconfigurable hardware element",
	"summary": "",
	"abstract": "In some embodiments, a user may select an elemental function such as read, write, or configuration from a graphical programming environment. A file may be created that instantiates functionality into a programmable hardware element to allow it to send a command across a serial protocol to peripheral interface circuitry and ultimately to peripheral chips (e.g., network chips on a CAN). The elemental node concept may be generic to any network chip because the node may contain only the general data of a packet (e.g., command type, value of data bytes, etc). The actual interface to a network chip may be handled inside the peripheral interface circuitry. The peripheral interface circuitry may have the details of the network chip in which it interfaces and may abstract details of the network chip from the target programmable hardware element through the serial protocol.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07594226",
	"publication_date": "2009-09-22",
	"application_number": "11203805",
	"application_date": "2005-08-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Installing software using programmatic component dependency analysis",
	"summary": "",
	"abstract": "System and method for installing software using component dependency analysis. A list indicating an initial set of sub-installers is received, each sub-installer including respective software components and installation software for deploying the components onto a target system. The initial set of sub-installers includes one or more user-files sub-installers and one or more supporting sub-installers. The initial set of sub-installers is programmatically analyzed (e.g., re dependencies) to determine additional sub-installers. An application system dependency file is generated based on the analysis, and an application system installer generated based on the sub-installers and the application system dependency file. The installer is executed to programmatically deploy the application system onto the target system, where executing includes programmatically analyzing the target system, application system dependency file, and user-specified deployment options (entered via a user-interface) to determine an installation set of sub-installers, each of which is executed to deploy respective components onto the target system.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07478385",
	"publication_date": "2009-01-13",
	"application_number": "10461206",
	"application_date": "2003-06-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Measurement system with modular measurement modules that convey interface information",
	"summary": "",
	"abstract": "System and method for measurement, DAQ, and control operations which uses small form-factor measurement modules or cartridges with a re-configurable carrier unit, sensors, and a computer system to provide modular, efficient, cost-effective measurement solutions. The measurement module includes measurement circuitry, e.g., signal conditioner and/or signal conversion circuitry, and interface circuitry for communicating with the carrier unit. The module communicates interface information to the carrier unit, which informs the computer system how to program or configure a functional unit on the carrier unit to implement the communicated interface, or sends the information directly to the computer system. The computer system programs the carrier unit with the interface, and the programmed carrier unit and measurement module together function as a DAQ, measurement, and/or control device. The carrier unit may receive multiple cartridges, each having a respective interface protocol, where the carrier unit is configurable to support the respective protocols sequentially and/or in parallel.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07542867",
	"publication_date": "2009-06-02",
	"application_number": "10195051",
	"application_date": "2002-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Programmatically analyzing and modifying a remote graphical program via a network",
	"summary": "",
	"abstract": "A system and method for programmatically analyzing and modifying a graphical program via a network. The graphical program may be stored on a memory medium at a first location. A program may be executed on a computer system at a second location. The computer system at the second location may be coupled via a network to the memory medium at the first location or may be coupled to a computer system or device which includes or has access to the memory medium at the first location. The program on the computer system at the second location may execute to programmatically analyze the graphical program via the network. In one embodiment the program on the computer system at the second location may also execute to programmatically modify the graphical program via the network, based on the programmatic analysis of the graphical program.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07480906",
	"publication_date": "2009-01-20",
	"application_number": "10382118",
	"application_date": "2003-03-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Solver for simulating a system in real time on a programmable hardware element",
	"summary": "",
	"abstract": "A method for performing a simulation of a system. The system includes an FPGA that is configured to implement simulation logic, such as a generic solver. For example, the FPGA device may implement a generic time domain solver or a generic frequency domain solver. The FPGA device is also configured with information representing a system model of the system under simulation. The system also includes input hardware for providing input signals for the simulation to the FPGA device and output hardware for receiving output signals computed by the simulation from the FPGA device. The system may be reconfigured to simulate different systems by changing the system model, without requiring the simulation logic (e.g., the generic solver) to be changed.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07565280",
	"publication_date": "2009-07-21",
	"application_number": "11356711",
	"application_date": "2006-02-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Test executive with external process isolation for user code modules",
	"summary": "",
	"abstract": "A system and method for isolating execution of user-supplied code modules that are called by steps of a test executive sequence. The test executive sequence may first be created by including a plurality of test executive steps in the test executive sequence and configuring at least a subset of the steps to call user-supplied code modules. The test executive sequence may then be executed on a host computer under control of a test executive engine. For each step that calls a user-supplied code module, the test executive engine may invoke the user-supplied code module for execution in a separate process other than the process in which the test executive engine executes.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07480826",
	"publication_date": "2009-01-20",
	"application_number": "11101293",
	"application_date": "2005-04-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Variable abstraction",
	"summary": "",
	"abstract": "System and method for creating, configuring, representing, and using variables in programs. A graphical user interface (GUI) may be displayed in response to user input requesting creation and/or configuration of a variable for use in or comprised in one or more programs, e.g., on various devices. User input is received to the GUI configuring attributes of the variable, including: name, data type, and/or scope (e.g., local, global, or network). The configured attributes are stored and optionally displayed, e.g., in a resource tree, and the variable in each of the programs updated in accordance with the configured attributes. When at least one of the programs is incompatible with the configured variable, an error condition may be indicated, e.g., by providing information relating to portions of the program that are incompatible with the configured variable. The program may be modified in response to user input for compatibility with the configured variable.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07593944",
	"publication_date": "2009-09-22",
	"application_number": "11037575",
	"application_date": "2005-01-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interactive system and method",
	"summary": "",
	"abstract": "An interactive system for interacting with a device in a mixed reality environment, the system comprising an object having at least two surfaces, each surface having a marker, an image capturing device to capture images of the object in a first scene, and a microprocessor configured to track the position and orientation of the object in the first scene by identifying a marker. In addition, the microprocessor is configured to respond to manipulation of the object causes the device to perform an associated operation.",
	"url": null,
	"owner": "National University of Singapore",
	"publication_number": "07474318",
	"publication_date": "2009-01-06",
	"application_number": "10856177",
	"application_date": "2004-05-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for providing secure access",
	"summary": "",
	"abstract": "A system implementing secure access to management information, the system () comprising: an open management service () including an open management application programming interface (); a managed object () generating management information; and an object interface () for (i) receiving management information from the object, (ii) converting the received management information into a format accessible to the open management service, and (iii) providing the management information to the open management service () in response to a valid request from a client (). The system further comprises an authorization component () for verifying an access code () associated with the request to determine if the client () is authorized to issue the request.",
	"url": null,
	"owner": "NCR Corporation",
	"publication_number": "07546300",
	"publication_date": "2009-06-09",
	"application_number": "11159082",
	"application_date": "2005-06-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer system for enabling a wireless interface device to selectively establish a communication link with a user selectable remote computer",
	"summary": "",
	"abstract": "A system which enables a plurality of wireless interface devices to be interfaced with a server. The server is configured to communicate with a plurality of wireless interface devices over a radio link. The server may be connected to either a wired or wireless local area network (LAN).",
	"url": null,
	"owner": "NEC Corporation",
	"publication_number": "07512671",
	"publication_date": "2009-03-31",
	"application_number": "08783708",
	"application_date": "1997-01-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data allocation within a storage system architecture",
	"summary": "",
	"abstract": "Provided is a method and system for data allocation within a storage system architecture. One or more nodes of the storage system architecture provides access to striped data stored on a striped volume set. Each node can store a volume of the striped volume set. Further, the striped volume set is identified by a striping table. When modifying the storage system architecture, such as adding a volume to, or removing a volume from, the striped volume set, the striping table is rearranged to accurately identify the location of striped data on the striped volume set. At least one restriping process implemented on the striping table affects the volume utilization efficiency, hot-spotting behavior, and distribution efficiency of the striped volume set.",
	"url": null,
	"owner": "NetApp, Inc.",
	"publication_number": "07617370",
	"publication_date": "2009-11-10",
	"application_number": "11118681",
	"application_date": "2005-04-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for configuring a data storage object",
	"summary": "",
	"abstract": "A method and system for generating and configuring a data storage object, such as a volume, are described. According to one aspect of the invention, utilizing a graphical user interface, an administrator selects or otherwise identifies an existing data storage object on a data storage system. Next, one or more configuration parameter values associated with one or more configuration parameters of the existing data storage object are extracted from the existing data storage object on the storage system. Finally, a new data storage object is automatically generated and configured according the configuration parameter values extracted from the existing data storage object.",
	"url": null,
	"owner": "NETAPP, Inc.",
	"publication_number": "07539836",
	"publication_date": "2009-05-26",
	"application_number": "11109193",
	"application_date": "2005-04-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for improved resource giveback",
	"summary": "",
	"abstract": "A method and system performs a sendhome procedure for giving back resources to a node that had been restored after a takeover of that node's resources is provided. Critical operations that may be running are completed prior to the sendhome process. An ownership module consults information in an ownership table about each resource, e.g. a data container. A data container, such as a root aggregate of the waiting node is identified and sent back first, after which the node is booted. When the node has been successfully booted, the remaining aggregates are sent back one at a time until the full compliment of aggregates has been returned. A veto of the sendhome procedure can be invoked by a subsystem that is performing a critical operation prior to the sendhome of the root aggregate and each individual other aggregate.",
	"url": null,
	"owner": "NetApp, Inc.",
	"publication_number": "07546302",
	"publication_date": "2009-06-09",
	"application_number": "11606452",
	"application_date": "2006-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for managing hard lock state information in a distributed storage system environment",
	"summary": "",
	"abstract": "A system and method manages lock state information in a distributed file system. A meta-data volume includes a lock state database which is a comprehensive source for lock state information about a striped volume set in the system. A plurality of data volumes includes local lock caches which contain information about locks. Lock state messaging between the meta-data volume and the data volumes is used to assign locks and to update local lock caches. The meta-data volume is configured to assigned permissive areas in the data containers accessed by clients in order to efficiently manage the lock state information.",
	"url": null,
	"owner": "NetApp, Inc.",
	"publication_number": "07587558",
	"publication_date": "2009-09-08",
	"application_number": "11264831",
	"application_date": "2005-11-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for mapping block-based file operations to file level protocols",
	"summary": "",
	"abstract": "A system and method for mapping block-based file operations to file-level protocols is provided. The system and method enable applications on a networked computer designed to exclusively access only locally-attached storage to also access networked data storage. The mapping occurs transparently to higher levels of operating systems or applications so that applications which are designed to only access locally-attached storage may be enabled to access networked storage.",
	"url": null,
	"owner": "NetApp, Inc.",
	"publication_number": "07584279",
	"publication_date": "2009-09-01",
	"application_number": "10188250",
	"application_date": "2002-07-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for record retention date in a write once read many storage system",
	"summary": "",
	"abstract": "This invention provides a specified retention date within a data set that is locked against deletion or modification within a WORM storage implementation. This retention date scheme does not utilize any proprietary application program interfaces (APIs) or protocols, but rather, employs native functionality within conventional file (or other data containers, data sets or block-based logical unit numbers) properties available in commonly used operating systems. In an illustrative embodiment, the retention date/time is calculated by querying the file's last-modified time prior to commit, adding the retention period to this value and thereby deriving a retention date after which the file can be released from WORM. Prior to commit, the computed retention date is stored in the file's u201clast access timeu201d property/attribute field, or another metadata field that remains permanently associated with the file and that, in being used for retention date, does not interfere with file management in a WORM state. Since this field is not utilized in a WORM context, it can be adapted to store this date. Once stored, the retention date in this field is locked against modification. Where extension (never reduction) of a retention period is desired, the last access time field be updated, wherein the new retention period is added to the existing last access time value to derive a new, later retention date for the file. Upon expiry of the retention date, the system allows deletion of the expired WORM file/data set.",
	"url": null,
	"owner": "NetApp, Inc.",
	"publication_number": "07590807",
	"publication_date": "2009-09-15",
	"application_number": "10701373",
	"application_date": "2003-11-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Asymmetric data streaming architecture having autonomous and asynchronous job processing unit",
	"summary": "",
	"abstract": "In a preferred embodiment, the present invention is an asymmetric data processing system having two or more groups of processors that have attributes that are optimized for their assigned functions. A first processor group, which may be SMP machines, are responsible for interfacing with applications and/or end users to obtain queries, and for planning query execution. A second processor group consists of many streaming record-oriented processors called Job Processing Units (JPUs), typically arranged as an MPP structure. The JPUs carry out the bulk of the data processing required to implement the logic of a query, running autonomously and asynchronously from other processors in the system. The JPUs preferably use a multi-tasking operating system that permits multiple tasks to run at a given instant in time, in either an absolute-priority-based or a weighted-priority-based demand scheduling environment.",
	"url": null,
	"owner": "Netezza Corporation",
	"publication_number": "07634477",
	"publication_date": "2009-12-15",
	"application_number": "10667128",
	"application_date": "2003-09-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Asymmetric streaming record data processor method and apparatus",
	"summary": "",
	"abstract": "An asymmetric data record processor and method includes host computers and Job processing units (JPU's) coupled together on a network. Each host computer and JPU forms a node on the network. A plurality of software operators allow each node to process streams of records. For each operator in a given sequence within nodes and across nodes, output of the operator is input to a respective succeeding operator. Data processing follows a logical data flow based on readiness of a record. As soon as a record is ready it is passed for processing from one part to a next part in the logical data flow. The flow of records during data processing is substantially continuous and of a streaming fashion.",
	"url": null,
	"owner": "Netezza Corporation",
	"publication_number": "07529752",
	"publication_date": "2009-05-05",
	"application_number": "10666729",
	"application_date": "2003-09-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Programmable streaming data processor for database appliance having multiple processing unit groups",
	"summary": "",
	"abstract": "A data processing system having two or more groups of data processors that have attributes that are optimized for their assigned functions. A first group consists of one or more host computers responsible for interfacing with applications and/or end users to obtain queries and for planning query execution. A second processor group consists of many streaming record-oriented processors called Job Processing Units (JPUs), preferably arranged as an MPP structure. The JPUs typically carry out the bulk of the data processing required to implement the logic of a query. Each of the JPUs typically include a general purpose microcomputer, local memory, one or more mass storage devices, and one or more network connections. Each JPU also has a special purpose programmable processor, referred to herein as a Programmable Streaming Data Processor (PSDP). The PSDP serves as an interface between the CPU of a JPU and the mass storage device, to offload functions from the CPU of the JPU.",
	"url": null,
	"owner": "Netezza Corporation",
	"publication_number": "07577667",
	"publication_date": "2009-08-18",
	"application_number": "10668113",
	"application_date": "2003-09-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network device, storage medium and methods for incrementally updating a forwarding database",
	"summary": "",
	"abstract": "Network devices, storage mediums and methods for updating a memory structure in a data plane of the network device when route updates are received in the control plane of the network device. The methods described herein can be used to perform one of the following algorithms: a Basic Incremental Split-Merge (BISM) algorithm, a Lazy Incremental Split-Merge (LISM) algorithm, and a Down-support Split-Merge (DSM) algorithm. Each of the algorithms described herein may be used to incrementally update portions of a forwarding database stored within the memory structure, where the updated portions correspond to only those portions affected by the route updates.",
	"url": null,
	"owner": "NetLogic Microsystems, Inc.",
	"publication_number": "07571156",
	"publication_date": "2009-08-04",
	"application_number": "10809244",
	"application_date": "2004-03-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for reliable access of expander state information in highly available storage devices",
	"summary": "",
	"abstract": "An apparatus and method for detecting an interface failure of a first interface of a first expander of a storage system, and retrieving state information from a second expander to the first expander using a second interface of the first expander when the interface failure of the first interface is detected. The state information is normally available to the first expander through the first interface, but is unavailable through the first interface due to the interface failure of the first interface.",
	"url": null,
	"owner": "Network Appliance, Inc.",
	"publication_number": "07574630",
	"publication_date": "2009-08-11",
	"application_number": "11504200",
	"application_date": "2006-08-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for implementing external applications using remote socket application programming interface for virtual routers",
	"summary": "",
	"abstract": "A routing device including an operating system kernel, a virtual router residing external to the kernel, a router manager configured to manage the virtual router, an application residing external to the virtual router, and a number of physical interfaces is disclosed. The application selectively interacts with the virtual router and the kernel on a dynamic basis, which perform a number of tasks for the application. The virtual router includes a routing protocol stack configured to handle a number of routing protocols, a number of interface drivers configured to communicate with corresponding physical interfaces, an IP stack configured to interact with the routing protocol stack and perform a forwarding function via the interface drivers, the IP stack having a forwarding information table used to perform the forwarding function; and a socket layer having a corresponding socket API configured to facilitate interactions between the IP stack and one or more socket applications.",
	"url": null,
	"owner": "Network Equipment Technologies, Inc.",
	"publication_number": "07617327",
	"publication_date": "2009-11-10",
	"application_number": "10775732",
	"application_date": "2004-02-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for dynamic profiling of users in one-to-one applications and for validating user rules",
	"summary": "",
	"abstract": "A system and method for generating and validating a user profile () for a user based on a static profile () and a dynamic profile () of the user. The method and system compresses the dynamic rules () into aggregated rules so that the user can view a comparatively small number of the aggregated rules and select the desired rules from the aggregated rules based on user desired criteria. The method and system validates user rules () using a processing device, which are retrieved from a storage device. The user rules are separated into at least one subset of a user set. Then, it is determined if a particular rule of the at least one subset is one of acceptable, unacceptable and undecided based on a defined criteria (). If the particular rules of the at least one subset are acceptable, the particular rules of the at least one subset are provided (e.g. assigned) to a corresponding user ().",
	"url": null,
	"owner": "New York University",
	"publication_number": "07603331",
	"publication_date": "2009-10-13",
	"application_number": "11074157",
	"application_date": "2005-03-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for forwarding and storing session packets according to preset and/or dynamic rules",
	"summary": "",
	"abstract": "A system and method for recording and/or monitoring data by forwarding it, with or without analyzing or otherwise filtering the data itself. According to preferred embodiments of the present invention, the system and method are operative over IP networks. According to a preferred embodiment of the present invention, there is provided a system and method for forwarding data according to at least one characteristic of the data, such as the session's metadata for example, without analyzing or otherwise filtering the data itself. According to another preferred embodiment of the present invention, before the data is forwarded to the recording device, pre-processing algorithms are performed according to a system preset or according to one or more rules.",
	"url": null,
	"owner": "Nice Systems Ltd.",
	"publication_number": "07474633",
	"publication_date": "2009-01-06",
	"application_number": "10913326",
	"application_date": "2004-08-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Advertisement selection in an electronic application system",
	"summary": "",
	"abstract": "Selecting advertisements to deliver to a user of an electronic application system. Selecting includes storing a plurality of user defined object types for defining attributes of user contributed objects, and storing a plurality of user contributed objects, each having an object type. Selecting further includes receiving from a user a request for one or more of the stored objects, wherein at least one of the requested objects has a user defined object type, and selecting an advertisement to provide to the user based at least in part on the user defined object type of the one or more requested objects.",
	"url": null,
	"owner": "Ning, Inc.",
	"publication_number": "07603352",
	"publication_date": "2009-10-13",
	"application_number": "11213309",
	"application_date": "2005-08-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Broadcast media bookmarks",
	"summary": "",
	"abstract": "A system and method is provided for permitting a mobile device to connect to a broadcast station web site and to receive a broadcast station broadcast in response to selection of a bookmark. Selection of the bookmark results in a tuner on the mobile device being tuned to receive a broadcast while the mobile device substantially simultaneously connects to a web site for the broadcast station. The bookmark may be programmed by the user and may represent different broadcast stations according to parameters. Bookmarks may be displayed to the user based on geographical location information. Bookmarks may be created by scanning for available broadcasts at a geographical location. RDS information may supplement broadcast information and may be sent to the mobile device via CBS messages.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07623824",
	"publication_date": "2009-11-24",
	"application_number": "10319475",
	"application_date": "2002-12-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Connection optimization for communications in multiple access environment",
	"summary": "",
	"abstract": "A mechanism for optimizing an establishment of a communication connection between a mobile node and a correspondent node in a packet based communication network using, for example, IP is proposed. After starting an application level communication connection setup, for example SIP based, between the mobile node and the correspondent node via a communication subsystem infrastructure, for example the IM subsystem infrastructure, a trigger signal comprising the address of the correspondent node is transmitted from the SIP layer to the IP layer in the mobile node via an interface. In response to the trigger signal, an IP level route optimization procedure is performed while the application level communication connection setup proceeds.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07542481",
	"publication_date": "2009-06-02",
	"application_number": "10720105",
	"application_date": "2003-11-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Event driven filter monitoring for IP multicast services",
	"summary": "",
	"abstract": "Event driven methods for implementing or removing a filter used in receiving a multicast transmission are disclosed. An exemplary method for implementing a filter includes: detecting a message, such as an IPv6 MLD message, wherein the message comprises an address of a multicast group and a request to join the multicast group to receive a multicast transmission; in response to detecting the message, determining a filter parameter (e.g., a PID number and/or MAC address) needed to receive the multicast transmission; and implementing the filter parameter to receive the multicast transmission. Alternative methods wherein filter implementation or removal is based on the detection of direct procedure calls, such as a Setsockopt call, are also disclosed.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07512084",
	"publication_date": "2009-03-31",
	"application_number": "10226883",
	"application_date": "2002-08-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Intelligent network charging edge",
	"summary": "",
	"abstract": "A system and method for managing charging and billing for services on a network, where the network includes network elements that provide billable services, and charging elements that perform various charging and billing functions. Charging event are received at a network charging edge that isolates the network elements and charging elements. The network charging edge includes one or more bridge modules that are logically coupled between the network elements and the charging elements. Charging transactions between the network elements and their respective charging elements are managed via the bridge modules, by applying rules to the charging transaction initiated by corresponding charging events.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07526547",
	"publication_date": "2009-04-28",
	"application_number": "09976876",
	"application_date": "2001-10-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Location-based novelty index value and recommendation system and method",
	"summary": "",
	"abstract": "The invention is a system and method for computing a result for a location, wherein the result indicates how novel it is for a wireless device to occupy a specific location. After determining the location of a wireless device through various means, a Novelty Index Value (NIV) is calculated for the location, and the NIV is then stored into a database. The NIV may then be subsequently used by application programs to compute a desired result from the NIV. Multiple users may utilize and/or share the same NIV values. The NIV may also be used to alter the configuration of a wireless device as well. A recommendation system is also disclosed, wherein user context is utilized along with NIV values to compute particular results for a user.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07529639",
	"publication_date": "2009-05-05",
	"application_number": "12041971",
	"application_date": "2008-03-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing midlet suites in OSGI environment",
	"summary": "",
	"abstract": "The invention discloses deploying MIDlet suites in an Open Services Gateway Initiative environment. A MIDlet suite is re-packaged by adding to it an interface element to the Open Services Gateway Initiative environment. The invention allows using deployed MIDlet suites in an Open Services Gateway Initiative environment in a way that requires significantly less user interaction than prior art arrangements.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07640542",
	"publication_date": "2009-12-29",
	"application_number": "11098576",
	"application_date": "2005-03-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus to manage a configuration of clustered computers according to deployment date structures",
	"summary": "",
	"abstract": "A method, a controller, an arrangement and a computer program for managing a configuration of clustered computers is presented. The controller is configured to define configuration information as deployment prototypes for functional entities of clustered computers, to identify the predefined deployment prototypes needed for a configuration of clustered computers, to clone the identified deployment prototypes for creating deployment data structures for clustered computers, and to manage the configuration of clustered computers according to the created deployment data structures.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07493377",
	"publication_date": "2009-02-17",
	"application_number": "10638480",
	"application_date": "2003-08-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and arrangement for concealing true identity of user in communications system",
	"summary": "",
	"abstract": "The invention relates to a method and an arrangement for concealing the true identity of a user in a communications system comprising a first user equipment having a first characteristic identifier, a second user equipment having a second characteristic identifier, a service network serving the first and the second user equipment. The method according to the invention comprises: requesting a virtual identifier by means of the first user equipment; establishing the virtual identifier for the first user equipment; linking the virtual identifier of the first user equipment to the first characteristic identifier of the first user equipment and using the virtual identifier of the first user equipment for communication between the first and the second user equipment.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07627533",
	"publication_date": "2009-12-01",
	"application_number": "10681393",
	"application_date": "2003-10-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for providing connections on a portable device, a portable device",
	"summary": "",
	"abstract": "The invention relates to a method for providing connections on a portable device for different media types, the portable device comprising communication means for transferring data between the portable device and another device of a media type, wherein for each media type a media type specific media module is provided in the portable device, wherein communication between the media module and an application being executed in the portable device communicating with said another device is performed in a media independent manner, and messages of the application are converted to media type specific messages in the media module of the media type, and media type specific messages of the other device are converted to application messages in the media module of the media type. The invention also relates to other devices with communication performed in a media independent manner.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07555313",
	"publication_date": "2009-06-30",
	"application_number": "10377956",
	"application_date": "2003-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of initializing and using a security association for middleware based on physical proximity",
	"summary": "",
	"abstract": "A computer system, method, and computer program product for controlling data communication in an ad-hoc network that connects a wireless device and a nearby wireless device. The method stores an application directory, determines a priority for each entry in the application directory, identifies a selected entry based on the priority, and examines the attributes and security parameters associated with the selected entry. When the security parameters indicate to use a secure connection, the method establishes a security association to support the data communication by querying a database for an existing security association that will satisfy the security parameters. When the query is successful, the method reuses the existing security association. When the query is unsuccessful, the method creates a new security association by establishing a privileged side channel to the nearby wireless device, negotiating the new security association over the privileged side channel, and storing the new security association.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07545941",
	"publication_date": "2009-06-09",
	"application_number": "10784215",
	"application_date": "2004-02-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method to improve perceived access speed to data network content using a multicast channel and local cache",
	"summary": "",
	"abstract": "A method for increasing a user's perceived access speed to content available from a data network. The method utilizes a multicast channel and the selection of group data to be sent over that channel.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07516236",
	"publication_date": "2009-04-07",
	"application_number": "10032116",
	"application_date": "2001-12-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for applying an OMA DRM permission model to JAVA MIDP applications",
	"summary": "",
	"abstract": "A system and method of applying a permission model to an application operating on a mobile electronic device. When an application is launched on the mobile electronic device, it is determined whether the mobile electronic device possesses execution rights for the application. If the mobile electronic device does not possess valid execution rights for the application, the application is closed. If valid execution rights for the application expire after the application has been launched, a system is provided to inform the user that the rights have expired. The application with expired rights is then closed, unless the user obtains a new and valid rights object for the application.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07600265",
	"publication_date": "2009-10-06",
	"application_number": "11075782",
	"application_date": "2005-03-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for dynamically enforcing digital rights management rules",
	"summary": "",
	"abstract": "A system and method for enforcing digital rights management (DRM) rules in a terminal, even when the requesting rendering application is already operating. Content, which may be encrypted, is received at the terminal and securely stored. On-demand authorization is effected for the rendering application that is requesting access to the content, using secure communications between a DRM engine within the terminal and an operating system within the terminal that is augmented with a security manager adapted to engage in such secure communications. If the rendering application is found to be authorized, the DRM rules are applied to determine whether the rendering application may access the content, and if so, the content is made available to the rendering application.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07529929",
	"publication_date": "2009-05-05",
	"application_number": "10161082",
	"application_date": "2002-05-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for identifying applications targeted for message receipt in devices utilizing message queues",
	"summary": "",
	"abstract": "A system, apparatus, and method for facilitating the communication of messages between applications. Application identifiers, and corresponding outbound logical connection identifiers associated with message transfers from applications identifiable by their respective application identifiers, are acquired. Associations between the application identifiers and their corresponding outbound logical connection identifiers are established. Responsive inbound messages are directed to the applications having application identifiers that are associated with the outbound logical connection identifiers that correspond to the inbound logical connection identifiers of the responsive inbound messages.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07493623",
	"publication_date": "2009-02-17",
	"application_number": "10359044",
	"application_date": "2003-02-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing context sensitive recommendations to digital services",
	"summary": "",
	"abstract": "A system and method is disclosed to provide recommendations to a wireless device, based on stored bookmark/short-cut data. When a wireless device accesses services, data pertaining to the service access, along with any context related information is transmitted within the wireless device, or to a remote server. The data is processed in conjunction with bookmarks/short-cuts specified within the device, and are organized and presented to the wireless device in accordance with preference instructions specified within the wireless device.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07570943",
	"publication_date": "2009-08-04",
	"application_number": "10230111",
	"application_date": "2002-08-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method to establish and maintain conditional trust by stating signal of distrust",
	"summary": "",
	"abstract": "A system and method is provided that establishes and maintains conditional trust by stating a signal of distrust from a trustee's computing platform to a trustor's computing platform. The trustor attests a trustee at a given time and also sends trust conditions to the trustee upon which the trustor trusts the trustee for some intended purpose. The trust conditions may include restrictions on hardware or software components and any status changes to the hardware or software components. The trustee then monitors the hardware and software components in relation to the trust conditions and reports distrust signals when the trustee's hardware and software configuration no longer matches the trust conditions.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07634807",
	"publication_date": "2009-12-15",
	"application_number": "10637813",
	"application_date": "2003-08-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methods for using an application layer control protocol transporting spatial location information pertaining to devices connected to wired and wireless Internet protocol networks",
	"summary": "",
	"abstract": "Application layer signaling is provided from users registering at a presence server for a presence service wherein upon reception the signaling is checked for spatial location information and stored for future use in providing the presence service in association with other user information, such as user identity. The application layer signaling may be in accordance with the session initiation protocol (SIP) and the spatial location information provided as a spatial location payload (SLoP). The presence service may provide access to the spatial location information to one or more location based services either openly or confidentially by hiding the user's identity and other information. The spatial location information may also be used in conjunction with a messaging service for providing messages to the users with enhanced functionality.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07475140",
	"publication_date": "2009-01-06",
	"application_number": "11654994",
	"application_date": "2007-01-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program product for providing quality of service during remote access to a plug-and-play network",
	"summary": "",
	"abstract": "A network entity for providing QoS during remote access to a PnP network includes a QoS manager for receiving in-band device capabilities of a PnP-enabled in-band correspondent and a PnP-enabled out-of-band remote node, the remote node being in communication with the PnP network over a secure tunnel. As presented, the in-band device capabilities of the correspondent node are at least partially based on an in-band network interface of the correspondent node. The in-band device capabilities of the remote node, however, comprise capabilities having been mapped from out-of-band device capabilities, where those out-of-band device capabilities are at least partially based on an out-of-band network interface of the remote node. The QoS manager is further adapted to configure the correspondent and remote nodes for a desired in-band QoS based on the QoS policy and respective device capabilities.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07545753",
	"publication_date": "2009-06-09",
	"application_number": "11380764",
	"application_date": "2006-04-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Using one-time passwords with single sign-on authentication",
	"summary": "",
	"abstract": "A method, computer program product, authentication proxy server, and system for enabling a user to use a one-time password in conjunction with single sign-on authentication and external authentication, such as provided by the Kerberos protocol, are provided.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07540022",
	"publication_date": "2009-05-26",
	"application_number": "11173382",
	"application_date": "2005-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for joining a cluster by cloning configuration",
	"summary": "",
	"abstract": "The present invention clones configuration information onto a device joining a cluster. A Configuration Acquisition System (CAS) component, which, using a list of attributes to be cloned, connects to a cluster member, interacts with the cluster member to retrieve all the attributes, reconciles the values of the attributes from the cluster member with the values of the attributes in its own configuration and applies the reconciled configuration to its Configuration Subsystem.",
	"url": null,
	"owner": "Nokia Siemens Networks Oy",
	"publication_number": "07587475",
	"publication_date": "2009-09-08",
	"application_number": "10607368",
	"application_date": "2003-06-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Personal support infrastructure for development of user applications and interfaces",
	"summary": "",
	"abstract": "A system and method that are directed towards developing a computer user interface employing a Personal Support Infrastructure (PSI) stack. The PSI stack is arranged to represent various layers of a human being employing a holistic approach. In one embodiment, the PSI stack may enable organization, development, and solicitation of requirements for the development of a human-machine interface, such as for a mobile device, and the like. In one embodiment, the PSI stack is configured as a data structure that may be populated with elicitations oriented towards developing the set of human-machine interface requirements.",
	"url": null,
	"owner": "Nokia, Inc.",
	"publication_number": "07574415",
	"publication_date": "2009-08-11",
	"application_number": "10910909",
	"application_date": "2004-08-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Establishing a communications session having a quality of service in a communications system",
	"summary": "",
	"abstract": "A communications system includes a packet-based wireless network linked to mobile units and a circuit-switched network such as a public-switched telephone network (PSTN). A primary Packet Data Protocol (PDP) context is established with call setup that contains the default quality of service (QoS) profile of the call session. However, to support multiple flows with different QoS profiles, secondary PDP contexts with different QoS profiles may be activated in the call session. The secondary PDP context activation may be performed using messaging according to a protocol for reserving resources, such as the Resource Reservation Protocol (RSVP).",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "07532613",
	"publication_date": "2009-05-12",
	"application_number": "09605800",
	"application_date": "2000-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Media gateway connection information recovery",
	"summary": "",
	"abstract": "In a packet-based telephony network, a media gateway provides information on active media path connections to an active call server. For instance, this data may be provided to a backup call server to keep the backup call server in a warm standby mode. The backup call server polls a media gateway to retrieve a table of information on active media path connections. The polling may be done periodically or only during switchover from the active call server to the backup call server. After switchover, the backup call server has all necessary details about active media path connections to provide accurate billing information. Alternatively, after a temporary failure at the active call server, the active call server may send a request to the media gateway to retrieve a table of information on active media path connections.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "07533174",
	"publication_date": "2009-05-12",
	"application_number": "09672821",
	"application_date": "2000-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Session initiation protocol enabled set-top device",
	"summary": "",
	"abstract": "A method and apparatus for handling subscriber services from different sources without requiring interaction with different devices. The present invention also provides a method and apparatus for receiving multimedia services using session initiation protocol (SIP) messages received from a source, such as a server on a network. In one embodiment, a set-top device is provided in which a SIP control is provided to register a subscriber with a server using SIP messages. A connection to a network, such as the Internet, is provided to communicate with the server. The set-top device is placed in line with the audio and video source to control audio and video streams presented to the subscriber. The set-top device is also configured to receive voice calls from a public switched telephone network (PSTN). Further, the set-top device includes a remote control mechanism, such as an infrared (IR) transmitter and receiver to receive input from the subscriber and to control other devices using IR signals. Also, subscriber services customized for a particular subscriber may be directed to the subscriber at a location when the subscriber registers with the server through a set-top device at that location using SIP. Services, such as, for example, call screening, channel guides, video on demand, and Web browsing are provided through the set-top device and messaging with a server using SIP messages.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "07617298",
	"publication_date": "2009-11-10",
	"application_number": "11395929",
	"application_date": "2006-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Navigation receiver with functional extensibility",
	"summary": "",
	"abstract": "A global navigation satellite system receiver manufacturer provides functional extensibility to a global navigation satellite system receiver. An application programming interface to the receiver is provided. The interface is public, such as using pubically available software or pubically distributed instructions, for loading on applications or other extensions to the core functionality of the GPS receiver. Other programmers than the manufacturer may add applications to the GPS receiver, avoiding separate devices in a vehicle.",
	"url": null,
	"owner": "Novariant, Inc.",
	"publication_number": "07561967",
	"publication_date": "2009-07-14",
	"application_number": "11193644",
	"application_date": "2005-07-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program product for documenting and managing execution of procedures in a graphical interface environment",
	"summary": "",
	"abstract": "A system, method and computer program product for describing a process visually, converting the visual description to an intermediate format, and directing the process.",
	"url": null,
	"owner": "Novatech LLC",
	"publication_number": "07590942",
	"publication_date": "2009-09-15",
	"application_number": "10942088",
	"application_date": "2004-09-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Communication interface for providing accounting support for print services",
	"summary": "",
	"abstract": "An application-to-application communication interface between an accounting service application and a printer agent application resides on a computer network. The interface is embodied as novel application programming interface (API) functions or calls between the applications that provide accounting support for print services, including tracking the production of print jobs and the resources consumed by those jobs. The accounting support services provided by the novel API communication interface facilitate computing of charges by the accounting application for print services and materials used by print clients.",
	"url": null,
	"owner": "Novell, Inc.",
	"publication_number": "07475031",
	"publication_date": "2009-01-06",
	"application_number": "09390954",
	"application_date": "1999-09-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer network having a security layer interface independent of the application transport mechanism",
	"summary": "",
	"abstract": "An architecture for secure network communications includes a security layer sandwiched between an upper connection layer and a lower connection layer. An application program need not deal directly with the details of security handshakes, encryption, and decryption. Instead, the application sends plain text data to the upper connection layer, which passes it to the security layer. The security layer manages the necessary security handshakes, and encrypts the data. The security layer then passes the encrypted application data to the lower connection layer, which transports it using TCP or another transport protocol. The security layer need not manage the transport protocol, as this is done by the connection layers. Encrypted data received over the network at the lower connection layer is passed to the security layer for decryption, and then to the upper connection layer for transport to the application.",
	"url": null,
	"owner": "Novell, Inc.",
	"publication_number": "07502922",
	"publication_date": "2009-03-10",
	"application_number": "09620176",
	"application_date": "2000-07-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and framework for using XML files to modify network resource configurations",
	"summary": "",
	"abstract": "A method and system are provided for a script driven framework that produces and uses a transactional document. The transactional document provides an interface for modifying configuration information associated with a network resource. In one example, a framework for creating the transactional document includes a transformation file for converting between file formats, multiple responders, a responders file, a mapping configuration file, and a service manager. The responders file assigns at least one responder to create a specified portion of the transactional document based on the configuration information. The mapping configuration file maps between the transactional document and a user interface, which enables the configuration information to be modified through the transactional document via the user interface. The service manager shuts down and restarts services in a predefined order so that the network resource will be configured as defined by the modified configuration information.",
	"url": null,
	"owner": "Novell, Inc.",
	"publication_number": "07546313",
	"publication_date": "2009-06-09",
	"application_number": "10463753",
	"application_date": "2003-06-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods, data structures, and systems to access data in cross-languages from cross-computing environments",
	"summary": "",
	"abstract": "Methods, data structures, and systems are provided to access data in cross-languages from cross-computing environments. A first request from a first computing environment is received to access the data in a first language. Concurrently, a second request from a second computing environment is received to access the data in the first language. A single message file used to service the requests is used to provide the data in the first language to both the requests within both computing environments. In another embodiment, the second request is received to access the data in a second language, wherein a second message file is used to provide the data in the second language to satisfy the second request simultaneously with the first request.",
	"url": null,
	"owner": "Novell, Inc.",
	"publication_number": "07634537",
	"publication_date": "2009-12-15",
	"application_number": "11796806",
	"application_date": "2007-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Peripheral switching device and a peripheral switching control device",
	"summary": "",
	"abstract": "A peripheral switching device includes an ownership switch request receiver unit configured to receive an ownership switch request for requesting to assign a peripheral to an operating system; an ownership request holding unit configured to receive and hold an ownership request for requesting to ensure or release an ownership of a peripheral to an operating system; a switching judgment unit configured to judge whether or not to execute an assignment of a peripheral to an operating system, in accordance with the ownership switch request and the ownership request; and a switching execution unit configured to execute the assignment of the peripheral to the operating system, in accordance with the judgment result.",
	"url": null,
	"owner": "NTT DoCoMo, Inc.",
	"publication_number": "07529861",
	"publication_date": "2009-05-05",
	"application_number": "11828013",
	"application_date": "2007-07-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Callbacks in asynchronous or parallel execution of a physics simulation",
	"summary": "",
	"abstract": "Embodiments of a callback procedure mechanism and method are disclosed in relation to a system running a physics simulation in parallel with a main application. A main application registers callback procedures in memory shared with the physics simulation in response to data generated by the physics simulation. The callback procedures are executed by the physics simulation with data generated by the physics simulation.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07565279",
	"publication_date": "2009-07-21",
	"application_number": "11213339",
	"application_date": "2005-08-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer graphics shader systems and methods",
	"summary": "",
	"abstract": "Methods and systems are described that unite various shading applications under a single language, enable the simple re-use and re-purposing of shaders, facilitate the design and construction of shaders without need for computer programming, and enable the graphical debugging of shaders.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07548238",
	"publication_date": "2009-06-16",
	"application_number": "11479952",
	"application_date": "2006-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Faster clears for three-dimensional modeling applications",
	"summary": "",
	"abstract": "A graphics processing subsystem defines a bounding area as the portion of the display buffer and other memory buffers occupied by one or more rendered objects. When clearing the memory buffers, only the portions of the buffers corresponding to the bounding area need to be cleared. A graphics pipeline includes a bounding area memory to store bounding area values. The bounding area values are modified during rendering so that each rendered primitive falls within the bounding area values. The graphics processing subsystem clears a portion of the memory buffer in response to a clear command specifying a bounding area. The clear command may include a set of bounding area values defining the bounding area, or alternatively a reference to the bounding area memory. For applications that draw objects in isolation, the bounding area will be smaller than the window, resulting in a decreased time requirement for clearing the memory buffer.",
	"url": null,
	"owner": "Nvidia Corporation",
	"publication_number": "07528839",
	"publication_date": "2009-05-05",
	"application_number": "10641279",
	"application_date": "2003-08-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for filtering video data using a programmable graphics processor",
	"summary": "",
	"abstract": "Video filtering using a programmable graphics processor is described. The programmable graphics processor may be programmed to complete a plurality of video filtering operations in a single pass through a fragment-processing pipeline within the programmable graphics processor. Video filtering functions such as deinterlacing, chroma up-sampling, scaling, and deblocking may be performed by the fragment-processing pipeline. The fragment-processing pipeline may be programmed to perform motion adaptive deinterlacing, wherein a spatially variant filter determines, on a pixel basis, whether a u201cbobu201d, a u201cblendu201d, or a u201cweaveu201d operation should be used to process an interlaced image.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07508448",
	"publication_date": "2009-03-24",
	"application_number": "10448590",
	"application_date": "2003-05-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for filtering video data using a programmable graphics processor",
	"summary": "",
	"abstract": "Video filtering using a programmable graphics processor is described. The programmable graphics processor may be programmed to complete a plurality of video filtering operations in a single pass through a fragment-processing pipeline within the programmable graphics processor. Video filtering functions such as deinterlacing, chroma up-sampling, scaling, and deblocking may be performed by the fragment-processing pipeline. The fragment-processing pipeline may be programmed to perform motion adaptive deinterlacing, wherein a spatially variant filter determines, on a pixel basis, whether a u201cbobu201d, a u201cblendu201d, or a u201cweaveu201d operation should be used to process an interlaced image.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07619687",
	"publication_date": "2009-11-17",
	"application_number": "11957354",
	"application_date": "2007-12-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing an integrated network of processors",
	"summary": "",
	"abstract": "A novel network architecture that integrates the functions of an internet protocol (IP) router into a network processing unit (NPU) that resides in a host computer's chipset such that the host computer's resources are perceived as separate network appliances. The NPU appears logically separate from the host computer even though, in one embodiment, it is sharing the same chip.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07620738",
	"publication_date": "2009-11-17",
	"application_number": "11948847",
	"application_date": "2007-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for implementing parameter clamping to a valid range in a raster stage of a graphics pipeline",
	"summary": "",
	"abstract": "A method of determining pixel parameters, wherein the pixel parameters were clamped to a valid range. The method includes a step of accessing a geometric primitive comprising a plurality of vertices wherein each vertex has associated therewith a plurality of parameters including a pair of texture coordinates. During rasterization of said geometric primitive performed in a rasterization module of graphics pipeline, a respective pair of texture coordinates for each pixel of said geometric primitive are computed using interpolation. Each computed texture coordinate includes an integer portion and a fractional portion. Only the fractional portions of said texture coordinates are propagated to a downstream data fetch module of said graphics pipeline.",
	"url": null,
	"owner": "Nvidia Corporation",
	"publication_number": "07538773",
	"publication_date": "2009-05-26",
	"application_number": "10845987",
	"application_date": "2004-05-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for processing texture samples with programmable filter weights",
	"summary": "",
	"abstract": "A texture unit of a graphics processing unit provides the ability to switch among different filter modes depending upon shader program instructions that are received by the texture unit. One filter mode has the capability to extract filter weights that have been specified in a received shader program instruction rather than calculating the weights within the texture unit itself.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07623136",
	"publication_date": "2009-11-24",
	"application_number": "11566928",
	"application_date": "2006-12-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of operation for parallel LCP solver",
	"summary": "",
	"abstract": "A method of operating a Linear Complementarity Problem (LCP) solver is disclosed, where the LCP solver is characterized by multiple execution units operating in parallel to implement a competent computational method adapted to resolve physics-based LCPs in real-time.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07526456",
	"publication_date": "2009-04-28",
	"application_number": "10793856",
	"application_date": "2004-03-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multichip rendering with state control",
	"summary": "",
	"abstract": "Circuits, methods, and apparatus that provide multiple graphics processor systems where specific graphics processors can be instructed to not perform certain rendering operations while continuing to receive state updates, where the state updates are included in the rendering commands for these rendering operations. One embodiment provides commands instructing a graphics processor to start or stop rendering geometries. These commands can be directed to one or more specific processors by use of a set-subsystem device mask.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07629978",
	"publication_date": "2009-12-08",
	"application_number": "11264828",
	"application_date": "2005-10-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Off-chip memory allocation for a unified shader",
	"summary": "",
	"abstract": "Systems and methods for dynamically allocating memory for thread processing may reduce memory requirements while maintaining thread processing parallelism. A memory pool is allocated to store data for processing multiple threads that does not need to be large enough to dedicate a fixed size portion of the memory pool to each thread that may be processed in parallel. Fixed size portions of the memory pool are dynamically allocated and deallocated to each processing thread. Different fixed size portions may be used for different types of threads to allow greater thread parallelism compared with a system that requires allocating a single fixed portion of the memory pool to each thread. The memory pool may be shared between all of the thread types or divided to provide separate memory pools dedicated to each particular thread type.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07533237",
	"publication_date": "2009-05-12",
	"application_number": "11382907",
	"application_date": "2006-05-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Off-chip out of order memory allocation for a unified shader",
	"summary": "",
	"abstract": "Systems and methods for dynamically allocating memory for thread processing may reduce memory requirements while maintaining thread processing parallelism. A memory pool is allocated to store data for processing multiple threads that does not need to be large enough to dedicate a fixed size portion of the memory pool to each thread that may be processed in parallel. Fixed size portions of the memory pool are dynamically allocated and deallocated to each processing thread. Different fixed size portions may be used for different types of threads to allow greater thread parallelism compared with a system that requires allocating a single fixed portion of the memory pool to each thread. The memory pool may be shared between all of the thread types or divided to provide separate memory pools dedicated to each particular thread type.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07533236",
	"publication_date": "2009-05-12",
	"application_number": "11382888",
	"application_date": "2006-05-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Programming multiple chips from a command buffer",
	"summary": "",
	"abstract": "A CPU selectively programs one or more graphics devices by writing a control command to the command buffer that designates a subset of graphics devices to execute subsequent commands. Graphics devices not designated by the control command will ignore the subsequent commands until re-enabled by the CPU. The non-designated graphics devices will continue to read from the command buffer to maintain synchronization. Subsequent control commands can designate different subsets of graphics devices to execute further subsequent commands. Graphics devices include graphics processing units and graphics coprocessors. A unique identifier is associated with each of the graphics devices. The control command designates a subset of graphics devices according to their respective unique identifiers. The control command includes a number of bits. Each bit is associated with one of the unique identifiers and designates the inclusion of one of the graphics devices in the first subset of graphics devices.",
	"url": null,
	"owner": "Nvidia Corporation",
	"publication_number": "07528836",
	"publication_date": "2009-05-05",
	"application_number": "11326871",
	"application_date": "2006-01-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Programming multiple chips from a command buffer for stereo image generation",
	"summary": "",
	"abstract": "Multiple graphics devices are operable in parallel to render stereo images using efficient programming techniques. The same command stream is delivered to each graphics device, and device masks are used to control the execution of commands by different graphics devices. A viewing transform command corresponding to a left-eye transform is executed by one device while a viewing transform command corresponding to a right-eye transform is executed another device. Other rendering commands are executed by both devices to render the same image from somewhat different viewpoints.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07602395",
	"publication_date": "2009-10-13",
	"application_number": "11112413",
	"application_date": "2005-04-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Programming multiple chips from a command buffer to process multiple images",
	"summary": "",
	"abstract": "Methods, apparatuses, and systems are presented for operating a plurality of graphics devices involving using the graphics devices to processes a sequence of images, wherein at least one first graphics device processes a first image, and at least one second graphics device processes a second image, communicating a first command associated with the first image to the at least one first graphics device and the at least one second graphics device, wherein the first command is to be executed by the at least one first graphics device and the at least one second graphics device, and communicating a second command associated with the first image to the at least one first graphics device and the at least one second graphics device, wherein the second command is to be executed by the at least one first graphics device but not by the at least one second graphics device.",
	"url": null,
	"owner": "Nvidia Corporation",
	"publication_number": "07525547",
	"publication_date": "2009-04-28",
	"application_number": "11016011",
	"application_date": "2004-12-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software package definition for PPU enabled system",
	"summary": "",
	"abstract": "A PPU enhanced system stores software packages implementing, at least in part, a physics subroutine. The package being implemented as a plurality of modules, at least one module being stored and executed on a host system and another module being stored and executed on the PPU.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07475001",
	"publication_date": "2009-01-06",
	"application_number": "10982764",
	"application_date": "2004-11-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for virtual coverage anti-aliasing",
	"summary": "",
	"abstract": "A graphics system has a mode of operation in which real samples and virtual samples are generated for anti-aliasing pixels. Each virtual sample identifies a set of real samples associated with a common primitive that covers a virtual sample location within a pixel. The virtual samples provide additional coverage information that may be used to adjust the weights of real samples.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07573485",
	"publication_date": "2009-08-11",
	"application_number": "11955746",
	"application_date": "2007-12-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for replaying and synchronizing patterns on a client and external data source devices",
	"summary": "",
	"abstract": "A system, method and computer program product provide functionality via a non-natively coded application on a client device. Initially, user input is received on a device. A pattern is replayed on the device. Navigation of the pattern is managed. Data is retrieved based on the user input utilizing at least one connector, as specified in the pattern. Finally, the retrieved data is output. A system, method and computer program product are also provided for creating an application for a client device. The functionality of the desired application on a device is provided by selecting functional computer code that processes data. The functional computer code does not include coding to the native API's of the device. One or more connectors are selected and programmed to interface with programs on the device for retrieving data for processing. One or more output nodes are generated for outputting the processed data from the device. The functional computer code, connectors, and output nodes are stored in a device-resident pattern for installation on the device. The retrieved data is processed by the functional computer code upon replaying of the pattern for providing the functionality.",
	"url": null,
	"owner": "NVIDIA International, Inc.",
	"publication_number": "07574711",
	"publication_date": "2009-08-11",
	"application_number": "10146096",
	"application_date": "2002-05-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "VPN and firewall integrated system",
	"summary": "",
	"abstract": "The present invention provides an integrated VPN/firewall system that uses bath hardware (firmware) and software to optimize the efficiency of both VPN and firewall functions. The hardware portions of the VPN and firewall are designed in flexible and scalable layers to permit high-speed processing without sacrificing system security. The software portions are adapted to provide interfacing with hardware components, report and rules management control.",
	"url": null,
	"owner": "O2Micro International Limited",
	"publication_number": "07596806",
	"publication_date": "2009-09-29",
	"application_number": "10658561",
	"application_date": "2003-09-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for gesture based control system",
	"summary": "",
	"abstract": "The system provides a gestural interface to various visually presented elements, presented on a display screen or screens. A gestural vocabulary includes u2018instantaneousu2019 commands, in which forming one or both hands into the appropriate u2018poseu2019 results in an immediate, one-time action; and u2018spatialu2019 commands, in which the operator either refers directly to elements on the screen by way of literal u2018pointingu2019 gestures or performs navigational maneuvers by way of relative or u201coffsetu201d gestures. The system contemplates the ability to identify the users hands in the form of a glove or gloves with certain indicia provided thereon, or any suitable means for providing recognizable indicia on a user's hands or body parts. A system of cameras can detect the position, orientation, and movement of the user's hands and translate that information into executable commands.",
	"url": null,
	"owner": "Oblong Industries, Inc.",
	"publication_number": "07598942",
	"publication_date": "2009-10-06",
	"application_number": "11350697",
	"application_date": "2006-02-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Authenticating a caller before providing the caller with access to one or more secured resources",
	"summary": "",
	"abstract": "In one embodiment, a system authenticates a caller before providing the caller with access to one or more secured resources. Identification and verification data is stored during system enrollment of known persons. A processing system, in a current call initiated by a caller and prior to identification of the caller, receives voice-based information for the caller including a digital representation of a telephone number spoken by the caller in the current call, the received information including voice-based identification information and voice-based verification information for the caller. The processing system automatically compares the received identification information and the received verification information for the caller with the stored identification and verification data for known persons, respectively, to uniquely identify and verify the identity of the caller as a particular known person. The processing system authenticates the caller for access to the one or more secured resources in response.",
	"url": null,
	"owner": "Ochopee Big Cypress LLC",
	"publication_number": "07489766",
	"publication_date": "2009-02-10",
	"application_number": "11360527",
	"application_date": "2006-02-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for managing and querying gene expression data according to quality",
	"summary": "",
	"abstract": "An automated system and method are provided for analyzing gene expression data obtained from a plurality of microarrays having mismatch (MM) probe pairs and perfect match (PM) probe pairs. Image data for a plurality of scanned microarrays is stored in a database along with a set of microarray parameters which includes one or more image processing metrics for quality control of the microarray and a pass/fail status of the microarray as determined by these metrics. The user can search the database records according to one or more microarray parameters. The image processing metrics include algorithms for removing local background effects from the probe measurements by determining a model for estimated background using PM probe values. Other image processing metrics utilize a modified Robust Multi-array Averaging (RMA) applied to PM probes to assign weights to probes for determining overall quality of a microarray.",
	"url": null,
	"owner": "Ocimum Biosolutions, Inc.",
	"publication_number": "07558411",
	"publication_date": "2009-07-07",
	"application_number": "10523499",
	"application_date": "2003-08-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for virtual injection of network application codes into network simulation",
	"summary": "",
	"abstract": "A technique is provided for translating one or more networked applications to act virtually as if operating at a node or communication point within a network simulation. The invention disclosed herein has aspects of both emulation and simulation, allowing an actual networked application code (herein called simply u2018application codeu2019) and simulated models to interact with each other in any combination. However, one or more application codes are virtually translated such that they appear to the rest of the simulated model(s) or applications code(s) to be resident at a simulated node. This simulated node may be any node (fixed or mobile) of the simulation, and one or more application codes can be mapped to a single node. Although the preferred embodiment would be the case where simulated time is synchronized to real-time, accelerated or slower than real-time simulation can also be used with the invention.",
	"url": null,
	"owner": "OpCoast LLC",
	"publication_number": "07526420",
	"publication_date": "2009-04-28",
	"application_number": "10700976",
	"application_date": "2003-11-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Support vector machines processing system",
	"summary": "",
	"abstract": "An implementation of SVM functionality improves efficiency, time consumption, and data security, reduces the parameter tuning challenges presented to the inexperienced user, and reduces the computational costs of building SVM models. A system for support vector machine processing comprises data stored in the system, a client application programming interface operable to provide an interface to client software, a build unit operable to build a support vector machine model on at least a portion of the data stored in the system, based on a plurality of model-building parameters, a parameter estimation unit operable to estimate values for at least some of the model-building parameters, and an apply unit operable to apply the support vector machine model using the data stored in the system.",
	"url": null,
	"owner": "Oracle Corporation",
	"publication_number": "07490071",
	"publication_date": "2009-02-10",
	"application_number": "10927111",
	"application_date": "2004-08-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Browser based remote control of functional testing tool",
	"summary": "",
	"abstract": "Systems, methodologies, media, and other embodiments associated with browser based remote control of functional testing tools are described. One exemplary method embodiment includes receiving requests from a browser to control (e.g., start, stop) a functional testing tool. The example method may also include retrieving a test script to be an input for the functional testing tool and providing the test script to the functional testing tool. The example method is a server based method that resides logically between the browser and the functional testing tool.",
	"url": null,
	"owner": "Oracle International Corp.",
	"publication_number": "07543188",
	"publication_date": "2009-06-02",
	"application_number": "11169469",
	"application_date": "2005-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Advanced translation context via web pages embedded with resource information",
	"summary": "",
	"abstract": "A computer automatically changes a web page that would otherwise be normally generated by a first application program (such as a web-conferencing tool for example) in a first language (e.g. English), by adding metadata to one or more translatable text strings in the web page. The changed web page is displayed to a human translator by a second application program (e.g. the browser is equipped with a plug-in) to receive translation(s) of the translatable text string(s) into a second language (e.g. French). The translations are used as replacements for the translatable text strings, to create a translated version of the first application program, in the second language.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07536640",
	"publication_date": "2009-05-19",
	"application_number": "11045924",
	"application_date": "2005-01-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application functionality for a test tool for application programming interfaces",
	"summary": "",
	"abstract": "Methods and apparatus for enabling efficient testing of application programming interface (API) frameworks and application code are disclosed. According to one aspect of the present invention, a framework suitable for use to test an API includes a metadata provider arrangement that stores declarative metadata and a metadata provider interface that obtains the declarative metadata associated with a test from the declarative metadata provider. A first test adapter includes logic used to process the declarative metadata, and a diagnostic test interface cooperates with the first test adapter to execute the test. The first test adapter is effectively interfaced with the diagnostic test interface. Finally, a diagnostics execution engine is arranged to communicate with the diagnostic test interface to cause the test to be executed.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07603658",
	"publication_date": "2009-10-13",
	"application_number": "10991607",
	"application_date": "2004-11-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Basing directory contents on a query that is associated with a file identifier",
	"summary": "",
	"abstract": "Techniques are provided for responding to file requests received through a file system interface. According to one technique, an association is established between a file identifier and a query. A request for a file associated with the file identifier is received through the file system interface. In response to the request, the following steps are performed: executing the query to generate a set of data; generating contents of the file based on the set of data; and providing the file through the file system interface.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07620620",
	"publication_date": "2009-11-17",
	"application_number": "09571060",
	"application_date": "2000-05-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Capturing data from user selected portions of a business process and transferring captured data to user identified destinations",
	"summary": "",
	"abstract": "A graphical user interface (GUI) displays a flow of activities of a business process, including any portion thereof from which capture of data is permitted. The GUI receives, in an operation, at least an indication of a business process portion from which data is to be captured (u201csensoru201d), an identification of an endpoint to which captured data is to be transferred, and a type of the endpoint which identifies (through a mapping) a predetermined software. A sensor may be added any number of times (through a single GUI or though multiple GUIs) by repeatedly performing the operation. Also, a given sensor may be associated with multiple endpoints. Computer(s) executing the business process check whether or not a sensor is present, on execution of the business process portion, and if present, then execute the corresponding predetermined software(s) to transfer data from the sensor directly to the respective endpoint(s).",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07499951",
	"publication_date": "2009-03-03",
	"application_number": "11282977",
	"application_date": "2005-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Control unit operations in a real-time collaboration server",
	"summary": "",
	"abstract": "In a real-time collaboration server, a control unit manages a collaboration mode. The control unit operates a virtual client that maintains a virtual screen reflecting the status of the collaboration (e.g., the contents of a shared desktop or whiteboard). The virtual client renders collaboration data within the virtual screen. New clients are synchronized with an ongoing collaboration by packing and sending them a copy of the virtual screen. The control unit maintains a queue of collaboration data to be sent to participating clients. Each client may have a pointer identifying the queued data it is processing. The queue may be collapsed (e.g., when it reaches a maximum size) by sending a copy of the virtual screen to one or more clients that have not yet consumed old data in the queue; those clients are then updated to skip the queue entries embodied in the virtual screen.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07516179",
	"publication_date": "2009-04-07",
	"application_number": "11732882",
	"application_date": "2007-04-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Conversion engine and financial reporting system using the conversion engine",
	"summary": "",
	"abstract": "A computerized management system is provided. The system includes a routine for accessing journal entries stored in a memory and an automated journal entry generating routine for generating journal entries for a first set-of-books and for a second set-of-books based on the accessed journal entries. The journal entries for the first set-of-books are in accordance with a first reporting standard and the journal entries for the second set-of-books are in accordance with a second, different reporting standard.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07565311",
	"publication_date": "2009-07-21",
	"application_number": "10371181",
	"application_date": "2003-02-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Determining a mapping of an object to storage layer components",
	"summary": "",
	"abstract": "A method and apparatus for determining a mapping of a database object to storage layers is provided. According to one aspect, a database server generates views that represent which components of each storage layer store parts of the object. The views are based on information that the database server automatically gathers from one or more vendor libraries. Each library implements a common API. Each storage layer is associated with a library. The database server passes the object's identifier to each library's implementation of a get-mapping routine of the API. A process that is associated with the storage layer that recognizes the object's identifier responds with the identity of one or more components of the storage layer that store one or more parts of the object. The database server recursively uses this information to obtain mappings between storage layer components and underlying storage layer components.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07577675",
	"publication_date": "2009-08-18",
	"application_number": "10427321",
	"application_date": "2003-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for using an external security device to secure data in a database",
	"summary": "",
	"abstract": "One embodiment of the present invention provides a system that facilitates using an external security device to secure data in a database without having to modify database applications. The system operates by receiving a request at the database to perform an encryption/decryption operation, wherein the encryption/decryption operation is performed with the assistance of the external security module in a manner that is transparent to database applications. In response to the request, the system passes a wrapped (encrypted) column key (a key used to encrypt data within the database) to an external security module, wherein the wrapped column key is a column key encrypted with a master key that exists only within the external security module. The system then unwraps (decrypts) the wrapped column key in the external security module to retrieve the column key. Next, the system returns the column key to the database. The system then performs an encryption/decryption operation on data in the database using the column key. Finally, the system erases the column key from memory in the database.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07639819",
	"publication_date": "2009-12-29",
	"application_number": "11156307",
	"application_date": "2005-06-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mobile e-mail confirmation support",
	"summary": "",
	"abstract": "Techniques for providing services to a mobile device not offered on the device are provided. The techniques include intercepting a message from a mobile device at a server. It is then determined if a service should be performed, where the service is not offered on the mobile device. A confirmation message is sent to the mobile device requesting confirmation that the service should be performed. The message is sent in a channel that the mobile device can communicate through. If a reply message is received from the mobile device, it is determined if an action should taken based on the reply message. For example, a confirmation message may ask if the service should be performed and if the answer is yes, the service is then performed.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07570964",
	"publication_date": "2009-08-04",
	"application_number": "11138789",
	"application_date": "2005-05-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Object relational mapping layer",
	"summary": "",
	"abstract": "An integration server system for mapping data objects on a database schema offers a strongly-typed model API, complex constraint management, and association balancing. The integration server system also has improved performance through optimized handling of ordered associations of data object and of string-valued attributes. The integration server system comprises a database schema configured to store a set of data object instances. A metadata model represents a configuration of the set of data object instances in the database schema. A model application programming interface provides a client application with access to the set of data object instances, and a metadata application programming interface provides a client application with access to the set of data object instances via the metadata model.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07599948",
	"publication_date": "2009-10-06",
	"application_number": "10684055",
	"application_date": "2003-10-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Persistent key-value repository with a pluggable architecture to abstract physical storage",
	"summary": "",
	"abstract": "A system and techniques are described for managing key-value pairs using an architecture that does not restrict its users to any specific platform or storage subsystem. According to one aspect of the invention, the repository is portable in that the architecture need not change based on the environment and platform in which the repository is used. Rather, the portion of the architecture that is platform-specific is limited to plug-ins at a storage abstraction layer of the repository. The plug-ins expose the same storage abstraction interface to the other layers of the repository, but are implemented to interact with different platforms and storage subsystems. Consequently, in response to being ported from one platform to another, the repository may simply change the plug-in to invoke for persistent storage operations.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07617218",
	"publication_date": "2009-11-10",
	"application_number": "11404159",
	"application_date": "2006-04-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Policies for modifying group membership",
	"summary": "",
	"abstract": "A policy, associated with a group, controls user subscription to and unsubscription from that group. In one embodiment, there are at least four policies for subscribing/unsubscribing: open, open with filter, control through workflow and closed. An open policy does not restrict subscription or unsubscription. The open with filter policy requires that a user satisfy a rule to subscribe, but does not require that the rule be satisfied to unsubscribe. The control through workflow policy requires a user to subscribe or unsubscribe through a workflow process. A close policy prohibits the subscription to or unsubscription from the group.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07475151",
	"publication_date": "2009-01-06",
	"application_number": "09998898",
	"application_date": "2001-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Reactive audit protection in the database (RAPID)",
	"summary": "",
	"abstract": "A method for proactively enforcing security in a computer system is provided. A plurality of security modification rules is stored for a system. A set of conditions is associated with each security modification rule. Based on one or more audit records generated for the system, the system determines whether the set of conditions associated with any security modification rule has been satisfied. If the system determines that the set of conditions associated with a particular security modification rule has been satisfied, then the system performs an action that modifies one or more security parameters associated with the system, where the action is associated with the violated security modification rule.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07555645",
	"publication_date": "2009-06-30",
	"application_number": "11031052",
	"application_date": "2005-01-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Support Vector Machines in a relational database management system",
	"summary": "",
	"abstract": "An implementation of SVM functionality integrated into a relational database management system (RDBMS) improves efficiency, time consumption, and data security, reduces the parameter tuning challenges presented to the inexperienced user, and reduces the computational costs of building SVM models. A database management system comprises data stored in the database management system and a processing unit comprising a client application programming interface operable to provide an interface to client software, a build unit operable to build a support vector machine model on at least a portion of the data stored in the database management system, and an apply unit operable to apply the support vector machine model using the data stored in the database management system. The database management system may be a relational database management system.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07565370",
	"publication_date": "2009-07-21",
	"application_number": "10927024",
	"application_date": "2004-08-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Suspending a result set and continuing from a suspended result set for transparent session migration",
	"summary": "",
	"abstract": "A system, method, computer program and system for suspending a result set and continuing from a suspended result set for transparent session migration is disclosed. The rows from a row source are suspended into storage, so that after session migration, the client fetches can transparently continue from the suspended result set.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07587400",
	"publication_date": "2009-09-08",
	"application_number": "11097862",
	"application_date": "2005-04-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for automatic data mapping",
	"summary": "",
	"abstract": "A system and method for automatic data mapping of a source object to a target object. Field maps can be automatically determined from the source and target objects, database platform, ETL maps, user-defined and data conversion rules, default values, or other pre-defined parameters. Where a change occurs in the source or target data structure, the present invention ensures proper mapping between the source and target data structures occurs, thus reducing the burden of exception handling on the user and preventing oversight in correcting improper mapping. The present invention can also be used by a compiler to generate SQL steps during compile-time processes to design field maps that can be stored as an application class.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07596573",
	"publication_date": "2009-09-29",
	"application_number": "10458972",
	"application_date": "2003-06-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for managing security meta-data in a reverse proxy",
	"summary": "",
	"abstract": "A system and method for managing security meta-data in a reverse proxy server. The reverse proxy caches data served by an origin server, and also stores security meta-data for authenticating a user and/or authorizing access to cached data. The security meta-data may include an ACL (Access Control List), access control token or descriptor, other access control information, user credentials, user privileges or roles, group membership, user aliases, etc. The reverse proxy may automatically receive access control information from the origin server when a request for data is forwarded to the origin server, or may explicitly request the information from the origin server or a security server. The reverse proxy receives and applies invalidation messages to invalidate stored security meta-data. Also, the reverse proxy acts in a stateful manner, with knowledge of the correlation between a given user and that user's session with the origin server.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07600230",
	"publication_date": "2009-10-06",
	"application_number": "10885338",
	"application_date": "2004-07-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for automation of business knowledge in natural language using rete algorithm",
	"summary": "",
	"abstract": "The present invention is directed to a system for managing business knowledge expressed as statements, preferably sentences using a vocabulary, where such statements may be automated by the generation of programming language source code or computer program instructions. As such, the present invention also manages software design specifications that define, describe, or constrain the programming code it generates or programs with which it or the code it generates is to integrate. All information managed within the present invention is maintained within a relational database that is encapsulated within an object-oriented model. Each object in this model is subject to version control and administration using permissions. Each user of the system is an object and belongs to one or more groups. Users and groups may be granted privileges. Objects may be created, examined, used, modified, deleted, or otherwise operated upon only if corresponding permission or privilege has been granted. The vocabulary managed by the present invention consists of the function words commonly used in a language, such as the auxiliary verbs, prepositions, articles, conjunctions, and other essentially closed parts of speech in English, as well as open parts of speech, such as nouns, verbs, adjectives, and adverbs.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07606782",
	"publication_date": "2009-10-20",
	"application_number": "10296114",
	"application_date": "2001-05-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for using computer graphics techniques to gather histogram data",
	"summary": "",
	"abstract": "A mechanism for gathering information from one or more detectors to aid in a determination of a current location of one or more entities is provided. Embodiments of the present invention perform these tasks by plotting data provided by the detectors onto a grid corresponding to a geographical area monitored by the detectors and then analyzing the plot for overlapping results using graphical techniques. Where measurements overlap, data associated with those measurements is provided to an analysis module to predict location and velocity of the entities. Aspects of the present invention provide an initial prediction of location and/or velocity of an entity in order to reduce convergence time of the analysis module.",
	"url": null,
	"owner": "Overwatch Systems Ltd.",
	"publication_number": "07629981",
	"publication_date": "2009-12-08",
	"application_number": "11592821",
	"application_date": "2006-11-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed simulation",
	"summary": "",
	"abstract": "A method and apparatus are presented to facilitate simulation of complex systems on multiple computing devices. Model authors can specify state-related information to be exported for viewing or access by other applications and models. Subsystem models may be written to enable connection with other subsystem models via controlled interfaces, such as by defining state-related information for export and providing for a particular use of data imported from other models to which a subsystem model is connected. In some embodiments, a consistent distributed simulation API enables cross-platform, multi-device simulation of complex systems, wherein the proprietor of each subsystem simulation can keep its implementation secret but accessible to others.",
	"url": null,
	"owner": "P.C. Krause & Associates, Inc.",
	"publication_number": "07490029",
	"publication_date": "2009-02-10",
	"application_number": "09884528",
	"application_date": "2001-06-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for intelligent routing of data between a remote device and a host system",
	"summary": "",
	"abstract": "An apparatus and method is provided for transparent communication between a remote or mobile device and a fixed communication host network. The apparatus and method may include a remote network controller that logically resides between the host network and the existing infrastructure(s) that are used to provide communications network contact with one or more remote devices. The remote network controller is connected to the host communication network as a protocol-appropriate communications controller so that remote devices are indistinguishable to the host network from the locally-attached devices. Each remote device may be provided with an asynchronous serial data interface to communicate with a mobile data controller. The mobile data controller, in combination with the remote network controller, provides end-to-end data communication such that incompatible protocols are transparent to the remote device and host communication network. A router may be provided which selects a communications network in accordance with user configured parameters. The router communicates over a plurality of incompatible networks and is capable of using a variety of different protocols. Switching between the plurality of incompatible networks is transparent to the remote device and host communication network.",
	"url": null,
	"owner": "Padcom Holdings, Inc.",
	"publication_number": "07602782",
	"publication_date": "2009-10-13",
	"application_number": "11743313",
	"application_date": "2007-05-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and methods for providing directional commands for a mobile computing device",
	"summary": "",
	"abstract": "Various embodiments for providing directional commands for a mobile computing device are described. In one or more embodiments, a mobile computing device may comprise a keypad arranged to operate in multiple modes including a standard mode and a directional mode such as a gaming mode, for example. The standard mode may support all of the preset and programmable commands and functions typically provided for normal operation of the mobile computing device. The directional mode may associate certain directional commands with multiple keys and/or buttons of the keypad so that most keystrokes and keystroke combinations input by a user will be interpreted as a particular directional command. The directional mode may be used when running applications which respond primarily to directional commands such as gaming applications. Other embodiments are described and claimed.",
	"url": null,
	"owner": "Palm, Inc.",
	"publication_number": "07599712",
	"publication_date": "2009-10-06",
	"application_number": "11535683",
	"application_date": "2006-09-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Handheld threading",
	"summary": "",
	"abstract": "The present invention determines which messages to display in message threads to a user. An electronic communication device receives and stores numerous SMS messages transported through an SMS network, but the SMS messages are sent without explicit linking information such as a previous message or subject line. A threading module applies threading rules to determine which messages to correlate into an SMS message thread through implicit link information. The threading rules thread outgoing messages sent in response to an incoming message from a user, or incoming messages where a previous outgoing message was sent to the user. An SMS application displays threads in a user interface and indicates messages threads with an icon in one view, and displays an expanded message thread in another view.",
	"url": null,
	"owner": "Palm, Inc.",
	"publication_number": "07620407",
	"publication_date": "2009-11-17",
	"application_number": "10759597",
	"application_date": "2004-01-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integrated handheld computing and telephony system and services",
	"summary": "",
	"abstract": "Disclosed is an integrated handheld computer and telephony system. Integration of the handheld computer and telephony system is at the physical and operational level. For example, the integrated handheld computer and telephony system physically integrates a handheld computer with a mobile (e.g., cellular) telephone. In addition, the handheld computer is distinct from telephony system in that they are logically separable. However, they are also operationally integrated, for example, the telephony system executes a telephone application on the processor of the handheld computer. Likewise, the handheld computer can execute applications, for example, a phone book, that can be used to launch the telephony application.",
	"url": null,
	"owner": "Palm, Inc.",
	"publication_number": "07555727",
	"publication_date": "2009-06-30",
	"application_number": "11231631",
	"application_date": "2005-09-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Master multimedia software controls",
	"summary": "",
	"abstract": "A software control mechanism is disclosed for use with a plurality of media applications. The software control mechanism comprises a media control panel structured for use with a plurality of media applications. The media control panel is independent of each media application. Each media application is displayed within a computer screen. The software control mechanism is structured to control a function of a presently interfaced media application on the display screen. Further, as the presently interfaced media application changes on the display screen, the media control panel for that media application is displayed along a same boundary of the computer screen.",
	"url": null,
	"owner": "Palm, Inc.",
	"publication_number": "07559027",
	"publication_date": "2009-07-07",
	"application_number": "11365985",
	"application_date": "2006-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed meta data management middleware",
	"summary": "",
	"abstract": "A meta data management system for use with a surveillance system includes a user interface that allows users to define rules to manage meta data from distributed devices. An application programming interface provides an application access to system data and control information. A mechanism allows the application to transparently and seamlessly integrate with different types of databases by transparently allocating and searching the data that are physically distributed at different devices.",
	"url": null,
	"owner": "Panasonic Corporation",
	"publication_number": "07567956",
	"publication_date": "2009-07-28",
	"application_number": "11354774",
	"application_date": "2006-02-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Playback apparatus for performing application-synchronized playback",
	"summary": "",
	"abstract": "A playback apparatus for playing a digital stream in conjunction with an application includes a package management unit operable to generate package information by merging files recorded on a first recording medium and a second recording medium, in accordance with merge management information, and a selection unit operable to detect a plurality of playable titles from the package information, and select one of the detected titles as a current title. After the application requests the package management unit to update the merge management information, by specifying new merge management information, the package management unit changes a file referenced from the newly specified merge management information to read-only before updating the package information, and at a point at which digital stream playback stops due to a current title change by the selection unit, the package management unit generates new package information by combining files recorded on the first and second recording media, in accordance with the newly specified merge management information.",
	"url": null,
	"owner": "Panasonic Corporation",
	"publication_number": "07616864",
	"publication_date": "2009-11-10",
	"application_number": "10596109",
	"application_date": "2005-07-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Receiving device, printer, and firmware update system",
	"summary": "",
	"abstract": "A set top box (), to which a printer () is connected, includes: a reception unit () to receive update data for updating a firmware of the printer and a display content which includes a description indicating that the update data is to be printed; a display data generation unit () to generate display data for displaying the display content on the TV (); a remote control reception unit () to receive a print command for the display content; and a print output unit () to output, to the printer (), the update data, as data to be printed, when the remote control reception unit () receives the print command.",
	"url": null,
	"owner": "Panasonic Corporation",
	"publication_number": "07595902",
	"publication_date": "2009-09-29",
	"application_number": "10508813",
	"application_date": "2003-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Object visibility control for ray tracing",
	"summary": "",
	"abstract": "A computer graphics method and apparatus allows designer control over the rendering of objects and scenes, in a rendering system using ray tracing for example. A modeling system is adapted to accept rules for controlling how certain objects affect the appearance of certain other objects. In a ray tracing implementation, rules are specified by ray type and can be specified as either u201cincludingu201d all but certain objects or u201cexcludingu201d specific objects for any given object. A rendering system extracts these rules from a bytestream or other input including other graphics data and instructions, and populates lists for internal use by other components of the rendering system. A ray tracer in the rendering system is adapted to consult the list when performing ray tracing, so as to enforce the rendering control specified by the content creator when the objects and scene are rendered.",
	"url": null,
	"owner": "Pasternak Solutions, LLC",
	"publication_number": "07479960",
	"publication_date": "2009-01-20",
	"application_number": "11244417",
	"application_date": "2005-10-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application manager for monitoring and recovery of software based application processes",
	"summary": "",
	"abstract": "A constant monitoring and recovery system that enables the measurement of task usage/metrics and performance of software-based business applications. These metrics can then be evaluated by logic, in combination with each other and/or a timer, in a distributed environment. This is accomplished with the introduction of an extremely low overhead to the application host. The results of the logic evaluation can cause real-time and real-world responses such as application restart, interaction with load balancing equipment, or notification (via email, pager, etc.). Data can also be persisted to a database for later archival or evaluation, with the ability to reduce granularity over time. Specifically, an application manager monitors business application processes, notifies failure and automatically recovers software based business applications based on the logic of the underlying applications. The application manager comprises three main components that work together: Instrumentation API for setting up monitoring parameters; Event Notification and Automatic Recovery Evaluation Engine; Monitoring Console Server.",
	"url": null,
	"owner": "Path Reliability, Inc.",
	"publication_number": "07526685",
	"publication_date": "2009-04-28",
	"application_number": "11376750",
	"application_date": "2006-03-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Characterizing context-sensitive search results as non-spam",
	"summary": "",
	"abstract": "Methods and apparatus assessing, ranking, organizing, and presenting search results associated with a user's current work context are disclosed. The system disclosed assesses, ranks, organizes and presents search results against a user's current work context by comparing statistical and heuristic models of the search results to a statistical and heuristic model of the user's current work context. In this manner, search results are assessed, ranked, organized, and/or presented with the benefit of attributes of the user's current work context that are predictive of relevance, such as words in a user's document (e.g., web page or word processing document) that may not have been included in the search query. In addition, search results from multiple search engines are combined into an organization scheme that best reflects the user's current task. As a result, lists of search results from different search engines can be more usefully presented to the user.",
	"url": null,
	"owner": "Perfect Market, Inc.",
	"publication_number": "07617199",
	"publication_date": "2009-11-10",
	"application_number": "11669826",
	"application_date": "2007-01-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Displaying context-sensitive ranked search results",
	"summary": "",
	"abstract": "Methods and apparatus assessing, ranking, organizing, and presenting search results associated with a user's current work context are disclosed. The system disclosed assesses, ranks, organizes and presents search results against a user's current work context by comparing statistical and heuristic models of the search results to a statistical and heuristic model of the user's current work context. In this manner, search results are assessed, ranked, organized, and/or presented with the benefit of attributes of the user's current work context that are predictive of relevance, such as words in a user's document (e.g., web page or word processing document) that may not have been included in the search query. In addition, search results from multiple search engines are combined into an organization scheme that best reflects the user's current task. As a result, lists of search results from different search engines can be more usefully presented to the user.",
	"url": null,
	"owner": "Perfect Market, Inc.",
	"publication_number": "07617200",
	"publication_date": "2009-11-10",
	"application_number": "11669832",
	"application_date": "2007-01-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Organizing context-sensitive search results",
	"summary": "",
	"abstract": "Methods and apparatus assessing, ranking, organizing, and presenting search results associated with a user's current work context are disclosed. The system disclosed assesses, ranks, organizes and presents search results against a user's current work context by comparing statistical and heuristic models of the search results to a statistical and heuristic model of the user's current work context. In this manner, search results are assessed, ranked, organized, and/or presented with the benefit of attributes of the user's current work context that are predictive of relevance, such as words in a user's document (e.g., web page or word processing document) that may not have been included in the search query. In addition, search results from multiple search engines are combined into an organization scheme that best reflects the user's current task. As a result, lists of search results from different search engines can be more usefully presented to the user.",
	"url": null,
	"owner": "Perfect Market, Inc.",
	"publication_number": "07627565",
	"publication_date": "2009-12-01",
	"application_number": "11669833",
	"application_date": "2007-01-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for processing speech using dynamic grammars",
	"summary": "",
	"abstract": "Speech data is processed with one or more dynamic grammars, to reduce latency and improve accuracy. Different speech grammars are used by a speech recognition process depending on a context experienced by a speaker, and sentence grammars are similarly varied during a natural language process. The methods are useful for distributed speech recognition systems such as a client-server system, typically implemented on an intranet or over the Internet based on user queries at his/her computer, a PDA, or a workstation using a speech input interface.",
	"url": null,
	"owner": "Phoenix Solutions, Inc.",
	"publication_number": "07555431",
	"publication_date": "2009-06-30",
	"application_number": "10792674",
	"application_date": "2004-03-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for natural language processing of sentence based queries",
	"summary": "",
	"abstract": "Sentence based queries from a user are analyzed using a natural language engine to determine appropriate answers from an electronic database. The system and methods are useful for Internet based search engines, as well as distributed speech recognition systems such as a client-server system. The latter are typically implemented on an intranet or over the Internet based on user queries at his/her computer, a PDA, or a workstation using a speech input interface.",
	"url": null,
	"owner": "Phoenix Solutions, Inc.",
	"publication_number": "07624007",
	"publication_date": "2009-11-24",
	"application_number": "11003842",
	"application_date": "2004-12-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "User-friendly rule-based system and method for automatically generating photomask orders",
	"summary": "",
	"abstract": "A system for generating photomask orders in a specified format includes at least one template or order for entry and storage of photomask order data, wherein the at least one template or order is created based upon requirements of a specified photomask order format. The system includes at least one set of rules corresponding to the at least one template or order, wherein the set of rules includes instructions which insure that a user enter complete information into the at least one template or order as required by the specified order format. The templates or order may be further comprised of components and/or subcomponents which can be stored separately. The data fields in the orders, templates, components, subcomponents, etc. may reference specification grades which can in turn be easily modified to update one or more orders, templates, components, subcomponents, etc. simultaneously.",
	"url": null,
	"owner": "Photronics, Inc.",
	"publication_number": "07640529",
	"publication_date": "2009-12-29",
	"application_number": "10981201",
	"application_date": "2004-11-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data storage and retrieval system with optimized categorization of information items based on category selection",
	"summary": "",
	"abstract": "A data storage and retrieval system with optimized categorization of information items using intelligent category selection, based on the information items that are to be checked for category membership. The set of categories for which an information item may be a candidate member is determined, and only that set of categories is checked for membership of the information item during the categorization process. The determination of which categories an information item can be a candidate member of is based on the properties defined for that information item, which are compared to the properties checked for category membership of specific categories. A category index tree may be built and maintained to support efficient determination of which categories a given information item may be a candidate member of. The efficiency of categorization provided by the disclosed techniques enables the disclosed system to maintain category definitions indefinitely with minimal performance impact.",
	"url": null,
	"owner": "PI Corporation",
	"publication_number": "07555486",
	"publication_date": "2009-06-30",
	"application_number": "11205630",
	"application_date": "2005-08-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data storage and retrieval system with parameterized category definitions for families of categories and dynamically generated search indices",
	"summary": "",
	"abstract": "A data storage and retrieval system with parameterized category definitions and dynamically generated search indices. A parameterized category definition for a family of categories is obtained consisting of a parameterized predicate, such that parameter values can be provided with a search query to identify information items that match a category within the family of categories. The parameterized category definition is divided into a parameterized part and a static part. The static part is used to create associations between information items and the family of categories. The disclosed system processes the parameterized part of the category family definition to dynamically generate one or more search indices. The disclosed system determines whether any existing indices match the parameters of the parameterized part, and can accordingly be re-used. In the case where one or more indices are missing that are needed to support the parameterized part of the category family definition, the disclosed system operates to create them based on information items associated with the family of categories based on the static part of the parameterized category definition. Queries supplying values for the parameters of the parameterized category definition for the family of categories are subsequently processed to identify information items belonging to specific, dynamically defined categories within the family of categories.",
	"url": null,
	"owner": "PI Corporation",
	"publication_number": "07480674",
	"publication_date": "2009-01-20",
	"application_number": "11205576",
	"application_date": "2005-08-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic linking in constrained environment",
	"summary": "",
	"abstract": "A platform independent binary object (PIBO) operable on disparate computing environments that have a selected hardware architecture without requiring rebuilding or reloading is provided. The PIBO can be parsed to generate source-code stub file. The PIBO can be loaded and linked with a cooperating computing application by an exemplary linker/loader employing the stub file. Also, the PIBO can be used in various contexts, including but not limited to, as a mechanism for dynamically linking shared objects on platforms that do not offer such native facility; in utilizing pre-written code components on platforms that otherwise would be incompatible due to a violation of platform constraints within particular code; as a mechanism for loading non object-oriented code that circumvents restrictions of multiple execution instances and repeat execution inherent in the code; and as mechanism that allows for the use of a binary object to add on functionality on a closed platform.",
	"url": null,
	"owner": "Picsel (Research) Limited",
	"publication_number": "07533376",
	"publication_date": "2009-05-12",
	"application_number": "10964232",
	"application_date": "2004-10-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "User interface systems and methods for viewing and manipulating digital documents",
	"summary": "",
	"abstract": "Systems, including handheld computing devices that include system code stored within the memory and adapted to be executed by the processor. The system code can process an input byte stream that is representative of contents to be displayed on the touch sensitive display and can generate a content document file representative of an internal representation of the content. A tool document file may also be stored in the memory and may provide an internal representation of a document providing an image that is representative of a graphical tool. Associated with a tool document can be tool code that is capable of processing the content document file to create an internal representation of the contents that presents the content in a manner that achieves a display effect associated with the tool. The device will also include parsing code that processes the content document file, the tool document file, and the processed internal representation to generate a screen document for display on the touch sensitive display in a manner that portrays the display effect.",
	"url": null,
	"owner": "Picsel (Research) Limited",
	"publication_number": "07576730",
	"publication_date": "2009-08-18",
	"application_number": "10813285",
	"application_date": "2004-03-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Renderfarm monitoring system",
	"summary": "",
	"abstract": "A renderfarm monitoring system collects and aggregates comprehensive renderfarm information from a distributed scheduling system. Listener modules interface with dispatcher modules. The dispatcher modules queue jobs and tasks and request processing for those tasks in which the required input data is available. The listener modules receive streams of events from dispatcher modules indicating the status of all associated jobs and tasks. The listener modules also receive system status information from renderfarm and user computers. Renderfarm usage information, such as jobs, tasks, and system status, is aggregated by a database system. Client applications can access renderfarm usage information from the database system and use this information to monitor, analyze, visualize, and control renderfarm activities. Additionally, renderfarm usage information associated with tasks can be used to prioritize the jobs, improving overall renderfarm efficiency.",
	"url": null,
	"owner": "Pixar",
	"publication_number": "07577955",
	"publication_date": "2009-08-18",
	"application_number": "11072836",
	"application_date": "2005-03-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for bio-metric voice print authentication",
	"summary": "",
	"abstract": "A method () and system () for authenticating a user is provided. The method can include receiving one or more spoken utterances from a user (), recognizing a phrase corresponding to one or more spoken utterances (), identifying a biometric voice print of the user from one or more spoken utterances of the phrase (), determining a device identifier associated with the device (), and authenticating the user based on the phrase, the biometric voice print, and the device identifier (). A location of the handset or the user can be employed as criteria for granting access to one or more resources ().",
	"url": null,
	"owner": "Porticus, Inc.",
	"publication_number": "07536304",
	"publication_date": "2009-05-19",
	"application_number": "11420190",
	"application_date": "2006-05-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program for facet analysis",
	"summary": "",
	"abstract": "Automated facet analysis of input information selected from a domain of information in accordance with a source data structure is described. Facet analysis may proceed by discovering at least one of facets, facet attributes, and facet attribute hierarchies of the input information using pattern augmentation and statistical analyses to identify patterns of facet attribute relationships in the input information.",
	"url": null,
	"owner": "Primal Fusion Inc.",
	"publication_number": "07606781",
	"publication_date": "2009-10-20",
	"application_number": "11550457",
	"application_date": "2006-10-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Complex-adaptive system for providing a facted classification",
	"summary": "",
	"abstract": "A complex-adaptive system is described for providing a faceted classification of a domain of information. A dimensional concept taxonomy classifying a domain may be constructed from a faceted data set comprising facets, facet attributes, and facet attribute hierarchies. An enhanced method of faceted classification provides the taxonomy which assigns facet attributes to objects of the domain to be classified in accordance with concepts (defined using the facet attributes) that ascribe meaning to the objects. Further the taxonomy expresses dimensional concept relationships between concept definitions in accordance with the faceted data set. The complex-adaptive system selects dimensional concept taxonomy information to facilitate varying the faceted data set and subsequent iterations of the taxonomy. The complex-adaptive system may involve a machine-based approach using statistical analysis of source data structures or user interactions with the taxonomy to provide the feedback. Computer system, method and software aspects are provided.",
	"url": null,
	"owner": "Primal Fusion, Inc.",
	"publication_number": "07596574",
	"publication_date": "2009-09-29",
	"application_number": "11469258",
	"application_date": "2006-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Electronic message management",
	"summary": "",
	"abstract": "In accordance with embodiments of the invention, message management services are provided for creating and/or adapting electronic messages with digital content items.",
	"url": null,
	"owner": "Prolifiq Software Inc.",
	"publication_number": "07634556",
	"publication_date": "2009-12-15",
	"application_number": "11296587",
	"application_date": "2005-12-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data security and intrusion detection",
	"summary": "",
	"abstract": "Systems and methods are provided for the detection and prevention of intrusions in data at rest systems such as file systems and web servers. Item requests are examined to determine if the request and/or the result violates an item access rule. If either the request or the result violates the item access rule, an access control manager is alerted and appropriate action is taken such as not complying with the item request. Embodiments of the invention also produce a scorecard to represent the severity of an intrusion threat.",
	"url": null,
	"owner": "Protegrity Corporation",
	"publication_number": "07594266",
	"publication_date": "2009-09-22",
	"application_number": "11540467",
	"application_date": "2006-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Event data translation system",
	"summary": "",
	"abstract": "An event translator system for receiving input information, parsing event data on the input information to produce a result event data set and generating an event list based on an analysis of the event the result data set, performing an event listing and displaying event list to a user interface module. The event translation system translating event data also include receiving user feedback on the event listing and using the user feedback to improve subsequent operations of at least one harvesting algorithm. Translating event data also includes at least two harvesting algorithms for performing the input information to generate a plurality of result event data sets and creating an event listing for display to a user interface module based on an analysis of the plurality of result event data sets.",
	"url": null,
	"owner": "Public Display, Inc.",
	"publication_number": "07577963",
	"publication_date": "2009-08-18",
	"application_number": "11648165",
	"application_date": "2006-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dedicated application interface for network systems",
	"summary": "",
	"abstract": "Method and system for receiving and sending network packets from a network is provided. The system includes, a host processor that executes an operating system for a host system and at least one application that runs in a context that is different from a context of the operating system; and a network adapter with a hardware device that can run a network protocol stack, wherein the application can access the network adapter directly via an application specific interface layer without using the operating system.",
	"url": null,
	"owner": "QLOGIC, Corporation",
	"publication_number": "07639715",
	"publication_date": "2009-12-29",
	"application_number": "11223693",
	"application_date": "2005-09-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for processing network data packets",
	"summary": "",
	"abstract": "A method for processing IP datagrams using an outbound processing state machine in an outbound processor, wherein the IP datagrams are generated by a host system is provided. The method includes, creating an IOCB with plural host memory addresses that define host data to be sent and a host memory address of a network control block (u201cNCBu201d) used to build network protocol headers, wherein the host sends the IOCB to the outbound processor. The outbound processor reads the NCB from host memory and creates an IP and MAC level protocol header(s) for a data packet(s) used to send the IP data. If a datagram fits into an IP packet, the outbound processor builds headers to send the datagram and then uses the plural host memory addresses defining the host data to read the data from the host, places the data into the packet and sends the packet.",
	"url": null,
	"owner": "QLOGIC, Corporation",
	"publication_number": "07515612",
	"publication_date": "2009-04-07",
	"application_number": "10619719",
	"application_date": "2003-07-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and methods for managing malfunctions on a wireless device",
	"summary": "",
	"abstract": "Apparatus and methods for managing predetermined malfunction events in a wireless device operating in a wireless communications network. Malfunction event data and operational data are recorded by the wireless device based on a selected malfunction event tracking configuration. Further, a recovery module associated with the wireless device operates to attempt to recover information leading up to and including the malfunction event. The collected information may be transmitted to a user manager in the form of a malfunction event log. The malfunction event log may be analyzed to characterize the malfunction, and is particularly useful for determining the sequence and identity of events leading to the malfunction, including a crash, freeze and reset.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "07561877",
	"publication_date": "2009-07-14",
	"application_number": "11251433",
	"application_date": "2005-10-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Efficient use of communication channel for periodic/occasional lower-priority and/or opportunistic data exchanges",
	"summary": "",
	"abstract": "A method for transferring data that includes the formulation of a set of criteria that includes a first subset of the criteria and a second subset of the criteria, the first subset of the criteria corresponding to one or more triggering events, the second subset of the criteria corresponding to a group of conditions of a communication link required for a data transfer between a first entity and a second entity, the group consisting of a timing to request data and a timing for the data transfer, a determination that the criteria in the first subset has been met which triggers an evaluation of the criteria in the second subset, a determination that the set of criteria has been met; and the initiation of the data transfer between the first entity and the second entity in response to meeting the set of criteria.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "07565447",
	"publication_date": "2009-07-21",
	"application_number": "10727688",
	"application_date": "2003-12-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "M-commerce virtual cash system, method, and apparatus",
	"summary": "",
	"abstract": "A virtual cash system, method, and apparatus has an account record containing a record of money amounts associated with a wireless device and a transmitter for wirelessly transmitting to the wireless device predetermined information from the account record. Cash amounts can be spent from the account record directly from the wireless device via information derived from the wireless device via a bar code on the display, a short range radio signal, a light beam, or the like. A different security code is generated for each account transaction for verification.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "07552867",
	"publication_date": "2009-06-30",
	"application_number": "11376981",
	"application_date": "2006-03-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for carrier customization in communication systems",
	"summary": "",
	"abstract": "A method of customizing a wireless device to a predetermined configuration is described. A wireless device configured with at least one carrier-specific parameter for a first carrier is modified to access at least one carrier-specific parameter for a second carrier during operation of the wireless device and responsive to a predetermined network switch input received by the wireless device. A carrier customization module system for a wireless device includes a carrier customization module loader executed by the wireless device which is configured with at least one carrier-specific parameter for a first carrier. The loader selects at least one carrier-specific parameter for a second carrier from among one or more carrier-specific parameters during operation of the wireless device and responsive to a predetermined network switch input received by the wireless device. The loader modifies the wireless device to access the second carrier using the selected carrier-specific parameter for the second carrier.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "07636333",
	"publication_date": "2009-12-22",
	"application_number": "11280718",
	"application_date": "2005-11-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for delivering content based on receivers characteristics",
	"summary": "",
	"abstract": "Media distribution systems may include methods and apparatus to perform memory management on a wireless devices configured to receive non-real time portions of media services. Such methods and apparatus may be based upon an allowable capacity of presentations storable in device memory, as well as on a required memory associated with each presentation in a media service. Such methods and apparatus allow a device to subscribe to a media service based upon sufficient available memory in the device to support the service.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "07565506",
	"publication_date": "2009-07-21",
	"application_number": "11270413",
	"application_date": "2005-11-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for optimization of SigComp UDVM performance",
	"summary": "",
	"abstract": "A signal compression optimization system between a communication network and wireless user equipment advantageously selects an optimized decompressor when feasible for reduced content processing latency and otherwise selects a virtual machine decompressor, such as a Universal Decompressor Virtual Machine (UDVM) that interprets the received decompression bytecode. Since the UDVM is not optimized for any particular decompression algorithm and suffers by the requisite delays associated with analyzing each statement in the bytecode before execution, being able to avoid use of the UDVM whenever possible enhances user experience in presenting wirelessly received signaling messages or media content.",
	"url": null,
	"owner": "Qualcomm Incorporated",
	"publication_number": "07561081",
	"publication_date": "2009-07-14",
	"application_number": "11776374",
	"application_date": "2007-07-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for dial string to contact matching in a wireless communication device",
	"summary": "",
	"abstract": "Methods, devices, computer program products and systems for contact matching that is based on changing the dial string to include or delete codes. The described aspects provide for contact matching and subsequent display of contact information to occur in most instances in- which a connection occurs and for no matching and no subsequent display of contact information to occur in most instances in which a connection does not occur. The described aspects, systems and apparatus overcome problems related to an exact match scheme, which fails to provide contact information in many instances in which a call connection occurs, and a last, seven, or any other number, digit match scheme, which may provide contact information in instances in which a call connection cannot he made or is made to an unintended device.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "07616969",
	"publication_date": "2009-11-10",
	"application_number": "11615320",
	"application_date": "2006-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods, systems and apparatus for integrated wireless device location determination",
	"summary": "",
	"abstract": "Methods, devices, and systems are presented for integrated wireless device location determination. A method for determining location on a wireless device includes receiving a request for wireless device location and receiving a plurality of wireless network messages. Each message is transmitted from a wireless network edge device associated with one of a plurality of wireless networks. Further included is obtaining location measurement information from the received wireless network messages and obtaining location determining assistance information for each of the wireless networks associated with the received wireless network messages. The method further includes determining more than one wireless device location based on the location measurement information and the location determining assistance information, determining an integrated wireless device location based on the more than one wireless device location, validating and storing the integrated wireless device location. A method for determining wireless device location at a network device is also provided.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "07595754",
	"publication_date": "2009-09-29",
	"application_number": "11963889",
	"application_date": "2007-12-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems, devices and methods for providing a reward based upon use of a mobile communications device",
	"summary": "",
	"abstract": "The disclosed embodiments provide systems, devices and methods for providing a reward to a user of a mobile communications device. The described embodiments, for example, may include a mobile communications device that exchanges query data and response data, with a computer system over a communications network. The computer system includes an evaluation application operable to determine a predetermined reward based on, at least in part, the received response data. The response data is received by the mobile communications device from the user in response to query data presented to the user by the mobile communications device. The predetermined reward, for example, may affect an operational characteristic of the mobile communications device on the wireless network. Also disclosed are systems, devices and methods that include an outcome application, associated with the computer system, that generates an outcome determination based on, at least in part, the response data.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "07640032",
	"publication_date": "2009-12-29",
	"application_number": "12102465",
	"application_date": "2008-04-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Test enabled application execution",
	"summary": "",
	"abstract": "A method for executing an application on a wireless device is provided. The method includes receiving, at the wireless device, a test permission that indicates the wireless device is authorized to execute the application on a wireless network in a testing capacity. The test permission is associated with the wireless device. The method further includes requesting the execution of the application on the wireless device and evaluating whether the wireless device includes the test permission. If the wireless device includes the test permission, the method further includes executing the application on the wireless device. The application is executed on the wireless device even if the application includes other permissions necessary to execute the application on the wireless device or the wireless network.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "07536172",
	"publication_date": "2009-05-19",
	"application_number": "11466036",
	"application_date": "2006-08-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Environmentally-controlled network interface device and methods",
	"summary": "",
	"abstract": "Certain embodiments of the invention provide network interface devices, as well as systems and methods for using them. In accordance with some embodiments, a network interface device may provide a controlled environment for an interior space defined by the exterior of network interface device. The network interface device may further be configured to be exposed to an interior of a subscriber premises and/or to allow for thermal transfer between the interior of the subscriber premises and the interior of the network interface device. In particular embodiments, the network interface device may be configured to be disposed at least partially within an external wall of the subscriber premises. In some cases, a portion of the network interface device exposed to the exterior of the subscriber premises may be insulated and/or one or more openings may be provided in the portion of the network interface device exposed to the interior of the subscriber premises, which can allow air to circulate between the interior of the subscriber premises and the interior of the network interface device.",
	"url": null,
	"owner": "Qwest Communications International Inc.",
	"publication_number": "07474742",
	"publication_date": "2009-01-06",
	"application_number": "10857259",
	"application_date": "2004-05-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methods for providing telecommunication services",
	"summary": "",
	"abstract": "Systems and methods are disclosed for providing telecommunication services. In one embodiment, the system comprises an antenna at a customer premises, to transmit outbound voice communications in a wireless protocol and to receive inbound voice communications in the wireless protocol. A demarcation device is coupled with the antenna converts inbound voice communications from the wireless protocol to a wired format and converts outbound voice communications from the wired format to the wireless protocol. An interface to the customer premises is coupled with the demarcation device. The interface transmits inbound voice communications in the wired format to the customer premises via a first internal transport medium and transmits outbound voice communications received in the wired format on the first internal transport medium to the demarcation device.",
	"url": null,
	"owner": "Qwest Communications International Inc.",
	"publication_number": "07480503",
	"publication_date": "2009-01-20",
	"application_number": "10874110",
	"application_date": "2004-06-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network interface device having virtual private network capability",
	"summary": "",
	"abstract": "A method for providing the communication of information services between customer premises equipment (CPE) at a customer's premises and a source of the information services includes providing a demarcation device at the customer's premises. The demarcation device defines an interface between an external transport medium that is substantially external to the customer's premises and an internal transport medium that is substantially internal to the customer's premises. The method also includes establishing a virtual private network (VPN) between the demarcation device and the source of information services and establishing a virtual local area network (VLAN) between the demarcation device and the CPE.",
	"url": null,
	"owner": "Qwest Communications International, Inc.",
	"publication_number": "07480369",
	"publication_date": "2009-01-20",
	"application_number": "10715881",
	"application_date": "2003-11-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for emulating a wireless network",
	"summary": "",
	"abstract": "A method and system for supporting data transfers between legacy application pairs and IP application pairs. An emulation module emulates a wireless connection such that a legacy application believes it is communicating directly with the wireless network. Data from one or more legacy applications and one or more IP applications can be multiplexed and data from the legacy applications and the IP applications encrypted and/or compressed prior to transfer between the application pairs.",
	"url": null,
	"owner": "Radio IP Software, Inc.",
	"publication_number": "07483405",
	"publication_date": "2009-01-27",
	"application_number": "10776296",
	"application_date": "2004-02-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software encoder for encoding digital audio streams",
	"summary": "",
	"abstract": "An encoder for encoding digital streaming media at a studio site, in which the encoder is a software encoder which uses an IP based protocol to communicate with a remote, central multiplexer. Because the encoder is a software encoder, it is significantly cheaper than conventional, dedicated hardware; the encoder can typically run on a PC or industrial PC. As an IP based protocol is used, the present invention is cheaper to implement than STI over G703/4 or a WG1/2 bus. Similarly, handling reconfiguration data is possible over IP and the software of the encoder also leads to increased reconfigurability. Placing the encoder at the studio site also eliminates the conventional need for extra codes in a central multiplexing paradigm, further reducing cost and increasing quality.",
	"url": null,
	"owner": "Radioscape Limited",
	"publication_number": "07492786",
	"publication_date": "2009-02-17",
	"application_number": "10296735",
	"application_date": "2001-05-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Modular and expandable irrigation controller",
	"summary": "",
	"abstract": "Described herein are several embodiments relating to modular irrigation controllers. In many implementations, the irrigation controllers are modular in that various functional components of the irrigation controller are implemented in removable modules that when inserted into position within the controller, expand the capabilities of the controller. Also described are various different types of expansion modules that may be coupled to the modular controller, having as variety of functions and features, as well as related methods of use and configuration of these modules in the controller.",
	"url": null,
	"owner": "Rain Bird Corporation",
	"publication_number": "07640079",
	"publication_date": "2009-12-29",
	"application_number": "11022329",
	"application_date": "2004-12-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed communications effects module",
	"summary": "",
	"abstract": "A distributed communications effects module (DCEM) method, apparatus, and computer medium are adapted to provide communications effects to a simulated message in a distributed simulation in order to enhance the ability of the distributed simulation to model real-world behavior.",
	"url": null,
	"owner": "Raytheon Company",
	"publication_number": "07620537",
	"publication_date": "2009-11-17",
	"application_number": "11148617",
	"application_date": "2005-06-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data distribution service and database management systems bridge",
	"summary": "",
	"abstract": "A bridge to integrate representation of global data space in Data Distribution Service (DDS) and Data Management Systems (DBMS). The DDS concept of a keyed topic and a type is mapped to the DBMS notion of a keyed table and schema representing data-object instances. Rules are specified for translating between a DBMS table record and the DDS wire format representation. Four bridge components are possible: Bridge-DDS-DBMS-Publication to store outgoing published data; Bridge-DDSDBMS-Subscription to store incoming subscribed data; Bridge-DBMS-DDS-Publication to publish changes to a DBMS table; and Bridge-DBMS-DDS-Subscription to update a DBMS Table based on received data subscriptions from the network. Mechanisms are provided for preventing publication of data seen by DDS, and for preventing application of changes already made in a DBMS table. Use cases include: data caching in a database; automatic persistency of all (or selected) global data-objects; distributing database contents; and multi-vendor database content transfer.",
	"url": null,
	"owner": "Real-Time Innovations, Inc.",
	"publication_number": "07533128",
	"publication_date": "2009-05-12",
	"application_number": "11253504",
	"application_date": "2005-10-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for presence determination of mobile devices",
	"summary": "",
	"abstract": "Largely in response to the tremendous growth of allied presence services and applications to wireless users, an improved method and system for wireless subscriber presence determination is disclosed hereunder, which seeks to assuage the strain and impact on network resources which the existing art facilitate.",
	"url": null,
	"owner": "Redknee Inc.",
	"publication_number": "07515919",
	"publication_date": "2009-04-07",
	"application_number": "11399437",
	"application_date": "2006-04-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Wireless classroom system allowing user to access a particular classroom by selecting corresponding network from a list of wireless networks",
	"summary": "",
	"abstract": "A wireless classroom response system includes multiple wireless networks, each serving a different classroom. Each network has a computer located proximate to the classroom that the wireless network serves. The computer executes a communications server and an application program, wherein the application program facilitates classroom activities. The system also includes a wireless access point located proximate to the classroom. The wireless access point is communicatively linked to the computer. The system also has a plurality of handheld units. Each handheld unit displays, to a user, a list of the networks, and receives a user input indicating which one of the wireless networks the handheld unit should connect. The handheld unit connects to the chosen wireless network, thereby becoming a node in the wireless network. It also transmits data to the application program via the wireless access point and the communications server.",
	"url": null,
	"owner": "Renaissance Learning, Inc.",
	"publication_number": "07502855",
	"publication_date": "2009-03-10",
	"application_number": "11474906",
	"application_date": "2006-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Certificate management and transfer system and method",
	"summary": "",
	"abstract": "A method and system for Certificate management and transfer between messaging clients are disclosed. When communications are established between a first messaging client and a second messaging client, one or more Certificates stored on the first messaging client may be selected and transferred to the second messaging client. Messaging clients may thereby share Certificates. Certificate management functions such as Certificate deletions, Certificate updates and Certificate status checks may also be provided.",
	"url": null,
	"owner": "Research In Motion Limited",
	"publication_number": "07546453",
	"publication_date": "2009-06-09",
	"application_number": "10480615",
	"application_date": "2002-06-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Limited lifespan for outgoing data at a mobile device",
	"summary": "",
	"abstract": "An outgoing message may be generated, at a mobile communication device, based on a received application definition document, which indicates a lifespan for the message. In conjunction with generating a message in accordance with a format provided in the application definition document, a message expiry time may be generated. The message may be stored in a queue for transmission. Additionally, an indication of the expiry time may be stored in the queue in association with the message. The expiry time of the message may periodically be compared to the current time to determine whether the message has expired. Upon expiry, a user of the mobile communication device may be presented with the option to cancel transmission of the message or re-attempt transmission.",
	"url": null,
	"owner": "Research In Motion Limited",
	"publication_number": "07623877",
	"publication_date": "2009-11-24",
	"application_number": "11460744",
	"application_date": "2006-07-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for provisioning a communications client on a host device",
	"summary": "",
	"abstract": "An apparatus for provisioning a data communications client on a host communications device, the host communications device adapted to operate on a communications network, the apparatus comprising: a first data store adapted to store variant configuration information; a second data store adapted to store provisioning information; a provisioning module adapted to select the provisioning information stored in said second data store as a function of the variant configuration information stored in said first data store and apply the selected provisioning information to provision the data communications client; and a user interface interacting with said provisioning module to enable a user of the host communications device to provision the data communications client.",
	"url": null,
	"owner": "Research In Motion Limited",
	"publication_number": "07620705",
	"publication_date": "2009-11-17",
	"application_number": "11188756",
	"application_date": "2005-07-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for coordinating device setting between a communications client and its host device",
	"summary": "",
	"abstract": "A system and method for propagating device settings to a data communications client from a host on a mobile device, the system having at least one host application adapted to operate on the mobile device host and further adapted to change device settings on the mobile device; a notification means adapted to notify the data communications client of device settings changes on the mobile device; a mode setting at the data communications client, the mode setting adapted to indicate whether client applications on the data communications client should use device settings from the host; and a client settings application adapted to receive a notification from the notification means and change device settings for the client applications if the mode setting indicates the client applications should use device settings from the host.",
	"url": null,
	"owner": "Research In Motion Limited",
	"publication_number": "07603447",
	"publication_date": "2009-10-13",
	"application_number": "11188761",
	"application_date": "2005-07-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing remote data access and trascoding for a mobile communication device",
	"summary": "",
	"abstract": "A system for providing information content over a network to a mobile communication device includes a transcoding system and a first network device. The transcoding system includes a plurality of transcoders. Each transcoder is operable to transcode the information content from a respective input content type into a respective output content type. The first network device is in communication with the transcoding system and includes a connection handler system. The first network device is operable to receive a first connection request that includes transcoder request data and to select a corresponding connection handler. The connection handler is operable to select one or more transcoders from the plurality of transcoders based on the transcoder request data.",
	"url": null,
	"owner": "Research In Motion Limited",
	"publication_number": "07590759",
	"publication_date": "2009-09-15",
	"application_number": "10483457",
	"application_date": "2002-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing remote data access for a mobile communication device",
	"summary": "",
	"abstract": "In one exemplary embodiment, a system for providing data access between an information source and a mobile communication device includes a transcoding system and a first network device. The transcoding system includes a plurality of transcoders, and each transcoder is operable to transcode information content from a respective first content type into a respective second content type. The first network device is in communication with the transcoding system and includes a connection handler system. The connection handler system is operable to receive connection data for a connection between the information source and the mobile communication device and to select a corresponding connection handler. The connection handler is operable to select one or more transcoders from the plurality of transcoders to transcode the information content.",
	"url": null,
	"owner": "Research In Motion Limited",
	"publication_number": "07526572",
	"publication_date": "2009-04-28",
	"application_number": "10483449",
	"application_date": "2002-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and computer program product for utilizing market demand information for generating revenue",
	"summary": "",
	"abstract": "A system, method and computer program product are disclosed for risk management in a supply chain management framework. A supply chain manager is appointed for at least one buying supply chain participant. The supply chain manager is given authority to negotiate supply agreements for at least one good on behalf of the at least one buying supply chain participant. One or more supply agreements are entered into for the at least one good, wherein provisions of the supply agreement include: (i) pricing for each one good shall be based upon factors including an actual market price of at least one commodity when the supply chain manager has not established a commodity position price; and (ii) pricing for each one good shall be based upon factors including a commodity position price of at least one commodity when the supply chain manager has established a commodity position price. Periodically, a commodity position price is established through the supply chain manager.",
	"url": null,
	"owner": "Restaurant Services, Inc.",
	"publication_number": "07546257",
	"publication_date": "2009-06-09",
	"application_number": "11178320",
	"application_date": "2005-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for remote diagnostic, control and information collection based on various communication modes for sending messages to a resource manager",
	"summary": "",
	"abstract": "A method, system, and program product for communicating with machines connected to a network. Information sent to or from the machines is transmitted using electronic mail or a via a direct connection. The electronic mail may be transmitted over the Internet to a service center or from a service center to a resource administrator, but also may remain within a local or wide area network for transmission between a machine and a resource administrator. E-mail messages may be transmitted from a computer which is attached to a device which is being monitored or controlled and include information regarding the status, usage or capabilities of the attached device. The device may send status messages and usage information of the device to either a resource administrator or to a service center on the Internet through a firewall. The message may be sent directly to the resource administrator station if urgent service is needed by the device. For routine information, the service center may manage all the resources on an intranet and may send predetermined types of information to the resource administrator using e-mail.",
	"url": null,
	"owner": "Ricoh Co., Ltd.",
	"publication_number": "07620717",
	"publication_date": "2009-11-17",
	"application_number": "11873935",
	"application_date": "2007-10-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Object-oriented method and system of remote diagnostic, control and information collection using multiple formats and multiple protocols",
	"summary": "",
	"abstract": "A system, method and program product for diagnosing, controlling and collecting information from devices. Information regarding events of each one of a plurality of target applications executing in an application unit is collected and formatted into one of multiple data formats for transmission through one of multiple communication protocols at the request of each of the target applications, through an interface. The event information for a particular target application is formatted and transmitted according to a combination of a data format and communication protocol requested by the target application. The formatting of data representing the event information is handled in at least three levels of software classes, with two levels of abstract classes and one concrete software class. The formatting of information to be transmitted through the requested communication protocol is handled in at least three levels of software classes, with one abstract class and two levels of concrete classes. The formatted data is transmitted through, e.g., e-mail or FTP to a predetermined destination or may be saved to local storage, e.g., a local disk. By sharing resources, code duplication is reduced or eliminated.",
	"url": null,
	"owner": "Ricoh Co., Ltd.",
	"publication_number": "07533333",
	"publication_date": "2009-05-12",
	"application_number": "09782064",
	"application_date": "2001-02-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus, system, and server capable of effectively specifying information in document",
	"summary": "",
	"abstract": "A word information in a document printed on paper etc. may be specified easily. Especially, it enables to specify easily and correctly from the word information input partially. In one example, an information specification system specifying an arbitrary word information in a document, includes an information specification apparatus to select a specified candidate word information. The apparatus has document specification mechanism to input a specification information for specifying the document, and a character input mechanism to input the word information. The word information is searched in the specified document by using the word information which is partially input by the character input mechanism to select the specified candidate word information.",
	"url": null,
	"owner": "Ricoh Company, Ltd.",
	"publication_number": "07536649",
	"publication_date": "2009-05-19",
	"application_number": "11484850",
	"application_date": "2006-07-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus, system, method and computer program product for document management",
	"summary": "",
	"abstract": "A document management apparatus is configured to designate a desired document in a series of documents managed under a DMA document object model and to make a connection to a desired node in a hierarchical tree-structure of the desired document is provided. The document management apparatus includes an apparatus configured to accept a document call request for the desired document, that is made by a requesting device by presenting a document ID designating the desired document and specifying the desired node and to make connections to the specified nodes. The document ID includes a character string indicating a location of the desired document and character strings designating respective nodes in the hierarchical tree-structure of the desired document.",
	"url": null,
	"owner": "Ricoh Company, Ltd.",
	"publication_number": "07562286",
	"publication_date": "2009-07-14",
	"application_number": "10386455",
	"application_date": "2003-03-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multimodal access of meeting recordings",
	"summary": "",
	"abstract": "A meeting recorder captures multimodal information of a meeting. Subsequent analysis of the information produces scores indicative of visually and aurally significant events that can help identify significant segments of the meeting recording. Textual analysis can enhance searching for significant meeting segments and otherwise enhance the presentation of the meeting segments.",
	"url": null,
	"owner": "Ricoh Company, Ltd.",
	"publication_number": "07606444",
	"publication_date": "2009-10-20",
	"application_number": "11942706",
	"application_date": "2007-11-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Power-saving control method of image forming device, and image forming device",
	"summary": "",
	"abstract": "In a power-saving control method of an image forming device, the image forming device is set in a power saving state when an input operation is not performed by a user over a predetermined time. The image forming device in the power saving state is shifted to a minimum power state. Prior to shifting of the image forming device to the minimum power state, a filtering unit is activated to detect communication between an external device and the image forming device in the minimum power state. When a detected communication signal indicates an image formation request from the external device, the image forming device is caused to return from the minimum power state through the power saving state to a standby state so that the image forming device is ready for performing image formation.",
	"url": null,
	"owner": "Ricoh Company, Ltd.",
	"publication_number": "07593661",
	"publication_date": "2009-09-22",
	"application_number": "11743309",
	"application_date": "2007-05-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for initializing a distributed software architecture and an electronic system",
	"summary": "",
	"abstract": "The present invention relates to a method for initializing a distributed software architecture as well as an electronic system. A control module for a network function is made available in the form of a DCM. This control module is registered in a registry as a DCM. The present invention permits extending a distributed software architecture, e.g., in accordance with the HAVi standards, by network and system administration functions, which, in particular, permit the application to motor vehicles.",
	"url": null,
	"owner": "Robert Bosch GmbH",
	"publication_number": "07565420",
	"publication_date": "2009-07-21",
	"application_number": "10481666",
	"application_date": "2002-03-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automation device data interface",
	"summary": "",
	"abstract": "The subject invention pertains to facilitating communication between industrial automation devices such as controllers and data systems and/or services. Systems and methods are provided that receive statements or other unit of data interaction from an automation device, provide the statements to an appropriate system or service for processing, and optionally return a response such as a result set. Furthermore, in accordance with an aspect of the invention native controller code, variables, or tags can be mapped to stored data, procedures or combinations of data and/or procedures and updated automatically or semi-automatically.",
	"url": null,
	"owner": "Rockwell Automation Technologies, Inc.",
	"publication_number": "07565351",
	"publication_date": "2009-07-21",
	"application_number": "11143207",
	"application_date": "2005-06-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mechanical-electrical template based method and apparatus",
	"summary": "",
	"abstract": "A method and apparatus for identifying sections of an existing schematic that are consistent with best design practices, the method comprising the steps of providing a template set, each template specifying a sub-set of components and relationships that are consistent with best design practices and examining the existing schematic to identify sections of the existing schematic that are inconsistent with the best design practices specified in the template set.",
	"url": null,
	"owner": "Rockwell Automation Technologies, Inc.",
	"publication_number": "07546232",
	"publication_date": "2009-06-09",
	"application_number": "11206721",
	"application_date": "2005-08-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Remote monitoring and control of an I/O module",
	"summary": "",
	"abstract": "An industrial automation monitoring and/or control system comprises a receiver component that receives a request for a web page associated with a network adaptor. An execution component executes instantiated objects within the web page to effectuate at least one of monitoring and control of an input/output module that is communicatively coupled to the network adaptor.",
	"url": null,
	"owner": "Rockwell Automation Technologies, Inc.",
	"publication_number": "07587251",
	"publication_date": "2009-09-08",
	"application_number": "11313979",
	"application_date": "2005-12-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Avionics system for providing commands based on aircraft state",
	"summary": "",
	"abstract": "An avionics system includes a dynamic grammar definition subsystem configured to receive and analyze dynamic, current aircraft state data and provide an enhanced set of recognizable current grammar data based on the aircraft state data. A voice recognition subsystem is configured to receive the current grammar data from the dynamic grammar definition subsystem and utilize the current grammar data to provide commands in response to a user's voice input based on the aircraft's dynamic, current state.",
	"url": null,
	"owner": "Rockwell Collins, Inc.",
	"publication_number": "07606715",
	"publication_date": "2009-10-20",
	"application_number": "11440510",
	"application_date": "2006-05-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Inferential evaluation and control for matching requirements to system capabilities",
	"summary": "",
	"abstract": "An inferential evaluation system for evaluating system capabilities relative to a set of requirements is provided. The inferential evaluation system includes a requirements modeling component configurable to be updated to model a set of requirements. The inferential evaluation system also includes a system descriptive modeling component configurable to be updated to model a system description of a first system to be analyzed. An evaluation model component is also included and is configured to relate the system description of the first system to requirements of the set of requirements in order to evaluate the capabilities of the first system to meet the set of requirements.",
	"url": null,
	"owner": "Rockwell Collins, Inc.",
	"publication_number": "07571149",
	"publication_date": "2009-08-04",
	"application_number": "11434342",
	"application_date": "2006-05-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Event management systems and methods for motion control systems",
	"summary": "",
	"abstract": "A motion control system comprising a machine platform, at least one event destination, and an event handler. The machine platform carries out automated tasks and generates events. The event handler is configurable to receive at least one event from the machine platform and send the at least one event to the at least one event destination.",
	"url": null,
	"owner": "Roy-G-Biv Corporation",
	"publication_number": "07502662",
	"publication_date": "2009-03-10",
	"application_number": "11728801",
	"application_date": "2007-03-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic interception of calls by a target device",
	"summary": "",
	"abstract": "A system and method for providing seamless communication with threads executing on an embedded computer. Using a DAT system, a programmer can test the communication interfaces of a thread via either a scripting program, any COM-compliant program, or a graphical test utility. The DAT system automatically formats a block of data that is transmitted between the embedded computer and a host computer and accounts for machine specific enumeration sizes, machine specific pointer sizes, machine specific structure alignment boundaries, machine specific integer sizes, and machine specific byte ordering.",
	"url": null,
	"owner": "S2 Technologies, Inc.",
	"publication_number": "07530076",
	"publication_date": "2009-05-05",
	"application_number": "11061283",
	"application_date": "2005-02-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Techniques for providing interoperability as a service",
	"summary": "",
	"abstract": "An interoperability system provides highly individualized, on-demand access to a plurality of services by a plurality of users. Each of the plurality of users is associated with one of a plurality of independent enterprises, and the plurality of services are associated with and controlled by a plurality of independent service providers. A directory maps an identity corresponding to each of the users to a policy framework which defines access policies relating to the services. The system can connect with each of the clients and each of the services, and facilitate interaction among the client machines and the services with reference to the directory and the policy framework.",
	"url": null,
	"owner": "Salesforce.com Inc.",
	"publication_number": "07590685",
	"publication_date": "2009-09-15",
	"application_number": "10820650",
	"application_date": "2004-04-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for invocation of services",
	"summary": "",
	"abstract": "A system and method for enabling the interchange of enterprise data through an open platform is disclosed. This open platform can be based on a standardized interface that enables parties to easily connect to and use the network. Services operating as senders, recipients, and in-transit parties can therefore leverage a framework that overlays a public network.",
	"url": null,
	"owner": "Salesforce.com, Inc.",
	"publication_number": "07516191",
	"publication_date": "2009-04-07",
	"application_number": "09820965",
	"application_date": "2001-03-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus, method, and medium for generating grammar network for use in speech recognition and dialogue speech recognition",
	"summary": "",
	"abstract": "A method, apparatus, and medium for generating a grammar network for speech recognition and a dialogue speech recognition are provided. A method, apparatus, and medium for employing the same are provided. The apparatus for generating a grammar network for speech recognition includes: a dialogue history storage unit storing a dialogue history between a system and a user; a semantic map formed by clustering words forming each dialogue sentence included in a dialogue sentence corpus depending on semantic correlation, and generating a first candidate group formed of a plurality of words having the semantic correlation extracted for each word forming a dialogue sentence provided from the dialogue history storage unit; a sound map formed by clustering words forming each dialogue sentence included in the dialogue sentence corpus depending on acoustic similarity, and generating a second candidate group formed of a plurality of words having an acoustic similarity extracted for each word forming the dialogue sentence provided from the dialogue history storage unit and each word of the first candidate group; and a grammar network construction unit constructing a grammar network by combining the first candidate group and the second candidate group.",
	"url": null,
	"owner": "Samsung Electronics Co., Ltd.",
	"publication_number": "07606708",
	"publication_date": "2009-10-20",
	"application_number": "11344163",
	"application_date": "2006-02-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Video display control apparatus and video display control method",
	"summary": "",
	"abstract": "Provided are a video display control apparatus and a video display control method. A video display control apparatus, including a data storage storing graphic/control integrated data including control information used to display graphic data to be combined with video data and the video data; and a controller combining the video data and the graphic data referring to the graphic/control integrated data and transmitting the combined data to more than one display device. As described above, the transmission capacity of video data, OSD data, and graphic data for a variety of display devices is reduced, thereby lowering the bus proportion. As a whole, the power consumption required by a system is reduced, thereby realizing to be suitable for a mobile device.",
	"url": null,
	"owner": "Samsung Electronics Co., Ltd.",
	"publication_number": "07554563",
	"publication_date": "2009-06-30",
	"application_number": "11213946",
	"application_date": "2005-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Allocating application to group of consecutive processors in fault-tolerant deadlock-free routing path defined by routers obeying same rules for path selection",
	"summary": "",
	"abstract": "In a multiple processor computing apparatus, directional routing restrictions and a logical channel construct permit fault tolerant, deadlock-free routing. Processor allocation can be performed by creating a linear ordering of the processors based on routing rules used for routing communications between the processors. The linear ordering can assume a loop configuration, and bin-packing is applied to this loop configuration. The interconnection of the processors can be conceptualized as a generally rectangular 3-dimensional grid, and the MC allocation algorithm is applied with respect to the 3-dimensional grid.",
	"url": null,
	"owner": "Sandia Corporation",
	"publication_number": "07565657",
	"publication_date": "2009-07-21",
	"application_number": "11110206",
	"application_date": "2005-04-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application for managing model-based material properties for simulation-based engineering",
	"summary": "",
	"abstract": "An application for generating a property set associated with a constitutive model of a material includes a first program module adapted to receive test data associated with the material and to extract loading conditions from the test data. A material model driver is adapted to receive the loading conditions and a property set and operable in response to the loading conditions and the property set to generate a model response for the material. A numerical optimization module is adapted to receive the test data and the model response and operable in response to the test data and the model response to generate the property set.",
	"url": null,
	"owner": "Sandia Corporation",
	"publication_number": "07499841",
	"publication_date": "2009-03-03",
	"application_number": "10887789",
	"application_date": "2004-07-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Efficient flash memory device driver",
	"summary": "",
	"abstract": "A driver for a data storage device includes an access command and a verification command. The access command initiates an access (write, erase or read) of the data storage device while allowing a calling application to continue running without having to wait for the completion of the access. The verification command queries a preceding access. If the query indicates failure of the preceding access, the verification command repeats the preceding access until the preceding access succeeds. The verification command is called by the access command before the access command initiates a new access. The verification command also is called by an application following a sequence of related access command calls. A write access command saves the data to be written in a memory separate from the data storage device, in case the verification command needs that data to repeat a failed write.",
	"url": null,
	"owner": "SanDisk IL, Ltd.",
	"publication_number": "07526598",
	"publication_date": "2009-04-28",
	"application_number": "10376504",
	"application_date": "2003-03-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system, and computer-readable medium for simulating a converged network with a single media gateway and media gateway controller",
	"summary": "",
	"abstract": "A method, system, and computer-readable medium for emulating a converged network are provided. A media gateway receives a call at a first interface of a first network type. The call is processed for distribution on a second network type. The processed call is transmitted to a second interface of a second network type. A service module of the media gateway receives the processed call.",
	"url": null,
	"owner": "Santera Systems, LLC",
	"publication_number": "07616740",
	"publication_date": "2009-11-10",
	"application_number": "11430641",
	"application_date": "2006-05-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Shared memory based monitoring for application servers",
	"summary": "",
	"abstract": "A system and method to monitor application servers using shared monitoring memory. An application server includes worker nodes having Java virtual machines to process work requests received by the application server. Status information is generated for each of the worker nodes while processing the work requests. The status information for each of the worker nodes is then stored into the shared monitoring memory while the worker nodes operate.",
	"url": null,
	"owner": "SAP",
	"publication_number": "07562138",
	"publication_date": "2009-07-14",
	"application_number": "11024392",
	"application_date": "2004-12-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Calls and return calls using client interfaces",
	"summary": "",
	"abstract": "A method and system for executing calls and return calls using client interfaces for packages. In one embodiment, a service at a service package is called using a client interface at a client package. The return call is then made on object using the client interface at the client package as performed by the service at the service package.",
	"url": null,
	"owner": "SAP (AG)",
	"publication_number": "07587705",
	"publication_date": "2009-09-08",
	"application_number": "11118739",
	"application_date": "2005-04-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for management protocol-based data streaming",
	"summary": "",
	"abstract": "A method for performing data streaming using a management protocol. In one embodiment, the method includes receiving a request of contents of a file at a first system from a second system, the file is associated with the first system, reading contents of the file at the first system, in response to the request, and streaming the contents of the file to the second system, wherein the streaming of the contents is based on a management protocol.",
	"url": null,
	"owner": "SAP (AG)",
	"publication_number": "07620727",
	"publication_date": "2009-11-17",
	"application_number": "11529991",
	"application_date": "2006-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for integrating variable subsidiary information with main office information in an enterprise system",
	"summary": "",
	"abstract": "The present invention pertains to an enterprise-wide enterprise resource planning (ERP) system, and in particular, to methods and systems for interfacing the enterprise-wide ERP system with ERP systems at subsidiary organizations. In accordance with an embodiment of the present invention, a method includes connecting to an enterprise data management system through a data base server, a web service and a data interface application programming interface (API) in a remote data system and through a data mapping component and an intermediate documents (IDOC) adapter in a data exchange interface using simple object address protocol (SOAP) messages and extensible markup language (XML) messages.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07590987",
	"publication_date": "2009-09-15",
	"application_number": "10453527",
	"application_date": "2003-06-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automated grid compute node cleaning",
	"summary": "",
	"abstract": "A method includes, in a network of interconnected grid compute nodes, storing system criteria for a first grid compute node, storing an initial snapshot of the first grid compute node, comparing a current snapshot of the first grid compute node with the initial snapshoot to identify parts of the current snapshot that do not meet the criteria, and adjusting the first compute node to meet the criteria.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07587480",
	"publication_date": "2009-09-08",
	"application_number": "11017401",
	"application_date": "2004-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Bidirectional update of client-server objects",
	"summary": "",
	"abstract": "Methods and apparatus, including computer program products, for updating data. In one aspect, a system that has a server operating on a structure of server data objects and a client operating on a structure of client data objects, the data objects and the structure of the server data objects and the structure of the client data objects being managed through an implementation of a predefined application programming interface that implements at least two types of data object update commands, the data object update commands being operable to perform bidirectional updates between the server data objects and the client data objects. The two types of data object update commands are: an object level update type that is operable to update one or more specified data objects; and a sub-structure level update type that is operable to update a sub-structure of the data objects.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07574456",
	"publication_date": "2009-08-11",
	"application_number": "11015613",
	"application_date": "2004-12-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Cache eviction",
	"summary": "",
	"abstract": "Described herein are methods and apparatus, including computer program products, that implement cache eviction for runtime systems. A computer program product can cause a data processing apparatus to compute a fill level of a cache memory; use a first eviction process to evict one or more of the entities in the cache memory if the fill level exceeds a first threshold but not a second threshold; use a second, distinct eviction process to evict one or more of the entities in the cache memory if the fill level exceeds the second threshold but not a third threshold; and decline subsequent requests to store additional entities in the cache memory if the fill level exceeds the third threshold.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07590803",
	"publication_date": "2009-09-15",
	"application_number": "10949541",
	"application_date": "2004-09-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Cache monitoring using shared memory",
	"summary": "",
	"abstract": "A system and method to monitor caches of at least one Java virtual machine (u201cJVMu201d). A program is operated on the at least one JVM. Objects associated with the program are cached within a local cache of the JVM. Cache status information about the local cache is generated and then the cache status information is reported into memory external to the JVM to enable monitoring of the local cache from external to the JVM.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07516277",
	"publication_date": "2009-04-07",
	"application_number": "11118259",
	"application_date": "2005-04-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Centralized access and management for multiple, disparate data repositories",
	"summary": "",
	"abstract": "Systems and techniques to access data in a computer system provide centralized data storage management for facilitating access to a plurality of different data repositories. In general, in one implementation, the technique includes sending a data access request to a data storage manager and identifying at least one of a plurality of repositories for satisfying the data access request. The repositories may be of different types. In addition, data may be partitioned among the repositories according to data object types and/or attribute characteristics. Once an appropriate repository is identified, the data access request is fulfilled using the identified repository.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07599959",
	"publication_date": "2009-10-06",
	"application_number": "10308204",
	"application_date": "2002-12-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Client-server system, a generator unit and a method to customize a user application",
	"summary": "",
	"abstract": "A method for setting up a customizable client-server system can include custom selecting search data fields from a proposed variety of selectable search data fields in order to create a user interface search mask and/or custom selecting archive fields from a proposed variety of selectable archive fields of an archive database. The method further includes the step of automatically linking the fields selected during custom selection with the respective other one of the two varieties of selectable fields in order to identify and automatically generate a list of corresponding respective fields. This can also include automatically generating an archive index for use in quickly searching the archive database based on the custom selected fields.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07603394",
	"publication_date": "2009-10-13",
	"application_number": "11016095",
	"application_date": "2004-12-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Configuration manager in enterprise computing system",
	"summary": "",
	"abstract": "A system and method are described for managing a plurality of application servers. In one embodiment, the application servers are organized into groups referred to as u201cinstances.u201d Each instance includes a group of redundant application servers and a dispatcher for distributing service requests to each of the application servers. A group of instances may be organized as a u201ccluster.u201d Each server includes a configuration manager to facilitate changes to configuration information within the cluster. The configuration manager may include a configuration cache and monitor its consistency with respect to other instances within the cluster.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07526479",
	"publication_date": "2009-04-28",
	"application_number": "10749957",
	"application_date": "2003-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Control system interface for flexible order transaction sytem",
	"summary": "",
	"abstract": "The present invention provides a control system interface for accessing a plurality of functions relating to a flexible order transaction system.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07571118",
	"publication_date": "2009-08-04",
	"application_number": "10850814",
	"application_date": "2004-05-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Detecting and handling changes to back-end systems",
	"summary": "",
	"abstract": "The description includes methods and apparatus, including computer program products, for detecting and handling changes to back-end systems. Configuration data for a pattern is received. The pattern includes a predefined arrangement of user interface elements and specifies predefined actions that can be performed using the user interface elements. The configuration data includes a first version identification and specifies associations between one or more of the user interface elements and one or more entities in a back-end system. The back-end system is accessed and a second version identification is obtained. If the first version identification does not match the second version identification, the configuration data is modified based on information about the back-end system.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07606820",
	"publication_date": "2009-10-20",
	"application_number": "10843009",
	"application_date": "2004-05-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Filtered unified logging service",
	"summary": "",
	"abstract": "Apparatus, methods, and systems for provision of filtered unified logging interfaces or services, for example, employed within application servers. In one embodiment of the invention, a filtered unified logging application programming interface (API) provides unified configuration and/or viewing for both tracing and logging. Use of filters provides a finer granularity of log controller or log output, for example, when compared with only utilizing severity. A method of providing filtered unified logging includes receiving a message, the message having a predefined severity; dropping the message if the message severity does not reach a threshold severity; applying one or more filters to the message if the message severity reaches the threshold severity; and sending the message to a destination if the message is not filtered out.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07475401",
	"publication_date": "2009-01-06",
	"application_number": "10748012",
	"application_date": "2003-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hierarchical arrangement of modified class loaders and token driven class loaders and methods of use",
	"summary": "",
	"abstract": "Methods and apparatus, including computer program products, implement a hierarchical arrangement of class loaders. Each class loader has a naming token, and each token driven class loader has one or more delegation tokens. A class definition request is received in a first, token driven class loader. If the first class loader has a parent class loader, the class definition is requested from the parent. If the parent is a token driven class loader, delegation tokens are used to delegate the class definition request to the parent. If the class definition is not obtained from a parent class loader, an attempt is made to obtain the class definition from the resources of the first class loader. If that also fails, the delegation tokens of the first class loader are used to find a matching child class loader and the class definition is requested from the matching child class loader.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07536412",
	"publication_date": "2009-05-19",
	"application_number": "11250892",
	"application_date": "2005-10-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integrated software toolset for a web server",
	"summary": "",
	"abstract": "A software toolset includes a number of software modules that handle control and data communication within a web application server instance. An application programmatic interface (API) provides a common interface to communicate with the software modules in the toolset.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07587399",
	"publication_date": "2009-09-08",
	"application_number": "11322980",
	"application_date": "2005-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Management architecture and method employed within a clustered node configuration",
	"summary": "",
	"abstract": "A monitoring system and method are described which simplify the management of complex, multi-tiered networks such as those used in large enterprises. A cluster of application servers are communicatively coupled on a network to serve applications over the network to a plurality of clients. Each of the application servers includes a plurality of server nodes and at least one dispatcher node. Each of the server nodes and dispatchers is assigned its own dedicated management bean (u201cMBeanu201d) server and each of the MBean servers are associated with a plurality of MBeans for monitoring specified system resources. In addition, one embodiment of the invention includes cluster integration logic which collects and compiles resource data from each of the individual MBeans and provides the compiled data in a predefined organizational structure to a management interface.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07493624",
	"publication_date": "2009-02-17",
	"application_number": "10749733",
	"application_date": "2003-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for computer-implemented processing of electronic payment instructions",
	"summary": "",
	"abstract": "Method and apparatus for the computer-implemented processing of electronic payment instructions, wherein in a first step total instruction data contained in a payment instruction are analysed in an instruction input processor and separated into payment instruction data which are needed for processing the payment instruction and accounting data which are not needed for processing the payment instruction, the payment instruction data being converted into a uniform metaformat for processing in a subsequent payment processing apparatus (payment engine) and the accounting data being stored temporarily in a data bank together with linkage instructions, in a second step the payment instruction data converted into the metaformat are processed in the subsequent payment processing device, while, for each payee, there is automatically a routing identification and a clearing identification and, depending on the clearing identification, internal preparation of the payment instruction entry, and in a third step the automatically generated data relating to an outgoing payment instruction are converted in an instruction output processor into a target data format and are supplemented by the data which have been temporarily stored in the data bank.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07539645",
	"publication_date": "2009-05-26",
	"application_number": "10846867",
	"application_date": "2004-05-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for computer-implemented processing of payment entries",
	"summary": "",
	"abstract": "Method and apparatus for the computer-implemented processing of payment entries which are intended to move money in an account, wherein a payment entry is automatically checked for errors as it is received and if at least one error occurs an error sequence is decided upon from a list of error routines by means of an error routine, all the errors occurring in a given payment entry being supplied collectively to the error routine, and within the scope of the error routine the errors which have occurred are weighted and appropriate error follow-up measures are initiated depending on the results of the error weighting.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07636874",
	"publication_date": "2009-12-22",
	"application_number": "10846570",
	"application_date": "2004-05-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for expression evaluation",
	"summary": "",
	"abstract": "A method to analyze impact of changes to a model includes accessing a proposed change to a model. An expression that is relevant to the proposed change is accessed. An instances set associated the expression is obtained. The instance set is evaluated to determine an impact of the proposed change to the model. An application utilizes the expression of a model. An impact analyzer assesses impact of a change to the model by evaluating at least one of the one or more expressions and returning an evaluation set for use by the application.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07584163",
	"publication_date": "2009-09-01",
	"application_number": "11521266",
	"application_date": "2006-09-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for generating and employing a dynamic web services invocation model",
	"summary": "",
	"abstract": "A system and method are provided to generate a dynamic web services invocation model. In one embodiment, a first metadata and a second metadata are extracted from description content of a Web Service Definition Language (WSDL) file. The first metadata and the second metadata are inspected. A web service is invoked via a dynamic web services invocation model.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07587425",
	"publication_date": "2009-09-08",
	"application_number": "11413789",
	"application_date": "2006-04-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, apparatus and system for principle mapping within an application container",
	"summary": "",
	"abstract": "According to one aspect of the invention, a computing system capable of communicating with first and second user managers, the first user manager to perform authentication and authorization services for a first resource and the second user manager to perform authentication and authorization services for a second resource, is provided. The computing system comprises a container having an application, a first user store associated with the first user manager, and a second user store associated with the second user manager stored therein, the application to send a first user manager command to the first user store in a first format and a second user manager command to the second user store in the first format, the first user store to translate the first format into a second format and send the second format to the first user manager, the second user store to translate the second format into a third format and send the third format to the second user manager.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07606917",
	"publication_date": "2009-10-20",
	"application_number": "10837134",
	"application_date": "2004-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Object storage and synchronization hooks for occasionally-connected devices",
	"summary": "",
	"abstract": "A system may include an application programming interface (API) layer, a cache layer, and an object storage/access layer. The API layer may expose an interface to store a business object and an interface to retrieve the business object, and may transmit a request to store the business object and a request to retrieve the business object, and the cache layer may cache the business object and transmit the request to store the business object and the request to retrieve the business object. The object storage/access layer may receive the request to store the business object and, in response to the request to store the business object, to invoke a serialization method exposed by the business object to store the data associated with the object in a data structure. The object storage/access layer may also receive the request to retrieve the business object and, in response to the request to retrieve the business object, to invoke a deserialization method of the business object to deserialize the data associated with the business object in the data structure.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07565365",
	"publication_date": "2009-07-21",
	"application_number": "11215870",
	"application_date": "2005-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Parsing and handling events from .NET objects",
	"summary": "",
	"abstract": "Methods and apparatus, including computer program products, for parsing and handling events from .NET objects. The method includes generating and initializing an event dispatcher component with a full path of a .NET assembly, the event dispatcher component containing a source .NET component and an object name of the source .NET component type, the event dispatcher component configured to load the .NET assembly and generate an object through reflection, read run-time information from the object about all events, and generate a new .NET assembly and build .NET assembler code that contains event handlers for all events that can be raised by the object.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07526773",
	"publication_date": "2009-04-28",
	"application_number": "10930712",
	"application_date": "2004-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Presenting user interface elements to a screen reader using placeholders",
	"summary": "",
	"abstract": "Methods and apparatus, including computer program products, for providing information to a screen reader. A method includes the actions of receiving information for representing a web page in a browser; setting focus initially on an element of the web page and presenting the web page to a user; and in response to a user command directing the focus to consecutive target elements of the web page, assigning information related to each target element to a placeholder control and providing a screen reader with access to the placeholder control as the element having focus.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07620890",
	"publication_date": "2009-11-17",
	"application_number": "11027012",
	"application_date": "2004-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Program object to support connection generation",
	"summary": "",
	"abstract": "A system and method for a program object to support generation of connections. An embodiment of a method comprises establishing a first program object, the program object being designated as an object factory for generation of a connection factory, the first program object acting as a proxy for all connection factory requests; receiving a request for a connection factory from a program application at the first program object; generating a request for the connection factory by the first program object; obtaining an instance of the connection factory; generating a connection using the connection factory; and deploying the connection between the computer application and an external resource using the generated connection.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07594237",
	"publication_date": "2009-09-22",
	"application_number": "10858661",
	"application_date": "2004-06-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Provision of data for data warehousing applications",
	"summary": "",
	"abstract": "A computer network architecture for making procurement-related information that has been generated on a transaction level available to data warehousing techniques is described. The network includes a transaction processing layer with at least one accounting component with a general ledger data base for centrally storing information contained in accounted-related data sets, a data warehousing layer and an additional data sourcing layer. A duplicator receives the data sets that will be or have been stored in the general ledger data base and delivers duplicates of those data sets that fulfill a predefined criteria in a procurement context. A source data base stores the duplicated data sets on a data line level. An extractor of the data sourcing layer interfaces with the data warehousing layer and selectively moves data contained in data lines or sets of data lines from the source data base to the data warehousing layer.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07480671",
	"publication_date": "2009-01-20",
	"application_number": "10935404",
	"application_date": "2004-09-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Semantic objects",
	"summary": "",
	"abstract": "A computer-implemented method of providing access to information stored in diverse formats comprises receiving from an application a semantic request having a request name that semantically identifies a type of information sought by the request, converting the received semantic request to a generic request having corresponding request parameters, transmitting the converted request to a data access system, receiving data from the data access system corresponding to the converted request, and providing the data to the application.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07577682",
	"publication_date": "2009-08-18",
	"application_number": "10632120",
	"application_date": "2003-07-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Sharing objects in runtime systems",
	"summary": "",
	"abstract": "Method, apparatus and system for data sharing in runtime systems are described. A set of data objects is identified, where each data object in the set of data objects comprises a reference to runtime metadata about the data object in a first runtime system. For each data object in the set of data objects, the reference to the runtime metadata in the data object is replaced with a proxy. The set of data objects is transmitted to a second runtime system. The transmitting of the set of data objects includes replacing the proxy with the reference to the runtime metadata for each of the set of data objects transmitted to the second runtime system. Further, a shared memory is associated with the first runtime system and the second runtime system such that the first and second runtime systems share us information at the shared memory.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07587721",
	"publication_date": "2009-09-08",
	"application_number": "10851813",
	"application_date": "2004-05-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Socket-like communication API for Java",
	"summary": "",
	"abstract": "A system and method are described for performing data processing using shared memory and socket-like application programming interface. In one embodiment, a plurality of handles is employed and associated with a plurality of processes. The plurality of handles may serve as communication end-points for communication of data. Further, an application programming interface is employed to present the plurality of handles as the application programming interface for sockets for facilitating the communication of data compatible with a programming language. The data is communicated between the plurality of processes via the socket-like plurality of handles.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07600217",
	"publication_date": "2009-10-06",
	"application_number": "11012803",
	"application_date": "2004-12-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for deferred database connection configuration",
	"summary": "",
	"abstract": "A system and method for deferred database connection configuration. A database connection handle associated with a physical database connection is assigned to an application. An indication is received from the application to access a specified connection parameter of the physical database connection. A connection handling infrastructure determines whether the specified connection parameter is one of a selected subset of connection parameters. Access to the specified connection parameter is deferred, if the specified connection parameter is one of the selected subset of connection parameters.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07571164",
	"publication_date": "2009-08-04",
	"application_number": "10956705",
	"application_date": "2004-10-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for integrated logging and tracing functions in an enterprise network",
	"summary": "",
	"abstract": "An integrated tracing and logging system for an enterprise network. One embodiment of the integrated logging and tracing system has an object-oriented architecture which includes a controller class with two sub-classes: a tracing sub-class and a logging sub-class. Instances of the tracing sub-class (tracing modules) are associated with specified program code regions of network applications. The tracing modules receive method calls from the network applications and process the method calls based on defined severity levels. Instances of the logging sub-class (logging modules) are associated with specified u201ccategoriesu201d related to the enterprise network (e.g., system, database, etc). The logging modules receive and process method calls from network components associated with the categories. The integrated logging and tracing system allows tracing and logging information to be collected and correlated in a variety of useful ways.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07606893",
	"publication_date": "2009-10-20",
	"application_number": "10749616",
	"application_date": "2003-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for managing connections",
	"summary": "",
	"abstract": "Embodiments of the invention are generally directed to a system and method for managing connections. A filter may receive a client request message having one or more parameters. In an embodiment, the filter may modify the request message based, at least in part, on the one or more parameters. The modified request message may indicate that a connection to the client is to remain open after a corresponding response message is sent. In an embodiment, the modified request message is passed to an application for processing.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07571236",
	"publication_date": "2009-08-04",
	"application_number": "10863020",
	"application_date": "2004-06-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transformation directives in datatype definitions",
	"summary": "",
	"abstract": "The present invention provides computer-implemented methods and systems for providing a transformation directive in a data type definition statement. The transformation directive specifies one or more transformations to be applied to data before it is stored in a variable of the data type being defined. The runtime framework interprets the transformation directive and applies the transformation to data which is assigned to a variable of the data type that was defined; and stores the transformed value to the variable.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07571175",
	"publication_date": "2009-08-04",
	"application_number": "11232994",
	"application_date": "2005-09-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Unified logging service with a log viewer",
	"summary": "",
	"abstract": "An integrated tracing and logging system for an enterprise network. One embodiment of the integrated logging and tracing system has an object-oriented architecture which includes a controller class with two sub-classes: a tracing sub-class and a logging sub-class. Instances of the tracing sub-class (tracing modules) are associated with specified program code regions of network applications. The tracing modules receive method calls from the network applications and process the method calls based on defined severity levels. Instances of the logging sub-class (logging modules) are associated with specified u201ccategoriesu201d related to the enterprise network (e.g., system, database, etc). The logging modules receive and process method calls from network components associated with the categories. The integrated logging and tracing system may be accessed by a log viewer having a log viewer client to provide a user interface and a log viewer server to read one or more log messages.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07526550",
	"publication_date": "2009-04-28",
	"application_number": "10813999",
	"application_date": "2004-03-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "User interface for modeling estimations of resource provisioning",
	"summary": "",
	"abstract": "User interfaces are described for modeling estimations of resource provisioning. An example user interface may request a display of graphical indicators associated with nodes and edges, request a determination of an indicator of a service node workload associated with a service node included in a workflow path based on attribute values associated with the service node and an indicator of a propagated workload, and request provisioning of service nodes onto hardware nodes. The nodes may include external invocation nodes, service nodes, and hardware nodes, and the edges may include node connectors. An indication of an arrangement of an external invocation node, a group of service nodes, a group of node connectors, and a group of hardware nodes may be received, wherein the arrangement may be configured by a user interacting with the displayed graphical indicators, and may represent a workflow path.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07619991",
	"publication_date": "2009-11-17",
	"application_number": "11731187",
	"application_date": "2007-03-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "User interfaces for developing enterprise applications",
	"summary": "",
	"abstract": "Methods and apparatuses for providing a user interface for editing and deploying an enterprise application are described herein. In one embodiment, an exemplary user interface includes, but not limited to, a first window to display a graphical representation of a first component, a second window to display one or more properties associated with the first component when the graphical representation is activated, and wherein the one or more properties include a reference field to display a dependency relationship with a second component, the dependency relationship including an indication indicating strength of the dependency relationship. Other methods and apparatuses are also described.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07526734",
	"publication_date": "2009-04-28",
	"application_number": "10836906",
	"application_date": "2004-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Using interrelated data at run time",
	"summary": "",
	"abstract": "Methods, systems and computer program products implementing techniques for using interrelated data at run time. The techniques include establishing a model, the model implementing application logic of an application; establishing at least one view for presenting the model; establishing at least one controller for manipulating the model; and establishing at least one storage area, the storage area relating to the controller and storing an instance of a first data structure, the instance of the first data structure comprising application data having been stored in the storage area by an access method, the first data structure having been declared prior to execution of the application.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07600215",
	"publication_date": "2009-10-06",
	"application_number": "10676837",
	"application_date": "2003-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Version adaptation interface for integration of different virtual machines",
	"summary": "",
	"abstract": "A system and method for integrating different virtual machines (u201cVMsu201d). A first VM is loaded into an Application Server (u201cASu201d) instance. The first VM includes standard features accessible through a standard native interface. A second VM is loaded into the AS instance including the standard features and extended features. The standard features provided by the second VM are accessed by native platform entities through a standardized native interface. The extended features provided by the second VM are accessed by the native platform entities through an adaptation interface.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07562349",
	"publication_date": "2009-07-14",
	"application_number": "11115022",
	"application_date": "2005-04-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web service integration",
	"summary": "",
	"abstract": "An enterprise system may include a server including an integration module that enables applications at the server to integrate web services, e.g., by providing links to the external web service. Each application is associated with one or more business types in a table at the server. The integration module, which may be an API, sends a list of external web services of a type (or types) associated with an application when a user at a client computer in the enterprise system opens that application. The integration module may also generate a URL call and redirect the user's browser to an external web service when the user selects that external web service.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07475123",
	"publication_date": "2009-01-06",
	"application_number": "10712759",
	"application_date": "2003-11-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Database access with multilevel lock",
	"summary": "",
	"abstract": "A multi-level lock procedure is used in scheduling access of a table in a database by multiple processes running in parallel. A lock level is associated with a particular process, a higher lock level representing a larger number of other processes having priority over the particular process in accessing the table. Repeatedly attempt to associate the particular process with a lower lock level, and if the particular process has been successfully associated with the lower lock level, release a previous lock level associated with the particular process so that the previous lock level may be associated with other processes. Allow the particular process to access the table when the lock level for the particular process is equal to a preset value.",
	"url": null,
	"owner": "SAP Aktiengesellschaft",
	"publication_number": "07574438",
	"publication_date": "2009-08-11",
	"application_number": "10727183",
	"application_date": "2003-12-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Speech animation",
	"summary": "",
	"abstract": "Methods and systems, including computer program products, for speech animation. The system includes a speech animation engine and a client application in communication with the speech animation engine. The client application sends a request for speech animation to the speech animation engine. The request identifies data to be used to generate the speech animation, where speech animation is speech synchronized with facial expressions. The client application receives a response from the speech animation engine. The response identifies the generated speech animation. The client application uses the generated speech animation to animate a talking agent displayed on a user interface of the client application. The speech animation engine receives the request for speech animation from the client application, retrieves the data identified in the request without user intervention, generates the speech animation using the retrieved data and sends the response identifying the generated speech animation to the client application.",
	"url": null,
	"owner": "SAP Aktiengesellschaft",
	"publication_number": "07529674",
	"publication_date": "2009-05-05",
	"application_number": "10796242",
	"application_date": "2004-03-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Speech animation with behavioral contexts for application scenarios",
	"summary": "",
	"abstract": "Methods and systems, including computer program products, for speech animation. The system includes a speech animation server and one or more speech animation clients. The speech animation server generates speech animation content that drives the expressions and behaviors of talking agents displayed by the speech animation clients. The data used by the server includes one or more references to behavioral contexts. A behavioral context corresponds to a particular application scenario and includes a set of expressions that are appropriate to the particular application scenario. A behavioral context can also be defined as a combination of two or more other behavioral contexts. The server automatically incorporates the expressions of a particular behavioral context into any data that references the particular behavioral context.",
	"url": null,
	"owner": "SAP Aktiengesellschaft",
	"publication_number": "07599838",
	"publication_date": "2009-10-06",
	"application_number": "10932411",
	"application_date": "2004-09-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transaction polymorphism",
	"summary": "",
	"abstract": "A system and method to provide an interface to access transaction management services. The interface is declared and the transaction management services are bound to the interface. The transaction management services provide services for managing related transactions executing on remote nodes in an enterprise system. The transaction management services are published to components of the application server executing on at least one of the remote nodes.",
	"url": null,
	"owner": "SAP Aktiengesellschaft",
	"publication_number": "07503050",
	"publication_date": "2009-03-10",
	"application_number": "10854107",
	"application_date": "2004-05-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Framework for automated testing of enterprise computer systems",
	"summary": "",
	"abstract": "An automated testing framework enables automated testing of complex software systems. The framework can be configured for test selection, flow definition, and automated scheduled testing of complex computer systems. The framework has facilities for result analysis, comparison of key performance indicators with predefined target values, and test management.",
	"url": null,
	"owner": "SAP Portals Israel Ltd.",
	"publication_number": "07620856",
	"publication_date": "2009-11-17",
	"application_number": "11647778",
	"application_date": "2006-12-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for dynamically constructing synchronized business information user interfaces",
	"summary": "",
	"abstract": "Embodiments of the invention enable data that is synchronized between businesses to be displayed and interacted with by dynamically constructing graphical user interfaces to display the data. The graphical user interfaces are dynamically created via declarations that describe the data and how the data should be displayed along with the dependencies, validation and required characteristics of the data. The resulting dynamically created graphical user interfaces allow separate views of the data to be interacted with depending on the data pool that the data is intended for and a different data pool may be utilized by using a different declarative configuration at run time without recompiling and redistributing the application. The user interface files may be for example an XML file that may be parsed with any compliant schema based or DTD based XML parser. In at least one embodiment of the invention an N-tier architecture may be employed wherein a web server comprising Java Server Pages may utilize java class files that parse and construct the graphical user interface from an XML user interface configuration file. In this embodiment of the invention, HTML pages are output to a diverse array of computing devices capable of executing a HTML compliant browser. Another embodiment of the invention may utilize a standalone application utilizing the same java classes to construct java widgets instead of HTML widgets. Standalone applications may provide quicker responses than HTML applications since there are no round trips required for certain operations such as validation since the validation occurs directly in the application.",
	"url": null,
	"owner": "SAP, Aktiengesellschaft",
	"publication_number": "07577907",
	"publication_date": "2009-08-18",
	"application_number": "10990292",
	"application_date": "2004-11-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Achieving high assurance connectivity on computing devices and defeating blended hacking attacks",
	"summary": "",
	"abstract": "System and techniques for protecting wireless communication systems from blended electronic attacks that may combine wireless and computer attacks. One embodiment is an integrated hardware and software firewall/protection system that provides a protection scheme that may include an additional functional processing layer between the hardware firewall and a mobile terminal. This additional functional processing layer performs an extra layer of communications and security processing, including such features as management of Internet Connection Firewall (ICF) functions, key generation for firewall and virtual private network (VPN) functions, and packet inspection and filtering.",
	"url": null,
	"owner": "SCA Technica, Inc.",
	"publication_number": "07490350",
	"publication_date": "2009-02-10",
	"application_number": "11079673",
	"application_date": "2005-03-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Graphic user interface alternate download options for unavailable PRM content",
	"summary": "",
	"abstract": "A media system provides improved availability of purchasable recordable media content downloaded from a remote server. The media system preferably includes a memory with logic and a processor configured with the logic to provide a download option to a user. The processor is further configured with the logic to update the download option proximately in time if a change in download resources changes the availability of the download option.",
	"url": null,
	"owner": "Scientific-Atlanta, Inc.",
	"publication_number": "07526788",
	"publication_date": "2009-04-28",
	"application_number": "10008429",
	"application_date": "2001-11-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for organizing network management information",
	"summary": "",
	"abstract": "A Simple Network Management Protocol (SNMP) agent includes logic configured to add a first object ID to a first MIB corresponding to a first software entity responsive to a request from the first software entity, and configured to add a second object ID to a second MIB corresponding to a second software entity responsive to a request from the second software entity, and logic configured to delete the first object ID from the first MIB responsive to a request from the first software entity, and configured to delete the second object ID from the second MIB responsive to a request from the second software entity.",
	"url": null,
	"owner": "Scientific-Atlanta, Inc.",
	"publication_number": "07548965",
	"publication_date": "2009-06-16",
	"application_number": "10417497",
	"application_date": "2003-04-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Drive security session manager",
	"summary": "",
	"abstract": "A storage device has a storage medium, a controller, and a session manager. The storage medium is partitioned into one or more security partitions. The controller is adapted to read and write data to and from the storage medium and to enable security sessions over an interface between one or more host systems and one or more security partitions. The session manager within the storage device is adapted to monitor parameters associated with the one or more security sessions.",
	"url": null,
	"owner": "Seagate Technology LLC",
	"publication_number": "07493656",
	"publication_date": "2009-02-17",
	"application_number": "11142978",
	"application_date": "2005-06-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods of providing java tamperproofing",
	"summary": "",
	"abstract": "A method of protecting Java bytecode is provided that includes the steps of encrypting at least one Java class file to produce at least one encrypted Java class file () which is archived in an archive (). A Java application that depends on the encrypted Java archive () is configured to run by first loading an application stub class () and calling an entry point within the application stub class (). A method is provided of running a Java application that uses such a previously encrypted Java archive (). The method includes the steps of loading an application stub class (). An entry point within the application stub class () is called thereby to call a secure class loader to enable the at least one encrypted Java class file () to be loaded from the archive () and decrypted.",
	"url": null,
	"owner": "SealedMedia Limited",
	"publication_number": "07590863",
	"publication_date": "2009-09-15",
	"application_number": "10398567",
	"application_date": "2001-10-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Hardware-error tolerant computing",
	"summary": "",
	"abstract": "Embodiments include a computing system, a device, and a method. A computing system includes a processor subsystem having an adjustable operating parameter. The computing system also includes an information store operable to save a sequence of instructions. The computing system further includes a controller module. The controller module includes a monitor circuit for detecting an incidence of an operating-parameter-caused error corresponding to an execution of an instruction of the sequence of instructions by the processor subsystem. The controller further includes a control circuit for adjusting the adjustable operating parameter based upon an error-tolerant performance criterion.",
	"url": null,
	"owner": "Searete LLC",
	"publication_number": "07493516",
	"publication_date": "2009-02-17",
	"application_number": "11364130",
	"application_date": "2006-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multi-voltage synchronous systems",
	"summary": "",
	"abstract": "Embodiments include a system, a device, and a method. A computing system includes a synchronous circuit. The synchronous circuit includes a first subcircuit powered by a first power plane having a first power plane voltage and a second subcircuit powered by a second power plane having a second power plane voltage. The system also includes an error detector operable to detect an incidence of a computational error occurring in the first subcircuit. The system further includes a controller operable to change the first power plane voltage based upon the detected incidence of a computational error. The system may include a power supply operable to provide a selected one of at least two voltages to the first power plane in response to the controller.",
	"url": null,
	"owner": "Searete LLC",
	"publication_number": "07512842",
	"publication_date": "2009-03-31",
	"application_number": "11384237",
	"application_date": "2006-03-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Adjusting a processor operating parameter based on a performance criterion",
	"summary": "",
	"abstract": "Embodiments include a controller apparatus, a computerized apparatus, a device, an apparatus, and a method. A controller-apparatus includes a monitoring circuit for detecting a computational error corresponding to an execution of an instruction of a sequence of instructions by a processor subsystem having an adjustable operating parameter. The controller apparatus also includes a recovery circuit for rolling back an execution of the sequence of instructions to a checkpoint in response to the detected computational error. The controller apparatus further includes a control circuit for adjusting the adjustable operating parameter in response to a performance criterion.",
	"url": null,
	"owner": "Searete, LLC",
	"publication_number": "07607042",
	"publication_date": "2009-10-20",
	"application_number": "11364573",
	"application_date": "2006-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Operating system capable of supporting a customized execution environment",
	"summary": "",
	"abstract": "Operating system methods and techniques for supporting one or more custom execution environments (CEs) are provided. According to one embodiment, a determination is made with respect to which system resources of a computer system, if any, are to remain under control of a resident operating system of the computer system and which of the system resources are to be placed under control of one or more CEs. The system resources are then partitioned among the resident operating system and the one or more CEs by associating one or more partitions of the system resources with the one or more CEs. Such partitioning may be performed by the resident operating system by employing hardware-based isolation techniques provided by a processor of the computer system, performed by the resident operating system by employing a secure-platform interface, or configured by a system administrator via hardware partitioning capability provided by the computer system platform.",
	"url": null,
	"owner": "Secure 64 Software Corp.",
	"publication_number": "07509644",
	"publication_date": "2009-03-24",
	"application_number": "10789783",
	"application_date": "2004-02-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Customized execution environment",
	"summary": "",
	"abstract": "Methods and techniques for implementing a custom execution environment (CE) and a related loader are provided. According to one embodiment, the CEincludes code and data sections of an application and code and data sections of a set of system services. The set of system services has direct and full control of a set of hardware resources of a computer system containing one or more processors implementing a parallel protected architecture. According to one embodiment, the system services are designed for maximum simplicity, fastest possible speed, and elimination of security vulnerabilities.",
	"url": null,
	"owner": "Secure64 Software Corp.",
	"publication_number": "07509639",
	"publication_date": "2009-03-24",
	"application_number": "10794995",
	"application_date": "2004-03-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Cryptographic server with provisions for interoperability between cryptographic systems",
	"summary": "",
	"abstract": "The invention is a cryptographic server providing interoperability over multiple algorithms, keys, standards, certificate types and issuers, protocols, and the like. Another aspect of the invention is to provide a secure server, or trust engine, having server-centric keys, or in other words, storing cryptographic keys on a server. The server-centric storage of keys provides for user-independent security, portability, availability, and straightforwardness, along with a wide variety of implementation possibilities.",
	"url": null,
	"owner": "Security First Corporation",
	"publication_number": "07577621",
	"publication_date": "2009-08-18",
	"application_number": "11014967",
	"application_date": "2004-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for keeping track of program indexes in an interactive delivery system",
	"summary": "",
	"abstract": "Indexing techniques to maintain track of IPG pages and allow a terminal to determine whether a selected IPG is currently received and available, which regions are to be assembled together to generate the selected page, and which packet identifiers (PIDs) are to be processed to recover the needed regions. In one method, a u201crosteru201d is formed which includes a number of record elements, with each record element being associated with and identifying a respective IPG page received at a terminal. Each record includes a page ID field that specifically identifies the associated IPG page. A number of fields may be included in each record element such as fields for a guide PID, a video PID, a data PID, and so on. The roster is updated to reflect changes in IPG pages received at the terminal.",
	"url": null,
	"owner": "Sedna Patent Services, LLC",
	"publication_number": "07490343",
	"publication_date": "2009-02-10",
	"application_number": "09709030",
	"application_date": "2000-11-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for recording videoconference data",
	"summary": "",
	"abstract": "A recording system for capturing videoconference session data is provided. The recording system includes a packet intercepting unit configured to identify packets related to the videoconference data being transmitted over a network. The packet intercepting unit is further configured to sort the related packets into corresponding files, wherein each data stream of the videoconference session is associated with one of the corresponding files. A decoder configured to decode data in each of the corresponding files to respective data streams is included, as well as a mixer/composer configured to combine the respective data streams into a single data stream. A recording device configured to record the single data stream onto a storage medium is included. A videoconference system and methods for efficiently recording videoconference data are included.",
	"url": null,
	"owner": "Seiko Epson Corporation",
	"publication_number": "07558221",
	"publication_date": "2009-07-07",
	"application_number": "10778370",
	"application_date": "2004-02-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Providing satellite images of videoconference participant locations",
	"summary": "",
	"abstract": "A videoconferencing method having corresponding apparatus and computer programs comprises receiving exchanging audiovisual data for a videoconference with a videoconference server; identifying a physical location of a videoconference client; and either sending an indicator of the location to the server, which obtains physical location video data for the location comprising satellite photographs of the location and sends the data to other videoconference clients, or obtaining the data and sending the data to the server, which sends the data to other videoconference clients in the videoconference.",
	"url": null,
	"owner": "Seiko Epson Corporation",
	"publication_number": "07633517",
	"publication_date": "2009-12-15",
	"application_number": "11253419",
	"application_date": "2005-10-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Video conference choreographer",
	"summary": "",
	"abstract": "A videoconference system is provided. The videoconference system includes a plurality of clients. A server component configured to distribute media to the plurality of clients is included. The server component includes a media mixer enabling distribution of a composite audio/video data stream to the client component and a videoconference choreographer configured to assist the media mixer in mixing input streams to the server component based upon event data. A conference channel communication connection over which video and audio data streams are carried between the plurality of clients and the server component is provided. A back-channel communication connection over which the event data is communicated between the plurality of clients and the server component is also included. A method for controlling mixing of data streams for a videoconference session is also provided. A scheme for converting documents to be shared during a videoconference session to a common format is also provided.",
	"url": null,
	"owner": "Seiko Epson Corporation",
	"publication_number": "07499075",
	"publication_date": "2009-03-03",
	"application_number": "10952053",
	"application_date": "2004-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for providing locally applicable internet content with secure action requests and item condition alerts",
	"summary": "",
	"abstract": "Optimized delivery of locally applicable Internet content to users. A cache of locally applicable Internet content is maintained in a local content server, based upon a monitoring of locations of users requesting Internet content. Requests for Internet content are received from user equipment through a wireless network base station, and served from the local content server, which is logically proximate to the wireless network base station. The caching of locally applicable Internet content may be maintained on a layered basis. Secure action request receipt and corresponding performance, and item condition alerts are also described.",
	"url": null,
	"owner": "SellerBid, Inc.",
	"publication_number": "07603131",
	"publication_date": "2009-10-13",
	"application_number": "11501747",
	"application_date": "2006-08-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for performing context management in a networked environment",
	"summary": "",
	"abstract": "Methods and apparatus related to context management in a networked environment are provided. According to one aspect, a technique is provided for facilitating communication between a client and a context management (CM) server, comprising establishing a network connection between the client and the CM server to enable communication, and maintaining the connection for the period of time during which the context is maintained.",
	"url": null,
	"owner": "Sentillion, Inc.",
	"publication_number": "07577743",
	"publication_date": "2009-08-18",
	"application_number": "10632673",
	"application_date": "2003-08-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for accessing ActiveX objects in a platform dependent environment from objects in a platform independent environment",
	"summary": "",
	"abstract": "Disclosed are systems and methods for accessing objects executing in a platform dependent environment from objects executing in a platform independent environment. The systems and methods comprise a platform independent environment and a platform dependent environment that is accessible to the platform independent environment. The systems and methods additionally comprise a Java object that executes in the platform independent environment, wherein the Java object provides access to an ActiveX object that executes in the platform dependent environment via a native library interface of the ActiveX object.",
	"url": null,
	"owner": "Sesma Systems, Inc.",
	"publication_number": "07490332",
	"publication_date": "2009-02-10",
	"application_number": "10408169",
	"application_date": "2003-04-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for accessing objects in a platform dependent environment from a platform independent environment",
	"summary": "",
	"abstract": "Disclosed are systems and methods for accessing objects executing in a platform dependent environment from objects executing in a platform independent environment. The systems and methods include a platform independent environment and a platform dependent environment that is accessible to the platform independent environment. The systems and methods additionally include an object executing in the platform independent environment that provides access via a native library interface to an object executing in the platform dependent environment.",
	"url": null,
	"owner": "Sesma Systems, Inc.",
	"publication_number": "07478408",
	"publication_date": "2009-01-13",
	"application_number": "10408213",
	"application_date": "2003-04-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Authenticating resource requests in a computer system",
	"summary": "",
	"abstract": "Systems and methods consistent with the present invention authenticate resource requests in a computer system having a resource controller and a bus. Such systems and methods may monitor the bus for resource requests made to the resource controller, intercept at least one resource request made to the resource controller, determine if the intercepted resource request is authentic, and allow the intercepted resource request to be fulfilled by the resource controller if the resource request is authentic, and otherwise, allow the request to time out.",
	"url": null,
	"owner": "Seventh Knight",
	"publication_number": "07624439",
	"publication_date": "2009-11-24",
	"application_number": "10252511",
	"application_date": "2002-09-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for imaging device job management",
	"summary": "",
	"abstract": "Embodiments of the present invention comprise systems, methods and devices for imaging device job management.",
	"url": null,
	"owner": "Sharp Laboratories of America, Inc.",
	"publication_number": "07633644",
	"publication_date": "2009-12-15",
	"application_number": "11255611",
	"application_date": "2005-10-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for remote configuration-based imaging device accounting",
	"summary": "",
	"abstract": "Aspects of the present invention relate to systems, methods and devices for configuration-based imaging device accounting wherein costs are calculated based on detailed job parameters derived from job configuration data.",
	"url": null,
	"owner": "Sharp Laboratories of America, Inc.",
	"publication_number": "07532835",
	"publication_date": "2009-05-12",
	"application_number": "11193147",
	"application_date": "2005-07-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for error reporting",
	"summary": "",
	"abstract": "A system and method are provided for reporting errors in an object-oriented software architecture environment. The method comprises: an application calling an initial method; in response to the initial method call, at least one object encountering an error in response to a subsequent method call; accumulating error information; and, creating a user-defined accumulated error report. Generally, accumulating error information includes: calling an accumulated error reporting object; and, from the accumulated error report object, calling a method for adding received error information to accumulated error information. Then, creating the user-defined accumulated error report includes calling a method for creating an error report text message by: reviewing the accumulated error information; and, matching accumulated error information with user-selected error criteria. Further, creating an error report text message may include calling a method for: recovering a text message associated with each matching error; and, logically presenting the recovered text message errors.",
	"url": null,
	"owner": "Sharp Laboratories of America, Inc.",
	"publication_number": "07571429",
	"publication_date": "2009-08-04",
	"application_number": "11037498",
	"application_date": "2005-01-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, apparatus, and system for implementing caching of view custom options in a framework to support web-based applications",
	"summary": "",
	"abstract": "In one implementation, a system caches view custom options in a framework to support web-based applications. A set of server-side objects is managed by an object manager (OM) running on a server. A set of browser-side objects runs on a browser running on a client. A remote procedure call (RPC) mechanism enables re-targeting of methods from browser-side objects to server-side objects. A notification mechanism facilitates transmission of notifications from server-side objects to browser-side objects. A cache on the client stores custom options of views.",
	"url": null,
	"owner": "Siebel Systems Inc.",
	"publication_number": "07603677",
	"publication_date": "2009-10-13",
	"application_number": "11786068",
	"application_date": "2007-04-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application instantiation based upon attributes and values stored in a meta data repository, including tiering of application layers, objects, and components",
	"summary": "",
	"abstract": "Instantiation of tiered software applications running on an Internet or Intranet computer system, including a method of instantiation and a program product for instantiation. The method, and program product are particularly useful in instantiation of multi-tiered applications having a user interface tier on the client, browser, or remote computer, from a meta data repository containing attributes and values of the attributes.",
	"url": null,
	"owner": "Siebel Systems, Inc.",
	"publication_number": "07630953",
	"publication_date": "2009-12-08",
	"application_number": "10360269",
	"application_date": "2003-02-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computing system and method to perform run-time extension for world wide web application",
	"summary": "",
	"abstract": "A computing system including a script module to perform a run-time extension to modify the functionality of a corresponding World Wide Web (WWW) application object is described. The script module modifies the functionality of the corresponding WWW application object without modifying the functionality of other WWW application objects of the same class. The computing system further includes an input device for inputting a script for the script module. The script is coupled to the corresponding WWW application object when the corresponding WWW application object is instantiated.",
	"url": null,
	"owner": "Siebel Systems, Inc.",
	"publication_number": "07533386",
	"publication_date": "2009-05-12",
	"application_number": "09967760",
	"application_date": "2001-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for building/updating grammars in voice access systems",
	"summary": "",
	"abstract": "A method and system for building/updating grammars in voice access systems is disclosed. The method includes receiving a grammar update request from a voice access system, retrieving data, filtering the data and providing the filtered data to the voice access system. The grammar update request identifies a navigation context of a user interface provided by a data system. The user interface provides access to information in the data system. The data is retrieved from the data system and pertains to the navigation context. The filtering is performed to obtain filtered data pertaining to user interface (UI) objects enabled for grammar updates.",
	"url": null,
	"owner": "Siebel Systems, Inc.",
	"publication_number": "07493260",
	"publication_date": "2009-02-17",
	"application_number": "11637650",
	"application_date": "2006-12-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatuses to cancel query",
	"summary": "",
	"abstract": "Methods and apparatuses to cancel database queries from a web application user interface in a networked database application. In one embodiment, the method includes receiving a user request to cancel a query previously sent to a database and calling an application programming interface (API) provided by the database to terminate one or more statements running on the database, the one or more statements being related to the query.",
	"url": null,
	"owner": "Siebel Systems, Inc.",
	"publication_number": "07584176",
	"publication_date": "2009-09-01",
	"application_number": "11048837",
	"application_date": "2005-02-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for the electronic provision of services for machines via a data communication link",
	"summary": "",
	"abstract": "With this invention, expert knowledge from machine manufacturers is applied quickly at any time to a machine via the Internet, by providing a main computer (host) for the production and provision of machine-related data and/or services and a machine-side working computer (client), which is connected to the main computer via a data communication link and by means of which (client) machine state data can be acquired in real time and transmitted to the main computer, and by means of which machine-related data and/or services generated by the main computer as a function of such machine state data can be received by means of an analysis and evaluation unit.",
	"url": null,
	"owner": "Siemens Aktiengesellschaft",
	"publication_number": "07567853",
	"publication_date": "2009-07-28",
	"application_number": "11585683",
	"application_date": "2006-10-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for data exchange between network elements in networks with different address ranges",
	"summary": "",
	"abstract": "The invention relates to a method for data exchange between network elements with a first network element, arranged in a first network domain with address valid in the first network domain, a second network element, arranged in a second network domain with an address valid in the first network domain and a network gateway, arranged between the network domains, for the forwarding of a data packet for sending, from the first network element to the second network element, said data packet comprising a characterizing range and a data range. In the characterizing range of the data packet, a conversion of the target address, characterizing the receiving network element, into a target address valid in the second network domain is carried out under control of the network gateway. The first network element thus enters the source address thereof to be entered in the data range of the data packet as the source address of the first network element valid in the second network in the data range.",
	"url": null,
	"owner": "Siemens Aktiengesellschaft",
	"publication_number": "07499448",
	"publication_date": "2009-03-03",
	"application_number": "10554159",
	"application_date": "2004-03-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Notification management for monitoring system",
	"summary": "",
	"abstract": "Some embodiments include an event detector to subscribe to solution members of a condition definition, to receive changes to the solution members, and to evaluate a state of the condition definition a subscription manager to identify users associated with the condition definition, and a notification manager to determine a notification routing for each of the identified users.",
	"url": null,
	"owner": "Siemens Aktiengesellschaft",
	"publication_number": "07478128",
	"publication_date": "2009-01-13",
	"application_number": "11003990",
	"application_date": "2004-12-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for electronic delivery of content for industrial automation systems",
	"summary": "",
	"abstract": "Content is generated on a host system based on real-time data from a controlled process collected over the internet from a customer's client machine tool control system. The client system may request content from a host website. Instructions associated with the requested content, which may be in the form of an application to be run on the client, is delivered to the client via download over the internet. The client gathers real-time data associated with a controlled process and transmits it to the host, where content based on the data can be generated for the client and/or its owner. Data gathered by the host, and content generated on the basis of the data, may be made accessible to machine tool manufacturers. Also, data received by the host is associated with an identifier defined for each client system. A historical database for given client equipment can thereby be created.",
	"url": null,
	"owner": "Siemens Aktiengesellschaft",
	"publication_number": "07603289",
	"publication_date": "2009-10-13",
	"application_number": "09950731",
	"application_date": "2001-09-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Transmission of call-related data in a communications system",
	"summary": "",
	"abstract": "A method for transmitting data in a CTI communications system in the 3party configuration, employs a communications system having a plurality of terminals which, for a communication connection between two or more terminals, generates a call which comprises prescribed information about the connection, a TSP and a plurality of clients which are connected to the TSP and communicate with the TSP via a CTI interface. For the purpose of transmitting files or logging data between the clients, the invention proposes transmitting the data for transmission from one of the clients to the TSP via the CTI interface and writing them to a prescribed memory area for the call. These data can be read by the other clients associated with the call, likewise via the CTI interface.",
	"url": null,
	"owner": "Siemens Aktiengesellschaft",
	"publication_number": "07624191",
	"publication_date": "2009-11-24",
	"application_number": "10304012",
	"application_date": "2002-11-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network group pickup",
	"summary": "",
	"abstract": "A system and apparatus for enabling supplementary service functions, such as group pickup, to be implemented in a communication network having one or more local servers. The group pickup system is adapted to enable one group member to automatically receive or manually pick up another group member's call from anywhere within the network, including outside the local server in a multiserver network. The group pickup system includes an automatic mode unit for enabling the system to pro-actively seek a group member to take a call and a manual mode unit for enabling the system to search for an alerting group member. The system further includes a local connect unit and a remote connect unit to establish local or remote connections to a group member, respectively. A remote search unit enables the system to request a remote search. A queue/dequeue unit is provided for selecting a group member from a group list. A call establishing unit is provided for establishing a connection between the call and the group member and an answer unit is provided to complete the connection. A notification unit may be provided to notify the system of the completed connection. A release links unit may also be provided to release any temporary links used in establishing the connection. An exception handler may also be provided to deal with any error conditions which may occur.",
	"url": null,
	"owner": "Siemens Communications",
	"publication_number": "07492887",
	"publication_date": "2009-02-17",
	"application_number": "09218783",
	"application_date": "1998-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus and method for restoring a conference connection to a cellular telephone",
	"summary": "",
	"abstract": "A telecommunication system has capabilities for managing conference telephone calls. Cellular telephones may be registered to the system and may be used as contact devices in setting up conference telephone calls. When a cellular telephone is participating in a conference telephone call and drops out because, e.g., of lost signal, the system may automatically initiate a call back to re-connect the cellular telephone to the conference telephone call.",
	"url": null,
	"owner": "Siemens Communications, Inc.",
	"publication_number": "07542756",
	"publication_date": "2009-06-02",
	"application_number": "10953103",
	"application_date": "2004-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Instant message broadcasting and presence enabling from electronic mail application",
	"summary": "",
	"abstract": "A system and method for broadcasting a message to multiple contacts in a list of contacts provided by an electronic mail application and furnishing presence information for contacts in the list of contacts provided by the electronic mail application includes an interface for adding functionality to an electronic mail application which supports instance messaging (IM). The interface interfaces with a distributed presence enabled communication platform for providing presence information regarding contact availability. The electronic mail application utilizes the interface for displaying the contact presence information and broadcasting a message to multiple contacts in the list of contacts.",
	"url": null,
	"owner": "Siemens Communications, Inc.",
	"publication_number": "07571190",
	"publication_date": "2009-08-04",
	"application_number": "11233296",
	"application_date": "2005-09-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for alternative presence reporting system",
	"summary": "",
	"abstract": "A telecommunications system includes a plurality of network clients () including a positioning controller () and a radio data network communications controller (); and a positioning server () including a coordinating controller () for maintaining a database of network clients to be tracked and provide updates of position-related information to a presence server (). The plurality of network clients () are configured to transmit position information received via said positioning controller to said positioning server via said radio data network communications controller ().",
	"url": null,
	"owner": "Siemens Communications, Inc.",
	"publication_number": "07606577",
	"publication_date": "2009-10-20",
	"application_number": "10672367",
	"application_date": "2003-09-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for centrally-hosted presence reporting",
	"summary": "",
	"abstract": "A telecommunications system according to an embodiment of the present invention includes a plurality of network clients () including a positioning controller () and a communications controller (); and a positioning server () including a coordinating controller () for maintaining a database of network clients to be tracked, said database further including position-presence correlation information for individual users; wherein said positioning server () is adapted to receive position information from said plurality of network clients and distribute presence information related to said position information as one or more e-mails to one or more network enterprise devices ().",
	"url": null,
	"owner": "Siemens Communications, Inc.",
	"publication_number": "07546127",
	"publication_date": "2009-06-09",
	"application_number": "10672057",
	"application_date": "2003-09-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for collaboration summarization playback",
	"summary": "",
	"abstract": "A system for collaboration summarization playback includes a graphical user interface () for displaying summarization categories () associated with recording cues and clips of the multimedia conference. The categories may be arranged as a list or as thumbnails and typically includes a length of time for each category; a time during the conference when the associated clip was recorded; and a media type. The categories are clickable and allow the associated clip to be played or displayed as recorded. In addition, in certain embodiments, a voice recognition transcription of audio clips may be provided.",
	"url": null,
	"owner": "Siemens Communications, Inc.",
	"publication_number": "07545758",
	"publication_date": "2009-06-09",
	"application_number": "10316567",
	"application_date": "2002-12-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for context-based searching and control of an integrated communications center",
	"summary": "",
	"abstract": "A context-based search system () for control of a digital personal media stream manager (), for example, to control the programming of a video recording device (). Such a system may be maintained by a service provider and can identify a program and date and time without receiving complete details thereof; the DPVSM () can then control the recording of the program using IM or e-mail based-techniques. The context-based search system () includes a message receiver () for receiving the DPVSM message; one or more databases () for storing keywords and program information; a confirmation message generator () for informing the user of identified programming; and a DPVSM control () for causing the DPVSM () to supervise the media recording once one of the identified results have been selected by the user.",
	"url": null,
	"owner": "Siemens Communications, Inc.",
	"publication_number": "07536708",
	"publication_date": "2009-05-19",
	"application_number": "10384346",
	"application_date": "2003-03-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and user interface for processing and navigating patient record information",
	"summary": "",
	"abstract": "A system facilitates the secure access, transfer and update of patient record information and the creation and navigation of image menus supporting the location and access of desired patient record data by a user. A system provides a user interface for use by a portable processing device for accessing and navigating patient record information. The system receives user identification information for use in authorizing user operation of the portable processing device and initiates display of an image including a plurality of links to a corresponding plurality of individual patients. The system also initiates display of a patient record content index image including a plurality of links to a corresponding plurality of items of patient record information in response to user selection of a link to one of the plurality of individual patients. The system further initiates display of an image including information comprising a portion of a patient record in response to user selection of a link to one of the plurality of items of patient record information.",
	"url": null,
	"owner": "Siemens Medical Solutions Health Services Corporation",
	"publication_number": "07555720",
	"publication_date": "2009-06-30",
	"application_number": "09939899",
	"application_date": "2001-08-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for GPU-based 3D nonrigid registration",
	"summary": "",
	"abstract": "A method of registering two images using a graphics processing unit includes providing a pair of images with a first and second image, calculating a gradient of the second image, initializing a displacement field on the grid point domain of the pair of images, generating textures for the first image, the second image, the gradient, and the displacement field, and loading said textures into the graphics processing unit. A pixel buffer is created and initialized with the texture containing the displacement field. The displacement field is updated from the first image, the second image, and the gradient for one or more iterations in one or more rendering passes performed by the graphics processing unit.",
	"url": null,
	"owner": "Siemens Medical Solutions USA, Inc.",
	"publication_number": "07483034",
	"publication_date": "2009-01-27",
	"application_number": "11062962",
	"application_date": "2005-02-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Clustered filesystem for mix of trusted and untrusted nodes",
	"summary": "",
	"abstract": "A cluster of computer system nodes share direct read/write access to storage devices via a storage area network using a cluster filesystem. At least one trusted metadata server assigns a mandatory access control label as an extended attribute of each filesystem object regardless of whether required by a client node accessing the filesystem object. The mandatory access control label indicates the sensitivity and integrity of the filesystem object and is used by the trusted metadata server(s) to control access to the filesystem object by all client nodes.",
	"url": null,
	"owner": "Silicon Graphics International",
	"publication_number": "07640582",
	"publication_date": "2009-12-29",
	"application_number": "10414239",
	"application_date": "2003-04-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multi-class heterogeneous clients in a clustered filesystem",
	"summary": "",
	"abstract": "A cluster of computer system nodes connected by a storage area network include two classes of nodes. The first class of nodes can act as clients or servers, while the other nodes can only be clients. The client-only nodes require much less functionality and can be more easily supported by different operating systems. To minimize the amount of data transmitted during normal operation, the server responsible for maintaining a cluster configuration database repeatedly multicasts the IP address, its incarnation number and the most recent database generation number. Each node stores this information and when a change is detected, each node can request an update of the data needed by that node. A client-only node uses the IP address of the server to connect to the server, to download the information from the cluster database required by the client-only node and to upload local disk connectivity information.",
	"url": null,
	"owner": "Silicon Graphics International",
	"publication_number": "07617292",
	"publication_date": "2009-11-10",
	"application_number": "10414236",
	"application_date": "2003-04-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Recovery and relocation of a distributed name service in a cluster filesystem",
	"summary": "",
	"abstract": "A cluster of computer system nodes share direct read/write access to storage devices via a storage area network using a cluster filesystem. During relocation of a server for a distributed name service and recovery of a cluster, entries related to the distributed name service for filesystems is updated. During relocation, a new server for a filesystem informs all nodes in the cluster of the new server's location. During recovery, a process executing on each node deletes entries related to the distributed name service for any filesystem that does not have a server in the recovering cluster.",
	"url": null,
	"owner": "Silicon Graphics, Inc.",
	"publication_number": "07593968",
	"publication_date": "2009-09-22",
	"application_number": "10345357",
	"application_date": "2003-01-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer monitor having flat panel display and printhead",
	"summary": "",
	"abstract": "A computer monitor is provided having a flat panel display for displaying images and a printhead disposed adjacent a lower portion of the computer monitor. The monitor is configured such that print media to be printed is fed manually into a feed path that directs the print media from a region adjacent the upper edge of the flat panel display, past the printhead for printing, then out of the monitor adjacent a lower edge of the flat panel display.",
	"url": null,
	"owner": "Silverbrook Research Pty Ltd",
	"publication_number": "07618104",
	"publication_date": "2009-11-17",
	"application_number": "12324492",
	"application_date": "2008-11-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Printing and display device having a media path adjacent a flat panel display",
	"summary": "",
	"abstract": "A printing and display device comprising: a flat panel display; and a printer, including a printhead for printing onto paper; the device being configured such that, during printing, the paper being printed passes between the flat panel display and the printhead, or passes behind the flat panel display and the printhead relative to a viewing position of the flat panel display.",
	"url": null,
	"owner": "Silverbrook Research Pty Ltd",
	"publication_number": "07535599",
	"publication_date": "2009-05-19",
	"application_number": "10803076",
	"application_date": "2004-03-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Printing and display device incorporating a multi-sheet feeder",
	"summary": "",
	"abstract": "A printing and display device comprising a flat panel display; a printer, including a printhead for printing onto paper; a multi-sheet paper holder; a paper sheet separator configured to separate a single paper sheet from the paper in the paper holder for supply to the printhead.",
	"url": null,
	"owner": "Silverbrook Research Pty Ltd",
	"publication_number": "07528987",
	"publication_date": "2009-05-05",
	"application_number": "10803077",
	"application_date": "2004-03-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Printing and display device incorporating a replaceable ink cartridge",
	"summary": "",
	"abstract": "A printing and display device comprising: a flat panel display for displaying images from a computer; a stand for holding the flat panel display in an operative position; and a printer, the printer including a printhead for printing onto paper; wherein the stand includes at least one receptacle configured to accept at least one replaceable ink cartridge for supplying ink to the printer.",
	"url": null,
	"owner": "Silverbrook Research Pty Ltd",
	"publication_number": "07570389",
	"publication_date": "2009-08-04",
	"application_number": "10803073",
	"application_date": "2004-03-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Continuous data optimization by filtering and positioning systems",
	"summary": "",
	"abstract": "Methods and systems of continuously optimizing data in WiFi positioning systems. A location-based services system for WiFi-enabled devices calculates the position of WiFi-enabled devices. A WiFi-enabled device communicates with WiFi access points within range of the WiFi-enabled device so that observed WiFi access points identify themselves. A reference database is accessed to obtain information specifying a recorded location for each observed WiFi access point. The recorded location information for each of the observed WiFi access points is used in conjunction with predefined rules to determine whether an observed WiFi access point should be included or excluded from a set of WiFi access points. The recorded location information of only the WiFi access points included in the set are used and the recorded location information of the excluded WiFi access points are excluded when calculating the geographical position of the WiFi-enabled device.",
	"url": null,
	"owner": "Skyhook Wireless, Inc.",
	"publication_number": "07474897",
	"publication_date": "2009-01-06",
	"application_number": "11359271",
	"application_date": "2006-02-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Continuous data optimization of new access points in positioning systems",
	"summary": "",
	"abstract": "Methods and systems of continuously optimizing data in WiFi positioning systems. A location-based services system uses WiFi-enabled devices to monitor WiFi access points in a target area to indicate whether a WiFi access point is newly-observed. A WiFi-enabled device communicates with WiFi access points within range of the WiFi-enabled device so that observed WiFi access points identify themselves. A reference database is accessed to obtain information specifying a recorded location for each observed WiFi access point in the target area. Observed WiFi access points for which the reference database has no information specifying a corresponding recorded location are identified. The recorded location information for each of the observed WiFi access points is used to calculate the position of the WiFi-enabled device. The reference database is informed of the WiFi access points (for which there was no information in the database) and is provided the calculated position in conjunction therewith.",
	"url": null,
	"owner": "Skyhook Wireless, Inc.",
	"publication_number": "07493127",
	"publication_date": "2009-02-17",
	"application_number": "11359144",
	"application_date": "2006-02-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for analyzing and reporting extensible data from multiple sources in multiple formats",
	"summary": "",
	"abstract": "A system and method for analyzing and reporting data from multiple sources is provided. The system is a foundation for an analytical platform that covers not only traditional relational data, but also a new generation of extensible data formats designed for the web, such as those based on XML (FIXML, FpML, ebXML, XBRL, ACORD, etc.), as well as HTML, E-mail, Excel, PDF, and others. In a preferred embodiment, the eXtensible on-line analytical processing (XOLAP), is a scalable client/server platform that allows the multi-dimensional analysis of modern data types, as well as traditional relational data, by bringing them all into an internal common XML-based model, without the time and expense of creating a data warehouse.",
	"url": null,
	"owner": "Skytide, Inc.",
	"publication_number": "07630956",
	"publication_date": "2009-12-08",
	"application_number": "11370522",
	"application_date": "2006-03-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for enhancing voice calls, such as enhancing voice calls with data services",
	"summary": "",
	"abstract": "A method and system for enhancing voice calls is described. In some examples, the system receives a dialed number from a user associated with a voice call, determines that the voice call is associated with a party capable of providing data services to the user, and provides data services to the user. In some cases, the system provides the data services to the user during the voice call. In some cases, the system provides the data services to the user in lieu of the voice call.",
	"url": null,
	"owner": "SNAPin Software Inc.",
	"publication_number": "07539484",
	"publication_date": "2009-05-26",
	"application_number": "11672499",
	"application_date": "2007-02-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Tag system",
	"summary": "",
	"abstract": "A monitoring device is configured to be attached to an agent to be monitored. The device includes sensor circuitry that detects or measures conditions relating to the environment, the agent or the agent's behavior. A microcontroller processes the conditions to produce event data, and a wireless transmitter transmits the event data to a remote host system. The conditions can include temperature, acceleration, the presence of another tag, or other conditions relating to the agent. The event data may relate to movement of the agent, an encounter with another tag, or other behavior of the agent, and may be stored to an internal memory. The monitoring device may also include a transmitter that transmits a signal, or tag identifier, that identifies the device. The event data may be reported as information relating to the behavior of the agent.",
	"url": null,
	"owner": "Snif Labs, Inc.",
	"publication_number": "07616124",
	"publication_date": "2009-11-10",
	"application_number": "11546519",
	"application_date": "2006-10-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Process for the secure management of the execution of an application",
	"summary": "",
	"abstract": "To secure the execution of an application on an intelligent mobile telephone, each application is identified by an identifier and a table or rights is associated with each resource on the mobile telephone. Through a table of rights, access rights to the resource can be associated with an application identifier. This makes it possible to manage, for each resource, the applications that are allowed to invoke the resource. Moreover, the rights associated with a resource can only be modified by the owner of the resource.",
	"url": null,
	"owner": "Societe Francaise du Radiotelephone",
	"publication_number": "07623846",
	"publication_date": "2009-11-24",
	"application_number": "11343076",
	"application_date": "2006-01-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for associating a process on a multi-user device with a host address unique to a user session associated with the process",
	"summary": "",
	"abstract": "A method and system for associating a process on a multi-user device with a host address unique to a user session associated with the process begins by allocating a unique host address for the user session and assigning it to a network adapter. Requests that may bind network resources are intercepted, and relevant bind request parameters are manipulated to specify the host address associated with the user session. The original target of the request is invoked with potentially modified parameters.",
	"url": null,
	"owner": "Softricity, Inc.",
	"publication_number": "07590743",
	"publication_date": "2009-09-15",
	"application_number": "11016015",
	"application_date": "2004-12-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of processing online payments with fraud analysis and management system",
	"summary": "",
	"abstract": "Systems and methods are disclosed to detect fraud by analyzing customer purchasing behavior for a high value item intentionally placed next to commonly purchased items, payment information for an address verification system (AVS), customer behavioral information, password sharing between two accounts, unique identification for a hardware component of a client computer used to purchase items on line, administrative information associated with a customer account; and Internet Protocol (IP) address.",
	"url": null,
	"owner": "Softroute Corporation",
	"publication_number": "07539644",
	"publication_date": "2009-05-26",
	"application_number": "11715587",
	"application_date": "2007-03-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Packet validation in virtual network interface architecture",
	"summary": "",
	"abstract": "Roughly described, a network interface device receiving data packets from a computing device for transmission onto a network, the data packets having a certain characteristic, transmits the packet only if the sending queue has authority to send packets having that characteristic. The data packet characteristics can include transport protocol number, source and destination port numbers, source and destination IP addresses, for example. Authorizations can be programmed into the NIC by a kernel routine upon establishment of the transmit queue, based on the privilege level of the process for which the queue is being established. In this way, a user process can use an untrusted user-level protocol stack to initiate data transmission onto the network, while the NIC protects the remainder of the system or network from certain kinds of compromise.",
	"url": null,
	"owner": "Solarflare Communications, Inc.",
	"publication_number": "07634584",
	"publication_date": "2009-12-15",
	"application_number": "11116018",
	"application_date": "2005-04-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Controlling playback of content stored on a portable storage medium",
	"summary": "",
	"abstract": "A method of playing multimedia content comprising reading, at a local machine, local multimedia content stored on a portable storage medium; and utilizing a control structure stored on the separate storage medium to alter the playback of the local multimedia content stored on the portable storage medium. A method of providing multimedia content comprising the steps of reading, at a local machine, local multimedia content stored on a portable storage medium; and downloading a control structure to control the display of the local multimedia content.",
	"url": null,
	"owner": "Sonic Solutions, A California Corporation",
	"publication_number": "07499938",
	"publication_date": "2009-03-03",
	"application_number": "10957033",
	"application_date": "2004-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and article of manufacture for updating content stored on a portable storage medium",
	"summary": "",
	"abstract": "A system, method, and article of manufacture is provided for updating content stored on a portable storage medium. Upon input of a portable storage medium into a machine by a user, the content stored on the portable storage medium is read. After reading the content of the portable storage medium, a separate storage medium is accessed and content is received therefrom. The content from the separate storage medium is an update of the content of the portable storage medium. This content of the separate storage medium is then displayed.",
	"url": null,
	"owner": "Sonic Solutions, a California corporation",
	"publication_number": "07577677",
	"publication_date": "2009-08-18",
	"application_number": "10877644",
	"application_date": "2004-06-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Connecting a peer in a peer-to-peer relay network",
	"summary": "",
	"abstract": "Methods and apparatus for implementing peer-to-peer relay. In one implementation, a peer-to-peer relay network includes: a plurality of N peer systems; wherein each peer system is connected to a number of other peer systems that is less than or equal to a connection limit, said connection limit is greater than or equal to 2, said connection limit is less than or equal to Nu22122, and each peer system is configured to relay data to peer systems connected to that peer system according to a set of one or more relay rules.",
	"url": null,
	"owner": "Sony Computer Entertainment America Inc.",
	"publication_number": "07627678",
	"publication_date": "2009-12-01",
	"application_number": "10700798",
	"application_date": "2003-11-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Island recovery in a peer-to-peer relay network",
	"summary": "",
	"abstract": "Methods and apparatus for implementing peer-to-peer relay. In one implementation, a method of island recovery in a peer system in a peer-to-peer relay network includes: detecting the presence of two or more islands in a peer-to-peer relay network, wherein each island includes at least one peer system; joining two detected islands by connecting a peer system in a first island to a peer system in a second island; wherein peer systems in different islands are not connected.",
	"url": null,
	"owner": "Sony Computer Entertainment America Inc.",
	"publication_number": "07596633",
	"publication_date": "2009-09-29",
	"application_number": "10701298",
	"application_date": "2003-11-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Log collecting/analyzing system with separated functions of collecting log information and analyzing the same",
	"summary": "",
	"abstract": "A log collecting/analyzing system has a log collection terminal device as a client terminal device which collects logs and transmits the collected logs to a log server via a network. The log server receives the transmitted logs and stores the received logs for analysis. According to this configuration, it is possible to obtain useful information, such as information about what play modes are popular in the case of games and so forth, or information about what characters are popular in the case of selecting a character for a game. Therefore, it is possible to make use of the result of log analysis to develop the game.",
	"url": null,
	"owner": "Sony Computer Entertainment Inc.",
	"publication_number": "07558820",
	"publication_date": "2009-07-07",
	"application_number": "10162470",
	"application_date": "2002-06-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for identifying available resources in a peer-to-peer network",
	"summary": "",
	"abstract": "A method for a peer of a peer-to-peer network to search for an available resource is provided. The method initiates with representing a request for the available resource as a request bit string. The method includes transmitting the request to a parent of the peer. Then, an aggregate availability bit string associated with the parent is accessed. The aggregate availability bit string represents an aggregate resource availability for all children of the parent. Next, a logical operation is performed with the bits of the aggregate availability bit string and the bits of the request bit string. Then, it is determined whether any of the children of the parent are able to provide the available resource based upon a result of the logical operation. A peer-to-peer grid and a system for publishing and identifying an available resource in a peer-to-peer distributed network are also provided.",
	"url": null,
	"owner": "Sony Computer Entertainment Inc.",
	"publication_number": "07603464",
	"publication_date": "2009-10-13",
	"application_number": "10857559",
	"application_date": "2004-05-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for providing a software implemented cache memory",
	"summary": "",
	"abstract": "Methods and apparatus provide a processor for operative connection to a main memory for storing data, the processor being operable to request at least some of the data for use; and a local memory in operative connection with the processor such that the data may be stored therein for use by the processor, the local memory not being a hardware cache memory, wherein the processor is operable to execute application program interface code that configures the local memory to include at least one software invoked cache memory area therein.",
	"url": null,
	"owner": "Sony Computer Entertainment Inc.",
	"publication_number": "07526608",
	"publication_date": "2009-04-28",
	"application_number": "11136022",
	"application_date": "2005-05-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Apparatus control method and system",
	"summary": "",
	"abstract": "The present invention provides a method and system for solving the problem that re-drawing of a screen is instantaneously switched to and makes the screen hard to view when repeating the same operation or the like in the case of remote control of an apparatus using a browser, a server installed in a household electrical appliance or other apparatus, and applications thereof. The method and system of the present invention (1) have the server prepare by a frame structure a higher page forming a burial origin for a page of a desired layout on the display screen of the browser programmed by HTML, (2) have the server set a dummy frame page of a region zero not containing content in the prepared frame, (3) have the server set a desired page to be displayed in a remaining region, (4) have the server set the frame lines not to be displayed, (5) have the server set a response frame for a request from the browser in the dummy frame, and (6) have the browser display processing results from the server and not appear to update the inside of the desired frame of the browser screen for any response.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "07568159",
	"publication_date": "2009-07-28",
	"application_number": "10149870",
	"application_date": "2001-10-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Audio communication device and audio communication method",
	"summary": "",
	"abstract": "An audio communication apparatus including a communication unit configured to communicate with an external device, an input unit configured to input an operating signal for operating the external device; a microphone configured to collect sound, a speaker configured to output sound, and a control unit configured to transmit the sound input from the microphone to the external device via the communication unit and transmit an audio signal received via the communication unit to the speaker, and configured to be connected to the input unit and control enabling and disabling of a function of the input unit.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "07525533",
	"publication_date": "2009-04-28",
	"application_number": "11525810",
	"application_date": "2006-09-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Community service offering apparatus, community service offering method, program storage medium, and community system",
	"summary": "",
	"abstract": "A community system is disclosed which allows community service offering apparatus to exchange information with a plurality of user terminals connected by a network. The community service offering apparatus includes: a virtual space information storing element for storing in advance information about a plurality of virtual spaces; a virtual space offering element for allowing a user to select any one of the virtual spaces and for offering the selected virtual space as a user-specific virtual space owned by the user regarded as a privileged user; and a charge controlling element for charging the privileged user who owns the user-specific virtual space a fee corresponding to a type of the user-specific virtual space, while not charging fees on those users other than the privileged user who simply gain access to the user-specific virtual space of the privileged user.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "07587338",
	"publication_date": "2009-09-08",
	"application_number": "09961375",
	"application_date": "2001-09-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Data communicating apparatus and method for managing memory of data communicating apparatus",
	"summary": "",
	"abstract": "In an initial state, an IC card issuer manages the entire memory area. When a different service provider separates the memory area to generate a new file system, the service provider is required for the authority of separating the memory area and authentication by the IC card issuer. After the file is separated, in order to access the file system, authentication by the service provider which has separated the file is required. The IC card provides a user with ease of use as if the IC card were directly issued by the service provider of the service that the user is currently using.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "07516479",
	"publication_date": "2009-04-07",
	"application_number": "10585256",
	"application_date": "2004-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Integrated recording and editing apparatus and system",
	"summary": "",
	"abstract": "A field editing system for editing materials in a material collecting place. Data for management of digital video and audio signals and data of an edit list are recorded on a disc-like recording medium together with the digital video and audio signals. Collected materials can be processed on the common disc-like recording medium from image pickup to editing.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "07555204",
	"publication_date": "2009-06-30",
	"application_number": "10439543",
	"application_date": "2003-05-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method of and system for auctioning off commercial frames for on-air content and method of and system for automatically sending on-air content",
	"summary": "",
	"abstract": "A method of and system for auctioning off commercial (CM) frame for on-air content and a method of and system for automatically sending on-air content. A broadcast station presents as an auctioneer a CM frame for sale and a lowest sale price to tenderers via a communication network. On the basis of the supplied information, each tenderer sends an auction application price for the CM frame to the auctioneer via the communication network. The auctioneer determines a successful tenderer for the CM frame on the basis of the highest auction application prices presented by the tenderers. The CM frame successfully tendered by this network auction is automatically registered in a broadcast sales information system along with CM content information to be incorporated in the CM frame. A content sending system takes the registered CM content from a CM bank at a predetermined broadcast time for automatic transmission and broadcasting.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "07590586",
	"publication_date": "2009-09-15",
	"application_number": "10123267",
	"application_date": "2002-04-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Reproducing apparatus, reproducing method, reproducing program, and recording medium for multi-angle video reproduction",
	"summary": "",
	"abstract": "For a large capacity recording medium, a user interface having high flexibility and enriched representation is accomplished. A flag that represents whether a play item has a multiple angle structure of which the play item is reproduced with a plurality of angles is described. In addition, a flag that represents whether the beginning of each decode unit is an angle switchable point is described. In a seamless multiple angle structure, the current angle can be switched without need to increase the number of interleave units. In a nonseamless multiple angle structure, with the flag, in a predetermined region on the rear end side of each angle, the current angle is prohibited from being switched. Thus, when a play item exits from the multiple angle, discontinuity in the reproduction can be prevented. In addition, with a flag that represents whether a sub play item should be reproduced not in synchronization with a main path, the sub play item of only audio data can be used as a BGM.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "07565060",
	"publication_date": "2009-07-21",
	"application_number": "10519422",
	"application_date": "2004-04-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for automatically creating musical compositions",
	"summary": "",
	"abstract": "A music generation engine automatically generates musical compositions by accessing musical sections and corresponding properties including similarity factors that provide a quantified indication of the similarity of musical sections to one another (e.g., a percentage of similarity). A sequential relationship of the musical sections is then determined according to an algorithmic process that uses the similarity factors to assess the desirability of the sequential relationship. The algorithmically created musical composition may then be stored, such as by rendering the composition as an audio file or by storing a library file that refers to the musical sections. The created musical composition may include layers respectively having different audio elements such that the created musical composition has a first dimension along a timeline and a second dimension that provides a depth based upon the presence of different audio elements. The presence and absence of audio elements along the timeline can be based upon the value of an intensity parameter, which may be an intensity envelope that is predetermined or automatically generated based upon user specifications.",
	"url": null,
	"owner": "Sony Creative Software, Inc.",
	"publication_number": "07491878",
	"publication_date": "2009-02-17",
	"application_number": "11705541",
	"application_date": "2007-02-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Communication device and software for operating multimedia applications",
	"summary": "",
	"abstract": "The present invention particularly enables mobile multimedia applications to effectively use mobile ad-hoc networks in a simple and effective way.",
	"url": null,
	"owner": "Sony Deutschland GmbH",
	"publication_number": "07516201",
	"publication_date": "2009-04-07",
	"application_number": "09728018",
	"application_date": "2000-12-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for authorizing the use of stored information in an operating system",
	"summary": "",
	"abstract": "A method and apparatus for authorizing a file to use stored information for executing a process in a Linux operating system. The file includes an executable linking format, an application authorization data, and other attributes for the application.",
	"url": null,
	"owner": "Sony Electroinics, Inc.",
	"publication_number": "07568102",
	"publication_date": "2009-07-28",
	"application_number": "10893765",
	"application_date": "2004-07-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Application programming interface for data transfer and bus management over a bus structure",
	"summary": "",
	"abstract": "In a first embodiment, an applications programming interface (API) implements and manages isochronous and asynchronous data transfer operations between an application and a bus structure. During an synchronous transfer the API includes the ability to transfer any amount of data between one or more local data buffers within the application and a range of addresses over the bus structure using one or more asynchronous transactions. An automatic transaction generator may be used to automatically generate the transactions necessary to complete the data transfer. The API also includes the ability to transfer data between the application and another node on the bus structure isochronously over a dedicated channel. During an isochronous data transfer, a buffer management scheme is used to manage a linked list of data buffer descriptors. During isochronous transfers of data, the API provides implementation of a resynchronization event in the stream of data allowing for resynchronization by the application to a specific point within the data. Implementation is also provided for a callback routine for each buffer in the list which calls the application at a predetermined point during the transfer of data. An isochronous API of the preferred embodiment presents a virtual representation of a plug, using a plug handle, to the application. The isochronous API notifies a client application of any state changes on a connected plug through the event handle. The isochronous API also manages buffers utilized during a data operation by attaching and detaching the buffers to the connected plug, as appropriate, to manage the data flow.",
	"url": null,
	"owner": "Sony Electronics Inc.",
	"publication_number": "07577782",
	"publication_date": "2009-08-18",
	"application_number": "11002048",
	"application_date": "2004-12-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic dual control on-die termination",
	"summary": "",
	"abstract": "Controlling on-die termination on a bi-directional single-ended data bus carrying data between a controller and a memory device. The controller and the memory device respectively include input termination pull-ups and input termination pull-downs. An enabled state is maintained for the input termination pull-downs of the controller except when data is driven on the bi-directional single ended data bus by the controller. Similarly, an enabled state is maintained for the set of input termination pull-downs of the memory device except when data is driven on the bi-directional single ended data bus by the memory device. In conjunction with this, a disabled state is maintained for the input termination pull-ups of the memory device (or controller) except when data is being received from the bi-directional single-ended data bus by the memory device (or controller).",
	"url": null,
	"owner": "Sony Electronics Inc.",
	"publication_number": "07595657",
	"publication_date": "2009-09-29",
	"application_number": "12078782",
	"application_date": "2008-04-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Networked local media cache engine",
	"summary": "",
	"abstract": "A local media cache engine stores content locally for a particular local device. The content is downloaded or copied from other source devices within a network of devices, when the particular local device is coupled to the network. The content is then available to the local device even when that device is not coupled to the network or when the source device is not coupled to the network. Further, even when the source device of the content is coupled to the network, the local cache provides an easier and faster source of desired content for the local device. The content from the local cache is available to be loaded on a portable device through a synchronization operation. The local media cache engine also has the capability to automatically search for content from the source devices within the network and download the content to the local cache, based on user defined preferences and criteria.",
	"url": null,
	"owner": "Sony Electronics Inc.",
	"publication_number": "07568042",
	"publication_date": "2009-07-28",
	"application_number": "10805042",
	"application_date": "2004-03-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Speech recognition and speaker verification using distributed speech processing",
	"summary": "",
	"abstract": "Processing a speech utterance by communicating between a local computer and a remote computer using a hyper text communication session. The local computer sends a recording of a speech utterance to the remote computer in the session, and receives a result from the remote computer, the result based on a processing of the recording at the remote computer.",
	"url": null,
	"owner": "Speechworks International, Inc.",
	"publication_number": "07571100",
	"publication_date": "2009-08-04",
	"application_number": "10309794",
	"application_date": "2002-12-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system of processing messages",
	"summary": "",
	"abstract": "The invention provides a method of processing messages. The method includes the step of obtaining a subscriber message, from a subscriber communication device over a telecommunications network, the subscriber message representing a voice message from a subscriber. The subscriber message is stored in computer memory and then presented in an audio form to a human operator. A data file is composed which is derived from the subscriber message and the data file transmitted to a subscriber computing device and/or the subscriber communication device. The invention provides a related system for processing messages.",
	"url": null,
	"owner": "Spinvox Limited",
	"publication_number": "07606352",
	"publication_date": "2009-10-20",
	"application_number": "10498928",
	"application_date": "2002-12-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Speech-enabled language translation system and method enabling interactive user supervision of translation and speech recognition accuracy",
	"summary": "",
	"abstract": "A system and method for a highly interactive style of speech-to-speech translation is provided. The interactive procedures enable a user to recognize, and if necessary correct, errors in both speech recognition and translation, thus providing robust translation output than would otherwise be possible. The interactive techniques for monitoring and correcting word ambiguity errors during automatic translation, search, or other natural language processing tasks depend upon the correlation of Meaning Cues and their alignment with, or mapping into, the word senses of third party lexical resources, such as those of a machine translation or search lexicon. This correlation and mapping can be carried out through the creation and use of a database of Meaning Cues, i.e., SELECT. Embodiments described above permit the intelligent building and application of this database, which can be viewed as an interlingua, or language-neutral set of meaning symbols, applicable for many purposes. Innovative techniques for interactive correction of server-based speech recognition are also described.",
	"url": null,
	"owner": "Spoken Translation Ind.",
	"publication_number": "07539619",
	"publication_date": "2009-05-26",
	"application_number": "10936093",
	"application_date": "2004-09-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Call center dashboard",
	"summary": "",
	"abstract": "A password management system is provided. The password management system includes a plurality of enterprise applications accessible by local and remote desktop computers by providing single sign-on security information. Each of the plurality of enterprise applications require separate login information which is stored in a secure back-end system along with the single sign-on security information. Scripts located, for example, on remotely accessible servers and/or on the local desktop computer, allow a user to logon with a single sign-on and have access to the plurality of enterprise applications. The script uses the single sign-on security information, and perhaps other information, to authenticate the user and access the login information for each of the enterprise applications. The script is further operable to automatically interface with the enterprise applications through user input windows, such as by scripting login information automatically into the enterprise application login windows.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "07636852",
	"publication_date": "2009-12-22",
	"application_number": "10960535",
	"application_date": "2004-10-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Computer method and system for integrating enterprise JavaBeans into non-Java environments",
	"summary": "",
	"abstract": "Disclosed herein is a method of accessing an Enterprise Java Bean (EJB) by a non-Java application within a computing environment, comprising: calling a client library by the non-Java application; invoking a function within the client library to construct an HTTP request corresponding to the calling input parameters from the non-Java application; passing the HTTP request from the client library to an EjbServlet; invoking a method on an EJB by the EjbServlet based upon the HTTP request; returning information from the invoked method from the EJB to the EjbServlet; decoding the returned information into an HTTP response string by the EjbServlet; transmitting the HTTP response from the EjbServlet to the client library; and parsing the HTTP response by the client library into return information compatible with the non-Java application and then passing the return information from the client library to the non-Java application.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "07617504",
	"publication_date": "2009-11-10",
	"application_number": "10657579",
	"application_date": "2003-09-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Framework for application monitoring and management",
	"summary": "",
	"abstract": "A system is provided for monitoring one or more applications. The system includes a data store to maintain data, such as logs stored in a log file, describing transactions involving at least one of the applications. Some of the data includes context specific information which may be of varying length or content. The system includes agents, adapters, a controller, and a console. The agents communicate the data to the data store according to a configured delivery method. The adapters receive the data from the applications and forward the data to one of the agents. The controller manages the agents and is operable to analyze the data. The console is coupled to the controller to receive command inputs from a user to provide the analysis of the data to the user.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "07640337",
	"publication_date": "2009-12-29",
	"application_number": "10975276",
	"application_date": "2004-10-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Productivity measurement and management tool",
	"summary": "",
	"abstract": "A system for managing and monitoring a project to be developed is provided. The system includes a first and a second document, the first document identifies a first set of interactions between a plurality of applications. The first set of interactions identifies functionality of the project to be developed. The second document identifies a second set of interactions within at least one of the applications. The second set of interactions identifies additional functionality of the project. The system also includes a baseline document and an estimator component. The baseline document identifies existing functions of interactions between the applications and existing functions of interactions within applications. The estimator component is operable to access the first, second, and baseline document and to count a number of interactions identified in the first and second sets of interactions not identified in the baseline document of existing functions of interactions.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "07640531",
	"publication_date": "2009-12-29",
	"application_number": "10867074",
	"application_date": "2004-06-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Service access architecture",
	"summary": "",
	"abstract": "A service access architecture to enable customer access to telecommunications provider services is provided. The service access architecture includes a service layer providing a standard interface for communication with customer applications to access network systems and data systems of the telecommunications provider. The service access architecture also includes a device/data layer maintaining the network systems and data systems of the telecommunications provider. The service access architecture includes an adaptation layer coupled to communicate, via at least one broker of the adaptation layer, with the service layer and to communicate, via at least one adapter of the adaptation layer, with the device/data layer, the adaptation layer operable to interface between the service layer and the device/data layer. A method is also provided for a customer of a telecommunications provider to gain access to the telecommunications provider's services and applications using a customer application.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "07617293",
	"publication_date": "2009-11-10",
	"application_number": "10848240",
	"application_date": "2004-05-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Web services management architecture",
	"summary": "",
	"abstract": "A system for web services management is provided. The system includes a plurality of web services, a catalog of business services, and an orchestration service. Each business service corresponds to one or more web services. The orchestration service can invoke an appropriate web service when a business service is selected from the catalog.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "07571123",
	"publication_date": "2009-08-04",
	"application_number": "11409191",
	"application_date": "2006-04-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for exchanging data between portable applications for mobile devices",
	"summary": "",
	"abstract": "A mobile information device may execute a Java MIDlet or a non-MIDlet application. The mobile information device may further include an object-oriented application program interface that allows one or more object-oriented object classes to allow input and output data to be communicated between Java MIDlets in different MIDlet Suites and between non-MIDlet applications.",
	"url": null,
	"owner": "Sprint Spectrum L.P.",
	"publication_number": "07568202",
	"publication_date": "2009-07-28",
	"application_number": "10808271",
	"application_date": "2004-03-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure authentication using a low pin count based smart card reader",
	"summary": "",
	"abstract": "A computer system may receive one or more credentials of a user (e.g., username, password, etc.) from an integrated circuit (IC) device carried by the user. The computer system may include an IC device interface to receive the user credential(s) from the IC device. The IC device interface may be coupled to a CPU of the computer system through a low pin count (LPC) bus. The user credential(s) may be used to grant access to software and/or to grant access to information. Access may be granted to information stored on the computer system. In some embodiments, the computer system may be coupled to a network and transmit the user credential(s) from the IC device and a request for access of information to a service provider coupled to the network. The service provider may grant or deny the request for access of information based on user credential(s).",
	"url": null,
	"owner": "Standard Microsystems Corporation",
	"publication_number": "07631348",
	"publication_date": "2009-12-08",
	"application_number": "10995000",
	"application_date": "2004-11-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Standard operating procedure automation in database administration",
	"summary": "",
	"abstract": "A plurality of modules and/or engines to manage the operation and health of a plurality of databases through the use of standard operating procedures (SOPs). Modules of the present invention are configured to assist database administrators to create, and thereafter store in an accessible memory resource, a plurality of SOPs. These SOPs define procedures to address various database informational states. Database state information is monitored, collected and analyzed to determine, based either on a predetermined rule set or on manual input from an authorized database administrator, whether one or more SOPs will be applied to a particular database environment. These SOPs can be combined and/or executed on the database either automatically or manually.",
	"url": null,
	"owner": "Stratavia Corporation",
	"publication_number": "07571225",
	"publication_date": "2009-08-04",
	"application_number": "11770454",
	"application_date": "2007-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Standard operating procedure automation in database administration",
	"summary": "",
	"abstract": "A plurality of modules and/or engines to manage the operation and health of a plurality of data center assets through the use of standard operating procedures (SOPs). Modules of the present invention are configured to assist IT Administrators to create, and thereafter store in an accessible memory resource, a plurality of SOPs. These SOPs define procedures to address various data center asset informational states. An asset's state information is monitored, collected and analyzed to determine, based either on a predetermined rule set or on manual input from an authorized IT Administrator, whether one or more SOPs will be applied to a particular data center asset. These SOPs can be combined and/or executed on the asset either automatically or manually.",
	"url": null,
	"owner": "Stratavia Corporation",
	"publication_number": "07529827",
	"publication_date": "2009-05-05",
	"application_number": "11953563",
	"application_date": "2007-12-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Protocol method for provisioning services",
	"summary": "",
	"abstract": "An invention is disclosed for a computer protocol that facilitates provisioning services to client devices. The computer protocol includes discovery transactions that allow a client device to retrieve information regarding services available to the client device from a provisioning server. A service comprises a plurality of content files capable of being installed on the client device. The computer protocol also includes subscription transactions that allow the client device to manage content in service directories. A service directory comprises a plurality of services. Further included in the computer protocol are delivery transactions that allow the client device to downloading of data related to services.",
	"url": null,
	"owner": "Sun Microsystems, Inc",
	"publication_number": "07617324",
	"publication_date": "2009-11-10",
	"application_number": "10600281",
	"application_date": "2003-06-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Acceleration of graphics for remote display using redirection of rendering and compression",
	"summary": "",
	"abstract": "A system and method are disclosed for improving the remote display of graphics images by the redirection of rendering and the optional use of image data compression. Instead of sending graphics commands over a network and rendering on a remote computer system, graphics commands may be automatically redirected by modified OpenGL functions to local graphics devices without explicit involvement by the graphics application. The modifications to a set of the OpenGL functions on the local system are transparent in the normal mode of rendering and displaying locally. After an image is rendered locally, it may be read back and sent across the network. A standard X Server on the remote system may be sufficient to support this methodology. An X Extension for data decompression on the remote system, however, may allow for more efficient image transmission through the use of image data compression.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07564461",
	"publication_date": "2009-07-21",
	"application_number": "11174847",
	"application_date": "2005-07-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Annotation processing from source files and class files",
	"summary": "",
	"abstract": "Methods for processing annotations from files are provided. The method initiates with identifying an annotation present in a source file or a class file, and identifying factories available for processing annotations. The method includes determining annotations supported by each of the available factories. Then, one of the available factories is assigned to process the annotation based on the annotation present in the source file or the class file being supported by the one of the available factories. The annotation processing tool directly accesses the class files to process the annotations. The explicitly processed class files may or may not be referenced by source files.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07499956",
	"publication_date": "2009-03-03",
	"application_number": "11166583",
	"application_date": "2005-06-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Annotation processor discovery",
	"summary": "",
	"abstract": "Methods for discovering and accessing annotation processors are provided. The method initiates with identifying an annotation present in a source file and identifying factories available for processing annotations. The method includes determining annotations supported by each of the available factories. Then, one of the available factories is assigned to process the annotation based on the annotation present in the source file being supported by the one of the available factories. A computer readable medium is also provided.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07565364",
	"publication_date": "2009-07-21",
	"application_number": "11137727",
	"application_date": "2005-05-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Applying distributed simulation techniques to hardware emulation",
	"summary": "",
	"abstract": "A system for applying distributed software simulation techniques to hardware emulation may include a first hardware emulator mounted on a first expansion board at a first host, and a second hardware emulator mounted on a second expansion board at a second host. The first hardware emulator may be configured to emulate a first portion of a system under test, and the second hardware emulator may be configured to emulate a second portion of the system under test, and the first and second hardware emulators may coordinate an emulation of the system under test using one or more messages, i.e., a coordination of an emulation of the system under test may be accomplished using communications between the first and second hardware emulators.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07480609",
	"publication_date": "2009-01-20",
	"application_number": "11047148",
	"application_date": "2005-01-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Business integration component for containers",
	"summary": "",
	"abstract": "A system for bidirectional communication using normalized messages via a service engine includes a Java Enterprise Edition (EE) package, a Java Business Integration (JBI) package including a Normalized Message Router (NMR) and a binding component, and the service engine for enabling direct communication between the Java EE package and the JBI package, where the service engine converts a first message from a first protocol to a second protocol, where the first message is sent from the Java EE package to the JBI package, and the service engine converts a second message from the second protocol to the first protocol, where the second message is sent from the JBI package to the Java EE package.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07584302",
	"publication_date": "2009-09-01",
	"application_number": "11471395",
	"application_date": "2006-06-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Efficient event completion in UDAPL",
	"summary": "",
	"abstract": "A technique in accordance with one embodiment of the invention uses an adaptive algorithm to obtain UDAPL event messages. According to one aspect, a process repetitively performs the following steps as long as the process expects to receive at least one event message. By polling the event message queue at least once, the process determines whether the queue is empty. If the queue is empty, then the process blocks until specified criteria have been satisfied. Alternatively, if the queue is not empty, the process reads an event message from the queue. After the process has either read an event message from the event message queue or finished blocking, the foregoing steps are repeated if the process still expects to receive at least one more event message. According to one aspect, when the process blocks, the process blocks only until a specified number of event messages have arrived in the queue.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07577712",
	"publication_date": "2009-08-18",
	"application_number": "11395745",
	"application_date": "2006-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Extensible computing system",
	"summary": "",
	"abstract": "Methods and apparatus providing a dynamically sized, highly scalable and available server farm are disclosed. A Virtual Server Farm (VSF) is created out of a wide scale computing fabric (u201cComputing Gridu201d) which is physically constructed once and then logically divided up into VSFs for various organizations on demand. Each organization retains independent administrative control of a VSF. A VSF is dynamically firewalled within the Computing Grid. Allocation and control of the elements and topology in the VSF is performed by a Control Plane connected to all computing, networking, and storage elements in the computing grid through special control ports. No physical rewiring is necessary in order to construct VSFs in many different configurations, including single-tier Web server or multi-tier Web-server, application server, database server configurations.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07503045",
	"publication_date": "2009-03-10",
	"application_number": "10917163",
	"application_date": "2004-08-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Framework for lengthy Java Swing interacting tasks",
	"summary": "",
	"abstract": "Methods and apparatuses are disclosed for sending data from a process to an event dispatch thread for output, where the event dispatch thread handling events may be related to a user interface. The method may include the steps of providing the process. The process and the event dispatch thread executing independent of one another and the process generating a first method call during execution of the process and a final result upon completion of execution, where the first method call includes a partial result generated by the executing process. The method may further include sending the first method call, storing the first method, including coalescing the first method call with an existing method call, retrieving the partial result from the first method call, and outputting the retrieved first method call on the event dispatch thread such that the partial result is displayed to a user.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07584478",
	"publication_date": "2009-09-01",
	"application_number": "11054586",
	"application_date": "2005-02-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Framework for providing a configurable firewall for computing systems",
	"summary": "",
	"abstract": "A configurable firewall for computing systems is disclosed. The configurable firewall provides a firewall control block that can be used as a mechanism to implement and control access privileges between various components of the computing environment. As such, the firewall control block can be used to determine whether one component (e.g., applet) can access another component in the computing environment. This allows a flexible environment where firewall boundaries can be configured in such a way that each applet can allow access to a desired set of other applets. In addition, the control block can be implemented using a variety of techniques that may be suitable for different system requirements (e.g., processing speed, memory). As such, the configurable firewall is useful for implementing security for various computing systems, especially those that operate with relatively limited processing power and/or provide highly specialized functionality (e.g., smart cards).",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07543331",
	"publication_date": "2009-06-02",
	"application_number": "10743929",
	"application_date": "2003-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Framework for providing a security context and configurable firewall for computing systems",
	"summary": "",
	"abstract": "Techniques for providing security context and firewalls in computing environments are disclosed. The security context includes cryptographic operations that can further enhance security. A security context block that includes a security context identification (ID) and a cryptographic system is disclosed. The security context identification (ID) can be provided for and assigned to various components of the computing system as means for security identification. Using the cryptographic system, various cryptographic operations can be performed on the security context identification (ID) to further enhance security. For example, security identifiers can be authenticated before it is presented to a firewall. After, successful authentication, the firewall can be used to determine whether the security identifier identifies an associate with access privileges.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07503064",
	"publication_date": "2009-03-10",
	"application_number": "10772035",
	"application_date": "2004-02-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Full data link bypass",
	"summary": "",
	"abstract": "A system for processing a packet, including a network interface card (NIC), including a plurality of hardware receive rings, a classifier configured to classify the packet and send the packet to one of the plurality of hardware receive rings, and a host, operatively connected to the NIC, including a virtual network stack including a virtual serialization queue, a virtual network interface card (VNIC) associated with the virtual serialization queue, a device driver associated with the VNIC and configured to store a function pointer and a token associated with one of the plurality of hardware receive rings, where the VNIC is configured to perform at least one selected from a group consisting of enabling bypass mode and disabling bypass mode by changing the function pointer stored in the device driver, where the function pointer is used to send the packet to the virtual serialization queue if the bypass mode is enabled.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07515596",
	"publication_date": "2009-04-07",
	"application_number": "11480069",
	"application_date": "2006-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generic infrastructure for converting documents between formats with merge capabilities",
	"summary": "",
	"abstract": "A generic conversion framework that allows developers to develop custom plug-in conversion algorithms and/or merge algorithms (referred to as pluggable modules). In one embodiment, document merging may be split into two processes including a document differencing process and a document merging process. The converter, differencing and merger processes may be implemented as separate pluggable modules, allowing multiple, independent passes of implementations of the differencing process and the merge process. The framework may accept document converter plug-in modules, merger plug-in modules and/or differencing plug-in modules to be added, updated or replaced as needed. In one embodiment, the modules may be plugged into the framework dynamically at runtime. In one embodiment, a plug-in module of one type may be used with two or more different modules of another type.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07478170",
	"publication_date": "2009-01-13",
	"application_number": "10091204",
	"application_date": "2002-03-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Graphics system having a variable density super-sampled sample buffer",
	"summary": "",
	"abstract": "A method and computer graphics system capable of super-sampling and performing real-time convolution are disclosed. In one embodiment, the computer graphics system may comprise a graphics processor, a sample buffer, and a sample-to-pixel calculation unit. The graphics processor may be configured to generate a plurality of samples. The sample buffer, which is coupled to the graphics processor, may be configured to store the samples. The sample-to-pixel calculation unit is programmable to select a variable number of stored samples from the sample buffer to filter into an output pixel. The sample-to-pixel calculation unit performs the filter process in real-time, and may use a number of different filter types in a single frame. The sample buffer may be super-sampled, and the samples may be positioned according to a regular grid, a perturbed regular grid, or a stochastic grid.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07474308",
	"publication_date": "2009-01-06",
	"application_number": "10715899",
	"application_date": "2003-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Installation builder integrated development environment",
	"summary": "",
	"abstract": "A method for creating an install program involves selecting a plurality of icons (where each of the plurality of icons represents an element of the install program), defining the install program by placing and arranging the plurality of icons onto a workspace to obtain a defined install program, and building the install program based on the defined install program.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07500237",
	"publication_date": "2009-03-03",
	"application_number": "10919095",
	"application_date": "2004-08-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interpretation of DVD assembly language programs in Java TV-based interactive digital television environments",
	"summary": "",
	"abstract": "Techniques for interpretation of DVD assembly language programs for television (TV) receivers operating in Java TV environments are provided. The techniques can be used to implement a Java-based command/control enabling system. The Java-based command/control enabling system can be implemented as a Java-based DVD assembly language interpreter which interacts with various modules including video, audio, graphics overlay, and remote control modules. As such, the Java-based command/control enabling systems can provide similar command/control functions as those provided by DVD systems.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07634779",
	"publication_date": "2009-12-15",
	"application_number": "10301321",
	"application_date": "2002-11-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Introspection support for generic types",
	"summary": "",
	"abstract": "In accordance with one embodiment of the present invention, there is provided a technique for supporting introspection of generic types while maintaining migration compatibility. According to one aspect of this technique, in response to an invocation of a programmatic method of a reflective proxy, a string representation of a program element that corresponds to the reflective proxy is generated. The string representation contains information that is based on formal type parameters that are associated with the declaration of the generic type that is associated with the program element. According to another aspect, the programmatic method described above differs from another existing programmatic method u201ctoString( )u201d that generates a string representation that does not indicate generic type-specific information. Thus, programs that depend upon the existing implementation of the u201ctoString( )u201d method may continue to use it. According to one embodiment, the u201ctoString( )u201d method is unchanged, but a method u201ctoGenericString( )u201d is also implemented.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07526752",
	"publication_date": "2009-04-28",
	"application_number": "11105116",
	"application_date": "2005-04-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Language and object model for describing MIDlets",
	"summary": "",
	"abstract": "An infrastructure is provided for creating applications for mobile information devices, using a tag-based markup language, MIDML. Applications are defined based on easily manipulated textual tags, without need for writing specific code. The tags are processed to ultimately generate source code files. Initially, the input is parsed. Next, a hierarchical object model of the application is populated with objects. Separate readers read and parse the different tags and accompanying elements. The readers are registered in a descriptor object factory, to be instantiated as required in processing extended MIDML files. The object model enables the capabilities of the system to be easily extended, simply by adding new tags, and readers to the existing factory set. The resulting object model is accessible to a generator that produces the actual output.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07512932",
	"publication_date": "2009-03-31",
	"application_number": "10349004",
	"application_date": "2003-01-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Markup compiler that outputs MIDlets",
	"summary": "",
	"abstract": "A computing application for a mobile information device is generated from An extensible markup language, MIDML, in which different types of tags correspond to different application functions. A command line compiler parses the MIDML specification, reading the tags in specialized readers, which are then accessed by generators of specialized objects for an object model using different generators for each type. A predefined set of tags is extendible by the application developer. The generation process results in Java source code, which is then compiled into a MIDlet and packaged into a JAR file and a JAD file.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07565647",
	"publication_date": "2009-07-21",
	"application_number": "10348892",
	"application_date": "2003-01-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Message authentication using message gates in a distributed computing environment",
	"summary": "",
	"abstract": "Embodiments of a system and method using message authentication with message gates are described. A message gate is the message endpoint for a client or service in a distributed computing environment. A message gate may provide a secure endpoint that sends and receives type-safe messages. Gates may perform the sending and receiving of messages between clients and services using a protocol specified in a service advertisement. In one embodiment, the messages are eXtensible Markup Language (XML) messages. For a client, a message gate represents the authority to use some or all of a service's capabilities. Each capability may be expressed in terms of a message that may be sent to the service. Creation of a message gate may involve an authentication service that may authenticate the client and/or service and that generates an authentication credential. A message gate may perform verification of messages against a message schema to ensure that the messages are allowed. Message gates may embed the authentication credential in outgoing messages so that the receiving message gate may authenticate the message. Messages may also include information to allow the receiving gate to verify that the message has not been compromised prior to receipt.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07577834",
	"publication_date": "2009-08-18",
	"application_number": "09653227",
	"application_date": "2000-08-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Message packet logging in a distributed simulation system",
	"summary": "",
	"abstract": "A distributed simulation system may include a plurality of nodes arranged to perform a simulation of a system under test. The plurality of nodes are configured to communicate simulation commands and signal values for the system under test using message packets transmitted between the plurality of nodes. At least one of the plurality of nodes is configured to log the message packets in one or more log files during the simulation.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07529653",
	"publication_date": "2009-05-05",
	"application_number": "10007816",
	"application_date": "2001-11-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for managing configuration information in a distributed computer system",
	"summary": "",
	"abstract": "A configuration manager federated bean is provided for each host computer in the three-tiered management system. The configuration manager federated bean for a host computer is contacted by federated beans that manage each of the data services when a data service starts and stops using a data storage volume associated with the host computer. The configuration manager bean maintains persistent configuration information for each data service. In one embodiment, configuration manager beans can operate in a clustered environment where several beans store configuration information in a single storage area. Each of the beans implements an arbitration protocol so that only one bean writes to the storage area at any given time.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07555541",
	"publication_date": "2009-06-30",
	"application_number": "11557158",
	"application_date": "2006-11-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for pattern-based system design analysis using a meta model",
	"summary": "",
	"abstract": "A method for analyzing a target system that includes obtaining a characteristics model, loading the characteristics model into a meta model, obtaining a plurality of characteristics from the target system using a characteristics extractor, wherein each of the plurality of characteristics is associated with the characteristics model, storing each of the plurality of characteristics obtained from the target system in a characteristics store, and analyzing the target system by issuing at least one query to the characteristics store to obtain an analysis result, wherein the issuing the at least one query comprises verifying the at least one query using the meta model.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07634766",
	"publication_date": "2009-12-15",
	"application_number": "11134021",
	"application_date": "2005-05-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing a unified component architecture for client-side and server-side components",
	"summary": "",
	"abstract": "One embodiment of the present invention provides a system that facilitates deploying components on a client. During operation, the system establishes a communication session through a network connection between the client and a server. Next, the system migrates components from the server to the client, wherein the components provide services and are able to use services provided by other components. Finally, the client installs the components on the client, thereby allowing the components to provide services on the client. Note that by supporting deployment of components on the client in this way, the system facilitates a unified component architecture across the client and the server.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07617273",
	"publication_date": "2009-11-10",
	"application_number": "10295728",
	"application_date": "2002-11-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for provisioning heterogeneous operating systems onto heterogeneous hardware systems",
	"summary": "",
	"abstract": "A method for provisioning a plurality of heterogeneous operating systems on a plurality of target hosts that includes for each of the plurality of target hosts, obtaining a type of operating system (OS) to be provisioned on the target host, populating an OS profile model based on the type of operating system obtained, activating a deployment service based on the type of operating system, and provisioning the target host using a deployment service and the OS profile model.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07600005",
	"publication_date": "2009-10-06",
	"application_number": "11286992",
	"application_date": "2005-11-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for transparent invocation of a characteristics extractor for pattern-based system design analysis",
	"summary": "",
	"abstract": "A method for analyzing a target system that includes obtaining a plurality of characteristics from the target system using a characteristics extractor and at least one selected from the group consisting of a software build project associated with the target system and a modified software build project associated with the target system, wherein the plurality of characteristics is associated with a characteristics model, storing each of the plurality of characteristics in a characteristics store, and analyzing the target system by issuing at least one query to the characteristics store to obtain an analysis result.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07571434",
	"publication_date": "2009-08-04",
	"application_number": "11134154",
	"application_date": "2005-05-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for transmitting data over a network",
	"summary": "",
	"abstract": "A method for transmitting data that includes receiving a first request to open a first virtual channel, the first virtual channel associated with a TCP connection, and negotiating a first payload encoding scheme between a client and a server to use on the first virtual channel. The method further includes receiving a first frame from the client, the frame including a first channel-id associated with the first virtual channel and a first payload that includes a first datum encoded using the first payload encoding scheme. In addition, the method includes decoding the first payload to obtain a decoded first datum and processing the decoded first datum to obtain a second datum. The method additionally includes generating a second frame that includes the first channel-id and a second payload that includes the second datum encoded using the first payload encoding scheme, and sending the second frame to the client.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07636353",
	"publication_date": "2009-12-22",
	"application_number": "11635335",
	"application_date": "2006-12-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multi-file cryptographic keystore",
	"summary": "",
	"abstract": "A system including an application configured to request a key, a keystore configured to provide the key, wherein the keystore comprises a non-application specific directory, and an application-specific subdirectory.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07549174",
	"publication_date": "2009-06-16",
	"application_number": "10900229",
	"application_date": "2004-07-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Pre-generated message endpoints",
	"summary": "",
	"abstract": "In a distributed computing environment, a message gate may be the message endpoint for a client or service to communicate with another client or service. Message gates may be pre-generated and built into the device. For example, message gates may be generated during the build of embedded software as a means of including a built-in secure message endpoint that does not have to be constructed at runtime. A generation tool may be provided for the pre-construction of gates. The generation tool may include an XML parser, a code generator and a code compiler. In one embodiment, the code generator may be a Java source code generator and the code compiler may be a Java code compiler. During the build of the software for which built-in message gates is desired, the generation tool is run with input from all the relevant XML schemas for which gates are desired. The parser may receive a message schema corresponding to each service or service type that a message interface will be desired in the device. The parser may parse each schema into an intermediate format from which code generator produce source code for the message interface or verification part of a gate to be built-in to the device. Compiler produces executable code, e.g. Java bytecode, from the source code. The executable code may be linked into the operating code for the device during a code-build process for the device.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07548946",
	"publication_date": "2009-06-16",
	"application_number": "09660005",
	"application_date": "2000-09-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Processor including general-purpose and cryptographic functionality in which cryptographic operations are visible to user-specified software",
	"summary": "",
	"abstract": "A processor including general-purpose and cryptographic functionality, in which cryptographic operations are visible to user-specified software. According to one embodiment, a processor may include instruction execution logic configured to execute instructions specified by a user of the processor, where the instructions are compliant with a general-purpose instruction set architecture. The processor may further include a cryptographic functional unit configured to implement a plurality of cryptographic operations, and further configured to process the cryptographic operations independently of the instruction execution logic. A subset of the instructions may be executable to cause individual ones of the cryptographic operations to be processed by the cryptographic functional unit.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07620821",
	"publication_date": "2009-11-17",
	"application_number": "11064595",
	"application_date": "2005-02-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Remote interface for policy decisions governing access control",
	"summary": "",
	"abstract": "Methods and systems thereof for controlling access to resources are described. When a user attempts to access a resource via a remote interface such as a Web server, the request is initially evaluated by a source of policy definitions such as a policy server. This source returns a policy decision to the remote interface. The policy decision is stored in memory by the remote interface. The remote interface can then evaluate subsequent requests from the user for the resource using the stored policy decision instead of having to communicate again with the source for the policy decision. Enhancements to this approach are also described. Accordingly, policy definitions and decisions are more efficiently implemented.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07594256",
	"publication_date": "2009-09-22",
	"application_number": "10608882",
	"application_date": "2003-06-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Resource adapter with modular system management interface",
	"summary": "",
	"abstract": "A resource adapter may include modular system management interface for providing an interface between server-provided management services and back-end systems. Enterprise servers may provide management services and may host application components implementing business logic. Back-end systems may provide resources to the application components. The servers may provide services to the back-end systems to enhance efficiency, scalability, and security. Resource adapters interfacing these systems may include service adapter modules to interface between the servers and the back-end systems. For each service that a server provides to a back-end system, the corresponding resource adapter may include a service adapter module installed in the resource adapters modular system management interface. The service adapter module may isolate the code that may interact the service. The modularity may allow the resource adapter to be deployed in heterogeneous enterprise frameworks including J2EE compliant frameworks and non-J2EE compliant frameworks.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07490334",
	"publication_date": "2009-02-10",
	"application_number": "10132437",
	"application_date": "2002-04-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure access to managed network objects using a configurable platform-independent gateway providing individual object-level access control",
	"summary": "",
	"abstract": "A gateway between client manager applications and an enterprise manager may be provided to manage various networked objects. In one embodiment, CORBA-based TMN manager applications may be communicatively coupled to a CORBA Object Request Broker (ORB) and may be operable to send Interface Definition Language (IDL) requests to, and receive IDL responses and CORBA events from, managed objects through the CORBA ORB. The client manager may first be authenticated to the gateway by username and password, or other validation information associated with the client manager, which may be represented in a user profile. Once the initial client authentication is accomplished, the gateway may provide object-level access control between manager applications and managed objects at an individual object level so that one of the managers is granted access to one of the managed objects while being prevented from interfacing with a different one of the managed objects.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07478403",
	"publication_date": "2009-01-13",
	"application_number": "09556068",
	"application_date": "2000-04-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Self-checking simulations using dynamic data loading",
	"summary": "",
	"abstract": "A system for evaluating a simulation includes a reference simulator configured to execute a simulation image to obtain golden data, a test simulator configured to execute the simulation image to obtain test data, and a comparator configured to generate a comparison result by comparing a portion of the golden data to a portion of the test data before the execution of the simulation image on the test simulator has completed.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07606695",
	"publication_date": "2009-10-20",
	"application_number": "10675748",
	"application_date": "2003-09-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Socket connections over a serial link",
	"summary": "",
	"abstract": "A method for communication includes coupling a client device to communicate with a host computer over a serial link. Responsively to a call from a client application running on the client device, the client device submits a request over the serial link to the host computer to open a proxy connection for communication between the client application and a server application. Responsively to the request, the host computer creates a socket for communication with the server application, so as to establish the proxy connection via the socket. The host computer and client device convey data between the server application and the client application over the serial link using the proxy connection.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07529812",
	"publication_date": "2009-05-05",
	"application_number": "11011432",
	"application_date": "2004-12-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software documentation generator",
	"summary": "",
	"abstract": "Various embodiments of a system and method for generating software documentation are disclosed. A software documentation generator may input a variety of information sources. In one embodiment, these information sources may include various types of files such as application source code files, tag library files, tag library descriptors (TLD), library source code, web services description language (WSDL) files, configuration files, defect reports, and text files. The software documentation generator may analyze each source to determine its type and use this information to extract documentation data from the source according to the format of the data included in that source. The software documentation generator may reformat the documentation data extracted from each source into a uniform format and aggregate the uniformly formatted data into a uniformly formatted aggregate input document. The software documentation generator may transform this document into one or more sets of software documentation in a specified format.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07568184",
	"publication_date": "2009-07-28",
	"application_number": "10824282",
	"application_date": "2004-04-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for describing and identifying abstract software modules in peer-to-peer network environments",
	"summary": "",
	"abstract": "System and method for describing and identifying abstract software modules in peer-to-peer networking environments. A module class may have one or more module specifications. Each module specification may have one or more module implementations. A module class advertisement may be generated for the module class. A unique module class identifier may be assigned to the module class. A role extension to the module class identifier may be generated for each instance of the module class that performs a different role in a context. A unique module specification identifier may be assigned to each module specification of the module class. In one embodiment, a module specification advertisement may be generated for each module specification. In one embodiment, there may be one or more module implementations for each module specification. In one embodiment, a module implementation advertisement may be generated for each module implementation.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07484225",
	"publication_date": "2009-01-27",
	"application_number": "10369950",
	"application_date": "2003-02-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for mapping between instrumentation and information model",
	"summary": "",
	"abstract": "A method for managing an asset that includes acquiring an information model request for managing the asset, wherein the information model request is in an information model format, identifying a name and a type of an attribute from the information model request, obtaining a mapping specification entry matching the name and the type of the attribute, translating the information model request from the information model format to a data acquisition (DAQ) format based on the mapping specification entry to create a translated request, managing the asset according to the translated request to obtain management information, and transmitting the management information to an information model.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07562084",
	"publication_date": "2009-07-14",
	"application_number": "11473197",
	"application_date": "2006-06-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for marking software code",
	"summary": "",
	"abstract": "A method to instrument software code may comprise marking one or more blocks of code in an application program to provide a marked code. The marking may comprise inserting a marker at each of the one or more blocks according to a marking application programming interface (API). The one or more of the blocks of code marked according to the marking API may be transformed so that one or more functions are performed for the marked blocks. The one or more functions may not be part of the application program. The method may include executing the application program and performing the one or more functions for the marked blocks.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07603664",
	"publication_date": "2009-10-13",
	"application_number": "10277542",
	"application_date": "2002-10-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for multiplatform implementation of abstract software modules in peer-to-peer network environments",
	"summary": "",
	"abstract": "System and method for multiplatform implementation of abstract software modules in peer-to-peer networking environments. A module class may have one or more module specifications. Each module specification may have one or more module implementations configured to execute within a particular execution environment. A unique module class identifier may be assigned to the module class. A unique module specification identifier may be assigned to each module specification of the module class. In one embodiment, a module specification advertisement may be generated for each module specification. A module implementation advertisement may be generated for each module implementation. In one embodiment, the module specification identifier of the corresponding module specification is included in each module implementation advertisement.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07533161",
	"publication_date": "2009-05-12",
	"application_number": "10370816",
	"application_date": "2003-02-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for unique naming of resources in networked environments",
	"summary": "",
	"abstract": "System and method for the unique naming of resources in networked environments including peer-to-peer network environments. Embodiments may be used to generate network resource identifiers that uniquely identify resources such as processes over time and across the networked environment. One embodiment may be implemented as a resource name generator that generates unique identifiers for resources in networked environments. One embodiment may generate unique network resource identifiers for processes from information including, but not limited to, a host address that uniquely identifies on the network the host machine of the resource for which the unique network resource identifier is being generated, a current time (e.g. obtained from the host machine or alternatively from an external source such as an atomic time server), and a process identifier of the process that uniquely identifies the process among current processes on the host machine.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07533141",
	"publication_date": "2009-05-12",
	"application_number": "10350971",
	"application_date": "2003-01-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and methods for test tool class inheritance",
	"summary": "",
	"abstract": "A software compliance test is typically directed only at particular classes in the inheritance hierarchy. Inherited APIs (classes), which are not the focus of the test, may cause the application under test (AUT) to fail the compliance test since some of the underlying classes differ from a reference implementation. Accordingly, a verification tool employs the same version and implementation of inherited APIs in the reference implementation of these inherited APIs as the application under test. A dynamic class loader examines class inheritance references made by the application under test to determine if the class is included in the API to be tested, or if the class is outside the scope of the API to be tested. If the class corresponds to the API to be tested, then the dynamic loader uses the reference implementation of the API for comparison. Otherwise, the reference implementation employs the same inherited class references as the application under test. Therefore, for the underlying inherited or secondary class references, the dynamic loader employs the same classes in the reference implementation as the AUT inherits.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07536679",
	"publication_date": "2009-05-19",
	"application_number": "10920947",
	"application_date": "2004-08-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Update dependency control for multi-master replication",
	"summary": "",
	"abstract": "The invention proposes a directory server system having a master server and a non-master server, each server being capable of storing directory server data comprising updates. The master server is capable of sending selected updates to the non-master server, and the non-master server () has:nn",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07584174",
	"publication_date": "2009-09-01",
	"application_number": "10835977",
	"application_date": "2004-04-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Window system 2D graphics redirection using direct texture rendering",
	"summary": "",
	"abstract": "The 3D window system utilizes hardware accelerated window system rendering to eliminate the pixel copy step of 3D window system output redirection. The 3D window system includes a window server that directs the window system device driver graphics routines to render into the texture memory of a graphics device.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07583269",
	"publication_date": "2009-09-01",
	"application_number": "11054297",
	"application_date": "2005-02-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Valuing and optimizing scheduling of generation assets",
	"summary": "",
	"abstract": "The present invention provides methods and systems for determining anticipated profit from facilities such as electrical power generation facilities, for determining values for assets based on profitability of facilities, and for determining optimal operational scheduling options for facilities. Methods and systems are provided which utilize a dynamic programming algorithm and a decision tree based model in which one or more operating constraints are implicitly modeled, facilitating computational tractability. Additionally, methods and systems are provided that utilize a dynamic programming algorithm and a decision tree based model that accounts for a combined effect of price paths with specified uncertainty as well as operational constraints. Furthermore, methods and systems are provided that address profitability, valuation, and scheduling in relation to a group, or portfolio, of facilities, accounting for liquidity factors as well as group, or global, constraints.",
	"url": null,
	"owner": "SunGard Energy Systems Inc.",
	"publication_number": "07474995",
	"publication_date": "2009-01-06",
	"application_number": "10336541",
	"application_date": "2003-01-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for presenting published information in a browser",
	"summary": "",
	"abstract": "A computer-implemented method and system is provided for presenting published information in a browser. Aspects of the preferred embodiment include providing a user control via a browser that allows for controlling a pacing of presentation of published information in the browser; receiving a pace setting from the user control; associating the pace setting with a subscription; and queuing published information corresponding to the subscription for presentation in the browser based on the pace setting.",
	"url": null,
	"owner": "Swift Creek Systems, LLC",
	"publication_number": "07512880",
	"publication_date": "2009-03-31",
	"application_number": "11306346",
	"application_date": "2005-12-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Blocking replication of e-mail worms",
	"summary": "",
	"abstract": "Computer-implemented methods, apparati, and computer-readable media for blocking the replication of computer worms in a computer. A method of the present invention comprises the steps of: for an e-mail program installed on the computer, finding the location of a temporary holding area used by the e-mail program for storing and opening e-mail attachments; monitoring the temporary holding area for openings of target programs stored within the temporary holding area; and upon the opening of a target program for execution, implementing a worm mitigation procedure.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07631353",
	"publication_date": "2009-12-08",
	"application_number": "10322289",
	"application_date": "2002-12-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Heuristic detection of computer viruses",
	"summary": "",
	"abstract": "Computer-implemented methods, apparati, and computer-readable media for detecting the presence of viral infections in target files () located within a computer. The invention has broad applicability to a number of different platforms, including Windows. A preferred method for performing the invention comprises the steps of: scanning a target file () with an antivirus scanner, said scanning step including computing () a target section () corresponding to an invariant section of said target file (); declaring the target file () to be a tracked file () when the target section () matches an invariant section in a database generated () from uninfected versions of the target files (); for each tracked file (), identifying () a variant section that is likely to be varied by a viral infection; comparing () the variant section in the tracked file () with the same variant section in the uninfected version of the tracked file () in said database; and declaring () a suspicion that a virus is present in the tracked file () when the two variant sections do not match.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07478431",
	"publication_date": "2009-01-13",
	"application_number": "10211827",
	"application_date": "2002-08-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information security method and system",
	"summary": "",
	"abstract": "The present invention discloses an improved information security system and method. A polymorphic engine is used to enhance the security features of a software application and the data generated by or made available to the application and/or the operating system. The polymorphic engine operates to randomly alter the standard executable code of the original application while preserving its functional characteristics. Each polymorphed instance of the application differs from any other instance of the same application in form only. Various other security features operate to protect the polymorphic engine itself and/or the polymorphed code generated therefrom. These other security features include: just-in-time instruction code decryption; virtual CPU instruction code pre-processing; call mutation; stack manipulation; secure hook-capture of device input; secure display device output; application level decryption of encrypted hardware data streams; and a dynamic, randomly configured graphical keypad interface.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07555780",
	"publication_date": "2009-06-30",
	"application_number": "11058166",
	"application_date": "2005-02-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Kernel validation layer",
	"summary": "",
	"abstract": "Systems and method of computer security are provided. In one implementation, a method is provided. The method includes monitoring incoming kernel mode calls and identifying a kernel mode call to verify using a predetermined criterion. The method also includes validating the identified kernel mode call, and processing the kernel mode call in accordance with the results of the validation of the kernel mode call. In another implementation a kernel application programming interface validation device is provided. The kernel application programming interface validation device includes a monitoring engine for monitoring incoming kernel mode calls, an analysis engine operable to examiner kernel mode calls, a validation engine operable to determine if a kernel mode call is valid using the results of the analysis engine, and a processing engine.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07587724",
	"publication_date": "2009-09-08",
	"application_number": "11181365",
	"application_date": "2005-07-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, system and computer program product for security in a global computer network transaction",
	"summary": "",
	"abstract": "From a first information handling system (u201cIHSu201d) to a second IHS, in response to a request for initiating an online transaction, a program is downloaded for detecting malicious code on the second IHS.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07509679",
	"publication_date": "2009-03-24",
	"application_number": "10768862",
	"application_date": "2004-01-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Networked computer environment assurance system and method",
	"summary": "",
	"abstract": "A system and method for configuration management and enforcement of software applications in a computer network. The system comprises of one or more server computers, a configuration rules database and a plurality of client computers. Each client computer has an agent running on it. The agent, after being invoked or on a periodic basis, contacts a server computer to obtain the latest configuration rules from the configuration rules database. The configuration rules are then used by the agent to check the validity of the software applications. The agent also sends log data, back to the server computer, containing details of the status of the computer, any violations, actions taken, time of violations, etc. The present invention also provides a method to check and ensure that the agent is required to be run on all the client computers in order for these computers to communicate with other computers in the network.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07603452",
	"publication_date": "2009-10-13",
	"application_number": "10393568",
	"application_date": "2003-03-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Real-time training for a computer code intrusion detection system",
	"summary": "",
	"abstract": "Systems, methods, and computer-readable media for training a computer code intrusion detection system in real time. A method embodiment of the present invention comprises the steps of observing (), in real time, commands () that are accessing the computer code (); and deriving () from said commands (), in real time, a set () of acceptable commands.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07568229",
	"publication_date": "2009-07-28",
	"application_number": "10612198",
	"application_date": "2003-07-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Risk profiling for optimizing deployment of security measures",
	"summary": "",
	"abstract": "Risk profiling in order to optimize the deployment of security measures such as behavior-blocking, hardening, or securing techniques is disclosed. Risk profiling includes evaluating a risk to a host service based on communication with a remote system, creating a risk profile for the host service, and deploying a security measure to protect the host service based on the risk profile. Risk profiling enables optimization of deployment of security measures to protect a host service that is either directly or indirectly communicating with a remote system. Using a risk profile enables the optimal deployment of security measures while preventing host system performance degradation and increased system requirements (e.g., increased memory and processor usage).",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07536724",
	"publication_date": "2009-05-19",
	"application_number": "10677730",
	"application_date": "2003-10-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Search interface server and storage management",
	"summary": "",
	"abstract": "A system, method, and computer-accessible medium for searching in a server management system are disclosed. One or more search terms are determined. A search is performed for object definitions which match the search terms, thereby determining one or more matching objects corresponding to the object definitions which match the one or more search terms. The matching objects are reported.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07529744",
	"publication_date": "2009-05-05",
	"application_number": "11171952",
	"application_date": "2005-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Technique for improving scalability and portability of a storage management system",
	"summary": "",
	"abstract": "A technique for improving scalability and portability of a storage management system is disclosed. In one particular exemplary embodiment, the technique may be realized as a storage management system operatively coupled to a storage system. The storage management system may comprise a plurality of processor modules, wherein each processor module is capable of intercepting write commands directed to the storage system, backing up data associated with the write commands, and generating metadata having timestamps for the backup data. The storage management system may also comprise one or more indexing modules that create one or more indexing tables for the backup data based on the metadata, wherein the one or more indexing modules are in communication with the processor modules and the storage system.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07634497",
	"publication_date": "2009-12-15",
	"application_number": "11549416",
	"application_date": "2006-10-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Cluster failover for storage management services",
	"summary": "",
	"abstract": "A method, system, and computer program product to enable other nodes in a cluster to resume operations of a failed node. These operations include storage management services that allow configuration changes to be made dynamically to storage resources. Resource configuration data are synchronized on a set of nodes in a cluster immediately when a resource configuration change is made. If a node that has made a resource configuration change fails, the resource configuration change is available for use by other nodes in the set, each of which can resume operations of the failed node.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07555673",
	"publication_date": "2009-06-30",
	"application_number": "11443629",
	"application_date": "2006-05-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Coherency of replicas for a distributed file sharing system",
	"summary": "",
	"abstract": "A plurality of data objects may be replicated across a plurality of computing nodes coupled to a network. The network may include a first node operable to initiate an update operation to update a plurality of replicas of a first object. If one or more of the replicas are not reachable then the update operation may update a subset (e.g., a quorum) but not all of the replicas. For each node on which one of the replicas was updated in the update operation, the node may add the object to a list of incoherent objects. The list of incoherent objects may subsequently be used to bring the lagging replicas in sync with the replicas that were updated. In another embodiment, a plurality of replicas of an object may be stored on a plurality of nodes, similarly as described above. A first node that stores a replica of the object may store a first timestamp associated with the replica on the first node. The timestamp may be used to ensure that the replica on the first node is coherent with respect to one or more other replicas by periodically communicating with the one or more other replicas when a threshold amount of time has passed without the replica on the first node receiving an update.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07500020",
	"publication_date": "2009-03-03",
	"application_number": "10749365",
	"application_date": "2003-12-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Efficient distributed transaction protocol for a distributed file sharing system",
	"summary": "",
	"abstract": "An efficient distributed transaction protocol for a distributed file sharing system is described. One embodiment of the protocol involves a transaction coordinator node sending three messages to participant nodes, where the participant nodes reply to only two of those messages. In one embodiment, the transaction coordinator node may return success to the client application after receiving replies to the second message from the participant nodes. The protocol may provide benefits associated with traditional three-phase commit (3PC) protocols while also decreasing response time latencies experienced by client applications and decreasing network traffic.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07478400",
	"publication_date": "2009-01-13",
	"application_number": "10749300",
	"application_date": "2003-12-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Efficiently linking storage object replicas in a computer network",
	"summary": "",
	"abstract": "A system and method for efficiently linking together replicas of a storage object. The location of a first replica of the storage object may be stored on a node in a network. When new replicas of the storage object are created, the node that stores the new replica may efficiently lookup the location of the first replica and utilize the location information to perform an efficient process to link the new replica to the first replica and any other existing replicas by causing routing information to be created on various nodes.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07555527",
	"publication_date": "2009-06-30",
	"application_number": "10704320",
	"application_date": "2003-11-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Logical application data restore from a database backup",
	"summary": "",
	"abstract": "A system and method for managing data in a computer system. A backup server is configured to harvest data indicative of logical relationships among data entries in a backup data set. The harvested data and backup data set are stored on a backup medium. Catalog entries are created for both the backup data set and the harvested data. The computer system allows a user to browse the backup catalog, including the logical structure of the content of a particular backup data set. The user may select particular items for restoration from the catalog. In response, the server restores the backup data set and harvested data to a temporary location, identifies data in the harvested data which corresponds to the user's selections, searches the backup data set for the selected items, and initiates restoration of the selected items.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07558928",
	"publication_date": "2009-07-07",
	"application_number": "11028443",
	"application_date": "2004-12-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Overlay network with efficient routing and recovery",
	"summary": "",
	"abstract": "A network having a plurality of nodes interconnected by links (virtual communication channels) is disclosed. In one embodiment, the nodes may communicate with each other in a decentralized or peer-to-peer manner. A method for establishing the links among the nodes is disclosed. The links may be established such that the system is able to operate efficiently. In particular, the manner in which the nodes are interconnected by links may enable the system to efficiently route messages and efficiently recover from network failures.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07570600",
	"publication_date": "2009-08-04",
	"application_number": "10738431",
	"application_date": "2003-12-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Preventing network micro-congestion using send pacing based on end-to-end bandwidth",
	"summary": "",
	"abstract": "A system for preventing network micro-congestion using send pacing based on end-to-end bandwidth. The system includes one or more processors and memory coupled to the processors, wherein the memory contains program instructions executable by the processors to obtain an estimate of end-to-end network bandwidth available to a particular application-level data transfer operation in progress over a network between a first endpoint and a second endpoint. Based at least in part on the estimate of end-to-end bandwidth, the instructions are further executable to introduce a delay between transmissions of two or more successive messages or packets of the particular application-level data transfer operation from the first endpoint.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07616585",
	"publication_date": "2009-11-10",
	"application_number": "11364050",
	"application_date": "2006-02-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for applying a file system security model to a query system",
	"summary": "",
	"abstract": "A system and method for applying a file system security model to a query system. In one embodiment, the system may include a storage device configured to store data and a file system configured to manage access to the storage device, to store file system content, and to implement a first security model, where the first security model is configured to control access to the file system content. The system may further include a query system configured to query the file system content, and security mapping functionality configured to apply the first security model to the query system.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07562216",
	"publication_date": "2009-07-14",
	"application_number": "10878826",
	"application_date": "2004-06-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for asynchronous reads of old data blocks updated through a write-back cache",
	"summary": "",
	"abstract": "A system for asynchronous reads of old data blocks updated through a write-back cache includes a storage device, a write-back cache, a storage consumer, a storage processing node, and device management software. The device management software may be configured to store a new version of a data block in the write-back cache in response to an update request from the first storage consumer and to then send an update completion notification to the first storage consumer. Some time after the update completion notification has been sent, the device management software may be configured to send a previous version of the updated data block to the storage processing node, where it may be required to perform an operation such as a copy-on write operation or a snapshot update.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07636814",
	"publication_date": "2009-12-22",
	"application_number": "11117268",
	"application_date": "2005-04-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for customized I/O fencing for preventing data corruption in computer system clusters",
	"summary": "",
	"abstract": "Systems, methods, apparatus and software can implement a flexible I/O fence mechanism framework allowing clustered computer systems to conveniently use one or more I/O fencing techniques. Various different fencing techniques can be used, and fencing mechanism can be customized.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07590737",
	"publication_date": "2009-09-15",
	"application_number": "10893621",
	"application_date": "2004-07-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for efficient file content searching within a file system",
	"summary": "",
	"abstract": "A system and method for efficient file content searching within a file system. In one embodiment, the system may include a storage device configured to store data and a file system configured to manage access to the storage device. The file system may be configured to detect a search operation to determine the presence of a given data pattern within a first file stored on the storage device, and to store an indication of the given data pattern and an indication of result data of the search operation in a first record associated with the first file.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07636710",
	"publication_date": "2009-12-22",
	"application_number": "10793070",
	"application_date": "2004-03-04",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for resolving SAN fabric partitions",
	"summary": "",
	"abstract": "Systems, methods, apparatus and software can combine information about host access to virtualization functionality and virtualization functionality access to storage, use this information in decisions pertaining to high availability of virtualization in an SAN. Upon detection of the partitioning of a SAN fabric, accessibility information is gathered. That information is analyzed to uncover potential failover scenarios, orchestrate such failovers, and in some cases select best case solutions from among several possible solutions based on access prioritization criteria (e.g., defined priority, maximum access, maximum I/O, etc.).",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07606986",
	"publication_date": "2009-10-20",
	"application_number": "10929215",
	"application_date": "2004-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "User interface for viewing logical representation of a database backed up by a database recovery manager",
	"summary": "",
	"abstract": "Various methods and systems for presenting a logical view of a database backup are disclosed. One method involves querying a database recovery manager for logical identifiers that correspond to physical backup pieces generated during a backup. The method uses the logical identifiers to display a backup view to a user. The backup view identifies logical database components that are available to be restored.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07634511",
	"publication_date": "2009-12-15",
	"application_number": "11541041",
	"application_date": "2006-09-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for implementing alerts on a browser running on a portable handheld device",
	"summary": "",
	"abstract": "A method and apparatus for implementing alerts on a browser running on a portable handheld device is disclosed. The method generates an asynchronous notification action from the server and in response transmits an alert containing a message indicating availability of HTML pages that describe the nature of the alert. The alert is received at a node on a network and translated into the original message. An alert receipt acknowledgment is transmitted to the server. Access to the alert HTML page is provided through a URL containing the appropriate query strings necessary to present the appropriate HTML page. The invention also discloses a wireless local area network (WLAN) adapter associated with a wireless network that receives paging signals from a server on the network and returns an acknowledgment signal back to the server. The invention also discloses a client/server based method of delivering messages initiated by a client. After a connection is established between a client and server, the client requests a message from the server. In response, the server retrieves and returns the message back to the client.",
	"url": null,
	"owner": "Symbol Technologies Inc.",
	"publication_number": "07577745",
	"publication_date": "2009-08-18",
	"application_number": "11146547",
	"application_date": "2005-06-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Auto configuration of portable computers for use in wireless local area networks",
	"summary": "",
	"abstract": "A method and apparatus for the configuration of a wireless network adapter is disclosed. A wireless network adapter is provided with software that enables the adapter to recognize and connect with one or more networks. Software profiles are loaded onto or created on the adapter. The software profiles each correspond to a unique network.",
	"url": null,
	"owner": "Symbol Technologies, Inc.",
	"publication_number": "07493653",
	"publication_date": "2009-02-17",
	"application_number": "11374457",
	"application_date": "2006-03-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multi-tier wireless communications architecture, applications and methods",
	"summary": "",
	"abstract": "Multi-tier system for digital radio communication. The multi-tier system has a first-tier base station with relatively long-range radio and has a second-tier base station with relatively short-range, low power and cheaper radios. The system can be more versatilely configured to meet demands of various applications. The application may include data capture using bar code readers, radio frequency readers and other automatic data capture devices. The system may also be used to control hotel door locks, individual room temperature control, remote video monitoringu2014all without having to wire and with much flexibility given the two types of radios employed.",
	"url": null,
	"owner": "Symbol Technologies, Inc.",
	"publication_number": "07492248",
	"publication_date": "2009-02-17",
	"application_number": "09483167",
	"application_date": "2000-01-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for digital radio communication between a wireless LAN and a PBX",
	"summary": "",
	"abstract": "A wireless local area network for digital radio communication between remote devices and a PBX telephone system, wherein the remote devices can access and use the voice message features in the PBX and the data bases on a host computer and servers. A wireless phone is provided for voice and data communication through the PBX or a CO telephone line with remote locations or the Internet using digital data packets and standard Internet Protocol. In a preferred embodiment of the invention, the remote device is a cash register comprising a bar code scanner and a phone. Radio communication between the register and a host computer is carried out over two channels, a first channel for data communication and a second channel for voice communication.",
	"url": null,
	"owner": "Symbol Technologies, Inc.",
	"publication_number": "07492748",
	"publication_date": "2009-02-17",
	"application_number": "11593624",
	"application_date": "2006-11-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for rule-based generation of automation test scripts from abstract test case representation",
	"summary": "",
	"abstract": "A general rule-based technique is provided for generating a test case from an abstract internal test case representation. The abstract internal test case representation is based on a test case representation model that includes application states (state information), external interaction sequences (control flow information) and input data. The abstract representation in essence provides a platform independent representation of test cases. An application object model provides the representational capabilities required for capturing structural and behavioral properties of the application under test. Rules can be specified to define which application states (state information), external interaction sequences (control information) and input data sets should be used in the generation of the test case. A technique based on platform mapping is provided to convert a test case into an automation test script for any specific test script execution environment for any specific application platform.",
	"url": null,
	"owner": "Symphony Services Corp.",
	"publication_number": "07478365",
	"publication_date": "2009-01-13",
	"application_number": "10757718",
	"application_date": "2004-01-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Animation display apparatus, arcade game machine, control method and apparatus thereof, and storage medium",
	"summary": "",
	"abstract": "The present invention enables relatively easy animation display without requiring a special resource, and facilitates easy generation of the animation. When an image to be displayed as animation is constructed with a background, leg, body and head, these images are distributed as a layer. For each layer, a timing schedule is set with attribute data which includes display update timing and display effects. According to the schedule, display for each layer is updated at the scheduled timing.",
	"url": null,
	"owner": "Tacmi Co., Ltd.",
	"publication_number": "07472910",
	"publication_date": "2009-01-06",
	"application_number": "09537288",
	"application_date": "2000-03-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for automatically learning mailbox configuration conventions",
	"summary": "",
	"abstract": "A system and method automatically learns mailbox configuration conventions. The validator module determines a valid set of configuration parameters used for accessing an electronic mailbox of a user within a mail domain after receiving configuration information from the user that is limited in the configuration parameters required for accessing the electronic mailbox. A learner module accepts from the validator module a set of configuration parameters determined to be valid and generates configuration conventions for a mail domain. A database store is the generated configuration conventions. The validator and learner modules can be operative as part of a web server.",
	"url": null,
	"owner": "Teamon Systems, Inc.",
	"publication_number": "07603419",
	"publication_date": "2009-10-13",
	"application_number": "10778468",
	"application_date": "2004-02-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for generating configurations used for accessing electronic mailboxes",
	"summary": "",
	"abstract": "A system and method generates configurations used for accessing electronic mailboxes. A database stores the configuration conventions that are sets of e-mail expressions formed by symbols. A transformer module expands configuration conventions stored in the database to generate configurations based on user supplied context data.",
	"url": null,
	"owner": "Teamon Systems, Inc.",
	"publication_number": "07475115",
	"publication_date": "2009-01-06",
	"application_number": "11199052",
	"application_date": "2005-08-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for digitally notifying customers of a utility",
	"summary": "",
	"abstract": "A method for digitally notifying customers of a utility. The method includes receiving real time digital user data from a utility using an application programming interface in communication with a processor and a network, and storing the real time digital user data in a dynamic information database in communication with the processor. At least one message is transmit from the utility through the application programming interface to a first group of user contact devices before transmitting the message to a second group of user contact devices. Response information is received from each user contact device.",
	"url": null,
	"owner": "Techradium, Inc.",
	"publication_number": "07624171",
	"publication_date": "2009-11-24",
	"application_number": "11960373",
	"application_date": "2007-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods, systems, and computer program products for offloading call control services from a first network of a first type to a second network of a second type",
	"summary": "",
	"abstract": "Methods, systems, and computer program products for offloading call control services from a first network of a first type to a second network of a second type are disclosed. According to one aspect, a method includes detecting a call originating from a calling party in a first network of a first type. A database may be queried using information identifying the calling party. In response to the query, routing information may be for a node in a second network of a second type. Call control services may be offloaded for the call to the second network using the node.",
	"url": null,
	"owner": "Tekelec",
	"publication_number": "07606202",
	"publication_date": "2009-10-20",
	"application_number": "11881726",
	"application_date": "2007-07-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interlayer fast authentication or re-authentication for network communication",
	"summary": "",
	"abstract": "A system and method are provided for establishing a network communication session using fast authentication. In a network system a client or user device may establish a communication session with a server using full authentication. If the session is interrupted or discontinued and resumption of the session is requested, a session identifier of the previously established session may be compared to the session identifier of the requested session. If a match is detected, the session may be resumed using a fast authentication (or re-authentication) procedure such that the session is resumed more efficiently and expediently. Fast authentication may be performed, for example, even when the first session and the resumed second session are of different authentication layers, different types of network interfaces and/or different locations. Thus, a session, such as a TLS session, may resume functionality among multiple defined authentication protocols or technologies such as 802.1X, PANA or cellular based systems.",
	"url": null,
	"owner": "Telcordia Technologies, Inc.",
	"publication_number": "07587598",
	"publication_date": "2009-09-08",
	"application_number": "10609685",
	"application_date": "2003-07-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Inter-carrier short messaging service providing phone number only experience",
	"summary": "",
	"abstract": "A phone number only messaging experience is provided in an Inter-Carrier Short Messaging System (IC-SMS) service. Subscriber to subscriber messages are routed between carrier's networks using an Inter-Carrier messaging module with appropriate MIN/carrier/carrier routing look-up capabilities. Short messages may be sent to a subscriber in another carrier's network addressed only with a phone number. If the recipient is outside of the sender's carrier network, the Inter-Carrier messaging module of the Inter-Carrier service provider (ICSP) determines the appropriate carrier for the recipient, appends the appropriate syntax to the short message to allow internet protocol (IP) or other standardized communication techniques between SMSCs of the two carriers, and routes the short message to the destination carrier. The recipient in the other carrier's network may reply back to the ICSP's sender using only the subscriber's directory number.",
	"url": null,
	"owner": "TeleCommunication Systems, Inc.",
	"publication_number": "RE041006",
	"publication_date": "2009-11-24",
	"application_number": "11174419",
	"application_date": "2005-07-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for deploying content to wireless devices",
	"summary": "",
	"abstract": "A method and system for deploying content to devices is provided. The method and system can be used to deploy markup content to web browser applications on wireless devices. The wireless devices may included, for example, WAP phones, HDML phones, Palm VII, Palm V, etc. The method and system can also be used in conjunction with wired systems. A translator receives data, in a variety of formats, from the wireless devices. The translator then translates the data into a standardized format. A content provider interface receives the data in the standardized format and provides content data, also in the standardized format. The content data in the standardized format is provided to a transformer. The transformer transforms the content data into the pre-selected format for the particular wireless device. The content data can then be utilized and manipulated by the wireless device.",
	"url": null,
	"owner": "TeleCommunication Systems, Inc.",
	"publication_number": "07483983",
	"publication_date": "2009-01-27",
	"application_number": "09709487",
	"application_date": "2000-11-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Arrangement and method relating to traffic control",
	"summary": "",
	"abstract": "The present invention relates to an arrangement and a method for flow control of data packets in a communications system supporting communication of packet data. The arrangement comprises classifying means () for, by means of a number of parameters defining a number of data packet subflows, whereby each received packet belongs to one of the subflows. For each received data packet, an individual packet holding time is given by the size of the data packet and by the (desired) bandwidth of the subflow to which the packet belongs. It further comprises first queueing means () comprising one subflow queue (SFQ) for each subflow, such that received data packets are placed in the appropriate subflow queue, and one or more second queueing means (), each comprising a circular timeslot array register, wherein for each timeslot a timeslot queue (TSQ) is provided. Data packets from the subflow queues are placed in the appropriate time slot queues in relation to a current time slot queue, the packets in which, if any, currently being output, such that the data packet holding times can be observed.",
	"url": null,
	"owner": "Telefonaktiebolaget L M Ericsson (PUBL)",
	"publication_number": "07616570",
	"publication_date": "2009-11-10",
	"application_number": "10470851",
	"application_date": "2002-02-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Intelligent peripheral for speech recognition in networks",
	"summary": "",
	"abstract": "A telecommunication network with an intelligent peripheral that is provided with a processor and a memory, as well as speech recognition functionality. The memory stores a list of VPN-addresses of at least one of a set of persons, personal functions, specific terminals and services. The telecommunication network also has a switch and a network apparatus. The intelligent peripheral provides for speed recognition and is provided as an add-on in the network.",
	"url": null,
	"owner": "Telefonaktiebolaget L M Ericsson (Publ)",
	"publication_number": "07606713",
	"publication_date": "2009-10-20",
	"application_number": "10525586",
	"application_date": "2002-08-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for specification and integration of reusable IP constraints",
	"summary": "",
	"abstract": "A hardware-block constraint specification method includes defining a plurality of hardware-block constraint categories according to at least one of type of constraint and constraint operating mode and defining a plurality of hardware-block constraint commands. Each of the plurality of hardware-block constraint commands is categorized into one of the plurality of hardware-block constraint categories. The method also includes encapsulating the plurality of hardware-block constraint commands within a plurality of modules usable, via an application programming interface, in a stand-alone mode or an integrated mode.",
	"url": null,
	"owner": "Telefonaktiebolaget L M Ericsson (Publ)",
	"publication_number": "07526745",
	"publication_date": "2009-04-28",
	"application_number": "11294653",
	"application_date": "2005-12-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Middleware application message/event model",
	"summary": "",
	"abstract": "System and method for transmitting messages between first and second software components such as application software and software of a platform for a product. An exemplary system includes a platform having a software component and an interface component having an interface for providing an application or a module in an application domain with access to the software component. The system further includes a message transmitting mechanism for transmitting messages between the application or the module and the platform via the interface that includes a message model for allowing an application to select either a callback mode or a full message mode for receiving messages between the application or the module and the platform, and a message handler for routing messaging according to the selected mode.",
	"url": null,
	"owner": "Telefonaktiebolaget L M Ericsson (PUBL)",
	"publication_number": "07478395",
	"publication_date": "2009-01-13",
	"application_number": "10666699",
	"application_date": "2003-09-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Plug-in model",
	"summary": "",
	"abstract": "Method and system for extending and/or modifying functionality of a platform for a product, such as a mobile terminal for a wireless telecommunications system. The system includes a platform domain having a software services component for providing functionality, and an interface component having at least one interface for providing access to the software services component for enabling application software to be installed, loaded and run in said platform via the at least one interface. The system also includes plug-in software for use together with the application software for extending and/or modifying the functionality of the software services component of the platform domain via the at least one interface.",
	"url": null,
	"owner": "Telefonaktiebolaget L M Ericsson (Publ)",
	"publication_number": "07584471",
	"publication_date": "2009-09-01",
	"application_number": "10665834",
	"application_date": "2003-09-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Router and method for protocol process migration",
	"summary": "",
	"abstract": "A router and a method for migrating routing protocol processes or Virtual Routers (VRs) from one Route Processor (RP) to another using graceful restart procedures for maintaining packet flow to the router and assisting the router to obtain restart information. The router includes first and second RPs and a forwarding engine for forwarding packets to neighbor routers in the network. When the routing protocol process is terminated on the first RP, the neighbor routers detect a router failure and initiate the graceful restart procedures. A filter rule in the forwarding engine causes it to forward packets to the new routing protocol process on the second RP. The new process learns the network topology from the neighbor routers, and the migration is completed without packet loss and without requiring complex changes to the network protocol stack.",
	"url": null,
	"owner": "Telefonaktiebolaget L M Ericsson (Publ)",
	"publication_number": "07583590",
	"publication_date": "2009-09-01",
	"application_number": "11182967",
	"application_date": "2005-07-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Bandwidth on demand for media services at stationary equipment unit",
	"summary": "",
	"abstract": "A node () of a communications network () establishes multiple simultaneous access bearers () to a stationary equipment unit () which is connected to the node () by a essentially fixed location physical link (). Advantageously, the multiple simultaneous access bearers can have different bandwidths and quality of service capabilities. For example, the node can establish access bearers for providing different types of services to the stationary equipment unit, the different types of services including one of a voice service, a video service, and a data traffic service. Moreover, the multiple simultaneous access bearers include both circuit switched access bearers and packet switched access bearers.",
	"url": null,
	"owner": "Telefonaktiebolaget LM Ericsson (publ)",
	"publication_number": "07623508",
	"publication_date": "2009-11-24",
	"application_number": "10823764",
	"application_date": "2004-04-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Media binding to coordinate quality of service requirements for media flows in a multimedia session with IP bearer resources",
	"summary": "",
	"abstract": "Using session signaling, a multimedia session with plural media data streams is initiated between the mobile terminal and a remote host coupled to a packet data network. The mobile terminal is coupled to the packet data network and to a multimedia system that provides multimedia session services by way of an access point. A plurality of packet access bearers is established between the mobile terminal and the access point to transport corresponding ones of the media data streams between the mobile terminal and the access points. The media binding information is created for each media data stream. The media binding information associates each media data stream in the session to one of the media packet access bearers and is used to provide session-based control of each of the media packet access bearers. Different example techniques for generating/providing the media information are disclosed.",
	"url": null,
	"owner": "Telefonaktiebolaget LM Ericsson (publ)",
	"publication_number": "07546376",
	"publication_date": "2009-06-09",
	"application_number": "09985573",
	"application_date": "2001-11-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for establishing a protocol proxy for a mobile host terminal in a multimedia session",
	"summary": "",
	"abstract": "A protocol proxy relationship is established between a non-enabled host and a protocol-enabled router or other node in a multimedia session including a mobile communications network. A mechanism is provided that allows a non-enabled mobile terminal to communicate a protocol proxy request with a protocol-enabled node along an end-to-end path between the mobile terminal and a remote host. A mechanism is further provided to install information in the protocol enabled node so that it can function as the protocol proxy for the non-enabled mobile terminal.",
	"url": null,
	"owner": "Telefonaktiebolaget LM Ericsson (publ)",
	"publication_number": "07483989",
	"publication_date": "2009-01-27",
	"application_number": "10087995",
	"application_date": "2002-03-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mobile device with local server",
	"summary": "",
	"abstract": "A method for operating a mobile computing device includes running a platform-independent application program using a virtual machine operating on the mobile computing device. A server program runs on the mobile computing device so as to access a native function of the mobile computing device that is not supported by the virtual machine. The native function is invoked from the application program by opening a communication connection to the server program using a communication application programming interface (API) of the virtual machine, and sending a message to the server program via the communication connection, so as to cause the server program to access the native function.",
	"url": null,
	"owner": "Telmap Ltd",
	"publication_number": "07568203",
	"publication_date": "2009-07-28",
	"application_number": "10871954",
	"application_date": "2004-06-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for locating related reports",
	"summary": "",
	"abstract": "Methods and systems for locating related reports are provided. A report application identifies a first report to process along with preference selections associated with finding related reports to the first report being processed. A data preparation application performs an initial filter against a report data store using the first report and the preference selections. The data preparation application passes candidate reports and the first report to a data mining application. The data mining application uses the first report, the candidate reports, and a report usage data store to find relationships and associations with additional reports. In one embodiment, the additional reports are ranked and organized before being presented to the report application as related reports to the first report.",
	"url": null,
	"owner": "Teradata US, Inc.",
	"publication_number": "07636709",
	"publication_date": "2009-12-22",
	"application_number": "10264130",
	"application_date": "2002-10-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Parallel migration of data between systems",
	"summary": "",
	"abstract": "A system and method for migrating data, in parallel, from a source database system into a target database system includes storing data in groups (e.g., clusters) in the source database system. The groups of data are transferred, in parallel, to respective temporary staging tables in the target database system. The data in the temporary staging tables are then inserted, in parallel, into a target table in the target database system to complete the migration.",
	"url": null,
	"owner": "Teradata US, Inc.",
	"publication_number": "07548898",
	"publication_date": "2009-06-16",
	"application_number": "09997442",
	"application_date": "2001-11-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Customized indexes for user defined data types",
	"summary": "",
	"abstract": "A user-customized index is stored in a storage, with the index defined on at least one column of a first table. In response to modification of the first table, a user-defined routine is invoked to update the user-customized index.",
	"url": null,
	"owner": "Tevaclata US, Inc.",
	"publication_number": "07509332",
	"publication_date": "2009-03-24",
	"application_number": "11303286",
	"application_date": "2005-12-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Embedded garbage collection",
	"summary": "",
	"abstract": "An electronic system comprises a processor, memory coupled to the processor, and an application programming interface that causes an embedded garbage collection object to be active. The memory stores one or more objects that selectively have references from root objects. The embedded garbage collection object preferably uses control data to cause objects to be removed from said memory, the removed objects comprise those objects that were created while an embedded garbage collection object was active and that do not have references from root objects.",
	"url": null,
	"owner": "Texas Instruments Incorporated",
	"publication_number": "07565385",
	"publication_date": "2009-07-21",
	"application_number": "10831387",
	"application_date": "2004-04-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Saturated arithmetic in a processing unit",
	"summary": "",
	"abstract": "In some embodiments a system comprises an overflow control bit, a programmable saturation control bit, a processing unit, and a saturation unit coupled to the processing unit. A selection unit may select the output of the processing unit or the output of the saturation unit based on the state of the saturation control bit. Further, the saturation control unit may output a saturated or unsaturated value based on the overflow control bit.",
	"url": null,
	"owner": "Texas Instruments Incorporated",
	"publication_number": "07543014",
	"publication_date": "2009-06-02",
	"application_number": "10631196",
	"application_date": "2003-07-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mapping images from one or more sources into an image for display",
	"summary": "",
	"abstract": "The present invention provides systems and methods that provide images of an environment to the viewpoint of a display. The systems and methods define a mapping surface at a distance from the image source and display that approximates the environment within the field of view of the image source. The system methods define a model that relates the different geometries of the image source, display, and mapping surface to each other. Using the model and the mapping surface, the systems and methods tile images from the image source, correlate the images to the display, and display the images. In instants where two image sources have overlapping fields of view on the mapping surface, the systems and methods overlap and stitch the images to form a mosaic image. If two overlapping image sources each have images with unique characteristics, the systems and methods fuse the images into a composite image.",
	"url": null,
	"owner": "The Boeing Company",
	"publication_number": "07619626",
	"publication_date": "2009-11-17",
	"application_number": "10379409",
	"application_date": "2003-03-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network centric quality of service using active network technology",
	"summary": "",
	"abstract": "Systems and methods for improving network centric quality of service using active network technology are disclosed. In one embodiment, a method includes controlling how a packet is passed over at least one of the interfaces using a differentiated services portion of a network management architecture, monitoring a request for a Quality of Service (QoS) level from at least one QoS-aware application, and adjusting at least one service rate of packet travel controlled by the differentiated services portion based on at least one of the requested QoS level and an available bandwidth. In an alternate embodiment, the controlling of how a packet is passed over at least one of the interfaces includes using at least one of a queuing discipline, a class, and a filter.",
	"url": null,
	"owner": "The Boeing Company",
	"publication_number": "07561521",
	"publication_date": "2009-07-14",
	"application_number": "11008372",
	"application_date": "2004-12-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Software-defined GPS receivers and distributed positioning system",
	"summary": "",
	"abstract": "A software-defined GPS receiver includes a hardware-oriented front end for down converting and digitizing the signals received from GPS satellites. The GPS signal processing functions, such as acquisition/tracking and navigation computing, can be performed by software running on the receiver central processing unit (CPU), rather than by firmware in a custom hardware device such as an ASIC. The signal processing capabilities of the receiver can therefore be readily reconfigured (e.g., upgraded) to accommodate changes in the satellite signal transmissions. Moreover, by utilizing an operating environment architecture and application programs that are compliant with the Software Communications Architecture (SCA) specification, a distributed positioning system of scalable, portable, and compatible SCA-compliant software-defined GPS receivers can be realized.",
	"url": null,
	"owner": "The Boeing Company",
	"publication_number": "07542848",
	"publication_date": "2009-06-02",
	"application_number": "10954084",
	"application_date": "2004-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for trading and originating financial products using a computer network",
	"summary": "",
	"abstract": "The invention relates to systems and methods for trading products and services over a computer network, such as the Internet. In one embodiment, the invention provides a method for trading financial products over a computer network. The system ranks buyers based on the likelihood that they will bid on the products being offered. The system can track the users by certain user information, as well as block a certain user's access to the system based on the user's information.",
	"url": null,
	"owner": "The Debt Exchange, Inc.",
	"publication_number": "07584139",
	"publication_date": "2009-09-01",
	"application_number": "10715108",
	"application_date": "2003-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Service activation of set-top box functionality using broadcast conditional access system",
	"summary": "",
	"abstract": "A method, apparatus, and article of manufacture provide the ability to activate functionality in a set-top box. A feature authorization message is received in a set-top box. The feature authorization message comprises one or more rules to be evaluated (wherein each of the rules comprises one or more tests for a status of one or more conditional access module attributes), one or more event requirements for rule evaluation, and one or more features that are dependent by the rule evaluation result (wherein each of the one or more features represents a set of one or more abilities of hardware and/or software of the set-top box). When one or more of the event requirements have been met, the one or more rules are evaluated to obtain a result. The ability to use the one or more features are then set based on the result.",
	"url": null,
	"owner": "The DIRECTV Group, Inc.",
	"publication_number": "07543317",
	"publication_date": "2009-06-02",
	"application_number": "10920498",
	"application_date": "2004-08-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for an open autonomy kernel (oak)",
	"summary": "",
	"abstract": "The Open Autonomy Kernel (OAK) addresses critical infrastructure requirements for next generation autonomous and semi-autonomous systems (), including performance tracking, anomaly detection, diagnosis, fault recovery, and plant u201csafingu201d. OAK combines technologies in automated planning and scheduling, control agent-based systems (), and model based reasoning to form a portable software architecture (), knowledge-base, and open Application Programming Interface (API) to enable integrated auxiliary subsystem autonomy.",
	"url": null,
	"owner": "The John Hopkins University",
	"publication_number": "07574497",
	"publication_date": "2009-08-11",
	"application_number": "10344876",
	"application_date": "2002-05-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Compliance rules analytics engine",
	"summary": "",
	"abstract": "The present invention relates to compliance rules analytics systems and methods for facilitating compliance, such as the compliance of an investment portfolio or a set of investment portfolios, with a rule or a set of rules.",
	"url": null,
	"owner": "The MacGregor Group, Inc.",
	"publication_number": "07603358",
	"publication_date": "2009-10-13",
	"application_number": "11253273",
	"application_date": "2005-10-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Graphical interface for grouping concurrent computing units executing a concurrent computing process",
	"summary": "",
	"abstract": "A graphical user interface for an interactive concurrent computing environment that conveys the concurrent nature of the computing environment and allows a user to monitor the status of a concurrent process being executed on multiple concurrent computing units is discussed. The graphical user interface indicates the status of groups of instances of the concurrent computing process including whether the instances of the concurrent process are idle, busy or stopped.",
	"url": null,
	"owner": "The Math Works, Inc.",
	"publication_number": "07631168",
	"publication_date": "2009-12-08",
	"application_number": "11497871",
	"application_date": "2006-07-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic component interface creator",
	"summary": "",
	"abstract": "A cross-platform interface tool provides a common interface for any hardware or software component having some advertising mechanism listing its features, input, and output requirements. The advertising mechanism can take a number of different forms, including data, a software object definition, or a communications system. The cross-platform interface tool includes a parsing mechanism for parsing through a component description associated with at least one of the plurality of components to gather information relating to the components. A component interface creator automatically generates a component interface based on the information gathered by the parsing mechanism.",
	"url": null,
	"owner": "The MathWorks, Inc.",
	"publication_number": "07502031",
	"publication_date": "2009-03-10",
	"application_number": "11642431",
	"application_date": "2006-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Distributed model compilation",
	"summary": "",
	"abstract": "Methods and systems are provided for partitioning and distributing the model processing of a graphical model to provide an executable form of the graphical model. The methods and systems determine tasks of the model processing that can be processed separately and concurrently from other tasks. A distribution scheme for distributing the model processing tasks is determined that considers the characteristics of the model processing tasks in view of the characteristics of available computing resources. Variations of partitioning and distributing the model processing tasks can be determined to provide for distributed processing in an optimized or desired manner. The results of the distributed processing of the model processing tasks are obtained and combined to provide an executable form for the graphical model.",
	"url": null,
	"owner": "The MathWorks, Inc.",
	"publication_number": "07509244",
	"publication_date": "2009-03-24",
	"application_number": "11021907",
	"application_date": "2004-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Dynamic definition for concurrent computing environments",
	"summary": "",
	"abstract": "The present invention provides a method and system for dynamically configuring computing environment for concurrent computing. Given a specific configuration and/or the number of concurrent computing labs at start up of an executable process, the executable process may be set up for parallel computing environment using local resources and/or remote resources. A configuration is used to store all configuration information so that a one-string configuration may be used. The one-string configuration may be used at start up of an executable process or may be provided as an argument to a function.",
	"url": null,
	"owner": "The MathWorks, Inc.",
	"publication_number": "07634530",
	"publication_date": "2009-12-15",
	"application_number": "11271009",
	"application_date": "2005-11-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Interfaces to a job manager in distributed computing environments",
	"summary": "",
	"abstract": "A method, system and computer program product is disclosed for a distributed system with which an arbitrary job manager is able to be interfaced. In the distributed system, a job may be created by a host or client and submitted to the arbitrary job manager for distributing the job to one or more remote workers. The present invention provides interfaces with the arbitrary job manager to establish communication channels to the arbitrary job manager. As such, the present invention allows the use of an arbitrary job manager in the distributed system.",
	"url": null,
	"owner": "The MathWorks, Inc.",
	"publication_number": "07502745",
	"publication_date": "2009-03-10",
	"application_number": "10940151",
	"application_date": "2004-09-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Memory mapping for single and multi-processing implementations of code generated from a block diagram model",
	"summary": "",
	"abstract": "Methods and systems are provided for automatically generating code from a graphical model representing a design to be implemented on components of a target computational hardware device. During the automatic code generating process, a memory mapping is automatically determined and generated to provide an optimization of execution of the program on the target device. The optimized memory mapping is incorporated into building the program executable from the automatically generated code of the graphical model.",
	"url": null,
	"owner": "The MathWorks, Inc.",
	"publication_number": "07584465",
	"publication_date": "2009-09-01",
	"application_number": "11019044",
	"application_date": "2004-12-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Physical units of measure in modeling languages",
	"summary": "",
	"abstract": "The present invention provides intrinsic units of measure for modeling physical systems. Physical systems may then be modeled using the units of measure. As such, actual units, reflecting real world measurements, can be used and propagated through the modeled system yielding results having units of measure. In some embodiments, units of measure may also be checked to determine if they are compatible for a given operation. If units are not compatible, the user may then be notified that compatible units are required.",
	"url": null,
	"owner": "The MathWorks, Inc.",
	"publication_number": "07624000",
	"publication_date": "2009-11-24",
	"application_number": "11881003",
	"application_date": "2007-07-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Multi-access terminal with capability for simultaneous connectivity to multiple communication channels",
	"summary": "",
	"abstract": "An apparatus is disclosed for permitting a mobile terminal having multiple, heterogeneous network connections (e.g., multiple wired or wireless transceivers of various types) to set up and maintain virtual connections over multiple networks to either the same or to multiple destinations. The mobile terminal can u201cload-shareu201d traffic, i.e., it can distribute segments of traffic over a full set of heterogeneous networks, significantly improving the reliability and availability of communications. In a first embodiment, a mobile terminal is configured with multiple radio frequency (RF) transceivers. Operating system software is provided for dynamically establishing and maintaining traffic flow for user applications over multiple communications paths, and for automatically adapting to variations in the networking environment, application traffic flow requirements, end user preferences, or mobility. In a second embodiment, a software-defined radio is used to implement the physical layer protocols for each desired network, eliminating the need for multiple transceivers.",
	"url": null,
	"owner": "The Trustees of Stevens Institute of Technology",
	"publication_number": "07539175",
	"publication_date": "2009-05-26",
	"application_number": "11283610",
	"application_date": "2005-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Global visualization process for personal computer platforms (GVP+)",
	"summary": "",
	"abstract": "A system and process that incorporates hardware and software as elements to be combined with procedures and processes to obtain, format, store, combine, control, display, record, and visualize dynamic scenarios by interacting with accurate, realistic models and actual events within, on, and above a three-dimensional surface to be observed or modeled. The present invention software and process is capable of displaying extremely high resolution terrain models and imagery in real time over the entire surface of the planet, as well as a large number of moving entities and their associated graphical models. These features, combined with a network application programming interface (API), make the present invention suitable for flight simulation out-the-window displays, command and control scenarios, and mission review or rehearsal.",
	"url": null,
	"owner": "The United States of America as represented by the Secretary of the Navy",
	"publication_number": "07564455",
	"publication_date": "2009-07-21",
	"application_number": "11296723",
	"application_date": "2005-12-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Open-loop controller",
	"summary": "",
	"abstract": "An apparatus for controlling the movements of an avatar in a virtual environment includes a user input means, such as a gamepad with a plurality of joystick-controlled and button-controlled outputs, a tracker, and optional sliding foot pedals; a processor for running virtual environment (VE) software that includes an avatar moving through the VE; and a control mapping algorithm. The algorithm maps the gamepad, tracker, and optional sliding foot pedal outputs to the avatar's course, heading, displacement, and view, with the joysticks mapped to provide open loop directional control over the course and heading of the avatar, the tracker providing open loop control over the view, and the optional sliding foot pedals providing open loop control over displacement. The operator-controlled movement of the avatar in the virtual environment is displayed to the operator on a computer desktop display or a head mounted display.",
	"url": null,
	"owner": "The United States of America as represented by the Secretary of the Navy",
	"publication_number": "07528835",
	"publication_date": "2009-05-05",
	"application_number": "11528341",
	"application_date": "2006-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for controlling devices within a network by dedicated remote control and devices for carrying out said method",
	"summary": "",
	"abstract": "The invention relates to a method of controlling devices linked by a digital communication network, a device having a control deviceu2014typically a remote controlu2014that is dedicated to it; the control device comprising command input meansu2014typically keysu2014for entering commands. The method consists initially in running on each device to be controlled a step for configuring the associations between network device functions and command input means, then, when a means is activated, in sending a message including the code corresponding to the device associated with this key. A refinement consists in associating a number of devices with one and the same key, and in sending as many messages as there are associated devices when the key is activated. The invention also relates to a device provided with a remote control and an interface for implementing the method.",
	"url": null,
	"owner": "Thomson Licensing",
	"publication_number": "07528735",
	"publication_date": "2009-05-05",
	"application_number": "10541857",
	"application_date": "2004-01-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for retrieving data from first and second storage medium",
	"summary": "",
	"abstract": "A method for modifying data read from read-only media during playback time comprises logically merging the on-disc directory tree and an associated off-disc directory tree. A logical directory tree is constructed from the data retrieved from the read-only medium, wherein the structure of the logical directory tree is identical with the structure of the directory tree of the medium. The method allows replacing content on the disc through downloaded content, e.g. replacing an out-dated trailer stored on the disc through a downloaded trailer for a new movie. The method further allows complementing or upgrading content on the disc, e.g. by downloading a new subtitle track from the internet.",
	"url": null,
	"owner": "Thomson Licensing",
	"publication_number": "07640228",
	"publication_date": "2009-12-29",
	"application_number": "10570108",
	"application_date": "2004-08-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method, apparatus and system for supporting multiple collaborative sessions in a bi-directional communication device",
	"summary": "",
	"abstract": "A method, apparatus and system for supporting multiple diagnostic sessions include receiving multiple diagnostic session requests, verifying identification information for each requester, establishing a communications channel for each verified requester, and communicating the requested information to all of the verified requesters via the established communications channels.",
	"url": null,
	"owner": "Thomson Licensing",
	"publication_number": "07533162",
	"publication_date": "2009-05-12",
	"application_number": "10511560",
	"application_date": "2003-04-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Agent for communication between a manager and at least one resource, and tool library for creating the agent",
	"summary": "",
	"abstract": "The agent for communication between a manager () and at least one resource () comprises a protocol core () created automatically from a formalized description of the resource (), this core (), once created, comprising in compiled form an interface () for communication with the manager () and a model () of the resource () comprising the values of the instances of the resource (), these values being accessible by the administrator () through the communication interface ().",
	"url": null,
	"owner": "Thomson Licensing S.A.",
	"publication_number": "07562126",
	"publication_date": "2009-07-14",
	"application_number": "10419852",
	"application_date": "2003-04-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "File and content management",
	"summary": "",
	"abstract": "Disclosed herein is a table mapping a data offset in a bitstream, apparatus for evaluating position in a bitstream, and a command for controlling the transfer of a bitstream.",
	"url": null,
	"owner": "THOMSON Licensing S.A.",
	"publication_number": "07593620",
	"publication_date": "2009-09-22",
	"application_number": "10225433",
	"application_date": "2002-08-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Secure data processing apparatus",
	"summary": "",
	"abstract": "A method for processing data involving receiving a scrambled program and encrypted data including at least one control word used to descramble the scrambled program at a receiver/decoder operatively connected to a mass storage device. If a user does not initially have the necessary access rights, the scrambled program and the encrypted data are stored by the receiver/decoder. When the user obtains the access rights, the encrypted data is read and the at least one control word is extracted. The encrypted data is then replaced by the control word.",
	"url": null,
	"owner": "THOMSON Licensing S.A.",
	"publication_number": "07590860",
	"publication_date": "2009-09-15",
	"application_number": "10295021",
	"application_date": "2002-11-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Coupling data in a parallel processing environment",
	"summary": "",
	"abstract": "An integrated circuit comprises a plurality of tiles. Each tile comprises a processor, and a switch including switching circuitry to forward data received over data paths from other tiles to the processor and to switches of other tiles, and to forward data received from the processor to switches of other tiles. The integrated circuit further comprises one or more interface modules including circuitry to transfer data to and from a device external to the tiles; and a sub-port routing network including circuitry to route data between a port of a switch and a plurality of sub-ports coupled to one or more interface modules.",
	"url": null,
	"owner": "Tilera Corporation",
	"publication_number": "07636835",
	"publication_date": "2009-12-22",
	"application_number": "11404658",
	"application_date": "2006-04-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Coupling integrated circuits in a parallel processing environment",
	"summary": "",
	"abstract": "An integrated circuit comprises a plurality of tiles. Each tile comprises a processor, and a switch including switching circuitry to forward data received over data paths from other tiles to the processor and to switches of other tiles, and to forward data received from the processor to switches of other tiles. The integrated circuit further comprises an interface coupled to a plurality of the tiles to transfer data between one or more switches of the tiles and one or more switches of tiles in an externally coupled integrated circuit.",
	"url": null,
	"owner": "Tilera Corporation",
	"publication_number": "07539845",
	"publication_date": "2009-05-26",
	"application_number": "11404409",
	"application_date": "2006-04-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing data in a parallel processing environment",
	"summary": "",
	"abstract": "An integrated circuit comprises a plurality of tiles. Each tile comprises a processor including a storage module, wherein the processor is configured to process multiple streams of instructions, a switch including switching circuitry to forward data received over data paths from other tiles to the processor and to switches of other tiles, and to forward data received from the processor to switches of other tiles, and coupling circuitry configured to couple data resulting from processing an instruction from at least one of the streams of instructions to the storage module and to the switch.",
	"url": null,
	"owner": "Tilera Corporation",
	"publication_number": "07577820",
	"publication_date": "2009-08-18",
	"application_number": "11404958",
	"application_date": "2006-04-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Managing memory in a parallel processing environment",
	"summary": "",
	"abstract": "An integrated circuit comprises a plurality of tiles. Each tile comprises: a processor, a switch including switching circuitry to forward data received over data paths from other tiles to the processor and to switches of other tiles, and to forward data received from the processor to switches of other tiles, according to a switch instruction indicating an input port to which each of multiple output ports of the switch is to be coupled, and a translation lookaside buffer coupled to the switch to translate virtual memory addresses of switch instructions to physical memory addresses of the switch instructions.",
	"url": null,
	"owner": "Tilera Corporation",
	"publication_number": "07624248",
	"publication_date": "2009-11-24",
	"application_number": "11404187",
	"application_date": "2006-04-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mapping memory in a parallel processing environment",
	"summary": "",
	"abstract": "An integrated circuit comprises a plurality of tiles. Each tile comprises a processor, and a switch including switching circuitry to forward data received over data paths from other tiles to the processor and to switches of other tiles, and to forward data received from the processor to switches of other tiles. The integrated circuit further includes a plurality of memory interface modules including circuitry to access a respective external memory, each memory interface module coupled to a switch of at least one tile. At least some of the tiles are configured to access an address in an external memory by sending from the switch a packet that includes a physical memory address that includes the external memory address and information identifying the corresponding external memory.",
	"url": null,
	"owner": "Tilera Corporation",
	"publication_number": "07620791",
	"publication_date": "2009-11-17",
	"application_number": "11404207",
	"application_date": "2006-04-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and apparatus for controlling display in a networked device",
	"summary": "",
	"abstract": "Methods and apparatus for controlling display elements within a networked device. In one embodiment, the network comprises a cable television network, and the device a digital set-top box (DSTB) with front panel display(s). A downloadable software module is provided that is adapted to discover the front panel display capabilities of the device, and control the display accordingly. This approach allows, inter alia, the cable network operator or other entity to manage the user's experience relating to the front panel display(s) on various types of client devices. The module is also optionally platform-agnostic (i.e., u201cuniversalu201d) so that the aforementioned capabilities are provided largely irrespective of the device hardware/software environment.",
	"url": null,
	"owner": "Time Warner Cable Inc.",
	"publication_number": "07623933",
	"publication_date": "2009-11-24",
	"application_number": "11150654",
	"application_date": "2005-06-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method for testing DSL capability of telephone lines",
	"summary": "",
	"abstract": "A system and method for performing DSL assessments of a telephone line along a prescribed test path is disclosed. The disclosed system includes a loop diagnostic test unit adapted for testing said telephone line using narrow-band and mid-band frequency test signals; a test system controller and a test system server to provide the DSL assessments to a user via an appropriate interface. In addition, the disclosed methods include the basic steps of: accessing the telephone line along the test path that includes selected hardware such as a voice switch test bus, central office splitter, service provider instruments and terminations; ascertaining various line characteristics along the test path using mid-band and narrow-band frequency signals; analyzing the line characteristics to identify line conditions that affect DSL service; and determining the impact of the line conditions on DSL service.",
	"url": null,
	"owner": "Tollgrade Communications, Inc.",
	"publication_number": "07515691",
	"publication_date": "2009-04-07",
	"application_number": "10956816",
	"application_date": "2004-10-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Test system for assessing DSL capability of telephone lines",
	"summary": "",
	"abstract": "A system and method for performing DSL assessments of a telephone line along a prescribed test path is disclosed. The disclosed system includes a loop diagnostic test unit adapted for testing said telephone line using narrow-band and mid-band frequency test signals; a test system controller and a test system server to provide the DSL assessments to a user via an appropriate interface. In addition, the disclosed methods include the basic steps of: accessing the telephone line along the test path that includes selected hardware such as a voice switch test bus, central office splitter, service provider instruments and terminations; ascertaining various line characteristics along the test path using mid-band and narrow-band frequency signals; analyzing the line characteristics to identify line conditions that affect DSL service; and determining the impact of the line conditions on DSL service.",
	"url": null,
	"owner": "Tollgrade Communications, Inc.",
	"publication_number": "07529347",
	"publication_date": "2009-05-05",
	"application_number": "10956605",
	"application_date": "2004-10-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for preserving user identification when generating image data from a remote location",
	"summary": "",
	"abstract": "A method for a user using a thick client to send a print job to a server wherein the user name is preserved and can be determined by the server. When the image file is processed, the processing comprising appending a user identification to the file. A destination driver is invoked, which creates raw print data from the image file for each selected driver. The raw print data is sent to the server, wherein the server parses the raw data and determines the user identification. The raw print data can then be sent to the user's inbox on the server. In a preferred embodiment, the user identification comprises the sequence of ASCII 60 (or 3C hex), the username, and ASCII 62 (or 3E hex), or u201c<username>u201d. Preferably, the user identification is appended to the document name.",
	"url": null,
	"owner": "Toshiba Tec Kabushiki Kaisha",
	"publication_number": "07565400",
	"publication_date": "2009-07-21",
	"application_number": "10271385",
	"application_date": "2002-10-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for XML based data driven generation of a composite source user interface",
	"summary": "",
	"abstract": "The subject application is directed to a system and method for generating a dynamic composite source user interface. Text data is received into a data document stored in associated memory. Data representing each of a plurality of graphical elements that correspond to the received text data is then received. A visual indicator, corresponding to each of the graphical elements, is generated on an associated display. Selection data representing a selection of one of the graphical elements on the associated display is then received. Pointer data is then associated with the selected graphical element. The pointer data is further associated with the text data. Next, the selected graphical element is then displayed on the associated display in conjunction with the text data, as referenced by the pointer data.",
	"url": null,
	"owner": "Toshiba Tec Kabushiki Kaisha",
	"publication_number": "07624350",
	"publication_date": "2009-11-24",
	"application_number": "11463876",
	"application_date": "2006-08-10",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Gateway and hybrid solutions for wireless location",
	"summary": "",
	"abstract": "A location system is disclosed for commercial wireless telecommunication infrastructures. The system is an end-to-end solution having one or more location centers for outputting requested locations of commercially available handsets or mobile stations (MS) based on, e.g., CDMA, AMPS, NAMPS or TDMA communication standards, for processing both local MS location requests and more global MS location requests via, e.g., Internet communication between a distributed network of location centers. The system uses a plurality of MS locating technologies including those based on: (1) two-way TOA and TDOA; (2) pattern recognition; (3) distributed antenna provisioning; and (4) supplemental information from various types of very low cost non-infrastructure base stations for communicating via a typical commercial wireless base station infrastructure or a public telephone switching network. Accordingly, the traditional MS location difficulties, such as multipath, poor location accuracy and poor coverage are alleviated via such technologies in combination with strategies for: (a) automatically adapting and calibrating system performance according to environmental and geographical changes; (b) automatically capturing location signal data for continual enhancement of a self-maintaining historical data base retaining predictive location signal data; (c) evaluating MS locations according to both heuristics and constraints related to, e.g., terrain, MS velocity and MS path extrapolation from tracking and (d) adjusting likely MS locations adaptively and statistically so that the system becomes progressively more comprehensive and accurate. Further, the system can be modularly configured for use in location signaling environments ranging from urban, dense urban, suburban, rural, mountain to low traffic or isolated roadways. Accordingly, the system is useful for 911 emergency calls, tracking, routing, people and animal location including applications for confinement to and exclusion from certain areas.",
	"url": null,
	"owner": "TracBeam LLC",
	"publication_number": "07525484",
	"publication_date": "2009-04-28",
	"application_number": "09770838",
	"application_date": "2001-01-26",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Repositioning of market information on trading screens",
	"summary": "",
	"abstract": "As market conditions descend or ascend an axis of prices, the display of market information is repositioned, at a pre-determined rate if desired, around an item of interest. An item of interest may include the best bid price, the best ask price, the inside market, a moving average, a last traded price, a theoretical value, the result of an equation, or some other item of interest to the trader. According to the present embodiments, market information may be displayed in a region relative to an axis of prices, and when an event occurs, a repositioning signal is initialized causing the axis to be repositioned such that the item of interest is positioned at a pre-determined location in the region. The price axis can be repositioned at a fixed rate or at a dynamically variable rate.",
	"url": null,
	"owner": "Trading Technologies International Inc.",
	"publication_number": "07587357",
	"publication_date": "2009-09-08",
	"application_number": "10609965",
	"application_date": "2003-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Graphical display with integrated recent period zoom and historical period context data",
	"summary": "",
	"abstract": "A system and method are provided for displaying a data series. In one embodiment, a graphical interface is provided including at least one axis that is divided into a plurality of axis regions. Preferably, each axis region uses a different linear scale, and the plurality of axis regions forms a continuous non-linear scale. The graphical interface also displays the data series in relation to the plurality of axis regions, and the data series is plotted in relation to each axis region based on a scale resolution corresponding to each respective axis region.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07629975",
	"publication_date": "2009-12-08",
	"application_number": "12027073",
	"application_date": "2008-02-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing order queue information",
	"summary": "",
	"abstract": "A system and method for providing market information are disclosed. In this application, updates are received for a tradeable object at a price level from at least one exchange. To the extent that the updates do not include enough details to compute the number of orders resting at a particular price level in a market, estimation may be used to provide order queue information. As a result, the number of orders which are pending in the market at various price levels may be determined using the techniques described herein. The interface disclosed herein may be used to display the number and/or quantity of the orders in the order queue.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07620576",
	"publication_date": "2009-11-17",
	"application_number": "10348134",
	"application_date": "2003-01-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for calculating and displaying volume to identify buying and selling in an electronic trading environment",
	"summary": "",
	"abstract": "A system and method are provided for calculating and displaying volume to identify aggressive buying or selling activity. In a preferred embodiment, market information such as the inside market, last traded price, and last traded quantity is received from the electronic exchange and is used to assist a trader in determining the initiative side of a trade, either bid side or ask side. Once a determination is made, the result may be used to assist a trader analyzing the market volume. Other features and advantages are described herein.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07565318",
	"publication_date": "2009-07-21",
	"application_number": "11370693",
	"application_date": "2006-03-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for chart pattern recognition and analysis in an electronic trading environment",
	"summary": "",
	"abstract": "A system and method are provided for chart pattern recognition and analysis. In one embodiment, a graphical interface is provided to enable a trader to select a portion of a chart to be used in the chart pattern analysis. The pattern of the selected portion of the chart could then be used to find one or more similar chart patterns in a user-defined timeframe, such as any future time period or a time period in the past. When a reoccurring chart pattern is found in any future time period, an alert signal can be generated to alert a user of a possibility of the chart pattern reoccurrence. Alternatively, chart pattern matches can be found in a time period in the past, and a set of studies can be applied to the found matches to generate a set of reoccurring indicator values. The reoccurring indicator values can be used in combination with the chart pattern to detect any similar chart patterns in the future.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07599867",
	"publication_date": "2009-10-06",
	"application_number": "10882594",
	"application_date": "2004-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for displaying a constant time selection context menu interface",
	"summary": "",
	"abstract": "A system and method are provided for a context menu pop-up interface. In one embodiment, the context menu interface may be activated in relation to a second interface, and may include a plurality of selection areas organized around a central selection area. In a preferred embodiment, the sizes of each of the plurality of selection areas increase as a distance to each selection area increases from the central selection area, and the sizes are selected such that the plurality of selection areas can be selected in approximately the same time.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07546550",
	"publication_date": "2009-06-09",
	"application_number": "11415852",
	"application_date": "2006-05-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for displaying a constant time selection context menu interface",
	"summary": "",
	"abstract": "A system and method are provided for a context menu pop-up interface. In one embodiment, the context menu interface may be activated in relation to a second interface, and may include a plurality of selection areas organized around a central selection area. In a preferred embodiment, the sizes of each of the plurality of selection areas increase as a distance to each selection area increases from the central selection area, and the sizes are selected such that the plurality of selection areas can be selected in approximately the same time.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07559036",
	"publication_date": "2009-07-07",
	"application_number": "10794559",
	"application_date": "2004-03-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for displaying market information and order placement in an electronic trading environment",
	"summary": "",
	"abstract": "A system and method are provided for displaying a trading screen and placing an order in an electronic trading environment. The system and method may be used to assist a trader in selecting an item of interest, such as the inside market (best bid and best ask) to be displayed relative to a user configured location on the trading screen, such as the center of the trading screen. In a preferred embodiment, the inside market will stay located relative to center of the trading screen and the price levels associated to the inside market will move as the market conditions fluctuate. Other features and advantages are described herein.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07565317",
	"publication_date": "2009-07-21",
	"application_number": "11321831",
	"application_date": "2005-12-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for displaying trading data",
	"summary": "",
	"abstract": "A system and method are provided for presenting trading information. One example method includes displaying a plurality of effective trade indicators corresponding to price levels at which effective trades have been initiated, and displaying trading information corresponding to each effective trade. The effective trades can be determined based on user-configured trade definitions. The trading information can include a traded quantity and profit/loss corresponding to each effective trade. In addition to the trading information, current market information could be displayed as well in relation to the plurality of effective trades.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07599868",
	"publication_date": "2009-10-06",
	"application_number": "11415356",
	"application_date": "2006-05-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for displaying trading data",
	"summary": "",
	"abstract": "A system and method are provided for presenting trading information. One example method includes displaying a plurality of effective trade indicators corresponding to price levels at which effective trades have been initiated, and displaying trading information corresponding to each effective trade. The effective trades can be determined based on user-configured trade definitions. The trading information can include a traded quantity and profit/loss corresponding to each effective trade. In addition to the trading information, current market information could be displayed as well in relation to the plurality of effective trades.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07634437",
	"publication_date": "2009-12-15",
	"application_number": "11095235",
	"application_date": "2005-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for dynamically determining quantity for risk management",
	"summary": "",
	"abstract": "A system and method for dynamically determining quantity for risk management are described. According to one example embodiment, as a trader positions an order icon at a desired price or price-derivative value on a graphical interface, an order quantity for the order is dynamically determined based on the order price and a selected risk management formula. A trader can change the price or the price-related value for one or more orders by moving the order icons relative to a price axis on a graphical interface. In such an embodiment, the initially calculated order quantity for each order will be dynamically recalculated based on the modified orders for the trading strategy.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07640207",
	"publication_date": "2009-12-29",
	"application_number": "11417873",
	"application_date": "2006-05-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for dynamically regulating order entry in an electronic trading environment",
	"summary": "",
	"abstract": "A system and method are provided for trading a trading strategy defined for at least one tradeable object in an electronic trading environment. More specifically, one example method includes using a first pay-up tick value to determine a first acceptable price level for an order associated with the trading strategy, automatically modifying the first pay-up tick to a second pay-up tick value in response to detecting a predefined condition, and using the second pay-up tick value to determine a second acceptable price level for the order associated with the trading strategy.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07596528",
	"publication_date": "2009-09-29",
	"application_number": "11095980",
	"application_date": "2005-03-31",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for event driven virtual workspace",
	"summary": "",
	"abstract": "A system and method for an event driven virtual workspace are described. According to one example method, a trader can define a plurality of windows to be associated with a virtual workspace. Also, the trader could define one or more triggering events, the combination of which may be used to activate the virtual workspace. In such an embodiment, when the system detects the one or more triggers, the system can attempt to activate the virtual workspace. According to the example method, the trader may place a number of limiting conditions before any states of the currently displayed windows are modified such that the triggered virtual workspace could be displayed. If no limiting conditions are detected, the system can display the triggered virtual workspace.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07627518",
	"publication_date": "2009-12-01",
	"application_number": "11415395",
	"application_date": "2006-05-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for event-based trading",
	"summary": "",
	"abstract": "A system and method for news-based trading are developed. According to one method, a trader can pre-define a trading strategy including a number of trading rules to be applied based on a comparison of one or more estimated event values to the respective actual event values to be released at some later time. The example method further includes, upon receiving one or more actual event values via a user input or directly from outside sources, executing one or more predefined trading rules selected based on the comparison of the received actual event values to the respective estimated indicator values.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07640206",
	"publication_date": "2009-12-29",
	"application_number": "11415963",
	"application_date": "2006-05-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for timed order entry and modification",
	"summary": "",
	"abstract": "A system and method for defining and processing timed orders are defined. According to one embodiment, a trader may define a timed order by defining an intra-day time trigger or a time period when the timed order should be automatically modified, such as deleted or cancelled/replaced with a new order. In one embodiment, the intra-day time trigger or time period may be dynamically changed to a later time, for example, upon receiving a predetermined user input. Also, the time trigger and time period may be configured to dynamically vary based on any user configurable formula. Also, the timed order may be associated with one or more actions to be taken once the order is deleted, such as sending a new order, for example.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07512557",
	"publication_date": "2009-03-31",
	"application_number": "10609869",
	"application_date": "2003-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for timed order entry and modification",
	"summary": "",
	"abstract": "A system and method for defining and processing timed orders are defined. According to one embodiment, a trader may define a timed order by defining an intra-day time trigger or a time period when the timed order should be automatically modified, such as deleted or cancelled/replaced with a new order. In one embodiment, the intra-day time trigger or time period may be dynamically changed to a later time, for example, upon receiving a predetermined user input. Also, the time trigger and time period may be configured to dynamically vary based on any user configurable formula. Also, the timed order may be associated with one or more actions to be taken once the order is deleted, such as sending a new order, for example.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07483850",
	"publication_date": "2009-01-27",
	"application_number": "11415853",
	"application_date": "2006-05-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus of storage anti-piracy key encryption (sake) device to control data access for networks",
	"summary": "",
	"abstract": "A method for providing data access control over information networks comprises coupling a control device to a digital processing system, obtaining user identification by executing a user authentication process, retrieving initialization information from a first memory unit of the control device in response to a request from an information provider received over the information network when user's identity is authenticated, providing the initialization information to the information provider via the information network through the digital processing system, establishing a communication between the control device and the information provider over the information network when an acknowledgement of user identity is received, obtaining information from the information provider over the information network, and storing the information in a second memory unit of the control device.",
	"url": null,
	"owner": "Trek 2000 International Ltd.",
	"publication_number": "07600130",
	"publication_date": "2009-10-06",
	"application_number": "11858864",
	"application_date": "2007-09-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Portable device having biometrics-based authentication capabilities",
	"summary": "",
	"abstract": "Apparatus and method for implementing biometrics-based access control to a restricted resource. In a preferred embodiment, the present invention is realized using a portable device. Specifically, in one embodiment, the portable device includes a microprocessor, a non-volatile memory coupled thereto, and a biometrics-based authentication module controlled by the microprocessor. Preferably, the biometrics technology used is fingerprint authentication technology. The authentication module is capable of registering a fingerprint upon first use of the portable device, storing an encoded version of the fingerprint in the non-volatile memory. Subsequently, the authentication module can read a person's fingerprint and reliably determine whether the fingerprint matches the registered fingerprint stored in the non-volatile memory. If a match is found, access to the restricted resource is granted to that person; otherwise, access is denied. Embodiments of the present invention thus provide a highly convenient, secured and reliable method and system for user authentication and access control which was not achievable in prior art password-based authentication approaches.",
	"url": null,
	"owner": "Trek 2000 International Ltd.",
	"publication_number": "07549161",
	"publication_date": "2009-06-16",
	"application_number": "09898310",
	"application_date": "2001-07-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and apparatus for compressing and decompressing data stored to a portable data storage device",
	"summary": "",
	"abstract": "A portable memory device is provided that is capable of easy connection to a personal computer via a universal serial bus (USB) port, IEEE 1394 (i.e., firewire) or similar port. Included in the portable memory device is a compression/decompression engine capable of compressing and decompressing data. Data residing on a personal computer or other host platform is compressed by the engine and saved to the memory of the portable memory device. Compressed data is retrieved and decompressed by the engine and transmitted to the personal computer for use by the user. Embodiments of the present invention thus provide a highly convenient system and apparatus for users to access and save larger quantities of data to a relatively small device.",
	"url": null,
	"owner": "Trek 2000 International Ltd.",
	"publication_number": "07631121",
	"publication_date": "2009-12-08",
	"application_number": "11459627",
	"application_date": "2006-07-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Mobile connectivity solution",
	"summary": "",
	"abstract": "A method and application for selecting a network from one or more candidate networks is disclosed. Information is gathered from one or more database relating to each of the one or more candidate networks and is harmonized in relation to an associated network type. The harmonized information is evaluated to allocate a weight to each of the candidate networks. The weight represents the desirability of each of the candidate networks. The required resources to connect to each of the candidate networks are determined from information contained within the service-provider database, from information obtained by the end-user, and by self-adaptive learning algorithms. At least one of the candidate networks is selected based on the allocated weight of the candidate network and the application attempts to connect to the candidate network. The method and application incorporates the ability to control and integrate a plurality of services on a user device via the candidate network.",
	"url": null,
	"owner": "Trellia Networks, Inc.",
	"publication_number": "07620065",
	"publication_date": "2009-11-17",
	"application_number": "11188047",
	"application_date": "2005-07-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for controlling traffic in a computer network",
	"summary": "",
	"abstract": "In one embodiment, a technique for controlling traffic in a computer network includes modifying a packet generated by a first computer. The packet may be intended for a second computer, but is modified to be redirected to a third computer. The packet may be processed in the third computer prior to being forwarded from the third computer to the second computer. The packet may be scanned for viruses at the third computer, for example. Among other advantages, the technique allows for scanning of early generated packets, redirection of selected packets, and routing of packets from a computer in general.",
	"url": null,
	"owner": "Trend Micro Incorporated",
	"publication_number": "07533415",
	"publication_date": "2009-05-12",
	"application_number": "10829466",
	"application_date": "2004-04-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Virus pattern update for mobile device",
	"summary": "",
	"abstract": "An updated virus pattern file is developed at an update server. A mobile management center (MMC) has a list of mobile telephone numbers and receives the new virus pattern from the update server. A Multimedia Message Service Center receives the new virus pattern and the list of mobile telephone numbers from the MMC and sends an MMS message to each of the wireless devices, including the new virus pattern as an attachment. Each wireless device replaces the old virus pattern with the new virus pattern. A unique identifier (a cryptographic signature or magic number) is added to each MMS message to enable the wireless device to recognize a new virus pattern. The pattern version and the pattern itself are merged into a single file. The file is also encrypted at the MMC and decrypted at the wireless device.",
	"url": null,
	"owner": "Trend Micro, Inc.",
	"publication_number": "07634262",
	"publication_date": "2009-12-15",
	"application_number": "11369704",
	"application_date": "2006-03-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for efficient delta pricing",
	"summary": "",
	"abstract": "A method includes generating a delta price and generating a final price using the delta price. A process and system provide an ability to determine a product's final price with a selected set of features in which multiple configurations are to be generated. The ability to determine such final prices can be based on the ability to determine the change in price between one configuration of a product and that of another product configuration (e.g. the product configured with the desired feature(s)). A customer is able to select one or more features, and so view the effect on the product's final price, as well as compare the prices (and incremental price differences) between various configurations of a given product. This increases the likelihood of the purchase being made, because it provides the potential purchaser with the final price earlier in the sales cycle.",
	"url": null,
	"owner": "Trilogy Development Group, Inc.",
	"publication_number": "07584155",
	"publication_date": "2009-09-01",
	"application_number": "10061896",
	"application_date": "2002-02-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for preventing unauthorized recording of media content in the iTunesu2122 environment",
	"summary": "",
	"abstract": "A method and system for preventing unauthorized recording of media content in an iTunesu2122 environment. Embodiment of the method begins by activating a compliance mechanism in response to receiving media content at a client system. The media content is received from a content provider providing content in a format compatible with an iTunesu2122 media service. Also, the client system has a media content presentation application that is capable of handling the media content operable thereon and coupled to the compliance mechanism. The method continues by controlling a data output path carrying the media content of the client system with the compliance mechanism. Thereafter, the method directs the media content to a custom media device coupled that is coupled to the compliance mechanism via the data output path. In this way, the embodiment of the method is capable of selectively restricting output of the media content.",
	"url": null,
	"owner": "Trimble Navigation Limited",
	"publication_number": "07570761",
	"publication_date": "2009-08-04",
	"application_number": "10772025",
	"application_date": "2004-02-03",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Preventing unauthorized distribution of media content within a global network",
	"summary": "",
	"abstract": "One embodiment of the invention is a method for providing media content while preventing its unauthorized distribution. The method includes transmitting from a client to an administrative node a request for delivery of an instance of media content (IMC); determining which content source (CS) of a plurality of CSs to provide delivery of the IMC, provided the client is authorized to receive the IMC; transmitting to the client an access key and a location of the IMC; transmitting from the client to the CS a second request and the access key; in response to receiving the second request and the access key, transferring the IMC from the CS to the client; transmitting from the client to the administrative node an indicator indicating a successful transfer of the IMC; and generating a transaction applicable to the client and associated with the transfer of the IMC to the client.",
	"url": null,
	"owner": "Trimble Navigation Limited",
	"publication_number": "07584353",
	"publication_date": "2009-09-01",
	"application_number": "10661047",
	"application_date": "2003-09-12",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Environment integrity assured transactions",
	"summary": "",
	"abstract": "In a networked computing environment, a server is equipped to assure the integrity of the service components of a service, including the direct service providing component and one or more supporting components as requested, and a client is equipped to request on behalf of an application in need of the service the integrity assurance. The client is further equipped to either request or accept the service, only upon receiving the integrity assurance. In one embodiment, the request for integrity assurance, and the subsequent conditional request or acceptance of the service is performed in real time.",
	"url": null,
	"owner": "Tripwire, Inc.",
	"publication_number": "07587754",
	"publication_date": "2009-09-08",
	"application_number": "10328957",
	"application_date": "2002-12-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Sales force automation and method",
	"summary": "",
	"abstract": "A salesforce automation system which integrates computerized, intelligent automated salesperson support for multiple phases of the sales process. Various subsystems may be provided to facilitate the sales process which may include pre-sales lead generation, maximize time spent with the customer, effectively manage an order, ensure customer satisfaction and retain the customer for future sales. Also provided to support the phases of the sales process are additional tools, integrated in the system. The additional tools may include self management subsystems, sales management subsystems and training subsystems.",
	"url": null,
	"owner": "Triton IP, LLC",
	"publication_number": "07516088",
	"publication_date": "2009-04-07",
	"application_number": "11929548",
	"application_date": "2007-10-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for an application crawler",
	"summary": "",
	"abstract": "A computer-implemented method is provided for searching for files on the Internet. In one embodiment, the method may provide an application crawler that assembles and dynamically instantiates all components of a web page. The instantiated web application may then be analyzed to locate desired components on the web page. This may involve finding and analyzing all clickable items in the application, driving the web application by injecting events, and extracting information from the application and writing it to a file or database.",
	"url": null,
	"owner": "Truveo, Inc.",
	"publication_number": "07584194",
	"publication_date": "2009-09-01",
	"application_number": "11286269",
	"application_date": "2005-11-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Store and forward architecture",
	"summary": "",
	"abstract": "A store and forward (S&F) architecture is provided that supports multiple applications within an extensible network to direct information of various formats to any of multiple destinations. In the presently preferred embodiment of the invention, Java applications running on a client send non-priority data to any server on the application network or, alternatively, anywhere on a global telecommunications network such as the Internet, at some time in the future. In the preferred embodiment, S&F allows a client application to send usage statistics to a database on the application network. It also enables T-commerce purchases to be made by the user, where the purchase and other relevant information is sent to a destination web server as if the purchase had taken place on the web via a full web browser on an Internet-connected PC.",
	"url": null,
	"owner": "TVWorks, LLC",
	"publication_number": "07577703",
	"publication_date": "2009-08-18",
	"application_number": "11318892",
	"application_date": "2005-12-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Resource access control",
	"summary": "",
	"abstract": "A method and apparatus for enabling multiple application programs to control a system's physical resources by way of multiple resource proxies, while still enabling exclusive control of the physical resource by one application program. Control tokens are used to limit control to one proxy. The proxy having the control token is tracked in an access control list. Java API methods that can alter the state of a physical resource are marked with an access control attribute during grinding. A resource management module intercepts API methods attempting to obtain control of the physical resource. If a proxy controlled by the application program invoking the intercepted method has control the method is allowed to use the proxy to control the physical resource.",
	"url": null,
	"owner": "TVWorks, LLC.",
	"publication_number": "07603719",
	"publication_date": "2009-10-13",
	"application_number": "11045218",
	"application_date": "2005-01-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for secure alert messaging",
	"summary": "",
	"abstract": "An alert messaging system and method to securely transmit and receive alert messages via secure connection among one or more messaging servers and at least one client user station using a token-based, one-way handshake mechanism.",
	"url": null,
	"owner": "UBS Financial Services Inc.",
	"publication_number": "07587609",
	"publication_date": "2009-09-08",
	"application_number": "11824115",
	"application_date": "2007-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Financial advisor messaging in a networked computer system",
	"summary": "",
	"abstract": "The present invention provides systems and methods for financial advisor messages in a networked computer system. A financial advisor associated with a financial services organization determines clients to receive a message, the financial advisor determines the message, and the message is transmitted over the network to be accessible by the clients. Methods are provided in which the message is required to be determined to be compliant prior to transmission to the clients. Methods are also provided in which individuals associated with the financial services organization, such as the financial advisor, are notified of a non-compliant message.",
	"url": null,
	"owner": "UBS Financial Services, Inc.",
	"publication_number": "07590579",
	"publication_date": "2009-09-15",
	"application_number": "10365323",
	"application_date": "2003-02-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Accessing data in an interlocking trees data structure using an application programming interface",
	"summary": "",
	"abstract": "A method for transmitting information in a KStore system having a KStore, an application programming interface and an application layer wherein the information is transmitted between the KStore and the application layer includes transmitting the information between the KStore and the application layer by way of the application programming interface. The KStore is constrained by way of the application programming interface with at least one constraint to provide at least one selected K path. The KStore is focused to provide a further selected K path. At least one KStore parameter is determined in accordance with the selected K path to provide at least one determined K parameter. The constraining of the KStore includes traversing the at least one selected K path.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "07499932",
	"publication_date": "2009-03-03",
	"application_number": "11258292",
	"application_date": "2005-10-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Converting physical aspects of common warehouse model to elements of relational database",
	"summary": "",
	"abstract": "A method and a system for converting physical aspects of a common warehouse model (CWM) to corresponding database management system (DBMS) items in a relational database by processing in a hierarchical manner the physical aspects and creating the corresponding DBMS items. The physical aspects comprise relational catalogs. The relational catalogs comprise relational schemas. The corresponding DBMS items comprise DBMS catalogs. The DBMS catalogs comprise DBMS schemas.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "07617223",
	"publication_date": "2009-11-10",
	"application_number": "10716287",
	"application_date": "2003-11-18",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Functional operations for accessing and/or building interlocking trees datastores to enable their use with applications software",
	"summary": "",
	"abstract": "A set of mechanisms handles communication with a Knowledge Store and its K Engine(s). The Knowledge Store (Kstore) does not need indexes or tables to support it but instead is formed by the construction of interlocking trees of pointers in nodes of the interlocking trees. The K Engine builds and is used to query a KStore by using threads that use software objects together with a K Engine to learn particlized events, thus building the KStore, and these or other software objects can be used to make queries and get answers from the KStore, usually with the help of a K Engine. Under some circumstances, information can be obtained directly from the KStore, but is generally only available through the actions of the K Engine. The mechanisms provide communications pathways for users and applications software to build and/or query the KStore. Both these processes can proceed simultaneously, and in multiple instances. There can be a plurality of engines operating on a KStore essentially simultaneously. Additionally a mechanism for providing triggers allows for automatic reporting of events, conditions and occurrences to users and applications.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "07593923",
	"publication_date": "2009-09-22",
	"application_number": "10879329",
	"application_date": "2004-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for combining extended markup language and key/value pairs into the format of an interprocess message payload",
	"summary": "",
	"abstract": "An apparatus for and method of utilizing an existing predefined messaging protocol to convey additional data in application-to-application communication. Instead of utilizing a plurality of the existing predefined messages or defining a new unique message type to convey the needed data, a single preexisting message type is used to define location and format of the data objects to be communicated. The receiving application unpacks these definitions from the single message received and accesses the defined data objects as required.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "07587719",
	"publication_date": "2009-09-08",
	"application_number": "10848902",
	"application_date": "2004-05-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Sending notifications to project members in a project management system",
	"summary": "",
	"abstract": "An embodiment of the present invention is a technique to send notification to members in a project management system. A notification list and information are created for a project. The notification list and information are stored in a repository. A notification request is received from a component in the project management system. The notification request is processed at run-time using the notification list and information.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "07565643",
	"publication_date": "2009-07-21",
	"application_number": "10636946",
	"application_date": "2003-08-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for emulating network communications between partitions of a computer system",
	"summary": "",
	"abstract": "A system and method of emulating network communications between applications executing in different partitions of a partitionable computer system is provided. A connection is established between a first partition and a second partition of a computer system, through a memory region of the computer system shared by both the first partition and the second partition. The connection emulates a network connection. A network message is transmitted from a first application in the first partition using a network application interface and intended for transmission to a second application in the second partition. The network message transmitted by the first application is transmitted to the second application via the connection established through the shared memory region.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "07571440",
	"publication_date": "2009-08-04",
	"application_number": "09923175",
	"application_date": "2001-08-06",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods of check re-presentment deterrent",
	"summary": "",
	"abstract": "A user or a device may separate a check into two or more portions prior to generating a digital image of the check for remote deposit of the check. The user or a device may separate the check by cutting or tearing the check. After separating the check into the portions, the user may generate a digital image of the portions of the check using a scanner for example. The digital image may be transmitted to an institution for deposit of the check. The institution may retrieve the images of the portions of the check and generate an image of the check based on the portions, by combining the images of the portions for example. The image of the check that may be generated based on the images of the portions may be processed for deposit.",
	"url": null,
	"owner": "United Services Automobile Association (USAA)",
	"publication_number": "07620604",
	"publication_date": "2009-11-17",
	"application_number": "12202515",
	"application_date": "2008-09-02",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Methods and systems for proofing identities using a certificate authority",
	"summary": "",
	"abstract": "A digital certificate is provided to a customer having an electronic account linked to the customer's physical address. Using the digital certificate, the customer performs electronic transactions with a third party. A proofing workstation receives a request from a third party to validate the digital certificate. The proofing workstation communicates with a proofing server that maintains a list of valid certificates and a list of revoked certificates. The proofing server sends a response to the proofing workstation, where it is received by the third party.",
	"url": null,
	"owner": "United States Postal Service",
	"publication_number": "07484088",
	"publication_date": "2009-01-27",
	"application_number": "09809325",
	"application_date": "2001-03-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for monitoring dynamic systems using n-dimensional representations of critical functions",
	"summary": "",
	"abstract": "A method, system and apparatus for the monitoring, diagnosis and evaluation of the state of a dynamic system is disclosed. This method and system provides the processing means for receiving sensed and/or simulated data, converting such data into a displayable object format and displaying such objects in a manner such that the interrelationships between the respective variables can be correlated and identified by a user. This invention provides for the rapid cognitive grasp of the overall state of a critical function with respect to a dynamic system. The system provides for displayed objects which change in real-time to show the changes of the functions of the system. It is a highly flexible system which works with a wide variety of applications, including biological systems, environmental systems, engineering systems, economic systems, mechanical systems, chemical systems and the like.",
	"url": null,
	"owner": "University of Utah Research Foundation",
	"publication_number": "07603631",
	"publication_date": "2009-10-13",
	"application_number": "10840835",
	"application_date": "2004-05-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic management of storage access control",
	"summary": "",
	"abstract": "Methods and systems are provided for defining and creating an automatic file security policy and a semi-automatic method of managing file access control in organizations with multiple diverse access control models and multiple diverse file server protocols. The system monitors access to storage elements within the network. The recorded data traffic is analyzed to assess simultaneous data access groupings and user groupings, which reflect the actual organizational structure. The learned structure is then transformed into a dynamic file security policy, which is constantly adapted to organizational changes over time. The system provides a decision assistance interface for interactive management of the file access control and for tracking abnormal user behavior.",
	"url": null,
	"owner": "Varonis Inc.",
	"publication_number": "07606801",
	"publication_date": "2009-10-20",
	"application_number": "11258256",
	"application_date": "2005-10-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Automatic detection of abnormal data access activities",
	"summary": "",
	"abstract": "Methods and systems are provided for evaluating atypical user data access activities within the scope of an automatically generated file security policy in organizations with multiple diverse access control models and multiple diverse file server protocols. The system monitors access to storage elements within the network. The recorded data traffic is analyzed to assess simultaneous data access groupings and user groupings, which reflect the actual organizational structure. The learned structure is then transformed into a dynamic file security policy, which is constantly adapted to organizational changes over time. The system provides a decision assistance interface for tracking abnormal user behavior.",
	"url": null,
	"owner": "Varonis Systems, Inc.",
	"publication_number": "07555482",
	"publication_date": "2009-06-30",
	"application_number": "11635736",
	"application_date": "2006-12-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for online communication between a check sorter and a check processing system",
	"summary": "",
	"abstract": "A system for handling checks is provided that includes a sorter operable to retrieve MICR data from a plurality of checks. An emulator is coupled to the sorter. The emulator is operable to access the MICR data, to generate a process buffer based on the MICR data, and to generate a plurality of feature instructions for each check based on the process buffer. A communication engine is coupled between the emulator and a check processing system. The communication engine is operable to communicate between the emulator and the check processing system in real-time. The check processing system is operable to receive the process buffer from the emulator through the communication engine. The emulator is further operable to communicate the feature instructions to the sorter. The sorter is further operable to process the checks based on the feature instructions.",
	"url": null,
	"owner": "VECTORsgi, Inc.",
	"publication_number": "07555156",
	"publication_date": "2009-06-30",
	"application_number": "11149776",
	"application_date": "2005-06-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for embedding check data in a check image",
	"summary": "",
	"abstract": "An image capture system for retaining check processing data comprises a camera operable to generate an electronic check image of a physical check, with the electronic check image operable to generate an image replacement document. The system includes a scanner operable to process the check image to generate check processing data and one or more processors operable to embed at least a portion of the check processing data in the electronic check image. The embedded check processing data is typically operable to be subsequently identified.",
	"url": null,
	"owner": "VECTORsgi, Inc.",
	"publication_number": "07548641",
	"publication_date": "2009-06-16",
	"application_number": "11115015",
	"application_date": "2005-04-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for analysing communications streams",
	"summary": "",
	"abstract": "Methods are provided, a representative one of which involves: recording information associated with a communication; providing a graphical user interface, the graphical user interface being configured such that, responsive to a user input designating a portion of the communication, information recorded and corresponding to that portion of the communication is presented to the user; and displaying, via the graphical user interface, graphical indications of events occurring during the communication.",
	"url": null,
	"owner": "Verint Americas Inc.",
	"publication_number": "07574000",
	"publication_date": "2009-08-11",
	"application_number": "11565943",
	"application_date": "2006-12-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for analysing communications streams",
	"summary": "",
	"abstract": "Systems and methods for analyzing communications of a contact center are provided. A representative system incorporates a graphical user interface operative to display information corresponding to a communication of the contact center, the graphical user interface being configured to display the information such that different portions of the communication are visually distinguished from each other.",
	"url": null,
	"owner": "Verint Americas Inc.",
	"publication_number": "07587041",
	"publication_date": "2009-09-08",
	"application_number": "11565948",
	"application_date": "2006-12-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for maintaining information for use in the configuration of a client",
	"summary": "",
	"abstract": "A method and apparatus for storing and maintaining information for the operation of a client, locally to the client. This information is updated (or, initially, retrieved) as necessary and appropriate, by accessing corresponding information stored locally to a server.",
	"url": null,
	"owner": "Veritas Operating Corporation",
	"publication_number": "07596611",
	"publication_date": "2009-09-29",
	"application_number": "10113394",
	"application_date": "2002-04-01",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for providing alarm reporting in a managed network services environment",
	"summary": "",
	"abstract": "An approach for alarm reporting is provided. An alarm from a first alarm feed and an alarm from a second alarm feed are received. A merged alarm is generated to provide a consistent view of an event corresponding to the alarm from the first alarm feed and the alarm from the second alarm feed. The merged alarm is stored for retrieval by a reporting system.",
	"url": null,
	"owner": "Verizon Business Global LLC",
	"publication_number": "07525422",
	"publication_date": "2009-04-28",
	"application_number": "11404503",
	"application_date": "2006-04-14",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for remotely configuring mobile telemetry devices",
	"summary": "",
	"abstract": "An approach is provided for configuring telemetry devices over a wireless network is disclosed. A client (e.g., web browser application) communicates with a fleet and asset management system to obtain information about a plurality of objects (vehicle or asset). In response to the user input, the client transmits the user input to the fleet and asset management, wherein the fleet and asset management generates a configuration message based on the user input for transmission over the wireless network to the one telemetry device for configuring an input/output (I/O) port of the telemetry device. The I/O port is coupled to a corresponding one of the objects. The telemetry device sets parameters relating to the I/O port according to the configuration message.",
	"url": null,
	"owner": "Verizon Business Global LLC",
	"publication_number": "07594038",
	"publication_date": "2009-09-22",
	"application_number": "10758769",
	"application_date": "2004-01-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Network access system including a programmable access device having distributed service control",
	"summary": "",
	"abstract": "A distributed network access system in accordance with the present invention includes at least an external processor and a programmable access device. The programmable access device has a message interface coupled to the external processor and first and second network interfaces through which packets are communicated with a network. The programmable access device includes a packet header filter and a forwarding table that is utilized to route packets communicated between the first and second network interfaces. In response to receipt of a series of packets, the packet header filter in the programmable access device identifies messages in the series of messages upon which policy-based services are to be implemented and passes identified messages via the message interface to the external processor for processing. In response to receipt of a message, the external processor invokes service control on the message and may also invoke policy control on the message.",
	"url": null,
	"owner": "Verizon Business Global LLC",
	"publication_number": "07499458",
	"publication_date": "2009-03-03",
	"application_number": "11026216",
	"application_date": "2004-12-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for facilitating communications involving hearing-impaired parties",
	"summary": "",
	"abstract": "A method for providing communication services for the hearing-impaired may include receiving a telephone call from a hearing-impaired party or a hearing party. The method may also include forwarding the telephone call to a communication assistant and establishing a communication link, such an Internet protocol link, that links the hearing-impaired party, the communication assistant and the hearing party.",
	"url": null,
	"owner": "Verizon Business Global LLC",
	"publication_number": "07573985",
	"publication_date": "2009-08-11",
	"application_number": "11156491",
	"application_date": "2005-06-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for service-enablement gateway and its service portal",
	"summary": "",
	"abstract": "A method and system for dynamic service support is presented. A portal-page service and an interface bundle are installed at the gateway. A customer service at the gateway, based on the interface bundle, is installed at the gateway. The portal-page service searches for the customer service and generates a user interface for the customer service based on the customer service. The portal-page service generates a portal-page based on the user interface and the portal page service.",
	"url": null,
	"owner": "Verizon Corporate Services Group Inc.",
	"publication_number": "07574660",
	"publication_date": "2009-08-11",
	"application_number": "11102360",
	"application_date": "2005-04-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for providing filtered message delivery",
	"summary": "",
	"abstract": "A system () that delivers messages receives a message intended for the receiving party. The system () determines whether the message should be delivered to the receiving party and converts the message to an audible message when the message should be delivered to the receiving party. The system () then initiates a telephony call to the receiving party and delivers the audible message to the receiving party during the telephony call.",
	"url": null,
	"owner": "Verizon Laboratories, Inc.",
	"publication_number": "07499529",
	"publication_date": "2009-03-03",
	"application_number": "10016551",
	"application_date": "2001-12-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enterprise test data management system utilizing hierarchical test data models and related methods",
	"summary": "",
	"abstract": "Test data model and test data structure creation improvements are disclosed for enterprise test data management systems in the test, measurement and automation environment. A hierarchical test data model for a plurality of test systems includes hierarchical data objects configured to store test data related information. In addition, one or more data objects within the test data model are linked such that data entered into one object can be used by another object or can be automatically propagated to linked objects. And default data object properties are defined such that each new data object includes the default properties. Still further, a graphical user interface (GUI) can be provided through which information can be input to the database where the GUI includes a first frame showing a structure for the hierarchical test data model and a second frame automatically showing one or more data input fields related to an object selected within the first frame. Related systems and methods are also disclosed.",
	"url": null,
	"owner": "VI Technology, Inc.",
	"publication_number": "07539591",
	"publication_date": "2009-05-26",
	"application_number": "11112083",
	"application_date": "2005-04-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Adaptive cache sizing based on monitoring of regenerated and replaced cache entries",
	"summary": "",
	"abstract": "A runtime code manipulation system is provided that supports code transformations on a program while it executes. The runtime code manipulation system uses code caching technology to provide efficient and comprehensive manipulation of an application running on an operating system and hardware. The code cache includes a system for automatically keeping the code cache at an appropriate size for the current working set of an application running.",
	"url": null,
	"owner": "VMware, Inc.",
	"publication_number": "07478218",
	"publication_date": "2009-01-13",
	"application_number": "11356599",
	"application_date": "2006-02-17",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for vending machine customer account management",
	"summary": "",
	"abstract": "Some embodiments are associated with providing, establishing, registering, administering, and/or managing vending machine subscription accounts. In some embodiments, third parties may administer and/or manage subscription-vending accounts associated with customers.",
	"url": null,
	"owner": "Walker Digital, LLC",
	"publication_number": "07627496",
	"publication_date": "2009-12-01",
	"application_number": "11398378",
	"application_date": "2006-04-05",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Information storage and retrieval system for storing and retrieving the visual form of information from an application in a database",
	"summary": "",
	"abstract": "The visual form of data from a computer program is received and stored in a database. The visual form of the data may be received, for example, in response to a print operation by the computer program or by some other operation such as a cut and paste sequence of operations or by sending the data to another application. The visual form of the data may be stored as a vector image that permits scalability. The visual form of the data may be stored with other identifying information or tags in the database to facilitate searching of the database. The data in the database may be encoded in a manner that ensures data integrity and that permits detection of when data has been compromised. In one embodiment, a service layer application is provided to control access to the database by performing encoding and decoding of the data in the database. The service layer may have an application programming interface that permits many applications to have access to the database. Another application may be provided for accessing the visual form of the data from the database and for providing this data to another computer program. Such an application permits a user to create compound documents from data in the database using the other computer program.",
	"url": null,
	"owner": "Waters Technologies Corporation",
	"publication_number": "07587413",
	"publication_date": "2009-09-08",
	"application_number": "11584384",
	"application_date": "2006-10-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System, method and apparatus for use in monitoring or controlling internet access",
	"summary": "",
	"abstract": "An apparatus method and system are described for categorizing Uniform Resource Locators (URLs) when accessing the Internet from a client. A request message is generated to request categorization of a specified URL, and a category is provided in a reply message. The specified URL and the category are added to a category cache. In a second or subsequent instance of a URL request referring to the specified URL, the category is determined from the category cache. This reduces communication traffic in a network such as the Internet.",
	"url": null,
	"owner": "Websense UK Limited",
	"publication_number": "07590716",
	"publication_date": "2009-09-15",
	"application_number": "10952626",
	"application_date": "2004-09-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Platform independent randomness accumulator for network applications",
	"summary": "",
	"abstract": "A random number generator includes one or more pseudorandom data sources that generate pseudorandom data, a randomness accumulation facility that receives pseudorandom data from the one or more pseudorandom data sources, a storage facility that stores a random value generated by the randomness accumulation facility, and an application programming interface (u201cAPIu201d), operating independently from the operation of the randomness accumulation facility, that retrieves, upon request by a software application, the random value currently stored in the storage facility and provides a random number to the software application. The pseudorandom data is hashed with a previously-stored random value and a first counter value and may be encrypted before storing in the storage facility. Likewise, the API hashes the current random value with a second counter value before outputting the random number thus generated, decrypting the current value first if necessary.",
	"url": null,
	"owner": "Wells Fargo Bank, N.A.",
	"publication_number": "07546327",
	"publication_date": "2009-06-09",
	"application_number": "11018806",
	"application_date": "2004-12-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for facilitating electronic acquisition and maintenance of goods and services via the internet",
	"summary": "",
	"abstract": "Internet acquisition of goods and services from multiple service providers is facilitated in a uniform, automated manner. Online service account facilitation systems and methods are contemplated that allow for intuitive, uniformly-structured representations of service offerings; straightforward, yet flexible, definition of service product markets; advantageous status designations for market offerings; flexible start date restriction rules; context sensitive information request forms, dynamic price determination on interactive comparison forms; flexible restriction rules for selection combinations of plans, packages, and features; creation of customized data elements; a powerfully advantageous ordering process; a discontinuation process; an inter-dependent order resolution feature; a hierarchical customization scheme; and/or centralized two-way communication between customers and service providers. In one embodiment, tenants of business or residential properties, may connect and disconnect utilities and/or purchase other goods and services electronically via the Internet from various service providers when moving into the property.",
	"url": null,
	"owner": "WhiteFence, Inc.",
	"publication_number": "07516103",
	"publication_date": "2009-04-07",
	"application_number": "09803545",
	"application_date": "2001-03-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Component-based adaptation system and method",
	"summary": "",
	"abstract": "A component-based adaptation system is provided in which the operation of an application or the data being used by the application is adapted according to an application-specific or a user-specific policy. Following a request for a document by an application, the requested document is retrieved and converted into an application-independent format. The data of the document is then supplied to the application according to a user-specific or application-specific policy. The application of the policy may result in a lower fidelity version or a subset of the data of the requested document being supplied to the application. The policy may also govern the updating of the data supplied to the application. The data supplied to the application may be updated following the occurrence of a tracked event in the application or according to a background policy governing the supply of updated data without reference to the user's operation of the application. All of the adaptations are implemented without modifying the source code of the application and without modifying the document as it is permanently stored on a data server.",
	"url": null,
	"owner": "William Marsh Rice University",
	"publication_number": "07533117",
	"publication_date": "2009-05-12",
	"application_number": "10914611",
	"application_date": "2004-08-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System for remote data acquisition based on e-mail message communication through public and private networks",
	"summary": "",
	"abstract": "The present invention relates to a method for transferring generic data acquired at a remote location to a central database based on e-mail communication, comprising encapsulating the acquired data in an electronic mail message, sending the electronic mail through a network (public or private) to a central database server, extracting the data from the electronic mail message by the central database server, and storing the extracted data in the central database. The acquired data is communicated directly to the database server by providing an architecture for Internet communication software for embedded platforms, the architecture being based on a network of software multiplexers and demultiplexers, controlled by an integrated protocol engine.",
	"url": null,
	"owner": "Windmill Microsystems Holding BV",
	"publication_number": "07624148",
	"publication_date": "2009-11-24",
	"application_number": "10785420",
	"application_date": "2004-02-23",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Universal file access architecture for a heterogeneous computing environment",
	"summary": "",
	"abstract": "An architecture and system are described that provide a unified file access service within in a managed computing environment composed of diverse networks, computing devices, and storage devices. The service provides mechanisms for remotely accessing the file systems of any managed computer or disk snapshot, independently of the computer's current state (powered on, suspended or powered off), its location within the environment, its hardware type (virtual vs. physical), its operating system type, and its file system formats. The system isolates centralized FPAs from the details of clients, proxies and storage elements by providing a service that decomposes offloaded file system access into two steps. A FPA or a requester acting on behalf of the FPA first expresses the disk set or the computer containing the file systems it wishes to access, along with requirements and preferences about the access method. The service figures out an efficient data path satisfying the FPA's needs, and then automatically configures a set of storage and computing resources to provide the data path. The service then replies with information about the resources and instructions for using them. The FPA then accesses the requested file systems using the returned information.",
	"url": null,
	"owner": "WMware, Inc.",
	"publication_number": "07606868",
	"publication_date": "2009-10-20",
	"application_number": "11395082",
	"application_date": "2006-03-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for semantic processing engine",
	"summary": "",
	"abstract": "A method for evaluating contents of a message is provided. The method initiates with characterizing a message segment. Then, the message is scanned to define tokens associated with the message segment. Next, the tokens are parsed to define substructures. Then, the rules associated with the tokens are determined, wherein the rules define actions. At the same time determining the session or meta session associated with the communication. Then, the actions associated with the message are executed. Next, the message is queued to be sent out. A method for providing content based security, a computer readable media, an adapter card and a network device configured to provide content based security and an intrusion protection system are provided.",
	"url": null,
	"owner": "Xambala, Inc.",
	"publication_number": "07548848",
	"publication_date": "2009-06-16",
	"application_number": "10753846",
	"application_date": "2004-01-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Semantic processing engine",
	"summary": "",
	"abstract": "A processor configured to identify message contents is provided. The processor includes a message characterization block configured to characterize a message through analysis of header information associated with the message. A semantic processing block configured to translate the message into tokens associated with segments of the message is included. The semantic processing block identifies rules associated with each of the tokens and the semantic processing block is configured to apply the identified rules to the message. A queuing block configured to queue the message to be transmitted from the processor is included. A method for providing content based security, a computer readable media, an adapter card and a network device configured to provide content based security and an intrusion protection system are provided.",
	"url": null,
	"owner": "Xambala, inc.",
	"publication_number": "07546234",
	"publication_date": "2009-06-09",
	"application_number": "10753727",
	"application_date": "2004-01-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "RF payment via a mobile device",
	"summary": "",
	"abstract": "A process for providing an RF module configured to convert a nontraditional transaction device for traditional transaction completion is disclosed. The RF module is placed in physical and logical communication with a microprocessor of a nontraditional transaction device for providing user account information to the microprocessor and for receiving data from a RFID reader, kiosk or personal computer. The microprocessor is configured to activate operation of the RF module prior to transaction processing. The RF module may also receive secondary identification information, such as, a PIN, voice recognition data or biometric data for secondary end user authentication. The RF module may also transmit user account data for transaction processing using a USB interface of the nontraditional transaction device.",
	"url": null,
	"owner": "Xatra Fund MX, LLC",
	"publication_number": "07493288",
	"publication_date": "2009-02-17",
	"application_number": "10711965",
	"application_date": "2004-10-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Generic application architecture suitable for firewall traversal",
	"summary": "",
	"abstract": "Communication systems and methods transfer information between a client device and a vendor device through a firewall between the client device and the vendor device by using a communications protocol that will normally allows pass through the firewall and/or by e embedding the information in a file format that will normally pass through the firewall. The information can be transmitted using the hypertext transfer protocol, and/or is embedded in an HTTP document or in an e-mail message. If the client device is on a secure side of the firewall and the vendor device needs to initiate communication with the client device, the vendor device can send an e-mail message to the client device asking the client device to initiate the communication session. Because the client device has initiated the communication, the firewall should allow the response to the client device's request to pass through from the vendor device to the client device.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07480936",
	"publication_date": "2009-01-20",
	"application_number": "10248381",
	"application_date": "2003-01-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Partial print provider",
	"summary": "",
	"abstract": "A partial print provider in the form of a Dynamically Linked Library (DLL) that implements a portion of a commercial spooler Application Programming Interface (API). The print provider translates between printer and job properties under the commercial spooler to and from printer and job properties under a proprietary spooler. This permits a third party proprietary print spooler to interface with the commercial print spooler, allowing greater control and management of print jobs by network clients than is available under the commercial spooler. The partial print provider allows the proprietary spooler to leverage off of the commercial print system's print services, protocols and network technologies, obviating the need to replace all commercial spooler and print services with custom code and reducing costs substantially.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07511837",
	"publication_date": "2009-03-31",
	"application_number": "09726233",
	"application_date": "2000-11-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Server based image processing for client display of documents",
	"summary": "",
	"abstract": "Methods and systems that allow the viewing of arbitrary documents on a client display by up-loading all necessary image processing steps to the server, thereby eliminating any software downloads to, or installation on, the client device.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07620892",
	"publication_date": "2009-11-17",
	"application_number": "10901241",
	"application_date": "2004-07-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for adaptive dynamic range adjustment for images",
	"summary": "",
	"abstract": "A method is described to match an original binary image with the dynamic range of a desired target document. The original binary image is restored first to contone and a histogram of the contone image is processed to generate a Tone Reproduction Curve (TRC) for the contone image with improved dynamic range. The histogram processing includes determining a histogram of the contone image, and generating the TRC based on matching the determined histogram with a target histogram profile. This helps in matching outputs from legacy devices to a desired quality.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07492486",
	"publication_date": "2009-02-17",
	"application_number": "11275078",
	"application_date": "2005-12-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for adjusting spot color inks",
	"summary": "",
	"abstract": "Systems and methods are provided for printing a spot ink. The spot ink may be prepared before the time of printing. The spot ink may be adjusted by half-toning or supplemental CMYK colors at the time of printing.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07639393",
	"publication_date": "2009-12-29",
	"application_number": "11168921",
	"application_date": "2005-06-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for associating color profiles with a scanned input image using spatial attributes",
	"summary": "",
	"abstract": "Methods and systems used to associate color calibration profiles with scanned images based on identifying the marking process used for an image on a substrate using spatial characteristics and/or color of the image. Image types which are classified and identified include continuous tone images and halftone images. Among halftone images separately identified are inkjet images, xerographic images and lithographic images. Locally adaptive image threshold techniques may be used to determine the spatial characteristics of the image.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07474783",
	"publication_date": "2009-01-06",
	"application_number": "10604201",
	"application_date": "2003-06-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for embedding messages in look-up tables",
	"summary": "",
	"abstract": "System and methods provide a message, generated based on a message authentication code (MAC), embedded in a look-up table associated with an image. The embedding of the message does not affect the image. The message may be used to authenticate the image.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07558961",
	"publication_date": "2009-07-07",
	"application_number": "11110813",
	"application_date": "2005-04-21",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for processing image data prior to compression",
	"summary": "",
	"abstract": "Systems and methods provide data processing before data compression. The data processing includes contrast enhancement and/or custom color mapping.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07539341",
	"publication_date": "2009-05-26",
	"application_number": "10901333",
	"application_date": "2004-07-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for providing documents based on document identifiers",
	"summary": "",
	"abstract": "Systems and methods provide documents based on collected document identifiers. A document production center receives a document identifier along with delivery address information, identifies a digital document based on the document identifier, makes an copy or prints a hard copy of the document, and delivers the copied or printed document to a delivery address based on the delivery address information.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07555530",
	"publication_date": "2009-06-30",
	"application_number": "10707575",
	"application_date": "2003-12-22",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for reducing cross process direction registration errors of a printhead using a linear array sensor",
	"summary": "",
	"abstract": "Systems and methods are provided for determining registration errors in the cross process direction of a printer. A first straight line is obtained by detecting line centers of a first plurality of dashes in a test pattern. A second straight line is obtained by detecting a line center positions of a second plurality of dashes in the test pattern. A difference between the off-set of the first straight line and the off-set of the second straight line is used in determining registration errors.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07543911",
	"publication_date": "2009-06-09",
	"application_number": "11976992",
	"application_date": "2007-10-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for reducing edge effects",
	"summary": "",
	"abstract": "Systems, methods, and programs for reducing edge effects, the systems, methods, and programs include inputting an image mask, the image mask defining the location of a boundary to receive a coating , modifying an edge of the image mask to reduced the thickness of the coating at the modified edge; creating a printing plate base on the modified image mask; and using the printing plate to print the coating on a substrate.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07511855",
	"publication_date": "2009-03-31",
	"application_number": "11297294",
	"application_date": "2005-12-09",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for reducing process direction registration errors of a printhead using a linear array sensor",
	"summary": "",
	"abstract": "Systems and methods are provided for detecting process direction registration errors in a printer. The errors are detected by analyzing a metric of a dash minimum response obtained from a test pattern. The test pattern contains dashes. At least one dash is shifted in the process direction in relation to another dash.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07552986",
	"publication_date": "2009-06-30",
	"application_number": "10998632",
	"application_date": "2004-11-30",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods of embedding gamut mapping information into printed images",
	"summary": "",
	"abstract": "Systems and methods preserve the information lost in gamut-mapping during marking (e.g., printing) such that the lost information survives the marking and recapture (e.g. scanning) process. Generally, an encoding method may include gamut-mapping and image for a particular device; determining a residual image; and embedding the information needed to recover the residual image within the pixels of the gamut-mapped image. Generally, a decoding method may include extracting the embedded information from the image; and using the residual image to restore the gamut-mapped image to the original image.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07511860",
	"publication_date": "2009-03-31",
	"application_number": "10988555",
	"application_date": "2004-11-16",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Wireless sensors for system monitoring and diagnostics",
	"summary": "",
	"abstract": "A plurality of wireless sensors can be placed within a large system in various locations to monitor critical elements of that system. Each wireless sensor can include sensor elements usable to monitor one or more parameters of an element of the system and a wireless signal transmitter, such as, for example, a speaker or an antenna. Each sensor can transmit one or more unique identifying signals to a signal-receiving device, which can be processed by a signal processor. The signal processor can determine each received signal, the sensor corresponding to that identified signal, and the time the wireless signal was generated. Based on this information, the wireless signals can be diagnostically compared against expected values for the system being monitored and evaluated. If a discrepancy is detected, then the components and/or subsystems within the system that are implicated in the discrepant wireless signals can be evaluated for possible errors.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07548171",
	"publication_date": "2009-06-16",
	"application_number": "10248134",
	"application_date": "2002-12-19",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Framework for cycle accurate simulation",
	"summary": "",
	"abstract": "A system for performing cycle accurate simulation of a circuit design can include a plurality of cycle accurate models, wherein each cycle accurate model is a software object representation of a hardware function, and a scheduler configured to execute each cycle accurate model at clock cycle boundaries determined during a simulation session.",
	"url": null,
	"owner": "Xilinx, Inc.",
	"publication_number": "07606694",
	"publication_date": "2009-10-20",
	"application_number": "11389348",
	"application_date": "2006-03-24",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "High bandwidth reconfigurable on-chip network for reconfigurable systems",
	"summary": "",
	"abstract": "A crossbar switch is implemented in a reconfigurable circuit, such as a FPGA, instantiated with a number of modules, the crossbar switch providing communication links between the modules. The modules and crossbar switch can be easily updated in a partial reconfiguration process changing only portions of modules and the crossbar switch while other portions remain active. The crossbar switch uses individual wiring to independently connect module outputs and inputs so that asynchronous communications can be used. The crossbar switch can be implemented in different embodiments including a Clos crossbar switch, and a crossbar switch connecting each module output only to a corresponding module input, allowing for a reduction in the amount of FPGA resources required to create the crossbar switches.",
	"url": null,
	"owner": "Xilinx, Inc.",
	"publication_number": "07482836",
	"publication_date": "2009-01-27",
	"application_number": "11789958",
	"application_date": "2007-04-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and apparatus for application-specific programmable memory architecture and interconnection network on a chip",
	"summary": "",
	"abstract": "Programmable architecture for implementing a message processing system using an integrated circuit is described. In an example, specification data is received that includes attributes of the memory system. A logical description of the memory system is generated in response to the specification data. The logical description defines a memory component and a memory-interconnection component. A physical description of the memory system is generated in response to the logical description. The physical description includes memory circuitry associated with the integrated circuit defined by the memory component. The memory circuitry includes an interconnection topology defined by the memory interconnection component.",
	"url": null,
	"owner": "Xilinx, Inc.",
	"publication_number": "07574680",
	"publication_date": "2009-08-11",
	"application_number": "11699097",
	"application_date": "2007-01-29",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Method and system for integrating cores in FPGA-based system-on-chip (SoC)",
	"summary": "",
	"abstract": "The invention provides an interface that can facilitate integration of user specific proprietary cores and commercially available cores during customization of an FPGA-based SoC. A selected hardware or software system component used for customizing the FPGA-based SoC can be configured using parameters that can be automatically propagated and used to configure peer system components. During configuration of the peer system components, other parameters used to configure those peer system components can also be propagated and used to configure other system components during customization of the FPGA-based SoC.",
	"url": null,
	"owner": "XILINX, Inc.",
	"publication_number": "07509614",
	"publication_date": "2009-03-24",
	"application_number": "11100980",
	"application_date": "2005-04-07",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Plug-in component-based dependency management for partitions within an incremental implementation flow",
	"summary": "",
	"abstract": "A method of managing an incremental implementation flow (incremental flow) for a circuit design can include storing dependency management data for the incremental flow for the circuit design and, from a first application, invoking at least one plug-in software component configured to access the dependency management data for the circuit design. The method further can include identifying partitions of the circuit design that must be run during the incremental flow using the plug-in software component.",
	"url": null,
	"owner": "XILINX, Inc.",
	"publication_number": "07590951",
	"publication_date": "2009-09-15",
	"application_number": "11500525",
	"application_date": "2006-08-08",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Shared memory interface in a programmable logic device using partial reconfiguration",
	"summary": "",
	"abstract": "Partial reconfiguration of a programmable logic device is used in combination with a shared memory block for communicating between two blocks of an electronic circuit design. In one embodiment, a shared memory is implemented on RAM resources of a field programmable gate array (FPGA), and a first design block implemented in resources of the FPGA is coupled to the shared memory. A second design block is also coupled to the shared memory. In response to a write request by the second design block, a process determines the RAM resources of the FPGA that correspond to the shared memory address in the write request. A configuration bitstream is generated to include configuration data for partial reconfiguration of the FPGA with the data from the write request at the appropriate RAM resources. The FPGA is partially reconfigured with the configuration bitstream via a configuration port of the FPGA.",
	"url": null,
	"owner": "Xilinx, Inc.",
	"publication_number": "07546572",
	"publication_date": "2009-06-09",
	"application_number": "11230879",
	"application_date": "2005-09-20",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Processing structured data",
	"summary": "",
	"abstract": "The present invention provides a fast and efficient way of processing structured data by utilizing an intermediate file to store the structural information. The structured data may be processed into a Binary mask Format (BMF) file which may serve as a starting point for post-processing. A tree structure built on top of the BMF file may be constructed very quickly, and also takes up less space than a DOM tree. Additionally, BMF records may reside entirely in the memory and contain structural information, allowing SAX-like sequential data access.",
	"url": null,
	"owner": "Ximpleware, Inc.",
	"publication_number": "07620652",
	"publication_date": "2009-11-17",
	"application_number": "11502908",
	"application_date": "2006-08-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Remote selection and installation of auxiliary content",
	"summary": "",
	"abstract": "A system, method, and apparatus are directed to managing auxiliary content through an enhanced content management system (ECMS), for such as a blog, over a network. Auxiliary content may be selected from a networked device over the network for integration with another site, such as the blog. Such auxiliary content may include graphics, advertisements including sponsored advertisements, selectable audio clips, or the like. When the auxiliary content is selected, and a identifier of the other site is provided, data that may include a script, code, or the like, and that enables access to the auxiliary content is provided to the ECMS using the identifier. The ECMS may then use the data to position the auxiliary content within the other site. Once the position is determined, automatic incorporation of the auxiliary content within a webpage may also be performed using the ECMS.",
	"url": null,
	"owner": "Yahoo! Inc.",
	"publication_number": "07636766",
	"publication_date": "2009-12-22",
	"application_number": "11274245",
	"application_date": "2005-11-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "System and method for improving online search engine results",
	"summary": "",
	"abstract": "System and method for improving online search engine results. In one embodiment, a search system queries one or more servers of a destination site to obtain detailed and relevant information. In one embodiment, this query is in the form of an application programming interface call. Based on the content received in response to the aforementioned queries, a plurality of content pages may then be used to build one or more search databases against which user searches may be made during some future time period.",
	"url": null,
	"owner": "Yahoo! Inc.",
	"publication_number": "07599966",
	"publication_date": "2009-10-06",
	"application_number": "11046501",
	"application_date": "2005-01-28",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Systems and methods for indexing content for fast and scalable retrieval",
	"summary": "",
	"abstract": "Systems and methods for query processing and indexing of documents in connection with a content store in a computing system are provided. In various embodiments, an indexing model is provided that is optimized for fast, efficient and scalable retrieval of documents satisfying a query, including the mixed use of forward and inverted indexing representations, including algorithms for achieving a balance between the two representations. When processing queries, fast and efficient generation of reverse chronologically ordered posting lists is enabled for efficient execution of logical operators on query result sets. A term expand index is also provided wherein the overall terms included in the term expand index are decomposed into a plurality of lexicon files, which are combined when convenient for fast, scalable efficiency when performing queries of the content in the content store.",
	"url": null,
	"owner": "Yahoo! Inc.",
	"publication_number": "07620624",
	"publication_date": "2009-11-17",
	"application_number": "10966265",
	"application_date": "2004-10-15",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Tester for determining the validity of a feature in a remote device",
	"summary": "",
	"abstract": "One or more test classes implement an object oriented interface that specifies an execution method and a results method called from a user interface running on the mobile terminal or an emulator. The user interface enables a user to select one or more tests to run, view results, and upload results to a server. For each test, the user interface calls the execution method to initiate the test and obtain a success or failure indication. The user interface also calls the results method to obtain data on a capability and/or to obtain validation that the capability is complete and reliable. Tests that require specific hardware are activated or deactivated, depending on whether the mobile terminal includes the required hardware. Test include a memory size test, a memory integrity test, a socket connection test, an HTTP test, a camera test, an image rendering speed test, a message test, and the like.",
	"url": null,
	"owner": "Yahoo! Inc.",
	"publication_number": "07630708",
	"publication_date": "2009-12-08",
	"application_number": "11077921",
	"application_date": "2005-03-11",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Music processing apparatus and management method therefor",
	"summary": "",
	"abstract": "As a music equipment is connected to a music processing apparatus, necessary communication ports corresponding to the connected music equipment are automatically set in the processing apparatus. The thus-set communication ports are each assigned the name of the corresponding equipment so that the equipment and the communication ports can be associated with each other. Once the equipment is disconnected from the apparatus, the disconnected equipment is converted into a dummy state and displayed in a predetermined dummy display style. When a project file has been read which includes track data, identification information of a currently-set external equipment and parameters of the external equipment, the detected external equipment is associated with any one of external equipments which had been set for use at the time of storage of the project file. By transferring parameters, stored in a memory, to the external equipment that could be associated, parameter synchronization can be effected.",
	"url": null,
	"owner": "Yamaha Corporation",
	"publication_number": "07531737",
	"publication_date": "2009-05-12",
	"application_number": "11729149",
	"application_date": "2007-03-27",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Enhanced environment visualization using holographic stereograms",
	"summary": "",
	"abstract": "Hologram production techniques can combine source data representing realistic information describing an environment with source data providing representational information describing a feature of the environment and/or some object interacting with the environment. The combined data is used to produce holograms, and particularly holographic stereograms including features that enhance the visualization of the environment depicted in hologram. A haptic interface can be used in conjunction with such holograms to further aid use of the hologram, and to provide an interface to secondary information provided by a computer and related to the images depicted in the hologram.",
	"url": null,
	"owner": "Zebra Imaging, Inc.",
	"publication_number": "07605961",
	"publication_date": "2009-10-20",
	"application_number": "11717610",
	"application_date": "2007-03-13",
	"tags": null,
	"slug": null,
	"match_type": "description"
},
{
	"name": "Technique for accessing a database of serializable objects using field values corresponding to fields of an object marked with the same index value",
	"summary": "",
	"abstract": "A converter may be used to convert a serializable object to other file formats. A serializable objects database can be used to store these serializable objects. The serializable object database may be accessed by passing a field value, corresponding to a selected field of the serializable object, to the database. The selected field of the serializable object is marked with an index value. The database is queried using the field value to determine whether any record stored in the database includes the field value in a matching field indicated by the index value. If the query determines that the serializable objects database includes at least one record with the field value in the matching field indicated by the index value, then a plurality of field values are returned to populate a plurality of fields of the serializable object.",
	"url": null,
	"owner": "Zeugma Systems Inc.",
	"publication_number": "07620526",
	"publication_date": "2009-11-17",
	"application_number": "11586769",
	"application_date": "2006-10-25",
	"tags": null,
	"slug": null,
	"match_type": "description"
}]